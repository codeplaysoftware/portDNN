/*
 * Copyright Codeplay Software Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// clang-format off
#define SNN_DATA_TYPE  @DATA_TYPE@
#define SNN_INDEX_TYPE @INDEX_TYPE@
#define SNN_OP_TYPE    @OP_TYPE@
#define SNN_DIRECTION  @DIRECTION@
#define SNN_WIDTH      @VECTOR_WIDTH@
#define SNN_BLOCK_SIZE @BLOCK_SIZE@
// clang-format on

#include "sycldnn/pointwise/direction.h"
#include "sycldnn/pointwise/operators.h"

#include "src/pointwise/queue_pointwise_forward_impl.h"

namespace sycldnn {
namespace pointwise {
namespace internal {

#ifdef SNN_ENABLE_USM
template SNNStatus
queue_pointwise<SNN_DATA_TYPE, SNN_INDEX_TYPE, SNN_OP_TYPE, SNN_DIRECTION,
                SNN_WIDTH, SNN_BLOCK_SIZE, USMMemObject>(
    USMMemObject<SNN_DATA_TYPE const>& in_mem,
    USMMemObject<SNN_DATA_TYPE>& out_mem, SNN_INDEX_TYPE const n_items,
    cl::sycl::queue& queue, const std::vector<cl::sycl::event>& events);
#endif  // SNN_ENABLE_USM

template SNNStatus
queue_pointwise<SNN_DATA_TYPE, SNN_INDEX_TYPE, SNN_OP_TYPE, SNN_DIRECTION,
                SNN_WIDTH, SNN_BLOCK_SIZE, BufferMemObject>(
    BufferMemObject<SNN_DATA_TYPE const>& in_mem,
    BufferMemObject<SNN_DATA_TYPE>& out_mem, SNN_INDEX_TYPE const n_items,
    cl::sycl::queue& queue, const std::vector<cl::sycl::event>& events);
}  // namespace internal
}  // namespace pointwise
}  // namespace sycldnn
