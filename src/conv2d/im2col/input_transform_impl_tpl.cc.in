/*
 * Copyright Codeplay Software Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// clang-format off
#define SNN_DATA_TYPE    ${DATA_TYPE}
#define SNN_INDEX_TYPE   ${INDEX_TYPE}
#define SNN_VECTOR_WIDTH ${VECTOR_WIDTH}
#define SNN_CTYPE        ${CONV_TYPE}
// clang-format on

#include "sycldnn/conv2d/conv_type.h"

#include "src/conv2d/im2col/queue_input_transform_impl.h"

namespace sycldnn {
namespace conv2d {
namespace internal {
namespace im2col {
template SNNStatus queue_input_transform<
    SNN_DATA_TYPE, SNN_INDEX_TYPE, SNN_VECTOR_WIDTH, SNN_CTYPE, layout::NHWC>(
    BufferMemObject<SNN_DATA_TYPE const>& input,
    BufferMemObject<SNN_DATA_TYPE>& output, Conv2DParams const& params,
    int tile_size, cl::sycl::queue& queue,
    const std::vector<cl::sycl::event>& events);

template SNNStatus queue_input_transform<
    SNN_DATA_TYPE, SNN_INDEX_TYPE, SNN_VECTOR_WIDTH, SNN_CTYPE, layout::NCHW>(
    BufferMemObject<SNN_DATA_TYPE const>& input,
    BufferMemObject<SNN_DATA_TYPE>& output, Conv2DParams const& params,
    int tile_size, cl::sycl::queue& queue,
    const std::vector<cl::sycl::event>& events);

#ifdef SNN_ENABLE_USM
template SNNStatus queue_input_transform<
    SNN_DATA_TYPE, SNN_INDEX_TYPE, SNN_VECTOR_WIDTH, SNN_CTYPE, layout::NHWC>(
    USMMemObject<SNN_DATA_TYPE const>& input,
    USMMemObject<SNN_DATA_TYPE>& output, Conv2DParams const& params,
    int tile_size, cl::sycl::queue& queue,
    const std::vector<cl::sycl::event>& events);

template SNNStatus queue_input_transform<
    SNN_DATA_TYPE, SNN_INDEX_TYPE, SNN_VECTOR_WIDTH, SNN_CTYPE, layout::NCHW>(
    USMMemObject<SNN_DATA_TYPE const>& input,
    USMMemObject<SNN_DATA_TYPE>& output, Conv2DParams const& params,
    int tile_size, cl::sycl::queue& queue,
    const std::vector<cl::sycl::event>& events);
#endif

}  // namespace im2col
}  // namespace internal
}  // namespace conv2d
}  // namespace sycldnn
