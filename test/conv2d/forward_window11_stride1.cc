/*
 * Copyright Codeplay Software Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use these files except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// DO NOT MODIFY BY HAND
// This file was automatically generated by generate_conv2d_tests.py.
// Results calculated using Tensorflow v1.13.2.

#include <gtest/gtest.h>

#include "sycldnn/padding_mode.h"

#include "test/types/cartesian_product.h"
#include "test/types/kernel_data_types.h"
#include "test/types/nested_pairs_to_triple.h"
#include "test/types/test_backend_types.h"
#include "test/types/to_gtest_types.h"

#include "test/conv2d/selector_list.h"
#include "test/conv2d/window_stride_fixture.h"

#include <array>
#include <vector>

using DataTypeList = sycldnn::types::KernelDataTypes;
using Selectors = sycldnn::types::SelectorList;
using Backends = sycldnn::types::AllBackendTypes;

using SNNTypePairs =
    sycldnn::types::CartesianProduct<Selectors, DataTypeList>::type;
using BackendTypePairs =
    sycldnn::types::CartesianProduct<SNNTypePairs, Backends>::type;
using TestTriples = sycldnn::types::NestedPairsToTriple<BackendTypePairs>::type;

using GTestTypeTriples = sycldnn::types::ToGTestTypes<TestTriples>::type;


template <typename Pair>
using ForwardWindow11Stride1 = WindowStrideTest<Pair, 11, 1>;
TYPED_TEST_SUITE(ForwardWindow11Stride1, GTestTypeTriples);
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x12x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2095., 2356., 2652., 2993., 3597., 4266., 4619., 4523., 4236., 3812., 3433., 2817., 3215., 3484., 3796., 3872., 4169., 4552., 4655., 4302., 4028., 3696., 3393., 3126., 3500., 4224., 4928., 5428., 6084., 6568., 6428., 5548., 4752., 3968., 3444., 2964., 3246., 3812., 4560., 5401., 6342., 7374., 7798., 7229., 6548., 5684., 4790., 3939., 3885., 4300., 4852., 5291., 6039., 6894., 7313., 7049., 6500., 5852., 5387., 4715., 4817., 5564., 6380., 6966., 7551., 7996., 7985., 7144., 6348., 5528., 4951., 4436., 4741., 5728., 6716., 7422., 8315., 9064., 9085., 8252., 7276., 6088., 5195., 4368., 3871., 4592., 5500., 6329., 7261., 8286., 8663., 8023., 7288., 6388., 5477., 4629., 3676., 4124., 4696., 5143., 5680., 6298., 6640., 6359., 6040., 5612., 5132., 4449., 3572., 4208., 4896., 5484., 5900., 6136., 6052., 5316., 4592., 3808., 3388., 3020., 2831., 3384., 4180., 4892., 5673., 6260., 6287., 5782., 5092., 4144., 3457., 2814., 2277., 2688., 3268., 3595., 3983., 4426., 4701., 4677., 4520., 4156., 3607., 3103.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x12x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {7996., 7985., 9064., 9085.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x12x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2328., 2606., 2660., 2984., 3024., 3400., 3312., 3730., 3608., 4074., 3980., 4500., 4140., 4678., 3964., 4454., 3572., 4008., 3152., 3528., 2860., 3202., 2420., 2722., 2899., 3246., 3360., 3768., 3852., 4328., 4281., 4800., 4681., 5250., 5118., 5744., 5231., 5870., 4807., 5388., 4260., 4776., 3524., 3968., 3077., 3474., 2773., 3116., 3072., 3464., 3728., 4192., 4352., 4896., 4784., 5384., 5376., 6040., 5936., 6672., 6000., 6760., 5504., 6200., 4976., 5600., 4352., 4896., 3920., 4408., 3456., 3880., 3263., 3676., 3884., 4376., 4668., 5248., 5133., 5778., 5709., 6428., 6458., 7260., 6743., 7580., 6231., 7002., 5568., 6264., 4884., 5496., 4277., 4828., 3717., 4198., 3968., 4442., 4460., 5016., 5072., 5720., 5512., 6230., 6208., 7006., 7028., 7916., 7484., 8402., 7004., 7842., 6028., 6776., 5136., 5784., 4668., 5254., 4068., 4582., 4243., 4786., 5080., 5720., 5964., 6712., 6777., 7596., 7481., 8382., 8006., 9000., 8071., 9090., 7375., 8304., 6604., 7432., 5764., 6480., 5213., 5854., 4621., 5176., 4515., 5082., 5572., 6240., 6348., 7128., 6757., 7612., 7433., 8374., 8114., 9152., 8243., 9306., 7759., 8728., 7080., 7944., 6148., 6896., 5353., 6022., 4589., 5168., 3892., 4398., 4692., 5296., 5648., 6360., 6196., 6978., 6860., 7722., 7700., 8652., 7816., 8798., 6968., 7870., 6212., 7024., 5488., 6200., 4816., 5450., 4232., 4778., 3523., 3960., 4144., 4664., 4860., 5472., 5381., 6062., 5929., 6688., 6566., 7412., 6959., 7840., 6451., 7262., 5812., 6544., 5236., 5880., 4613., 5192., 3849., 4354., 3200., 3592., 3760., 4224., 4352., 4896., 4880., 5480., 5376., 6040., 5904., 6640., 6096., 6856., 5632., 6328., 5072., 5696., 4352., 4896., 3952., 4440., 3456., 3880., 2827., 3198., 3420., 3856., 3980., 4488., 4333., 4888., 4833., 5442., 5290., 5960., 5251., 5934., 4847., 5468., 4400., 4952., 3844., 4320., 3465., 3890., 3037., 3404., 2420., 2730., 3004., 3376., 3728., 4168., 3908., 4390., 4156., 4686., 4540., 5124., 4560., 5162., 4272., 4826., 3964., 4464., 3568., 4008., 3032., 3422., 2496., 2830.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x12x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {8006., 9000., 8071., 9090., 8114., 9152., 8243., 9306.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x12x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 1978.,  2256.,  2534.,  2812.,  2244.,  2568.,  2892.,  3216.,  2600.,  2976.,  3352.,  3728.,  2894.,  3312.,  3730.,  4148.,  3150.,  3616.,  4082.,  4548.,  3504.,  4024.,  4544.,  5064.,  3790.,  4328.,  4866.,  5404.,  3646.,  4136.,  4626.,  5116.,  3124.,  3560.,  3996.,  4432.,  2600.,  2976.,  3352.,  3728.,  2370.,  2712.,  3054.,  3396.,  2090.,  2392.,  2694.,  2996.,  2491.,  2838.,  3185.,  3532.,  2888.,  3296.,  3704.,  4112.,  3292.,  3768.,  4244.,  4720.,  3723.,  4242.,  4761.,  5280.,  4025.,  4594.,  5163.,  5732.,  4330.,  4956.,  5582.,  6208.,  4415.,  5054.,  5693.,  6332.,  4201.,  4782.,  5363.,  5944.,  3812.,  4328.,  4844.,  5360.,  3116.,  3560.,  4004.,  4448.,  2781.,  3178.,  3575.,  3972.,  2531.,  2874.,  3217.,  3560.,  2616.,  3008.,  3400.,  3792.,  3280.,  3744.,  4208.,  4672.,  3808.,  4352.,  4896.,  5440.,  4168.,  4768.,  5368.,  5968.,  4776.,  5440.,  6104.,  6768.,  5248.,  5984.,  6720.,  7456.,  5160.,  5920.,  6680.,  7440.,  4744.,  5440.,  6136.,  6832.,  4336.,  4960.,  5584.,  6208.,  3808.,  4352.,  4896.,  5440.,  3448.,  3936.,  4424.,  4912.,  3096.,  3520.,  3944.,  4368.,  2753.,  3166.,  3579.,  3992.,  3276.,  3768.,  4260.,  4752.,  4052.,  4632.,  5212.,  5792.,  4405.,  5050.,  5695.,  6340.,  4891.,  5610.,  6329.,  7048.,  5634.,  6436.,  7238.,  8040.,  5881.,  6718.,  7555.,  8392.,  5339.,  6110.,  6881.,  7652.,  4776.,  5472.,  6168.,  6864.,  4260.,  4872.,  5484.,  6096.,  3699.,  4250.,  4801.,  5352.,  3321.,  3802.,  4283.,  4764.,  3414.,  3888.,  4362.,  4836.,  3884.,  4440.,  4996.,  5552.,  4504.,  5152.,  5800.,  6448.,  4978.,  5696.,  6414.,  7132.,  5410.,  6208.,  7006.,  7804.,  6000.,  6888.,  7776.,  8664.,  6498.,  7416.,  8334.,  9252.,  6146.,  6984.,  7822.,  8660.,  5292.,  6040.,  6788.,  7536.,  4504.,  5152.,  5800.,  6448.,  4094.,  4680.,  5266.,  5852.,  3510.,  4024.,  4538.,  5052.,  3927.,  4470.,  5013.,  5556.,  4560.,  5200.,  5840.,  6480.,  5196.,  5944.,  6692.,  7440.,  5903.,  6722.,  7541.,  8360.,  6413.,  7314.,  8215.,  9116.,  6922.,  7916.,  8910.,  9904.,  7091.,  8110.,  9129., 10148.,  6701.,  7630.,  8559.,  9488.,  6076.,  6904.,  7732.,  8560.,  5020.,  5736.,  6452.,  7168.,  4537.,  5178.,  5819.,  6460.,  4079.,  4634.,  5189.,  5744.,  3743.,  4310.,  4877.,  5444.,  4684.,  5352.,  6020.,  6688.,  5420.,  6200.,  6980.,  7760.,  5891.,  6746.,  7601.,  8456.,  6725.,  7666.,  8607.,  9548.,  7350.,  8388.,  9426., 10464.,  7135.,  8198.,  9261., 10324.,  6597.,  7566.,  8535.,  9504.,  6032.,  6896.,  7760.,  8624.,  5244.,  5992.,  6740.,  7488.,  4661.,  5330.,  5999.,  6668.,  4247.,  4826.,  5405.,  5984.,  3358.,  3864.,  4370.,  4876.,  3980.,  4584.,  5188.,  5792.,  4952.,  5664.,  6376.,  7088.,  5322.,  6104.,  6886.,  7668.,  5834.,  6696.,  7558.,  8420.,  6688.,  7640.,  8592.,  9544.,  6794.,  7776.,  8758.,  9740.,  6058.,  6960.,  7862.,  8764.,  5596.,  6408.,  7220.,  8032.,  5016.,  5728.,  6440.,  7152.,  4150.,  4784.,  5418.,  6052.,  3550.,  4096.,  4642.,  5188.,  3185.,  3622.,  4059.,  4496.,  3640.,  4160.,  4680.,  5200.,  4276.,  4888.,  5500.,  6112.,  4737.,  5418.,  6099.,  6780.,  5179.,  5938.,  6697.,  7456.,  5726.,  6572.,  7418.,  8264.,  6221.,  7102.,  7983.,  8864.,  5723.,  6534.,  7345.,  8156.,  5036.,  5768.,  6500.,  7232.,  4548.,  5192.,  5836.,  6480.,  4023.,  4602.,  5181.,  5760.,  3305.,  3810.,  4315.,  4820.,  2872.,  3264.,  3656.,  4048.,  3344.,  3808.,  4272.,  4736.,  3808.,  4352.,  4896.,  5440.,  4360.,  4960.,  5560.,  6160.,  4776.,  5440.,  6104.,  6768.,  5184.,  5920.,  6656.,  7392.,  5352.,  6112.,  6872.,  7632.,  5000.,  5696.,  6392.,  7088.,  4528.,  5152.,  5776.,  6400.,  3808.,  4352.,  4896.,  5440.,  3512.,  4000.,  4488.,  4976.,  3096.,  3520.,  3944.,  4368.,  2435.,  2806.,  3177.,  3548.,  3044.,  3480.,  3916.,  4352.,  3516.,  4024.,  4532.,  5040.,  3807.,  4362.,  4917.,  5472.,  4337.,  4946.,  5555.,  6164.,  4726.,  5396.,  6066.,  6736.,  4555.,  5238.,  5921.,  6604.,  4225.,  4846.,  5467.,  6088.,  3864.,  4416.,  4968.,  5520.,  3340.,  3816.,  4292.,  4768.,  2937.,  3362.,  3787.,  4212.,  2699.,  3066.,  3433.,  3800.,  2050.,  2360.,  2670.,  2980.,  2436.,  2808.,  3180.,  3552.,  3048.,  3488.,  3928.,  4368.,  3270.,  3752.,  4234.,  4716.,  3574.,  4104.,  4634.,  5164.,  4096.,  4680.,  5264.,  5848.,  4118.,  4720.,  5322.,  5924.,  3686.,  4240.,  4794.,  5348.,  3460.,  3960.,  4460.,  4960.,  3112.,  3552.,  3992.,  4432.,  2522.,  2912.,  3302.,  3692.,  2130.,  2464.,  2798.,  3132.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x12x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6922.,  7916.,  8910.,  9904.,  7091.,  8110.,  9129., 10148.,  7350.,  8388.,  9426., 10464.,  7135.,  8198.,  9261., 10324.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x12x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 5096.,  6304.,  7280.,  7560.,  8072.,  8576.,  9188.,  9024.,  8308.,  7280.,  6644.,  5776.,  5582.,  6519.,  7784.,  8681.,  9666., 11003., 11785., 10862.,  9691.,  8008.,  6973.,  6290.,  6416.,  7776.,  9280.,  9968., 11056., 12288., 13104., 12144., 10784.,  9280.,  8592.,  7504.,  7166.,  8651., 10552., 11597., 12386., 13695., 14537., 13510., 12131., 10392.,  9517.,  8554.,  8216.,  9688., 11408., 12032., 13496., 15288., 16596., 15984., 14084., 11664., 10580.,  9200.,  8286., 10215., 12680., 14217., 15650., 17227., 17841., 16206., 14387., 12392., 11333., 10274.,  9262., 11071., 12680., 13249., 14706., 16531., 17913., 17246., 15403., 13160., 11805., 10162.,  7536.,  9212., 11408., 12716., 14320., 15948., 16536., 14840., 13168., 11280., 10280.,  9224.,  7462.,  9159., 10552., 11185., 12266., 13531., 14421., 13406., 12103., 10776.,  9817.,  8466.,  6416.,  7648.,  9280., 10096., 11056., 12416., 13232., 12144., 10912.,  9280.,  8464.,  7504.,  5454.,  6551.,  7784.,  8649.,  9794., 10971., 11657., 10798.,  9499.,  8008.,  7277.,  6594.,  4832.,  5900.,  7280.,  7772.,  8224.,  8908.,  9088.,  8472.,  8088.,  7152.,  6560.,  5704.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x12x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17227., 17841., 16531., 17913.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x12x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4428.,  4992.,  5370.,  6048.,  6448.,  7264.,  7054.,  7936.,  7908.,  8880.,  8530.,  9616.,  9106., 10264.,  8948., 10016.,  7902.,  8856.,  6448.,  7264.,  5946.,  6696.,  5468.,  6128.,  5178.,  5820.,  6127.,  6910.,  7512.,  8464.,  8277.,  9298.,  8934., 10052., 10011., 11254., 10467., 11794.,  9934., 11164.,  9189., 10294.,  7704.,  8656.,  6679.,  7546.,  6082.,  6836.,  6064.,  6816.,  7416.,  8320.,  8768.,  9856.,  9352., 10528., 10448., 11744., 11544., 12992., 12312., 13856., 11472., 12896., 10120., 11392.,  8768.,  9856.,  8184.,  9184.,  7088.,  7968.,  6654.,  7484.,  7973.,  8982.,  9832., 11056., 10871., 12186., 11570., 13012., 12953., 14558., 13889., 15602., 13050., 14636., 11591., 13014.,  9768., 10992.,  8877.,  9994.,  8166.,  9140.,  7460.,  8400.,  9078., 10208., 10832., 12192., 11730., 13200., 13132., 14752., 14302., 16112., 15262., 17192., 14684., 16464., 12962., 14552., 10832., 12192., 10038., 11288.,  9012., 10112.,  8210.,  9228.,  9707., 10942., 11896., 13392., 13081., 14690., 14158., 15924., 15911., 17878., 16751., 18850., 15670., 17612., 14377., 16118., 12088., 13584., 10643., 12010.,  9626., 10820.,  8338.,  9388., 10123., 11374., 11896., 13392., 12921., 14546., 14542., 16340., 16007., 18022., 16847., 18994., 15926., 17900., 14089., 15846., 12088., 13584., 11059., 12442.,  9882., 11108.,  7620.,  8560.,  8894., 10024., 10832., 12192., 11818., 13288., 13036., 14656., 14758., 16568., 15430., 17360., 14092., 15872., 13162., 14752., 11088., 12448.,  9694., 10944.,  8548.,  9648.,  6942.,  7804.,  8461.,  9486.,  9832., 11056., 10543., 11874., 11858., 13332., 13249., 14902., 13897., 15658., 12714., 14332., 11247., 12686., 10024., 11248.,  9205., 10338.,  7958.,  8964.,  6064.,  6816.,  7160.,  8064.,  8768.,  9856.,  9608., 10784., 10448., 11744., 11800., 13248., 12568., 14112., 11472., 12896., 10376., 11648.,  8768.,  9856.,  7928.,  8928.,  7088.,  7968.,  5306.,  5980.,  6415.,  7214.,  7512.,  8464.,  8245.,  9282.,  9318., 10468., 10235., 11526., 10691., 12066., 10190., 11452.,  9029., 10150.,  7704.,  8656.,  6967.,  7850.,  6338.,  7124.,  4588.,  5152.,  5314.,  5992.,  6448.,  7264.,  7014.,  7896.,  7812.,  8784.,  8858.,  9944.,  9146., 10304.,  8356.,  9424.,  7974.,  8928.,  6704.,  7520.,  5730.,  6480.,  5004.,  5664.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x12x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {15911., 17878., 16751., 18850., 16007., 18022., 16847., 18994.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x12x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4020.,  4584.,  5148.,  5712.,  5022.,  5700.,  6378.,  7056.,  5808.,  6624.,  7440.,  8256.,  6090.,  6972.,  7854.,  8736.,  6924.,  7896.,  8868.,  9840.,  7542.,  8628.,  9714., 10800.,  8046.,  9204., 10362., 11520.,  7596.,  8664.,  9732., 10800.,  6594.,  7548.,  8502.,  9456.,  5808.,  6624.,  7440.,  8256.,  5526.,  6276.,  7026.,  7776.,  4692.,  5352.,  6012.,  6672.,  4530.,  5172.,  5814.,  6456.,  5327.,  6110.,  6893.,  7676.,  6712.,  7664.,  8616.,  9568.,  7517.,  8538.,  9559., 10580.,  7886.,  9004., 10122., 11240.,  9083., 10326., 11569., 12812.,  9527., 10854., 12181., 13508.,  8830., 10060., 11290., 12520.,  7929.,  9034., 10139., 11244.,  6840.,  7792.,  8744.,  9696.,  5835.,  6702.,  7569.,  8436.,  5410.,  6164.,  6918.,  7672.,  5360.,  6112.,  6864.,  7616.,  6696.,  7600.,  8504.,  9408.,  7744.,  8832.,  9920., 11008.,  8120.,  9296., 10472., 11648.,  9232., 10528., 11824., 13120., 10056., 11504., 12952., 14400., 10728., 12272., 13816., 15360., 10128., 11552., 12976., 14400.,  8792., 10064., 11336., 12608.,  7744.,  8832.,  9920., 11008.,  7368.,  8368.,  9368., 10368.,  6256.,  7136.,  8016.,  8896.,  5870.,  6700.,  7530.,  8360.,  6873.,  7882.,  8891.,  9900.,  8648.,  9872., 11096., 12320.,  9675., 10990., 12305., 13620., 10194., 11636., 13078., 14520., 11725., 13330., 14935., 16540., 12337., 14050., 15763., 17476., 11362., 12948., 14534., 16120., 10255., 11678., 13101., 14524.,  8776., 10000., 11224., 12448.,  7549.,  8666.,  9783., 10900.,  6974.,  7948.,  8922.,  9896.,  6700.,  7640.,  8580.,  9520.,  8370.,  9500., 10630., 11760.,  9680., 11040., 12400., 13760., 10150., 11620., 13090., 14560., 11540., 13160., 14780., 16400., 12570., 14380., 16190., 18000., 13410., 15340., 17270., 19200., 12660., 14440., 16220., 18000., 10990., 12580., 14170., 15760.,  9680., 11040., 12400., 13760.,  9210., 10460., 11710., 12960.,  7820.,  8920., 10020., 11120.,  7210.,  8228.,  9246., 10264.,  8419.,  9654., 10889., 12124., 10584., 12080., 13576., 15072., 11833., 13442., 15051., 16660., 12502., 14268., 16034., 17800., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13894., 15836., 17778., 19720., 12581., 14322., 16063., 17804., 10712., 12208., 13704., 15200.,  9263., 10630., 11997., 13364.,  8538.,  9732., 10926., 12120.,  7434.,  8484.,  9534., 10584.,  9235., 10486., 11737., 12988., 10584., 12080., 13576., 15072., 11241., 12866., 14491., 16116., 12726., 14524., 16322., 18120., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14118., 16092., 18066., 20040., 11989., 13746., 15503., 17260., 10712., 12208., 13704., 15200., 10079., 11462., 12845., 14228.,  8762.,  9988., 11214., 12440.,  6700.,  7640.,  8580.,  9520.,  7730.,  8860.,  9990., 11120.,  9680., 11040., 12400., 13760., 10790., 12260., 13730., 15200., 11540., 13160., 14780., 16400., 13210., 15020., 16830., 18640., 14050., 15980., 17910., 19840., 12660., 14440., 16220., 18000., 11630., 13220., 14810., 16400.,  9680., 11040., 12400., 13760.,  8570.,  9820., 11070., 12320.,  7820.,  8920., 10020., 11120.,  6094.,  6956.,  7818.,  8680.,  7561.,  8586.,  9611., 10636.,  8648.,  9872., 11096., 12320.,  9211., 10542., 11873., 13204., 10418., 11892., 13366., 14840., 11485., 13138., 14791., 16444., 12097., 13858., 15619., 17380., 11586., 13204., 14822., 16440.,  9791., 11230., 12669., 14108.,  8776., 10000., 11224., 12448.,  8237.,  9370., 10503., 11636.,  7198.,  8204.,  9210., 10216.,  5360.,  6112.,  6864.,  7616.,  6184.,  7088.,  7992.,  8896.,  7744.,  8832.,  9920., 11008.,  8632.,  9808., 10984., 12160.,  9232., 10528., 11824., 13120., 10568., 12016., 13464., 14912., 11240., 12784., 14328., 15872., 10128., 11552., 12976., 14400.,  9304., 10576., 11848., 13120.,  7744.,  8832.,  9920., 11008.,  6856.,  7856.,  8856.,  9856.,  6256.,  7136.,  8016.,  8896.,  4754.,  5428.,  6102.,  6776.,  5887.,  6686.,  7485.,  8284.,  6712.,  7664.,  8616.,  9568.,  7181.,  8218.,  9255., 10292.,  8110.,  9260., 10410., 11560.,  8971., 10262., 11553., 12844.,  9415., 10790., 12165., 13540.,  9054., 10316., 11578., 12840.,  7593.,  8714.,  9835., 10956.,  6840.,  7792.,  8744.,  9696.,  6395.,  7278.,  8161.,  9044.,  5634.,  6420.,  7206.,  7992.,  4020.,  4584.,  5148.,  5712.,  4638.,  5316.,  5994.,  6672.,  5808.,  6624.,  7440.,  8256.,  6474.,  7356.,  8238.,  9120.,  6924.,  7896.,  8868.,  9840.,  7926.,  9012., 10098., 11184.,  8430.,  9588., 10746., 11904.,  7596.,  8664.,  9732., 10800.,  6978.,  7932.,  8886.,  9840.,  5808.,  6624.,  7440.,  8256.,  5142.,  5892.,  6642.,  7392.,  4692.,  5352.,  6012.,  6672.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x12x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x12x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x12x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {10150., 10590., 10150., 10590.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x12x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x12x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x12x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x12x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x13x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2320., 2630., 2976., 3528., 4104., 4746., 5163., 5148., 4784., 4266., 3584., 2872., 2408., 2876., 3079., 3336., 3768., 4368., 5049., 5056., 5079., 4818., 4744., 4304., 3889., 3298., 3152., 3568., 4256., 4824., 5440., 5888., 5860., 5784., 5216., 4672., 4080., 3544., 3168., 4034., 4360., 4912., 5409., 6098., 6890., 6994., 6986., 6388., 5691., 5000., 4244., 3480., 4504., 5078., 5840., 6428., 7088., 7602., 7429., 7336., 6920., 6290., 5728., 4988., 4336., 4440., 5393., 6232., 7282., 8020., 8867., 8712., 8557., 7542., 6702., 5728., 4967., 4382., 4539., 5176., 5908., 6724., 7869., 8612., 8681., 8654., 8025., 7186., 6260., 5162., 4319., 4272., 5043., 5856., 6621., 7120., 7711., 7704., 7841., 7292., 6819., 6048., 5229., 4484., 3369., 3964., 4796., 5696., 6495., 7120., 7142., 7036., 6535., 5892., 5244., 4664., 4145., 2960., 3340., 3904., 4660., 5232., 5868., 6040., 6324., 5936., 5436., 4704., 4052., 3456., 2847., 3372., 4036., 4304., 4633., 5016., 4963., 5022., 4781., 4466., 3956., 3594., 3275., 2304., 2789., 3360., 3963., 4368., 4825., 4540., 4447., 4052., 3629., 3056., 2707., 2396.};
  const std::array<int, 4> in_shape = {{ 1, 12, 13, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x13x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {8867., 8712., 8557., 8612., 8681., 8654.};
  const std::array<int, 4> in_shape = {{ 1, 12, 13, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x13x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2336., 2624., 2719., 3052., 3136., 3520., 3495., 3936., 3832., 4320., 4247., 4788., 4535., 5094., 4487., 5048., 4244., 4752., 3747., 4212., 3184., 3600., 2695., 3056., 2500., 2816., 2783., 3112., 3043., 3422., 3356., 3792., 3836., 4336., 4357., 4912., 5177., 5794., 5098., 5728., 5067., 5694., 4567., 5140., 4288., 4816., 3748., 4224., 3345., 3762., 2901., 3268., 3120., 3520., 3580., 4032., 4320., 4832., 4684., 5264., 5152., 5792., 5628., 6336., 5676., 6392., 5644., 6352., 5328., 5968., 4716., 5296., 4192., 4704., 3564., 4016., 3104., 3504., 3887., 4356., 4408., 4944., 4892., 5504., 5433., 6114., 5901., 6644., 6614., 7428., 6547., 7364., 6528., 7332., 5843., 6568., 5145., 5798., 4612., 5184., 4214., 4712., 3457., 3888., 4072., 4592., 4693., 5292., 5488., 6176., 6133., 6904., 6960., 7808., 7469., 8404., 7541., 8474., 7277., 8192., 6692., 7520., 5865., 6612., 5280., 5936., 4557., 5128., 3972., 4464., 4247., 4800., 5249., 5890., 5868., 6608., 6642., 7476., 7341., 8264., 8183., 9206., 8232., 9264., 8297., 9322., 7527., 8460., 6798., 7644., 5876., 6624., 5087., 5742., 4405., 4972., 4643., 5206., 5206., 5856., 5852., 6600., 6447., 7288., 7481., 8410., 8100., 9128., 8101., 9122., 7910., 8924., 7415., 8338., 6703., 7540., 6100., 6840., 5116., 5764., 4445., 5006., 3888., 4400., 4931., 5526., 5744., 6432., 6547., 7322., 6808., 7664., 7355., 8302., 7247., 8192., 7427., 8370., 6724., 7592., 6279., 7062., 5472., 6160., 4787., 5386., 4100., 4616., 3555., 3986., 4023., 4536., 4700., 5304., 5392., 6080., 6081., 6846., 6733., 7584., 7030., 7884., 6815., 7672., 6195., 6990., 5588., 6312., 5140., 5784., 4517., 5088., 3913., 4402., 2832., 3200., 3332., 3768., 4000., 4512., 4740., 5320., 5264., 5920., 5940., 6680., 5892., 6640., 6068., 6824., 5648., 6352., 5252., 5896., 4512., 5088., 3972., 4488., 3472., 3920., 2635., 2958., 3068., 3448., 3628., 4072., 3853., 4352., 4321., 4882., 4890., 5520., 4963., 5590., 4988., 5628., 4759., 5354., 4325., 4868., 3828., 4312., 3458., 3892., 3149., 3526., 2328., 2624., 2657., 3002., 3056., 3456., 3465., 3910., 3808., 4304., 4457., 5010., 4157., 4696., 4225., 4766., 3972., 4472., 3797., 4250., 3328., 3728., 2913., 3270., 2324., 2632.};
  const std::array<int, 4> in_shape = {{ 1, 12, 13, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x13x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {8183., 9206., 8232., 9264., 8297., 9322., 8100., 9128., 8101., 9122., 7910., 8924.};
  const std::array<int, 4> in_shape = {{ 1, 12, 13, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x13x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2000.,  2288.,  2576.,  2864.,  2241.,  2574.,  2907.,  3240.,  2624.,  3008.,  3392.,  3776.,  2933.,  3374.,  3815.,  4256.,  3352.,  3840.,  4328.,  4816.,  3681.,  4222.,  4763.,  5304.,  3967.,  4526.,  5085.,  5644.,  3853.,  4414.,  4975.,  5536.,  3740.,  4248.,  4756.,  5264.,  3221.,  3686.,  4151.,  4616.,  2816.,  3232.,  3648.,  4064.,  2437.,  2798.,  3159.,  3520.,  2316.,  2632.,  2948.,  3264.,  2245.,  2574.,  2903.,  3232.,  2843.,  3222.,  3601.,  3980.,  3044.,  3480.,  3916.,  4352.,  3396.,  3896.,  4396.,  4896.,  3711.,  4266.,  4821.,  5376.,  4361.,  4978.,  5595.,  6212.,  4318.,  4948.,  5578.,  6208.,  4387.,  5014.,  5641.,  6268.,  3985.,  4558.,  5131.,  5704.,  3888.,  4416.,  4944.,  5472.,  3276.,  3752.,  4228.,  4704.,  2817.,  3234.,  3651.,  4068.,  2507.,  2874.,  3241.,  3608.,  2832.,  3232.,  3632.,  4032.,  3156.,  3608.,  4060.,  4512.,  3776.,  4288.,  4800.,  5312.,  4020.,  4600.,  5180.,  5760.,  4608.,  5248.,  5888.,  6528.,  4948.,  5656.,  6364.,  7072.,  5100.,  5816.,  6532.,  7248.,  4852.,  5560.,  6268.,  6976.,  4576.,  5216.,  5856.,  6496.,  4084.,  4664.,  5244.,  5824.,  3776.,  4288.,  4800.,  5312.,  3124.,  3576.,  4028.,  4480.,  2800.,  3200.,  3600.,  4000.,  3177.,  3646.,  4115.,  4584.,  3736.,  4272.,  4808.,  5344.,  4212.,  4824.,  5436.,  6048.,  4937.,  5618.,  6299.,  6980.,  5123.,  5866.,  6609.,  7352.,  5774.,  6588.,  7402.,  8216.,  5605.,  6422.,  7239.,  8056.,  5804.,  6608.,  7412.,  8216.,  5025.,  5750.,  6475.,  7200.,  4565.,  5218.,  5871.,  6524.,  3948.,  4520.,  5092.,  5664.,  3738.,  4236.,  4734.,  5232.,  3075.,  3506.,  3937.,  4368.,  3640.,  4160.,  4680.,  5200.,  4019.,  4618.,  5217.,  5816.,  4720.,  5408.,  6096.,  6784.,  5239.,  6010.,  6781.,  7552.,  6016.,  6864.,  7712.,  8560.,  6387.,  7322.,  8257.,  9192.,  6661.,  7594.,  8527.,  9460.,  6279.,  7194.,  8109.,  9024.,  5900.,  6728.,  7556.,  8384.,  5095.,  5842.,  6589.,  7336.,  4592.,  5248.,  5904.,  6560.,  3951.,  4522.,  5093.,  5664.,  3596.,  4088.,  4580.,  5072.,  3765.,  4318.,  4871.,  5424.,  4561.,  5202.,  5843.,  6484.,  5076.,  5816.,  6556.,  7296.,  5762.,  6596.,  7430.,  8264.,  6239.,  7162.,  8085.,  9008.,  7183.,  8206.,  9229., 10252.,  7080.,  8112.,  9144., 10176.,  7281.,  8306.,  9331., 10356.,  6489.,  7422.,  8355.,  9288.,  6046.,  6892.,  7738.,  8584.,  5084.,  5832.,  6580.,  7328.,  4495.,  5150.,  5805.,  6460.,  3891.,  4458.,  5025.,  5592.,  4083.,  4646.,  5209.,  5772.,  4546.,  5196.,  5846.,  6496.,  5356.,  6104.,  6852.,  7600.,  5669.,  6510.,  7351.,  8192.,  6593.,  7522.,  8451.,  9380.,  7076.,  8104.,  9132., 10160.,  7149.,  8170.,  9191., 10212.,  6838.,  7852.,  8866.,  9880.,  6611.,  7534.,  8457.,  9380.,  5913.,  6750.,  7587.,  8424.,  5348.,  6088.,  6828.,  7568.,  4336.,  4984.,  5632.,  6280.,  3977.,  4538.,  5099.,  5660.,  3408.,  3920.,  4432.,  4944.,  4163.,  4758.,  5353.,  5948.,  4848.,  5536.,  6224.,  6912.,  5631.,  6406.,  7181.,  7956.,  5832.,  6688.,  7544.,  8400.,  6707.,  7654.,  8601.,  9548.,  6397.,  7342.,  8287.,  9232.,  6663.,  7606.,  8549.,  9492.,  5860.,  6728.,  7596.,  8464.,  5599.,  6382.,  7165.,  7948.,  4816.,  5504.,  6192.,  6880.,  4271.,  4870.,  5469.,  6068.,  3476.,  3992.,  4508.,  5024.,  2983.,  3414.,  3845.,  4276.,  3373.,  3886.,  4399.,  4912.,  4284.,  4888.,  5492.,  6096.,  4848.,  5536.,  6224.,  6912.,  5413.,  6178.,  6943.,  7708.,  5767.,  6618.,  7469.,  8320.,  6102.,  6956.,  7810.,  8664.,  5925.,  6782.,  7639.,  8496.,  5483.,  6278.,  7073.,  7868.,  4820.,  5544.,  6268.,  6992.,  4612.,  5256.,  5900.,  6544.,  3999.,  4570.,  5141.,  5712.,  3449.,  3938.,  4427.,  4916.,  2544.,  2912.,  3280.,  3648.,  2996.,  3432.,  3868.,  4304.,  3392.,  3904.,  4416.,  4928.,  4068.,  4648.,  5228.,  5808.,  4560.,  5216.,  5872.,  6528.,  5220.,  5960.,  6700.,  7440.,  5180.,  5928.,  6676.,  7424.,  5332.,  6088.,  6844.,  7600.,  4896.,  5600.,  6304.,  7008.,  4516.,  5160.,  5804.,  6448.,  3840.,  4416.,  4992.,  5568.,  3556.,  4072.,  4588.,  5104.,  3104.,  3552.,  4000.,  4448.,  2355.,  2678.,  3001.,  3324.,  2684.,  3064.,  3444.,  3824.,  3132.,  3576.,  4020.,  4464.,  3255.,  3754.,  4253.,  4752.,  3873.,  4434.,  4995.,  5556.,  4318.,  4948.,  5578.,  6208.,  4387.,  5014.,  5641.,  6268.,  4344.,  4984.,  5624.,  6264.,  4299.,  4894.,  5489.,  6084.,  3835.,  4378.,  4921.,  5464.,  3364.,  3848.,  4332.,  4816.,  2866.,  3300.,  3734.,  4168.,  2641.,  3018.,  3395.,  3772.,  1944.,  2240.,  2536.,  2832.,  2505.,  2850.,  3195.,  3540.,  2832.,  3232.,  3632.,  4032.,  3237.,  3682.,  4127.,  4572.,  3328.,  3824.,  4320.,  4816.,  3913.,  4466.,  5019.,  5572.,  3583.,  4122.,  4661.,  5200.,  3717.,  4258.,  4799.,  5340.,  3396.,  3896.,  4396.,  4896.,  3365.,  3818.,  4271.,  4724.,  2864.,  3264.,  3664.,  4064.,  2445.,  2802.,  3159.,  3516.,  2036.,  2344.,  2652.,  2960.};
  const std::array<int, 4> in_shape = {{ 1, 12, 13, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x13x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 7183.,  8206.,  9229., 10252.,  7080.,  8112.,  9144., 10176.,  7281.,  8306.,  9331., 10356.,  7076.,  8104.,  9132., 10160.,  7149.,  8170.,  9191., 10212.,  6838.,  7852.,  8866.,  9880.};
  const std::array<int, 4> in_shape = {{ 1, 12, 13, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x13x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 5020.,  6046.,  7312.,  7922.,  8852.,  9270.,  9466.,  9278.,  8708.,  7866.,  7312.,  5830.,  5036.,  6298.,  7353.,  7880.,  8847.,  9686., 11365., 10979., 11361.,  9902.,  9235.,  7880.,  6869.,  5906.,  6800.,  7816.,  9408., 10488., 12016., 12904., 13064., 12520., 11760., 10360.,  9408.,  7944.,  7056.,  7870.,  9363., 10424., 11957., 12514., 14087., 13825., 14459., 13210., 12081., 10424.,  9335.,  7350.,  8660.,  9746., 11504., 12462., 14364., 15802., 16598., 15858., 14556., 12502., 11504., 10106.,  8900.,  8866., 11181., 12712., 14731., 16030., 17945., 17407., 17445., 15910., 14751., 12712., 11049.,  8986., 10230., 11299., 12616., 13581., 16090., 17175., 17421., 17139., 16194., 14081., 12616., 10687.,  9694.,  8076., 10294., 11696., 13738., 14436., 15678., 14986., 15494., 13828., 13218., 11696., 10382.,  8748.,  7738.,  8757., 10392., 11547., 12998., 13889., 14651., 14309., 13198., 11527., 10392.,  8537.,  7298.,  7120.,  8360.,  9152., 10456., 11184., 12808., 12392., 12808., 11184., 10456.,  9152.,  8360.,  7120.,  5758.,  6823.,  8424.,  9177., 10290., 10683., 10457., 10471., 10250.,  9309.,  8424.,  6995.,  6102.,  5220.,  5930.,  6608.,  7558.,  8268.,  9714.,  9238.,  9770.,  8684.,  7822.,  6608.,  5778.,  4868.};
  const std::array<int, 4> in_shape = {{ 1, 12, 13, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x13x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17945., 17407., 17445., 17175., 17421., 17139.};
  const std::array<int, 4> in_shape = {{ 1, 12, 13, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x13x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4812.,  5416.,  5394.,  6108.,  6768.,  7584.,  7046.,  7956.,  8036.,  9032.,  8554.,  9660.,  9386., 10500.,  8938., 10060.,  8628.,  9640.,  7190.,  8100.,  6768.,  7584.,  5522.,  6220.,  4892.,  5480.,  5402.,  6100.,  6919.,  7746.,  7448.,  8400.,  8685.,  9758.,  9158., 10348., 10803., 12106., 10043., 11334., 10307., 11586.,  9102., 10268.,  8965., 10022.,  7448.,  8400.,  6647.,  7466.,  5378.,  6068.,  6768.,  7584.,  7576.,  8528.,  9024., 10112.,  9448., 10672., 11280., 12640., 11832., 13328., 12408., 13904., 11576., 13072., 11280., 12640.,  9704., 10928.,  9024., 10112.,  7320.,  8272.,  6768.,  7584.,  6974.,  7868.,  8709.,  9766.,  9576., 10800., 11415., 12778., 11762., 13268., 13561., 15214., 12897., 14562., 14025., 15702., 12122., 13652., 11343., 12722.,  9576., 10800.,  9013., 10078.,  7238.,  8140.,  8036.,  9032.,  9022., 10196., 11280., 12640., 11898., 13420., 13964., 15656., 14502., 16372., 15590., 17452., 14630., 16484., 13916., 15592., 11914., 13436., 11280., 12640.,  9406., 10596.,  8500.,  9512.,  8626.,  9748., 10739., 12042., 11704., 13200., 13601., 15270., 14318., 16172., 17007., 19058., 16183., 18238., 17023., 19082., 14646., 16508., 14073., 15758., 11704., 13200., 10531., 11826.,  8666.,  9780.,  9490., 10620., 10267., 11574., 12280., 13776., 13001., 14698., 15758., 17636., 16215., 18286., 16479., 18522., 15655., 17702., 15542., 17396., 13441., 15122., 12280., 13776.,  9931., 11230.,  9562., 10684.,  7844.,  8872.,  9782., 10972., 10640., 12000., 12706., 14244., 13068., 14760., 15454., 17308., 14206., 16052., 15326., 17196., 13164., 14872., 12674., 14212., 10640., 12000.,  9526., 10700.,  7812.,  8824.,  7390.,  8292.,  8005.,  9066., 10280., 11504., 11079., 12470., 12498., 14028., 12793., 14466., 13825., 15478., 13129., 14794., 12394., 13916., 10543., 11918., 10280., 11504.,  8373.,  9442.,  7254.,  8164.,  6384.,  7200.,  7896.,  8848.,  8512.,  9600., 10152., 11376., 10640., 12000., 12408., 13904., 11832., 13328., 12408., 13904., 10640., 12000., 10152., 11376.,  8512.,  9600.,  7896.,  8848.,  6384.,  7200.,  5882.,  6588.,  6543.,  7374.,  7768.,  8720.,  8117.,  9186.,  9766., 10948., 10043., 11334., 10307., 11586.,  9995., 11294., 10062., 11252.,  8621.,  9706.,  7768.,  8720.,  6271.,  7094.,  5890.,  6588.,  4556.,  5160.,  5738.,  6436.,  6384.,  7200.,  7758.,  8684.,  7972.,  9000.,  9218., 10340.,  8290.,  9388.,  8834.,  9940.,  7812.,  8824.,  7726.,  8652.,  6384.,  7200.,  5738.,  6452.,  4780.,  5400.};
  const std::array<int, 4> in_shape = {{ 1, 12, 13, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x13x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17007., 19058., 16183., 18238., 17023., 19082., 16215., 18286., 16479., 18522., 15655., 17702.};
  const std::array<int, 4> in_shape = {{ 1, 12, 13, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x13x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4556.,  5160.,  5764.,  6368.,  4714.,  5428.,  6142.,  6856.,  6192.,  7008.,  7824.,  8640.,  5982.,  6892.,  7802.,  8712.,  7604.,  8600.,  9596., 10592.,  7378.,  8484.,  9590., 10696.,  8458.,  9572., 10686., 11800.,  7490.,  8612.,  9734., 10856.,  7716.,  8728.,  9740., 10752.,  6110.,  7020.,  7930.,  8840.,  6192.,  7008.,  7824.,  8640.,  4602.,  5300.,  5998.,  6696.,  4444.,  5032.,  5620.,  6208.,  4666.,  5364.,  6062.,  6760.,  6227.,  7054.,  7881.,  8708.,  6328.,  7280.,  8232.,  9184.,  8089.,  9162., 10235., 11308.,  7878.,  9068., 10258., 11448.,  9839., 11142., 12445., 13748.,  8459.,  9750., 11041., 12332.,  9639., 10918., 12197., 13476.,  7742.,  8908., 10074., 11240.,  7913.,  8970., 10027., 11084.,  6328.,  7280.,  8232.,  9184.,  6203.,  7022.,  7841.,  8660.,  4578.,  5268.,  5958.,  6648.,  6192.,  7008.,  7824.,  8640.,  6328.,  7280.,  8232.,  9184.,  8256.,  9344., 10432., 11520.,  8136.,  9360., 10584., 11808., 10320., 11680., 13040., 14400.,  9944., 11440., 12936., 14432., 11352., 12848., 14344., 15840.,  9944., 11440., 12936., 14432., 10320., 11680., 13040., 14400.,  8136.,  9360., 10584., 11808.,  8256.,  9344., 10432., 11520.,  6328.,  7280.,  8232.,  9184.,  6192.,  7008.,  7824.,  8640.,  5934.,  6828.,  7722.,  8616.,  7913.,  8970., 10027., 11084.,  8136.,  9360., 10584., 11808., 10331., 11694., 13057., 14420., 10002., 11508., 13014., 14520., 12509., 14162., 15815., 17468., 11041., 12706., 14371., 16036., 12645., 14322., 15999., 17676., 10202., 11732., 13262., 14792., 10379., 11758., 13137., 14516.,  8136.,  9360., 10584., 11808.,  8001.,  9066., 10131., 11196.,  5958.,  6860.,  7762.,  8664.,  7604.,  8600.,  9596., 10592.,  7830.,  9004., 10178., 11352., 10320., 11680., 13040., 14400., 10050., 11572., 13094., 14616., 12812., 14504., 16196., 17888., 12398., 14268., 16138., 18008., 14134., 15996., 17858., 19720., 12286., 14140., 15994., 17848., 12700., 14376., 16052., 17728., 10178., 11700., 13222., 14744., 10320., 11680., 13040., 14400.,  7942.,  9132., 10322., 11512.,  7716.,  8728.,  9740., 10752.,  7426.,  8548.,  9670., 10792.,  9839., 11142., 12445., 13748.,  9944., 11440., 12936., 14432., 12685., 14354., 16023., 17692., 12350., 14204., 16058., 17912., 15515., 17566., 19617., 21668., 13607., 15662., 17717., 19772., 15539., 17598., 19657., 21716., 12438., 14300., 16162., 18024., 12605., 14290., 15975., 17660.,  9944., 11440., 12936., 14432.,  9687., 10982., 12277., 13572.,  7466.,  8580.,  9694., 10808.,  8634.,  9764., 10894., 12024.,  8507.,  9814., 11121., 12428., 11352., 12848., 14344., 15840., 11137., 12834., 14531., 16228., 14310., 16188., 18066., 19944., 13655., 15726., 17797., 19868., 15491., 17534., 19577., 21620., 13583., 15630., 17677., 19724., 14046., 15900., 17754., 19608., 11217., 12898., 14579., 16260., 11352., 12848., 14344., 15840.,  8611.,  9910., 11209., 12508.,  8418.,  9540., 10662., 11784.,  6804.,  7832.,  8860.,  9888.,  9126., 10316., 11506., 12696.,  9040., 10400., 11760., 13120., 11730., 13268., 14806., 16344., 11148., 12840., 14532., 16224., 14110., 15964., 17818., 19672., 12262., 14108., 15954., 17800., 14094., 15964., 17834., 19704., 11388., 13096., 14804., 16512., 11602., 13140., 14678., 16216.,  9040., 10400., 11760., 13120.,  8886., 10060., 11234., 12408.,  6820.,  7832.,  8844.,  9856.,  6886.,  7788.,  8690.,  9592.,  6933.,  7994.,  9055., 10116.,  9288., 10512., 11736., 12960.,  9135., 10526., 11917., 13308., 11706., 13236., 14766., 16296., 11001., 12674., 14347., 16020., 12509., 14162., 15815., 17468., 11041., 12706., 14371., 16036., 11554., 13076., 14598., 16120.,  9087., 10462., 11837., 13212.,  9288., 10512., 11736., 12960.,  7021.,  8090.,  9159., 10228.,  6910.,  7820.,  8730.,  9640.,  5424.,  6240.,  7056.,  7872.,  7224.,  8176.,  9128., 10080.,  7232.,  8320.,  9408., 10496.,  9288., 10512., 11736., 12960.,  9040., 10400., 11760., 13120., 11352., 12848., 14344., 15840.,  9944., 11440., 12936., 14432., 11352., 12848., 14344., 15840.,  9040., 10400., 11760., 13120.,  9288., 10512., 11736., 12960.,  7232.,  8320.,  9408., 10496.,  7224.,  8176.,  9128., 10080.,  5424.,  6240.,  7056.,  7872.,  5362.,  6068.,  6774.,  7480.,  5471.,  6302.,  7133.,  7964.,  7224.,  8176.,  9128., 10080.,  7021.,  8090.,  9159., 10228.,  8974., 10156., 11338., 12520.,  8459.,  9750., 11041., 12332.,  9639., 10918., 12197., 13476.,  8611.,  9910., 11209., 12508.,  8934., 10124., 11314., 12504.,  7197.,  8282.,  9367., 10452.,  7224.,  8176.,  9128., 10080.,  5447.,  6270.,  7093.,  7916.,  5274.,  5972.,  6670.,  7368.,  3916.,  4520.,  5124.,  5728.,  5338.,  6036.,  6734.,  7432.,  5424.,  6240.,  7056.,  7872.,  7086.,  8012.,  8938.,  9864.,  6804.,  7832.,  8860.,  9888.,  8610.,  9732., 10854., 11976.,  7290.,  8388.,  9486., 10584.,  8370.,  9476., 10582., 11688.,  6820.,  7832.,  8844.,  9856.,  6958.,  7884.,  8810.,  9736.,  5424.,  6240.,  7056.,  7872.,  5322.,  6036.,  6750.,  7464.,  4156.,  4776.,  5396.,  6016.};
  const std::array<int, 4> in_shape = {{ 1, 12, 13, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x13x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {15515., 17566., 19617., 21668., 13607., 15662., 17717., 19772., 15539., 17598., 19657., 21716., 13655., 15726., 17797., 19868., 15491., 17534., 19577., 21620., 13583., 15630., 17677., 19724.};
  const std::array<int, 4> in_shape = {{ 1, 12, 13, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x13x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3672.,  2940.,  4896.,  3780.,  6120.,  4620.,  6732.,  4620.,  6120.,  3780.,  4896.,  2940.,  3672.,  2940.,  4926.,  3920.,  6354.,  4900.,  7782.,  5390.,  7782.,  4900.,  6354.,  3920.,  4926.,  2940.,  4896.,  3920.,  6528.,  5040.,  8160.,  6160.,  8976.,  6160.,  8160.,  5040.,  6528.,  3920.,  4896.,  3780.,  6354.,  5040.,  8190.,  6300., 10026.,  6930., 10026.,  6300.,  8190.,  5040.,  6354.,  3780.,  6120.,  4900.,  8160.,  6300., 10200.,  7700., 11220.,  7700., 10200.,  6300.,  8160.,  4900.,  6120.,  4620.,  7782.,  6160., 10026.,  7700., 12270.,  8470., 12270.,  7700., 10026.,  6160.,  7782.,  4620.,  6732.,  5390.,  8976.,  6930., 11220.,  8470., 12270.,  8470., 11220.,  6930.,  8976.,  5390.,  6732.,  4200.,  7140.,  5600.,  9180.,  7000., 11220.,  7700., 11220.,  7000.,  9180.,  5600.,  7140.,  4200.,  5508.,  4410.,  7344.,  5670.,  9180.,  6930., 10026.,  6930.,  9180.,  5670.,  7344.,  4410.,  5508.,  3360.,  5712.,  4480.,  7344.,  5600.,  8976.,  6160.,  8976.,  5600.,  7344.,  4480.,  5712.,  3360.,  4284.,  3430.,  5712.,  4410.,  7140.,  5390.,  7782.,  5390.,  7140.,  4410.,  5712.,  3430.,  4284.,  2520.,  4284.,  3360.,  5508.,  4200.,  6732.,  4620.,  6732.,  4200.,  5508.,  3360.,  4284.,  2520.};
  const std::array<int, 4> in_shape = {{ 1, 12, 13, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x13x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {12270.,  8470., 12270.,  8470., 12270.,  8470.};
  const std::array<int, 4> in_shape = {{ 1, 12, 13, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x13x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2952.,  3600.,  3444.,  4200.,  3936.,  4800.,  4428.,  5400.,  4920.,  6000.,  5412.,  6600.,  5412.,  6600.,  5412.,  6600.,  4920.,  6000.,  4428.,  5400.,  3936.,  4800.,  3444.,  4200.,  2952.,  3600.,  3444.,  4200.,  3986.,  4860.,  4592.,  5600.,  5134.,  6260.,  5740.,  7000.,  6282.,  7660.,  6346.,  7740.,  6282.,  7660.,  5740.,  7000.,  5134.,  6260.,  4592.,  5600.,  3986.,  4860.,  3444.,  4200.,  3936.,  4800.,  4592.,  5600.,  5248.,  6400.,  5904.,  7200.,  6560.,  8000.,  7216.,  8800.,  7216.,  8800.,  7216.,  8800.,  6560.,  8000.,  5904.,  7200.,  5248.,  6400.,  4592.,  5600.,  3936.,  4800.,  4428.,  5400.,  5134.,  6260.,  5904.,  7200.,  6610.,  8060.,  7380.,  9000.,  8086.,  9860.,  8150.,  9940.,  8086.,  9860.,  7380.,  9000.,  6610.,  8060.,  5904.,  7200.,  5134.,  6260.,  4428.,  5400.,  4920.,  6000.,  5740.,  7000.,  6560.,  8000.,  7380.,  9000.,  8200., 10000.,  9020., 11000.,  9020., 11000.,  9020., 11000.,  8200., 10000.,  7380.,  9000.,  6560.,  8000.,  5740.,  7000.,  4920.,  6000.,  5412.,  6600.,  6282.,  7660.,  7216.,  8800.,  8086.,  9860.,  9020., 11000.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9020., 11000.,  8086.,  9860.,  7216.,  8800.,  6282.,  7660.,  5412.,  6600.,  5412.,  6600.,  6346.,  7740.,  7216.,  8800.,  8150.,  9940.,  9020., 11000.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9020., 11000.,  8150.,  9940.,  7216.,  8800.,  6346.,  7740.,  5412.,  6600.,  4920.,  6000.,  5740.,  7000.,  6560.,  8000.,  7380.,  9000.,  8200., 10000.,  9020., 11000.,  9020., 11000.,  9020., 11000.,  8200., 10000.,  7380.,  9000.,  6560.,  8000.,  5740.,  7000.,  4920.,  6000.,  4428.,  5400.,  5198.,  6340.,  5904.,  7200.,  6674.,  8140.,  7380.,  9000.,  8150.,  9940.,  8086.,  9860.,  8150.,  9940.,  7380.,  9000.,  6674.,  8140.,  5904.,  7200.,  5198.,  6340.,  4428.,  5400.,  3936.,  4800.,  4592.,  5600.,  5248.,  6400.,  5904.,  7200.,  6560.,  8000.,  7216.,  8800.,  7216.,  8800.,  7216.,  8800.,  6560.,  8000.,  5904.,  7200.,  5248.,  6400.,  4592.,  5600.,  3936.,  4800.,  3444.,  4200.,  4050.,  4940.,  4592.,  5600.,  5198.,  6340.,  5740.,  7000.,  6346.,  7740.,  6282.,  7660.,  6346.,  7740.,  5740.,  7000.,  5198.,  6340.,  4592.,  5600.,  4050.,  4940.,  3444.,  4200.,  2952.,  3600.,  3444.,  4200.,  3936.,  4800.,  4428.,  5400.,  4920.,  6000.,  5412.,  6600.,  5412.,  6600.,  5412.,  6600.,  4920.,  6000.,  4428.,  5400.,  3936.,  4800.,  3444.,  4200.,  2952.,  3600.};
  const std::array<int, 4> in_shape = {{ 1, 12, 13, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x13x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.};
  const std::array<int, 4> in_shape = {{ 1, 12, 13, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x13x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2818.,  3692.,  4566.,  5440.,  3248.,  4256.,  5264.,  6272.,  3630.,  4756.,  5882.,  7008.,  4060.,  5320.,  6580.,  7840.,  4442.,  5820.,  7198.,  8576.,  4490.,  5884.,  7278.,  8672.,  4442.,  5820.,  7198.,  8576.,  4060.,  5320.,  6580.,  7840.,  3630.,  4756.,  5882.,  7008.,  3248.,  4256.,  5264.,  6272.,  2818.,  3692.,  4566.,  5440.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3248.,  4256.,  5264.,  6272.,  3712.,  4864.,  6016.,  7168.,  4176.,  5472.,  6768.,  8064.,  4640.,  6080.,  7520.,  8960.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  4640.,  6080.,  7520.,  8960.,  4176.,  5472.,  6768.,  8064.,  3712.,  4864.,  6016.,  7168.,  3248.,  4256.,  5264.,  6272.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3630.,  4756.,  5882.,  7008.,  4176.,  5472.,  6768.,  8064.,  4674.,  6124.,  7574.,  9024.,  5220.,  6840.,  8460., 10080.,  5718.,  7492.,  9266., 11040.,  5766.,  7556.,  9346., 11136.,  5718.,  7492.,  9266., 11040.,  5220.,  6840.,  8460., 10080.,  4674.,  6124.,  7574.,  9024.,  4176.,  5472.,  6768.,  8064.,  3630.,  4756.,  5882.,  7008.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  4060.,  5320.,  6580.,  7840.,  4640.,  6080.,  7520.,  8960.,  5220.,  6840.,  8460., 10080.,  5800.,  7600.,  9400., 11200.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  5800.,  7600.,  9400., 11200.,  5220.,  6840.,  8460., 10080.,  4640.,  6080.,  7520.,  8960.,  4060.,  5320.,  6580.,  7840.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4442.,  5820.,  7198.,  8576.,  5104.,  6688.,  8272.,  9856.,  5718.,  7492.,  9266., 11040.,  6380.,  8360., 10340., 12320.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  6380.,  8360., 10340., 12320.,  5718.,  7492.,  9266., 11040.,  5104.,  6688.,  8272.,  9856.,  4442.,  5820.,  7198.,  8576.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4490.,  5884.,  7278.,  8672.,  5104.,  6688.,  8272.,  9856.,  5766.,  7556.,  9346., 11136.,  6380.,  8360., 10340., 12320.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6380.,  8360., 10340., 12320.,  5766.,  7556.,  9346., 11136.,  5104.,  6688.,  8272.,  9856.,  4490.,  5884.,  7278.,  8672.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  4060.,  5320.,  6580.,  7840.,  4640.,  6080.,  7520.,  8960.,  5220.,  6840.,  8460., 10080.,  5800.,  7600.,  9400., 11200.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  5800.,  7600.,  9400., 11200.,  5220.,  6840.,  8460., 10080.,  4640.,  6080.,  7520.,  8960.,  4060.,  5320.,  6580.,  7840.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3678.,  4820.,  5962.,  7104.,  4176.,  5472.,  6768.,  8064.,  4722.,  6188.,  7654.,  9120.,  5220.,  6840.,  8460., 10080.,  5766.,  7556.,  9346., 11136.,  5718.,  7492.,  9266., 11040.,  5766.,  7556.,  9346., 11136.,  5220.,  6840.,  8460., 10080.,  4722.,  6188.,  7654.,  9120.,  4176.,  5472.,  6768.,  8064.,  3678.,  4820.,  5962.,  7104.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3248.,  4256.,  5264.,  6272.,  3712.,  4864.,  6016.,  7168.,  4176.,  5472.,  6768.,  8064.,  4640.,  6080.,  7520.,  8960.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  4640.,  6080.,  7520.,  8960.,  4176.,  5472.,  6768.,  8064.,  3712.,  4864.,  6016.,  7168.,  3248.,  4256.,  5264.,  6272.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2866.,  3756.,  4646.,  5536.,  3248.,  4256.,  5264.,  6272.,  3678.,  4820.,  5962.,  7104.,  4060.,  5320.,  6580.,  7840.,  4490.,  5884.,  7278.,  8672.,  4442.,  5820.,  7198.,  8576.,  4490.,  5884.,  7278.,  8672.,  4060.,  5320.,  6580.,  7840.,  3678.,  4820.,  5962.,  7104.,  3248.,  4256.,  5264.,  6272.,  2866.,  3756.,  4646.,  5536.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.};
  const std::array<int, 4> in_shape = {{ 1, 12, 13, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x13x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.};
  const std::array<int, 4> in_shape = {{ 1, 12, 13, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x14x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 8449.,  9672., 10948., 11823., 12771., 13786., 13995., 14268., 14605., 13637., 13176., 12300., 10663.,  9039., 11945., 14354., 16812., 19216., 21687., 24218., 24305., 23656., 23103., 21110., 19284., 16608., 13761., 10942., 13764., 15568., 17424., 18556., 19756., 21016., 20860., 20320., 19876., 17636., 16240., 14576., 12300., 10060., 13750., 16204., 18720., 20873., 23102., 25398., 26222., 27014., 27902., 26603., 24322., 21324., 18290., 15293., 16067., 18864., 21740., 24621., 27593., 29622., 29801., 29308., 29391., 27335., 24512., 21540., 18077., 14645., 18031., 20742., 23524., 25630., 27817., 30074., 30351., 30308., 30489., 28052., 26112., 23592., 20151., 16760., 20769., 22992., 25292., 27274., 29343., 31488., 31157., 30890., 31551., 28550., 25272., 22016., 18889., 15806., 16849., 19206., 21636., 24097., 25619., 27216., 27049., 26274., 26075., 24049., 21966., 19452., 16261., 13107., 15158., 18220., 21344., 23817., 25342., 26934., 26828., 26434., 26232., 24343., 21920., 18620., 15892., 13201., 15564., 17208., 18896., 20268., 21700., 23184., 22876., 22632., 22228., 19868., 17528., 14864., 12684., 10548., 10255., 11552., 12900., 14292., 15721., 17180., 17623., 17426., 17709., 16900., 15648., 13608., 11683.,  9784., 10843., 12922., 15052., 16203., 17393., 18616., 18651., 18398., 18273., 16979., 14786., 12372., 10735.,  9113.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x14x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {30074., 30351., 30308., 30489., 31488., 31157., 30890., 31551.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 32.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x14x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2568., 2898., 3098., 3472., 3408., 3832., 3774., 4238., 4056., 4566., 4402., 4948., 4306., 4838., 4114., 4632., 4130., 4650., 3564., 4026., 3266., 3680., 2896., 3256., 2530., 2846., 2292., 2558., 3083., 3458., 3446., 3876., 3852., 4344., 4383., 4928., 4801., 5406., 5348., 6004., 5317., 5970., 5174., 5808., 5175., 5806., 4519., 5084., 4092., 4600., 3396., 3840., 2925., 3314., 2613., 2940., 3360., 3768., 3720., 4192., 4352., 4896., 4920., 5528., 5344., 6024., 5960., 6704., 5976., 6728., 5976., 6720., 6024., 6776., 5408., 6088., 4984., 5600., 4352., 4896., 3912., 4392., 3168., 3576., 3551., 3980., 4052., 4552., 4796., 5376., 5285., 5938., 5869., 6604., 6466., 7276., 6543., 7372., 6700., 7532., 6809., 7660., 6447., 7222., 5746., 6452., 4884., 5512., 4423., 4980., 3709., 4186., 3792., 4262., 4254., 4800., 4944., 5576., 5458., 6170., 6528., 7330., 7430., 8316., 7326., 8226., 7174., 8072., 7342., 8270., 6924., 7774., 6150., 6928., 5520., 6216., 4990., 5610., 4260., 4794., 4059., 4590., 4810., 5420., 5772., 6472., 6123., 6908., 6977., 7858., 7736., 8708., 7977., 8958., 8042., 9016., 8011., 9010., 7263., 8168., 6608., 7440., 6148., 6896., 5249., 5918., 4445., 5024., 4675., 5266., 5480., 6144., 5964., 6712., 6425., 7252., 7337., 8254., 7718., 8720., 7751., 8746., 7736., 8708., 7977., 8958., 7295., 8172., 6342., 7136., 5636., 6336., 4911., 5538., 4301., 4844., 4332., 4882., 5074., 5692., 5456., 6152., 6130., 6898., 6788., 7638., 7218., 8144., 7366., 8290., 7018., 7924., 7070., 7974., 6320., 7122., 5770., 6492., 5232., 5864., 4534., 5098., 3968., 4454., 3779., 4268., 4526., 5080., 5116., 5744., 5787., 6482., 6137., 6908., 6564., 7404., 6541., 7384., 6342., 7172., 6415., 7248., 5683., 6430., 5316., 5984., 4724., 5304., 4085., 4600., 3593., 4034., 3296., 3704., 3736., 4208., 4224., 4768., 4840., 5448., 5344., 6024., 5976., 6720., 6024., 6776., 5960., 6704., 6040., 6792., 5344., 6024., 4904., 5520., 4224., 4768., 3800., 4280., 3296., 3704., 2635., 2974., 2908., 3296., 3468., 3912., 4077., 4584., 4513., 5090., 5114., 5752., 5171., 5822., 5180., 5828., 5205., 5866., 4639., 5240., 4234., 4784., 3844., 4336., 3611., 4054., 3037., 3424., 2300., 2582., 2502., 2820., 2960., 3320., 3214., 3622., 3524., 3986., 4054., 4576., 4106., 4646., 4174., 4716., 4386., 4946., 4216., 4726., 3854., 4324., 3248., 3672., 2954., 3342., 2568., 2914.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x14x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {7736., 8708., 7977., 8958., 8042., 9016., 8011., 9010., 7718., 8720., 7751., 8746., 7736., 8708., 7977., 8958.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x14x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2182.,  2512.,  2842.,  3172.,  2590.,  2964.,  3338.,  3712.,  2936.,  3360.,  3784.,  4208.,  3164.,  3628.,  4092.,  4556.,  3554.,  4064.,  4574.,  5084.,  3906.,  4452.,  4998.,  5544.,  3712.,  4244.,  4776.,  5308.,  3582.,  4100.,  4618.,  5136.,  3596.,  4116.,  4636.,  5156.,  3258.,  3720.,  4182.,  4644.,  2854.,  3268.,  3682.,  4096.,  2488.,  2848.,  3208.,  3568.,  2312.,  2628.,  2944.,  3260.,  2030.,  2296.,  2562.,  2828.,  2511.,  2886.,  3261.,  3636.,  2878.,  3308.,  3738.,  4168.,  3404.,  3896.,  4388.,  4880.,  3709.,  4254.,  4799.,  5344.,  4101.,  4706.,  5311.,  5916.,  4568.,  5224.,  5880.,  6536.,  4637.,  5290.,  5943.,  6596.,  4498.,  5132.,  5766.,  6400.,  4375.,  5006.,  5637.,  6268.,  3897.,  4462.,  5027.,  5592.,  3548.,  4056.,  4564.,  5072.,  3116.,  3560.,  4004.,  4448.,  2549.,  2938.,  3327.,  3716.,  2227.,  2554.,  2881.,  3208.,  2920.,  3328.,  3736.,  4144.,  3320.,  3792.,  4264.,  4736.,  3808.,  4352.,  4896.,  5440.,  4240.,  4848.,  5456.,  6064.,  4696.,  5376.,  6056.,  6736.,  5096.,  5840.,  6584.,  7328.,  5184.,  5936.,  6688.,  7440.,  5256.,  6000.,  6744.,  7488.,  5408.,  6160.,  6912.,  7664.,  4824.,  5504.,  6184.,  6864.,  4296.,  4912.,  5528.,  6144.,  3808.,  4352.,  4896.,  5440.,  3376.,  3856.,  4336.,  4816.,  2792.,  3200.,  3608.,  4016.,  3057.,  3486.,  3915.,  4344.,  3540.,  4040.,  4540.,  5040.,  4052.,  4632.,  5212.,  5792.,  4637.,  5290.,  5943.,  6596.,  5195.,  5930.,  6665.,  7400.,  5578.,  6388.,  7198.,  8008.,  5681.,  6510.,  7339.,  8168.,  5704.,  6536.,  7368.,  8200.,  5871.,  6722.,  7573.,  8424.,  5575.,  6350.,  7125.,  7900.,  5026.,  5732.,  6438.,  7144.,  4372.,  5000.,  5628.,  6256.,  3953.,  4510.,  5067.,  5624.,  3501.,  3978.,  4455.,  4932.,  3194.,  3664.,  4134.,  4604.,  3930.,  4476.,  5022.,  5568.,  4392.,  5024.,  5656.,  6288.,  4812.,  5524.,  6236.,  6948.,  5630.,  6432.,  7234.,  8036.,  6422.,  7308.,  8194.,  9080.,  6328.,  7228.,  8128.,  9028.,  6154.,  7052.,  7950.,  8848.,  6332.,  7260.,  8188.,  9116.,  5942.,  6792.,  7642.,  8492.,  5506.,  6284.,  7062.,  7840.,  4840.,  5536.,  6232.,  6928.,  4320.,  4940.,  5560.,  6180.,  3874.,  4408.,  4942.,  5476.,  3507.,  4038.,  4569.,  5100.,  4146.,  4756.,  5366.,  5976.,  4988.,  5688.,  6388.,  7088.,  5429.,  6214.,  6999.,  7784.,  5937.,  6818.,  7699.,  8580.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  7014.,  7988.,  8962.,  9936.,  6991.,  7990.,  8989.,  9988.,  6245.,  7150.,  8055.,  8960.,  5792.,  6624.,  7456.,  8288.,  5244.,  5992.,  6740.,  7488.,  4517.,  5186.,  5855.,  6524.,  3959.,  4538.,  5117.,  5696.,  4199.,  4790.,  5381.,  5972.,  4632.,  5296.,  5960.,  6624.,  5196.,  5944.,  6692.,  7440.,  5767.,  6594.,  7421.,  8248.,  6333.,  7250.,  8167.,  9084.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  6305.,  7182.,  8059.,  8936.,  5586.,  6380.,  7174.,  7968.,  4908.,  5608.,  6308.,  7008.,  4331.,  4958.,  5585.,  6212.,  3707.,  4250.,  4793.,  5336.,  3810.,  4360.,  4910.,  5460.,  4378.,  4996.,  5614.,  6232.,  4968.,  5664.,  6360.,  7056.,  5428.,  6196.,  6964.,  7732.,  5894.,  6744.,  7594.,  8444.,  6390.,  7316.,  8242.,  9168.,  6336.,  7260.,  8184.,  9108.,  6074.,  6980.,  7886.,  8792.,  6084.,  6988.,  7892.,  8796.,  5630.,  6432.,  7234.,  8036.,  5250.,  5972.,  6694.,  7416.,  4456.,  5088.,  5720.,  6352.,  3944.,  4508.,  5072.,  5636.,  3402.,  3888.,  4374.,  4860.,  3357.,  3846.,  4335.,  4824.,  3794.,  4348.,  4902.,  5456.,  4388.,  5016.,  5644.,  6272.,  4959.,  5654.,  6349.,  7044.,  5455.,  6226.,  6997.,  7768.,  5920.,  6760.,  7600.,  8440.,  5871.,  6714.,  7557.,  8400.,  5742.,  6572.,  7402.,  8232.,  5629.,  6462.,  7295.,  8128.,  5019.,  5766.,  6513.,  7260.,  4556.,  5224.,  5892.,  6560.,  4100.,  4680.,  5260.,  5840.,  3607.,  4122.,  4637.,  5152.,  3113.,  3554.,  3995.,  4436.,  2792.,  3200.,  3608.,  4016.,  3224.,  3696.,  4168.,  4640.,  3808.,  4352.,  4896.,  5440.,  4208.,  4816.,  5424.,  6032.,  4696.,  5376.,  6056.,  6736.,  5256.,  6000.,  6744.,  7488.,  5408.,  6160.,  6912.,  7664.,  5352.,  6096.,  6840.,  7584.,  5312.,  6064.,  6816.,  7568.,  4696.,  5376.,  6056.,  6736.,  4264.,  4880.,  5496.,  6112.,  3808.,  4352.,  4896.,  5440.,  3280.,  3760.,  4240.,  4720.,  2792.,  3200.,  3608.,  4016.,  2339.,  2678.,  3017.,  3356.,  2644.,  3032.,  3420.,  3808.,  3068.,  3512.,  3956.,  4400.,  3535.,  4042.,  4549.,  5056.,  3985.,  4562.,  5139.,  5716.,  4342.,  4980.,  5618.,  6256.,  4363.,  5014.,  5665.,  6316.,  4560.,  5208.,  5856.,  6504.,  4773.,  5434.,  6095.,  6756.,  4277.,  4878.,  5479.,  6080.,  3758.,  4308.,  4858.,  5408.,  3452.,  3944.,  4436.,  4928.,  3115.,  3558.,  4001.,  4444.,  2647.,  3034.,  3421.,  3808.,  1966.,  2248.,  2530.,  2812.,  2190.,  2508.,  2826.,  3144.,  2488.,  2848.,  3208.,  3568.,  2820.,  3228.,  3636.,  4044.,  3210.,  3672.,  4134.,  4596.,  3602.,  4124.,  4646.,  5168.,  3688.,  4228.,  4768.,  5308.,  3566.,  4108.,  4650.,  5192.,  3716.,  4276.,  4836.,  5396.,  3618.,  4128.,  4638.,  5148.,  3398.,  3868.,  4338.,  4808.,  2872.,  3296.,  3720.,  4144.,  2624.,  3012.,  3400.,  3788.,  2454.,  2800.,  3146.,  3492.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x14x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  7014.,  7988.,  8962.,  9936.,  6991.,  7990.,  8989.,  9988.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x14x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4784.,  5884.,  6768.,  7724.,  8992.,  9852.,  9600.,  8852.,  9160.,  8424.,  7712.,  7024.,  6200.,  5224.,  5958.,  6875.,  8168.,  8853.,  9802., 11183., 11741., 11499., 11545., 10190.,  9259.,  8008.,  6605.,  5618.,  7088.,  8016.,  9280., 10272., 11472., 12400., 12736., 12720., 13184., 11728., 10544.,  9280.,  8288.,  6832.,  7838.,  9083., 10552., 11965., 13058., 13743., 13977., 13795., 14285., 13454., 12319., 10776.,  9313.,  7586.,  8304.,  9772., 11408., 12476., 14560., 16492., 16184., 15460., 16032., 14472., 13048., 11408., 10176.,  8888.,  8998., 10595., 12808., 13933., 15866., 17623., 17965., 17779., 17417., 15326., 14251., 12648., 10845.,  9138.,  9822., 11239., 12680., 14025., 15906., 17019., 17553., 17623., 17965., 16358., 14439., 12648., 11425.,  9354.,  9096., 10384., 11536., 12824., 14328., 15424., 16044., 15624., 16004., 14768., 13236., 11408., 10292.,  8912.,  7758.,  9075., 10552., 11829., 13122., 14199., 14225., 13707., 13989., 12734., 11863., 10776.,  9513.,  8050.,  6832.,  7824.,  9280., 10208., 11472., 12720., 13184., 12912., 12992., 11472., 10480.,  9280.,  8096.,  6832.,  6126.,  6791.,  7784.,  8953., 10210., 11083., 11289., 11079., 11285.,  9926.,  8783.,  8008.,  7433.,  6314.,  5672.,  6344.,  7152.,  7760.,  8280.,  9128.,  9516.,  9232.,  9572.,  8992.,  8308.,  7024.,  6116.,  5216.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x14x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17623., 17965., 17779., 17417., 17019., 17553., 17623., 17965.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x14x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4428.,  5008.,  5674.,  6360.,  6448.,  7264.,  6974.,  7880.,  8420.,  9440.,  9410., 10504.,  8834.,  9936.,  8322.,  9400.,  8834.,  9952.,  8308.,  9328.,  7502.,  8432.,  6448.,  7264.,  5866.,  6576.,  5084.,  5664.,  5114.,  5804.,  6175.,  6982.,  7768.,  8720.,  8325.,  9386.,  9126., 10324., 10571., 11870., 11155., 12474., 10715., 11990., 10275., 11570.,  9166., 10332.,  8613.,  9686.,  7704.,  8656.,  6231.,  7066.,  5314.,  6004.,  6832.,  7648.,  7608.,  8544.,  8768.,  9856.,  9672., 10880., 10704., 12064., 11480., 12960., 11864., 13376., 12120., 13600., 12760., 14272., 11216., 12576.,  9928., 11168.,  8768.,  9856.,  7864.,  8832.,  6320.,  7136.,  7422.,  8316.,  8549.,  9590.,  9832., 11056., 11319., 12666., 12338., 13844., 12761., 14398., 13057., 14738., 13097., 14758., 13393., 15098., 12730., 14268., 11607., 13006., 10024., 11248.,  8893.,  9970.,  7590.,  8484.,  7588.,  8576.,  9478., 10632., 10832., 12192., 11810., 13320., 14028., 15728., 15662., 17496., 15022., 16880., 14126., 15944., 14702., 16576., 13660., 15360., 12466., 14016., 10832., 12192.,  9798., 10992.,  8500.,  9488.,  8274.,  9372.,  9787., 11062., 12152., 13648., 13097., 14762., 14478., 16356., 16631., 18670., 17535., 19610., 16967., 18982., 16463., 18514., 14518., 16364., 13513., 15206., 12088., 13584.,  9971., 11290.,  8474.,  9572.,  9490., 10636., 10411., 11710., 11896., 13392., 13401., 15074., 14926., 16820., 15911., 17974., 16175., 18274., 16631., 18670., 17535., 19610., 15414., 17276., 13497., 15198., 12088., 13584., 10851., 12194.,  8858., 10004.,  8580.,  9632.,  9774., 10960., 11088., 12448., 12378., 13888., 13740., 15440., 14678., 16544., 14966., 16888., 14294., 16176., 14646., 16552., 14028., 15728., 13082., 14632., 10832., 12192.,  9870., 11096.,  8740.,  9792.,  7326.,  8268.,  8509.,  9574.,  9832., 11056., 11039., 12394., 12498., 14020., 13809., 15470., 13817., 15522., 13313., 14998., 13321., 15050., 11946., 13500., 11055., 12462., 10024., 11248.,  8885.,  9986.,  7702.,  8644.,  6320.,  7136.,  7224.,  8160.,  8768.,  9856.,  9544., 10752., 10704., 12064., 12120., 13600., 12760., 14272., 12504., 13984., 12376., 13888., 10704., 12064.,  9800., 11040.,  8768.,  9856.,  7480.,  8448.,  6320.,  7136.,  6074.,  6812.,  6607.,  7438.,  7512.,  8464.,  8565.,  9634.,  9574., 10788., 10171., 11494., 10243., 11586., 10571., 11870., 11155., 12474.,  9806., 10988.,  8533.,  9614.,  7704.,  8656.,  6919.,  7778.,  5698.,  6436.,  5164.,  5808.,  5906.,  6624.,  6704.,  7520.,  7350.,  8256.,  8132.,  9152.,  8874., 10000.,  9098., 10264.,  8554.,  9696.,  8714.,  9864.,  8420.,  9440.,  7926.,  8856.,  6448.,  7264.,  5874.,  6616.,  5324.,  5968.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x14x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {16631., 18670., 17535., 19610., 16967., 18982., 16463., 18514., 15911., 17974., 16175., 18274., 16631., 18670., 17535., 19610.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x14x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4132.,  4712.,  5292.,  5872.,  4982.,  5668.,  6354.,  7040.,  5808.,  6624.,  7440.,  8256.,  6290.,  7196.,  8102.,  9008.,  7260.,  8280.,  9300., 10320.,  7886.,  8980., 10074., 11168.,  7686.,  8788.,  9890., 10992.,  7646.,  8724.,  9802., 10880.,  8054.,  9172., 10290., 11408.,  7260.,  8280.,  9300., 10320.,  6586.,  7516.,  8446.,  9376.,  5808.,  6624.,  7440.,  8256.,  5150.,  5860.,  6570.,  7280.,  4132.,  4712.,  5292.,  5872.,  4866.,  5556.,  6246.,  6936.,  5655.,  6462.,  7269.,  8076.,  6712.,  7664.,  8616.,  9568.,  7701.,  8762.,  9823., 10884.,  8446.,  9644., 10842., 12040.,  9123., 10422., 11721., 13020.,  9375., 10694., 12013., 13332.,  9179., 10454., 11729., 13004.,  8919., 10214., 11509., 12804.,  8382.,  9548., 10714., 11880.,  7577.,  8650.,  9723., 10796.,  6840.,  7792.,  8744.,  9696.,  5739.,  6574.,  7409.,  8244.,  4962.,  5652.,  6342.,  7032.,  5808.,  6624.,  7440.,  8256.,  6792.,  7728.,  8664.,  9600.,  7744.,  8832.,  9920., 11008.,  8472.,  9680., 10888., 12096.,  9680., 11040., 12400., 13760., 10664., 12144., 13624., 15104., 10632., 12144., 13656., 15168., 10408., 11888., 13368., 14848., 10888., 12400., 13912., 15424.,  9680., 11040., 12400., 13760.,  8696.,  9936., 11176., 12416.,  7744.,  8832.,  9920., 11008.,  7016.,  7984.,  8952.,  9920.,  5808.,  6624.,  7440.,  8256.,  6318.,  7212.,  8106.,  9000.,  7225.,  8266.,  9307., 10348.,  8648.,  9872., 11096., 12320.,  9771., 11118., 12465., 13812., 10642., 12148., 13654., 15160., 11565., 13202., 14839., 16476., 11985., 13666., 15347., 17028., 11957., 13618., 15279., 16940., 11865., 13570., 15275., 16980., 11026., 12564., 14102., 15640.,  9927., 11326., 12725., 14124.,  8776., 10000., 11224., 12448.,  7365.,  8442.,  9519., 10596.,  6414.,  7308.,  8202.,  9096.,  7036.,  8024.,  9012., 10000.,  8378.,  9532., 10686., 11840.,  9680., 11040., 12400., 13760., 10526., 12036., 13546., 15056., 12100., 13800., 15500., 17200., 13218., 15052., 16886., 18720., 13002., 14860., 16718., 18576., 12850., 14668., 16486., 18304., 13498., 15372., 17246., 19120., 12100., 13800., 15500., 17200., 10934., 12484., 14034., 15584.,  9680., 11040., 12400., 13760.,  8658.,  9852., 11046., 12240.,  7036.,  8024.,  9012., 10000.,  7770.,  8868.,  9966., 11064.,  8923., 10198., 11473., 12748., 10584., 12080., 13576., 15072., 12065., 13730., 15395., 17060., 13286., 15164., 17042., 18920., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 13222., 15068., 16914., 18760., 12053., 13746., 15439., 17132., 10712., 12208., 13704., 15200.,  9119., 10438., 11757., 13076.,  7866.,  8964., 10062., 11160.,  8106.,  9252., 10398., 11544.,  9379., 10678., 11977., 13276., 10584., 12080., 13576., 15072., 11769., 13442., 15115., 16788., 13398., 15292., 17186., 19080., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 13334., 15196., 17058., 18920., 11757., 13458., 15159., 16860., 10712., 12208., 13704., 15200.,  9575., 10918., 12261., 13604.,  8202.,  9348., 10494., 11640.,  7484.,  8536.,  9588., 10640.,  8282.,  9468., 10654., 11840.,  9680., 11040., 12400., 13760., 10846., 12356., 13866., 15376., 12100., 13800., 15500., 17200., 13122., 14988., 16854., 18720., 13770., 15692., 17614., 19536., 13618., 15500., 17382., 19264., 13402., 15308., 17214., 19120., 12100., 13800., 15500., 17200., 11254., 12804., 14354., 15904.,  9680., 11040., 12400., 13760.,  8562.,  9788., 11014., 12240.,  7484.,  8536.,  9588., 10640.,  6654.,  7596.,  8538.,  9480.,  7745.,  8810.,  9875., 10940.,  8648.,  9872., 11096., 12320.,  9539., 10894., 12249., 13604., 10754., 12276., 13798., 15320., 11957., 13618., 15279., 16940., 11865., 13570., 15275., 16980., 11837., 13522., 15207., 16892., 12257., 13986., 15715., 17444., 11138., 12692., 14246., 15800.,  9695., 11102., 12509., 13916.,  8776., 10000., 11224., 12448.,  7885.,  8986., 10087., 11188.,  6750.,  7692.,  8634.,  9576.,  5808.,  6624.,  7440.,  8256.,  6536.,  7472.,  8408.,  9344.,  7744.,  8832.,  9920., 11008.,  8728.,  9936., 11144., 12352.,  9680., 11040., 12400., 13760., 10408., 11888., 13368., 14848., 10888., 12400., 13912., 15424., 10664., 12144., 13624., 15104., 10632., 12144., 13656., 15168.,  9680., 11040., 12400., 13760.,  8952., 10192., 11432., 12672.,  7744.,  8832.,  9920., 11008.,  6760.,  7728.,  8696.,  9664.,  5808.,  6624.,  7440.,  8256.,  5202.,  5940.,  6678.,  7416.,  5983.,  6814.,  7645.,  8476.,  6712.,  7664.,  8616.,  9568.,  7533.,  8602.,  9671., 10740.,  8558.,  9772., 10986., 12200.,  9579., 10902., 12225., 13548.,  9319., 10662., 12005., 13348.,  9123., 10422., 11721., 13020.,  9375., 10694., 12013., 13332.,  8494.,  9676., 10858., 12040.,  7409.,  8490.,  9571., 10652.,  6840.,  7792.,  8744.,  9696.,  6067.,  6926.,  7785.,  8644.,  5298.,  6036.,  6774.,  7512.,  4580.,  5224.,  5868.,  6512.,  5014.,  5732.,  6450.,  7168.,  5808.,  6624.,  7440.,  8256.,  6482.,  7388.,  8294.,  9200.,  7260.,  8280.,  9300., 10320.,  7918.,  9044., 10170., 11296.,  8326.,  9492., 10658., 11824.,  8286.,  9428., 10570., 11712.,  8086.,  9236., 10386., 11536.,  7260.,  8280.,  9300., 10320.,  6778.,  7708.,  8638.,  9568.,  5808.,  6624.,  7440.,  8256.,  5182.,  5924.,  6666.,  7408.,  4580.,  5224.,  5868.,  6512.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x14x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x14x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x14x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x14x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x14x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x12x14x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x12x14x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x12x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2095., 2356., 2652., 2993., 3597., 4266., 4619., 4523., 4236., 3812., 3433., 2817., 3215., 3484., 3796., 3872., 4169., 4552., 4655., 4302., 4028., 3696., 3393., 3126., 3500., 4224., 4928., 5428., 6084., 6568., 6428., 5548., 4752., 3968., 3444., 2964., 3246., 3812., 4560., 5401., 6342., 7374., 7798., 7229., 6548., 5684., 4790., 3939., 3885., 4300., 4852., 5291., 6039., 6894., 7313., 7049., 6500., 5852., 5387., 4715., 4817., 5564., 6380., 6966., 7551., 7996., 7985., 7144., 6348., 5528., 4951., 4436., 4741., 5728., 6716., 7422., 8315., 9064., 9085., 8252., 7276., 6088., 5195., 4368., 4025., 4788., 5740., 6614., 7607., 8708., 9161., 8480., 7708., 6776., 5839., 4972., 3935., 4460., 5116., 5653., 6285., 7002., 7443., 7079., 6676., 6164., 5601., 4837., 3696., 4396., 5160., 5835., 6348., 6690., 6712., 6043., 5396., 4700., 4172., 3693., 2964., 3552., 4384., 5148., 5996., 6664., 6772., 6244., 5536., 4576., 3884., 3244., 2515., 2996., 3652., 4060., 4533., 5064., 5427., 5322., 5084., 4640., 4013., 3434., 2357., 2660., 3076., 3343., 3663., 4030., 4273., 4069., 3788., 3356., 3067., 2815.};
  const std::array<int, 4> in_shape = {{ 1, 13, 12, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x12x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {7996., 7985., 9064., 9085., 8708., 9161.};
  const std::array<int, 4> in_shape = {{ 1, 13, 12, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x12x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2328., 2606., 2660., 2984., 3024., 3400., 3312., 3730., 3608., 4074., 3980., 4500., 4140., 4678., 3964., 4454., 3572., 4008., 3152., 3528., 2860., 3202., 2420., 2722., 2899., 3246., 3360., 3768., 3852., 4328., 4281., 4800., 4681., 5250., 5118., 5744., 5231., 5870., 4807., 5388., 4260., 4776., 3524., 3968., 3077., 3474., 2773., 3116., 3072., 3464., 3728., 4192., 4352., 4896., 4784., 5384., 5376., 6040., 5936., 6672., 6000., 6760., 5504., 6200., 4976., 5600., 4352., 4896., 3920., 4408., 3456., 3880., 3263., 3676., 3884., 4376., 4668., 5248., 5133., 5778., 5709., 6428., 6458., 7260., 6743., 7580., 6231., 7002., 5568., 6264., 4884., 5496., 4277., 4828., 3717., 4198., 3968., 4442., 4460., 5016., 5072., 5720., 5512., 6230., 6208., 7006., 7028., 7916., 7484., 8402., 7004., 7842., 6028., 6776., 5136., 5784., 4668., 5254., 4068., 4582., 4243., 4786., 5080., 5720., 5964., 6712., 6777., 7596., 7481., 8382., 8006., 9000., 8071., 9090., 7375., 8304., 6604., 7432., 5764., 6480., 5213., 5854., 4621., 5176., 4515., 5082., 5572., 6240., 6348., 7128., 6757., 7612., 7433., 8374., 8114., 9152., 8243., 9306., 7759., 8728., 7080., 7944., 6148., 6896., 5353., 6022., 4589., 5168., 4083., 4610., 4944., 5576., 5964., 6712., 6577., 7404., 7321., 8238., 8254., 9272., 8463., 9522., 7695., 8672., 6836., 7720., 6020., 6800., 5269., 5966., 4621., 5224., 3684., 4142., 4356., 4904., 5136., 5784., 5732., 6458., 6364., 7178., 7092., 8004., 7576., 8534., 7016., 7902., 6340., 7144., 5744., 6456., 5120., 5762., 4376., 4938., 3331., 3744., 3948., 4440., 4604., 5184., 5201., 5846., 5769., 6488., 6370., 7172., 6635., 7472., 6179., 6950., 5648., 6344., 4980., 5592., 4449., 5000., 3833., 4314., 3072., 3464., 3728., 4192., 4352., 4896., 4784., 5384., 5376., 6040., 5936., 6672., 6000., 6760., 5504., 6200., 4976., 5600., 4352., 4896., 3920., 4408., 3456., 3880., 2555., 2886., 3192., 3592., 3980., 4456., 4233., 4760., 4561., 5146., 5030., 5680., 5135., 5814., 4815., 5444., 4492., 5064., 4100., 4608., 3589., 4042., 3101., 3492., 2116., 2378., 2428., 2744., 2832., 3208., 3140., 3566., 3692., 4174., 4300., 4844., 4752., 5330., 4480., 5018., 3980., 4472., 3440., 3880., 2968., 3366., 2544., 2894.};
  const std::array<int, 4> in_shape = {{ 1, 13, 12, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x12x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {8006., 9000., 8071., 9090., 8114., 9152., 8243., 9306., 8254., 9272., 8463., 9522.};
  const std::array<int, 4> in_shape = {{ 1, 13, 12, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x12x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 1978.,  2256.,  2534.,  2812.,  2244.,  2568.,  2892.,  3216.,  2600.,  2976.,  3352.,  3728.,  2894.,  3312.,  3730.,  4148.,  3150.,  3616.,  4082.,  4548.,  3504.,  4024.,  4544.,  5064.,  3790.,  4328.,  4866.,  5404.,  3646.,  4136.,  4626.,  5116.,  3124.,  3560.,  3996.,  4432.,  2600.,  2976.,  3352.,  3728.,  2370.,  2712.,  3054.,  3396.,  2090.,  2392.,  2694.,  2996.,  2491.,  2838.,  3185.,  3532.,  2888.,  3296.,  3704.,  4112.,  3292.,  3768.,  4244.,  4720.,  3723.,  4242.,  4761.,  5280.,  4025.,  4594.,  5163.,  5732.,  4330.,  4956.,  5582.,  6208.,  4415.,  5054.,  5693.,  6332.,  4201.,  4782.,  5363.,  5944.,  3812.,  4328.,  4844.,  5360.,  3116.,  3560.,  4004.,  4448.,  2781.,  3178.,  3575.,  3972.,  2531.,  2874.,  3217.,  3560.,  2616.,  3008.,  3400.,  3792.,  3280.,  3744.,  4208.,  4672.,  3808.,  4352.,  4896.,  5440.,  4168.,  4768.,  5368.,  5968.,  4776.,  5440.,  6104.,  6768.,  5248.,  5984.,  6720.,  7456.,  5160.,  5920.,  6680.,  7440.,  4744.,  5440.,  6136.,  6832.,  4336.,  4960.,  5584.,  6208.,  3808.,  4352.,  4896.,  5440.,  3448.,  3936.,  4424.,  4912.,  3096.,  3520.,  3944.,  4368.,  2753.,  3166.,  3579.,  3992.,  3276.,  3768.,  4260.,  4752.,  4052.,  4632.,  5212.,  5792.,  4405.,  5050.,  5695.,  6340.,  4891.,  5610.,  6329.,  7048.,  5634.,  6436.,  7238.,  8040.,  5881.,  6718.,  7555.,  8392.,  5339.,  6110.,  6881.,  7652.,  4776.,  5472.,  6168.,  6864.,  4260.,  4872.,  5484.,  6096.,  3699.,  4250.,  4801.,  5352.,  3321.,  3802.,  4283.,  4764.,  3414.,  3888.,  4362.,  4836.,  3884.,  4440.,  4996.,  5552.,  4504.,  5152.,  5800.,  6448.,  4978.,  5696.,  6414.,  7132.,  5410.,  6208.,  7006.,  7804.,  6000.,  6888.,  7776.,  8664.,  6498.,  7416.,  8334.,  9252.,  6146.,  6984.,  7822.,  8660.,  5292.,  6040.,  6788.,  7536.,  4504.,  5152.,  5800.,  6448.,  4094.,  4680.,  5266.,  5852.,  3510.,  4024.,  4538.,  5052.,  3927.,  4470.,  5013.,  5556.,  4560.,  5200.,  5840.,  6480.,  5196.,  5944.,  6692.,  7440.,  5903.,  6722.,  7541.,  8360.,  6413.,  7314.,  8215.,  9116.,  6922.,  7916.,  8910.,  9904.,  7091.,  8110.,  9129., 10148.,  6701.,  7630.,  8559.,  9488.,  6076.,  6904.,  7732.,  8560.,  5020.,  5736.,  6452.,  7168.,  4537.,  5178.,  5819.,  6460.,  4079.,  4634.,  5189.,  5744.,  3743.,  4310.,  4877.,  5444.,  4684.,  5352.,  6020.,  6688.,  5420.,  6200.,  6980.,  7760.,  5891.,  6746.,  7601.,  8456.,  6725.,  7666.,  8607.,  9548.,  7350.,  8388.,  9426., 10464.,  7135.,  8198.,  9261., 10324.,  6597.,  7566.,  8535.,  9504.,  6032.,  6896.,  7760.,  8624.,  5244.,  5992.,  6740.,  7488.,  4661.,  5330.,  5999.,  6668.,  4247.,  4826.,  5405.,  5984.,  3495.,  4022.,  4549.,  5076.,  4168.,  4800.,  5432.,  6064.,  5196.,  5944.,  6692.,  7440.,  5623.,  6450.,  7277.,  8104.,  6205.,  7122.,  8039.,  8956.,  7138.,  8156.,  9174., 10192.,  7323.,  8382.,  9441., 10500.,  6653.,  7630.,  8607.,  9584.,  6100.,  6984.,  7868.,  8752.,  5468.,  6248.,  7028.,  7808.,  4593.,  5290.,  5987.,  6684.,  4031.,  4634.,  5237.,  5840.,  3310.,  3768.,  4226.,  4684.,  3812.,  4360.,  4908.,  5456.,  4504.,  5152.,  5800.,  6448.,  5026.,  5752.,  6478.,  7204.,  5530.,  6344.,  7158.,  7972.,  6152.,  7064.,  7976.,  8888.,  6722.,  7680.,  8638.,  9596.,  6234.,  7120.,  8006.,  8892.,  5604.,  6408.,  7212.,  8016.,  5016.,  5728.,  6440.,  7152.,  4430.,  5072.,  5714.,  6356.,  3694.,  4256.,  4818.,  5380.,  3017.,  3430.,  3843.,  4256.,  3532.,  4024.,  4516.,  5008.,  4052.,  4632.,  5212.,  5792.,  4669.,  5314.,  5959.,  6604.,  5155.,  5874.,  6593.,  7312.,  5634.,  6436.,  7238.,  8040.,  5873.,  6710.,  7547.,  8384.,  5475.,  6246.,  7017.,  7788.,  5000.,  5696.,  6392.,  7088.,  4324.,  4936.,  5548.,  6160.,  3915.,  4466.,  5017.,  5568.,  3425.,  3906.,  4387.,  4868.,  2616.,  3008.,  3400.,  3792.,  3280.,  3744.,  4208.,  4672.,  3808.,  4352.,  4896.,  5440.,  4168.,  4768.,  5368.,  5968.,  4776.,  5440.,  6104.,  6768.,  5248.,  5984.,  6720.,  7456.,  5160.,  5920.,  6680.,  7440.,  4744.,  5440.,  6136.,  6832.,  4336.,  4960.,  5584.,  6208.,  3808.,  4352.,  4896.,  5440.,  3448.,  3936.,  4424.,  4912.,  3096.,  3520.,  3944.,  4368.,  2187.,  2518.,  2849.,  3180.,  2624.,  3024.,  3424.,  3824.,  3292.,  3768.,  4244.,  4720.,  3571.,  4098.,  4625.,  5152.,  3945.,  4530.,  5115.,  5700.,  4546.,  5196.,  5846.,  6496.,  4647.,  5326.,  6005.,  6684.,  4281.,  4910.,  5539.,  6168.,  3964.,  4536.,  5108.,  5680.,  3564.,  4072.,  4580.,  5088.,  2965.,  3418.,  3871.,  4324.,  2611.,  3002.,  3393.,  3784.,  1874.,  2136.,  2398.,  2660.,  2172.,  2488.,  2804.,  3120.,  2600.,  2976.,  3352.,  3728.,  2942.,  3368.,  3794.,  4220.,  3270.,  3752.,  4234.,  4716.,  3656.,  4200.,  4744.,  5288.,  4014.,  4592.,  5170.,  5748.,  3734.,  4272.,  4810.,  5348.,  3436.,  3928.,  4420.,  4912.,  3112.,  3552.,  3992.,  4432.,  2706.,  3104.,  3502.,  3900.,  2274.,  2624.,  2974.,  3324.};
  const std::array<int, 4> in_shape = {{ 1, 13, 12, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x12x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6922.,  7916.,  8910.,  9904.,  7091.,  8110.,  9129., 10148.,  7350.,  8388.,  9426., 10464.,  7135.,  8198.,  9261., 10324.,  7138.,  8156.,  9174., 10192.,  7323.,  8382.,  9441., 10500.};
  const std::array<int, 4> in_shape = {{ 1, 13, 12, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x12x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 5096.,  6304.,  7280.,  7560.,  8072.,  8576.,  9188.,  9024.,  8308.,  7280.,  6644.,  5776.,  5582.,  6519.,  7784.,  8681.,  9666., 11003., 11785., 10862.,  9691.,  8008.,  6973.,  6290.,  6416.,  7776.,  9280.,  9968., 11056., 12288., 13104., 12144., 10784.,  9280.,  8592.,  7504.,  7166.,  8651., 10552., 11597., 12386., 13695., 14537., 13510., 12131., 10392.,  9517.,  8554.,  8216.,  9688., 11408., 12032., 13496., 15288., 16596., 15984., 14084., 11664., 10580.,  9200.,  8286., 10215., 12680., 14217., 15650., 17227., 17841., 16206., 14387., 12392., 11333., 10274.,  9262., 11071., 12680., 13249., 14706., 16531., 17913., 17246., 15403., 13160., 11805., 10162.,  8286., 10215., 12680., 14217., 15650., 17227., 17841., 16206., 14387., 12392., 11333., 10274.,  8112., 10012., 11664., 12236., 13360., 14764., 15864., 14904., 13712., 12048., 10824.,  9288.,  6934.,  8399., 10296., 11225., 12378., 14003., 14637., 13326., 11951., 10264.,  9185.,  8002.,  6416.,  7776.,  9280.,  9968., 11056., 12288., 13104., 12144., 10784.,  9280.,  8592.,  7504.,  5374.,  6655.,  8296.,  8785.,  9330., 10195., 10625., 10142.,  9443.,  8264.,  7509.,  6578.,  4768.,  5612.,  6512.,  6972.,  8160.,  9324., 10016.,  9432.,  8312.,  6896.,  6016.,  5128.};
  const std::array<int, 4> in_shape = {{ 1, 13, 12, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x12x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17227., 17841., 16531., 17913., 17227., 17841.};
  const std::array<int, 4> in_shape = {{ 1, 13, 12, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x12x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4428.,  4992.,  5370.,  6048.,  6448.,  7264.,  7054.,  7936.,  7908.,  8880.,  8530.,  9616.,  9106., 10264.,  8948., 10016.,  7902.,  8856.,  6448.,  7264.,  5946.,  6696.,  5468.,  6128.,  5178.,  5820.,  6127.,  6910.,  7512.,  8464.,  8277.,  9298.,  8934., 10052., 10011., 11254., 10467., 11794.,  9934., 11164.,  9189., 10294.,  7704.,  8656.,  6679.,  7546.,  6082.,  6836.,  6064.,  6816.,  7416.,  8320.,  8768.,  9856.,  9352., 10528., 10448., 11744., 11544., 12992., 12312., 13856., 11472., 12896., 10120., 11392.,  8768.,  9856.,  8184.,  9184.,  7088.,  7968.,  6654.,  7484.,  7973.,  8982.,  9832., 11056., 10871., 12186., 11570., 13012., 12953., 14558., 13889., 15602., 13050., 14636., 11591., 13014.,  9768., 10992.,  8877.,  9994.,  8166.,  9140.,  7460.,  8400.,  9078., 10208., 10832., 12192., 11730., 13200., 13132., 14752., 14302., 16112., 15262., 17192., 14684., 16464., 12962., 14552., 10832., 12192., 10038., 11288.,  9012., 10112.,  8210.,  9228.,  9707., 10942., 11896., 13392., 13081., 14690., 14158., 15924., 15911., 17878., 16751., 18850., 15670., 17612., 14377., 16118., 12088., 13584., 10643., 12010.,  9626., 10820.,  8338.,  9388., 10123., 11374., 11896., 13392., 12921., 14546., 14542., 16340., 16007., 18022., 16847., 18994., 15926., 17900., 14089., 15846., 12088., 13584., 11059., 12442.,  9882., 11108.,  8210.,  9228.,  9707., 10942., 11896., 13392., 13081., 14690., 14158., 15924., 15911., 17878., 16751., 18850., 15670., 17612., 14377., 16118., 12088., 13584., 10643., 12010.,  9626., 10820.,  7492.,  8432.,  9214., 10344., 10832., 12192., 11626., 13096., 13164., 14784., 14438., 16248., 15110., 17040., 13964., 15744., 12714., 14304., 11088., 12448., 10014., 11264.,  8676.,  9776.,  6686.,  7516.,  7981.,  8990.,  9832., 11056., 10639., 11954., 11602., 13044., 13217., 14822., 13865., 15578., 12586., 14172., 11471., 12894., 10024., 11248.,  8725.,  9842.,  7574.,  8548.,  6064.,  6816.,  7416.,  8320.,  8768.,  9856.,  9352., 10528., 10448., 11744., 11544., 12992., 12312., 13856., 11472., 12896., 10120., 11392.,  8768.,  9856.,  8184.,  9184.,  7088.,  7968.,  5178.,  5820.,  6127.,  6910.,  7512.,  8464.,  8277.,  9298.,  8934., 10052., 10011., 11254., 10467., 11794.,  9934., 11164.,  9189., 10294.,  7704.,  8656.,  6679.,  7546.,  6082.,  6836.,  4460.,  5024.,  5506.,  6184.,  6448.,  7264.,  6950.,  7832.,  7940.,  8912.,  8666.,  9752.,  8954., 10112.,  8228.,  9296.,  7654.,  8608.,  6704.,  7520.,  5922.,  6672.,  5132.,  5792.};
  const std::array<int, 4> in_shape = {{ 1, 13, 12, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x12x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {15911., 17878., 16751., 18850., 16007., 18022., 16847., 18994., 15911., 17878., 16751., 18850.};
  const std::array<int, 4> in_shape = {{ 1, 13, 12, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x12x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4020.,  4584.,  5148.,  5712.,  5022.,  5700.,  6378.,  7056.,  5808.,  6624.,  7440.,  8256.,  6090.,  6972.,  7854.,  8736.,  6924.,  7896.,  8868.,  9840.,  7542.,  8628.,  9714., 10800.,  8046.,  9204., 10362., 11520.,  7596.,  8664.,  9732., 10800.,  6594.,  7548.,  8502.,  9456.,  5808.,  6624.,  7440.,  8256.,  5526.,  6276.,  7026.,  7776.,  4692.,  5352.,  6012.,  6672.,  4530.,  5172.,  5814.,  6456.,  5327.,  6110.,  6893.,  7676.,  6712.,  7664.,  8616.,  9568.,  7517.,  8538.,  9559., 10580.,  7886.,  9004., 10122., 11240.,  9083., 10326., 11569., 12812.,  9527., 10854., 12181., 13508.,  8830., 10060., 11290., 12520.,  7929.,  9034., 10139., 11244.,  6840.,  7792.,  8744.,  9696.,  5835.,  6702.,  7569.,  8436.,  5410.,  6164.,  6918.,  7672.,  5360.,  6112.,  6864.,  7616.,  6696.,  7600.,  8504.,  9408.,  7744.,  8832.,  9920., 11008.,  8120.,  9296., 10472., 11648.,  9232., 10528., 11824., 13120., 10056., 11504., 12952., 14400., 10728., 12272., 13816., 15360., 10128., 11552., 12976., 14400.,  8792., 10064., 11336., 12608.,  7744.,  8832.,  9920., 11008.,  7368.,  8368.,  9368., 10368.,  6256.,  7136.,  8016.,  8896.,  5870.,  6700.,  7530.,  8360.,  6873.,  7882.,  8891.,  9900.,  8648.,  9872., 11096., 12320.,  9675., 10990., 12305., 13620., 10194., 11636., 13078., 14520., 11725., 13330., 14935., 16540., 12337., 14050., 15763., 17476., 11362., 12948., 14534., 16120., 10255., 11678., 13101., 14524.,  8776., 10000., 11224., 12448.,  7549.,  8666.,  9783., 10900.,  6974.,  7948.,  8922.,  9896.,  6700.,  7640.,  8580.,  9520.,  8370.,  9500., 10630., 11760.,  9680., 11040., 12400., 13760., 10150., 11620., 13090., 14560., 11540., 13160., 14780., 16400., 12570., 14380., 16190., 18000., 13410., 15340., 17270., 19200., 12660., 14440., 16220., 18000., 10990., 12580., 14170., 15760.,  9680., 11040., 12400., 13760.,  9210., 10460., 11710., 12960.,  7820.,  8920., 10020., 11120.,  7210.,  8228.,  9246., 10264.,  8419.,  9654., 10889., 12124., 10584., 12080., 13576., 15072., 11833., 13442., 15051., 16660., 12502., 14268., 16034., 17800., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13894., 15836., 17778., 19720., 12581., 14322., 16063., 17804., 10712., 12208., 13704., 15200.,  9263., 10630., 11997., 13364.,  8538.,  9732., 10926., 12120.,  7434.,  8484.,  9534., 10584.,  9235., 10486., 11737., 12988., 10584., 12080., 13576., 15072., 11241., 12866., 14491., 16116., 12726., 14524., 16322., 18120., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14118., 16092., 18066., 20040., 11989., 13746., 15503., 17260., 10712., 12208., 13704., 15200., 10079., 11462., 12845., 14228.,  8762.,  9988., 11214., 12440.,  7210.,  8228.,  9246., 10264.,  8419.,  9654., 10889., 12124., 10584., 12080., 13576., 15072., 11833., 13442., 15051., 16660., 12502., 14268., 16034., 17800., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13894., 15836., 17778., 19720., 12581., 14322., 16063., 17804., 10712., 12208., 13704., 15200.,  9263., 10630., 11997., 13364.,  8538.,  9732., 10926., 12120.,  6700.,  7640.,  8580.,  9520.,  8370.,  9500., 10630., 11760.,  9680., 11040., 12400., 13760., 10150., 11620., 13090., 14560., 11540., 13160., 14780., 16400., 12570., 14380., 16190., 18000., 13410., 15340., 17270., 19200., 12660., 14440., 16220., 18000., 10990., 12580., 14170., 15760.,  9680., 11040., 12400., 13760.,  9210., 10460., 11710., 12960.,  7820.,  8920., 10020., 11120.,  5870.,  6700.,  7530.,  8360.,  6873.,  7882.,  8891.,  9900.,  8648.,  9872., 11096., 12320.,  9675., 10990., 12305., 13620., 10194., 11636., 13078., 14520., 11725., 13330., 14935., 16540., 12337., 14050., 15763., 17476., 11362., 12948., 14534., 16120., 10255., 11678., 13101., 14524.,  8776., 10000., 11224., 12448.,  7549.,  8666.,  9783., 10900.,  6974.,  7948.,  8922.,  9896.,  5360.,  6112.,  6864.,  7616.,  6696.,  7600.,  8504.,  9408.,  7744.,  8832.,  9920., 11008.,  8120.,  9296., 10472., 11648.,  9232., 10528., 11824., 13120., 10056., 11504., 12952., 14400., 10728., 12272., 13816., 15360., 10128., 11552., 12976., 14400.,  8792., 10064., 11336., 12608.,  7744.,  8832.,  9920., 11008.,  7368.,  8368.,  9368., 10368.,  6256.,  7136.,  8016.,  8896.,  4530.,  5172.,  5814.,  6456.,  5327.,  6110.,  6893.,  7676.,  6712.,  7664.,  8616.,  9568.,  7517.,  8538.,  9559., 10580.,  7886.,  9004., 10122., 11240.,  9083., 10326., 11569., 12812.,  9527., 10854., 12181., 13508.,  8830., 10060., 11290., 12520.,  7929.,  9034., 10139., 11244.,  6840.,  7792.,  8744.,  9696.,  5835.,  6702.,  7569.,  8436.,  5410.,  6164.,  6918.,  7672.,  4020.,  4584.,  5148.,  5712.,  5022.,  5700.,  6378.,  7056.,  5808.,  6624.,  7440.,  8256.,  6090.,  6972.,  7854.,  8736.,  6924.,  7896.,  8868.,  9840.,  7542.,  8628.,  9714., 10800.,  8046.,  9204., 10362., 11520.,  7596.,  8664.,  9732., 10800.,  6594.,  7548.,  8502.,  9456.,  5808.,  6624.,  7440.,  8256.,  5526.,  6276.,  7026.,  7776.,  4692.,  5352.,  6012.,  6672.};
  const std::array<int, 4> in_shape = {{ 1, 13, 12, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x12x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444.};
  const std::array<int, 4> in_shape = {{ 1, 13, 12, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x12x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.};
  const std::array<int, 4> in_shape = {{ 1, 13, 12, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x12x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {10150., 10590., 10150., 10590., 10150., 10590.};
  const std::array<int, 4> in_shape = {{ 1, 13, 12, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x12x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.};
  const std::array<int, 4> in_shape = {{ 1, 13, 12, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x12x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.};
  const std::array<int, 4> in_shape = {{ 1, 13, 12, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x12x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.};
  const std::array<int, 4> in_shape = {{ 1, 13, 12, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x12x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.};
  const std::array<int, 4> in_shape = {{ 1, 13, 12, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x13x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2320., 2630., 2976., 3528., 4104., 4746., 5163., 5148., 4784., 4266., 3584., 2872., 2408., 2876., 3079., 3336., 3768., 4368., 5049., 5056., 5079., 4818., 4744., 4304., 3889., 3298., 3152., 3568., 4256., 4824., 5440., 5888., 5860., 5784., 5216., 4672., 4080., 3544., 3168., 4034., 4360., 4912., 5409., 6098., 6890., 6994., 6986., 6388., 5691., 5000., 4244., 3480., 4504., 5078., 5840., 6428., 7088., 7602., 7429., 7336., 6920., 6290., 5728., 4988., 4336., 4440., 5393., 6232., 7282., 8020., 8867., 8712., 8557., 7542., 6702., 5728., 4967., 4382., 4539., 5176., 5908., 6724., 7869., 8612., 8681., 8654., 8025., 7186., 6260., 5162., 4319., 4622., 5359., 6144., 6886., 7574., 8373., 8410., 8607., 7788., 7062., 6280., 5453., 4704., 4024., 4600., 5424., 6326., 7136., 7780., 7789., 7686., 7064., 6312., 5616., 4986., 4416., 3616., 4200., 4728., 5463., 6028., 6670., 6756., 6970., 6498., 5937., 5296., 4584., 3922., 3136., 3624., 4256., 4704., 5232., 5832., 5844., 5728., 5248., 4712., 4208., 3856., 3552., 2898., 3361., 3920., 4520., 4930., 5399., 5106., 5021., 4520., 4004., 3384., 2987., 2628., 2720., 3020., 3616., 3910., 4264., 4672., 4691., 4726., 4384., 3820., 3280., 2786., 2328.};
  const std::array<int, 4> in_shape = {{ 1, 13, 13, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x13x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {8867., 8712., 8557., 8612., 8681., 8654., 8373., 8410., 8607.};
  const std::array<int, 4> in_shape = {{ 1, 13, 13, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x13x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2336., 2624., 2719., 3052., 3136., 3520., 3495., 3936., 3832., 4320., 4247., 4788., 4535., 5094., 4487., 5048., 4244., 4752., 3747., 4212., 3184., 3600., 2695., 3056., 2500., 2816., 2783., 3112., 3043., 3422., 3356., 3792., 3836., 4336., 4357., 4912., 5177., 5794., 5098., 5728., 5067., 5694., 4567., 5140., 4288., 4816., 3748., 4224., 3345., 3762., 2901., 3268., 3120., 3520., 3580., 4032., 4320., 4832., 4684., 5264., 5152., 5792., 5628., 6336., 5676., 6392., 5644., 6352., 5328., 5968., 4716., 5296., 4192., 4704., 3564., 4016., 3104., 3504., 3887., 4356., 4408., 4944., 4892., 5504., 5433., 6114., 5901., 6644., 6614., 7428., 6547., 7364., 6528., 7332., 5843., 6568., 5145., 5798., 4612., 5184., 4214., 4712., 3457., 3888., 4072., 4592., 4693., 5292., 5488., 6176., 6133., 6904., 6960., 7808., 7469., 8404., 7541., 8474., 7277., 8192., 6692., 7520., 5865., 6612., 5280., 5936., 4557., 5128., 3972., 4464., 4247., 4800., 5249., 5890., 5868., 6608., 6642., 7476., 7341., 8264., 8183., 9206., 8232., 9264., 8297., 9322., 7527., 8460., 6798., 7644., 5876., 6624., 5087., 5742., 4405., 4972., 4643., 5206., 5206., 5856., 5852., 6600., 6447., 7288., 7481., 8410., 8100., 9128., 8101., 9122., 7910., 8924., 7415., 8338., 6703., 7540., 6100., 6840., 5116., 5764., 4445., 5006., 4495., 5068., 5451., 6110., 6188., 6944., 6924., 7772., 7333., 8268., 8049., 9082., 7986., 9012., 8243., 9262., 7383., 8312., 6672., 7500., 5812., 6544., 5081., 5722., 4357., 4912., 3828., 4320., 4415., 4992., 5232., 5904., 6083., 6844., 6948., 7792., 7535., 8472., 7715., 8650., 7415., 8348., 6632., 7488., 5903., 6672., 5456., 6144., 4847., 5460., 4272., 4800., 3411., 3840., 4060., 4560., 4636., 5216., 5297., 5950., 5753., 6488., 6370., 7196., 6283., 7112., 6452., 7284., 6007., 6772., 5633., 6322., 4948., 5568., 4322., 4880., 3741., 4228., 3152., 3536., 3508., 3952., 4000., 4512., 4372., 4944., 5008., 5648., 5764., 6480., 5924., 6632., 5812., 6528., 5328., 5984., 4676., 5264., 4144., 4672., 3748., 4224., 3424., 3840., 2687., 3044., 3145., 3554., 3692., 4160., 4266., 4784., 4533., 5108., 5119., 5758., 4728., 5348., 4737., 5354., 4367., 4928., 4118., 4616., 3668., 4112., 3287., 3686., 2749., 3096., 2628., 2944., 2989., 3352., 3632., 4048., 3617., 4076., 3748., 4256., 4141., 4704., 4193., 4742., 4261., 4812., 4032., 4528., 3445., 3880., 3104., 3488., 2765., 3108., 2296., 2592.};
  const std::array<int, 4> in_shape = {{ 1, 13, 13, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x13x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {8183., 9206., 8232., 9264., 8297., 9322., 8100., 9128., 8101., 9122., 7910., 8924., 8049., 9082., 7986., 9012., 8243., 9262.};
  const std::array<int, 4> in_shape = {{ 1, 13, 13, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x13x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2000.,  2288.,  2576.,  2864.,  2241.,  2574.,  2907.,  3240.,  2624.,  3008.,  3392.,  3776.,  2933.,  3374.,  3815.,  4256.,  3352.,  3840.,  4328.,  4816.,  3681.,  4222.,  4763.,  5304.,  3967.,  4526.,  5085.,  5644.,  3853.,  4414.,  4975.,  5536.,  3740.,  4248.,  4756.,  5264.,  3221.,  3686.,  4151.,  4616.,  2816.,  3232.,  3648.,  4064.,  2437.,  2798.,  3159.,  3520.,  2316.,  2632.,  2948.,  3264.,  2245.,  2574.,  2903.,  3232.,  2843.,  3222.,  3601.,  3980.,  3044.,  3480.,  3916.,  4352.,  3396.,  3896.,  4396.,  4896.,  3711.,  4266.,  4821.,  5376.,  4361.,  4978.,  5595.,  6212.,  4318.,  4948.,  5578.,  6208.,  4387.,  5014.,  5641.,  6268.,  3985.,  4558.,  5131.,  5704.,  3888.,  4416.,  4944.,  5472.,  3276.,  3752.,  4228.,  4704.,  2817.,  3234.,  3651.,  4068.,  2507.,  2874.,  3241.,  3608.,  2832.,  3232.,  3632.,  4032.,  3156.,  3608.,  4060.,  4512.,  3776.,  4288.,  4800.,  5312.,  4020.,  4600.,  5180.,  5760.,  4608.,  5248.,  5888.,  6528.,  4948.,  5656.,  6364.,  7072.,  5100.,  5816.,  6532.,  7248.,  4852.,  5560.,  6268.,  6976.,  4576.,  5216.,  5856.,  6496.,  4084.,  4664.,  5244.,  5824.,  3776.,  4288.,  4800.,  5312.,  3124.,  3576.,  4028.,  4480.,  2800.,  3200.,  3600.,  4000.,  3177.,  3646.,  4115.,  4584.,  3736.,  4272.,  4808.,  5344.,  4212.,  4824.,  5436.,  6048.,  4937.,  5618.,  6299.,  6980.,  5123.,  5866.,  6609.,  7352.,  5774.,  6588.,  7402.,  8216.,  5605.,  6422.,  7239.,  8056.,  5804.,  6608.,  7412.,  8216.,  5025.,  5750.,  6475.,  7200.,  4565.,  5218.,  5871.,  6524.,  3948.,  4520.,  5092.,  5664.,  3738.,  4236.,  4734.,  5232.,  3075.,  3506.,  3937.,  4368.,  3640.,  4160.,  4680.,  5200.,  4019.,  4618.,  5217.,  5816.,  4720.,  5408.,  6096.,  6784.,  5239.,  6010.,  6781.,  7552.,  6016.,  6864.,  7712.,  8560.,  6387.,  7322.,  8257.,  9192.,  6661.,  7594.,  8527.,  9460.,  6279.,  7194.,  8109.,  9024.,  5900.,  6728.,  7556.,  8384.,  5095.,  5842.,  6589.,  7336.,  4592.,  5248.,  5904.,  6560.,  3951.,  4522.,  5093.,  5664.,  3596.,  4088.,  4580.,  5072.,  3765.,  4318.,  4871.,  5424.,  4561.,  5202.,  5843.,  6484.,  5076.,  5816.,  6556.,  7296.,  5762.,  6596.,  7430.,  8264.,  6239.,  7162.,  8085.,  9008.,  7183.,  8206.,  9229., 10252.,  7080.,  8112.,  9144., 10176.,  7281.,  8306.,  9331., 10356.,  6489.,  7422.,  8355.,  9288.,  6046.,  6892.,  7738.,  8584.,  5084.,  5832.,  6580.,  7328.,  4495.,  5150.,  5805.,  6460.,  3891.,  4458.,  5025.,  5592.,  4083.,  4646.,  5209.,  5772.,  4546.,  5196.,  5846.,  6496.,  5356.,  6104.,  6852.,  7600.,  5669.,  6510.,  7351.,  8192.,  6593.,  7522.,  8451.,  9380.,  7076.,  8104.,  9132., 10160.,  7149.,  8170.,  9191., 10212.,  6838.,  7852.,  8866.,  9880.,  6611.,  7534.,  8457.,  9380.,  5913.,  6750.,  7587.,  8424.,  5348.,  6088.,  6828.,  7568.,  4336.,  4984.,  5632.,  6280.,  3977.,  4538.,  5099.,  5660.,  3825.,  4398.,  4971.,  5544.,  4595.,  5254.,  5913.,  6572.,  5316.,  6072.,  6828.,  7584.,  6152.,  7000.,  7848.,  8696.,  6371.,  7306.,  8241.,  9176.,  7289.,  8322.,  9355., 10388.,  6978.,  8004.,  9030., 10056.,  7307.,  8326.,  9345., 10364.,  6365.,  7294.,  8223.,  9152.,  5908.,  6736.,  7564.,  8392.,  5100.,  5832.,  6564.,  7296.,  4561.,  5202.,  5843.,  6484.,  3807.,  4362.,  4917.,  5472.,  3420.,  3912.,  4404.,  4896.,  3805.,  4382.,  4959.,  5536.,  4736.,  5408.,  6080.,  6752.,  5341.,  6102.,  6863.,  7624.,  5964.,  6808.,  7652.,  8496.,  6341.,  7278.,  8215.,  9152.,  6607.,  7542.,  8477.,  9412.,  6425.,  7358.,  8291.,  9224.,  5992.,  6848.,  7704.,  8560.,  5181.,  5950.,  6719.,  7488.,  4912.,  5600.,  6288.,  6976.,  4265.,  4878.,  5491.,  6104.,  3712.,  4240.,  4768.,  5296.,  2969.,  3398.,  3827.,  4256.,  3460.,  3960.,  4460.,  4960.,  3860.,  4440.,  5020.,  5600.,  4565.,  5218.,  5871.,  6524.,  5107.,  5842.,  6577.,  7312.,  5834.,  6660.,  7486.,  8312.,  5657.,  6486.,  7315.,  8144.,  5736.,  6568.,  7400.,  8232.,  5201.,  5966.,  6731.,  7496.,  4817.,  5506.,  6195.,  6884.,  4188.,  4808.,  5428.,  6048.,  3830.,  4388.,  4946.,  5504.,  3331.,  3818.,  4305.,  4792.,  2784.,  3168.,  3552.,  3936.,  3148.,  3592.,  4036.,  4480.,  3648.,  4160.,  4672.,  5184.,  3788.,  4360.,  4932.,  5504.,  4448.,  5088.,  5728.,  6368.,  4956.,  5672.,  6388.,  7104.,  5092.,  5800.,  6508.,  7216.,  4924.,  5640.,  6356.,  7072.,  4688.,  5344.,  6000.,  6656.,  4124.,  4712.,  5300.,  5888.,  3664.,  4192.,  4720.,  5248.,  3212.,  3688.,  4164.,  4640.,  2912.,  3328.,  3744.,  4160.,  2361.,  2718.,  3075.,  3432.,  2937.,  3346.,  3755.,  4164.,  3300.,  3768.,  4236.,  4704.,  3758.,  4276.,  4794.,  5312.,  3867.,  4442.,  5017.,  5592.,  4495.,  5134.,  5773.,  6412.,  4164.,  4784.,  5404.,  6024.,  4361.,  4978.,  5595.,  6212.,  3901.,  4462.,  5023.,  5584.,  3674.,  4172.,  4670.,  5168.,  3148.,  3592.,  4036.,  4480.,  2735.,  3134.,  3533.,  3932.,  2367.,  2714.,  3061.,  3408.,  2108.,  2424.,  2740.,  3056.,  2367.,  2730.,  3093.,  3456.,  3072.,  3488.,  3904.,  4320.,  3239.,  3698.,  4157.,  4616.,  3564.,  4072.,  4580.,  5088.,  3783.,  4346.,  4909.,  5472.,  3901.,  4450.,  4999.,  5548.,  3779.,  4330.,  4881.,  5432.,  3424.,  3920.,  4416.,  4912.,  2951.,  3386.,  3821.,  4256.,  2816.,  3200.,  3584.,  3968.,  2403.,  2746.,  3089.,  3432.,  2040.,  2336.,  2632.,  2928.};
  const std::array<int, 4> in_shape = {{ 1, 13, 13, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x13x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 7183.,  8206.,  9229., 10252.,  7080.,  8112.,  9144., 10176.,  7281.,  8306.,  9331., 10356.,  7076.,  8104.,  9132., 10160.,  7149.,  8170.,  9191., 10212.,  6838.,  7852.,  8866.,  9880.,  7289.,  8322.,  9355., 10388.,  6978.,  8004.,  9030., 10056.,  7307.,  8326.,  9345., 10364.};
  const std::array<int, 4> in_shape = {{ 1, 13, 13, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x13x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 5020.,  6046.,  7312.,  7922.,  8852.,  9270.,  9466.,  9278.,  8708.,  7866.,  7312.,  5830.,  5036.,  6298.,  7353.,  7880.,  8847.,  9686., 11365., 10979., 11361.,  9902.,  9235.,  7880.,  6869.,  5906.,  6800.,  7816.,  9408., 10488., 12016., 12904., 13064., 12520., 11760., 10360.,  9408.,  7944.,  7056.,  7870.,  9363., 10424., 11957., 12514., 14087., 13825., 14459., 13210., 12081., 10424.,  9335.,  7350.,  8660.,  9746., 11504., 12462., 14364., 15802., 16598., 15858., 14556., 12502., 11504., 10106.,  8900.,  8866., 11181., 12712., 14731., 16030., 17945., 17407., 17445., 15910., 14751., 12712., 11049.,  8986., 10230., 11299., 12616., 13581., 16090., 17175., 17421., 17139., 16194., 14081., 12616., 10687.,  9694.,  9226., 11353., 12712., 14751., 15782., 17445., 17035., 17841., 15566., 14371., 12712., 11285.,  9570.,  8340.,  9570., 11504., 13038., 14940., 15834., 16550., 15858., 14444., 12566., 11504.,  9770.,  8708.,  8166.,  9743., 10424., 11673., 12394., 14051., 13709., 14087., 12514., 11957., 10424.,  9363.,  7870.,  6800.,  7816.,  9408., 10488., 12016., 12904., 13064., 12520., 11760., 10360.,  9408.,  7944.,  7056.,  5906.,  6869.,  7880.,  9235.,  9902., 11361., 10879., 11165.,  9894.,  8951.,  7880.,  7249.,  6090.,  5468.,  5982.,  7312.,  7586.,  8148.,  8934.,  9338.,  9358.,  8900.,  7690.,  7312.,  6278.,  5148.};
  const std::array<int, 4> in_shape = {{ 1, 13, 13, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x13x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17945., 17407., 17445., 17175., 17421., 17139., 17445., 17035., 17841.};
  const std::array<int, 4> in_shape = {{ 1, 13, 13, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x13x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4812.,  5416.,  5394.,  6108.,  6768.,  7584.,  7046.,  7956.,  8036.,  9032.,  8554.,  9660.,  9386., 10500.,  8938., 10060.,  8628.,  9640.,  7190.,  8100.,  6768.,  7584.,  5522.,  6220.,  4892.,  5480.,  5402.,  6100.,  6919.,  7746.,  7448.,  8400.,  8685.,  9758.,  9158., 10348., 10803., 12106., 10043., 11334., 10307., 11586.,  9102., 10268.,  8965., 10022.,  7448.,  8400.,  6647.,  7466.,  5378.,  6068.,  6768.,  7584.,  7576.,  8528.,  9024., 10112.,  9448., 10672., 11280., 12640., 11832., 13328., 12408., 13904., 11576., 13072., 11280., 12640.,  9704., 10928.,  9024., 10112.,  7320.,  8272.,  6768.,  7584.,  6974.,  7868.,  8709.,  9766.,  9576., 10800., 11415., 12778., 11762., 13268., 13561., 15214., 12897., 14562., 14025., 15702., 12122., 13652., 11343., 12722.,  9576., 10800.,  9013., 10078.,  7238.,  8140.,  8036.,  9032.,  9022., 10196., 11280., 12640., 11898., 13420., 13964., 15656., 14502., 16372., 15590., 17452., 14630., 16484., 13916., 15592., 11914., 13436., 11280., 12640.,  9406., 10596.,  8500.,  9512.,  8626.,  9748., 10739., 12042., 11704., 13200., 13601., 15270., 14318., 16172., 17007., 19058., 16183., 18238., 17023., 19082., 14646., 16508., 14073., 15758., 11704., 13200., 10531., 11826.,  8666.,  9780.,  9490., 10620., 10267., 11574., 12280., 13776., 13001., 14698., 15758., 17636., 16215., 18286., 16479., 18522., 15655., 17702., 15542., 17396., 13441., 15122., 12280., 13776.,  9931., 11230.,  9562., 10684.,  8690.,  9828., 10691., 12002., 11704., 13200., 14001., 15694., 14446., 16316., 17023., 19082., 15943., 18006., 17295., 19362., 14582., 16460., 13705., 15382., 11704., 13200., 10739., 12042.,  8794.,  9924.,  8324.,  9336.,  8918., 10100., 11280., 12640., 12258., 13804., 13932., 15640., 14334., 16212., 15390., 17260., 14654., 16516., 14092., 15784., 11650., 13164., 11280., 12640.,  9366., 10564.,  8356.,  9384.,  7262.,  8188.,  8941., 10014.,  9576., 10800., 11343., 12722., 12050., 13588., 14113., 15814., 13417., 15130., 13681., 15374., 11786., 13316., 11415., 12778.,  9576., 10800.,  8797.,  9878.,  7222.,  8156.,  6768.,  7584.,  7576.,  8528.,  9024., 10112.,  9448., 10672., 11280., 12640., 11832., 13328., 12408., 13904., 11576., 13072., 11280., 12640.,  9704., 10928.,  9024., 10112.,  7320.,  8272.,  6768.,  7584.,  5402.,  6116.,  6647.,  7466.,  7448.,  8400.,  9053., 10134.,  9350., 10556., 10787., 12114., 10027., 11342., 10803., 12106.,  9230., 10412.,  8757.,  9822.,  7448.,  8400.,  6951.,  7794.,  5762.,  6500.,  4908.,  5528.,  5258.,  5964.,  6768.,  7584.,  7182.,  8100.,  8196.,  9208.,  8674.,  9804.,  9474., 10612.,  8994., 10140.,  8356.,  9384.,  7022.,  7940.,  6768.,  7584.,  5642.,  6364.,  5004.,  5640.};
  const std::array<int, 4> in_shape = {{ 1, 13, 13, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x13x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17007., 19058., 16183., 18238., 17023., 19082., 16215., 18286., 16479., 18522., 15655., 17702., 17023., 19082., 15943., 18006., 17295., 19362.};
  const std::array<int, 4> in_shape = {{ 1, 13, 13, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x13x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4556.,  5160.,  5764.,  6368.,  4714.,  5428.,  6142.,  6856.,  6192.,  7008.,  7824.,  8640.,  5982.,  6892.,  7802.,  8712.,  7604.,  8600.,  9596., 10592.,  7378.,  8484.,  9590., 10696.,  8458.,  9572., 10686., 11800.,  7490.,  8612.,  9734., 10856.,  7716.,  8728.,  9740., 10752.,  6110.,  7020.,  7930.,  8840.,  6192.,  7008.,  7824.,  8640.,  4602.,  5300.,  5998.,  6696.,  4444.,  5032.,  5620.,  6208.,  4666.,  5364.,  6062.,  6760.,  6227.,  7054.,  7881.,  8708.,  6328.,  7280.,  8232.,  9184.,  8089.,  9162., 10235., 11308.,  7878.,  9068., 10258., 11448.,  9839., 11142., 12445., 13748.,  8459.,  9750., 11041., 12332.,  9639., 10918., 12197., 13476.,  7742.,  8908., 10074., 11240.,  7913.,  8970., 10027., 11084.,  6328.,  7280.,  8232.,  9184.,  6203.,  7022.,  7841.,  8660.,  4578.,  5268.,  5958.,  6648.,  6192.,  7008.,  7824.,  8640.,  6328.,  7280.,  8232.,  9184.,  8256.,  9344., 10432., 11520.,  8136.,  9360., 10584., 11808., 10320., 11680., 13040., 14400.,  9944., 11440., 12936., 14432., 11352., 12848., 14344., 15840.,  9944., 11440., 12936., 14432., 10320., 11680., 13040., 14400.,  8136.,  9360., 10584., 11808.,  8256.,  9344., 10432., 11520.,  6328.,  7280.,  8232.,  9184.,  6192.,  7008.,  7824.,  8640.,  5934.,  6828.,  7722.,  8616.,  7913.,  8970., 10027., 11084.,  8136.,  9360., 10584., 11808., 10331., 11694., 13057., 14420., 10002., 11508., 13014., 14520., 12509., 14162., 15815., 17468., 11041., 12706., 14371., 16036., 12645., 14322., 15999., 17676., 10202., 11732., 13262., 14792., 10379., 11758., 13137., 14516.,  8136.,  9360., 10584., 11808.,  8001.,  9066., 10131., 11196.,  5958.,  6860.,  7762.,  8664.,  7604.,  8600.,  9596., 10592.,  7830.,  9004., 10178., 11352., 10320., 11680., 13040., 14400., 10050., 11572., 13094., 14616., 12812., 14504., 16196., 17888., 12398., 14268., 16138., 18008., 14134., 15996., 17858., 19720., 12286., 14140., 15994., 17848., 12700., 14376., 16052., 17728., 10178., 11700., 13222., 14744., 10320., 11680., 13040., 14400.,  7942.,  9132., 10322., 11512.,  7716.,  8728.,  9740., 10752.,  7426.,  8548.,  9670., 10792.,  9839., 11142., 12445., 13748.,  9944., 11440., 12936., 14432., 12685., 14354., 16023., 17692., 12350., 14204., 16058., 17912., 15515., 17566., 19617., 21668., 13607., 15662., 17717., 19772., 15539., 17598., 19657., 21716., 12438., 14300., 16162., 18024., 12605., 14290., 15975., 17660.,  9944., 11440., 12936., 14432.,  9687., 10982., 12277., 13572.,  7466.,  8580.,  9694., 10808.,  8634.,  9764., 10894., 12024.,  8507.,  9814., 11121., 12428., 11352., 12848., 14344., 15840., 11137., 12834., 14531., 16228., 14310., 16188., 18066., 19944., 13655., 15726., 17797., 19868., 15491., 17534., 19577., 21620., 13583., 15630., 17677., 19724., 14046., 15900., 17754., 19608., 11217., 12898., 14579., 16260., 11352., 12848., 14344., 15840.,  8611.,  9910., 11209., 12508.,  8418.,  9540., 10662., 11784.,  7538.,  8676.,  9814., 10952.,  9991., 11302., 12613., 13924.,  9944., 11440., 12936., 14432., 12821., 14514., 16207., 17900., 12334., 14204., 16074., 17944., 15539., 17598., 19657., 21716., 13631., 15694., 17757., 19820., 15563., 17630., 19697., 21764., 12422., 14300., 16178., 18056., 12645., 14322., 15999., 17676.,  9944., 11440., 12936., 14432.,  9839., 11142., 12445., 13748.,  7578.,  8708.,  9838., 10968.,  7716.,  8728.,  9740., 10752.,  7790.,  8972., 10154., 11336., 10320., 11680., 13040., 14400., 10250., 11796., 13342., 14888., 13052., 14760., 16468., 18176., 12486., 14364., 16242., 18120., 14222., 16092., 17962., 19832., 12374., 14236., 16098., 17960., 12940., 14632., 16324., 18016., 10026., 11540., 13054., 14568., 10320., 11680., 13040., 14400.,  7902.,  9100., 10298., 11496.,  7828.,  8856.,  9884., 10912.,  6158.,  7084.,  8010.,  8936.,  8089.,  9162., 10235., 11308.,  8136.,  9360., 10584., 11808., 10379., 11758., 13137., 14516., 10226., 11764., 13302., 14840., 12781., 14482., 16183., 17884., 11313., 13026., 14739., 16452., 12821., 14514., 16207., 17900., 10074., 11604., 13134., 14664., 10331., 11694., 13057., 14420.,  8136.,  9360., 10584., 11808.,  8177.,  9258., 10339., 11420.,  6182.,  7116.,  8050.,  8984.,  6192.,  7008.,  7824.,  8640.,  6328.,  7280.,  8232.,  9184.,  8256.,  9344., 10432., 11520.,  8136.,  9360., 10584., 11808., 10320., 11680., 13040., 14400.,  9944., 11440., 12936., 14432., 11352., 12848., 14344., 15840.,  9944., 11440., 12936., 14432., 10320., 11680., 13040., 14400.,  8136.,  9360., 10584., 11808.,  8256.,  9344., 10432., 11520.,  6328.,  7280.,  8232.,  9184.,  6192.,  7008.,  7824.,  8640.,  4650.,  5364.,  6078.,  6792.,  6203.,  7022.,  7841.,  8660.,  6328.,  7280.,  8232.,  9184.,  8177.,  9258., 10339., 11420.,  7990.,  9196., 10402., 11608., 10039., 11366., 12693., 14020.,  8659.,  9974., 11289., 12604.,  9839., 11142., 12445., 13748.,  7854.,  9036., 10218., 11400.,  8001.,  9066., 10131., 11196.,  6328.,  7280.,  8232.,  9184.,  6275.,  7118.,  7961.,  8804.,  4914.,  5652.,  6390.,  7128.,  4796.,  5416.,  6036.,  6656.,  4626.,  5332.,  6038.,  6744.,  6192.,  7008.,  7824.,  8640.,  6006.,  6924.,  7842.,  8760.,  7716.,  8728.,  9740., 10752.,  7514.,  8644.,  9774., 10904.,  8594.,  9732., 10870., 12008.,  7626.,  8772.,  9918., 11064.,  7828.,  8856.,  9884., 10912.,  6134.,  7052.,  7970.,  8888.,  6192.,  7008.,  7824.,  8640.,  4866.,  5588.,  6310.,  7032.,  4780.,  5416.,  6052.,  6688.};
  const std::array<int, 4> in_shape = {{ 1, 13, 13, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x13x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {15515., 17566., 19617., 21668., 13607., 15662., 17717., 19772., 15539., 17598., 19657., 21716., 13655., 15726., 17797., 19868., 15491., 17534., 19577., 21620., 13583., 15630., 17677., 19724., 15539., 17598., 19657., 21716., 13631., 15694., 17757., 19820., 15563., 17630., 19697., 21764.};
  const std::array<int, 4> in_shape = {{ 1, 13, 13, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x13x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3672.,  2940.,  4896.,  3780.,  6120.,  4620.,  6732.,  4620.,  6120.,  3780.,  4896.,  2940.,  3672.,  2940.,  4926.,  3920.,  6354.,  4900.,  7782.,  5390.,  7782.,  4900.,  6354.,  3920.,  4926.,  2940.,  4896.,  3920.,  6528.,  5040.,  8160.,  6160.,  8976.,  6160.,  8160.,  5040.,  6528.,  3920.,  4896.,  3780.,  6354.,  5040.,  8190.,  6300., 10026.,  6930., 10026.,  6300.,  8190.,  5040.,  6354.,  3780.,  6120.,  4900.,  8160.,  6300., 10200.,  7700., 11220.,  7700., 10200.,  6300.,  8160.,  4900.,  6120.,  4620.,  7782.,  6160., 10026.,  7700., 12270.,  8470., 12270.,  7700., 10026.,  6160.,  7782.,  4620.,  6732.,  5390.,  8976.,  6930., 11220.,  8470., 12270.,  8470., 11220.,  6930.,  8976.,  5390.,  6732.,  4620.,  7782.,  6160., 10026.,  7700., 12270.,  8470., 12270.,  7700., 10026.,  6160.,  7782.,  4620.,  6120.,  4900.,  8160.,  6300., 10200.,  7700., 11220.,  7700., 10200.,  6300.,  8160.,  4900.,  6120.,  3780.,  6354.,  5040.,  8190.,  6300., 10026.,  6930., 10026.,  6300.,  8190.,  5040.,  6354.,  3780.,  4896.,  3920.,  6528.,  5040.,  8160.,  6160.,  8976.,  6160.,  8160.,  5040.,  6528.,  3920.,  4896.,  2940.,  4926.,  3920.,  6354.,  4900.,  7782.,  5390.,  7782.,  4900.,  6354.,  3920.,  4926.,  2940.,  3672.,  2940.,  4896.,  3780.,  6120.,  4620.,  6732.,  4620.,  6120.,  3780.,  4896.,  2940.,  3672.};
  const std::array<int, 4> in_shape = {{ 1, 13, 13, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x13x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.};
  const std::array<int, 4> in_shape = {{ 1, 13, 13, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x13x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2952.,  3600.,  3444.,  4200.,  3936.,  4800.,  4428.,  5400.,  4920.,  6000.,  5412.,  6600.,  5412.,  6600.,  5412.,  6600.,  4920.,  6000.,  4428.,  5400.,  3936.,  4800.,  3444.,  4200.,  2952.,  3600.,  3444.,  4200.,  3986.,  4860.,  4592.,  5600.,  5134.,  6260.,  5740.,  7000.,  6282.,  7660.,  6346.,  7740.,  6282.,  7660.,  5740.,  7000.,  5134.,  6260.,  4592.,  5600.,  3986.,  4860.,  3444.,  4200.,  3936.,  4800.,  4592.,  5600.,  5248.,  6400.,  5904.,  7200.,  6560.,  8000.,  7216.,  8800.,  7216.,  8800.,  7216.,  8800.,  6560.,  8000.,  5904.,  7200.,  5248.,  6400.,  4592.,  5600.,  3936.,  4800.,  4428.,  5400.,  5134.,  6260.,  5904.,  7200.,  6610.,  8060.,  7380.,  9000.,  8086.,  9860.,  8150.,  9940.,  8086.,  9860.,  7380.,  9000.,  6610.,  8060.,  5904.,  7200.,  5134.,  6260.,  4428.,  5400.,  4920.,  6000.,  5740.,  7000.,  6560.,  8000.,  7380.,  9000.,  8200., 10000.,  9020., 11000.,  9020., 11000.,  9020., 11000.,  8200., 10000.,  7380.,  9000.,  6560.,  8000.,  5740.,  7000.,  4920.,  6000.,  5412.,  6600.,  6282.,  7660.,  7216.,  8800.,  8086.,  9860.,  9020., 11000.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9020., 11000.,  8086.,  9860.,  7216.,  8800.,  6282.,  7660.,  5412.,  6600.,  5412.,  6600.,  6346.,  7740.,  7216.,  8800.,  8150.,  9940.,  9020., 11000.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9020., 11000.,  8150.,  9940.,  7216.,  8800.,  6346.,  7740.,  5412.,  6600.,  5412.,  6600.,  6282.,  7660.,  7216.,  8800.,  8086.,  9860.,  9020., 11000.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9020., 11000.,  8086.,  9860.,  7216.,  8800.,  6282.,  7660.,  5412.,  6600.,  4920.,  6000.,  5740.,  7000.,  6560.,  8000.,  7380.,  9000.,  8200., 10000.,  9020., 11000.,  9020., 11000.,  9020., 11000.,  8200., 10000.,  7380.,  9000.,  6560.,  8000.,  5740.,  7000.,  4920.,  6000.,  4428.,  5400.,  5134.,  6260.,  5904.,  7200.,  6610.,  8060.,  7380.,  9000.,  8086.,  9860.,  8150.,  9940.,  8086.,  9860.,  7380.,  9000.,  6610.,  8060.,  5904.,  7200.,  5134.,  6260.,  4428.,  5400.,  3936.,  4800.,  4592.,  5600.,  5248.,  6400.,  5904.,  7200.,  6560.,  8000.,  7216.,  8800.,  7216.,  8800.,  7216.,  8800.,  6560.,  8000.,  5904.,  7200.,  5248.,  6400.,  4592.,  5600.,  3936.,  4800.,  3444.,  4200.,  3986.,  4860.,  4592.,  5600.,  5134.,  6260.,  5740.,  7000.,  6282.,  7660.,  6346.,  7740.,  6282.,  7660.,  5740.,  7000.,  5134.,  6260.,  4592.,  5600.,  3986.,  4860.,  3444.,  4200.,  2952.,  3600.,  3444.,  4200.,  3936.,  4800.,  4428.,  5400.,  4920.,  6000.,  5412.,  6600.,  5412.,  6600.,  5412.,  6600.,  4920.,  6000.,  4428.,  5400.,  3936.,  4800.,  3444.,  4200.,  2952.,  3600.};
  const std::array<int, 4> in_shape = {{ 1, 13, 13, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x13x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.};
  const std::array<int, 4> in_shape = {{ 1, 13, 13, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x13x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2818.,  3692.,  4566.,  5440.,  3248.,  4256.,  5264.,  6272.,  3630.,  4756.,  5882.,  7008.,  4060.,  5320.,  6580.,  7840.,  4442.,  5820.,  7198.,  8576.,  4490.,  5884.,  7278.,  8672.,  4442.,  5820.,  7198.,  8576.,  4060.,  5320.,  6580.,  7840.,  3630.,  4756.,  5882.,  7008.,  3248.,  4256.,  5264.,  6272.,  2818.,  3692.,  4566.,  5440.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3248.,  4256.,  5264.,  6272.,  3712.,  4864.,  6016.,  7168.,  4176.,  5472.,  6768.,  8064.,  4640.,  6080.,  7520.,  8960.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  4640.,  6080.,  7520.,  8960.,  4176.,  5472.,  6768.,  8064.,  3712.,  4864.,  6016.,  7168.,  3248.,  4256.,  5264.,  6272.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3630.,  4756.,  5882.,  7008.,  4176.,  5472.,  6768.,  8064.,  4674.,  6124.,  7574.,  9024.,  5220.,  6840.,  8460., 10080.,  5718.,  7492.,  9266., 11040.,  5766.,  7556.,  9346., 11136.,  5718.,  7492.,  9266., 11040.,  5220.,  6840.,  8460., 10080.,  4674.,  6124.,  7574.,  9024.,  4176.,  5472.,  6768.,  8064.,  3630.,  4756.,  5882.,  7008.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  4060.,  5320.,  6580.,  7840.,  4640.,  6080.,  7520.,  8960.,  5220.,  6840.,  8460., 10080.,  5800.,  7600.,  9400., 11200.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  5800.,  7600.,  9400., 11200.,  5220.,  6840.,  8460., 10080.,  4640.,  6080.,  7520.,  8960.,  4060.,  5320.,  6580.,  7840.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4442.,  5820.,  7198.,  8576.,  5104.,  6688.,  8272.,  9856.,  5718.,  7492.,  9266., 11040.,  6380.,  8360., 10340., 12320.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  6380.,  8360., 10340., 12320.,  5718.,  7492.,  9266., 11040.,  5104.,  6688.,  8272.,  9856.,  4442.,  5820.,  7198.,  8576.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4490.,  5884.,  7278.,  8672.,  5104.,  6688.,  8272.,  9856.,  5766.,  7556.,  9346., 11136.,  6380.,  8360., 10340., 12320.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6380.,  8360., 10340., 12320.,  5766.,  7556.,  9346., 11136.,  5104.,  6688.,  8272.,  9856.,  4490.,  5884.,  7278.,  8672.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4442.,  5820.,  7198.,  8576.,  5104.,  6688.,  8272.,  9856.,  5718.,  7492.,  9266., 11040.,  6380.,  8360., 10340., 12320.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  6380.,  8360., 10340., 12320.,  5718.,  7492.,  9266., 11040.,  5104.,  6688.,  8272.,  9856.,  4442.,  5820.,  7198.,  8576.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  4060.,  5320.,  6580.,  7840.,  4640.,  6080.,  7520.,  8960.,  5220.,  6840.,  8460., 10080.,  5800.,  7600.,  9400., 11200.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  5800.,  7600.,  9400., 11200.,  5220.,  6840.,  8460., 10080.,  4640.,  6080.,  7520.,  8960.,  4060.,  5320.,  6580.,  7840.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3630.,  4756.,  5882.,  7008.,  4176.,  5472.,  6768.,  8064.,  4674.,  6124.,  7574.,  9024.,  5220.,  6840.,  8460., 10080.,  5718.,  7492.,  9266., 11040.,  5766.,  7556.,  9346., 11136.,  5718.,  7492.,  9266., 11040.,  5220.,  6840.,  8460., 10080.,  4674.,  6124.,  7574.,  9024.,  4176.,  5472.,  6768.,  8064.,  3630.,  4756.,  5882.,  7008.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3248.,  4256.,  5264.,  6272.,  3712.,  4864.,  6016.,  7168.,  4176.,  5472.,  6768.,  8064.,  4640.,  6080.,  7520.,  8960.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  4640.,  6080.,  7520.,  8960.,  4176.,  5472.,  6768.,  8064.,  3712.,  4864.,  6016.,  7168.,  3248.,  4256.,  5264.,  6272.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2818.,  3692.,  4566.,  5440.,  3248.,  4256.,  5264.,  6272.,  3630.,  4756.,  5882.,  7008.,  4060.,  5320.,  6580.,  7840.,  4442.,  5820.,  7198.,  8576.,  4490.,  5884.,  7278.,  8672.,  4442.,  5820.,  7198.,  8576.,  4060.,  5320.,  6580.,  7840.,  3630.,  4756.,  5882.,  7008.,  3248.,  4256.,  5264.,  6272.,  2818.,  3692.,  4566.,  5440.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.};
  const std::array<int, 4> in_shape = {{ 1, 13, 13, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x13x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.};
  const std::array<int, 4> in_shape = {{ 1, 13, 13, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x14x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 8449.,  9672., 10948., 11823., 12771., 13786., 13995., 14268., 14605., 13637., 13176., 12300., 10663.,  9039., 11945., 14354., 16812., 19216., 21687., 24218., 24305., 23656., 23103., 21110., 19284., 16608., 13761., 10942., 13764., 15568., 17424., 18556., 19756., 21016., 20860., 20320., 19876., 17636., 16240., 14576., 12300., 10060., 13750., 16204., 18720., 20873., 23102., 25398., 26222., 27014., 27902., 26603., 24322., 21324., 18290., 15293., 16067., 18864., 21740., 24621., 27593., 29622., 29801., 29308., 29391., 27335., 24512., 21540., 18077., 14645., 18031., 20742., 23524., 25630., 27817., 30074., 30351., 30308., 30489., 28052., 26112., 23592., 20151., 16760., 20769., 22992., 25292., 27274., 29343., 31488., 31157., 30890., 31551., 28550., 25272., 22016., 18889., 15806., 18419., 21082., 23828., 26614., 28469., 30406., 30459., 29904., 29925., 27544., 25104., 22232., 18683., 15172., 15969., 19172., 22436., 25047., 26707., 28430., 28423., 28128., 28025., 25913., 23276., 19772., 16851., 13979., 16576., 18580., 20648., 22419., 24268., 26186., 26112., 26102., 25932., 23737., 21582., 19124., 16436., 13783., 11756., 13344., 14992., 16692., 18436., 20216., 20868., 20880., 21372., 20220., 18624., 16240., 13972., 11732., 11585., 13790., 16044., 17316., 18623., 19958., 20081., 19916., 19879., 18374., 15980., 13376., 11561.,  9774., 10459., 11332., 12268., 13261., 14305., 15394., 15109., 14888., 15435., 14555., 13340., 11444.,  9961.,  8481.};
  const std::array<int, 4> in_shape = {{ 1, 13, 14, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x14x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {30074., 30351., 30308., 30489., 31488., 31157., 30890., 31551., 30406., 30459., 29904., 29925.};
  const std::array<int, 4> in_shape = {{ 1, 13, 14, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 32.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x14x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2568., 2898., 3098., 3472., 3408., 3832., 3774., 4238., 4056., 4566., 4402., 4948., 4306., 4838., 4114., 4632., 4130., 4650., 3564., 4026., 3266., 3680., 2896., 3256., 2530., 2846., 2292., 2558., 3083., 3458., 3446., 3876., 3852., 4344., 4383., 4928., 4801., 5406., 5348., 6004., 5317., 5970., 5174., 5808., 5175., 5806., 4519., 5084., 4092., 4600., 3396., 3840., 2925., 3314., 2613., 2940., 3360., 3768., 3720., 4192., 4352., 4896., 4920., 5528., 5344., 6024., 5960., 6704., 5976., 6728., 5976., 6720., 6024., 6776., 5408., 6088., 4984., 5600., 4352., 4896., 3912., 4392., 3168., 3576., 3551., 3980., 4052., 4552., 4796., 5376., 5285., 5938., 5869., 6604., 6466., 7276., 6543., 7372., 6700., 7532., 6809., 7660., 6447., 7222., 5746., 6452., 4884., 5512., 4423., 4980., 3709., 4186., 3792., 4262., 4254., 4800., 4944., 5576., 5458., 6170., 6528., 7330., 7430., 8316., 7326., 8226., 7174., 8072., 7342., 8270., 6924., 7774., 6150., 6928., 5520., 6216., 4990., 5610., 4260., 4794., 4059., 4590., 4810., 5420., 5772., 6472., 6123., 6908., 6977., 7858., 7736., 8708., 7977., 8958., 8042., 9016., 8011., 9010., 7263., 8168., 6608., 7440., 6148., 6896., 5249., 5918., 4445., 5024., 4675., 5266., 5480., 6144., 5964., 6712., 6425., 7252., 7337., 8254., 7718., 8720., 7751., 8746., 7736., 8708., 7977., 8958., 7295., 8172., 6342., 7136., 5636., 6336., 4911., 5538., 4301., 4844., 4971., 5590., 5814., 6516., 6284., 7080., 7015., 7884., 7633., 8586., 8052., 9084., 8117., 9142., 7718., 8720., 7751., 8746., 7007., 7888., 6396., 7184., 5828., 6512., 4877., 5478., 4093., 4600., 4228., 4786., 5146., 5784., 5904., 6632., 6562., 7358., 6924., 7798., 7386., 8332., 7374., 8318., 7218., 8144., 7366., 8290., 6408., 7234., 5850., 6584., 5104., 5736., 4350., 4902., 3784., 4246., 3811., 4288., 4380., 4936., 4988., 5632., 5633., 6342., 6185., 6968., 6882., 7732., 6763., 7616., 6564., 7404., 6541., 7384., 5739., 6498., 5234., 5916., 4532., 5128., 4019., 4536., 3457., 3886., 3360., 3768., 3720., 4192., 4352., 4896., 4920., 5528., 5344., 6024., 5960., 6704., 5976., 6728., 5976., 6720., 6024., 6776., 5408., 6088., 4984., 5600., 4352., 4896., 3912., 4392., 3168., 3576., 2755., 3106., 3114., 3516., 3724., 4184., 3979., 4488., 4313., 4878., 4888., 5516., 4977., 5618., 5114., 5752., 5171., 5822., 4815., 5404., 4304., 4840., 3588., 4064., 3225., 3650., 2813., 3180., 2436., 2742., 2654., 3000., 3088., 3480., 3262., 3690., 3740., 4210., 4174., 4692., 4050., 4570., 4054., 4576., 4106., 4646., 3776., 4262., 3454., 3896., 3184., 3576., 2914., 3266., 2336., 2642.};
  const std::array<int, 4> in_shape = {{ 1, 13, 14, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x14x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {7736., 8708., 7977., 8958., 8042., 9016., 8011., 9010., 7718., 8720., 7751., 8746., 7736., 8708., 7977., 8958., 8052., 9084., 8117., 9142., 7718., 8720., 7751., 8746.};
  const std::array<int, 4> in_shape = {{ 1, 13, 14, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x14x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2182.,  2512.,  2842.,  3172.,  2590.,  2964.,  3338.,  3712.,  2936.,  3360.,  3784.,  4208.,  3164.,  3628.,  4092.,  4556.,  3554.,  4064.,  4574.,  5084.,  3906.,  4452.,  4998.,  5544.,  3712.,  4244.,  4776.,  5308.,  3582.,  4100.,  4618.,  5136.,  3596.,  4116.,  4636.,  5156.,  3258.,  3720.,  4182.,  4644.,  2854.,  3268.,  3682.,  4096.,  2488.,  2848.,  3208.,  3568.,  2312.,  2628.,  2944.,  3260.,  2030.,  2296.,  2562.,  2828.,  2511.,  2886.,  3261.,  3636.,  2878.,  3308.,  3738.,  4168.,  3404.,  3896.,  4388.,  4880.,  3709.,  4254.,  4799.,  5344.,  4101.,  4706.,  5311.,  5916.,  4568.,  5224.,  5880.,  6536.,  4637.,  5290.,  5943.,  6596.,  4498.,  5132.,  5766.,  6400.,  4375.,  5006.,  5637.,  6268.,  3897.,  4462.,  5027.,  5592.,  3548.,  4056.,  4564.,  5072.,  3116.,  3560.,  4004.,  4448.,  2549.,  2938.,  3327.,  3716.,  2227.,  2554.,  2881.,  3208.,  2920.,  3328.,  3736.,  4144.,  3320.,  3792.,  4264.,  4736.,  3808.,  4352.,  4896.,  5440.,  4240.,  4848.,  5456.,  6064.,  4696.,  5376.,  6056.,  6736.,  5096.,  5840.,  6584.,  7328.,  5184.,  5936.,  6688.,  7440.,  5256.,  6000.,  6744.,  7488.,  5408.,  6160.,  6912.,  7664.,  4824.,  5504.,  6184.,  6864.,  4296.,  4912.,  5528.,  6144.,  3808.,  4352.,  4896.,  5440.,  3376.,  3856.,  4336.,  4816.,  2792.,  3200.,  3608.,  4016.,  3057.,  3486.,  3915.,  4344.,  3540.,  4040.,  4540.,  5040.,  4052.,  4632.,  5212.,  5792.,  4637.,  5290.,  5943.,  6596.,  5195.,  5930.,  6665.,  7400.,  5578.,  6388.,  7198.,  8008.,  5681.,  6510.,  7339.,  8168.,  5704.,  6536.,  7368.,  8200.,  5871.,  6722.,  7573.,  8424.,  5575.,  6350.,  7125.,  7900.,  5026.,  5732.,  6438.,  7144.,  4372.,  5000.,  5628.,  6256.,  3953.,  4510.,  5067.,  5624.,  3501.,  3978.,  4455.,  4932.,  3194.,  3664.,  4134.,  4604.,  3930.,  4476.,  5022.,  5568.,  4392.,  5024.,  5656.,  6288.,  4812.,  5524.,  6236.,  6948.,  5630.,  6432.,  7234.,  8036.,  6422.,  7308.,  8194.,  9080.,  6328.,  7228.,  8128.,  9028.,  6154.,  7052.,  7950.,  8848.,  6332.,  7260.,  8188.,  9116.,  5942.,  6792.,  7642.,  8492.,  5506.,  6284.,  7062.,  7840.,  4840.,  5536.,  6232.,  6928.,  4320.,  4940.,  5560.,  6180.,  3874.,  4408.,  4942.,  5476.,  3507.,  4038.,  4569.,  5100.,  4146.,  4756.,  5366.,  5976.,  4988.,  5688.,  6388.,  7088.,  5429.,  6214.,  6999.,  7784.,  5937.,  6818.,  7699.,  8580.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  7014.,  7988.,  8962.,  9936.,  6991.,  7990.,  8989.,  9988.,  6245.,  7150.,  8055.,  8960.,  5792.,  6624.,  7456.,  8288.,  5244.,  5992.,  6740.,  7488.,  4517.,  5186.,  5855.,  6524.,  3959.,  4538.,  5117.,  5696.,  4199.,  4790.,  5381.,  5972.,  4632.,  5296.,  5960.,  6624.,  5196.,  5944.,  6692.,  7440.,  5767.,  6594.,  7421.,  8248.,  6333.,  7250.,  8167.,  9084.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  6305.,  7182.,  8059.,  8936.,  5586.,  6380.,  7174.,  7968.,  4908.,  5608.,  6308.,  7008.,  4331.,  4958.,  5585.,  6212.,  3707.,  4250.,  4793.,  5336.,  4283.,  4902.,  5521.,  6140.,  4974.,  5676.,  6378.,  7080.,  5660.,  6456.,  7252.,  8048.,  6169.,  7038.,  7907.,  8776.,  6601.,  7554.,  8507.,  9460.,  7104.,  8136.,  9168., 10200.,  7049.,  8074.,  9099., 10124.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  6205.,  7086.,  7967.,  8848.,  5732.,  6520.,  7308.,  8096.,  4924.,  5608.,  6292.,  6976.,  4225.,  4826.,  5427.,  6028.,  3583.,  4090.,  4597.,  5104.,  3754.,  4312.,  4870.,  5428.,  4342.,  4980.,  5618.,  6256.,  5064.,  5792.,  6520.,  7248.,  5656.,  6452.,  7248.,  8044.,  6206.,  7080.,  7954.,  8828.,  6642.,  7588.,  8534.,  9480.,  6524.,  7468.,  8412.,  9356.,  6390.,  7316.,  8242.,  9168.,  6336.,  7260.,  8184.,  9108.,  5558.,  6384.,  7210.,  8036.,  5014.,  5748.,  6482.,  7216.,  4456.,  5088.,  5720.,  6352.,  3940.,  4492.,  5044.,  5596.,  3250.,  3712.,  4174.,  4636.,  3273.,  3750.,  4227.,  4704.,  3756.,  4312.,  4868.,  5424.,  4500.,  5144.,  5788.,  6432.,  4893.,  5602.,  6311.,  7020.,  5411.,  6194.,  6977.,  7760.,  6034.,  6884.,  7734.,  8584.,  6049.,  6902.,  7755.,  8608.,  5920.,  6760.,  7600.,  8440.,  5871.,  6714.,  7557.,  8400.,  5247.,  6006.,  6765.,  7524.,  4634.,  5316.,  5998.,  6680.,  4084.,  4680.,  5276.,  5872.,  3441.,  3958.,  4475.,  4992.,  2917.,  3346.,  3775.,  4204.,  2920.,  3328.,  3736.,  4144.,  3320.,  3792.,  4264.,  4736.,  3808.,  4352.,  4896.,  5440.,  4240.,  4848.,  5456.,  6064.,  4696.,  5376.,  6056.,  6736.,  5096.,  5840.,  6584.,  7328.,  5184.,  5936.,  6688.,  7440.,  5256.,  6000.,  6744.,  7488.,  5408.,  6160.,  6912.,  7664.,  4824.,  5504.,  6184.,  6864.,  4296.,  4912.,  5528.,  6144.,  3808.,  4352.,  4896.,  5440.,  3376.,  3856.,  4336.,  4816.,  2792.,  3200.,  3608.,  4016.,  2439.,  2790.,  3141.,  3492.,  2786.,  3188.,  3590.,  3992.,  3180.,  3640.,  4100.,  4560.,  3561.,  4070.,  4579.,  5088.,  3917.,  4482.,  5047.,  5612.,  4316.,  4944.,  5572.,  6200.,  4401.,  5042.,  5683.,  6324.,  4342.,  4980.,  5618.,  6256.,  4363.,  5014.,  5665.,  6316.,  4193.,  4782.,  5371.,  5960.,  3880.,  4416.,  4952.,  5488.,  3340.,  3816.,  4292.,  4768.,  2905.,  3330.,  3755.,  4180.,  2635.,  3002.,  3369.,  3736.,  2022.,  2328.,  2634.,  2940.,  2370.,  2716.,  3062.,  3408.,  2712.,  3104.,  3496.,  3888.,  2960.,  3388.,  3816.,  4244.,  3282.,  3752.,  4222.,  4692.,  3590.,  4108.,  4626.,  5144.,  3596.,  4116.,  4636.,  5156.,  3602.,  4124.,  4646.,  5168.,  3688.,  4228.,  4768.,  5308.,  3210.,  3696.,  4182.,  4668.,  2978.,  3420.,  3862.,  4304.,  2776.,  3168.,  3560.,  3952.,  2484.,  2836.,  3188.,  3540.,  2062.,  2368.,  2674.,  2980.};
  const std::array<int, 4> in_shape = {{ 1, 13, 14, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x14x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  7014.,  7988.,  8962.,  9936.,  6991.,  7990.,  8989.,  9988.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  7104.,  8136.,  9168., 10200.,  7049.,  8074.,  9099., 10124.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.};
  const std::array<int, 4> in_shape = {{ 1, 13, 14, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x14x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4784.,  5884.,  6768.,  7724.,  8992.,  9852.,  9600.,  8852.,  9160.,  8424.,  7712.,  7024.,  6200.,  5224.,  5958.,  6875.,  8168.,  8853.,  9802., 11183., 11741., 11499., 11545., 10190.,  9259.,  8008.,  6605.,  5618.,  7088.,  8016.,  9280., 10272., 11472., 12400., 12736., 12720., 13184., 11728., 10544.,  9280.,  8288.,  6832.,  7838.,  9083., 10552., 11965., 13058., 13743., 13977., 13795., 14285., 13454., 12319., 10776.,  9313.,  7586.,  8304.,  9772., 11408., 12476., 14560., 16492., 16184., 15460., 16032., 14472., 13048., 11408., 10176.,  8888.,  8998., 10595., 12808., 13933., 15866., 17623., 17965., 17779., 17417., 15326., 14251., 12648., 10845.,  9138.,  9822., 11239., 12680., 14025., 15906., 17019., 17553., 17623., 17965., 16358., 14439., 12648., 11425.,  9354.,  9846., 11387., 12808., 14325., 15658., 16703., 17349., 17019., 17553., 16494., 14819., 12904., 11253.,  9410.,  8408.,  9928., 11664., 12880., 14216., 15432., 15668., 15424., 16044., 14368., 13148., 11792., 10348.,  8800.,  7350.,  8575., 10296., 11337., 12794., 14307., 14589., 14199., 14225., 12566., 11531., 10392.,  8949.,  7482.,  7088.,  8016.,  9280., 10272., 11472., 12400., 12736., 12720., 13184., 11728., 10544.,  9280.,  8288.,  6832.,  6214.,  7099.,  8168.,  8773.,  9386., 10415., 11053., 11083., 11289., 10382.,  9451.,  8008.,  7037.,  6178.,  5048.,  5792.,  7024.,  7592.,  8488.,  9296.,  9108.,  9128.,  9516.,  8656.,  8124.,  7152.,  6332.,  5168.};
  const std::array<int, 4> in_shape = {{ 1, 13, 14, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x14x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17623., 17965., 17779., 17417., 17019., 17553., 17623., 17965., 16703., 17349., 17019., 17553.};
  const std::array<int, 4> in_shape = {{ 1, 13, 14, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x14x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4428.,  5008.,  5674.,  6360.,  6448.,  7264.,  6974.,  7880.,  8420.,  9440.,  9410., 10504.,  8834.,  9936.,  8322.,  9400.,  8834.,  9952.,  8308.,  9328.,  7502.,  8432.,  6448.,  7264.,  5866.,  6576.,  5084.,  5664.,  5114.,  5804.,  6175.,  6982.,  7768.,  8720.,  8325.,  9386.,  9126., 10324., 10571., 11870., 11155., 12474., 10715., 11990., 10275., 11570.,  9166., 10332.,  8613.,  9686.,  7704.,  8656.,  6231.,  7066.,  5314.,  6004.,  6832.,  7648.,  7608.,  8544.,  8768.,  9856.,  9672., 10880., 10704., 12064., 11480., 12960., 11864., 13376., 12120., 13600., 12760., 14272., 11216., 12576.,  9928., 11168.,  8768.,  9856.,  7864.,  8832.,  6320.,  7136.,  7422.,  8316.,  8549.,  9590.,  9832., 11056., 11319., 12666., 12338., 13844., 12761., 14398., 13057., 14738., 13097., 14758., 13393., 15098., 12730., 14268., 11607., 13006., 10024., 11248.,  8893.,  9970.,  7590.,  8484.,  7588.,  8576.,  9478., 10632., 10832., 12192., 11810., 13320., 14028., 15728., 15662., 17496., 15022., 16880., 14126., 15944., 14702., 16576., 13660., 15360., 12466., 14016., 10832., 12192.,  9798., 10992.,  8500.,  9488.,  8274.,  9372.,  9787., 11062., 12152., 13648., 13097., 14762., 14478., 16356., 16631., 18670., 17535., 19610., 16967., 18982., 16463., 18514., 14518., 16364., 13513., 15206., 12088., 13584.,  9971., 11290.,  8474.,  9572.,  9490., 10636., 10411., 11710., 11896., 13392., 13401., 15074., 14926., 16820., 15911., 17974., 16175., 18274., 16631., 18670., 17535., 19610., 15414., 17276., 13497., 15198., 12088., 13584., 10851., 12194.,  8858., 10004.,  9170., 10300., 10587., 11878., 12152., 13648., 13641., 15290., 14862., 16708., 15831., 17854., 16287., 18378., 15911., 17974., 16175., 18274., 15542., 17420., 14377., 16086., 12088., 13584., 10771., 12106.,  9498., 10628.,  7876.,  8896.,  9262., 10432., 10832., 12192., 12122., 13616., 13804., 15472., 14998., 16816., 15030., 16904., 14678., 16544., 14966., 16888., 13324., 15056., 12378., 13944., 11088., 12448.,  9870., 11080.,  8292.,  9312.,  6942.,  7836.,  8045.,  9086.,  9832., 11056., 10575., 11922., 11858., 13364., 13537., 15174., 14057., 15738., 13809., 15470., 13817., 15522., 12138., 13676., 10911., 12310.,  9768., 10992.,  8165.,  9242.,  6870.,  7764.,  6832.,  7648.,  7608.,  8544.,  8768.,  9856.,  9672., 10880., 10704., 12064., 11480., 12960., 11864., 13376., 12120., 13600., 12760., 14272., 11216., 12576.,  9928., 11168.,  8768.,  9856.,  7864.,  8832.,  6320.,  7136.,  5754.,  6476.,  6719.,  7542.,  7768.,  8720.,  8613.,  9658.,  9254., 10420., 10027., 11310., 10419., 11754., 10171., 11494., 10243., 11586.,  9934., 11132.,  9221., 10310.,  7704.,  8656.,  6775.,  7626.,  6082.,  6804.,  4716.,  5328.,  5458.,  6160.,  6448.,  7264.,  7286.,  8176.,  8196.,  9184.,  8746.,  9824.,  8842.,  9960.,  8874., 10000.,  9098., 10264.,  7972.,  9024.,  7414.,  8360.,  6704.,  7520.,  5938.,  6664.,  4876.,  5488.};
  const std::array<int, 4> in_shape = {{ 1, 13, 14, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x14x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {16631., 18670., 17535., 19610., 16967., 18982., 16463., 18514., 15911., 17974., 16175., 18274., 16631., 18670., 17535., 19610., 15831., 17854., 16287., 18378., 15911., 17974., 16175., 18274.};
  const std::array<int, 4> in_shape = {{ 1, 13, 14, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x14x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4132.,  4712.,  5292.,  5872.,  4982.,  5668.,  6354.,  7040.,  5808.,  6624.,  7440.,  8256.,  6290.,  7196.,  8102.,  9008.,  7260.,  8280.,  9300., 10320.,  7886.,  8980., 10074., 11168.,  7686.,  8788.,  9890., 10992.,  7646.,  8724.,  9802., 10880.,  8054.,  9172., 10290., 11408.,  7260.,  8280.,  9300., 10320.,  6586.,  7516.,  8446.,  9376.,  5808.,  6624.,  7440.,  8256.,  5150.,  5860.,  6570.,  7280.,  4132.,  4712.,  5292.,  5872.,  4866.,  5556.,  6246.,  6936.,  5655.,  6462.,  7269.,  8076.,  6712.,  7664.,  8616.,  9568.,  7701.,  8762.,  9823., 10884.,  8446.,  9644., 10842., 12040.,  9123., 10422., 11721., 13020.,  9375., 10694., 12013., 13332.,  9179., 10454., 11729., 13004.,  8919., 10214., 11509., 12804.,  8382.,  9548., 10714., 11880.,  7577.,  8650.,  9723., 10796.,  6840.,  7792.,  8744.,  9696.,  5739.,  6574.,  7409.,  8244.,  4962.,  5652.,  6342.,  7032.,  5808.,  6624.,  7440.,  8256.,  6792.,  7728.,  8664.,  9600.,  7744.,  8832.,  9920., 11008.,  8472.,  9680., 10888., 12096.,  9680., 11040., 12400., 13760., 10664., 12144., 13624., 15104., 10632., 12144., 13656., 15168., 10408., 11888., 13368., 14848., 10888., 12400., 13912., 15424.,  9680., 11040., 12400., 13760.,  8696.,  9936., 11176., 12416.,  7744.,  8832.,  9920., 11008.,  7016.,  7984.,  8952.,  9920.,  5808.,  6624.,  7440.,  8256.,  6318.,  7212.,  8106.,  9000.,  7225.,  8266.,  9307., 10348.,  8648.,  9872., 11096., 12320.,  9771., 11118., 12465., 13812., 10642., 12148., 13654., 15160., 11565., 13202., 14839., 16476., 11985., 13666., 15347., 17028., 11957., 13618., 15279., 16940., 11865., 13570., 15275., 16980., 11026., 12564., 14102., 15640.,  9927., 11326., 12725., 14124.,  8776., 10000., 11224., 12448.,  7365.,  8442.,  9519., 10596.,  6414.,  7308.,  8202.,  9096.,  7036.,  8024.,  9012., 10000.,  8378.,  9532., 10686., 11840.,  9680., 11040., 12400., 13760., 10526., 12036., 13546., 15056., 12100., 13800., 15500., 17200., 13218., 15052., 16886., 18720., 13002., 14860., 16718., 18576., 12850., 14668., 16486., 18304., 13498., 15372., 17246., 19120., 12100., 13800., 15500., 17200., 10934., 12484., 14034., 15584.,  9680., 11040., 12400., 13760.,  8658.,  9852., 11046., 12240.,  7036.,  8024.,  9012., 10000.,  7770.,  8868.,  9966., 11064.,  8923., 10198., 11473., 12748., 10584., 12080., 13576., 15072., 12065., 13730., 15395., 17060., 13286., 15164., 17042., 18920., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 13222., 15068., 16914., 18760., 12053., 13746., 15439., 17132., 10712., 12208., 13704., 15200.,  9119., 10438., 11757., 13076.,  7866.,  8964., 10062., 11160.,  8106.,  9252., 10398., 11544.,  9379., 10678., 11977., 13276., 10584., 12080., 13576., 15072., 11769., 13442., 15115., 16788., 13398., 15292., 17186., 19080., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 13334., 15196., 17058., 18920., 11757., 13458., 15159., 16860., 10712., 12208., 13704., 15200.,  9575., 10918., 12261., 13604.,  8202.,  9348., 10494., 11640.,  7994.,  9124., 10254., 11384.,  8971., 10262., 11553., 12844., 10584., 12080., 13576., 15072., 11889., 13538., 15187., 16836., 13062., 14908., 16754., 18600., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 13446., 15324., 17202., 19080., 12229., 13938., 15647., 17356., 10712., 12208., 13704., 15200.,  9167., 10502., 11837., 13172.,  8090.,  9220., 10350., 11480.,  7260.,  8280.,  9300., 10320.,  8554.,  9724., 10894., 12064.,  9680., 11040., 12400., 13760., 10478., 11972., 13466., 14960., 11876., 13544., 15212., 16880., 13042., 14860., 16678., 18496., 13178., 15052., 16926., 18800., 13122., 14988., 16854., 18720., 13770., 15692., 17614., 19536., 12324., 14056., 15788., 17520., 10982., 12548., 14114., 15680.,  9680., 11040., 12400., 13760.,  8834., 10044., 11254., 12464.,  7260.,  8280.,  9300., 10320.,  6318.,  7212.,  8106.,  9000.,  7225.,  8266.,  9307., 10348.,  8648.,  9872., 11096., 12320.,  9771., 11118., 12465., 13812., 10642., 12148., 13654., 15160., 11565., 13202., 14839., 16476., 11985., 13666., 15347., 17028., 11957., 13618., 15279., 16940., 11865., 13570., 15275., 16980., 11026., 12564., 14102., 15640.,  9927., 11326., 12725., 14124.,  8776., 10000., 11224., 12448.,  7365.,  8442.,  9519., 10596.,  6414.,  7308.,  8202.,  9096.,  5808.,  6624.,  7440.,  8256.,  6792.,  7728.,  8664.,  9600.,  7744.,  8832.,  9920., 11008.,  8472.,  9680., 10888., 12096.,  9680., 11040., 12400., 13760., 10664., 12144., 13624., 15104., 10632., 12144., 13656., 15168., 10408., 11888., 13368., 14848., 10888., 12400., 13912., 15424.,  9680., 11040., 12400., 13760.,  8696.,  9936., 11176., 12416.,  7744.,  8832.,  9920., 11008.,  7016.,  7984.,  8952.,  9920.,  5808.,  6624.,  7440.,  8256.,  5090.,  5812.,  6534.,  7256.,  5703.,  6526.,  7349.,  8172.,  6712.,  7664.,  8616.,  9568.,  7525.,  8570.,  9615., 10660.,  8222.,  9388., 10554., 11720.,  9075., 10358., 11641., 12924.,  9423., 10758., 12093., 13428.,  9579., 10902., 12225., 13548.,  9319., 10662., 12005., 13348.,  8606.,  9804., 11002., 12200.,  7753.,  8842.,  9931., 11020.,  6840.,  7792.,  8744.,  9696.,  5787.,  6638.,  7489.,  8340.,  5186.,  5908.,  6630.,  7352.,  4356.,  4968.,  5580.,  6192.,  5158.,  5860.,  6562.,  7264.,  5808.,  6624.,  7440.,  8256.,  6242.,  7132.,  8022.,  8912.,  7036.,  8024.,  9012., 10000.,  7710.,  8788.,  9866., 10944.,  7862.,  8980., 10098., 11216.,  7918.,  9044., 10170., 11296.,  8326.,  9492., 10658., 11824.,  7484.,  8536.,  9588., 10640.,  6634.,  7580.,  8526.,  9472.,  5808.,  6624.,  7440.,  8256.,  5326.,  6052.,  6778.,  7504.,  4356.,  4968.,  5580.,  6192.};
  const std::array<int, 4> in_shape = {{ 1, 13, 14, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x14x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932.};
  const std::array<int, 4> in_shape = {{ 1, 13, 14, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x14x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.};
  const std::array<int, 4> in_shape = {{ 1, 13, 14, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x14x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590.};
  const std::array<int, 4> in_shape = {{ 1, 13, 14, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x14x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.};
  const std::array<int, 4> in_shape = {{ 1, 13, 14, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x14x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.};
  const std::array<int, 4> in_shape = {{ 1, 13, 14, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x13x14x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.};
  const std::array<int, 4> in_shape = {{ 1, 13, 14, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x13x14x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.};
  const std::array<int, 4> in_shape = {{ 1, 13, 14, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x12x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2095., 2356., 2652., 2993., 3597., 4266., 4619., 4523., 4236., 3812., 3433., 2817., 3215., 3484., 3796., 3872., 4169., 4552., 4655., 4302., 4028., 3696., 3393., 3126., 3500., 4224., 4928., 5428., 6084., 6568., 6428., 5548., 4752., 3968., 3444., 2964., 3246., 3812., 4560., 5401., 6342., 7374., 7798., 7229., 6548., 5684., 4790., 3939., 3885., 4300., 4852., 5291., 6039., 6894., 7313., 7049., 6500., 5852., 5387., 4715., 4817., 5564., 6380., 6966., 7551., 7996., 7985., 7144., 6348., 5528., 4951., 4436., 4741., 5728., 6716., 7422., 8315., 9064., 9085., 8252., 7276., 6088., 5195., 4368., 4025., 4788., 5740., 6614., 7607., 8708., 9161., 8480., 7708., 6776., 5839., 4972., 4285., 4776., 5404., 5918., 6739., 7664., 8149., 7764., 7100., 6344., 5779., 5016., 4351., 5032., 5788., 6465., 6989., 7350., 7359., 6567., 5808., 5012., 4445., 3925., 3620., 4412., 5208., 5951., 6792., 7466., 7488., 6863., 6080., 5068., 4332., 3641., 2804., 3248., 3872., 4460., 5132., 5880., 6308., 5956., 5488., 4832., 4220., 3660., 2951., 3232., 3636., 3900., 4225., 4604., 4839., 4526., 4148., 3632., 3305., 3014., 2565., 3032., 3556., 4115., 4479., 4642., 4549., 3989., 3424., 2780., 2479., 2207.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x12x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {7996., 7985., 9064., 9085., 8708., 9161., 7664., 8149.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x12x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2328., 2606., 2660., 2984., 3024., 3400., 3312., 3730., 3608., 4074., 3980., 4500., 4140., 4678., 3964., 4454., 3572., 4008., 3152., 3528., 2860., 3202., 2420., 2722., 2899., 3246., 3360., 3768., 3852., 4328., 4281., 4800., 4681., 5250., 5118., 5744., 5231., 5870., 4807., 5388., 4260., 4776., 3524., 3968., 3077., 3474., 2773., 3116., 3072., 3464., 3728., 4192., 4352., 4896., 4784., 5384., 5376., 6040., 5936., 6672., 6000., 6760., 5504., 6200., 4976., 5600., 4352., 4896., 3920., 4408., 3456., 3880., 3263., 3676., 3884., 4376., 4668., 5248., 5133., 5778., 5709., 6428., 6458., 7260., 6743., 7580., 6231., 7002., 5568., 6264., 4884., 5496., 4277., 4828., 3717., 4198., 3968., 4442., 4460., 5016., 5072., 5720., 5512., 6230., 6208., 7006., 7028., 7916., 7484., 8402., 7004., 7842., 6028., 6776., 5136., 5784., 4668., 5254., 4068., 4582., 4243., 4786., 5080., 5720., 5964., 6712., 6777., 7596., 7481., 8382., 8006., 9000., 8071., 9090., 7375., 8304., 6604., 7432., 5764., 6480., 5213., 5854., 4621., 5176., 4515., 5082., 5572., 6240., 6348., 7128., 6757., 7612., 7433., 8374., 8114., 9152., 8243., 9306., 7759., 8728., 7080., 7944., 6148., 6896., 5353., 6022., 4589., 5168., 4083., 4610., 4944., 5576., 5964., 6712., 6577., 7404., 7321., 8238., 8254., 9272., 8463., 9522., 7695., 8672., 6836., 7720., 6020., 6800., 5269., 5966., 4621., 5224., 4291., 4810., 4876., 5488., 5580., 6296., 6109., 6908., 6889., 7782., 7786., 8784., 8315., 9354., 7823., 8776., 6864., 7720., 6020., 6768., 5361., 6038., 4589., 5184., 3604., 4078., 4340., 4896., 5136., 5784., 5892., 6610., 6636., 7434., 7172., 8060., 7320., 8238., 6680., 7518., 6004., 6752., 5232., 5880., 4720., 5306., 4136., 4650., 3651., 4104., 4456., 4984., 4988., 5600., 5341., 6014., 5865., 6608., 6366., 7188., 6391., 7232., 5843., 6606., 5308., 5984., 4724., 5304., 4221., 4744., 3689., 4146., 3072., 3464., 3632., 4096., 4352., 4896., 4752., 5352., 5248., 5912., 5904., 6640., 6096., 6856., 5504., 6200., 4944., 5568., 4352., 4896., 3824., 4312., 3328., 3752., 2475., 2798., 2916., 3296., 3468., 3912., 3941., 4440., 4417., 4978., 4962., 5592., 5323., 5982., 4911., 5516., 4312., 4856., 3716., 4192., 3281., 3714., 2909., 3292., 2260., 2538., 2588., 2912., 2960., 3336., 3348., 3766., 3676., 4142., 4012., 4532., 4064., 4602., 3728., 4218., 3500., 3936., 3056., 3432., 2872., 3214., 2528., 2830.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x12x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {8006., 9000., 8071., 9090., 8114., 9152., 8243., 9306., 8254., 9272., 8463., 9522., 7786., 8784., 8315., 9354.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x12x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 1978.,  2256.,  2534.,  2812.,  2244.,  2568.,  2892.,  3216.,  2600.,  2976.,  3352.,  3728.,  2894.,  3312.,  3730.,  4148.,  3150.,  3616.,  4082.,  4548.,  3504.,  4024.,  4544.,  5064.,  3790.,  4328.,  4866.,  5404.,  3646.,  4136.,  4626.,  5116.,  3124.,  3560.,  3996.,  4432.,  2600.,  2976.,  3352.,  3728.,  2370.,  2712.,  3054.,  3396.,  2090.,  2392.,  2694.,  2996.,  2491.,  2838.,  3185.,  3532.,  2888.,  3296.,  3704.,  4112.,  3292.,  3768.,  4244.,  4720.,  3723.,  4242.,  4761.,  5280.,  4025.,  4594.,  5163.,  5732.,  4330.,  4956.,  5582.,  6208.,  4415.,  5054.,  5693.,  6332.,  4201.,  4782.,  5363.,  5944.,  3812.,  4328.,  4844.,  5360.,  3116.,  3560.,  4004.,  4448.,  2781.,  3178.,  3575.,  3972.,  2531.,  2874.,  3217.,  3560.,  2616.,  3008.,  3400.,  3792.,  3280.,  3744.,  4208.,  4672.,  3808.,  4352.,  4896.,  5440.,  4168.,  4768.,  5368.,  5968.,  4776.,  5440.,  6104.,  6768.,  5248.,  5984.,  6720.,  7456.,  5160.,  5920.,  6680.,  7440.,  4744.,  5440.,  6136.,  6832.,  4336.,  4960.,  5584.,  6208.,  3808.,  4352.,  4896.,  5440.,  3448.,  3936.,  4424.,  4912.,  3096.,  3520.,  3944.,  4368.,  2753.,  3166.,  3579.,  3992.,  3276.,  3768.,  4260.,  4752.,  4052.,  4632.,  5212.,  5792.,  4405.,  5050.,  5695.,  6340.,  4891.,  5610.,  6329.,  7048.,  5634.,  6436.,  7238.,  8040.,  5881.,  6718.,  7555.,  8392.,  5339.,  6110.,  6881.,  7652.,  4776.,  5472.,  6168.,  6864.,  4260.,  4872.,  5484.,  6096.,  3699.,  4250.,  4801.,  5352.,  3321.,  3802.,  4283.,  4764.,  3414.,  3888.,  4362.,  4836.,  3884.,  4440.,  4996.,  5552.,  4504.,  5152.,  5800.,  6448.,  4978.,  5696.,  6414.,  7132.,  5410.,  6208.,  7006.,  7804.,  6000.,  6888.,  7776.,  8664.,  6498.,  7416.,  8334.,  9252.,  6146.,  6984.,  7822.,  8660.,  5292.,  6040.,  6788.,  7536.,  4504.,  5152.,  5800.,  6448.,  4094.,  4680.,  5266.,  5852.,  3510.,  4024.,  4538.,  5052.,  3927.,  4470.,  5013.,  5556.,  4560.,  5200.,  5840.,  6480.,  5196.,  5944.,  6692.,  7440.,  5903.,  6722.,  7541.,  8360.,  6413.,  7314.,  8215.,  9116.,  6922.,  7916.,  8910.,  9904.,  7091.,  8110.,  9129., 10148.,  6701.,  7630.,  8559.,  9488.,  6076.,  6904.,  7732.,  8560.,  5020.,  5736.,  6452.,  7168.,  4537.,  5178.,  5819.,  6460.,  4079.,  4634.,  5189.,  5744.,  3743.,  4310.,  4877.,  5444.,  4684.,  5352.,  6020.,  6688.,  5420.,  6200.,  6980.,  7760.,  5891.,  6746.,  7601.,  8456.,  6725.,  7666.,  8607.,  9548.,  7350.,  8388.,  9426., 10464.,  7135.,  8198.,  9261., 10324.,  6597.,  7566.,  8535.,  9504.,  6032.,  6896.,  7760.,  8624.,  5244.,  5992.,  6740.,  7488.,  4661.,  5330.,  5999.,  6668.,  4247.,  4826.,  5405.,  5984.,  3495.,  4022.,  4549.,  5076.,  4168.,  4800.,  5432.,  6064.,  5196.,  5944.,  6692.,  7440.,  5623.,  6450.,  7277.,  8104.,  6205.,  7122.,  8039.,  8956.,  7138.,  8156.,  9174., 10192.,  7323.,  8382.,  9441., 10500.,  6653.,  7630.,  8607.,  9584.,  6100.,  6984.,  7868.,  8752.,  5468.,  6248.,  7028.,  7808.,  4593.,  5290.,  5987.,  6684.,  4031.,  4634.,  5237.,  5840.,  3727.,  4246.,  4765.,  5284.,  4244.,  4856.,  5468.,  6080.,  4972.,  5688.,  6404.,  7120.,  5547.,  6346.,  7145.,  7944.,  6069.,  6962.,  7855.,  8748.,  6734.,  7732.,  8730.,  9728.,  7303.,  8342.,  9381., 10420.,  6869.,  7822.,  8775.,  9728.,  5992.,  6848.,  7704.,  8560.,  5244.,  5992.,  6740.,  7488.,  4669.,  5346.,  6023.,  6700.,  3975.,  4570.,  5165.,  5760.,  3454.,  3928.,  4402.,  4876.,  3964.,  4520.,  5076.,  5632.,  4504.,  5152.,  5800.,  6448.,  5162.,  5880.,  6598.,  7316.,  5706.,  6504.,  7302.,  8100.,  6208.,  7096.,  7984.,  8872.,  6378.,  7296.,  8214.,  9132.,  5930.,  6768.,  7606.,  8444.,  5500.,  6248.,  6996.,  7744.,  4568.,  5216.,  5864.,  6512.,  4134.,  4720.,  5306.,  5892.,  3646.,  4160.,  4674.,  5188.,  3041.,  3494.,  3947.,  4400.,  3744.,  4272.,  4800.,  5328.,  4276.,  4888.,  5500.,  6112.,  4665.,  5338.,  6011.,  6684.,  5323.,  6066.,  6809.,  7552.,  5862.,  6684.,  7506.,  8328.,  5637.,  6478.,  7319.,  8160.,  5067.,  5830.,  6593.,  7356.,  4596.,  5272.,  5948.,  6624.,  4100.,  4680.,  5260.,  5840.,  3679.,  4202.,  4725.,  5248.,  3289.,  3746.,  4203.,  4660.,  2616.,  3008.,  3400.,  3792.,  3088.,  3552.,  4016.,  4480.,  3808.,  4352.,  4896.,  5440.,  4104.,  4704.,  5304.,  5904.,  4520.,  5184.,  5848.,  6512.,  5184.,  5920.,  6656.,  7392.,  5352.,  6112.,  6872.,  7632.,  4744.,  5440.,  6136.,  6832.,  4272.,  4896.,  5520.,  6144.,  3808.,  4352.,  4896.,  5440.,  3256.,  3744.,  4232.,  4720.,  2840.,  3264.,  3688.,  4112.,  2291.,  2614.,  2937.,  3260.,  2604.,  2984.,  3364.,  3744.,  3068.,  3512.,  3956.,  4400.,  3463.,  3962.,  4461.,  4960.,  3809.,  4370.,  4931.,  5492.,  4238.,  4868.,  5498.,  6128.,  4595.,  5254.,  5913.,  6572.,  4369.,  4974.,  5579.,  6184.,  3824.,  4368.,  4912.,  5456.,  3340.,  3816.,  4292.,  4768.,  2945.,  3378.,  3811.,  4244.,  2555.,  2938.,  3321.,  3704.,  2018.,  2296.,  2574.,  2852.,  2292.,  2616.,  2940.,  3264.,  2600.,  2976.,  3352.,  3728.,  2982.,  3400.,  3818.,  4236.,  3318.,  3784.,  4250.,  4716.,  3616.,  4136.,  4656.,  5176.,  3702.,  4240.,  4778.,  5316.,  3430.,  3920.,  4410.,  4900.,  3236.,  3672.,  4108.,  4544.,  2664.,  3040.,  3416.,  3792.,  2378.,  2720.,  3062.,  3404.,  2098.,  2400.,  2702.,  3004.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x12x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6922.,  7916.,  8910.,  9904.,  7091.,  8110.,  9129., 10148.,  7350.,  8388.,  9426., 10464.,  7135.,  8198.,  9261., 10324.,  7138.,  8156.,  9174., 10192.,  7323.,  8382.,  9441., 10500.,  6734.,  7732.,  8730.,  9728.,  7303.,  8342.,  9381., 10420.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x12x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 5096.,  6304.,  7280.,  7560.,  8072.,  8576.,  9188.,  9024.,  8308.,  7280.,  6644.,  5776.,  5582.,  6519.,  7784.,  8681.,  9666., 11003., 11785., 10862.,  9691.,  8008.,  6973.,  6290.,  6416.,  7776.,  9280.,  9968., 11056., 12288., 13104., 12144., 10784.,  9280.,  8592.,  7504.,  7166.,  8651., 10552., 11597., 12386., 13695., 14537., 13510., 12131., 10392.,  9517.,  8554.,  8216.,  9688., 11408., 12032., 13496., 15288., 16596., 15984., 14084., 11664., 10580.,  9200.,  8286., 10215., 12680., 14217., 15650., 17227., 17841., 16206., 14387., 12392., 11333., 10274.,  9262., 11071., 12680., 13249., 14706., 16531., 17913., 17246., 15403., 13160., 11805., 10162.,  8286., 10215., 12680., 14217., 15650., 17227., 17841., 16206., 14387., 12392., 11333., 10274.,  9262., 11071., 12680., 13249., 14706., 16531., 17913., 17246., 15403., 13160., 11805., 10162.,  7536.,  9212., 11408., 12716., 14320., 15948., 16536., 14840., 13168., 11280., 10280.,  9224.,  7462.,  9159., 10552., 11185., 12266., 13531., 14421., 13406., 12103., 10776.,  9817.,  8466.,  6416.,  7648.,  9280., 10096., 11056., 12416., 13232., 12144., 10912.,  9280.,  8464.,  7504.,  5454.,  6551.,  7784.,  8649.,  9794., 10971., 11657., 10798.,  9499.,  8008.,  7277.,  6594.,  4832.,  5900.,  7280.,  7772.,  8224.,  8908.,  9088.,  8472.,  8088.,  7152.,  6560.,  5704.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x12x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17227., 17841., 16531., 17913., 17227., 17841., 16531., 17913.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x12x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4428.,  4992.,  5370.,  6048.,  6448.,  7264.,  7054.,  7936.,  7908.,  8880.,  8530.,  9616.,  9106., 10264.,  8948., 10016.,  7902.,  8856.,  6448.,  7264.,  5946.,  6696.,  5468.,  6128.,  5178.,  5820.,  6127.,  6910.,  7512.,  8464.,  8277.,  9298.,  8934., 10052., 10011., 11254., 10467., 11794.,  9934., 11164.,  9189., 10294.,  7704.,  8656.,  6679.,  7546.,  6082.,  6836.,  6064.,  6816.,  7416.,  8320.,  8768.,  9856.,  9352., 10528., 10448., 11744., 11544., 12992., 12312., 13856., 11472., 12896., 10120., 11392.,  8768.,  9856.,  8184.,  9184.,  7088.,  7968.,  6654.,  7484.,  7973.,  8982.,  9832., 11056., 10871., 12186., 11570., 13012., 12953., 14558., 13889., 15602., 13050., 14636., 11591., 13014.,  9768., 10992.,  8877.,  9994.,  8166.,  9140.,  7460.,  8400.,  9078., 10208., 10832., 12192., 11730., 13200., 13132., 14752., 14302., 16112., 15262., 17192., 14684., 16464., 12962., 14552., 10832., 12192., 10038., 11288.,  9012., 10112.,  8210.,  9228.,  9707., 10942., 11896., 13392., 13081., 14690., 14158., 15924., 15911., 17878., 16751., 18850., 15670., 17612., 14377., 16118., 12088., 13584., 10643., 12010.,  9626., 10820.,  8338.,  9388., 10123., 11374., 11896., 13392., 12921., 14546., 14542., 16340., 16007., 18022., 16847., 18994., 15926., 17900., 14089., 15846., 12088., 13584., 11059., 12442.,  9882., 11108.,  8210.,  9228.,  9707., 10942., 11896., 13392., 13081., 14690., 14158., 15924., 15911., 17878., 16751., 18850., 15670., 17612., 14377., 16118., 12088., 13584., 10643., 12010.,  9626., 10820.,  8338.,  9388., 10123., 11374., 11896., 13392., 12921., 14546., 14542., 16340., 16007., 18022., 16847., 18994., 15926., 17900., 14089., 15846., 12088., 13584., 11059., 12442.,  9882., 11108.,  7620.,  8560.,  8894., 10024., 10832., 12192., 11818., 13288., 13036., 14656., 14758., 16568., 15430., 17360., 14092., 15872., 13162., 14752., 11088., 12448.,  9694., 10944.,  8548.,  9648.,  6942.,  7804.,  8461.,  9486.,  9832., 11056., 10543., 11874., 11858., 13332., 13249., 14902., 13897., 15658., 12714., 14332., 11247., 12686., 10024., 11248.,  9205., 10338.,  7958.,  8964.,  6064.,  6816.,  7160.,  8064.,  8768.,  9856.,  9608., 10784., 10448., 11744., 11800., 13248., 12568., 14112., 11472., 12896., 10376., 11648.,  8768.,  9856.,  7928.,  8928.,  7088.,  7968.,  5306.,  5980.,  6415.,  7214.,  7512.,  8464.,  8245.,  9282.,  9318., 10468., 10235., 11526., 10691., 12066., 10190., 11452.,  9029., 10150.,  7704.,  8656.,  6967.,  7850.,  6338.,  7124.,  4588.,  5152.,  5314.,  5992.,  6448.,  7264.,  7014.,  7896.,  7812.,  8784.,  8858.,  9944.,  9146., 10304.,  8356.,  9424.,  7974.,  8928.,  6704.,  7520.,  5730.,  6480.,  5004.,  5664.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x12x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {15911., 17878., 16751., 18850., 16007., 18022., 16847., 18994., 15911., 17878., 16751., 18850., 16007., 18022., 16847., 18994.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x12x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4020.,  4584.,  5148.,  5712.,  5022.,  5700.,  6378.,  7056.,  5808.,  6624.,  7440.,  8256.,  6090.,  6972.,  7854.,  8736.,  6924.,  7896.,  8868.,  9840.,  7542.,  8628.,  9714., 10800.,  8046.,  9204., 10362., 11520.,  7596.,  8664.,  9732., 10800.,  6594.,  7548.,  8502.,  9456.,  5808.,  6624.,  7440.,  8256.,  5526.,  6276.,  7026.,  7776.,  4692.,  5352.,  6012.,  6672.,  4530.,  5172.,  5814.,  6456.,  5327.,  6110.,  6893.,  7676.,  6712.,  7664.,  8616.,  9568.,  7517.,  8538.,  9559., 10580.,  7886.,  9004., 10122., 11240.,  9083., 10326., 11569., 12812.,  9527., 10854., 12181., 13508.,  8830., 10060., 11290., 12520.,  7929.,  9034., 10139., 11244.,  6840.,  7792.,  8744.,  9696.,  5835.,  6702.,  7569.,  8436.,  5410.,  6164.,  6918.,  7672.,  5360.,  6112.,  6864.,  7616.,  6696.,  7600.,  8504.,  9408.,  7744.,  8832.,  9920., 11008.,  8120.,  9296., 10472., 11648.,  9232., 10528., 11824., 13120., 10056., 11504., 12952., 14400., 10728., 12272., 13816., 15360., 10128., 11552., 12976., 14400.,  8792., 10064., 11336., 12608.,  7744.,  8832.,  9920., 11008.,  7368.,  8368.,  9368., 10368.,  6256.,  7136.,  8016.,  8896.,  5870.,  6700.,  7530.,  8360.,  6873.,  7882.,  8891.,  9900.,  8648.,  9872., 11096., 12320.,  9675., 10990., 12305., 13620., 10194., 11636., 13078., 14520., 11725., 13330., 14935., 16540., 12337., 14050., 15763., 17476., 11362., 12948., 14534., 16120., 10255., 11678., 13101., 14524.,  8776., 10000., 11224., 12448.,  7549.,  8666.,  9783., 10900.,  6974.,  7948.,  8922.,  9896.,  6700.,  7640.,  8580.,  9520.,  8370.,  9500., 10630., 11760.,  9680., 11040., 12400., 13760., 10150., 11620., 13090., 14560., 11540., 13160., 14780., 16400., 12570., 14380., 16190., 18000., 13410., 15340., 17270., 19200., 12660., 14440., 16220., 18000., 10990., 12580., 14170., 15760.,  9680., 11040., 12400., 13760.,  9210., 10460., 11710., 12960.,  7820.,  8920., 10020., 11120.,  7210.,  8228.,  9246., 10264.,  8419.,  9654., 10889., 12124., 10584., 12080., 13576., 15072., 11833., 13442., 15051., 16660., 12502., 14268., 16034., 17800., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13894., 15836., 17778., 19720., 12581., 14322., 16063., 17804., 10712., 12208., 13704., 15200.,  9263., 10630., 11997., 13364.,  8538.,  9732., 10926., 12120.,  7434.,  8484.,  9534., 10584.,  9235., 10486., 11737., 12988., 10584., 12080., 13576., 15072., 11241., 12866., 14491., 16116., 12726., 14524., 16322., 18120., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14118., 16092., 18066., 20040., 11989., 13746., 15503., 17260., 10712., 12208., 13704., 15200., 10079., 11462., 12845., 14228.,  8762.,  9988., 11214., 12440.,  7210.,  8228.,  9246., 10264.,  8419.,  9654., 10889., 12124., 10584., 12080., 13576., 15072., 11833., 13442., 15051., 16660., 12502., 14268., 16034., 17800., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13894., 15836., 17778., 19720., 12581., 14322., 16063., 17804., 10712., 12208., 13704., 15200.,  9263., 10630., 11997., 13364.,  8538.,  9732., 10926., 12120.,  7434.,  8484.,  9534., 10584.,  9235., 10486., 11737., 12988., 10584., 12080., 13576., 15072., 11241., 12866., 14491., 16116., 12726., 14524., 16322., 18120., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14118., 16092., 18066., 20040., 11989., 13746., 15503., 17260., 10712., 12208., 13704., 15200., 10079., 11462., 12845., 14228.,  8762.,  9988., 11214., 12440.,  6700.,  7640.,  8580.,  9520.,  7730.,  8860.,  9990., 11120.,  9680., 11040., 12400., 13760., 10790., 12260., 13730., 15200., 11540., 13160., 14780., 16400., 13210., 15020., 16830., 18640., 14050., 15980., 17910., 19840., 12660., 14440., 16220., 18000., 11630., 13220., 14810., 16400.,  9680., 11040., 12400., 13760.,  8570.,  9820., 11070., 12320.,  7820.,  8920., 10020., 11120.,  6094.,  6956.,  7818.,  8680.,  7561.,  8586.,  9611., 10636.,  8648.,  9872., 11096., 12320.,  9211., 10542., 11873., 13204., 10418., 11892., 13366., 14840., 11485., 13138., 14791., 16444., 12097., 13858., 15619., 17380., 11586., 13204., 14822., 16440.,  9791., 11230., 12669., 14108.,  8776., 10000., 11224., 12448.,  8237.,  9370., 10503., 11636.,  7198.,  8204.,  9210., 10216.,  5360.,  6112.,  6864.,  7616.,  6184.,  7088.,  7992.,  8896.,  7744.,  8832.,  9920., 11008.,  8632.,  9808., 10984., 12160.,  9232., 10528., 11824., 13120., 10568., 12016., 13464., 14912., 11240., 12784., 14328., 15872., 10128., 11552., 12976., 14400.,  9304., 10576., 11848., 13120.,  7744.,  8832.,  9920., 11008.,  6856.,  7856.,  8856.,  9856.,  6256.,  7136.,  8016.,  8896.,  4754.,  5428.,  6102.,  6776.,  5887.,  6686.,  7485.,  8284.,  6712.,  7664.,  8616.,  9568.,  7181.,  8218.,  9255., 10292.,  8110.,  9260., 10410., 11560.,  8971., 10262., 11553., 12844.,  9415., 10790., 12165., 13540.,  9054., 10316., 11578., 12840.,  7593.,  8714.,  9835., 10956.,  6840.,  7792.,  8744.,  9696.,  6395.,  7278.,  8161.,  9044.,  5634.,  6420.,  7206.,  7992.,  4020.,  4584.,  5148.,  5712.,  4638.,  5316.,  5994.,  6672.,  5808.,  6624.,  7440.,  8256.,  6474.,  7356.,  8238.,  9120.,  6924.,  7896.,  8868.,  9840.,  7926.,  9012., 10098., 11184.,  8430.,  9588., 10746., 11904.,  7596.,  8664.,  9732., 10800.,  6978.,  7932.,  8886.,  9840.,  5808.,  6624.,  7440.,  8256.,  5142.,  5892.,  6642.,  7392.,  4692.,  5352.,  6012.,  6672.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x12x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x12x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x12x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x12x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x12x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x12x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x12x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x13x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2320., 2630., 2976., 3528., 4104., 4746., 5163., 5148., 4784., 4266., 3584., 2872., 2408., 2876., 3079., 3336., 3768., 4368., 5049., 5056., 5079., 4818., 4744., 4304., 3889., 3298., 3152., 3568., 4256., 4824., 5440., 5888., 5860., 5784., 5216., 4672., 4080., 3544., 3168., 4034., 4360., 4912., 5409., 6098., 6890., 6994., 6986., 6388., 5691., 5000., 4244., 3480., 4504., 5078., 5840., 6428., 7088., 7602., 7429., 7336., 6920., 6290., 5728., 4988., 4336., 4440., 5393., 6232., 7282., 8020., 8867., 8712., 8557., 7542., 6702., 5728., 4967., 4382., 4539., 5176., 5908., 6724., 7869., 8612., 8681., 8654., 8025., 7186., 6260., 5162., 4319., 4622., 5359., 6144., 6886., 7574., 8373., 8410., 8607., 7788., 7062., 6280., 5453., 4704., 4529., 5174., 5916., 6744., 7647., 8406., 8411., 8320., 7663., 6890., 6188., 5312., 4513., 4496., 5229., 5680., 6351., 6864., 7465., 7490., 7659., 7060., 6381., 5632., 4823., 4076., 3719., 4388., 5156., 5758., 6457., 6988., 6866., 6632., 6029., 5390., 4804., 4280., 3811., 3328., 3844., 4320., 5004., 5520., 6116., 5840., 5788., 5280., 4772., 3920., 3308., 2752., 3525., 3958., 4476., 4704., 5003., 5366., 5329., 5324., 4867., 4198., 3564., 2988., 2461., 2384., 2883., 3584., 4161., 4544., 4983., 4794., 4701., 4332., 3787., 3392., 3041., 2484.};
  const std::array<int, 4> in_shape = {{ 1, 14, 13, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x13x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {8867., 8712., 8557., 8612., 8681., 8654., 8373., 8410., 8607., 8406., 8411., 8320.};
  const std::array<int, 4> in_shape = {{ 1, 14, 13, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x13x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2336., 2624., 2719., 3052., 3136., 3520., 3495., 3936., 3832., 4320., 4247., 4788., 4535., 5094., 4487., 5048., 4244., 4752., 3747., 4212., 3184., 3600., 2695., 3056., 2500., 2816., 2783., 3112., 3043., 3422., 3356., 3792., 3836., 4336., 4357., 4912., 5177., 5794., 5098., 5728., 5067., 5694., 4567., 5140., 4288., 4816., 3748., 4224., 3345., 3762., 2901., 3268., 3120., 3520., 3580., 4032., 4320., 4832., 4684., 5264., 5152., 5792., 5628., 6336., 5676., 6392., 5644., 6352., 5328., 5968., 4716., 5296., 4192., 4704., 3564., 4016., 3104., 3504., 3887., 4356., 4408., 4944., 4892., 5504., 5433., 6114., 5901., 6644., 6614., 7428., 6547., 7364., 6528., 7332., 5843., 6568., 5145., 5798., 4612., 5184., 4214., 4712., 3457., 3888., 4072., 4592., 4693., 5292., 5488., 6176., 6133., 6904., 6960., 7808., 7469., 8404., 7541., 8474., 7277., 8192., 6692., 7520., 5865., 6612., 5280., 5936., 4557., 5128., 3972., 4464., 4247., 4800., 5249., 5890., 5868., 6608., 6642., 7476., 7341., 8264., 8183., 9206., 8232., 9264., 8297., 9322., 7527., 8460., 6798., 7644., 5876., 6624., 5087., 5742., 4405., 4972., 4643., 5206., 5206., 5856., 5852., 6600., 6447., 7288., 7481., 8410., 8100., 9128., 8101., 9122., 7910., 8924., 7415., 8338., 6703., 7540., 6100., 6840., 5116., 5764., 4445., 5006., 4495., 5068., 5451., 6110., 6188., 6944., 6924., 7772., 7333., 8268., 8049., 9082., 7986., 9012., 8243., 9262., 7383., 8312., 6672., 7500., 5812., 6544., 5081., 5722., 4357., 4912., 4523., 5090., 5216., 5884., 6108., 6872., 6793., 7648., 7665., 8606., 8286., 9324., 8415., 9446., 8096., 9120., 7319., 8254., 6529., 7364., 6052., 6792., 5190., 5840., 4397., 4946., 3896., 4400., 4731., 5322., 5312., 5984., 6003., 6750., 6512., 7344., 7203., 8130., 7159., 8084., 7403., 8326., 6732., 7576., 6167., 6922., 5328., 6000., 4587., 5182., 3932., 4440., 3715., 4174., 4209., 4744., 4748., 5352., 5186., 5852., 5905., 6642., 6503., 7320., 6528., 7332., 6313., 7120., 5723., 6458., 5006., 5660., 4452., 5032., 3967., 4480., 3585., 4022., 3472., 3904., 4020., 4520., 4400., 4960., 4980., 5592., 5280., 5952., 5924., 6664., 5524., 6240., 5556., 6264., 5136., 5776., 4868., 5432., 4176., 4672., 3588., 4024., 2880., 3248., 3123., 3514., 3654., 4108., 4316., 4824., 4343., 4896., 4537., 5142., 5012., 5676., 5133., 5778., 5046., 5688., 4631., 5206., 3895., 4396., 3444., 3880., 3036., 3416., 2541., 2858., 2464., 2784., 2841., 3222., 3376., 3808., 3865., 4338., 4200., 4720., 4753., 5326., 4389., 4948., 4201., 4762., 3820., 4328., 3381., 3830., 3136., 3536., 2953., 3298., 2204., 2488.};
  const std::array<int, 4> in_shape = {{ 1, 14, 13, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x13x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {8183., 9206., 8232., 9264., 8297., 9322., 8100., 9128., 8101., 9122., 7910., 8924., 8049., 9082., 7986., 9012., 8243., 9262., 8286., 9324., 8415., 9446., 8096., 9120.};
  const std::array<int, 4> in_shape = {{ 1, 14, 13, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x13x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2000.,  2288.,  2576.,  2864.,  2241.,  2574.,  2907.,  3240.,  2624.,  3008.,  3392.,  3776.,  2933.,  3374.,  3815.,  4256.,  3352.,  3840.,  4328.,  4816.,  3681.,  4222.,  4763.,  5304.,  3967.,  4526.,  5085.,  5644.,  3853.,  4414.,  4975.,  5536.,  3740.,  4248.,  4756.,  5264.,  3221.,  3686.,  4151.,  4616.,  2816.,  3232.,  3648.,  4064.,  2437.,  2798.,  3159.,  3520.,  2316.,  2632.,  2948.,  3264.,  2245.,  2574.,  2903.,  3232.,  2843.,  3222.,  3601.,  3980.,  3044.,  3480.,  3916.,  4352.,  3396.,  3896.,  4396.,  4896.,  3711.,  4266.,  4821.,  5376.,  4361.,  4978.,  5595.,  6212.,  4318.,  4948.,  5578.,  6208.,  4387.,  5014.,  5641.,  6268.,  3985.,  4558.,  5131.,  5704.,  3888.,  4416.,  4944.,  5472.,  3276.,  3752.,  4228.,  4704.,  2817.,  3234.,  3651.,  4068.,  2507.,  2874.,  3241.,  3608.,  2832.,  3232.,  3632.,  4032.,  3156.,  3608.,  4060.,  4512.,  3776.,  4288.,  4800.,  5312.,  4020.,  4600.,  5180.,  5760.,  4608.,  5248.,  5888.,  6528.,  4948.,  5656.,  6364.,  7072.,  5100.,  5816.,  6532.,  7248.,  4852.,  5560.,  6268.,  6976.,  4576.,  5216.,  5856.,  6496.,  4084.,  4664.,  5244.,  5824.,  3776.,  4288.,  4800.,  5312.,  3124.,  3576.,  4028.,  4480.,  2800.,  3200.,  3600.,  4000.,  3177.,  3646.,  4115.,  4584.,  3736.,  4272.,  4808.,  5344.,  4212.,  4824.,  5436.,  6048.,  4937.,  5618.,  6299.,  6980.,  5123.,  5866.,  6609.,  7352.,  5774.,  6588.,  7402.,  8216.,  5605.,  6422.,  7239.,  8056.,  5804.,  6608.,  7412.,  8216.,  5025.,  5750.,  6475.,  7200.,  4565.,  5218.,  5871.,  6524.,  3948.,  4520.,  5092.,  5664.,  3738.,  4236.,  4734.,  5232.,  3075.,  3506.,  3937.,  4368.,  3640.,  4160.,  4680.,  5200.,  4019.,  4618.,  5217.,  5816.,  4720.,  5408.,  6096.,  6784.,  5239.,  6010.,  6781.,  7552.,  6016.,  6864.,  7712.,  8560.,  6387.,  7322.,  8257.,  9192.,  6661.,  7594.,  8527.,  9460.,  6279.,  7194.,  8109.,  9024.,  5900.,  6728.,  7556.,  8384.,  5095.,  5842.,  6589.,  7336.,  4592.,  5248.,  5904.,  6560.,  3951.,  4522.,  5093.,  5664.,  3596.,  4088.,  4580.,  5072.,  3765.,  4318.,  4871.,  5424.,  4561.,  5202.,  5843.,  6484.,  5076.,  5816.,  6556.,  7296.,  5762.,  6596.,  7430.,  8264.,  6239.,  7162.,  8085.,  9008.,  7183.,  8206.,  9229., 10252.,  7080.,  8112.,  9144., 10176.,  7281.,  8306.,  9331., 10356.,  6489.,  7422.,  8355.,  9288.,  6046.,  6892.,  7738.,  8584.,  5084.,  5832.,  6580.,  7328.,  4495.,  5150.,  5805.,  6460.,  3891.,  4458.,  5025.,  5592.,  4083.,  4646.,  5209.,  5772.,  4546.,  5196.,  5846.,  6496.,  5356.,  6104.,  6852.,  7600.,  5669.,  6510.,  7351.,  8192.,  6593.,  7522.,  8451.,  9380.,  7076.,  8104.,  9132., 10160.,  7149.,  8170.,  9191., 10212.,  6838.,  7852.,  8866.,  9880.,  6611.,  7534.,  8457.,  9380.,  5913.,  6750.,  7587.,  8424.,  5348.,  6088.,  6828.,  7568.,  4336.,  4984.,  5632.,  6280.,  3977.,  4538.,  5099.,  5660.,  3825.,  4398.,  4971.,  5544.,  4595.,  5254.,  5913.,  6572.,  5316.,  6072.,  6828.,  7584.,  6152.,  7000.,  7848.,  8696.,  6371.,  7306.,  8241.,  9176.,  7289.,  8322.,  9355., 10388.,  6978.,  8004.,  9030., 10056.,  7307.,  8326.,  9345., 10364.,  6365.,  7294.,  8223.,  9152.,  5908.,  6736.,  7564.,  8392.,  5100.,  5832.,  6564.,  7296.,  4561.,  5202.,  5843.,  6484.,  3807.,  4362.,  4917.,  5472.,  3935.,  4502.,  5069.,  5636.,  4452.,  5120.,  5788.,  6456.,  5468.,  6232.,  6996.,  7760.,  5931.,  6786.,  7641.,  8496.,  6597.,  7538.,  8479.,  9420.,  7054.,  8092.,  9130., 10168.,  7383.,  8414.,  9445., 10476.,  7072.,  8096.,  9120., 10144.,  6567.,  7502.,  8437.,  9372.,  5663.,  6498.,  7333.,  8168.,  5380.,  6120.,  6860.,  7600.,  4546.,  5196.,  5846.,  6496.,  3893.,  4442.,  4991.,  5540.,  3400.,  3904.,  4408.,  4912.,  4055.,  4646.,  5237.,  5828.,  4512.,  5184.,  5856.,  6528.,  5307.,  6054.,  6801.,  7548.,  5712.,  6544.,  7376.,  8208.,  6487.,  7414.,  8341.,  9268.,  6305.,  7230.,  8155.,  9080.,  6443.,  7366.,  8289.,  9212.,  5740.,  6584.,  7428.,  8272.,  5275.,  6030.,  6785.,  7540.,  4544.,  5216.,  5888.,  6560.,  4163.,  4758.,  5353.,  5948.,  3468.,  3976.,  4484.,  4992.,  3307.,  3766.,  4225.,  4684.,  3723.,  4258.,  4793.,  5328.,  4252.,  4856.,  5460.,  6064.,  4458.,  5124.,  5790.,  6456.,  5217.,  5954.,  6691.,  7428.,  5597.,  6414.,  7231.,  8048.,  5660.,  6464.,  7268.,  8072.,  5483.,  6290.,  7097.,  7904.,  5239.,  5974.,  6709.,  7444.,  4494.,  5148.,  5802.,  6456.,  3940.,  4520.,  5100.,  5680.,  3373.,  3886.,  4399.,  4912.,  3037.,  3474.,  3911.,  4348.,  2992.,  3424.,  3856.,  4288.,  3668.,  4168.,  4668.,  5168.,  3888.,  4448.,  5008.,  5568.,  4388.,  5000.,  5612.,  6224.,  4576.,  5248.,  5920.,  6592.,  5316.,  6056.,  6796.,  7536.,  4860.,  5576.,  6292.,  7008.,  4996.,  5704.,  6412.,  7120.,  4448.,  5088.,  5728.,  6368.,  4212.,  4776.,  5340.,  5904.,  3504.,  4000.,  4496.,  4992.,  2996.,  3432.,  3868.,  4304.,  2512.,  2880.,  3248.,  3616.,  2623.,  3014.,  3405.,  3796.,  3014.,  3468.,  3922.,  4376.,  3804.,  4312.,  4820.,  5328.,  3829.,  4382.,  4935.,  5488.,  4197.,  4802.,  5407.,  6012.,  4496.,  5160.,  5824.,  6488.,  4677.,  5322.,  5967.,  6612.,  4426.,  5068.,  5710.,  6352.,  3999.,  4574.,  5149.,  5724.,  3433.,  3934.,  4435.,  4936.,  3284.,  3720.,  4156.,  4592.,  2684.,  3064.,  3444.,  3824.,  2221.,  2538.,  2855.,  3172.,  2128.,  2448.,  2768.,  3088.,  2549.,  2930.,  3311.,  3692.,  2928.,  3360.,  3792.,  4224.,  3433.,  3906.,  4379.,  4852.,  3544.,  4064.,  4584.,  5104.,  3973.,  4546.,  5119.,  5692.,  3771.,  4330.,  4889.,  5448.,  3905.,  4466.,  5027.,  5588.,  3404.,  3912.,  4420.,  4928.,  3081.,  3530.,  3979.,  4428.,  2736.,  3136.,  3536.,  3936.,  2505.,  2850.,  3195.,  3540.,  1916.,  2200.,  2484.,  2768.};
  const std::array<int, 4> in_shape = {{ 1, 14, 13, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x13x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 7183.,  8206.,  9229., 10252.,  7080.,  8112.,  9144., 10176.,  7281.,  8306.,  9331., 10356.,  7076.,  8104.,  9132., 10160.,  7149.,  8170.,  9191., 10212.,  6838.,  7852.,  8866.,  9880.,  7289.,  8322.,  9355., 10388.,  6978.,  8004.,  9030., 10056.,  7307.,  8326.,  9345., 10364.,  7054.,  8092.,  9130., 10168.,  7383.,  8414.,  9445., 10476.,  7072.,  8096.,  9120., 10144.};
  const std::array<int, 4> in_shape = {{ 1, 14, 13, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x13x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 5020.,  6046.,  7312.,  7922.,  8852.,  9270.,  9466.,  9278.,  8708.,  7866.,  7312.,  5830.,  5036.,  6298.,  7353.,  7880.,  8847.,  9686., 11365., 10979., 11361.,  9902.,  9235.,  7880.,  6869.,  5906.,  6800.,  7816.,  9408., 10488., 12016., 12904., 13064., 12520., 11760., 10360.,  9408.,  7944.,  7056.,  7870.,  9363., 10424., 11957., 12514., 14087., 13825., 14459., 13210., 12081., 10424.,  9335.,  7350.,  8660.,  9746., 11504., 12462., 14364., 15802., 16598., 15858., 14556., 12502., 11504., 10106.,  8900.,  8866., 11181., 12712., 14731., 16030., 17945., 17407., 17445., 15910., 14751., 12712., 11049.,  8986., 10230., 11299., 12616., 13581., 16090., 17175., 17421., 17139., 16194., 14081., 12616., 10687.,  9694.,  9226., 11353., 12712., 14751., 15782., 17445., 17035., 17841., 15566., 14371., 12712., 11285.,  9570.,  9326., 10831., 13000., 14321., 16178., 17139., 17945., 17407., 16170., 14149., 13000., 10731.,  9206.,  8972., 10814., 11440., 12738., 13604., 15494., 15426., 16142., 14148., 13242., 11440., 10198.,  8620.,  7522.,  8809., 10520., 11799., 13598., 14309., 14351., 13753., 12854., 11411., 10520.,  8797.,  7706.,  7120.,  8360.,  9152., 10456., 11184., 12808., 12520., 13064., 11696., 10712.,  9152.,  8104.,  6608.,  6182.,  6963.,  8296.,  8669.,  9418., 10471., 11189., 11075., 10290.,  8833.,  8296.,  7199.,  6110.,  4644.,  5778.,  6864.,  8126.,  8668.,  9770.,  9406.,  9170.,  8300.,  7686.,  6864.,  6090.,  4756.};
  const std::array<int, 4> in_shape = {{ 1, 14, 13, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x13x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17945., 17407., 17445., 17175., 17421., 17139., 17445., 17035., 17841., 17139., 17945., 17407.};
  const std::array<int, 4> in_shape = {{ 1, 14, 13, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x13x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4812.,  5416.,  5394.,  6108.,  6768.,  7584.,  7046.,  7956.,  8036.,  9032.,  8554.,  9660.,  9386., 10500.,  8938., 10060.,  8628.,  9640.,  7190.,  8100.,  6768.,  7584.,  5522.,  6220.,  4892.,  5480.,  5402.,  6100.,  6919.,  7746.,  7448.,  8400.,  8685.,  9758.,  9158., 10348., 10803., 12106., 10043., 11334., 10307., 11586.,  9102., 10268.,  8965., 10022.,  7448.,  8400.,  6647.,  7466.,  5378.,  6068.,  6768.,  7584.,  7576.,  8528.,  9024., 10112.,  9448., 10672., 11280., 12640., 11832., 13328., 12408., 13904., 11576., 13072., 11280., 12640.,  9704., 10928.,  9024., 10112.,  7320.,  8272.,  6768.,  7584.,  6974.,  7868.,  8709.,  9766.,  9576., 10800., 11415., 12778., 11762., 13268., 13561., 15214., 12897., 14562., 14025., 15702., 12122., 13652., 11343., 12722.,  9576., 10800.,  9013., 10078.,  7238.,  8140.,  8036.,  9032.,  9022., 10196., 11280., 12640., 11898., 13420., 13964., 15656., 14502., 16372., 15590., 17452., 14630., 16484., 13916., 15592., 11914., 13436., 11280., 12640.,  9406., 10596.,  8500.,  9512.,  8626.,  9748., 10739., 12042., 11704., 13200., 13601., 15270., 14318., 16172., 17007., 19058., 16183., 18238., 17023., 19082., 14646., 16508., 14073., 15758., 11704., 13200., 10531., 11826.,  8666.,  9780.,  9490., 10620., 10267., 11574., 12280., 13776., 13001., 14698., 15758., 17636., 16215., 18286., 16479., 18522., 15655., 17702., 15542., 17396., 13441., 15122., 12280., 13776.,  9931., 11230.,  9562., 10684.,  8690.,  9828., 10691., 12002., 11704., 13200., 14001., 15694., 14446., 16316., 17023., 19082., 15943., 18006., 17295., 19362., 14582., 16460., 13705., 15382., 11704., 13200., 10739., 12042.,  8794.,  9924.,  9106., 10220.,  9963., 11278., 12536., 14032., 13337., 15026., 15054., 16916., 15655., 17702., 17007., 19058., 16183., 18238., 15606., 17476., 12945., 14618., 12536., 14032., 10267., 11574.,  9114., 10220.,  7972.,  9000.,  9910., 11116., 10640., 12000., 12642., 14164., 13196., 14888., 15326., 17196., 14782., 16676., 15326., 17212., 13164., 14872., 12738., 14260., 10640., 12000.,  9782., 10972.,  7812.,  8824.,  7582.,  8500.,  8597.,  9682., 10024., 11248., 10583., 11950., 12690., 14204., 13129., 14794., 13713., 15390., 13017., 14706., 12714., 14252., 10815., 12198., 10024., 11248.,  8005.,  9066.,  7318.,  8212.,  6384.,  7200.,  7896.,  8848.,  8512.,  9600., 10152., 11376., 10640., 12000., 12408., 13904., 11576., 13072., 12408., 13904., 10640., 12000., 10152., 11376.,  8512.,  9600.,  7896.,  8848.,  6384.,  7200.,  5690.,  6412.,  6303.,  7142.,  8024.,  8976.,  8261.,  9322.,  9318., 10484.,  9995., 11294., 11091., 12410., 10523., 11862.,  9870., 11076.,  8317.,  9394.,  8024.,  8976.,  6543.,  7374.,  5762.,  6476.,  4684.,  5288.,  5802.,  6516.,  6384.,  7200.,  7630.,  8540.,  7652.,  8648.,  8834.,  9940.,  8610.,  9724.,  9154., 10276.,  7812.,  8824.,  7598.,  8508.,  6384.,  7200.,  5738.,  6436.,  4460.,  5048.};
  const std::array<int, 4> in_shape = {{ 1, 14, 13, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x13x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17007., 19058., 16183., 18238., 17023., 19082., 16215., 18286., 16479., 18522., 15655., 17702., 17023., 19082., 15943., 18006., 17295., 19362., 15655., 17702., 17007., 19058., 16183., 18238.};
  const std::array<int, 4> in_shape = {{ 1, 14, 13, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x13x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4556.,  5160.,  5764.,  6368.,  4714.,  5428.,  6142.,  6856.,  6192.,  7008.,  7824.,  8640.,  5982.,  6892.,  7802.,  8712.,  7604.,  8600.,  9596., 10592.,  7378.,  8484.,  9590., 10696.,  8458.,  9572., 10686., 11800.,  7490.,  8612.,  9734., 10856.,  7716.,  8728.,  9740., 10752.,  6110.,  7020.,  7930.,  8840.,  6192.,  7008.,  7824.,  8640.,  4602.,  5300.,  5998.,  6696.,  4444.,  5032.,  5620.,  6208.,  4666.,  5364.,  6062.,  6760.,  6227.,  7054.,  7881.,  8708.,  6328.,  7280.,  8232.,  9184.,  8089.,  9162., 10235., 11308.,  7878.,  9068., 10258., 11448.,  9839., 11142., 12445., 13748.,  8459.,  9750., 11041., 12332.,  9639., 10918., 12197., 13476.,  7742.,  8908., 10074., 11240.,  7913.,  8970., 10027., 11084.,  6328.,  7280.,  8232.,  9184.,  6203.,  7022.,  7841.,  8660.,  4578.,  5268.,  5958.,  6648.,  6192.,  7008.,  7824.,  8640.,  6328.,  7280.,  8232.,  9184.,  8256.,  9344., 10432., 11520.,  8136.,  9360., 10584., 11808., 10320., 11680., 13040., 14400.,  9944., 11440., 12936., 14432., 11352., 12848., 14344., 15840.,  9944., 11440., 12936., 14432., 10320., 11680., 13040., 14400.,  8136.,  9360., 10584., 11808.,  8256.,  9344., 10432., 11520.,  6328.,  7280.,  8232.,  9184.,  6192.,  7008.,  7824.,  8640.,  5934.,  6828.,  7722.,  8616.,  7913.,  8970., 10027., 11084.,  8136.,  9360., 10584., 11808., 10331., 11694., 13057., 14420., 10002., 11508., 13014., 14520., 12509., 14162., 15815., 17468., 11041., 12706., 14371., 16036., 12645., 14322., 15999., 17676., 10202., 11732., 13262., 14792., 10379., 11758., 13137., 14516.,  8136.,  9360., 10584., 11808.,  8001.,  9066., 10131., 11196.,  5958.,  6860.,  7762.,  8664.,  7604.,  8600.,  9596., 10592.,  7830.,  9004., 10178., 11352., 10320., 11680., 13040., 14400., 10050., 11572., 13094., 14616., 12812., 14504., 16196., 17888., 12398., 14268., 16138., 18008., 14134., 15996., 17858., 19720., 12286., 14140., 15994., 17848., 12700., 14376., 16052., 17728., 10178., 11700., 13222., 14744., 10320., 11680., 13040., 14400.,  7942.,  9132., 10322., 11512.,  7716.,  8728.,  9740., 10752.,  7426.,  8548.,  9670., 10792.,  9839., 11142., 12445., 13748.,  9944., 11440., 12936., 14432., 12685., 14354., 16023., 17692., 12350., 14204., 16058., 17912., 15515., 17566., 19617., 21668., 13607., 15662., 17717., 19772., 15539., 17598., 19657., 21716., 12438., 14300., 16162., 18024., 12605., 14290., 15975., 17660.,  9944., 11440., 12936., 14432.,  9687., 10982., 12277., 13572.,  7466.,  8580.,  9694., 10808.,  8634.,  9764., 10894., 12024.,  8507.,  9814., 11121., 12428., 11352., 12848., 14344., 15840., 11137., 12834., 14531., 16228., 14310., 16188., 18066., 19944., 13655., 15726., 17797., 19868., 15491., 17534., 19577., 21620., 13583., 15630., 17677., 19724., 14046., 15900., 17754., 19608., 11217., 12898., 14579., 16260., 11352., 12848., 14344., 15840.,  8611.,  9910., 11209., 12508.,  8418.,  9540., 10662., 11784.,  7538.,  8676.,  9814., 10952.,  9991., 11302., 12613., 13924.,  9944., 11440., 12936., 14432., 12821., 14514., 16207., 17900., 12334., 14204., 16074., 17944., 15539., 17598., 19657., 21716., 13631., 15694., 17757., 19820., 15563., 17630., 19697., 21764., 12422., 14300., 16178., 18056., 12645., 14322., 15999., 17676.,  9944., 11440., 12936., 14432.,  9839., 11142., 12445., 13748.,  7578.,  8708.,  9838., 10968.,  8394.,  9508., 10622., 11736.,  8659.,  9974., 11289., 12604., 11352., 12848., 14344., 15840., 11177., 12866., 14555., 16244., 14198., 16060., 17922., 19784., 13583., 15630., 17677., 19724., 15515., 17566., 19617., 21668., 13607., 15662., 17717., 19772., 14286., 16156., 18026., 19896., 11001., 12674., 14347., 16020., 11352., 12848., 14344., 15840.,  8507.,  9814., 11121., 12428.,  8434.,  9540., 10646., 11752.,  6932.,  7960.,  8988., 10016.,  9110., 10316., 11522., 12728.,  9040., 10400., 11760., 13120., 11490., 13012., 14534., 16056., 11276., 12968., 14660., 16352., 14094., 15964., 17834., 19704., 12598., 14492., 16386., 18280., 14334., 16220., 18106., 19992., 11260., 12968., 14676., 16384., 11618., 13140., 14662., 16184.,  9040., 10400., 11760., 13120.,  9126., 10316., 11506., 12696.,  6692.,  7704.,  8716.,  9728.,  6870.,  7788.,  8706.,  9624.,  7197.,  8282.,  9367., 10452.,  9288., 10512., 11736., 12960.,  9063., 10430., 11797., 13164., 11466., 12980., 14494., 16008., 11041., 12706., 14371., 16036., 12645., 14322., 15999., 17676., 11177., 12866., 14555., 16244., 11666., 13204., 14742., 16280.,  9111., 10494., 11877., 13260.,  9288., 10512., 11736., 12960.,  6933.,  7994.,  9055., 10116.,  6798.,  7692.,  8586.,  9480.,  5424.,  6240.,  7056.,  7872.,  7224.,  8176.,  9128., 10080.,  7232.,  8320.,  9408., 10496.,  9288., 10512., 11736., 12960.,  9040., 10400., 11760., 13120., 11352., 12848., 14344., 15840.,  9944., 11440., 12936., 14432., 11352., 12848., 14344., 15840.,  9040., 10400., 11760., 13120.,  9288., 10512., 11736., 12960.,  7232.,  8320.,  9408., 10496.,  7224.,  8176.,  9128., 10080.,  5424.,  6240.,  7056.,  7872.,  5474.,  6196.,  6918.,  7640.,  5495.,  6334.,  7173.,  8012.,  7224.,  8176.,  9128., 10080.,  6933.,  7994.,  9055., 10116.,  8862., 10028., 11194., 12360.,  8611.,  9910., 11209., 12508.,  9887., 11206., 12525., 13844.,  8859., 10198., 11537., 12876.,  9174., 10380., 11586., 12792.,  7109.,  8186.,  9263., 10340.,  7224.,  8176.,  9128., 10080.,  5471.,  6302.,  7133.,  7964.,  5386.,  6100.,  6814.,  7528.,  4044.,  4648.,  5252.,  5856.,  5450.,  6164.,  6878.,  7592.,  5424.,  6240.,  7056.,  7872.,  6974.,  7884.,  8794.,  9704.,  6580.,  7576.,  8572.,  9568.,  8370.,  9476., 10582., 11688.,  7402.,  8516.,  9630., 10744.,  8482.,  9604., 10726., 11848.,  6692.,  7704.,  8716.,  9728.,  6846.,  7756.,  8666.,  9576.,  5424.,  6240.,  7056.,  7872.,  5338.,  6036.,  6734.,  7432.,  3932.,  4520.,  5108.,  5696.};
  const std::array<int, 4> in_shape = {{ 1, 14, 13, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x13x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {15515., 17566., 19617., 21668., 13607., 15662., 17717., 19772., 15539., 17598., 19657., 21716., 13655., 15726., 17797., 19868., 15491., 17534., 19577., 21620., 13583., 15630., 17677., 19724., 15539., 17598., 19657., 21716., 13631., 15694., 17757., 19820., 15563., 17630., 19697., 21764., 13583., 15630., 17677., 19724., 15515., 17566., 19617., 21668., 13607., 15662., 17717., 19772.};
  const std::array<int, 4> in_shape = {{ 1, 14, 13, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x13x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3672.,  2940.,  4896.,  3780.,  6120.,  4620.,  6732.,  4620.,  6120.,  3780.,  4896.,  2940.,  3672.,  2940.,  4926.,  3920.,  6354.,  4900.,  7782.,  5390.,  7782.,  4900.,  6354.,  3920.,  4926.,  2940.,  4896.,  3920.,  6528.,  5040.,  8160.,  6160.,  8976.,  6160.,  8160.,  5040.,  6528.,  3920.,  4896.,  3780.,  6354.,  5040.,  8190.,  6300., 10026.,  6930., 10026.,  6300.,  8190.,  5040.,  6354.,  3780.,  6120.,  4900.,  8160.,  6300., 10200.,  7700., 11220.,  7700., 10200.,  6300.,  8160.,  4900.,  6120.,  4620.,  7782.,  6160., 10026.,  7700., 12270.,  8470., 12270.,  7700., 10026.,  6160.,  7782.,  4620.,  6732.,  5390.,  8976.,  6930., 11220.,  8470., 12270.,  8470., 11220.,  6930.,  8976.,  5390.,  6732.,  4620.,  7782.,  6160., 10026.,  7700., 12270.,  8470., 12270.,  7700., 10026.,  6160.,  7782.,  4620.,  6732.,  5390.,  8976.,  6930., 11220.,  8470., 12270.,  8470., 11220.,  6930.,  8976.,  5390.,  6732.,  4200.,  7140.,  5600.,  9180.,  7000., 11220.,  7700., 11220.,  7000.,  9180.,  5600.,  7140.,  4200.,  5508.,  4410.,  7344.,  5670.,  9180.,  6930., 10026.,  6930.,  9180.,  5670.,  7344.,  4410.,  5508.,  3360.,  5712.,  4480.,  7344.,  5600.,  8976.,  6160.,  8976.,  5600.,  7344.,  4480.,  5712.,  3360.,  4284.,  3430.,  5712.,  4410.,  7140.,  5390.,  7782.,  5390.,  7140.,  4410.,  5712.,  3430.,  4284.,  2520.,  4284.,  3360.,  5508.,  4200.,  6732.,  4620.,  6732.,  4200.,  5508.,  3360.,  4284.,  2520.};
  const std::array<int, 4> in_shape = {{ 1, 14, 13, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x13x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470.};
  const std::array<int, 4> in_shape = {{ 1, 14, 13, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x13x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2952.,  3600.,  3444.,  4200.,  3936.,  4800.,  4428.,  5400.,  4920.,  6000.,  5412.,  6600.,  5412.,  6600.,  5412.,  6600.,  4920.,  6000.,  4428.,  5400.,  3936.,  4800.,  3444.,  4200.,  2952.,  3600.,  3444.,  4200.,  3986.,  4860.,  4592.,  5600.,  5134.,  6260.,  5740.,  7000.,  6282.,  7660.,  6346.,  7740.,  6282.,  7660.,  5740.,  7000.,  5134.,  6260.,  4592.,  5600.,  3986.,  4860.,  3444.,  4200.,  3936.,  4800.,  4592.,  5600.,  5248.,  6400.,  5904.,  7200.,  6560.,  8000.,  7216.,  8800.,  7216.,  8800.,  7216.,  8800.,  6560.,  8000.,  5904.,  7200.,  5248.,  6400.,  4592.,  5600.,  3936.,  4800.,  4428.,  5400.,  5134.,  6260.,  5904.,  7200.,  6610.,  8060.,  7380.,  9000.,  8086.,  9860.,  8150.,  9940.,  8086.,  9860.,  7380.,  9000.,  6610.,  8060.,  5904.,  7200.,  5134.,  6260.,  4428.,  5400.,  4920.,  6000.,  5740.,  7000.,  6560.,  8000.,  7380.,  9000.,  8200., 10000.,  9020., 11000.,  9020., 11000.,  9020., 11000.,  8200., 10000.,  7380.,  9000.,  6560.,  8000.,  5740.,  7000.,  4920.,  6000.,  5412.,  6600.,  6282.,  7660.,  7216.,  8800.,  8086.,  9860.,  9020., 11000.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9020., 11000.,  8086.,  9860.,  7216.,  8800.,  6282.,  7660.,  5412.,  6600.,  5412.,  6600.,  6346.,  7740.,  7216.,  8800.,  8150.,  9940.,  9020., 11000.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9020., 11000.,  8150.,  9940.,  7216.,  8800.,  6346.,  7740.,  5412.,  6600.,  5412.,  6600.,  6282.,  7660.,  7216.,  8800.,  8086.,  9860.,  9020., 11000.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9020., 11000.,  8086.,  9860.,  7216.,  8800.,  6282.,  7660.,  5412.,  6600.,  5412.,  6600.,  6346.,  7740.,  7216.,  8800.,  8150.,  9940.,  9020., 11000.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9020., 11000.,  8150.,  9940.,  7216.,  8800.,  6346.,  7740.,  5412.,  6600.,  4920.,  6000.,  5740.,  7000.,  6560.,  8000.,  7380.,  9000.,  8200., 10000.,  9020., 11000.,  9020., 11000.,  9020., 11000.,  8200., 10000.,  7380.,  9000.,  6560.,  8000.,  5740.,  7000.,  4920.,  6000.,  4428.,  5400.,  5198.,  6340.,  5904.,  7200.,  6674.,  8140.,  7380.,  9000.,  8150.,  9940.,  8086.,  9860.,  8150.,  9940.,  7380.,  9000.,  6674.,  8140.,  5904.,  7200.,  5198.,  6340.,  4428.,  5400.,  3936.,  4800.,  4592.,  5600.,  5248.,  6400.,  5904.,  7200.,  6560.,  8000.,  7216.,  8800.,  7216.,  8800.,  7216.,  8800.,  6560.,  8000.,  5904.,  7200.,  5248.,  6400.,  4592.,  5600.,  3936.,  4800.,  3444.,  4200.,  4050.,  4940.,  4592.,  5600.,  5198.,  6340.,  5740.,  7000.,  6346.,  7740.,  6282.,  7660.,  6346.,  7740.,  5740.,  7000.,  5198.,  6340.,  4592.,  5600.,  4050.,  4940.,  3444.,  4200.,  2952.,  3600.,  3444.,  4200.,  3936.,  4800.,  4428.,  5400.,  4920.,  6000.,  5412.,  6600.,  5412.,  6600.,  5412.,  6600.,  4920.,  6000.,  4428.,  5400.,  3936.,  4800.,  3444.,  4200.,  2952.,  3600.};
  const std::array<int, 4> in_shape = {{ 1, 14, 13, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x13x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.};
  const std::array<int, 4> in_shape = {{ 1, 14, 13, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x13x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2818.,  3692.,  4566.,  5440.,  3248.,  4256.,  5264.,  6272.,  3630.,  4756.,  5882.,  7008.,  4060.,  5320.,  6580.,  7840.,  4442.,  5820.,  7198.,  8576.,  4490.,  5884.,  7278.,  8672.,  4442.,  5820.,  7198.,  8576.,  4060.,  5320.,  6580.,  7840.,  3630.,  4756.,  5882.,  7008.,  3248.,  4256.,  5264.,  6272.,  2818.,  3692.,  4566.,  5440.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3248.,  4256.,  5264.,  6272.,  3712.,  4864.,  6016.,  7168.,  4176.,  5472.,  6768.,  8064.,  4640.,  6080.,  7520.,  8960.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  4640.,  6080.,  7520.,  8960.,  4176.,  5472.,  6768.,  8064.,  3712.,  4864.,  6016.,  7168.,  3248.,  4256.,  5264.,  6272.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3630.,  4756.,  5882.,  7008.,  4176.,  5472.,  6768.,  8064.,  4674.,  6124.,  7574.,  9024.,  5220.,  6840.,  8460., 10080.,  5718.,  7492.,  9266., 11040.,  5766.,  7556.,  9346., 11136.,  5718.,  7492.,  9266., 11040.,  5220.,  6840.,  8460., 10080.,  4674.,  6124.,  7574.,  9024.,  4176.,  5472.,  6768.,  8064.,  3630.,  4756.,  5882.,  7008.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  4060.,  5320.,  6580.,  7840.,  4640.,  6080.,  7520.,  8960.,  5220.,  6840.,  8460., 10080.,  5800.,  7600.,  9400., 11200.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  5800.,  7600.,  9400., 11200.,  5220.,  6840.,  8460., 10080.,  4640.,  6080.,  7520.,  8960.,  4060.,  5320.,  6580.,  7840.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4442.,  5820.,  7198.,  8576.,  5104.,  6688.,  8272.,  9856.,  5718.,  7492.,  9266., 11040.,  6380.,  8360., 10340., 12320.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  6380.,  8360., 10340., 12320.,  5718.,  7492.,  9266., 11040.,  5104.,  6688.,  8272.,  9856.,  4442.,  5820.,  7198.,  8576.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4490.,  5884.,  7278.,  8672.,  5104.,  6688.,  8272.,  9856.,  5766.,  7556.,  9346., 11136.,  6380.,  8360., 10340., 12320.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6380.,  8360., 10340., 12320.,  5766.,  7556.,  9346., 11136.,  5104.,  6688.,  8272.,  9856.,  4490.,  5884.,  7278.,  8672.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4442.,  5820.,  7198.,  8576.,  5104.,  6688.,  8272.,  9856.,  5718.,  7492.,  9266., 11040.,  6380.,  8360., 10340., 12320.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  6380.,  8360., 10340., 12320.,  5718.,  7492.,  9266., 11040.,  5104.,  6688.,  8272.,  9856.,  4442.,  5820.,  7198.,  8576.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4490.,  5884.,  7278.,  8672.,  5104.,  6688.,  8272.,  9856.,  5766.,  7556.,  9346., 11136.,  6380.,  8360., 10340., 12320.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6380.,  8360., 10340., 12320.,  5766.,  7556.,  9346., 11136.,  5104.,  6688.,  8272.,  9856.,  4490.,  5884.,  7278.,  8672.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  4060.,  5320.,  6580.,  7840.,  4640.,  6080.,  7520.,  8960.,  5220.,  6840.,  8460., 10080.,  5800.,  7600.,  9400., 11200.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  5800.,  7600.,  9400., 11200.,  5220.,  6840.,  8460., 10080.,  4640.,  6080.,  7520.,  8960.,  4060.,  5320.,  6580.,  7840.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3678.,  4820.,  5962.,  7104.,  4176.,  5472.,  6768.,  8064.,  4722.,  6188.,  7654.,  9120.,  5220.,  6840.,  8460., 10080.,  5766.,  7556.,  9346., 11136.,  5718.,  7492.,  9266., 11040.,  5766.,  7556.,  9346., 11136.,  5220.,  6840.,  8460., 10080.,  4722.,  6188.,  7654.,  9120.,  4176.,  5472.,  6768.,  8064.,  3678.,  4820.,  5962.,  7104.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3248.,  4256.,  5264.,  6272.,  3712.,  4864.,  6016.,  7168.,  4176.,  5472.,  6768.,  8064.,  4640.,  6080.,  7520.,  8960.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  4640.,  6080.,  7520.,  8960.,  4176.,  5472.,  6768.,  8064.,  3712.,  4864.,  6016.,  7168.,  3248.,  4256.,  5264.,  6272.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2866.,  3756.,  4646.,  5536.,  3248.,  4256.,  5264.,  6272.,  3678.,  4820.,  5962.,  7104.,  4060.,  5320.,  6580.,  7840.,  4490.,  5884.,  7278.,  8672.,  4442.,  5820.,  7198.,  8576.,  4490.,  5884.,  7278.,  8672.,  4060.,  5320.,  6580.,  7840.,  3678.,  4820.,  5962.,  7104.,  3248.,  4256.,  5264.,  6272.,  2866.,  3756.,  4646.,  5536.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.};
  const std::array<int, 4> in_shape = {{ 1, 14, 13, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x13x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.};
  const std::array<int, 4> in_shape = {{ 1, 14, 13, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x14x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2673., 3080., 3524., 3983., 4355., 4650., 4603., 4380., 4269., 3765., 3544., 3148., 2791., 2463., 3161., 3458., 3804., 4320., 4983., 5498., 5393., 5224., 5263., 4662., 4180., 3568., 3121., 2718., 3668., 3968., 4544., 5180., 5676., 6200., 6284., 6224., 6196., 5572., 5152., 4384., 3644., 2956., 3526., 4172., 5072., 5673., 6366., 7014., 7070., 7158., 7358., 6859., 6162., 5404., 4786., 3965., 3731., 4192., 4892., 5709., 6857., 7638., 7641., 7612., 7759., 7207., 6576., 5924., 5277., 4693., 4335., 4902., 5684., 6222., 7065., 7978., 8303., 8276., 8345., 7588., 6848., 6120., 5255., 4456., 4945., 5600., 6188., 6682., 7455., 7968., 7925., 7978., 8303., 7526., 6712., 5952., 5145., 4398., 5123., 5866., 6500., 7286., 8069., 8518., 8363., 7968., 7925., 7192., 6624., 5896., 5067., 4308., 4901., 5668., 6540., 7362., 8139., 8860., 8849., 8518., 8363., 7322., 6552., 5664., 4877., 4170., 4513., 5186., 5924., 6669., 7507., 8108., 8069., 8126., 8167., 7313., 6570., 5468., 4561., 3731., 3946., 4380., 5104., 5901., 6522., 6990., 7012., 7034., 7104., 6699., 6252., 5468., 4724., 3789., 3180., 3720., 4512., 5004., 5572., 6080., 6012., 5848., 5796., 5292., 4840., 4320., 3980., 3444., 3059., 3372., 3908., 4468., 5093., 5312., 5275., 5318., 5281., 4744., 4104., 3416., 2975., 2580., 2747., 3118., 3676., 3919., 4225., 4556., 4543., 4354., 4421., 4131., 3590., 3028., 2531., 2073.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x14x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {7978., 8303., 8276., 8345., 7968., 7925., 7978., 8303., 8518., 8363., 7968., 7925., 8860., 8849., 8518., 8363.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x14x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2568., 2898., 3098., 3472., 3408., 3832., 3774., 4238., 4056., 4566., 4402., 4948., 4306., 4838., 4114., 4632., 4130., 4650., 3564., 4026., 3266., 3680., 2896., 3256., 2530., 2846., 2292., 2558., 3083., 3458., 3446., 3876., 3852., 4344., 4383., 4928., 4801., 5406., 5348., 6004., 5317., 5970., 5174., 5808., 5175., 5806., 4519., 5084., 4092., 4600., 3396., 3840., 2925., 3314., 2613., 2940., 3360., 3768., 3720., 4192., 4352., 4896., 4920., 5528., 5344., 6024., 5960., 6704., 5976., 6728., 5976., 6720., 6024., 6776., 5408., 6088., 4984., 5600., 4352., 4896., 3912., 4392., 3168., 3576., 3551., 3980., 4052., 4552., 4796., 5376., 5285., 5938., 5869., 6604., 6466., 7276., 6543., 7372., 6700., 7532., 6809., 7660., 6447., 7222., 5746., 6452., 4884., 5512., 4423., 4980., 3709., 4186., 3792., 4262., 4254., 4800., 4944., 5576., 5458., 6170., 6528., 7330., 7430., 8316., 7326., 8226., 7174., 8072., 7342., 8270., 6924., 7774., 6150., 6928., 5520., 6216., 4990., 5610., 4260., 4794., 4059., 4590., 4810., 5420., 5772., 6472., 6123., 6908., 6977., 7858., 7736., 8708., 7977., 8958., 8042., 9016., 8011., 9010., 7263., 8168., 6608., 7440., 6148., 6896., 5249., 5918., 4445., 5024., 4675., 5266., 5480., 6144., 5964., 6712., 6425., 7252., 7337., 8254., 7718., 8720., 7751., 8746., 7736., 8708., 7977., 8958., 7295., 8172., 6342., 7136., 5636., 6336., 4911., 5538., 4301., 4844., 4971., 5590., 5814., 6516., 6284., 7080., 7015., 7884., 7633., 8586., 8052., 9084., 8117., 9142., 7718., 8720., 7751., 8746., 7007., 7888., 6396., 7184., 5828., 6512., 4877., 5478., 4093., 4600., 4755., 5370., 5764., 6472., 6604., 7416., 7333., 8228., 7865., 8854., 8482., 9544., 8323., 9378., 8052., 9084., 8117., 9142., 7103., 8020., 6450., 7264., 5636., 6336., 4843., 5450., 4269., 4772., 4188., 4722., 4898., 5524., 5648., 6376., 6434., 7242., 7124., 8022., 7778., 8744., 7606., 8570., 7386., 8332., 7374., 8318., 6560., 7410., 6074., 6836., 5168., 5832., 4486., 5058., 3792., 4262., 3779., 4244., 4250., 4792., 4988., 5616., 5655., 6362., 6169., 6964., 6784., 7644., 6825., 7688., 6882., 7732., 6763., 7616., 5987., 6758., 5440., 6136., 4724., 5336., 4161., 4696., 3321., 3770., 3360., 3768., 3800., 4272., 4480., 5024., 4904., 5512., 5408., 6088., 5912., 6656., 5896., 6648., 5960., 6704., 5976., 6728., 5536., 6216., 4968., 5584., 4224., 4768., 3864., 4344., 3232., 3640., 2811., 3174., 3160., 3576., 3724., 4200., 4025., 4552., 4625., 5210., 5030., 5664., 4879., 5510., 4888., 5516., 4977., 5618., 4671., 5248., 4150., 4672., 3716., 4176., 3319., 3726., 2653., 3000., 2508., 2838., 2902., 3276., 3472., 3896., 3614., 4078., 4020., 4530., 4294., 4840., 4282., 4814., 4174., 4692., 4050., 4570., 3656., 4118., 3214., 3628., 2864., 3224., 2458., 2774., 2040., 2306.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x14x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {7736., 8708., 7977., 8958., 8042., 9016., 8011., 9010., 7718., 8720., 7751., 8746., 7736., 8708., 7977., 8958., 8052., 9084., 8117., 9142., 7718., 8720., 7751., 8746., 8482., 9544., 8323., 9378., 8052., 9084., 8117., 9142.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x14x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2182.,  2512.,  2842.,  3172.,  2590.,  2964.,  3338.,  3712.,  2936.,  3360.,  3784.,  4208.,  3164.,  3628.,  4092.,  4556.,  3554.,  4064.,  4574.,  5084.,  3906.,  4452.,  4998.,  5544.,  3712.,  4244.,  4776.,  5308.,  3582.,  4100.,  4618.,  5136.,  3596.,  4116.,  4636.,  5156.,  3258.,  3720.,  4182.,  4644.,  2854.,  3268.,  3682.,  4096.,  2488.,  2848.,  3208.,  3568.,  2312.,  2628.,  2944.,  3260.,  2030.,  2296.,  2562.,  2828.,  2511.,  2886.,  3261.,  3636.,  2878.,  3308.,  3738.,  4168.,  3404.,  3896.,  4388.,  4880.,  3709.,  4254.,  4799.,  5344.,  4101.,  4706.,  5311.,  5916.,  4568.,  5224.,  5880.,  6536.,  4637.,  5290.,  5943.,  6596.,  4498.,  5132.,  5766.,  6400.,  4375.,  5006.,  5637.,  6268.,  3897.,  4462.,  5027.,  5592.,  3548.,  4056.,  4564.,  5072.,  3116.,  3560.,  4004.,  4448.,  2549.,  2938.,  3327.,  3716.,  2227.,  2554.,  2881.,  3208.,  2920.,  3328.,  3736.,  4144.,  3320.,  3792.,  4264.,  4736.,  3808.,  4352.,  4896.,  5440.,  4240.,  4848.,  5456.,  6064.,  4696.,  5376.,  6056.,  6736.,  5096.,  5840.,  6584.,  7328.,  5184.,  5936.,  6688.,  7440.,  5256.,  6000.,  6744.,  7488.,  5408.,  6160.,  6912.,  7664.,  4824.,  5504.,  6184.,  6864.,  4296.,  4912.,  5528.,  6144.,  3808.,  4352.,  4896.,  5440.,  3376.,  3856.,  4336.,  4816.,  2792.,  3200.,  3608.,  4016.,  3057.,  3486.,  3915.,  4344.,  3540.,  4040.,  4540.,  5040.,  4052.,  4632.,  5212.,  5792.,  4637.,  5290.,  5943.,  6596.,  5195.,  5930.,  6665.,  7400.,  5578.,  6388.,  7198.,  8008.,  5681.,  6510.,  7339.,  8168.,  5704.,  6536.,  7368.,  8200.,  5871.,  6722.,  7573.,  8424.,  5575.,  6350.,  7125.,  7900.,  5026.,  5732.,  6438.,  7144.,  4372.,  5000.,  5628.,  6256.,  3953.,  4510.,  5067.,  5624.,  3501.,  3978.,  4455.,  4932.,  3194.,  3664.,  4134.,  4604.,  3930.,  4476.,  5022.,  5568.,  4392.,  5024.,  5656.,  6288.,  4812.,  5524.,  6236.,  6948.,  5630.,  6432.,  7234.,  8036.,  6422.,  7308.,  8194.,  9080.,  6328.,  7228.,  8128.,  9028.,  6154.,  7052.,  7950.,  8848.,  6332.,  7260.,  8188.,  9116.,  5942.,  6792.,  7642.,  8492.,  5506.,  6284.,  7062.,  7840.,  4840.,  5536.,  6232.,  6928.,  4320.,  4940.,  5560.,  6180.,  3874.,  4408.,  4942.,  5476.,  3507.,  4038.,  4569.,  5100.,  4146.,  4756.,  5366.,  5976.,  4988.,  5688.,  6388.,  7088.,  5429.,  6214.,  6999.,  7784.,  5937.,  6818.,  7699.,  8580.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  7014.,  7988.,  8962.,  9936.,  6991.,  7990.,  8989.,  9988.,  6245.,  7150.,  8055.,  8960.,  5792.,  6624.,  7456.,  8288.,  5244.,  5992.,  6740.,  7488.,  4517.,  5186.,  5855.,  6524.,  3959.,  4538.,  5117.,  5696.,  4199.,  4790.,  5381.,  5972.,  4632.,  5296.,  5960.,  6624.,  5196.,  5944.,  6692.,  7440.,  5767.,  6594.,  7421.,  8248.,  6333.,  7250.,  8167.,  9084.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  6305.,  7182.,  8059.,  8936.,  5586.,  6380.,  7174.,  7968.,  4908.,  5608.,  6308.,  7008.,  4331.,  4958.,  5585.,  6212.,  3707.,  4250.,  4793.,  5336.,  4283.,  4902.,  5521.,  6140.,  4974.,  5676.,  6378.,  7080.,  5660.,  6456.,  7252.,  8048.,  6169.,  7038.,  7907.,  8776.,  6601.,  7554.,  8507.,  9460.,  7104.,  8136.,  9168., 10200.,  7049.,  8074.,  9099., 10124.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  6205.,  7086.,  7967.,  8848.,  5732.,  6520.,  7308.,  8096.,  4924.,  5608.,  6292.,  6976.,  4225.,  4826.,  5427.,  6028.,  3583.,  4090.,  4597.,  5104.,  4143.,  4758.,  5373.,  5988.,  4836.,  5544.,  6252.,  6960.,  5644.,  6456.,  7268.,  8080.,  6299.,  7194.,  8089.,  8984.,  6997.,  7986.,  8975.,  9964.,  7550.,  8612.,  9674., 10736.,  7303.,  8358.,  9413., 10468.,  7104.,  8136.,  9168., 10200.,  7049.,  8074.,  9099., 10124.,  6329.,  7246.,  8163.,  9080.,  5590.,  6404.,  7218.,  8032.,  4908.,  5608.,  6308.,  7008.,  4343.,  4950.,  5557.,  6164.,  3683.,  4186.,  4689.,  5192.,  3602.,  4136.,  4670.,  5204.,  4210.,  4836.,  5462.,  6088.,  5064.,  5792.,  6520.,  7248.,  5548.,  6356.,  7164.,  7972.,  6134.,  7032.,  7930.,  8828.,  6830.,  7796.,  8762.,  9728.,  6904.,  7868.,  8832.,  9796.,  6642.,  7588.,  8534.,  9480.,  6524.,  7468.,  8412.,  9356.,  5870.,  6720.,  7570.,  8420.,  5306.,  6068.,  6830.,  7592.,  4552.,  5216.,  5880.,  6544.,  3776.,  4348.,  4920.,  5492.,  3194.,  3664.,  4134.,  4604.,  3317.,  3782.,  4247.,  4712.,  3766.,  4308.,  4850.,  5392.,  4388.,  5016.,  5644.,  6272.,  4939.,  5646.,  6353.,  7060.,  5495.,  6290.,  7085.,  7880.,  5828.,  6688.,  7548.,  8408.,  5907.,  6770.,  7633.,  8496.,  6034.,  6884.,  7734.,  8584.,  6049.,  6902.,  7755.,  8608.,  5347.,  6118.,  6889.,  7660.,  4776.,  5472.,  6168.,  6864.,  4324.,  4936.,  5548.,  6160.,  3675.,  4210.,  4745.,  5280.,  2945.,  3394.,  3843.,  4292.,  2920.,  3328.,  3736.,  4144.,  3352.,  3824.,  4296.,  4768.,  3808.,  4352.,  4896.,  5440.,  4336.,  4944.,  5552.,  6160.,  4824.,  5504.,  6184.,  6864.,  5128.,  5872.,  6616.,  7360.,  5152.,  5904.,  6656.,  7408.,  5096.,  5840.,  6584.,  7328.,  5184.,  5936.,  6688.,  7440.,  4824.,  5504.,  6184.,  6864.,  4392.,  5008.,  5624.,  6240.,  3808.,  4352.,  4896.,  5440.,  3408.,  3888.,  4368.,  4848.,  2920.,  3328.,  3736.,  4144.,  2411.,  2774.,  3137.,  3500.,  2864.,  3280.,  3696.,  4112.,  3292.,  3768.,  4244.,  4720.,  3603.,  4130.,  4657.,  5184.,  4073.,  4658.,  5243.,  5828.,  4498.,  5132.,  5766.,  6400.,  4375.,  5006.,  5637.,  6268.,  4316.,  4944.,  5572.,  6200.,  4401.,  5042.,  5683.,  6324.,  3981.,  4558.,  5135.,  5712.,  3554.,  4076.,  4598.,  5120.,  3228.,  3688.,  4148.,  4608.,  2887.,  3294.,  3701.,  4108.,  2495.,  2842.,  3189.,  3536.,  2206.,  2536.,  2866.,  3196.,  2486.,  2860.,  3234.,  3608.,  2936.,  3360.,  3784.,  4208.,  3180.,  3644.,  4108.,  4572.,  3450.,  3960.,  4470.,  4980.,  3802.,  4348.,  4894.,  5440.,  3792.,  4324.,  4856.,  5388.,  3590.,  4108.,  4626.,  5144.,  3596.,  4116.,  4636.,  5156.,  3186.,  3648.,  4110.,  4572.,  2878.,  3292.,  3706.,  4120.,  2424.,  2784.,  3144.,  3504.,  2024.,  2340.,  2656.,  2972.,  1798.,  2064.,  2330.,  2596.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x14x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  7014.,  7988.,  8962.,  9936.,  6991.,  7990.,  8989.,  9988.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  7104.,  8136.,  9168., 10200.,  7049.,  8074.,  9099., 10124.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  7550.,  8612.,  9674., 10736.,  7303.,  8358.,  9413., 10468.,  7104.,  8136.,  9168., 10200.,  7049.,  8074.,  9099., 10124.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x14x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4784.,  5884.,  6768.,  7724.,  8992.,  9852.,  9600.,  8852.,  9160.,  8424.,  7712.,  7024.,  6200.,  5224.,  5958.,  6875.,  8168.,  8853.,  9802., 11183., 11741., 11499., 11545., 10190.,  9259.,  8008.,  6605.,  5618.,  7088.,  8016.,  9280., 10272., 11472., 12400., 12736., 12720., 13184., 11728., 10544.,  9280.,  8288.,  6832.,  7838.,  9083., 10552., 11965., 13058., 13743., 13977., 13795., 14285., 13454., 12319., 10776.,  9313.,  7586.,  8304.,  9772., 11408., 12476., 14560., 16492., 16184., 15460., 16032., 14472., 13048., 11408., 10176.,  8888.,  8998., 10595., 12808., 13933., 15866., 17623., 17965., 17779., 17417., 15326., 14251., 12648., 10845.,  9138.,  9822., 11239., 12680., 14025., 15906., 17019., 17553., 17623., 17965., 16358., 14439., 12648., 11425.,  9354.,  9846., 11387., 12808., 14325., 15658., 16703., 17349., 17019., 17553., 16494., 14819., 12904., 11253.,  9410.,  9230., 10831., 12680., 14033., 15954., 17779., 17417., 16703., 17349., 15734., 14367., 12904., 11401.,  9850.,  7848.,  9536., 11792., 12920., 14520., 15856., 15916., 15432., 15668., 14064., 13140., 11664.,  9956.,  8304.,  7998.,  8955., 10296., 11405., 12754., 13679., 14105., 14307., 14589., 12910., 11583., 10264.,  9009.,  7330.,  7088.,  8080.,  9280., 10464., 11728., 12464., 12672., 12400., 12736., 11728., 10736.,  9280.,  8352.,  7088.,  5790.,  7023.,  8296.,  8961., 10002., 10691., 10385., 10415., 11053., 10326.,  9479.,  8264.,  7281.,  6042.,  4680.,  5624.,  6896.,  7344.,  8472.,  9432.,  9644.,  9296.,  9108.,  8288.,  7700.,  6768.,  5908.,  4864.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x14x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17623., 17965., 17779., 17417., 17019., 17553., 17623., 17965., 16703., 17349., 17019., 17553., 17779., 17417., 16703., 17349.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x14x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4428.,  5008.,  5674.,  6360.,  6448.,  7264.,  6974.,  7880.,  8420.,  9440.,  9410., 10504.,  8834.,  9936.,  8322.,  9400.,  8834.,  9952.,  8308.,  9328.,  7502.,  8432.,  6448.,  7264.,  5866.,  6576.,  5084.,  5664.,  5114.,  5804.,  6175.,  6982.,  7768.,  8720.,  8325.,  9386.,  9126., 10324., 10571., 11870., 11155., 12474., 10715., 11990., 10275., 11570.,  9166., 10332.,  8613.,  9686.,  7704.,  8656.,  6231.,  7066.,  5314.,  6004.,  6832.,  7648.,  7608.,  8544.,  8768.,  9856.,  9672., 10880., 10704., 12064., 11480., 12960., 11864., 13376., 12120., 13600., 12760., 14272., 11216., 12576.,  9928., 11168.,  8768.,  9856.,  7864.,  8832.,  6320.,  7136.,  7422.,  8316.,  8549.,  9590.,  9832., 11056., 11319., 12666., 12338., 13844., 12761., 14398., 13057., 14738., 13097., 14758., 13393., 15098., 12730., 14268., 11607., 13006., 10024., 11248.,  8893.,  9970.,  7590.,  8484.,  7588.,  8576.,  9478., 10632., 10832., 12192., 11810., 13320., 14028., 15728., 15662., 17496., 15022., 16880., 14126., 15944., 14702., 16576., 13660., 15360., 12466., 14016., 10832., 12192.,  9798., 10992.,  8500.,  9488.,  8274.,  9372.,  9787., 11062., 12152., 13648., 13097., 14762., 14478., 16356., 16631., 18670., 17535., 19610., 16967., 18982., 16463., 18514., 14518., 16364., 13513., 15206., 12088., 13584.,  9971., 11290.,  8474.,  9572.,  9490., 10636., 10411., 11710., 11896., 13392., 13401., 15074., 14926., 16820., 15911., 17974., 16175., 18274., 16631., 18670., 17535., 19610., 15414., 17276., 13497., 15198., 12088., 13584., 10851., 12194.,  8858., 10004.,  9170., 10300., 10587., 11878., 12152., 13648., 13641., 15290., 14862., 16708., 15831., 17854., 16287., 18378., 15911., 17974., 16175., 18274., 15542., 17420., 14377., 16086., 12088., 13584., 10771., 12106.,  9498., 10628.,  8594.,  9708., 10379., 11662., 11896., 13392., 13177., 14834., 15310., 17172., 16967., 18982., 16463., 18514., 15831., 17854., 16287., 18378., 14902., 16796., 13593., 15310., 12088., 13584., 10819., 12146.,  9370., 10484.,  7428.,  8416.,  8878., 10032., 11088., 12448., 11802., 13312., 13100., 14800., 15062., 16896., 15798., 17656., 14998., 16816., 15030., 16904., 13388., 15088., 12378., 13928., 10832., 12192.,  8974., 10168.,  7588.,  8576.,  7582.,  8492.,  8285.,  9334.,  9832., 11056., 11199., 12570., 12242., 13796., 12753., 14430., 13081., 14770., 13537., 15174., 14057., 15738., 12330., 13852., 11023., 12414., 10024., 11248.,  8661.,  9746.,  6806.,  7716.,  6832.,  7648.,  7736.,  8672.,  8768.,  9856., 10056., 11264., 11216., 12576., 11608., 13088., 11736., 13248., 11480., 12960., 11864., 13376., 11216., 12576., 10312., 11552.,  8768.,  9856.,  7992.,  8960.,  6832.,  7648.,  5434.,  6140.,  6575.,  7390.,  7512.,  8464.,  8341.,  9394.,  9702., 10884., 10715., 11990., 10275., 11570., 10027., 11310., 10419., 11754.,  9550., 10764.,  8629.,  9726.,  7704.,  8656.,  6887.,  7730.,  5954.,  6660.,  4268.,  4848.,  5266.,  5952.,  6704.,  7520.,  7030.,  7936.,  7748.,  8768.,  9002., 10096.,  9418., 10520.,  8746.,  9824.,  8842.,  9960.,  8036.,  9056.,  7478.,  8408.,  6448.,  7264.,  5234.,  5944.,  4428.,  5008.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x14x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {16631., 18670., 17535., 19610., 16967., 18982., 16463., 18514., 15911., 17974., 16175., 18274., 16631., 18670., 17535., 19610., 15831., 17854., 16287., 18378., 15911., 17974., 16175., 18274., 16967., 18982., 16463., 18514., 15831., 17854., 16287., 18378.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x14x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4132.,  4712.,  5292.,  5872.,  4982.,  5668.,  6354.,  7040.,  5808.,  6624.,  7440.,  8256.,  6290.,  7196.,  8102.,  9008.,  7260.,  8280.,  9300., 10320.,  7886.,  8980., 10074., 11168.,  7686.,  8788.,  9890., 10992.,  7646.,  8724.,  9802., 10880.,  8054.,  9172., 10290., 11408.,  7260.,  8280.,  9300., 10320.,  6586.,  7516.,  8446.,  9376.,  5808.,  6624.,  7440.,  8256.,  5150.,  5860.,  6570.,  7280.,  4132.,  4712.,  5292.,  5872.,  4866.,  5556.,  6246.,  6936.,  5655.,  6462.,  7269.,  8076.,  6712.,  7664.,  8616.,  9568.,  7701.,  8762.,  9823., 10884.,  8446.,  9644., 10842., 12040.,  9123., 10422., 11721., 13020.,  9375., 10694., 12013., 13332.,  9179., 10454., 11729., 13004.,  8919., 10214., 11509., 12804.,  8382.,  9548., 10714., 11880.,  7577.,  8650.,  9723., 10796.,  6840.,  7792.,  8744.,  9696.,  5739.,  6574.,  7409.,  8244.,  4962.,  5652.,  6342.,  7032.,  5808.,  6624.,  7440.,  8256.,  6792.,  7728.,  8664.,  9600.,  7744.,  8832.,  9920., 11008.,  8472.,  9680., 10888., 12096.,  9680., 11040., 12400., 13760., 10664., 12144., 13624., 15104., 10632., 12144., 13656., 15168., 10408., 11888., 13368., 14848., 10888., 12400., 13912., 15424.,  9680., 11040., 12400., 13760.,  8696.,  9936., 11176., 12416.,  7744.,  8832.,  9920., 11008.,  7016.,  7984.,  8952.,  9920.,  5808.,  6624.,  7440.,  8256.,  6318.,  7212.,  8106.,  9000.,  7225.,  8266.,  9307., 10348.,  8648.,  9872., 11096., 12320.,  9771., 11118., 12465., 13812., 10642., 12148., 13654., 15160., 11565., 13202., 14839., 16476., 11985., 13666., 15347., 17028., 11957., 13618., 15279., 16940., 11865., 13570., 15275., 16980., 11026., 12564., 14102., 15640.,  9927., 11326., 12725., 14124.,  8776., 10000., 11224., 12448.,  7365.,  8442.,  9519., 10596.,  6414.,  7308.,  8202.,  9096.,  7036.,  8024.,  9012., 10000.,  8378.,  9532., 10686., 11840.,  9680., 11040., 12400., 13760., 10526., 12036., 13546., 15056., 12100., 13800., 15500., 17200., 13218., 15052., 16886., 18720., 13002., 14860., 16718., 18576., 12850., 14668., 16486., 18304., 13498., 15372., 17246., 19120., 12100., 13800., 15500., 17200., 10934., 12484., 14034., 15584.,  9680., 11040., 12400., 13760.,  8658.,  9852., 11046., 12240.,  7036.,  8024.,  9012., 10000.,  7770.,  8868.,  9966., 11064.,  8923., 10198., 11473., 12748., 10584., 12080., 13576., 15072., 12065., 13730., 15395., 17060., 13286., 15164., 17042., 18920., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 13222., 15068., 16914., 18760., 12053., 13746., 15439., 17132., 10712., 12208., 13704., 15200.,  9119., 10438., 11757., 13076.,  7866.,  8964., 10062., 11160.,  8106.,  9252., 10398., 11544.,  9379., 10678., 11977., 13276., 10584., 12080., 13576., 15072., 11769., 13442., 15115., 16788., 13398., 15292., 17186., 19080., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 13334., 15196., 17058., 18920., 11757., 13458., 15159., 16860., 10712., 12208., 13704., 15200.,  9575., 10918., 12261., 13604.,  8202.,  9348., 10494., 11640.,  7994.,  9124., 10254., 11384.,  8971., 10262., 11553., 12844., 10584., 12080., 13576., 15072., 11889., 13538., 15187., 16836., 13062., 14908., 16754., 18600., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 13446., 15324., 17202., 19080., 12229., 13938., 15647., 17356., 10712., 12208., 13704., 15200.,  9167., 10502., 11837., 13172.,  8090.,  9220., 10350., 11480.,  7882.,  8996., 10110., 11224.,  9331., 10614., 11897., 13180., 10584., 12080., 13576., 15072., 11593., 13250., 14907., 16564., 13174., 15036., 16898., 18760., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 13558., 15452., 17346., 19240., 11933., 13650., 15367., 17084., 10712., 12208., 13704., 15200.,  9527., 10854., 12181., 13508.,  7978.,  9092., 10206., 11320.,  7036.,  8024.,  9012., 10000.,  8058.,  9212., 10366., 11520.,  9680., 11040., 12400., 13760., 10974., 12484., 13994., 15504., 12100., 13800., 15500., 17200., 12898., 14732., 16566., 18400., 13450., 15308., 17166., 19024., 13042., 14860., 16678., 18496., 13178., 15052., 16926., 18800., 12100., 13800., 15500., 17200., 11126., 12676., 14226., 15776.,  9680., 11040., 12400., 13760.,  8338.,  9532., 10726., 11920.,  7036.,  8024.,  9012., 10000.,  6430.,  7340.,  8250.,  9160.,  7569.,  8618.,  9667., 10716.,  8648.,  9872., 11096., 12320.,  9587., 10958., 12329., 13700., 10978., 12532., 14086., 15640., 12133., 13810., 15487., 17164., 11689., 13378., 15067., 16756., 11565., 13202., 14839., 16476., 11985., 13666., 15347., 17028., 10914., 12436., 13958., 15480.,  9647., 11038., 12429., 13820.,  8776., 10000., 11224., 12448.,  7709.,  8794.,  9879., 10964.,  6526.,  7436.,  8346.,  9256.,  5808.,  6624.,  7440.,  8256.,  6536.,  7472.,  8408.,  9344.,  7744.,  8832.,  9920., 11008.,  8728.,  9936., 11144., 12352.,  9680., 11040., 12400., 13760., 10408., 11888., 13368., 14848., 10888., 12400., 13912., 15424., 10664., 12144., 13624., 15104., 10632., 12144., 13656., 15168.,  9680., 11040., 12400., 13760.,  8952., 10192., 11432., 12672.,  7744.,  8832.,  9920., 11008.,  6760.,  7728.,  8696.,  9664.,  5808.,  6624.,  7440.,  8256.,  4978.,  5684.,  6390.,  7096.,  5935.,  6750.,  7565.,  8380.,  6712.,  7664.,  8616.,  9568.,  7357.,  8410.,  9463., 10516.,  8334.,  9516., 10698., 11880.,  9179., 10454., 11729., 13004.,  8919., 10214., 11509., 12804.,  9075., 10358., 11641., 12924.,  9423., 10758., 12093., 13428.,  8718.,  9932., 11146., 12360.,  7585.,  8682.,  9779., 10876.,  6840.,  7792.,  8744.,  9696.,  6019.,  6862.,  7705.,  8548.,  5074.,  5780.,  6486.,  7192.,  4132.,  4712.,  5292.,  5872.,  4790.,  5476.,  6162.,  6848.,  5808.,  6624.,  7440.,  8256.,  6610.,  7516.,  8422.,  9328.,  7260.,  8280.,  9300., 10320.,  7694.,  8788.,  9882., 10976.,  8006.,  9108., 10210., 11312.,  7710.,  8788.,  9866., 10944.,  7862.,  8980., 10098., 11216.,  7260.,  8280.,  9300., 10320.,  6650.,  7580.,  8510.,  9440.,  5808.,  6624.,  7440.,  8256.,  4958.,  5668.,  6378.,  7088.,  4132.,  4712.,  5292.,  5872.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x14x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x14x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x14x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x14x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x14x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME1x14x14x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID1x14x14x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x12x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2095., 2356., 2652., 2993., 3597., 4266., 4619., 4523., 4236., 3812., 3433., 2817., 3215., 3484., 3796., 3872., 4169., 4552., 4655., 4302., 4028., 3696., 3393., 3126., 3500., 4224., 4928., 5428., 6084., 6568., 6428., 5548., 4752., 3968., 3444., 2964., 3246., 3812., 4560., 5401., 6342., 7374., 7798., 7229., 6548., 5684., 4790., 3939., 3885., 4300., 4852., 5291., 6039., 6894., 7313., 7049., 6500., 5852., 5387., 4715., 4817., 5564., 6380., 6966., 7551., 7996., 7985., 7144., 6348., 5528., 4951., 4436., 4741., 5728., 6716., 7422., 8315., 9064., 9085., 8252., 7276., 6088., 5195., 4368., 3871., 4592., 5500., 6329., 7261., 8286., 8663., 8023., 7288., 6388., 5477., 4629., 3676., 4124., 4696., 5143., 5680., 6298., 6640., 6359., 6040., 5612., 5132., 4449., 3572., 4208., 4896., 5484., 5900., 6136., 6052., 5316., 4592., 3808., 3388., 3020., 2831., 3384., 4180., 4892., 5673., 6260., 6287., 5782., 5092., 4144., 3457., 2814., 2277., 2688., 3268., 3595., 3983., 4426., 4701., 4677., 4520., 4156., 3607., 3103., 2095., 2356., 2652., 2993., 3597., 4266., 4619., 4523., 4236., 3812., 3433., 2817., 3215., 3484., 3796., 3872., 4169., 4552., 4655., 4302., 4028., 3696., 3393., 3126., 3500., 4224., 4928., 5428., 6084., 6568., 6428., 5548., 4752., 3968., 3444., 2964., 3246., 3812., 4560., 5401., 6342., 7374., 7798., 7229., 6548., 5684., 4790., 3939., 3885., 4300., 4852., 5291., 6039., 6894., 7313., 7049., 6500., 5852., 5387., 4715., 4817., 5564., 6380., 6966., 7551., 7996., 7985., 7144., 6348., 5528., 4951., 4436., 4741., 5728., 6716., 7422., 8315., 9064., 9085., 8252., 7276., 6088., 5195., 4368., 3871., 4592., 5500., 6329., 7261., 8286., 8663., 8023., 7288., 6388., 5477., 4629., 3676., 4124., 4696., 5143., 5680., 6298., 6640., 6359., 6040., 5612., 5132., 4449., 3572., 4208., 4896., 5484., 5900., 6136., 6052., 5316., 4592., 3808., 3388., 3020., 2831., 3384., 4180., 4892., 5673., 6260., 6287., 5782., 5092., 4144., 3457., 2814., 2277., 2688., 3268., 3595., 3983., 4426., 4701., 4677., 4520., 4156., 3607., 3103., 2095., 2356., 2652., 2993., 3597., 4266., 4619., 4523., 4236., 3812., 3433., 2817., 3215., 3484., 3796., 3872., 4169., 4552., 4655., 4302., 4028., 3696., 3393., 3126., 3500., 4224., 4928., 5428., 6084., 6568., 6428., 5548., 4752., 3968., 3444., 2964., 3246., 3812., 4560., 5401., 6342., 7374., 7798., 7229., 6548., 5684., 4790., 3939., 3885., 4300., 4852., 5291., 6039., 6894., 7313., 7049., 6500., 5852., 5387., 4715., 4817., 5564., 6380., 6966., 7551., 7996., 7985., 7144., 6348., 5528., 4951., 4436., 4741., 5728., 6716., 7422., 8315., 9064., 9085., 8252., 7276., 6088., 5195., 4368., 3871., 4592., 5500., 6329., 7261., 8286., 8663., 8023., 7288., 6388., 5477., 4629., 3676., 4124., 4696., 5143., 5680., 6298., 6640., 6359., 6040., 5612., 5132., 4449., 3572., 4208., 4896., 5484., 5900., 6136., 6052., 5316., 4592., 3808., 3388., 3020., 2831., 3384., 4180., 4892., 5673., 6260., 6287., 5782., 5092., 4144., 3457., 2814., 2277., 2688., 3268., 3595., 3983., 4426., 4701., 4677., 4520., 4156., 3607., 3103.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x12x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {7996., 7985., 9064., 9085., 7996., 7985., 9064., 9085., 7996., 7985., 9064., 9085.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x12x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2328., 2606., 2660., 2984., 3024., 3400., 3312., 3730., 3608., 4074., 3980., 4500., 4140., 4678., 3964., 4454., 3572., 4008., 3152., 3528., 2860., 3202., 2420., 2722., 2899., 3246., 3360., 3768., 3852., 4328., 4281., 4800., 4681., 5250., 5118., 5744., 5231., 5870., 4807., 5388., 4260., 4776., 3524., 3968., 3077., 3474., 2773., 3116., 3072., 3464., 3728., 4192., 4352., 4896., 4784., 5384., 5376., 6040., 5936., 6672., 6000., 6760., 5504., 6200., 4976., 5600., 4352., 4896., 3920., 4408., 3456., 3880., 3263., 3676., 3884., 4376., 4668., 5248., 5133., 5778., 5709., 6428., 6458., 7260., 6743., 7580., 6231., 7002., 5568., 6264., 4884., 5496., 4277., 4828., 3717., 4198., 3968., 4442., 4460., 5016., 5072., 5720., 5512., 6230., 6208., 7006., 7028., 7916., 7484., 8402., 7004., 7842., 6028., 6776., 5136., 5784., 4668., 5254., 4068., 4582., 4243., 4786., 5080., 5720., 5964., 6712., 6777., 7596., 7481., 8382., 8006., 9000., 8071., 9090., 7375., 8304., 6604., 7432., 5764., 6480., 5213., 5854., 4621., 5176., 4515., 5082., 5572., 6240., 6348., 7128., 6757., 7612., 7433., 8374., 8114., 9152., 8243., 9306., 7759., 8728., 7080., 7944., 6148., 6896., 5353., 6022., 4589., 5168., 3892., 4398., 4692., 5296., 5648., 6360., 6196., 6978., 6860., 7722., 7700., 8652., 7816., 8798., 6968., 7870., 6212., 7024., 5488., 6200., 4816., 5450., 4232., 4778., 3523., 3960., 4144., 4664., 4860., 5472., 5381., 6062., 5929., 6688., 6566., 7412., 6959., 7840., 6451., 7262., 5812., 6544., 5236., 5880., 4613., 5192., 3849., 4354., 3200., 3592., 3760., 4224., 4352., 4896., 4880., 5480., 5376., 6040., 5904., 6640., 6096., 6856., 5632., 6328., 5072., 5696., 4352., 4896., 3952., 4440., 3456., 3880., 2827., 3198., 3420., 3856., 3980., 4488., 4333., 4888., 4833., 5442., 5290., 5960., 5251., 5934., 4847., 5468., 4400., 4952., 3844., 4320., 3465., 3890., 3037., 3404., 2420., 2730., 3004., 3376., 3728., 4168., 3908., 4390., 4156., 4686., 4540., 5124., 4560., 5162., 4272., 4826., 3964., 4464., 3568., 4008., 3032., 3422., 2496., 2830., 2328., 2606., 2660., 2984., 3024., 3400., 3312., 3730., 3608., 4074., 3980., 4500., 4140., 4678., 3964., 4454., 3572., 4008., 3152., 3528., 2860., 3202., 2420., 2722., 2899., 3246., 3360., 3768., 3852., 4328., 4281., 4800., 4681., 5250., 5118., 5744., 5231., 5870., 4807., 5388., 4260., 4776., 3524., 3968., 3077., 3474., 2773., 3116., 3072., 3464., 3728., 4192., 4352., 4896., 4784., 5384., 5376., 6040., 5936., 6672., 6000., 6760., 5504., 6200., 4976., 5600., 4352., 4896., 3920., 4408., 3456., 3880., 3263., 3676., 3884., 4376., 4668., 5248., 5133., 5778., 5709., 6428., 6458., 7260., 6743., 7580., 6231., 7002., 5568., 6264., 4884., 5496., 4277., 4828., 3717., 4198., 3968., 4442., 4460., 5016., 5072., 5720., 5512., 6230., 6208., 7006., 7028., 7916., 7484., 8402., 7004., 7842., 6028., 6776., 5136., 5784., 4668., 5254., 4068., 4582., 4243., 4786., 5080., 5720., 5964., 6712., 6777., 7596., 7481., 8382., 8006., 9000., 8071., 9090., 7375., 8304., 6604., 7432., 5764., 6480., 5213., 5854., 4621., 5176., 4515., 5082., 5572., 6240., 6348., 7128., 6757., 7612., 7433., 8374., 8114., 9152., 8243., 9306., 7759., 8728., 7080., 7944., 6148., 6896., 5353., 6022., 4589., 5168., 3892., 4398., 4692., 5296., 5648., 6360., 6196., 6978., 6860., 7722., 7700., 8652., 7816., 8798., 6968., 7870., 6212., 7024., 5488., 6200., 4816., 5450., 4232., 4778., 3523., 3960., 4144., 4664., 4860., 5472., 5381., 6062., 5929., 6688., 6566., 7412., 6959., 7840., 6451., 7262., 5812., 6544., 5236., 5880., 4613., 5192., 3849., 4354., 3200., 3592., 3760., 4224., 4352., 4896., 4880., 5480., 5376., 6040., 5904., 6640., 6096., 6856., 5632., 6328., 5072., 5696., 4352., 4896., 3952., 4440., 3456., 3880., 2827., 3198., 3420., 3856., 3980., 4488., 4333., 4888., 4833., 5442., 5290., 5960., 5251., 5934., 4847., 5468., 4400., 4952., 3844., 4320., 3465., 3890., 3037., 3404., 2420., 2730., 3004., 3376., 3728., 4168., 3908., 4390., 4156., 4686., 4540., 5124., 4560., 5162., 4272., 4826., 3964., 4464., 3568., 4008., 3032., 3422., 2496., 2830., 2328., 2606., 2660., 2984., 3024., 3400., 3312., 3730., 3608., 4074., 3980., 4500., 4140., 4678., 3964., 4454., 3572., 4008., 3152., 3528., 2860., 3202., 2420., 2722., 2899., 3246., 3360., 3768., 3852., 4328., 4281., 4800., 4681., 5250., 5118., 5744., 5231., 5870., 4807., 5388., 4260., 4776., 3524., 3968., 3077., 3474., 2773., 3116., 3072., 3464., 3728., 4192., 4352., 4896., 4784., 5384., 5376., 6040., 5936., 6672., 6000., 6760., 5504., 6200., 4976., 5600., 4352., 4896., 3920., 4408., 3456., 3880., 3263., 3676., 3884., 4376., 4668., 5248., 5133., 5778., 5709., 6428., 6458., 7260., 6743., 7580., 6231., 7002., 5568., 6264., 4884., 5496., 4277., 4828., 3717., 4198., 3968., 4442., 4460., 5016., 5072., 5720., 5512., 6230., 6208., 7006., 7028., 7916., 7484., 8402., 7004., 7842., 6028., 6776., 5136., 5784., 4668., 5254., 4068., 4582., 4243., 4786., 5080., 5720., 5964., 6712., 6777., 7596., 7481., 8382., 8006., 9000., 8071., 9090., 7375., 8304., 6604., 7432., 5764., 6480., 5213., 5854., 4621., 5176., 4515., 5082., 5572., 6240., 6348., 7128., 6757., 7612., 7433., 8374., 8114., 9152., 8243., 9306., 7759., 8728., 7080., 7944., 6148., 6896., 5353., 6022., 4589., 5168., 3892., 4398., 4692., 5296., 5648., 6360., 6196., 6978., 6860., 7722., 7700., 8652., 7816., 8798., 6968., 7870., 6212., 7024., 5488., 6200., 4816., 5450., 4232., 4778., 3523., 3960., 4144., 4664., 4860., 5472., 5381., 6062., 5929., 6688., 6566., 7412., 6959., 7840., 6451., 7262., 5812., 6544., 5236., 5880., 4613., 5192., 3849., 4354., 3200., 3592., 3760., 4224., 4352., 4896., 4880., 5480., 5376., 6040., 5904., 6640., 6096., 6856., 5632., 6328., 5072., 5696., 4352., 4896., 3952., 4440., 3456., 3880., 2827., 3198., 3420., 3856., 3980., 4488., 4333., 4888., 4833., 5442., 5290., 5960., 5251., 5934., 4847., 5468., 4400., 4952., 3844., 4320., 3465., 3890., 3037., 3404., 2420., 2730., 3004., 3376., 3728., 4168., 3908., 4390., 4156., 4686., 4540., 5124., 4560., 5162., 4272., 4826., 3964., 4464., 3568., 4008., 3032., 3422., 2496., 2830.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x12x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {8006., 9000., 8071., 9090., 8114., 9152., 8243., 9306., 8006., 9000., 8071., 9090., 8114., 9152., 8243., 9306., 8006., 9000., 8071., 9090., 8114., 9152., 8243., 9306.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x12x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 1978.,  2256.,  2534.,  2812.,  2244.,  2568.,  2892.,  3216.,  2600.,  2976.,  3352.,  3728.,  2894.,  3312.,  3730.,  4148.,  3150.,  3616.,  4082.,  4548.,  3504.,  4024.,  4544.,  5064.,  3790.,  4328.,  4866.,  5404.,  3646.,  4136.,  4626.,  5116.,  3124.,  3560.,  3996.,  4432.,  2600.,  2976.,  3352.,  3728.,  2370.,  2712.,  3054.,  3396.,  2090.,  2392.,  2694.,  2996.,  2491.,  2838.,  3185.,  3532.,  2888.,  3296.,  3704.,  4112.,  3292.,  3768.,  4244.,  4720.,  3723.,  4242.,  4761.,  5280.,  4025.,  4594.,  5163.,  5732.,  4330.,  4956.,  5582.,  6208.,  4415.,  5054.,  5693.,  6332.,  4201.,  4782.,  5363.,  5944.,  3812.,  4328.,  4844.,  5360.,  3116.,  3560.,  4004.,  4448.,  2781.,  3178.,  3575.,  3972.,  2531.,  2874.,  3217.,  3560.,  2616.,  3008.,  3400.,  3792.,  3280.,  3744.,  4208.,  4672.,  3808.,  4352.,  4896.,  5440.,  4168.,  4768.,  5368.,  5968.,  4776.,  5440.,  6104.,  6768.,  5248.,  5984.,  6720.,  7456.,  5160.,  5920.,  6680.,  7440.,  4744.,  5440.,  6136.,  6832.,  4336.,  4960.,  5584.,  6208.,  3808.,  4352.,  4896.,  5440.,  3448.,  3936.,  4424.,  4912.,  3096.,  3520.,  3944.,  4368.,  2753.,  3166.,  3579.,  3992.,  3276.,  3768.,  4260.,  4752.,  4052.,  4632.,  5212.,  5792.,  4405.,  5050.,  5695.,  6340.,  4891.,  5610.,  6329.,  7048.,  5634.,  6436.,  7238.,  8040.,  5881.,  6718.,  7555.,  8392.,  5339.,  6110.,  6881.,  7652.,  4776.,  5472.,  6168.,  6864.,  4260.,  4872.,  5484.,  6096.,  3699.,  4250.,  4801.,  5352.,  3321.,  3802.,  4283.,  4764.,  3414.,  3888.,  4362.,  4836.,  3884.,  4440.,  4996.,  5552.,  4504.,  5152.,  5800.,  6448.,  4978.,  5696.,  6414.,  7132.,  5410.,  6208.,  7006.,  7804.,  6000.,  6888.,  7776.,  8664.,  6498.,  7416.,  8334.,  9252.,  6146.,  6984.,  7822.,  8660.,  5292.,  6040.,  6788.,  7536.,  4504.,  5152.,  5800.,  6448.,  4094.,  4680.,  5266.,  5852.,  3510.,  4024.,  4538.,  5052.,  3927.,  4470.,  5013.,  5556.,  4560.,  5200.,  5840.,  6480.,  5196.,  5944.,  6692.,  7440.,  5903.,  6722.,  7541.,  8360.,  6413.,  7314.,  8215.,  9116.,  6922.,  7916.,  8910.,  9904.,  7091.,  8110.,  9129., 10148.,  6701.,  7630.,  8559.,  9488.,  6076.,  6904.,  7732.,  8560.,  5020.,  5736.,  6452.,  7168.,  4537.,  5178.,  5819.,  6460.,  4079.,  4634.,  5189.,  5744.,  3743.,  4310.,  4877.,  5444.,  4684.,  5352.,  6020.,  6688.,  5420.,  6200.,  6980.,  7760.,  5891.,  6746.,  7601.,  8456.,  6725.,  7666.,  8607.,  9548.,  7350.,  8388.,  9426., 10464.,  7135.,  8198.,  9261., 10324.,  6597.,  7566.,  8535.,  9504.,  6032.,  6896.,  7760.,  8624.,  5244.,  5992.,  6740.,  7488.,  4661.,  5330.,  5999.,  6668.,  4247.,  4826.,  5405.,  5984.,  3358.,  3864.,  4370.,  4876.,  3980.,  4584.,  5188.,  5792.,  4952.,  5664.,  6376.,  7088.,  5322.,  6104.,  6886.,  7668.,  5834.,  6696.,  7558.,  8420.,  6688.,  7640.,  8592.,  9544.,  6794.,  7776.,  8758.,  9740.,  6058.,  6960.,  7862.,  8764.,  5596.,  6408.,  7220.,  8032.,  5016.,  5728.,  6440.,  7152.,  4150.,  4784.,  5418.,  6052.,  3550.,  4096.,  4642.,  5188.,  3185.,  3622.,  4059.,  4496.,  3640.,  4160.,  4680.,  5200.,  4276.,  4888.,  5500.,  6112.,  4737.,  5418.,  6099.,  6780.,  5179.,  5938.,  6697.,  7456.,  5726.,  6572.,  7418.,  8264.,  6221.,  7102.,  7983.,  8864.,  5723.,  6534.,  7345.,  8156.,  5036.,  5768.,  6500.,  7232.,  4548.,  5192.,  5836.,  6480.,  4023.,  4602.,  5181.,  5760.,  3305.,  3810.,  4315.,  4820.,  2872.,  3264.,  3656.,  4048.,  3344.,  3808.,  4272.,  4736.,  3808.,  4352.,  4896.,  5440.,  4360.,  4960.,  5560.,  6160.,  4776.,  5440.,  6104.,  6768.,  5184.,  5920.,  6656.,  7392.,  5352.,  6112.,  6872.,  7632.,  5000.,  5696.,  6392.,  7088.,  4528.,  5152.,  5776.,  6400.,  3808.,  4352.,  4896.,  5440.,  3512.,  4000.,  4488.,  4976.,  3096.,  3520.,  3944.,  4368.,  2435.,  2806.,  3177.,  3548.,  3044.,  3480.,  3916.,  4352.,  3516.,  4024.,  4532.,  5040.,  3807.,  4362.,  4917.,  5472.,  4337.,  4946.,  5555.,  6164.,  4726.,  5396.,  6066.,  6736.,  4555.,  5238.,  5921.,  6604.,  4225.,  4846.,  5467.,  6088.,  3864.,  4416.,  4968.,  5520.,  3340.,  3816.,  4292.,  4768.,  2937.,  3362.,  3787.,  4212.,  2699.,  3066.,  3433.,  3800.,  2050.,  2360.,  2670.,  2980.,  2436.,  2808.,  3180.,  3552.,  3048.,  3488.,  3928.,  4368.,  3270.,  3752.,  4234.,  4716.,  3574.,  4104.,  4634.,  5164.,  4096.,  4680.,  5264.,  5848.,  4118.,  4720.,  5322.,  5924.,  3686.,  4240.,  4794.,  5348.,  3460.,  3960.,  4460.,  4960.,  3112.,  3552.,  3992.,  4432.,  2522.,  2912.,  3302.,  3692.,  2130.,  2464.,  2798.,  3132.,  1978.,  2256.,  2534.,  2812.,  2244.,  2568.,  2892.,  3216.,  2600.,  2976.,  3352.,  3728.,  2894.,  3312.,  3730.,  4148.,  3150.,  3616.,  4082.,  4548.,  3504.,  4024.,  4544.,  5064.,  3790.,  4328.,  4866.,  5404.,  3646.,  4136.,  4626.,  5116.,  3124.,  3560.,  3996.,  4432.,  2600.,  2976.,  3352.,  3728.,  2370.,  2712.,  3054.,  3396.,  2090.,  2392.,  2694.,  2996.,  2491.,  2838.,  3185.,  3532.,  2888.,  3296.,  3704.,  4112.,  3292.,  3768.,  4244.,  4720.,  3723.,  4242.,  4761.,  5280.,  4025.,  4594.,  5163.,  5732.,  4330.,  4956.,  5582.,  6208.,  4415.,  5054.,  5693.,  6332.,  4201.,  4782.,  5363.,  5944.,  3812.,  4328.,  4844.,  5360.,  3116.,  3560.,  4004.,  4448.,  2781.,  3178.,  3575.,  3972.,  2531.,  2874.,  3217.,  3560.,  2616.,  3008.,  3400.,  3792.,  3280.,  3744.,  4208.,  4672.,  3808.,  4352.,  4896.,  5440.,  4168.,  4768.,  5368.,  5968.,  4776.,  5440.,  6104.,  6768.,  5248.,  5984.,  6720.,  7456.,  5160.,  5920.,  6680.,  7440.,  4744.,  5440.,  6136.,  6832.,  4336.,  4960.,  5584.,  6208.,  3808.,  4352.,  4896.,  5440.,  3448.,  3936.,  4424.,  4912.,  3096.,  3520.,  3944.,  4368.,  2753.,  3166.,  3579.,  3992.,  3276.,  3768.,  4260.,  4752.,  4052.,  4632.,  5212.,  5792.,  4405.,  5050.,  5695.,  6340.,  4891.,  5610.,  6329.,  7048.,  5634.,  6436.,  7238.,  8040.,  5881.,  6718.,  7555.,  8392.,  5339.,  6110.,  6881.,  7652.,  4776.,  5472.,  6168.,  6864.,  4260.,  4872.,  5484.,  6096.,  3699.,  4250.,  4801.,  5352.,  3321.,  3802.,  4283.,  4764.,  3414.,  3888.,  4362.,  4836.,  3884.,  4440.,  4996.,  5552.,  4504.,  5152.,  5800.,  6448.,  4978.,  5696.,  6414.,  7132.,  5410.,  6208.,  7006.,  7804.,  6000.,  6888.,  7776.,  8664.,  6498.,  7416.,  8334.,  9252.,  6146.,  6984.,  7822.,  8660.,  5292.,  6040.,  6788.,  7536.,  4504.,  5152.,  5800.,  6448.,  4094.,  4680.,  5266.,  5852.,  3510.,  4024.,  4538.,  5052.,  3927.,  4470.,  5013.,  5556.,  4560.,  5200.,  5840.,  6480.,  5196.,  5944.,  6692.,  7440.,  5903.,  6722.,  7541.,  8360.,  6413.,  7314.,  8215.,  9116.,  6922.,  7916.,  8910.,  9904.,  7091.,  8110.,  9129., 10148.,  6701.,  7630.,  8559.,  9488.,  6076.,  6904.,  7732.,  8560.,  5020.,  5736.,  6452.,  7168.,  4537.,  5178.,  5819.,  6460.,  4079.,  4634.,  5189.,  5744.,  3743.,  4310.,  4877.,  5444.,  4684.,  5352.,  6020.,  6688.,  5420.,  6200.,  6980.,  7760.,  5891.,  6746.,  7601.,  8456.,  6725.,  7666.,  8607.,  9548.,  7350.,  8388.,  9426., 10464.,  7135.,  8198.,  9261., 10324.,  6597.,  7566.,  8535.,  9504.,  6032.,  6896.,  7760.,  8624.,  5244.,  5992.,  6740.,  7488.,  4661.,  5330.,  5999.,  6668.,  4247.,  4826.,  5405.,  5984.,  3358.,  3864.,  4370.,  4876.,  3980.,  4584.,  5188.,  5792.,  4952.,  5664.,  6376.,  7088.,  5322.,  6104.,  6886.,  7668.,  5834.,  6696.,  7558.,  8420.,  6688.,  7640.,  8592.,  9544.,  6794.,  7776.,  8758.,  9740.,  6058.,  6960.,  7862.,  8764.,  5596.,  6408.,  7220.,  8032.,  5016.,  5728.,  6440.,  7152.,  4150.,  4784.,  5418.,  6052.,  3550.,  4096.,  4642.,  5188.,  3185.,  3622.,  4059.,  4496.,  3640.,  4160.,  4680.,  5200.,  4276.,  4888.,  5500.,  6112.,  4737.,  5418.,  6099.,  6780.,  5179.,  5938.,  6697.,  7456.,  5726.,  6572.,  7418.,  8264.,  6221.,  7102.,  7983.,  8864.,  5723.,  6534.,  7345.,  8156.,  5036.,  5768.,  6500.,  7232.,  4548.,  5192.,  5836.,  6480.,  4023.,  4602.,  5181.,  5760.,  3305.,  3810.,  4315.,  4820.,  2872.,  3264.,  3656.,  4048.,  3344.,  3808.,  4272.,  4736.,  3808.,  4352.,  4896.,  5440.,  4360.,  4960.,  5560.,  6160.,  4776.,  5440.,  6104.,  6768.,  5184.,  5920.,  6656.,  7392.,  5352.,  6112.,  6872.,  7632.,  5000.,  5696.,  6392.,  7088.,  4528.,  5152.,  5776.,  6400.,  3808.,  4352.,  4896.,  5440.,  3512.,  4000.,  4488.,  4976.,  3096.,  3520.,  3944.,  4368.,  2435.,  2806.,  3177.,  3548.,  3044.,  3480.,  3916.,  4352.,  3516.,  4024.,  4532.,  5040.,  3807.,  4362.,  4917.,  5472.,  4337.,  4946.,  5555.,  6164.,  4726.,  5396.,  6066.,  6736.,  4555.,  5238.,  5921.,  6604.,  4225.,  4846.,  5467.,  6088.,  3864.,  4416.,  4968.,  5520.,  3340.,  3816.,  4292.,  4768.,  2937.,  3362.,  3787.,  4212.,  2699.,  3066.,  3433.,  3800.,  2050.,  2360.,  2670.,  2980.,  2436.,  2808.,  3180.,  3552.,  3048.,  3488.,  3928.,  4368.,  3270.,  3752.,  4234.,  4716.,  3574.,  4104.,  4634.,  5164.,  4096.,  4680.,  5264.,  5848.,  4118.,  4720.,  5322.,  5924.,  3686.,  4240.,  4794.,  5348.,  3460.,  3960.,  4460.,  4960.,  3112.,  3552.,  3992.,  4432.,  2522.,  2912.,  3302.,  3692.,  2130.,  2464.,  2798.,  3132.,  1978.,  2256.,  2534.,  2812.,  2244.,  2568.,  2892.,  3216.,  2600.,  2976.,  3352.,  3728.,  2894.,  3312.,  3730.,  4148.,  3150.,  3616.,  4082.,  4548.,  3504.,  4024.,  4544.,  5064.,  3790.,  4328.,  4866.,  5404.,  3646.,  4136.,  4626.,  5116.,  3124.,  3560.,  3996.,  4432.,  2600.,  2976.,  3352.,  3728.,  2370.,  2712.,  3054.,  3396.,  2090.,  2392.,  2694.,  2996.,  2491.,  2838.,  3185.,  3532.,  2888.,  3296.,  3704.,  4112.,  3292.,  3768.,  4244.,  4720.,  3723.,  4242.,  4761.,  5280.,  4025.,  4594.,  5163.,  5732.,  4330.,  4956.,  5582.,  6208.,  4415.,  5054.,  5693.,  6332.,  4201.,  4782.,  5363.,  5944.,  3812.,  4328.,  4844.,  5360.,  3116.,  3560.,  4004.,  4448.,  2781.,  3178.,  3575.,  3972.,  2531.,  2874.,  3217.,  3560.,  2616.,  3008.,  3400.,  3792.,  3280.,  3744.,  4208.,  4672.,  3808.,  4352.,  4896.,  5440.,  4168.,  4768.,  5368.,  5968.,  4776.,  5440.,  6104.,  6768.,  5248.,  5984.,  6720.,  7456.,  5160.,  5920.,  6680.,  7440.,  4744.,  5440.,  6136.,  6832.,  4336.,  4960.,  5584.,  6208.,  3808.,  4352.,  4896.,  5440.,  3448.,  3936.,  4424.,  4912.,  3096.,  3520.,  3944.,  4368.,  2753.,  3166.,  3579.,  3992.,  3276.,  3768.,  4260.,  4752.,  4052.,  4632.,  5212.,  5792.,  4405.,  5050.,  5695.,  6340.,  4891.,  5610.,  6329.,  7048.,  5634.,  6436.,  7238.,  8040.,  5881.,  6718.,  7555.,  8392.,  5339.,  6110.,  6881.,  7652.,  4776.,  5472.,  6168.,  6864.,  4260.,  4872.,  5484.,  6096.,  3699.,  4250.,  4801.,  5352.,  3321.,  3802.,  4283.,  4764.,  3414.,  3888.,  4362.,  4836.,  3884.,  4440.,  4996.,  5552.,  4504.,  5152.,  5800.,  6448.,  4978.,  5696.,  6414.,  7132.,  5410.,  6208.,  7006.,  7804.,  6000.,  6888.,  7776.,  8664.,  6498.,  7416.,  8334.,  9252.,  6146.,  6984.,  7822.,  8660.,  5292.,  6040.,  6788.,  7536.,  4504.,  5152.,  5800.,  6448.,  4094.,  4680.,  5266.,  5852.,  3510.,  4024.,  4538.,  5052.,  3927.,  4470.,  5013.,  5556.,  4560.,  5200.,  5840.,  6480.,  5196.,  5944.,  6692.,  7440.,  5903.,  6722.,  7541.,  8360.,  6413.,  7314.,  8215.,  9116.,  6922.,  7916.,  8910.,  9904.,  7091.,  8110.,  9129., 10148.,  6701.,  7630.,  8559.,  9488.,  6076.,  6904.,  7732.,  8560.,  5020.,  5736.,  6452.,  7168.,  4537.,  5178.,  5819.,  6460.,  4079.,  4634.,  5189.,  5744.,  3743.,  4310.,  4877.,  5444.,  4684.,  5352.,  6020.,  6688.,  5420.,  6200.,  6980.,  7760.,  5891.,  6746.,  7601.,  8456.,  6725.,  7666.,  8607.,  9548.,  7350.,  8388.,  9426., 10464.,  7135.,  8198.,  9261., 10324.,  6597.,  7566.,  8535.,  9504.,  6032.,  6896.,  7760.,  8624.,  5244.,  5992.,  6740.,  7488.,  4661.,  5330.,  5999.,  6668.,  4247.,  4826.,  5405.,  5984.,  3358.,  3864.,  4370.,  4876.,  3980.,  4584.,  5188.,  5792.,  4952.,  5664.,  6376.,  7088.,  5322.,  6104.,  6886.,  7668.,  5834.,  6696.,  7558.,  8420.,  6688.,  7640.,  8592.,  9544.,  6794.,  7776.,  8758.,  9740.,  6058.,  6960.,  7862.,  8764.,  5596.,  6408.,  7220.,  8032.,  5016.,  5728.,  6440.,  7152.,  4150.,  4784.,  5418.,  6052.,  3550.,  4096.,  4642.,  5188.,  3185.,  3622.,  4059.,  4496.,  3640.,  4160.,  4680.,  5200.,  4276.,  4888.,  5500.,  6112.,  4737.,  5418.,  6099.,  6780.,  5179.,  5938.,  6697.,  7456.,  5726.,  6572.,  7418.,  8264.,  6221.,  7102.,  7983.,  8864.,  5723.,  6534.,  7345.,  8156.,  5036.,  5768.,  6500.,  7232.,  4548.,  5192.,  5836.,  6480.,  4023.,  4602.,  5181.,  5760.,  3305.,  3810.,  4315.,  4820.,  2872.,  3264.,  3656.,  4048.,  3344.,  3808.,  4272.,  4736.,  3808.,  4352.,  4896.,  5440.,  4360.,  4960.,  5560.,  6160.,  4776.,  5440.,  6104.,  6768.,  5184.,  5920.,  6656.,  7392.,  5352.,  6112.,  6872.,  7632.,  5000.,  5696.,  6392.,  7088.,  4528.,  5152.,  5776.,  6400.,  3808.,  4352.,  4896.,  5440.,  3512.,  4000.,  4488.,  4976.,  3096.,  3520.,  3944.,  4368.,  2435.,  2806.,  3177.,  3548.,  3044.,  3480.,  3916.,  4352.,  3516.,  4024.,  4532.,  5040.,  3807.,  4362.,  4917.,  5472.,  4337.,  4946.,  5555.,  6164.,  4726.,  5396.,  6066.,  6736.,  4555.,  5238.,  5921.,  6604.,  4225.,  4846.,  5467.,  6088.,  3864.,  4416.,  4968.,  5520.,  3340.,  3816.,  4292.,  4768.,  2937.,  3362.,  3787.,  4212.,  2699.,  3066.,  3433.,  3800.,  2050.,  2360.,  2670.,  2980.,  2436.,  2808.,  3180.,  3552.,  3048.,  3488.,  3928.,  4368.,  3270.,  3752.,  4234.,  4716.,  3574.,  4104.,  4634.,  5164.,  4096.,  4680.,  5264.,  5848.,  4118.,  4720.,  5322.,  5924.,  3686.,  4240.,  4794.,  5348.,  3460.,  3960.,  4460.,  4960.,  3112.,  3552.,  3992.,  4432.,  2522.,  2912.,  3302.,  3692.,  2130.,  2464.,  2798.,  3132.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x12x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6922.,  7916.,  8910.,  9904.,  7091.,  8110.,  9129., 10148.,  7350.,  8388.,  9426., 10464.,  7135.,  8198.,  9261., 10324.,  6922.,  7916.,  8910.,  9904.,  7091.,  8110.,  9129., 10148.,  7350.,  8388.,  9426., 10464.,  7135.,  8198.,  9261., 10324.,  6922.,  7916.,  8910.,  9904.,  7091.,  8110.,  9129., 10148.,  7350.,  8388.,  9426., 10464.,  7135.,  8198.,  9261., 10324.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x12x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 5096.,  6304.,  7280.,  7560.,  8072.,  8576.,  9188.,  9024.,  8308.,  7280.,  6644.,  5776.,  5582.,  6519.,  7784.,  8681.,  9666., 11003., 11785., 10862.,  9691.,  8008.,  6973.,  6290.,  6416.,  7776.,  9280.,  9968., 11056., 12288., 13104., 12144., 10784.,  9280.,  8592.,  7504.,  7166.,  8651., 10552., 11597., 12386., 13695., 14537., 13510., 12131., 10392.,  9517.,  8554.,  8216.,  9688., 11408., 12032., 13496., 15288., 16596., 15984., 14084., 11664., 10580.,  9200.,  8286., 10215., 12680., 14217., 15650., 17227., 17841., 16206., 14387., 12392., 11333., 10274.,  9262., 11071., 12680., 13249., 14706., 16531., 17913., 17246., 15403., 13160., 11805., 10162.,  7536.,  9212., 11408., 12716., 14320., 15948., 16536., 14840., 13168., 11280., 10280.,  9224.,  7462.,  9159., 10552., 11185., 12266., 13531., 14421., 13406., 12103., 10776.,  9817.,  8466.,  6416.,  7648.,  9280., 10096., 11056., 12416., 13232., 12144., 10912.,  9280.,  8464.,  7504.,  5454.,  6551.,  7784.,  8649.,  9794., 10971., 11657., 10798.,  9499.,  8008.,  7277.,  6594.,  4832.,  5900.,  7280.,  7772.,  8224.,  8908.,  9088.,  8472.,  8088.,  7152.,  6560.,  5704.,  5096.,  6304.,  7280.,  7560.,  8072.,  8576.,  9188.,  9024.,  8308.,  7280.,  6644.,  5776.,  5582.,  6519.,  7784.,  8681.,  9666., 11003., 11785., 10862.,  9691.,  8008.,  6973.,  6290.,  6416.,  7776.,  9280.,  9968., 11056., 12288., 13104., 12144., 10784.,  9280.,  8592.,  7504.,  7166.,  8651., 10552., 11597., 12386., 13695., 14537., 13510., 12131., 10392.,  9517.,  8554.,  8216.,  9688., 11408., 12032., 13496., 15288., 16596., 15984., 14084., 11664., 10580.,  9200.,  8286., 10215., 12680., 14217., 15650., 17227., 17841., 16206., 14387., 12392., 11333., 10274.,  9262., 11071., 12680., 13249., 14706., 16531., 17913., 17246., 15403., 13160., 11805., 10162.,  7536.,  9212., 11408., 12716., 14320., 15948., 16536., 14840., 13168., 11280., 10280.,  9224.,  7462.,  9159., 10552., 11185., 12266., 13531., 14421., 13406., 12103., 10776.,  9817.,  8466.,  6416.,  7648.,  9280., 10096., 11056., 12416., 13232., 12144., 10912.,  9280.,  8464.,  7504.,  5454.,  6551.,  7784.,  8649.,  9794., 10971., 11657., 10798.,  9499.,  8008.,  7277.,  6594.,  4832.,  5900.,  7280.,  7772.,  8224.,  8908.,  9088.,  8472.,  8088.,  7152.,  6560.,  5704.,  5096.,  6304.,  7280.,  7560.,  8072.,  8576.,  9188.,  9024.,  8308.,  7280.,  6644.,  5776.,  5582.,  6519.,  7784.,  8681.,  9666., 11003., 11785., 10862.,  9691.,  8008.,  6973.,  6290.,  6416.,  7776.,  9280.,  9968., 11056., 12288., 13104., 12144., 10784.,  9280.,  8592.,  7504.,  7166.,  8651., 10552., 11597., 12386., 13695., 14537., 13510., 12131., 10392.,  9517.,  8554.,  8216.,  9688., 11408., 12032., 13496., 15288., 16596., 15984., 14084., 11664., 10580.,  9200.,  8286., 10215., 12680., 14217., 15650., 17227., 17841., 16206., 14387., 12392., 11333., 10274.,  9262., 11071., 12680., 13249., 14706., 16531., 17913., 17246., 15403., 13160., 11805., 10162.,  7536.,  9212., 11408., 12716., 14320., 15948., 16536., 14840., 13168., 11280., 10280.,  9224.,  7462.,  9159., 10552., 11185., 12266., 13531., 14421., 13406., 12103., 10776.,  9817.,  8466.,  6416.,  7648.,  9280., 10096., 11056., 12416., 13232., 12144., 10912.,  9280.,  8464.,  7504.,  5454.,  6551.,  7784.,  8649.,  9794., 10971., 11657., 10798.,  9499.,  8008.,  7277.,  6594.,  4832.,  5900.,  7280.,  7772.,  8224.,  8908.,  9088.,  8472.,  8088.,  7152.,  6560.,  5704.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x12x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17227., 17841., 16531., 17913., 17227., 17841., 16531., 17913., 17227., 17841., 16531., 17913.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x12x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4428.,  4992.,  5370.,  6048.,  6448.,  7264.,  7054.,  7936.,  7908.,  8880.,  8530.,  9616.,  9106., 10264.,  8948., 10016.,  7902.,  8856.,  6448.,  7264.,  5946.,  6696.,  5468.,  6128.,  5178.,  5820.,  6127.,  6910.,  7512.,  8464.,  8277.,  9298.,  8934., 10052., 10011., 11254., 10467., 11794.,  9934., 11164.,  9189., 10294.,  7704.,  8656.,  6679.,  7546.,  6082.,  6836.,  6064.,  6816.,  7416.,  8320.,  8768.,  9856.,  9352., 10528., 10448., 11744., 11544., 12992., 12312., 13856., 11472., 12896., 10120., 11392.,  8768.,  9856.,  8184.,  9184.,  7088.,  7968.,  6654.,  7484.,  7973.,  8982.,  9832., 11056., 10871., 12186., 11570., 13012., 12953., 14558., 13889., 15602., 13050., 14636., 11591., 13014.,  9768., 10992.,  8877.,  9994.,  8166.,  9140.,  7460.,  8400.,  9078., 10208., 10832., 12192., 11730., 13200., 13132., 14752., 14302., 16112., 15262., 17192., 14684., 16464., 12962., 14552., 10832., 12192., 10038., 11288.,  9012., 10112.,  8210.,  9228.,  9707., 10942., 11896., 13392., 13081., 14690., 14158., 15924., 15911., 17878., 16751., 18850., 15670., 17612., 14377., 16118., 12088., 13584., 10643., 12010.,  9626., 10820.,  8338.,  9388., 10123., 11374., 11896., 13392., 12921., 14546., 14542., 16340., 16007., 18022., 16847., 18994., 15926., 17900., 14089., 15846., 12088., 13584., 11059., 12442.,  9882., 11108.,  7620.,  8560.,  8894., 10024., 10832., 12192., 11818., 13288., 13036., 14656., 14758., 16568., 15430., 17360., 14092., 15872., 13162., 14752., 11088., 12448.,  9694., 10944.,  8548.,  9648.,  6942.,  7804.,  8461.,  9486.,  9832., 11056., 10543., 11874., 11858., 13332., 13249., 14902., 13897., 15658., 12714., 14332., 11247., 12686., 10024., 11248.,  9205., 10338.,  7958.,  8964.,  6064.,  6816.,  7160.,  8064.,  8768.,  9856.,  9608., 10784., 10448., 11744., 11800., 13248., 12568., 14112., 11472., 12896., 10376., 11648.,  8768.,  9856.,  7928.,  8928.,  7088.,  7968.,  5306.,  5980.,  6415.,  7214.,  7512.,  8464.,  8245.,  9282.,  9318., 10468., 10235., 11526., 10691., 12066., 10190., 11452.,  9029., 10150.,  7704.,  8656.,  6967.,  7850.,  6338.,  7124.,  4588.,  5152.,  5314.,  5992.,  6448.,  7264.,  7014.,  7896.,  7812.,  8784.,  8858.,  9944.,  9146., 10304.,  8356.,  9424.,  7974.,  8928.,  6704.,  7520.,  5730.,  6480.,  5004.,  5664.,  4428.,  4992.,  5370.,  6048.,  6448.,  7264.,  7054.,  7936.,  7908.,  8880.,  8530.,  9616.,  9106., 10264.,  8948., 10016.,  7902.,  8856.,  6448.,  7264.,  5946.,  6696.,  5468.,  6128.,  5178.,  5820.,  6127.,  6910.,  7512.,  8464.,  8277.,  9298.,  8934., 10052., 10011., 11254., 10467., 11794.,  9934., 11164.,  9189., 10294.,  7704.,  8656.,  6679.,  7546.,  6082.,  6836.,  6064.,  6816.,  7416.,  8320.,  8768.,  9856.,  9352., 10528., 10448., 11744., 11544., 12992., 12312., 13856., 11472., 12896., 10120., 11392.,  8768.,  9856.,  8184.,  9184.,  7088.,  7968.,  6654.,  7484.,  7973.,  8982.,  9832., 11056., 10871., 12186., 11570., 13012., 12953., 14558., 13889., 15602., 13050., 14636., 11591., 13014.,  9768., 10992.,  8877.,  9994.,  8166.,  9140.,  7460.,  8400.,  9078., 10208., 10832., 12192., 11730., 13200., 13132., 14752., 14302., 16112., 15262., 17192., 14684., 16464., 12962., 14552., 10832., 12192., 10038., 11288.,  9012., 10112.,  8210.,  9228.,  9707., 10942., 11896., 13392., 13081., 14690., 14158., 15924., 15911., 17878., 16751., 18850., 15670., 17612., 14377., 16118., 12088., 13584., 10643., 12010.,  9626., 10820.,  8338.,  9388., 10123., 11374., 11896., 13392., 12921., 14546., 14542., 16340., 16007., 18022., 16847., 18994., 15926., 17900., 14089., 15846., 12088., 13584., 11059., 12442.,  9882., 11108.,  7620.,  8560.,  8894., 10024., 10832., 12192., 11818., 13288., 13036., 14656., 14758., 16568., 15430., 17360., 14092., 15872., 13162., 14752., 11088., 12448.,  9694., 10944.,  8548.,  9648.,  6942.,  7804.,  8461.,  9486.,  9832., 11056., 10543., 11874., 11858., 13332., 13249., 14902., 13897., 15658., 12714., 14332., 11247., 12686., 10024., 11248.,  9205., 10338.,  7958.,  8964.,  6064.,  6816.,  7160.,  8064.,  8768.,  9856.,  9608., 10784., 10448., 11744., 11800., 13248., 12568., 14112., 11472., 12896., 10376., 11648.,  8768.,  9856.,  7928.,  8928.,  7088.,  7968.,  5306.,  5980.,  6415.,  7214.,  7512.,  8464.,  8245.,  9282.,  9318., 10468., 10235., 11526., 10691., 12066., 10190., 11452.,  9029., 10150.,  7704.,  8656.,  6967.,  7850.,  6338.,  7124.,  4588.,  5152.,  5314.,  5992.,  6448.,  7264.,  7014.,  7896.,  7812.,  8784.,  8858.,  9944.,  9146., 10304.,  8356.,  9424.,  7974.,  8928.,  6704.,  7520.,  5730.,  6480.,  5004.,  5664.,  4428.,  4992.,  5370.,  6048.,  6448.,  7264.,  7054.,  7936.,  7908.,  8880.,  8530.,  9616.,  9106., 10264.,  8948., 10016.,  7902.,  8856.,  6448.,  7264.,  5946.,  6696.,  5468.,  6128.,  5178.,  5820.,  6127.,  6910.,  7512.,  8464.,  8277.,  9298.,  8934., 10052., 10011., 11254., 10467., 11794.,  9934., 11164.,  9189., 10294.,  7704.,  8656.,  6679.,  7546.,  6082.,  6836.,  6064.,  6816.,  7416.,  8320.,  8768.,  9856.,  9352., 10528., 10448., 11744., 11544., 12992., 12312., 13856., 11472., 12896., 10120., 11392.,  8768.,  9856.,  8184.,  9184.,  7088.,  7968.,  6654.,  7484.,  7973.,  8982.,  9832., 11056., 10871., 12186., 11570., 13012., 12953., 14558., 13889., 15602., 13050., 14636., 11591., 13014.,  9768., 10992.,  8877.,  9994.,  8166.,  9140.,  7460.,  8400.,  9078., 10208., 10832., 12192., 11730., 13200., 13132., 14752., 14302., 16112., 15262., 17192., 14684., 16464., 12962., 14552., 10832., 12192., 10038., 11288.,  9012., 10112.,  8210.,  9228.,  9707., 10942., 11896., 13392., 13081., 14690., 14158., 15924., 15911., 17878., 16751., 18850., 15670., 17612., 14377., 16118., 12088., 13584., 10643., 12010.,  9626., 10820.,  8338.,  9388., 10123., 11374., 11896., 13392., 12921., 14546., 14542., 16340., 16007., 18022., 16847., 18994., 15926., 17900., 14089., 15846., 12088., 13584., 11059., 12442.,  9882., 11108.,  7620.,  8560.,  8894., 10024., 10832., 12192., 11818., 13288., 13036., 14656., 14758., 16568., 15430., 17360., 14092., 15872., 13162., 14752., 11088., 12448.,  9694., 10944.,  8548.,  9648.,  6942.,  7804.,  8461.,  9486.,  9832., 11056., 10543., 11874., 11858., 13332., 13249., 14902., 13897., 15658., 12714., 14332., 11247., 12686., 10024., 11248.,  9205., 10338.,  7958.,  8964.,  6064.,  6816.,  7160.,  8064.,  8768.,  9856.,  9608., 10784., 10448., 11744., 11800., 13248., 12568., 14112., 11472., 12896., 10376., 11648.,  8768.,  9856.,  7928.,  8928.,  7088.,  7968.,  5306.,  5980.,  6415.,  7214.,  7512.,  8464.,  8245.,  9282.,  9318., 10468., 10235., 11526., 10691., 12066., 10190., 11452.,  9029., 10150.,  7704.,  8656.,  6967.,  7850.,  6338.,  7124.,  4588.,  5152.,  5314.,  5992.,  6448.,  7264.,  7014.,  7896.,  7812.,  8784.,  8858.,  9944.,  9146., 10304.,  8356.,  9424.,  7974.,  8928.,  6704.,  7520.,  5730.,  6480.,  5004.,  5664.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x12x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {15911., 17878., 16751., 18850., 16007., 18022., 16847., 18994., 15911., 17878., 16751., 18850., 16007., 18022., 16847., 18994., 15911., 17878., 16751., 18850., 16007., 18022., 16847., 18994.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x12x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4020.,  4584.,  5148.,  5712.,  5022.,  5700.,  6378.,  7056.,  5808.,  6624.,  7440.,  8256.,  6090.,  6972.,  7854.,  8736.,  6924.,  7896.,  8868.,  9840.,  7542.,  8628.,  9714., 10800.,  8046.,  9204., 10362., 11520.,  7596.,  8664.,  9732., 10800.,  6594.,  7548.,  8502.,  9456.,  5808.,  6624.,  7440.,  8256.,  5526.,  6276.,  7026.,  7776.,  4692.,  5352.,  6012.,  6672.,  4530.,  5172.,  5814.,  6456.,  5327.,  6110.,  6893.,  7676.,  6712.,  7664.,  8616.,  9568.,  7517.,  8538.,  9559., 10580.,  7886.,  9004., 10122., 11240.,  9083., 10326., 11569., 12812.,  9527., 10854., 12181., 13508.,  8830., 10060., 11290., 12520.,  7929.,  9034., 10139., 11244.,  6840.,  7792.,  8744.,  9696.,  5835.,  6702.,  7569.,  8436.,  5410.,  6164.,  6918.,  7672.,  5360.,  6112.,  6864.,  7616.,  6696.,  7600.,  8504.,  9408.,  7744.,  8832.,  9920., 11008.,  8120.,  9296., 10472., 11648.,  9232., 10528., 11824., 13120., 10056., 11504., 12952., 14400., 10728., 12272., 13816., 15360., 10128., 11552., 12976., 14400.,  8792., 10064., 11336., 12608.,  7744.,  8832.,  9920., 11008.,  7368.,  8368.,  9368., 10368.,  6256.,  7136.,  8016.,  8896.,  5870.,  6700.,  7530.,  8360.,  6873.,  7882.,  8891.,  9900.,  8648.,  9872., 11096., 12320.,  9675., 10990., 12305., 13620., 10194., 11636., 13078., 14520., 11725., 13330., 14935., 16540., 12337., 14050., 15763., 17476., 11362., 12948., 14534., 16120., 10255., 11678., 13101., 14524.,  8776., 10000., 11224., 12448.,  7549.,  8666.,  9783., 10900.,  6974.,  7948.,  8922.,  9896.,  6700.,  7640.,  8580.,  9520.,  8370.,  9500., 10630., 11760.,  9680., 11040., 12400., 13760., 10150., 11620., 13090., 14560., 11540., 13160., 14780., 16400., 12570., 14380., 16190., 18000., 13410., 15340., 17270., 19200., 12660., 14440., 16220., 18000., 10990., 12580., 14170., 15760.,  9680., 11040., 12400., 13760.,  9210., 10460., 11710., 12960.,  7820.,  8920., 10020., 11120.,  7210.,  8228.,  9246., 10264.,  8419.,  9654., 10889., 12124., 10584., 12080., 13576., 15072., 11833., 13442., 15051., 16660., 12502., 14268., 16034., 17800., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13894., 15836., 17778., 19720., 12581., 14322., 16063., 17804., 10712., 12208., 13704., 15200.,  9263., 10630., 11997., 13364.,  8538.,  9732., 10926., 12120.,  7434.,  8484.,  9534., 10584.,  9235., 10486., 11737., 12988., 10584., 12080., 13576., 15072., 11241., 12866., 14491., 16116., 12726., 14524., 16322., 18120., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14118., 16092., 18066., 20040., 11989., 13746., 15503., 17260., 10712., 12208., 13704., 15200., 10079., 11462., 12845., 14228.,  8762.,  9988., 11214., 12440.,  6700.,  7640.,  8580.,  9520.,  7730.,  8860.,  9990., 11120.,  9680., 11040., 12400., 13760., 10790., 12260., 13730., 15200., 11540., 13160., 14780., 16400., 13210., 15020., 16830., 18640., 14050., 15980., 17910., 19840., 12660., 14440., 16220., 18000., 11630., 13220., 14810., 16400.,  9680., 11040., 12400., 13760.,  8570.,  9820., 11070., 12320.,  7820.,  8920., 10020., 11120.,  6094.,  6956.,  7818.,  8680.,  7561.,  8586.,  9611., 10636.,  8648.,  9872., 11096., 12320.,  9211., 10542., 11873., 13204., 10418., 11892., 13366., 14840., 11485., 13138., 14791., 16444., 12097., 13858., 15619., 17380., 11586., 13204., 14822., 16440.,  9791., 11230., 12669., 14108.,  8776., 10000., 11224., 12448.,  8237.,  9370., 10503., 11636.,  7198.,  8204.,  9210., 10216.,  5360.,  6112.,  6864.,  7616.,  6184.,  7088.,  7992.,  8896.,  7744.,  8832.,  9920., 11008.,  8632.,  9808., 10984., 12160.,  9232., 10528., 11824., 13120., 10568., 12016., 13464., 14912., 11240., 12784., 14328., 15872., 10128., 11552., 12976., 14400.,  9304., 10576., 11848., 13120.,  7744.,  8832.,  9920., 11008.,  6856.,  7856.,  8856.,  9856.,  6256.,  7136.,  8016.,  8896.,  4754.,  5428.,  6102.,  6776.,  5887.,  6686.,  7485.,  8284.,  6712.,  7664.,  8616.,  9568.,  7181.,  8218.,  9255., 10292.,  8110.,  9260., 10410., 11560.,  8971., 10262., 11553., 12844.,  9415., 10790., 12165., 13540.,  9054., 10316., 11578., 12840.,  7593.,  8714.,  9835., 10956.,  6840.,  7792.,  8744.,  9696.,  6395.,  7278.,  8161.,  9044.,  5634.,  6420.,  7206.,  7992.,  4020.,  4584.,  5148.,  5712.,  4638.,  5316.,  5994.,  6672.,  5808.,  6624.,  7440.,  8256.,  6474.,  7356.,  8238.,  9120.,  6924.,  7896.,  8868.,  9840.,  7926.,  9012., 10098., 11184.,  8430.,  9588., 10746., 11904.,  7596.,  8664.,  9732., 10800.,  6978.,  7932.,  8886.,  9840.,  5808.,  6624.,  7440.,  8256.,  5142.,  5892.,  6642.,  7392.,  4692.,  5352.,  6012.,  6672.,  4020.,  4584.,  5148.,  5712.,  5022.,  5700.,  6378.,  7056.,  5808.,  6624.,  7440.,  8256.,  6090.,  6972.,  7854.,  8736.,  6924.,  7896.,  8868.,  9840.,  7542.,  8628.,  9714., 10800.,  8046.,  9204., 10362., 11520.,  7596.,  8664.,  9732., 10800.,  6594.,  7548.,  8502.,  9456.,  5808.,  6624.,  7440.,  8256.,  5526.,  6276.,  7026.,  7776.,  4692.,  5352.,  6012.,  6672.,  4530.,  5172.,  5814.,  6456.,  5327.,  6110.,  6893.,  7676.,  6712.,  7664.,  8616.,  9568.,  7517.,  8538.,  9559., 10580.,  7886.,  9004., 10122., 11240.,  9083., 10326., 11569., 12812.,  9527., 10854., 12181., 13508.,  8830., 10060., 11290., 12520.,  7929.,  9034., 10139., 11244.,  6840.,  7792.,  8744.,  9696.,  5835.,  6702.,  7569.,  8436.,  5410.,  6164.,  6918.,  7672.,  5360.,  6112.,  6864.,  7616.,  6696.,  7600.,  8504.,  9408.,  7744.,  8832.,  9920., 11008.,  8120.,  9296., 10472., 11648.,  9232., 10528., 11824., 13120., 10056., 11504., 12952., 14400., 10728., 12272., 13816., 15360., 10128., 11552., 12976., 14400.,  8792., 10064., 11336., 12608.,  7744.,  8832.,  9920., 11008.,  7368.,  8368.,  9368., 10368.,  6256.,  7136.,  8016.,  8896.,  5870.,  6700.,  7530.,  8360.,  6873.,  7882.,  8891.,  9900.,  8648.,  9872., 11096., 12320.,  9675., 10990., 12305., 13620., 10194., 11636., 13078., 14520., 11725., 13330., 14935., 16540., 12337., 14050., 15763., 17476., 11362., 12948., 14534., 16120., 10255., 11678., 13101., 14524.,  8776., 10000., 11224., 12448.,  7549.,  8666.,  9783., 10900.,  6974.,  7948.,  8922.,  9896.,  6700.,  7640.,  8580.,  9520.,  8370.,  9500., 10630., 11760.,  9680., 11040., 12400., 13760., 10150., 11620., 13090., 14560., 11540., 13160., 14780., 16400., 12570., 14380., 16190., 18000., 13410., 15340., 17270., 19200., 12660., 14440., 16220., 18000., 10990., 12580., 14170., 15760.,  9680., 11040., 12400., 13760.,  9210., 10460., 11710., 12960.,  7820.,  8920., 10020., 11120.,  7210.,  8228.,  9246., 10264.,  8419.,  9654., 10889., 12124., 10584., 12080., 13576., 15072., 11833., 13442., 15051., 16660., 12502., 14268., 16034., 17800., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13894., 15836., 17778., 19720., 12581., 14322., 16063., 17804., 10712., 12208., 13704., 15200.,  9263., 10630., 11997., 13364.,  8538.,  9732., 10926., 12120.,  7434.,  8484.,  9534., 10584.,  9235., 10486., 11737., 12988., 10584., 12080., 13576., 15072., 11241., 12866., 14491., 16116., 12726., 14524., 16322., 18120., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14118., 16092., 18066., 20040., 11989., 13746., 15503., 17260., 10712., 12208., 13704., 15200., 10079., 11462., 12845., 14228.,  8762.,  9988., 11214., 12440.,  6700.,  7640.,  8580.,  9520.,  7730.,  8860.,  9990., 11120.,  9680., 11040., 12400., 13760., 10790., 12260., 13730., 15200., 11540., 13160., 14780., 16400., 13210., 15020., 16830., 18640., 14050., 15980., 17910., 19840., 12660., 14440., 16220., 18000., 11630., 13220., 14810., 16400.,  9680., 11040., 12400., 13760.,  8570.,  9820., 11070., 12320.,  7820.,  8920., 10020., 11120.,  6094.,  6956.,  7818.,  8680.,  7561.,  8586.,  9611., 10636.,  8648.,  9872., 11096., 12320.,  9211., 10542., 11873., 13204., 10418., 11892., 13366., 14840., 11485., 13138., 14791., 16444., 12097., 13858., 15619., 17380., 11586., 13204., 14822., 16440.,  9791., 11230., 12669., 14108.,  8776., 10000., 11224., 12448.,  8237.,  9370., 10503., 11636.,  7198.,  8204.,  9210., 10216.,  5360.,  6112.,  6864.,  7616.,  6184.,  7088.,  7992.,  8896.,  7744.,  8832.,  9920., 11008.,  8632.,  9808., 10984., 12160.,  9232., 10528., 11824., 13120., 10568., 12016., 13464., 14912., 11240., 12784., 14328., 15872., 10128., 11552., 12976., 14400.,  9304., 10576., 11848., 13120.,  7744.,  8832.,  9920., 11008.,  6856.,  7856.,  8856.,  9856.,  6256.,  7136.,  8016.,  8896.,  4754.,  5428.,  6102.,  6776.,  5887.,  6686.,  7485.,  8284.,  6712.,  7664.,  8616.,  9568.,  7181.,  8218.,  9255., 10292.,  8110.,  9260., 10410., 11560.,  8971., 10262., 11553., 12844.,  9415., 10790., 12165., 13540.,  9054., 10316., 11578., 12840.,  7593.,  8714.,  9835., 10956.,  6840.,  7792.,  8744.,  9696.,  6395.,  7278.,  8161.,  9044.,  5634.,  6420.,  7206.,  7992.,  4020.,  4584.,  5148.,  5712.,  4638.,  5316.,  5994.,  6672.,  5808.,  6624.,  7440.,  8256.,  6474.,  7356.,  8238.,  9120.,  6924.,  7896.,  8868.,  9840.,  7926.,  9012., 10098., 11184.,  8430.,  9588., 10746., 11904.,  7596.,  8664.,  9732., 10800.,  6978.,  7932.,  8886.,  9840.,  5808.,  6624.,  7440.,  8256.,  5142.,  5892.,  6642.,  7392.,  4692.,  5352.,  6012.,  6672.,  4020.,  4584.,  5148.,  5712.,  5022.,  5700.,  6378.,  7056.,  5808.,  6624.,  7440.,  8256.,  6090.,  6972.,  7854.,  8736.,  6924.,  7896.,  8868.,  9840.,  7542.,  8628.,  9714., 10800.,  8046.,  9204., 10362., 11520.,  7596.,  8664.,  9732., 10800.,  6594.,  7548.,  8502.,  9456.,  5808.,  6624.,  7440.,  8256.,  5526.,  6276.,  7026.,  7776.,  4692.,  5352.,  6012.,  6672.,  4530.,  5172.,  5814.,  6456.,  5327.,  6110.,  6893.,  7676.,  6712.,  7664.,  8616.,  9568.,  7517.,  8538.,  9559., 10580.,  7886.,  9004., 10122., 11240.,  9083., 10326., 11569., 12812.,  9527., 10854., 12181., 13508.,  8830., 10060., 11290., 12520.,  7929.,  9034., 10139., 11244.,  6840.,  7792.,  8744.,  9696.,  5835.,  6702.,  7569.,  8436.,  5410.,  6164.,  6918.,  7672.,  5360.,  6112.,  6864.,  7616.,  6696.,  7600.,  8504.,  9408.,  7744.,  8832.,  9920., 11008.,  8120.,  9296., 10472., 11648.,  9232., 10528., 11824., 13120., 10056., 11504., 12952., 14400., 10728., 12272., 13816., 15360., 10128., 11552., 12976., 14400.,  8792., 10064., 11336., 12608.,  7744.,  8832.,  9920., 11008.,  7368.,  8368.,  9368., 10368.,  6256.,  7136.,  8016.,  8896.,  5870.,  6700.,  7530.,  8360.,  6873.,  7882.,  8891.,  9900.,  8648.,  9872., 11096., 12320.,  9675., 10990., 12305., 13620., 10194., 11636., 13078., 14520., 11725., 13330., 14935., 16540., 12337., 14050., 15763., 17476., 11362., 12948., 14534., 16120., 10255., 11678., 13101., 14524.,  8776., 10000., 11224., 12448.,  7549.,  8666.,  9783., 10900.,  6974.,  7948.,  8922.,  9896.,  6700.,  7640.,  8580.,  9520.,  8370.,  9500., 10630., 11760.,  9680., 11040., 12400., 13760., 10150., 11620., 13090., 14560., 11540., 13160., 14780., 16400., 12570., 14380., 16190., 18000., 13410., 15340., 17270., 19200., 12660., 14440., 16220., 18000., 10990., 12580., 14170., 15760.,  9680., 11040., 12400., 13760.,  9210., 10460., 11710., 12960.,  7820.,  8920., 10020., 11120.,  7210.,  8228.,  9246., 10264.,  8419.,  9654., 10889., 12124., 10584., 12080., 13576., 15072., 11833., 13442., 15051., 16660., 12502., 14268., 16034., 17800., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13894., 15836., 17778., 19720., 12581., 14322., 16063., 17804., 10712., 12208., 13704., 15200.,  9263., 10630., 11997., 13364.,  8538.,  9732., 10926., 12120.,  7434.,  8484.,  9534., 10584.,  9235., 10486., 11737., 12988., 10584., 12080., 13576., 15072., 11241., 12866., 14491., 16116., 12726., 14524., 16322., 18120., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14118., 16092., 18066., 20040., 11989., 13746., 15503., 17260., 10712., 12208., 13704., 15200., 10079., 11462., 12845., 14228.,  8762.,  9988., 11214., 12440.,  6700.,  7640.,  8580.,  9520.,  7730.,  8860.,  9990., 11120.,  9680., 11040., 12400., 13760., 10790., 12260., 13730., 15200., 11540., 13160., 14780., 16400., 13210., 15020., 16830., 18640., 14050., 15980., 17910., 19840., 12660., 14440., 16220., 18000., 11630., 13220., 14810., 16400.,  9680., 11040., 12400., 13760.,  8570.,  9820., 11070., 12320.,  7820.,  8920., 10020., 11120.,  6094.,  6956.,  7818.,  8680.,  7561.,  8586.,  9611., 10636.,  8648.,  9872., 11096., 12320.,  9211., 10542., 11873., 13204., 10418., 11892., 13366., 14840., 11485., 13138., 14791., 16444., 12097., 13858., 15619., 17380., 11586., 13204., 14822., 16440.,  9791., 11230., 12669., 14108.,  8776., 10000., 11224., 12448.,  8237.,  9370., 10503., 11636.,  7198.,  8204.,  9210., 10216.,  5360.,  6112.,  6864.,  7616.,  6184.,  7088.,  7992.,  8896.,  7744.,  8832.,  9920., 11008.,  8632.,  9808., 10984., 12160.,  9232., 10528., 11824., 13120., 10568., 12016., 13464., 14912., 11240., 12784., 14328., 15872., 10128., 11552., 12976., 14400.,  9304., 10576., 11848., 13120.,  7744.,  8832.,  9920., 11008.,  6856.,  7856.,  8856.,  9856.,  6256.,  7136.,  8016.,  8896.,  4754.,  5428.,  6102.,  6776.,  5887.,  6686.,  7485.,  8284.,  6712.,  7664.,  8616.,  9568.,  7181.,  8218.,  9255., 10292.,  8110.,  9260., 10410., 11560.,  8971., 10262., 11553., 12844.,  9415., 10790., 12165., 13540.,  9054., 10316., 11578., 12840.,  7593.,  8714.,  9835., 10956.,  6840.,  7792.,  8744.,  9696.,  6395.,  7278.,  8161.,  9044.,  5634.,  6420.,  7206.,  7992.,  4020.,  4584.,  5148.,  5712.,  4638.,  5316.,  5994.,  6672.,  5808.,  6624.,  7440.,  8256.,  6474.,  7356.,  8238.,  9120.,  6924.,  7896.,  8868.,  9840.,  7926.,  9012., 10098., 11184.,  8430.,  9588., 10746., 11904.,  7596.,  8664.,  9732., 10800.,  6978.,  7932.,  8886.,  9840.,  5808.,  6624.,  7440.,  8256.,  5142.,  5892.,  6642.,  7392.,  4692.,  5352.,  6012.,  6672.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x12x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x12x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x12x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x12x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x12x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x12x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x12x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x13x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2320., 2630., 2976., 3528., 4104., 4746., 5163., 5148., 4784., 4266., 3584., 2872., 2408., 2876., 3079., 3336., 3768., 4368., 5049., 5056., 5079., 4818., 4744., 4304., 3889., 3298., 3152., 3568., 4256., 4824., 5440., 5888., 5860., 5784., 5216., 4672., 4080., 3544., 3168., 4034., 4360., 4912., 5409., 6098., 6890., 6994., 6986., 6388., 5691., 5000., 4244., 3480., 4504., 5078., 5840., 6428., 7088., 7602., 7429., 7336., 6920., 6290., 5728., 4988., 4336., 4440., 5393., 6232., 7282., 8020., 8867., 8712., 8557., 7542., 6702., 5728., 4967., 4382., 4539., 5176., 5908., 6724., 7869., 8612., 8681., 8654., 8025., 7186., 6260., 5162., 4319., 4272., 5043., 5856., 6621., 7120., 7711., 7704., 7841., 7292., 6819., 6048., 5229., 4484., 3369., 3964., 4796., 5696., 6495., 7120., 7142., 7036., 6535., 5892., 5244., 4664., 4145., 2960., 3340., 3904., 4660., 5232., 5868., 6040., 6324., 5936., 5436., 4704., 4052., 3456., 2847., 3372., 4036., 4304., 4633., 5016., 4963., 5022., 4781., 4466., 3956., 3594., 3275., 2304., 2789., 3360., 3963., 4368., 4825., 4540., 4447., 4052., 3629., 3056., 2707., 2396., 2800., 3106., 3232., 3508., 4056., 4534., 4647., 4568., 4064., 3862., 3680., 3268., 2888., 2992., 3283., 3784., 4408., 5020., 5501., 5316., 5211., 4646., 4224., 3712., 3037., 2638., 4048., 4304., 4640., 5048., 5504., 6016., 6164., 6152., 5536., 4896., 4304., 3608., 3024., 4310., 4928., 5504., 6365., 6894., 7402., 7186., 6922., 6232., 5711., 5112., 4460., 3748., 4104., 4890., 5776., 6656., 7600., 8198., 8361., 8140., 7384., 6422., 5520., 4624., 4016., 4668., 5253., 5816., 6586., 7552., 8607., 8612., 8681., 7898., 7294., 6368., 5499., 4490., 4463., 5228., 6100., 6876., 7721., 8320., 8373., 8410., 7869., 7122., 6356., 5422., 4683., 4224., 4655., 5328., 6105., 6928., 7659., 7780., 7789., 7116., 6351., 5600., 4793., 4244., 3693., 4140., 4780., 5476., 6139., 6632., 6670., 6756., 6411., 5840., 5324., 4616., 3981., 3072., 3692., 4192., 4948., 5328., 5788., 5832., 5844., 5168., 4636., 3936., 3508., 3232., 3187., 3528., 3956., 4448., 4981., 5324., 5399., 5106., 4577., 4058., 3412., 2854., 2519., 2672., 3129., 3616., 4159., 4400., 4701., 4672., 4691., 4324., 4001., 3344., 2855., 2412., 2864., 3262., 3536., 3856., 4392., 4738., 4515., 4500., 4128., 3826., 3552., 2864., 2216., 3236., 3919., 4280., 4824., 5288., 5681., 5528., 5679., 5130., 4664., 4112., 3465., 2874., 3328., 3936., 4608., 5336., 6192., 6640., 6596., 6424., 5728., 5120., 4560., 3960., 3424., 3850., 4504., 5104., 5897., 6522., 7178., 7282., 7594., 6988., 6387., 5448., 4516., 3648., 4088., 4782., 5568., 6180., 7104., 7994., 8205., 8208., 7496., 6826., 6208., 5396., 4656., 4432., 5081., 5960., 6802., 7660., 8411., 8320., 8373., 7742., 7038., 6272., 5375., 4534., 4979., 5440., 6004., 6660., 7381., 8172., 8305., 8406., 7777., 6946., 6180., 5330., 4615., 4384., 5275., 5888., 6805., 7328., 7831., 7504., 7465., 6748., 6203., 5584., 4917., 4196., 3617., 4284., 5052., 5816., 6615., 7056., 7094., 6988., 6351., 5500., 4700., 3896., 3369., 3792., 4172., 4512., 5044., 5520., 6060., 6040., 6116., 5408., 4860., 4224., 3652., 2928., 3159., 3828., 4580., 5136., 5537., 5648., 5467., 5366., 4901., 4450., 3940., 3234., 2707., 2288., 2621., 3168., 3763., 4368., 4849., 4884., 4983., 4532., 3957., 3360., 2811., 2508.};
  const std::array<int, 4> in_shape = {{ 3, 12, 13, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x13x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {8867., 8712., 8557., 8612., 8681., 8654., 8607., 8612., 8681., 8320., 8373., 8410., 8411., 8320., 8373., 8172., 8305., 8406.};
  const std::array<int, 4> in_shape = {{ 3, 12, 13, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x13x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2336., 2624., 2719., 3052., 3136., 3520., 3495., 3936., 3832., 4320., 4247., 4788., 4535., 5094., 4487., 5048., 4244., 4752., 3747., 4212., 3184., 3600., 2695., 3056., 2500., 2816., 2783., 3112., 3043., 3422., 3356., 3792., 3836., 4336., 4357., 4912., 5177., 5794., 5098., 5728., 5067., 5694., 4567., 5140., 4288., 4816., 3748., 4224., 3345., 3762., 2901., 3268., 3120., 3520., 3580., 4032., 4320., 4832., 4684., 5264., 5152., 5792., 5628., 6336., 5676., 6392., 5644., 6352., 5328., 5968., 4716., 5296., 4192., 4704., 3564., 4016., 3104., 3504., 3887., 4356., 4408., 4944., 4892., 5504., 5433., 6114., 5901., 6644., 6614., 7428., 6547., 7364., 6528., 7332., 5843., 6568., 5145., 5798., 4612., 5184., 4214., 4712., 3457., 3888., 4072., 4592., 4693., 5292., 5488., 6176., 6133., 6904., 6960., 7808., 7469., 8404., 7541., 8474., 7277., 8192., 6692., 7520., 5865., 6612., 5280., 5936., 4557., 5128., 3972., 4464., 4247., 4800., 5249., 5890., 5868., 6608., 6642., 7476., 7341., 8264., 8183., 9206., 8232., 9264., 8297., 9322., 7527., 8460., 6798., 7644., 5876., 6624., 5087., 5742., 4405., 4972., 4643., 5206., 5206., 5856., 5852., 6600., 6447., 7288., 7481., 8410., 8100., 9128., 8101., 9122., 7910., 8924., 7415., 8338., 6703., 7540., 6100., 6840., 5116., 5764., 4445., 5006., 3888., 4400., 4931., 5526., 5744., 6432., 6547., 7322., 6808., 7664., 7355., 8302., 7247., 8192., 7427., 8370., 6724., 7592., 6279., 7062., 5472., 6160., 4787., 5386., 4100., 4616., 3555., 3986., 4023., 4536., 4700., 5304., 5392., 6080., 6081., 6846., 6733., 7584., 7030., 7884., 6815., 7672., 6195., 6990., 5588., 6312., 5140., 5784., 4517., 5088., 3913., 4402., 2832., 3200., 3332., 3768., 4000., 4512., 4740., 5320., 5264., 5920., 5940., 6680., 5892., 6640., 6068., 6824., 5648., 6352., 5252., 5896., 4512., 5088., 3972., 4488., 3472., 3920., 2635., 2958., 3068., 3448., 3628., 4072., 3853., 4352., 4321., 4882., 4890., 5520., 4963., 5590., 4988., 5628., 4759., 5354., 4325., 4868., 3828., 4312., 3458., 3892., 3149., 3526., 2328., 2624., 2657., 3002., 3056., 3456., 3465., 3910., 3808., 4304., 4457., 5010., 4157., 4696., 4225., 4766., 3972., 4472., 3797., 4250., 3328., 3728., 2913., 3270., 2324., 2632., 2704., 3008., 2943., 3300., 3056., 3456., 3319., 3768., 3848., 4352., 4391., 4940., 4599., 5150., 4423., 4976., 3972., 4464., 3475., 3916., 3200., 3600., 2791., 3144., 2516., 2816., 2895., 3280., 3455., 3894., 3948., 4432., 4568., 5104., 4917., 5512., 5349., 5994., 5158., 5800., 5127., 5766., 4615., 5180., 4300., 4800., 3684., 4128., 3021., 3402., 2453., 2780., 3776., 4224., 4284., 4800., 4768., 5344., 5068., 5712., 5536., 6240., 5900., 6656., 6060., 6808., 5900., 6640., 5248., 5904., 4524., 5104., 4000., 4512., 3516., 3952., 3168., 3536., 3903., 4396., 4420., 4992., 4956., 5600., 5765., 6490., 6477., 7276., 7138., 8004., 6943., 7812., 6924., 7780., 6067., 6832., 5477., 6158., 4804., 5408., 4242., 4760., 3537., 3976., 4040., 4560., 4821., 5428., 5680., 6368., 6261., 7040., 7008., 7872., 7501., 8444., 7717., 8674., 7693., 8648., 7204., 8064., 6233., 7004., 5408., 6096., 4509., 5104., 3956., 4464., 4631., 5192., 5405., 6058., 5804., 6544., 6398., 7236., 7165., 8096., 8243., 9262., 8100., 9128., 8101., 9122., 7223., 8148., 6650., 7484., 5940., 6688., 5323., 5974., 4501., 5060., 4419., 4990., 5234., 5896., 6236., 6984., 6875., 7720., 7689., 8626., 8096., 9120., 8049., 9082., 7986., 9012., 7607., 8538., 6763., 7604., 6100., 6840., 5064., 5708., 4285., 4838., 3936., 4432., 4563., 5134., 5168., 5824., 5859., 6610., 6568., 7408., 7403., 8326., 7535., 8472., 7715., 8650., 6772., 7624., 5927., 6702., 5280., 5968., 4739., 5346., 4116., 4648., 3427., 3866., 3875., 4376., 4508., 5080., 5180., 5832., 5921., 6646., 6313., 7120., 6370., 7196., 6283., 7112., 5795., 6550., 5328., 6016., 5076., 5688., 4385., 4928., 3785., 4266., 3088., 3488., 3764., 4216., 4064., 4576., 4612., 5192., 5024., 5664., 5556., 6264., 5764., 6480., 5924., 6632., 5264., 5904., 4804., 5384., 4064., 4576., 3460., 3912., 3136., 3536., 3067., 3446., 3336., 3760., 3692., 4168., 4105., 4640., 4673., 5258., 5046., 5688., 5119., 5758., 4728., 5348., 4263., 4818., 3937., 4436., 3620., 4056., 3118., 3500., 2829., 3166., 2520., 2848., 2993., 3362., 3488., 3904., 4025., 4494., 3984., 4496., 4201., 4762., 4141., 4704., 4193., 4742., 3876., 4376., 3717., 4162., 3088., 3472., 2721., 3054., 2244., 2536., 2496., 2816., 3039., 3420., 3568., 4000., 3863., 4336., 4376., 4896., 4583., 5156., 4391., 4950., 4343., 4904., 3956., 4464., 3651., 4100., 3520., 3920., 2823., 3168., 2276., 2560., 3071., 3448., 3755., 4206., 4140., 4656., 4596., 5168., 4965., 5600., 5473., 6162., 5362., 6032., 5587., 6254., 4903., 5508., 4376., 4912., 3748., 4224., 3145., 3554., 2725., 3060., 3328., 3744., 3884., 4384., 4448., 5024., 5132., 5776., 5936., 6656., 6412., 7200., 6444., 7224., 6204., 6992., 5632., 6352., 5036., 5680., 4576., 5152., 3964., 4464., 3472., 3888., 3551., 3988., 4320., 4848., 4892., 5504., 5633., 6322., 6077., 6852., 6766., 7620., 6699., 7556., 7032., 7908., 6579., 7384., 6081., 6806., 5172., 5824., 4430., 5000., 3617., 4096., 4040., 4528., 4629., 5212., 5344., 6016., 5781., 6536., 6608., 7456., 7485., 8420., 7813., 8746., 7709., 8656., 7044., 7904., 6137., 6916., 5552., 6256., 4941., 5560., 4324., 4848., 4343., 4912., 5241., 5906., 6076., 6832., 6954., 7796., 7629., 8568., 8415., 9446., 8096., 9120., 8049., 9082., 7415., 8348., 6838., 7676., 6068., 6816., 5271., 5918., 4213., 4764., 4627., 5190., 5342., 6000., 6044., 6792., 6567., 7416., 7513., 8458., 8108., 9144., 8237., 9266., 8286., 9324., 7671., 8610., 6599., 7444., 5796., 6552., 5060., 5716., 4525., 5086., 3856., 4368., 4627., 5222., 5184., 5856., 6035., 6794., 6728., 7568., 7371., 8286., 7135., 8048., 7203., 8130., 6436., 7272., 5975., 6726., 5456., 6128., 4819., 5402., 4052., 4552., 3747., 4226., 4367., 4920., 5068., 5688., 5496., 6192., 6065., 6830., 6373., 7200., 6462., 7276., 6503., 7320., 6019., 6750., 5260., 5912., 4628., 5208., 3693., 4192., 3065., 3490., 3776., 4224., 4404., 4920., 4640., 5216., 5060., 5704., 5408., 6112., 6052., 6808., 5892., 6640., 5924., 6664., 5024., 5680., 4548., 5128., 4128., 4640., 3764., 4200., 3136., 3504., 2811., 3198., 3396., 3848., 4140., 4648., 4677., 5248., 5169., 5794., 5218., 5888., 5035., 5702., 5012., 5676., 4743., 5338., 4301., 4836., 3940., 4408., 3162., 3556., 2573., 2902., 2536., 2848., 2945., 3306., 3296., 3712., 3673., 4150., 4032., 4560., 4489., 5058., 4557., 5128., 4753., 5326., 4148., 4664., 3541., 4010., 3024., 3440., 2609., 2966., 2292., 2600.};
  const std::array<int, 4> in_shape = {{ 3, 12, 13, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x13x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {8183., 9206., 8232., 9264., 8297., 9322., 8100., 9128., 8101., 9122., 7910., 8924., 8243., 9262., 8100., 9128., 8101., 9122., 8096., 9120., 8049., 9082., 7986., 9012., 8415., 9446., 8096., 9120., 8049., 9082., 8108., 9144., 8237., 9266., 8286., 9324.};
  const std::array<int, 4> in_shape = {{ 3, 12, 13, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x13x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2000.,  2288.,  2576.,  2864.,  2241.,  2574.,  2907.,  3240.,  2624.,  3008.,  3392.,  3776.,  2933.,  3374.,  3815.,  4256.,  3352.,  3840.,  4328.,  4816.,  3681.,  4222.,  4763.,  5304.,  3967.,  4526.,  5085.,  5644.,  3853.,  4414.,  4975.,  5536.,  3740.,  4248.,  4756.,  5264.,  3221.,  3686.,  4151.,  4616.,  2816.,  3232.,  3648.,  4064.,  2437.,  2798.,  3159.,  3520.,  2316.,  2632.,  2948.,  3264.,  2245.,  2574.,  2903.,  3232.,  2843.,  3222.,  3601.,  3980.,  3044.,  3480.,  3916.,  4352.,  3396.,  3896.,  4396.,  4896.,  3711.,  4266.,  4821.,  5376.,  4361.,  4978.,  5595.,  6212.,  4318.,  4948.,  5578.,  6208.,  4387.,  5014.,  5641.,  6268.,  3985.,  4558.,  5131.,  5704.,  3888.,  4416.,  4944.,  5472.,  3276.,  3752.,  4228.,  4704.,  2817.,  3234.,  3651.,  4068.,  2507.,  2874.,  3241.,  3608.,  2832.,  3232.,  3632.,  4032.,  3156.,  3608.,  4060.,  4512.,  3776.,  4288.,  4800.,  5312.,  4020.,  4600.,  5180.,  5760.,  4608.,  5248.,  5888.,  6528.,  4948.,  5656.,  6364.,  7072.,  5100.,  5816.,  6532.,  7248.,  4852.,  5560.,  6268.,  6976.,  4576.,  5216.,  5856.,  6496.,  4084.,  4664.,  5244.,  5824.,  3776.,  4288.,  4800.,  5312.,  3124.,  3576.,  4028.,  4480.,  2800.,  3200.,  3600.,  4000.,  3177.,  3646.,  4115.,  4584.,  3736.,  4272.,  4808.,  5344.,  4212.,  4824.,  5436.,  6048.,  4937.,  5618.,  6299.,  6980.,  5123.,  5866.,  6609.,  7352.,  5774.,  6588.,  7402.,  8216.,  5605.,  6422.,  7239.,  8056.,  5804.,  6608.,  7412.,  8216.,  5025.,  5750.,  6475.,  7200.,  4565.,  5218.,  5871.,  6524.,  3948.,  4520.,  5092.,  5664.,  3738.,  4236.,  4734.,  5232.,  3075.,  3506.,  3937.,  4368.,  3640.,  4160.,  4680.,  5200.,  4019.,  4618.,  5217.,  5816.,  4720.,  5408.,  6096.,  6784.,  5239.,  6010.,  6781.,  7552.,  6016.,  6864.,  7712.,  8560.,  6387.,  7322.,  8257.,  9192.,  6661.,  7594.,  8527.,  9460.,  6279.,  7194.,  8109.,  9024.,  5900.,  6728.,  7556.,  8384.,  5095.,  5842.,  6589.,  7336.,  4592.,  5248.,  5904.,  6560.,  3951.,  4522.,  5093.,  5664.,  3596.,  4088.,  4580.,  5072.,  3765.,  4318.,  4871.,  5424.,  4561.,  5202.,  5843.,  6484.,  5076.,  5816.,  6556.,  7296.,  5762.,  6596.,  7430.,  8264.,  6239.,  7162.,  8085.,  9008.,  7183.,  8206.,  9229., 10252.,  7080.,  8112.,  9144., 10176.,  7281.,  8306.,  9331., 10356.,  6489.,  7422.,  8355.,  9288.,  6046.,  6892.,  7738.,  8584.,  5084.,  5832.,  6580.,  7328.,  4495.,  5150.,  5805.,  6460.,  3891.,  4458.,  5025.,  5592.,  4083.,  4646.,  5209.,  5772.,  4546.,  5196.,  5846.,  6496.,  5356.,  6104.,  6852.,  7600.,  5669.,  6510.,  7351.,  8192.,  6593.,  7522.,  8451.,  9380.,  7076.,  8104.,  9132., 10160.,  7149.,  8170.,  9191., 10212.,  6838.,  7852.,  8866.,  9880.,  6611.,  7534.,  8457.,  9380.,  5913.,  6750.,  7587.,  8424.,  5348.,  6088.,  6828.,  7568.,  4336.,  4984.,  5632.,  6280.,  3977.,  4538.,  5099.,  5660.,  3408.,  3920.,  4432.,  4944.,  4163.,  4758.,  5353.,  5948.,  4848.,  5536.,  6224.,  6912.,  5631.,  6406.,  7181.,  7956.,  5832.,  6688.,  7544.,  8400.,  6707.,  7654.,  8601.,  9548.,  6397.,  7342.,  8287.,  9232.,  6663.,  7606.,  8549.,  9492.,  5860.,  6728.,  7596.,  8464.,  5599.,  6382.,  7165.,  7948.,  4816.,  5504.,  6192.,  6880.,  4271.,  4870.,  5469.,  6068.,  3476.,  3992.,  4508.,  5024.,  2983.,  3414.,  3845.,  4276.,  3373.,  3886.,  4399.,  4912.,  4284.,  4888.,  5492.,  6096.,  4848.,  5536.,  6224.,  6912.,  5413.,  6178.,  6943.,  7708.,  5767.,  6618.,  7469.,  8320.,  6102.,  6956.,  7810.,  8664.,  5925.,  6782.,  7639.,  8496.,  5483.,  6278.,  7073.,  7868.,  4820.,  5544.,  6268.,  6992.,  4612.,  5256.,  5900.,  6544.,  3999.,  4570.,  5141.,  5712.,  3449.,  3938.,  4427.,  4916.,  2544.,  2912.,  3280.,  3648.,  2996.,  3432.,  3868.,  4304.,  3392.,  3904.,  4416.,  4928.,  4068.,  4648.,  5228.,  5808.,  4560.,  5216.,  5872.,  6528.,  5220.,  5960.,  6700.,  7440.,  5180.,  5928.,  6676.,  7424.,  5332.,  6088.,  6844.,  7600.,  4896.,  5600.,  6304.,  7008.,  4516.,  5160.,  5804.,  6448.,  3840.,  4416.,  4992.,  5568.,  3556.,  4072.,  4588.,  5104.,  3104.,  3552.,  4000.,  4448.,  2355.,  2678.,  3001.,  3324.,  2684.,  3064.,  3444.,  3824.,  3132.,  3576.,  4020.,  4464.,  3255.,  3754.,  4253.,  4752.,  3873.,  4434.,  4995.,  5556.,  4318.,  4948.,  5578.,  6208.,  4387.,  5014.,  5641.,  6268.,  4344.,  4984.,  5624.,  6264.,  4299.,  4894.,  5489.,  6084.,  3835.,  4378.,  4921.,  5464.,  3364.,  3848.,  4332.,  4816.,  2866.,  3300.,  3734.,  4168.,  2641.,  3018.,  3395.,  3772.,  1944.,  2240.,  2536.,  2832.,  2505.,  2850.,  3195.,  3540.,  2832.,  3232.,  3632.,  4032.,  3237.,  3682.,  4127.,  4572.,  3328.,  3824.,  4320.,  4816.,  3913.,  4466.,  5019.,  5572.,  3583.,  4122.,  4661.,  5200.,  3717.,  4258.,  4799.,  5340.,  3396.,  3896.,  4396.,  4896.,  3365.,  3818.,  4271.,  4724.,  2864.,  3264.,  3664.,  4064.,  2445.,  2802.,  3159.,  3516.,  2036.,  2344.,  2652.,  2960.,  2144.,  2448.,  2752.,  3056.,  2537.,  2894.,  3251.,  3608.,  2960.,  3360.,  3760.,  4160.,  3021.,  3470.,  3919.,  4368.,  3496.,  4000.,  4504.,  5008.,  3769.,  4318.,  4867.,  5416.,  3911.,  4462.,  5013.,  5564.,  3797.,  4350.,  4903.,  5456.,  3596.,  4088.,  4580.,  5072.,  3149.,  3590.,  4031.,  4472.,  2864.,  3264.,  3664.,  4064.,  2381.,  2734.,  3087.,  3440.,  2172.,  2472.,  2772.,  3072.,  2541.,  2926.,  3311.,  3696.,  3159.,  3598.,  4037.,  4476.,  3412.,  3896.,  4380.,  4864.,  3800.,  4336.,  4872.,  5408.,  4023.,  4618.,  5213.,  5808.,  4677.,  5322.,  5967.,  6612.,  4426.,  5068.,  5710.,  6352.,  4495.,  5134.,  5773.,  6412.,  3833.,  4398.,  4963.,  5528.,  3684.,  4184.,  4684.,  5184.,  3180.,  3624.,  4068.,  4512.,  2717.,  3098.,  3479.,  3860.,  2227.,  2554.,  2881.,  3208.,  3072.,  3520.,  3968.,  4416.,  3476.,  3992.,  4508.,  5024.,  4096.,  4672.,  5248.,  5824.,  4468.,  5112.,  5756.,  6400.,  5056.,  5760.,  6464.,  7168.,  5188.,  5944.,  6700.,  7456.,  5324.,  6072.,  6820.,  7568.,  5076.,  5816.,  6556.,  7296.,  4656.,  5312.,  5968.,  6624.,  3956.,  4536.,  5116.,  5696.,  3648.,  4160.,  4672.,  5184.,  3044.,  3480.,  3916.,  4352.,  2704.,  3072.,  3440.,  3808.,  3441.,  3934.,  4427.,  4920.,  3980.,  4552.,  5124.,  5696.,  4308.,  4952.,  5596.,  6240.,  5045.,  5770.,  6495.,  7220.,  5515.,  6314.,  7113.,  7912.,  6130.,  6996.,  7862.,  8728.,  5961.,  6830.,  7699.,  8568.,  6160.,  7016.,  7872.,  8728.,  5305.,  6070.,  6835.,  7600.,  4753.,  5434.,  6115.,  6796.,  4044.,  4648.,  5252.,  5856.,  3710.,  4228.,  4746.,  5264.,  3099.,  3538.,  3977.,  4416.,  3704.,  4224.,  4744.,  5264.,  4203.,  4810.,  5417.,  6024.,  4848.,  5536.,  6224.,  6912.,  5295.,  6074.,  6853.,  7632.,  6032.,  6896.,  7760.,  8624.,  6443.,  7386.,  8329.,  9272.,  6733.,  7690.,  8647.,  9604.,  6559.,  7514.,  8469.,  9424.,  6316.,  7176.,  8036.,  8896.,  5359.,  6130.,  6901.,  7672.,  4816.,  5504.,  6192.,  6880.,  4023.,  4618.,  5213.,  5808.,  3676.,  4184.,  4692.,  5200.,  3821.,  4382.,  4943.,  5504.,  4797.,  5450.,  6103.,  6756.,  5204.,  5944.,  6684.,  7424.,  5846.,  6684.,  7522.,  8360.,  6327.,  7258.,  8189.,  9120.,  7307.,  8326.,  9345., 10364.,  7076.,  8104.,  9132., 10160.,  7149.,  8170.,  9191., 10212.,  6337.,  7262.,  8187.,  9112.,  6082.,  6916.,  7750.,  8584.,  5212.,  5960.,  6708.,  7456.,  4587.,  5238.,  5889.,  6540.,  3835.,  4394.,  4953.,  5512.,  3947.,  4518.,  5089.,  5660.,  4526.,  5188.,  5850.,  6512.,  5356.,  6104.,  6852.,  7600.,  5817.,  6662.,  7507.,  8352.,  6681.,  7618.,  8555.,  9492.,  7072.,  8096.,  9120., 10144.,  7289.,  8322.,  9355., 10388.,  6978.,  8004.,  9030., 10056.,  6667.,  7598.,  8529.,  9460.,  5837.,  6678.,  7519.,  8360.,  5348.,  6088.,  6828.,  7568.,  4364.,  5008.,  5652.,  6296.,  3921.,  4474.,  5027.,  5580.,  3328.,  3824.,  4320.,  4816.,  3899.,  4470.,  5041.,  5612.,  4496.,  5152.,  5808.,  6464.,  5367.,  6118.,  6869.,  7620.,  5752.,  6592.,  7432.,  8272.,  6443.,  7366.,  8289.,  9212.,  6341.,  7278.,  8215.,  9152.,  6607.,  7542.,  8477.,  9412.,  5780.,  6632.,  7484.,  8336.,  5415.,  6190.,  6965.,  7740.,  4688.,  5376.,  6064.,  6752.,  4359.,  4966.,  5573.,  6180.,  3620.,  4152.,  4684.,  5216.,  3167.,  3606.,  4045.,  4484.,  3345.,  3846.,  4347.,  4848.,  3932.,  4504.,  5076.,  5648.,  4460.,  5112.,  5764.,  6416.,  5133.,  5858.,  6583.,  7308.,  5483.,  6290.,  7097.,  7904.,  5834.,  6660.,  7486.,  8312.,  5657.,  6486.,  7315.,  8144.,  5235.,  5990.,  6745.,  7500.,  4592.,  5280.,  5968.,  6656.,  4260.,  4872.,  5484.,  6096.,  3699.,  4242.,  4785.,  5328.,  3329.,  3810.,  4291.,  4772.,  2768.,  3168.,  3568.,  3968.,  3332.,  3784.,  4236.,  4688.,  3520.,  4032.,  4544.,  5056.,  4068.,  4648.,  5228.,  5808.,  4352.,  4992.,  5632.,  6272.,  4996.,  5704.,  6412.,  7120.,  4956.,  5672.,  6388.,  7104.,  5092.,  5800.,  6508.,  7216.,  4448.,  5088.,  5728.,  6368.,  4196.,  4776.,  5356.,  5936.,  3520.,  4032.,  4544.,  5056.,  3108.,  3560.,  4012.,  4464.,  2736.,  3136.,  3536.,  3936.,  2651.,  3030.,  3409.,  3788.,  2920.,  3344.,  3768.,  4192.,  3484.,  3960.,  4436.,  4912.,  3659.,  4194.,  4729.,  5264.,  4169.,  4754.,  5339.,  5924.,  4426.,  5068.,  5710.,  6352.,  4495.,  5134.,  5773.,  6412.,  4164.,  4784.,  5404.,  6024.,  3987.,  4542.,  5097.,  5652.,  3551.,  4050.,  4549.,  5048.,  3252.,  3688.,  4124.,  4560.,  2558.,  2940.,  3322.,  3704.,  2361.,  2698.,  3035.,  3372.,  2168.,  2496.,  2824.,  3152.,  2449.,  2818.,  3187.,  3556.,  2912.,  3328.,  3744.,  4160.,  3437.,  3906.,  4375.,  4844.,  3472.,  3984.,  4496.,  5008.,  3905.,  4466.,  5027.,  5588.,  3783.,  4346.,  4909.,  5472.,  3901.,  4450.,  4999.,  5548.,  3332.,  3832.,  4332.,  4832.,  3149.,  3594.,  4039.,  4484.,  2656.,  3040.,  3424.,  3808.,  2405.,  2738.,  3071.,  3404.,  1956.,  2248.,  2540.,  2832.,  2160.,  2480.,  2800.,  3120.,  2577.,  2958.,  3339.,  3720.,  3184.,  3616.,  4048.,  4480.,  3253.,  3726.,  4199.,  4672.,  3640.,  4160.,  4680.,  5200.,  3937.,  4510.,  5083.,  5656.,  4063.,  4622.,  5181.,  5740.,  3949.,  4510.,  5071.,  5632.,  3676.,  4184.,  4692.,  5200.,  3173.,  3622.,  4071.,  4520.,  2992.,  3392.,  3792.,  4192.,  2453.,  2798.,  3143.,  3488.,  2028.,  2312.,  2596.,  2880.,  2517.,  2894.,  3271.,  3648.,  3043.,  3494.,  3945.,  4396.,  3508.,  4024.,  4540.,  5056.,  4076.,  4648.,  5220.,  5792.,  4335.,  4970.,  5605.,  6240.,  4881.,  5570.,  6259.,  6948.,  4550.,  5220.,  5890.,  6560.,  4619.,  5286.,  5953.,  6620.,  4113.,  4718.,  5323.,  5928.,  3800.,  4336.,  4872.,  5408.,  3276.,  3752.,  4228.,  4704.,  2937.,  3346.,  3755.,  4164.,  2315.,  2650.,  2985.,  3320.,  2976.,  3392.,  3808.,  4224.,  3460.,  3960.,  4460.,  4960.,  3968.,  4544.,  5120.,  5696.,  4340.,  4984.,  5628.,  6272.,  5072.,  5792.,  6512.,  7232.,  5412.,  6200.,  6988.,  7776.,  5548.,  6328.,  7108.,  7888.,  5380.,  6168.,  6956.,  7744.,  5104.,  5824.,  6544.,  7264.,  4404.,  5048.,  5692.,  6336.,  3968.,  4544.,  5120.,  5696.,  3364.,  3864.,  4364.,  4864.,  3008.,  3424.,  3840.,  4256.,  3049.,  3486.,  3923.,  4360.,  3824.,  4352.,  4880.,  5408.,  4212.,  4824.,  5436.,  6048.,  4817.,  5506.,  6195.,  6884.,  5315.,  6090.,  6865.,  7640.,  6038.,  6892.,  7746.,  8600.,  5869.,  6726.,  7583.,  8440.,  6228.,  7104.,  7980.,  8856.,  5649.,  6454.,  7259.,  8064.,  5213.,  5938.,  6663.,  7388.,  4476.,  5128.,  5780.,  6432.,  3970.,  4540.,  5110.,  5680.,  3347.,  3826.,  4305.,  4784.,  3352.,  3840.,  4328.,  4816.,  4035.,  4618.,  5201.,  5784.,  4960.,  5632.,  6304.,  6976.,  5191.,  5946.,  6701.,  7456.,  5952.,  6800.,  7648.,  8496.,  6419.,  7354.,  8289.,  9224.,  6693.,  7626.,  8559.,  9492.,  6599.,  7546.,  8493.,  9440.,  6188.,  7048.,  7908.,  8768.,  5479.,  6258.,  7037.,  7816.,  5088.,  5792.,  6496.,  7200.,  4287.,  4906.,  5525.,  6144.,  3756.,  4280.,  4804.,  5328.,  3813.,  4382.,  4951.,  5520.,  4649.,  5314.,  5979.,  6644.,  5220.,  5976.,  6732.,  7488.,  5994.,  6836.,  7678.,  8520.,  6415.,  7354.,  8293.,  9232.,  7383.,  8414.,  9445., 10476.,  7072.,  8096.,  9120., 10144.,  7289.,  8322.,  9355., 10388.,  6393.,  7326.,  8259.,  9192.,  6006.,  6844.,  7682.,  8520.,  5212.,  5960.,  6708.,  7456.,  4615.,  5262.,  5909.,  6556.,  3779.,  4330.,  4881.,  5432.,  3923.,  4486.,  5049.,  5612.,  4426.,  5084.,  5742.,  6400.,  5228.,  5976.,  6724.,  7472.,  5773.,  6622.,  7471.,  8320.,  6769.,  7714.,  8659.,  9604.,  7084.,  8120.,  9156., 10192.,  7157.,  8186.,  9215., 10244.,  7054.,  8092.,  9130., 10168.,  6723.,  7662.,  8601.,  9540.,  5825.,  6670.,  7515.,  8360.,  5236.,  5992.,  6748.,  7504.,  4472.,  5128.,  5784.,  6440.,  4137.,  4698.,  5259.,  5820.,  3472.,  3984.,  4496.,  5008.,  4195.,  4790.,  5385.,  5980.,  4512.,  5184.,  5856.,  6528.,  5263.,  6022.,  6781.,  7540.,  5688.,  6528.,  7368.,  8208.,  6515.,  7430.,  8345.,  9260.,  6205.,  7118.,  8031.,  8944.,  6487.,  7414.,  8341.,  9268.,  5700.,  6536.,  7372.,  8208.,  5279.,  6030.,  6781.,  7532.,  4544.,  5216.,  5888.,  6560.,  3967.,  4550.,  5133.,  5716.,  3396.,  3896.,  4396.,  4896.,  3447.,  3926.,  4405.,  4884.,  3765.,  4318.,  4871.,  5424.,  4492.,  5112.,  5732.,  6352.,  4792.,  5488.,  6184.,  6880.,  5381.,  6146.,  6911.,  7676.,  5583.,  6410.,  7237.,  8064.,  5774.,  6588.,  7402.,  8216.,  5597.,  6414.,  7231.,  8048.,  5195.,  5926.,  6657.,  7388.,  4492.,  5144.,  5796.,  6448.,  4164.,  4744.,  5324.,  5904.,  3319.,  3818.,  4317.,  4816.,  2841.,  3266.,  3691.,  4116.,  3072.,  3520.,  3968.,  4416.,  3780.,  4296.,  4812.,  5328.,  4096.,  4672.,  5248.,  5824.,  4644.,  5288.,  5932.,  6576.,  4800.,  5504.,  6208.,  6912.,  5428.,  6184.,  6940.,  7696.,  5180.,  5928.,  6676.,  7424.,  5316.,  6056.,  6796.,  7536.,  4464.,  5120.,  5776.,  6432.,  4196.,  4776.,  5356.,  5936.,  3648.,  4160.,  4672.,  5184.,  3220.,  3656.,  4092.,  4528.,  2512.,  2880.,  3248.,  3616.,  2643.,  3030.,  3417.,  3804.,  3012.,  3464.,  3916.,  4368.,  3580.,  4088.,  4596.,  5104.,  3935.,  4506.,  5077.,  5648.,  4481.,  5106.,  5731.,  6356.,  4550.,  5220.,  5890.,  6560.,  4619.,  5286.,  5953.,  6620.,  4496.,  5160.,  5824.,  6488.,  4267.,  4862.,  5457.,  6052.,  3667.,  4202.,  4737.,  5272.,  3348.,  3816.,  4284.,  4752.,  2698.,  3092.,  3486.,  3880.,  2433.,  2762.,  3091.,  3420.,  2088.,  2400.,  2712.,  3024.,  2425.,  2786.,  3147.,  3508.,  2784.,  3200.,  3616.,  4032.,  3365.,  3842.,  4319.,  4796.,  3616.,  4144.,  4672.,  5200.,  3961.,  4530.,  5099.,  5668.,  3839.,  4410.,  4981.,  5552.,  3973.,  4546.,  5119.,  5692.,  3476.,  3992.,  4508.,  5024.,  3221.,  3690.,  4159.,  4628.,  2752.,  3168.,  3584.,  4000.,  2477.,  2834.,  3191.,  3548.,  2100.,  2408.,  2716.,  3024.};
  const std::array<int, 4> in_shape = {{ 3, 12, 13, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x13x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 7183.,  8206.,  9229., 10252.,  7080.,  8112.,  9144., 10176.,  7281.,  8306.,  9331., 10356.,  7076.,  8104.,  9132., 10160.,  7149.,  8170.,  9191., 10212.,  6838.,  7852.,  8866.,  9880.,  7307.,  8326.,  9345., 10364.,  7076.,  8104.,  9132., 10160.,  7149.,  8170.,  9191., 10212.,  7072.,  8096.,  9120., 10144.,  7289.,  8322.,  9355., 10388.,  6978.,  8004.,  9030., 10056.,  7383.,  8414.,  9445., 10476.,  7072.,  8096.,  9120., 10144.,  7289.,  8322.,  9355., 10388.,  7084.,  8120.,  9156., 10192.,  7157.,  8186.,  9215., 10244.,  7054.,  8092.,  9130., 10168.};
  const std::array<int, 4> in_shape = {{ 3, 12, 13, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x13x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 5020.,  6046.,  7312.,  7922.,  8852.,  9270.,  9466.,  9278.,  8708.,  7866.,  7312.,  5830.,  5036.,  6298.,  7353.,  7880.,  8847.,  9686., 11365., 10979., 11361.,  9902.,  9235.,  7880.,  6869.,  5906.,  6800.,  7816.,  9408., 10488., 12016., 12904., 13064., 12520., 11760., 10360.,  9408.,  7944.,  7056.,  7870.,  9363., 10424., 11957., 12514., 14087., 13825., 14459., 13210., 12081., 10424.,  9335.,  7350.,  8660.,  9746., 11504., 12462., 14364., 15802., 16598., 15858., 14556., 12502., 11504., 10106.,  8900.,  8866., 11181., 12712., 14731., 16030., 17945., 17407., 17445., 15910., 14751., 12712., 11049.,  8986., 10230., 11299., 12616., 13581., 16090., 17175., 17421., 17139., 16194., 14081., 12616., 10687.,  9694.,  8076., 10294., 11696., 13738., 14436., 15678., 14986., 15494., 13828., 13218., 11696., 10382.,  8748.,  7738.,  8757., 10392., 11547., 12998., 13889., 14651., 14309., 13198., 11527., 10392.,  8537.,  7298.,  7120.,  8360.,  9152., 10456., 11184., 12808., 12392., 12808., 11184., 10456.,  9152.,  8360.,  7120.,  5758.,  6823.,  8424.,  9177., 10290., 10683., 10457., 10471., 10250.,  9309.,  8424.,  6995.,  6102.,  5220.,  5930.,  6608.,  7558.,  8268.,  9714.,  9238.,  9770.,  8684.,  7822.,  6608.,  5778.,  4868.,  5468.,  6142.,  6800.,  7314.,  8580.,  9542., 10122.,  9566.,  8900.,  7450.,  6800.,  5974.,  5468.,  5866.,  7249.,  8136.,  9495., 10486., 11773., 11499., 11369., 10302.,  9547.,  8136.,  7149.,  5922.,  7312.,  8328.,  9408.,  9976., 11504., 12392., 12808., 12520., 11760., 10360.,  9408.,  7944.,  7056.,  7758.,  9163., 10168., 11725., 13042., 14831., 14569., 15155., 12922., 11609., 10168.,  9263.,  7942.,  8644., 10018., 12016., 13134., 14940., 15770., 16358., 16002., 14988., 13110., 12016., 10010.,  8708.,  9794., 11717., 12456., 13891., 15342., 17841., 17175., 17421., 15430., 14375., 12456., 11137.,  9530.,  9430., 11003., 13128., 14421., 16570., 17407., 17445., 17035., 16466., 14457., 13128., 10967.,  9534.,  8780., 10134., 11184., 12874., 14100., 16142., 15834., 16550., 14532., 13058., 11184.,  9950.,  8348.,  8010.,  9133., 10904., 11715., 13030., 13753., 14051., 13709., 12766., 11295., 10904.,  9553.,  8274.,  6608.,  8104.,  9152., 10712., 11696., 13064., 12904., 13064., 11696., 10712.,  9152.,  8104.,  6608.,  6350.,  7103.,  7912.,  8657., 10242., 11075., 11361., 10879., 10218.,  8869.,  7912.,  6891.,  6374.,  5140.,  6394.,  7120.,  8230.,  8588.,  9170.,  8934.,  9338.,  8540.,  8174.,  7120.,  6450.,  5188.,  5020.,  6046.,  7312.,  7922.,  8852.,  9270.,  9466.,  9278.,  8708.,  7866.,  7312.,  5830.,  5036.,  6298.,  7353.,  7880.,  8847.,  9686., 11365., 10979., 11361.,  9902.,  9235.,  7880.,  6869.,  5906.,  6800.,  7816.,  9408., 10488., 12016., 12904., 13064., 12520., 11760., 10360.,  9408.,  7944.,  7056.,  7870.,  9363., 10424., 11957., 12514., 14087., 13825., 14459., 13210., 12081., 10424.,  9335.,  7350.,  8660.,  9746., 11504., 12462., 14364., 15802., 16598., 15858., 14556., 12502., 11504., 10106.,  8900.,  8866., 11181., 12712., 14731., 16030., 17945., 17407., 17445., 15910., 14751., 12712., 11049.,  8986., 10230., 11299., 12616., 13581., 16090., 17175., 17421., 17139., 16194., 14081., 12616., 10687.,  9694.,  8076., 10294., 11696., 13738., 14436., 15678., 14986., 15494., 13828., 13218., 11696., 10382.,  8748.,  7738.,  8757., 10392., 11547., 12998., 13889., 14651., 14309., 13198., 11527., 10392.,  8537.,  7298.,  7120.,  8360.,  9152., 10456., 11184., 12808., 12392., 12808., 11184., 10456.,  9152.,  8360.,  7120.,  5758.,  6823.,  8424.,  9177., 10290., 10683., 10457., 10471., 10250.,  9309.,  8424.,  6995.,  6102.,  5220.,  5930.,  6608.,  7558.,  8268.,  9714.,  9238.,  9770.,  8684.,  7822.,  6608.,  5778.,  4868.};
  const std::array<int, 4> in_shape = {{ 3, 12, 13, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x13x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17945., 17407., 17445., 17175., 17421., 17139., 17841., 17175., 17421., 17407., 17445., 17035., 17945., 17407., 17445., 17175., 17421., 17139.};
  const std::array<int, 4> in_shape = {{ 3, 12, 13, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x13x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4812.,  5416.,  5394.,  6108.,  6768.,  7584.,  7046.,  7956.,  8036.,  9032.,  8554.,  9660.,  9386., 10500.,  8938., 10060.,  8628.,  9640.,  7190.,  8100.,  6768.,  7584.,  5522.,  6220.,  4892.,  5480.,  5402.,  6100.,  6919.,  7746.,  7448.,  8400.,  8685.,  9758.,  9158., 10348., 10803., 12106., 10043., 11334., 10307., 11586.,  9102., 10268.,  8965., 10022.,  7448.,  8400.,  6647.,  7466.,  5378.,  6068.,  6768.,  7584.,  7576.,  8528.,  9024., 10112.,  9448., 10672., 11280., 12640., 11832., 13328., 12408., 13904., 11576., 13072., 11280., 12640.,  9704., 10928.,  9024., 10112.,  7320.,  8272.,  6768.,  7584.,  6974.,  7868.,  8709.,  9766.,  9576., 10800., 11415., 12778., 11762., 13268., 13561., 15214., 12897., 14562., 14025., 15702., 12122., 13652., 11343., 12722.,  9576., 10800.,  9013., 10078.,  7238.,  8140.,  8036.,  9032.,  9022., 10196., 11280., 12640., 11898., 13420., 13964., 15656., 14502., 16372., 15590., 17452., 14630., 16484., 13916., 15592., 11914., 13436., 11280., 12640.,  9406., 10596.,  8500.,  9512.,  8626.,  9748., 10739., 12042., 11704., 13200., 13601., 15270., 14318., 16172., 17007., 19058., 16183., 18238., 17023., 19082., 14646., 16508., 14073., 15758., 11704., 13200., 10531., 11826.,  8666.,  9780.,  9490., 10620., 10267., 11574., 12280., 13776., 13001., 14698., 15758., 17636., 16215., 18286., 16479., 18522., 15655., 17702., 15542., 17396., 13441., 15122., 12280., 13776.,  9931., 11230.,  9562., 10684.,  7844.,  8872.,  9782., 10972., 10640., 12000., 12706., 14244., 13068., 14760., 15454., 17308., 14206., 16052., 15326., 17196., 13164., 14872., 12674., 14212., 10640., 12000.,  9526., 10700.,  7812.,  8824.,  7390.,  8292.,  8005.,  9066., 10280., 11504., 11079., 12470., 12498., 14028., 12793., 14466., 13825., 15478., 13129., 14794., 12394., 13916., 10543., 11918., 10280., 11504.,  8373.,  9442.,  7254.,  8164.,  6384.,  7200.,  7896.,  8848.,  8512.,  9600., 10152., 11376., 10640., 12000., 12408., 13904., 11832., 13328., 12408., 13904., 10640., 12000., 10152., 11376.,  8512.,  9600.,  7896.,  8848.,  6384.,  7200.,  5882.,  6588.,  6543.,  7374.,  7768.,  8720.,  8117.,  9186.,  9766., 10948., 10043., 11334., 10307., 11586.,  9995., 11294., 10062., 11252.,  8621.,  9706.,  7768.,  8720.,  6271.,  7094.,  5890.,  6588.,  4556.,  5160.,  5738.,  6436.,  6384.,  7200.,  7758.,  8684.,  7972.,  9000.,  9218., 10340.,  8290.,  9388.,  8834.,  9940.,  7812.,  8824.,  7726.,  8652.,  6384.,  7200.,  5738.,  6452.,  4780.,  5400.,  4940.,  5544.,  5586.,  6300.,  6768.,  7584.,  7110.,  8020.,  8484.,  9512.,  8810.,  9948.,  9386., 10532.,  8746.,  9868.,  8500.,  9512.,  7126.,  8036.,  6768.,  7584.,  5778.,  6508.,  5468.,  6088.,  5530.,  6260.,  6951.,  7794.,  7448.,  8400.,  8461.,  9518.,  9222., 10412., 11091., 12410., 10523., 11862., 10787., 12114.,  9358., 10556.,  9061., 10134.,  7448.,  8400.,  6679.,  7514.,  5634.,  6356.,  6768.,  7584.,  7576.,  8528.,  9024., 10112.,  9448., 10672., 11280., 12640., 11832., 13328., 12408., 13904., 11576., 13072., 11280., 12640.,  9704., 10928.,  9024., 10112.,  7320.,  8272.,  6768.,  7584.,  7230.,  8156.,  8805.,  9878.,  9576., 10800., 11447., 12826., 12018., 13556., 13977., 15678., 13313., 15026., 14377., 16070., 12058., 13588., 11183., 12546.,  9576., 10800.,  9109., 10190.,  7366.,  8300.,  8484.,  9512.,  9278., 10484., 11280., 12640., 11962., 13484., 13836., 15528., 14438., 16308., 15590., 17484., 14886., 16772., 14492., 16200., 11850., 13372., 11280., 12640.,  9470., 10660.,  8628.,  9640.,  8690.,  9812., 11027., 12346., 11704., 13200., 13697., 15382., 14702., 16588., 17295., 19362., 16215., 18286., 16479., 18522., 14454., 16316., 14105., 15774., 11704., 13200., 10691., 12002.,  8730.,  9844.,  9170., 10300., 10427., 11750., 12280., 13776., 12905., 14586., 15438., 17316., 16183., 18238., 17023., 19082., 15943., 18006., 15798., 17684., 13409., 15106., 12280., 13776.,  9963., 11278.,  9242., 10364.,  7972.,  9000.,  9718., 10908., 10640., 12000., 12770., 14308., 13388., 15112., 15326., 17212., 14334., 16212., 15390., 17260., 13292., 15000., 12866., 14404., 10640., 12000.,  9910., 11116.,  8004.,  9048.,  7646.,  8580.,  8229.,  9306., 10280., 11504., 10919., 12294., 12562., 14092., 13017., 14706., 14113., 15814., 13417., 15130., 12522., 14076., 10575., 11966., 10280., 11504.,  8597.,  9682.,  7638.,  8580.,  6384.,  7200.,  7896.,  8848.,  8512.,  9600., 10152., 11376., 10640., 12000., 12408., 13904., 11832., 13328., 12408., 13904., 10640., 12000., 10152., 11376.,  8512.,  9600.,  7896.,  8848.,  6384.,  7200.,  6010.,  6748.,  6575.,  7422.,  7768.,  8720.,  8341.,  9426., 10150., 11364., 10523., 11862., 10787., 12114., 10027., 11342.,  9998., 11188.,  8525.,  9594.,  7768.,  8720.,  6303.,  7142.,  6146.,  6876.,  4876.,  5512.,  5866.,  6596.,  6384.,  7200.,  7566.,  8492.,  7844.,  8872.,  9154., 10276.,  8674.,  9804.,  9474., 10612.,  8004.,  9048.,  7662.,  8588.,  6384.,  7200.,  5802.,  6516.,  4652.,  5272.,  4812.,  5416.,  5394.,  6108.,  6768.,  7584.,  7046.,  7956.,  8036.,  9032.,  8554.,  9660.,  9386., 10500.,  8938., 10060.,  8628.,  9640.,  7190.,  8100.,  6768.,  7584.,  5522.,  6220.,  4892.,  5480.,  5402.,  6100.,  6919.,  7746.,  7448.,  8400.,  8685.,  9758.,  9158., 10348., 10803., 12106., 10043., 11334., 10307., 11586.,  9102., 10268.,  8965., 10022.,  7448.,  8400.,  6647.,  7466.,  5378.,  6068.,  6768.,  7584.,  7576.,  8528.,  9024., 10112.,  9448., 10672., 11280., 12640., 11832., 13328., 12408., 13904., 11576., 13072., 11280., 12640.,  9704., 10928.,  9024., 10112.,  7320.,  8272.,  6768.,  7584.,  6974.,  7868.,  8709.,  9766.,  9576., 10800., 11415., 12778., 11762., 13268., 13561., 15214., 12897., 14562., 14025., 15702., 12122., 13652., 11343., 12722.,  9576., 10800.,  9013., 10078.,  7238.,  8140.,  8036.,  9032.,  9022., 10196., 11280., 12640., 11898., 13420., 13964., 15656., 14502., 16372., 15590., 17452., 14630., 16484., 13916., 15592., 11914., 13436., 11280., 12640.,  9406., 10596.,  8500.,  9512.,  8626.,  9748., 10739., 12042., 11704., 13200., 13601., 15270., 14318., 16172., 17007., 19058., 16183., 18238., 17023., 19082., 14646., 16508., 14073., 15758., 11704., 13200., 10531., 11826.,  8666.,  9780.,  9490., 10620., 10267., 11574., 12280., 13776., 13001., 14698., 15758., 17636., 16215., 18286., 16479., 18522., 15655., 17702., 15542., 17396., 13441., 15122., 12280., 13776.,  9931., 11230.,  9562., 10684.,  7844.,  8872.,  9782., 10972., 10640., 12000., 12706., 14244., 13068., 14760., 15454., 17308., 14206., 16052., 15326., 17196., 13164., 14872., 12674., 14212., 10640., 12000.,  9526., 10700.,  7812.,  8824.,  7390.,  8292.,  8005.,  9066., 10280., 11504., 11079., 12470., 12498., 14028., 12793., 14466., 13825., 15478., 13129., 14794., 12394., 13916., 10543., 11918., 10280., 11504.,  8373.,  9442.,  7254.,  8164.,  6384.,  7200.,  7896.,  8848.,  8512.,  9600., 10152., 11376., 10640., 12000., 12408., 13904., 11832., 13328., 12408., 13904., 10640., 12000., 10152., 11376.,  8512.,  9600.,  7896.,  8848.,  6384.,  7200.,  5882.,  6588.,  6543.,  7374.,  7768.,  8720.,  8117.,  9186.,  9766., 10948., 10043., 11334., 10307., 11586.,  9995., 11294., 10062., 11252.,  8621.,  9706.,  7768.,  8720.,  6271.,  7094.,  5890.,  6588.,  4556.,  5160.,  5738.,  6436.,  6384.,  7200.,  7758.,  8684.,  7972.,  9000.,  9218., 10340.,  8290.,  9388.,  8834.,  9940.,  7812.,  8824.,  7726.,  8652.,  6384.,  7200.,  5738.,  6452.,  4780.,  5400.};
  const std::array<int, 4> in_shape = {{ 3, 12, 13, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x13x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17007., 19058., 16183., 18238., 17023., 19082., 16215., 18286., 16479., 18522., 15655., 17702., 17295., 19362., 16215., 18286., 16479., 18522., 16183., 18238., 17023., 19082., 15943., 18006., 17007., 19058., 16183., 18238., 17023., 19082., 16215., 18286., 16479., 18522., 15655., 17702.};
  const std::array<int, 4> in_shape = {{ 3, 12, 13, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x13x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4556.,  5160.,  5764.,  6368.,  4714.,  5428.,  6142.,  6856.,  6192.,  7008.,  7824.,  8640.,  5982.,  6892.,  7802.,  8712.,  7604.,  8600.,  9596., 10592.,  7378.,  8484.,  9590., 10696.,  8458.,  9572., 10686., 11800.,  7490.,  8612.,  9734., 10856.,  7716.,  8728.,  9740., 10752.,  6110.,  7020.,  7930.,  8840.,  6192.,  7008.,  7824.,  8640.,  4602.,  5300.,  5998.,  6696.,  4444.,  5032.,  5620.,  6208.,  4666.,  5364.,  6062.,  6760.,  6227.,  7054.,  7881.,  8708.,  6328.,  7280.,  8232.,  9184.,  8089.,  9162., 10235., 11308.,  7878.,  9068., 10258., 11448.,  9839., 11142., 12445., 13748.,  8459.,  9750., 11041., 12332.,  9639., 10918., 12197., 13476.,  7742.,  8908., 10074., 11240.,  7913.,  8970., 10027., 11084.,  6328.,  7280.,  8232.,  9184.,  6203.,  7022.,  7841.,  8660.,  4578.,  5268.,  5958.,  6648.,  6192.,  7008.,  7824.,  8640.,  6328.,  7280.,  8232.,  9184.,  8256.,  9344., 10432., 11520.,  8136.,  9360., 10584., 11808., 10320., 11680., 13040., 14400.,  9944., 11440., 12936., 14432., 11352., 12848., 14344., 15840.,  9944., 11440., 12936., 14432., 10320., 11680., 13040., 14400.,  8136.,  9360., 10584., 11808.,  8256.,  9344., 10432., 11520.,  6328.,  7280.,  8232.,  9184.,  6192.,  7008.,  7824.,  8640.,  5934.,  6828.,  7722.,  8616.,  7913.,  8970., 10027., 11084.,  8136.,  9360., 10584., 11808., 10331., 11694., 13057., 14420., 10002., 11508., 13014., 14520., 12509., 14162., 15815., 17468., 11041., 12706., 14371., 16036., 12645., 14322., 15999., 17676., 10202., 11732., 13262., 14792., 10379., 11758., 13137., 14516.,  8136.,  9360., 10584., 11808.,  8001.,  9066., 10131., 11196.,  5958.,  6860.,  7762.,  8664.,  7604.,  8600.,  9596., 10592.,  7830.,  9004., 10178., 11352., 10320., 11680., 13040., 14400., 10050., 11572., 13094., 14616., 12812., 14504., 16196., 17888., 12398., 14268., 16138., 18008., 14134., 15996., 17858., 19720., 12286., 14140., 15994., 17848., 12700., 14376., 16052., 17728., 10178., 11700., 13222., 14744., 10320., 11680., 13040., 14400.,  7942.,  9132., 10322., 11512.,  7716.,  8728.,  9740., 10752.,  7426.,  8548.,  9670., 10792.,  9839., 11142., 12445., 13748.,  9944., 11440., 12936., 14432., 12685., 14354., 16023., 17692., 12350., 14204., 16058., 17912., 15515., 17566., 19617., 21668., 13607., 15662., 17717., 19772., 15539., 17598., 19657., 21716., 12438., 14300., 16162., 18024., 12605., 14290., 15975., 17660.,  9944., 11440., 12936., 14432.,  9687., 10982., 12277., 13572.,  7466.,  8580.,  9694., 10808.,  8634.,  9764., 10894., 12024.,  8507.,  9814., 11121., 12428., 11352., 12848., 14344., 15840., 11137., 12834., 14531., 16228., 14310., 16188., 18066., 19944., 13655., 15726., 17797., 19868., 15491., 17534., 19577., 21620., 13583., 15630., 17677., 19724., 14046., 15900., 17754., 19608., 11217., 12898., 14579., 16260., 11352., 12848., 14344., 15840.,  8611.,  9910., 11209., 12508.,  8418.,  9540., 10662., 11784.,  6804.,  7832.,  8860.,  9888.,  9126., 10316., 11506., 12696.,  9040., 10400., 11760., 13120., 11730., 13268., 14806., 16344., 11148., 12840., 14532., 16224., 14110., 15964., 17818., 19672., 12262., 14108., 15954., 17800., 14094., 15964., 17834., 19704., 11388., 13096., 14804., 16512., 11602., 13140., 14678., 16216.,  9040., 10400., 11760., 13120.,  8886., 10060., 11234., 12408.,  6820.,  7832.,  8844.,  9856.,  6886.,  7788.,  8690.,  9592.,  6933.,  7994.,  9055., 10116.,  9288., 10512., 11736., 12960.,  9135., 10526., 11917., 13308., 11706., 13236., 14766., 16296., 11001., 12674., 14347., 16020., 12509., 14162., 15815., 17468., 11041., 12706., 14371., 16036., 11554., 13076., 14598., 16120.,  9087., 10462., 11837., 13212.,  9288., 10512., 11736., 12960.,  7021.,  8090.,  9159., 10228.,  6910.,  7820.,  8730.,  9640.,  5424.,  6240.,  7056.,  7872.,  7224.,  8176.,  9128., 10080.,  7232.,  8320.,  9408., 10496.,  9288., 10512., 11736., 12960.,  9040., 10400., 11760., 13120., 11352., 12848., 14344., 15840.,  9944., 11440., 12936., 14432., 11352., 12848., 14344., 15840.,  9040., 10400., 11760., 13120.,  9288., 10512., 11736., 12960.,  7232.,  8320.,  9408., 10496.,  7224.,  8176.,  9128., 10080.,  5424.,  6240.,  7056.,  7872.,  5362.,  6068.,  6774.,  7480.,  5471.,  6302.,  7133.,  7964.,  7224.,  8176.,  9128., 10080.,  7021.,  8090.,  9159., 10228.,  8974., 10156., 11338., 12520.,  8459.,  9750., 11041., 12332.,  9639., 10918., 12197., 13476.,  8611.,  9910., 11209., 12508.,  8934., 10124., 11314., 12504.,  7197.,  8282.,  9367., 10452.,  7224.,  8176.,  9128., 10080.,  5447.,  6270.,  7093.,  7916.,  5274.,  5972.,  6670.,  7368.,  3916.,  4520.,  5124.,  5728.,  5338.,  6036.,  6734.,  7432.,  5424.,  6240.,  7056.,  7872.,  7086.,  8012.,  8938.,  9864.,  6804.,  7832.,  8860.,  9888.,  8610.,  9732., 10854., 11976.,  7290.,  8388.,  9486., 10584.,  8370.,  9476., 10582., 11688.,  6820.,  7832.,  8844.,  9856.,  6958.,  7884.,  8810.,  9736.,  5424.,  6240.,  7056.,  7872.,  5322.,  6036.,  6750.,  7464.,  4156.,  4776.,  5396.,  6016.,  4556.,  5160.,  5764.,  6368.,  4842.,  5556.,  6270.,  6984.,  6192.,  7008.,  7824.,  8640.,  6110.,  7020.,  7930.,  8840.,  7700.,  8728.,  9756., 10784.,  7602.,  8740.,  9878., 11016.,  8682.,  9828., 10974., 12120.,  7362.,  8484.,  9606., 10728.,  7716.,  8728.,  9740., 10752.,  5982.,  6892.,  7802.,  8712.,  6192.,  7008.,  7824.,  8640.,  4826.,  5556.,  6286.,  7016.,  4796.,  5416.,  6036.,  6656.,  4890.,  5620.,  6350.,  7080.,  6275.,  7118.,  7961.,  8804.,  6328.,  7280.,  8232.,  9184.,  7913.,  8970., 10027., 11084.,  8006.,  9196., 10386., 11576.,  9887., 11206., 12525., 13844.,  8859., 10198., 11537., 12876., 10039., 11366., 12693., 14020.,  7966.,  9164., 10362., 11560.,  8089.,  9162., 10235., 11308.,  6328.,  7280.,  8232.,  9184.,  6251.,  7086.,  7921.,  8756.,  4802.,  5524.,  6246.,  6968.,  6192.,  7008.,  7824.,  8640.,  6328.,  7280.,  8232.,  9184.,  8256.,  9344., 10432., 11520.,  8136.,  9360., 10584., 11808., 10320., 11680., 13040., 14400.,  9944., 11440., 12936., 14432., 11352., 12848., 14344., 15840.,  9944., 11440., 12936., 14432., 10320., 11680., 13040., 14400.,  8136.,  9360., 10584., 11808.,  8256.,  9344., 10432., 11520.,  6328.,  7280.,  8232.,  9184.,  6192.,  7008.,  7824.,  8640.,  6158.,  7084.,  8010.,  8936.,  8089.,  9162., 10235., 11308.,  8136.,  9360., 10584., 11808., 10379., 11758., 13137., 14516., 10226., 11764., 13302., 14840., 12781., 14482., 16183., 17884., 11313., 13026., 14739., 16452., 12821., 14514., 16207., 17900., 10074., 11604., 13134., 14664., 10331., 11694., 13057., 14420.,  8136.,  9360., 10584., 11808.,  8177.,  9258., 10339., 11420.,  6182.,  7116.,  8050.,  8984.,  7700.,  8728.,  9756., 10784.,  8054.,  9260., 10466., 11672., 10320., 11680., 13040., 14400., 10178., 11700., 13222., 14744., 12812., 14504., 16196., 17888., 12526., 14396., 16266., 18136., 14358., 16252., 18146., 20040., 12510., 14396., 16282., 18168., 13052., 14760., 16468., 18176., 10050., 11572., 13094., 14616., 10320., 11680., 13040., 14400.,  7814.,  9004., 10194., 11384.,  7716.,  8728.,  9740., 10752.,  7554.,  8676.,  9798., 10920.,  9887., 11206., 12525., 13844.,  9944., 11440., 12936., 14432., 12605., 14290., 15975., 17660., 12574., 14460., 16346., 18232., 15563., 17630., 19697., 21764., 13655., 15726., 17797., 19868., 15491., 17534., 19577., 21620., 12310., 14172., 16034., 17896., 12685., 14354., 16023., 17692.,  9944., 11440., 12936., 14432.,  9991., 11302., 12613., 13924.,  7338.,  8452.,  9566., 10680.,  8506.,  9636., 10766., 11896.,  8811., 10134., 11457., 12780., 11352., 12848., 14344., 15840., 11217., 12898., 14579., 16260., 14182., 16060., 17938., 19816., 13607., 15662., 17717., 19772., 15539., 17598., 19657., 21716., 13631., 15694., 17757., 19820., 14270., 16156., 18042., 19928., 11137., 12834., 14531., 16228., 11352., 12848., 14344., 15840.,  8659.,  9974., 11289., 12604.,  8546.,  9668., 10790., 11912.,  6804.,  7832.,  8860.,  9888.,  8998., 10188., 11378., 12568.,  9040., 10400., 11760., 13120., 11602., 13140., 14678., 16216., 11500., 13224., 14948., 16672., 14334., 16220., 18106., 19992., 12486., 14364., 16242., 18120., 14222., 16092., 17962., 19832., 11388., 13096., 14804., 16512., 11730., 13268., 14806., 16344.,  9040., 10400., 11760., 13120.,  9110., 10316., 11522., 12728.,  6916.,  7960.,  9004., 10048.,  7110.,  8044.,  8978.,  9912.,  7109.,  8186.,  9263., 10340.,  9288., 10512., 11736., 12960.,  9087., 10462., 11837., 13212., 11578., 13108., 14638., 16168., 11177., 12866., 14555., 16244., 12781., 14482., 16183., 17884., 11313., 13026., 14739., 16452., 11778., 13332., 14886., 16440.,  9135., 10526., 11917., 13308.,  9288., 10512., 11736., 12960.,  7197.,  8282.,  9367., 10452.,  7134.,  8076.,  9018.,  9960.,  5424.,  6240.,  7056.,  7872.,  7224.,  8176.,  9128., 10080.,  7232.,  8320.,  9408., 10496.,  9288., 10512., 11736., 12960.,  9040., 10400., 11760., 13120., 11352., 12848., 14344., 15840.,  9944., 11440., 12936., 14432., 11352., 12848., 14344., 15840.,  9040., 10400., 11760., 13120.,  9288., 10512., 11736., 12960.,  7232.,  8320.,  9408., 10496.,  7224.,  8176.,  9128., 10080.,  5424.,  6240.,  7056.,  7872.,  5586.,  6324.,  7062.,  7800.,  5519.,  6366.,  7213.,  8060.,  7224.,  8176.,  9128., 10080.,  7197.,  8282.,  9367., 10452.,  9198., 10412., 11626., 12840.,  8859., 10198., 11537., 12876., 10039., 11366., 12693., 14020.,  8659.,  9974., 11289., 12604.,  9062., 10252., 11442., 12632.,  7021.,  8090.,  9159., 10228.,  7224.,  8176.,  9128., 10080.,  5495.,  6334.,  7173.,  8012.,  5498.,  6228.,  6958.,  7688.,  4268.,  4904.,  5540.,  6176.,  5562.,  6292.,  7022.,  7752.,  5424.,  6240.,  7056.,  7872.,  6958.,  7884.,  8810.,  9736.,  6804.,  7832.,  8860.,  9888.,  8482.,  9604., 10726., 11848.,  7514.,  8644.,  9774., 10904.,  8594.,  9732., 10870., 12008.,  6916.,  7960.,  9004., 10048.,  7086.,  8012.,  8938.,  9864.,  5424.,  6240.,  7056.,  7872.,  5450.,  6164.,  6878.,  7592.,  4156.,  4776.,  5396.,  6016.,  4556.,  5160.,  5764.,  6368.,  4714.,  5428.,  6142.,  6856.,  6192.,  7008.,  7824.,  8640.,  5982.,  6892.,  7802.,  8712.,  7604.,  8600.,  9596., 10592.,  7378.,  8484.,  9590., 10696.,  8458.,  9572., 10686., 11800.,  7490.,  8612.,  9734., 10856.,  7716.,  8728.,  9740., 10752.,  6110.,  7020.,  7930.,  8840.,  6192.,  7008.,  7824.,  8640.,  4602.,  5300.,  5998.,  6696.,  4444.,  5032.,  5620.,  6208.,  4666.,  5364.,  6062.,  6760.,  6227.,  7054.,  7881.,  8708.,  6328.,  7280.,  8232.,  9184.,  8089.,  9162., 10235., 11308.,  7878.,  9068., 10258., 11448.,  9839., 11142., 12445., 13748.,  8459.,  9750., 11041., 12332.,  9639., 10918., 12197., 13476.,  7742.,  8908., 10074., 11240.,  7913.,  8970., 10027., 11084.,  6328.,  7280.,  8232.,  9184.,  6203.,  7022.,  7841.,  8660.,  4578.,  5268.,  5958.,  6648.,  6192.,  7008.,  7824.,  8640.,  6328.,  7280.,  8232.,  9184.,  8256.,  9344., 10432., 11520.,  8136.,  9360., 10584., 11808., 10320., 11680., 13040., 14400.,  9944., 11440., 12936., 14432., 11352., 12848., 14344., 15840.,  9944., 11440., 12936., 14432., 10320., 11680., 13040., 14400.,  8136.,  9360., 10584., 11808.,  8256.,  9344., 10432., 11520.,  6328.,  7280.,  8232.,  9184.,  6192.,  7008.,  7824.,  8640.,  5934.,  6828.,  7722.,  8616.,  7913.,  8970., 10027., 11084.,  8136.,  9360., 10584., 11808., 10331., 11694., 13057., 14420., 10002., 11508., 13014., 14520., 12509., 14162., 15815., 17468., 11041., 12706., 14371., 16036., 12645., 14322., 15999., 17676., 10202., 11732., 13262., 14792., 10379., 11758., 13137., 14516.,  8136.,  9360., 10584., 11808.,  8001.,  9066., 10131., 11196.,  5958.,  6860.,  7762.,  8664.,  7604.,  8600.,  9596., 10592.,  7830.,  9004., 10178., 11352., 10320., 11680., 13040., 14400., 10050., 11572., 13094., 14616., 12812., 14504., 16196., 17888., 12398., 14268., 16138., 18008., 14134., 15996., 17858., 19720., 12286., 14140., 15994., 17848., 12700., 14376., 16052., 17728., 10178., 11700., 13222., 14744., 10320., 11680., 13040., 14400.,  7942.,  9132., 10322., 11512.,  7716.,  8728.,  9740., 10752.,  7426.,  8548.,  9670., 10792.,  9839., 11142., 12445., 13748.,  9944., 11440., 12936., 14432., 12685., 14354., 16023., 17692., 12350., 14204., 16058., 17912., 15515., 17566., 19617., 21668., 13607., 15662., 17717., 19772., 15539., 17598., 19657., 21716., 12438., 14300., 16162., 18024., 12605., 14290., 15975., 17660.,  9944., 11440., 12936., 14432.,  9687., 10982., 12277., 13572.,  7466.,  8580.,  9694., 10808.,  8634.,  9764., 10894., 12024.,  8507.,  9814., 11121., 12428., 11352., 12848., 14344., 15840., 11137., 12834., 14531., 16228., 14310., 16188., 18066., 19944., 13655., 15726., 17797., 19868., 15491., 17534., 19577., 21620., 13583., 15630., 17677., 19724., 14046., 15900., 17754., 19608., 11217., 12898., 14579., 16260., 11352., 12848., 14344., 15840.,  8611.,  9910., 11209., 12508.,  8418.,  9540., 10662., 11784.,  6804.,  7832.,  8860.,  9888.,  9126., 10316., 11506., 12696.,  9040., 10400., 11760., 13120., 11730., 13268., 14806., 16344., 11148., 12840., 14532., 16224., 14110., 15964., 17818., 19672., 12262., 14108., 15954., 17800., 14094., 15964., 17834., 19704., 11388., 13096., 14804., 16512., 11602., 13140., 14678., 16216.,  9040., 10400., 11760., 13120.,  8886., 10060., 11234., 12408.,  6820.,  7832.,  8844.,  9856.,  6886.,  7788.,  8690.,  9592.,  6933.,  7994.,  9055., 10116.,  9288., 10512., 11736., 12960.,  9135., 10526., 11917., 13308., 11706., 13236., 14766., 16296., 11001., 12674., 14347., 16020., 12509., 14162., 15815., 17468., 11041., 12706., 14371., 16036., 11554., 13076., 14598., 16120.,  9087., 10462., 11837., 13212.,  9288., 10512., 11736., 12960.,  7021.,  8090.,  9159., 10228.,  6910.,  7820.,  8730.,  9640.,  5424.,  6240.,  7056.,  7872.,  7224.,  8176.,  9128., 10080.,  7232.,  8320.,  9408., 10496.,  9288., 10512., 11736., 12960.,  9040., 10400., 11760., 13120., 11352., 12848., 14344., 15840.,  9944., 11440., 12936., 14432., 11352., 12848., 14344., 15840.,  9040., 10400., 11760., 13120.,  9288., 10512., 11736., 12960.,  7232.,  8320.,  9408., 10496.,  7224.,  8176.,  9128., 10080.,  5424.,  6240.,  7056.,  7872.,  5362.,  6068.,  6774.,  7480.,  5471.,  6302.,  7133.,  7964.,  7224.,  8176.,  9128., 10080.,  7021.,  8090.,  9159., 10228.,  8974., 10156., 11338., 12520.,  8459.,  9750., 11041., 12332.,  9639., 10918., 12197., 13476.,  8611.,  9910., 11209., 12508.,  8934., 10124., 11314., 12504.,  7197.,  8282.,  9367., 10452.,  7224.,  8176.,  9128., 10080.,  5447.,  6270.,  7093.,  7916.,  5274.,  5972.,  6670.,  7368.,  3916.,  4520.,  5124.,  5728.,  5338.,  6036.,  6734.,  7432.,  5424.,  6240.,  7056.,  7872.,  7086.,  8012.,  8938.,  9864.,  6804.,  7832.,  8860.,  9888.,  8610.,  9732., 10854., 11976.,  7290.,  8388.,  9486., 10584.,  8370.,  9476., 10582., 11688.,  6820.,  7832.,  8844.,  9856.,  6958.,  7884.,  8810.,  9736.,  5424.,  6240.,  7056.,  7872.,  5322.,  6036.,  6750.,  7464.,  4156.,  4776.,  5396.,  6016.};
  const std::array<int, 4> in_shape = {{ 3, 12, 13, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x13x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {15515., 17566., 19617., 21668., 13607., 15662., 17717., 19772., 15539., 17598., 19657., 21716., 13655., 15726., 17797., 19868., 15491., 17534., 19577., 21620., 13583., 15630., 17677., 19724., 15563., 17630., 19697., 21764., 13655., 15726., 17797., 19868., 15491., 17534., 19577., 21620., 13607., 15662., 17717., 19772., 15539., 17598., 19657., 21716., 13631., 15694., 17757., 19820., 15515., 17566., 19617., 21668., 13607., 15662., 17717., 19772., 15539., 17598., 19657., 21716., 13655., 15726., 17797., 19868., 15491., 17534., 19577., 21620., 13583., 15630., 17677., 19724.};
  const std::array<int, 4> in_shape = {{ 3, 12, 13, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x13x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3672.,  2940.,  4896.,  3780.,  6120.,  4620.,  6732.,  4620.,  6120.,  3780.,  4896.,  2940.,  3672.,  2940.,  4926.,  3920.,  6354.,  4900.,  7782.,  5390.,  7782.,  4900.,  6354.,  3920.,  4926.,  2940.,  4896.,  3920.,  6528.,  5040.,  8160.,  6160.,  8976.,  6160.,  8160.,  5040.,  6528.,  3920.,  4896.,  3780.,  6354.,  5040.,  8190.,  6300., 10026.,  6930., 10026.,  6300.,  8190.,  5040.,  6354.,  3780.,  6120.,  4900.,  8160.,  6300., 10200.,  7700., 11220.,  7700., 10200.,  6300.,  8160.,  4900.,  6120.,  4620.,  7782.,  6160., 10026.,  7700., 12270.,  8470., 12270.,  7700., 10026.,  6160.,  7782.,  4620.,  6732.,  5390.,  8976.,  6930., 11220.,  8470., 12270.,  8470., 11220.,  6930.,  8976.,  5390.,  6732.,  4200.,  7140.,  5600.,  9180.,  7000., 11220.,  7700., 11220.,  7000.,  9180.,  5600.,  7140.,  4200.,  5508.,  4410.,  7344.,  5670.,  9180.,  6930., 10026.,  6930.,  9180.,  5670.,  7344.,  4410.,  5508.,  3360.,  5712.,  4480.,  7344.,  5600.,  8976.,  6160.,  8976.,  5600.,  7344.,  4480.,  5712.,  3360.,  4284.,  3430.,  5712.,  4410.,  7140.,  5390.,  7782.,  5390.,  7140.,  4410.,  5712.,  3430.,  4284.,  2520.,  4284.,  3360.,  5508.,  4200.,  6732.,  4620.,  6732.,  4200.,  5508.,  3360.,  4284.,  2520.,  3672.,  2940.,  4896.,  3780.,  6120.,  4620.,  6732.,  4620.,  6120.,  3780.,  4896.,  2940.,  3672.,  2940.,  4926.,  3920.,  6354.,  4900.,  7782.,  5390.,  7782.,  4900.,  6354.,  3920.,  4926.,  2940.,  4896.,  3920.,  6528.,  5040.,  8160.,  6160.,  8976.,  6160.,  8160.,  5040.,  6528.,  3920.,  4896.,  3780.,  6354.,  5040.,  8190.,  6300., 10026.,  6930., 10026.,  6300.,  8190.,  5040.,  6354.,  3780.,  6120.,  4900.,  8160.,  6300., 10200.,  7700., 11220.,  7700., 10200.,  6300.,  8160.,  4900.,  6120.,  4620.,  7782.,  6160., 10026.,  7700., 12270.,  8470., 12270.,  7700., 10026.,  6160.,  7782.,  4620.,  6732.,  5390.,  8976.,  6930., 11220.,  8470., 12270.,  8470., 11220.,  6930.,  8976.,  5390.,  6732.,  4200.,  7140.,  5600.,  9180.,  7000., 11220.,  7700., 11220.,  7000.,  9180.,  5600.,  7140.,  4200.,  5508.,  4410.,  7344.,  5670.,  9180.,  6930., 10026.,  6930.,  9180.,  5670.,  7344.,  4410.,  5508.,  3360.,  5712.,  4480.,  7344.,  5600.,  8976.,  6160.,  8976.,  5600.,  7344.,  4480.,  5712.,  3360.,  4284.,  3430.,  5712.,  4410.,  7140.,  5390.,  7782.,  5390.,  7140.,  4410.,  5712.,  3430.,  4284.,  2520.,  4284.,  3360.,  5508.,  4200.,  6732.,  4620.,  6732.,  4200.,  5508.,  3360.,  4284.,  2520.,  3672.,  2940.,  4896.,  3780.,  6120.,  4620.,  6732.,  4620.,  6120.,  3780.,  4896.,  2940.,  3672.,  2940.,  4926.,  3920.,  6354.,  4900.,  7782.,  5390.,  7782.,  4900.,  6354.,  3920.,  4926.,  2940.,  4896.,  3920.,  6528.,  5040.,  8160.,  6160.,  8976.,  6160.,  8160.,  5040.,  6528.,  3920.,  4896.,  3780.,  6354.,  5040.,  8190.,  6300., 10026.,  6930., 10026.,  6300.,  8190.,  5040.,  6354.,  3780.,  6120.,  4900.,  8160.,  6300., 10200.,  7700., 11220.,  7700., 10200.,  6300.,  8160.,  4900.,  6120.,  4620.,  7782.,  6160., 10026.,  7700., 12270.,  8470., 12270.,  7700., 10026.,  6160.,  7782.,  4620.,  6732.,  5390.,  8976.,  6930., 11220.,  8470., 12270.,  8470., 11220.,  6930.,  8976.,  5390.,  6732.,  4200.,  7140.,  5600.,  9180.,  7000., 11220.,  7700., 11220.,  7000.,  9180.,  5600.,  7140.,  4200.,  5508.,  4410.,  7344.,  5670.,  9180.,  6930., 10026.,  6930.,  9180.,  5670.,  7344.,  4410.,  5508.,  3360.,  5712.,  4480.,  7344.,  5600.,  8976.,  6160.,  8976.,  5600.,  7344.,  4480.,  5712.,  3360.,  4284.,  3430.,  5712.,  4410.,  7140.,  5390.,  7782.,  5390.,  7140.,  4410.,  5712.,  3430.,  4284.,  2520.,  4284.,  3360.,  5508.,  4200.,  6732.,  4620.,  6732.,  4200.,  5508.,  3360.,  4284.,  2520.};
  const std::array<int, 4> in_shape = {{ 3, 12, 13, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x13x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470.};
  const std::array<int, 4> in_shape = {{ 3, 12, 13, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x13x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2952.,  3600.,  3444.,  4200.,  3936.,  4800.,  4428.,  5400.,  4920.,  6000.,  5412.,  6600.,  5412.,  6600.,  5412.,  6600.,  4920.,  6000.,  4428.,  5400.,  3936.,  4800.,  3444.,  4200.,  2952.,  3600.,  3444.,  4200.,  3986.,  4860.,  4592.,  5600.,  5134.,  6260.,  5740.,  7000.,  6282.,  7660.,  6346.,  7740.,  6282.,  7660.,  5740.,  7000.,  5134.,  6260.,  4592.,  5600.,  3986.,  4860.,  3444.,  4200.,  3936.,  4800.,  4592.,  5600.,  5248.,  6400.,  5904.,  7200.,  6560.,  8000.,  7216.,  8800.,  7216.,  8800.,  7216.,  8800.,  6560.,  8000.,  5904.,  7200.,  5248.,  6400.,  4592.,  5600.,  3936.,  4800.,  4428.,  5400.,  5134.,  6260.,  5904.,  7200.,  6610.,  8060.,  7380.,  9000.,  8086.,  9860.,  8150.,  9940.,  8086.,  9860.,  7380.,  9000.,  6610.,  8060.,  5904.,  7200.,  5134.,  6260.,  4428.,  5400.,  4920.,  6000.,  5740.,  7000.,  6560.,  8000.,  7380.,  9000.,  8200., 10000.,  9020., 11000.,  9020., 11000.,  9020., 11000.,  8200., 10000.,  7380.,  9000.,  6560.,  8000.,  5740.,  7000.,  4920.,  6000.,  5412.,  6600.,  6282.,  7660.,  7216.,  8800.,  8086.,  9860.,  9020., 11000.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9020., 11000.,  8086.,  9860.,  7216.,  8800.,  6282.,  7660.,  5412.,  6600.,  5412.,  6600.,  6346.,  7740.,  7216.,  8800.,  8150.,  9940.,  9020., 11000.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9020., 11000.,  8150.,  9940.,  7216.,  8800.,  6346.,  7740.,  5412.,  6600.,  4920.,  6000.,  5740.,  7000.,  6560.,  8000.,  7380.,  9000.,  8200., 10000.,  9020., 11000.,  9020., 11000.,  9020., 11000.,  8200., 10000.,  7380.,  9000.,  6560.,  8000.,  5740.,  7000.,  4920.,  6000.,  4428.,  5400.,  5198.,  6340.,  5904.,  7200.,  6674.,  8140.,  7380.,  9000.,  8150.,  9940.,  8086.,  9860.,  8150.,  9940.,  7380.,  9000.,  6674.,  8140.,  5904.,  7200.,  5198.,  6340.,  4428.,  5400.,  3936.,  4800.,  4592.,  5600.,  5248.,  6400.,  5904.,  7200.,  6560.,  8000.,  7216.,  8800.,  7216.,  8800.,  7216.,  8800.,  6560.,  8000.,  5904.,  7200.,  5248.,  6400.,  4592.,  5600.,  3936.,  4800.,  3444.,  4200.,  4050.,  4940.,  4592.,  5600.,  5198.,  6340.,  5740.,  7000.,  6346.,  7740.,  6282.,  7660.,  6346.,  7740.,  5740.,  7000.,  5198.,  6340.,  4592.,  5600.,  4050.,  4940.,  3444.,  4200.,  2952.,  3600.,  3444.,  4200.,  3936.,  4800.,  4428.,  5400.,  4920.,  6000.,  5412.,  6600.,  5412.,  6600.,  5412.,  6600.,  4920.,  6000.,  4428.,  5400.,  3936.,  4800.,  3444.,  4200.,  2952.,  3600.,  2952.,  3600.,  3444.,  4200.,  3936.,  4800.,  4428.,  5400.,  4920.,  6000.,  5412.,  6600.,  5412.,  6600.,  5412.,  6600.,  4920.,  6000.,  4428.,  5400.,  3936.,  4800.,  3444.,  4200.,  2952.,  3600.,  3444.,  4200.,  3986.,  4860.,  4592.,  5600.,  5134.,  6260.,  5740.,  7000.,  6282.,  7660.,  6346.,  7740.,  6282.,  7660.,  5740.,  7000.,  5134.,  6260.,  4592.,  5600.,  3986.,  4860.,  3444.,  4200.,  3936.,  4800.,  4592.,  5600.,  5248.,  6400.,  5904.,  7200.,  6560.,  8000.,  7216.,  8800.,  7216.,  8800.,  7216.,  8800.,  6560.,  8000.,  5904.,  7200.,  5248.,  6400.,  4592.,  5600.,  3936.,  4800.,  4428.,  5400.,  5134.,  6260.,  5904.,  7200.,  6610.,  8060.,  7380.,  9000.,  8086.,  9860.,  8150.,  9940.,  8086.,  9860.,  7380.,  9000.,  6610.,  8060.,  5904.,  7200.,  5134.,  6260.,  4428.,  5400.,  4920.,  6000.,  5740.,  7000.,  6560.,  8000.,  7380.,  9000.,  8200., 10000.,  9020., 11000.,  9020., 11000.,  9020., 11000.,  8200., 10000.,  7380.,  9000.,  6560.,  8000.,  5740.,  7000.,  4920.,  6000.,  5412.,  6600.,  6282.,  7660.,  7216.,  8800.,  8086.,  9860.,  9020., 11000.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9020., 11000.,  8086.,  9860.,  7216.,  8800.,  6282.,  7660.,  5412.,  6600.,  5412.,  6600.,  6346.,  7740.,  7216.,  8800.,  8150.,  9940.,  9020., 11000.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9020., 11000.,  8150.,  9940.,  7216.,  8800.,  6346.,  7740.,  5412.,  6600.,  4920.,  6000.,  5740.,  7000.,  6560.,  8000.,  7380.,  9000.,  8200., 10000.,  9020., 11000.,  9020., 11000.,  9020., 11000.,  8200., 10000.,  7380.,  9000.,  6560.,  8000.,  5740.,  7000.,  4920.,  6000.,  4428.,  5400.,  5198.,  6340.,  5904.,  7200.,  6674.,  8140.,  7380.,  9000.,  8150.,  9940.,  8086.,  9860.,  8150.,  9940.,  7380.,  9000.,  6674.,  8140.,  5904.,  7200.,  5198.,  6340.,  4428.,  5400.,  3936.,  4800.,  4592.,  5600.,  5248.,  6400.,  5904.,  7200.,  6560.,  8000.,  7216.,  8800.,  7216.,  8800.,  7216.,  8800.,  6560.,  8000.,  5904.,  7200.,  5248.,  6400.,  4592.,  5600.,  3936.,  4800.,  3444.,  4200.,  4050.,  4940.,  4592.,  5600.,  5198.,  6340.,  5740.,  7000.,  6346.,  7740.,  6282.,  7660.,  6346.,  7740.,  5740.,  7000.,  5198.,  6340.,  4592.,  5600.,  4050.,  4940.,  3444.,  4200.,  2952.,  3600.,  3444.,  4200.,  3936.,  4800.,  4428.,  5400.,  4920.,  6000.,  5412.,  6600.,  5412.,  6600.,  5412.,  6600.,  4920.,  6000.,  4428.,  5400.,  3936.,  4800.,  3444.,  4200.,  2952.,  3600.,  2952.,  3600.,  3444.,  4200.,  3936.,  4800.,  4428.,  5400.,  4920.,  6000.,  5412.,  6600.,  5412.,  6600.,  5412.,  6600.,  4920.,  6000.,  4428.,  5400.,  3936.,  4800.,  3444.,  4200.,  2952.,  3600.,  3444.,  4200.,  3986.,  4860.,  4592.,  5600.,  5134.,  6260.,  5740.,  7000.,  6282.,  7660.,  6346.,  7740.,  6282.,  7660.,  5740.,  7000.,  5134.,  6260.,  4592.,  5600.,  3986.,  4860.,  3444.,  4200.,  3936.,  4800.,  4592.,  5600.,  5248.,  6400.,  5904.,  7200.,  6560.,  8000.,  7216.,  8800.,  7216.,  8800.,  7216.,  8800.,  6560.,  8000.,  5904.,  7200.,  5248.,  6400.,  4592.,  5600.,  3936.,  4800.,  4428.,  5400.,  5134.,  6260.,  5904.,  7200.,  6610.,  8060.,  7380.,  9000.,  8086.,  9860.,  8150.,  9940.,  8086.,  9860.,  7380.,  9000.,  6610.,  8060.,  5904.,  7200.,  5134.,  6260.,  4428.,  5400.,  4920.,  6000.,  5740.,  7000.,  6560.,  8000.,  7380.,  9000.,  8200., 10000.,  9020., 11000.,  9020., 11000.,  9020., 11000.,  8200., 10000.,  7380.,  9000.,  6560.,  8000.,  5740.,  7000.,  4920.,  6000.,  5412.,  6600.,  6282.,  7660.,  7216.,  8800.,  8086.,  9860.,  9020., 11000.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9020., 11000.,  8086.,  9860.,  7216.,  8800.,  6282.,  7660.,  5412.,  6600.,  5412.,  6600.,  6346.,  7740.,  7216.,  8800.,  8150.,  9940.,  9020., 11000.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9020., 11000.,  8150.,  9940.,  7216.,  8800.,  6346.,  7740.,  5412.,  6600.,  4920.,  6000.,  5740.,  7000.,  6560.,  8000.,  7380.,  9000.,  8200., 10000.,  9020., 11000.,  9020., 11000.,  9020., 11000.,  8200., 10000.,  7380.,  9000.,  6560.,  8000.,  5740.,  7000.,  4920.,  6000.,  4428.,  5400.,  5198.,  6340.,  5904.,  7200.,  6674.,  8140.,  7380.,  9000.,  8150.,  9940.,  8086.,  9860.,  8150.,  9940.,  7380.,  9000.,  6674.,  8140.,  5904.,  7200.,  5198.,  6340.,  4428.,  5400.,  3936.,  4800.,  4592.,  5600.,  5248.,  6400.,  5904.,  7200.,  6560.,  8000.,  7216.,  8800.,  7216.,  8800.,  7216.,  8800.,  6560.,  8000.,  5904.,  7200.,  5248.,  6400.,  4592.,  5600.,  3936.,  4800.,  3444.,  4200.,  4050.,  4940.,  4592.,  5600.,  5198.,  6340.,  5740.,  7000.,  6346.,  7740.,  6282.,  7660.,  6346.,  7740.,  5740.,  7000.,  5198.,  6340.,  4592.,  5600.,  4050.,  4940.,  3444.,  4200.,  2952.,  3600.,  3444.,  4200.,  3936.,  4800.,  4428.,  5400.,  4920.,  6000.,  5412.,  6600.,  5412.,  6600.,  5412.,  6600.,  4920.,  6000.,  4428.,  5400.,  3936.,  4800.,  3444.,  4200.,  2952.,  3600.};
  const std::array<int, 4> in_shape = {{ 3, 12, 13, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x13x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.};
  const std::array<int, 4> in_shape = {{ 3, 12, 13, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x13x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2818.,  3692.,  4566.,  5440.,  3248.,  4256.,  5264.,  6272.,  3630.,  4756.,  5882.,  7008.,  4060.,  5320.,  6580.,  7840.,  4442.,  5820.,  7198.,  8576.,  4490.,  5884.,  7278.,  8672.,  4442.,  5820.,  7198.,  8576.,  4060.,  5320.,  6580.,  7840.,  3630.,  4756.,  5882.,  7008.,  3248.,  4256.,  5264.,  6272.,  2818.,  3692.,  4566.,  5440.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3248.,  4256.,  5264.,  6272.,  3712.,  4864.,  6016.,  7168.,  4176.,  5472.,  6768.,  8064.,  4640.,  6080.,  7520.,  8960.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  4640.,  6080.,  7520.,  8960.,  4176.,  5472.,  6768.,  8064.,  3712.,  4864.,  6016.,  7168.,  3248.,  4256.,  5264.,  6272.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3630.,  4756.,  5882.,  7008.,  4176.,  5472.,  6768.,  8064.,  4674.,  6124.,  7574.,  9024.,  5220.,  6840.,  8460., 10080.,  5718.,  7492.,  9266., 11040.,  5766.,  7556.,  9346., 11136.,  5718.,  7492.,  9266., 11040.,  5220.,  6840.,  8460., 10080.,  4674.,  6124.,  7574.,  9024.,  4176.,  5472.,  6768.,  8064.,  3630.,  4756.,  5882.,  7008.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  4060.,  5320.,  6580.,  7840.,  4640.,  6080.,  7520.,  8960.,  5220.,  6840.,  8460., 10080.,  5800.,  7600.,  9400., 11200.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  5800.,  7600.,  9400., 11200.,  5220.,  6840.,  8460., 10080.,  4640.,  6080.,  7520.,  8960.,  4060.,  5320.,  6580.,  7840.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4442.,  5820.,  7198.,  8576.,  5104.,  6688.,  8272.,  9856.,  5718.,  7492.,  9266., 11040.,  6380.,  8360., 10340., 12320.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  6380.,  8360., 10340., 12320.,  5718.,  7492.,  9266., 11040.,  5104.,  6688.,  8272.,  9856.,  4442.,  5820.,  7198.,  8576.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4490.,  5884.,  7278.,  8672.,  5104.,  6688.,  8272.,  9856.,  5766.,  7556.,  9346., 11136.,  6380.,  8360., 10340., 12320.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6380.,  8360., 10340., 12320.,  5766.,  7556.,  9346., 11136.,  5104.,  6688.,  8272.,  9856.,  4490.,  5884.,  7278.,  8672.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  4060.,  5320.,  6580.,  7840.,  4640.,  6080.,  7520.,  8960.,  5220.,  6840.,  8460., 10080.,  5800.,  7600.,  9400., 11200.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  5800.,  7600.,  9400., 11200.,  5220.,  6840.,  8460., 10080.,  4640.,  6080.,  7520.,  8960.,  4060.,  5320.,  6580.,  7840.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3678.,  4820.,  5962.,  7104.,  4176.,  5472.,  6768.,  8064.,  4722.,  6188.,  7654.,  9120.,  5220.,  6840.,  8460., 10080.,  5766.,  7556.,  9346., 11136.,  5718.,  7492.,  9266., 11040.,  5766.,  7556.,  9346., 11136.,  5220.,  6840.,  8460., 10080.,  4722.,  6188.,  7654.,  9120.,  4176.,  5472.,  6768.,  8064.,  3678.,  4820.,  5962.,  7104.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3248.,  4256.,  5264.,  6272.,  3712.,  4864.,  6016.,  7168.,  4176.,  5472.,  6768.,  8064.,  4640.,  6080.,  7520.,  8960.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  4640.,  6080.,  7520.,  8960.,  4176.,  5472.,  6768.,  8064.,  3712.,  4864.,  6016.,  7168.,  3248.,  4256.,  5264.,  6272.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2866.,  3756.,  4646.,  5536.,  3248.,  4256.,  5264.,  6272.,  3678.,  4820.,  5962.,  7104.,  4060.,  5320.,  6580.,  7840.,  4490.,  5884.,  7278.,  8672.,  4442.,  5820.,  7198.,  8576.,  4490.,  5884.,  7278.,  8672.,  4060.,  5320.,  6580.,  7840.,  3678.,  4820.,  5962.,  7104.,  3248.,  4256.,  5264.,  6272.,  2866.,  3756.,  4646.,  5536.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2818.,  3692.,  4566.,  5440.,  3248.,  4256.,  5264.,  6272.,  3630.,  4756.,  5882.,  7008.,  4060.,  5320.,  6580.,  7840.,  4442.,  5820.,  7198.,  8576.,  4490.,  5884.,  7278.,  8672.,  4442.,  5820.,  7198.,  8576.,  4060.,  5320.,  6580.,  7840.,  3630.,  4756.,  5882.,  7008.,  3248.,  4256.,  5264.,  6272.,  2818.,  3692.,  4566.,  5440.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3248.,  4256.,  5264.,  6272.,  3712.,  4864.,  6016.,  7168.,  4176.,  5472.,  6768.,  8064.,  4640.,  6080.,  7520.,  8960.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  4640.,  6080.,  7520.,  8960.,  4176.,  5472.,  6768.,  8064.,  3712.,  4864.,  6016.,  7168.,  3248.,  4256.,  5264.,  6272.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3630.,  4756.,  5882.,  7008.,  4176.,  5472.,  6768.,  8064.,  4674.,  6124.,  7574.,  9024.,  5220.,  6840.,  8460., 10080.,  5718.,  7492.,  9266., 11040.,  5766.,  7556.,  9346., 11136.,  5718.,  7492.,  9266., 11040.,  5220.,  6840.,  8460., 10080.,  4674.,  6124.,  7574.,  9024.,  4176.,  5472.,  6768.,  8064.,  3630.,  4756.,  5882.,  7008.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  4060.,  5320.,  6580.,  7840.,  4640.,  6080.,  7520.,  8960.,  5220.,  6840.,  8460., 10080.,  5800.,  7600.,  9400., 11200.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  5800.,  7600.,  9400., 11200.,  5220.,  6840.,  8460., 10080.,  4640.,  6080.,  7520.,  8960.,  4060.,  5320.,  6580.,  7840.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4442.,  5820.,  7198.,  8576.,  5104.,  6688.,  8272.,  9856.,  5718.,  7492.,  9266., 11040.,  6380.,  8360., 10340., 12320.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  6380.,  8360., 10340., 12320.,  5718.,  7492.,  9266., 11040.,  5104.,  6688.,  8272.,  9856.,  4442.,  5820.,  7198.,  8576.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4490.,  5884.,  7278.,  8672.,  5104.,  6688.,  8272.,  9856.,  5766.,  7556.,  9346., 11136.,  6380.,  8360., 10340., 12320.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6380.,  8360., 10340., 12320.,  5766.,  7556.,  9346., 11136.,  5104.,  6688.,  8272.,  9856.,  4490.,  5884.,  7278.,  8672.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  4060.,  5320.,  6580.,  7840.,  4640.,  6080.,  7520.,  8960.,  5220.,  6840.,  8460., 10080.,  5800.,  7600.,  9400., 11200.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  5800.,  7600.,  9400., 11200.,  5220.,  6840.,  8460., 10080.,  4640.,  6080.,  7520.,  8960.,  4060.,  5320.,  6580.,  7840.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3678.,  4820.,  5962.,  7104.,  4176.,  5472.,  6768.,  8064.,  4722.,  6188.,  7654.,  9120.,  5220.,  6840.,  8460., 10080.,  5766.,  7556.,  9346., 11136.,  5718.,  7492.,  9266., 11040.,  5766.,  7556.,  9346., 11136.,  5220.,  6840.,  8460., 10080.,  4722.,  6188.,  7654.,  9120.,  4176.,  5472.,  6768.,  8064.,  3678.,  4820.,  5962.,  7104.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3248.,  4256.,  5264.,  6272.,  3712.,  4864.,  6016.,  7168.,  4176.,  5472.,  6768.,  8064.,  4640.,  6080.,  7520.,  8960.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  4640.,  6080.,  7520.,  8960.,  4176.,  5472.,  6768.,  8064.,  3712.,  4864.,  6016.,  7168.,  3248.,  4256.,  5264.,  6272.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2866.,  3756.,  4646.,  5536.,  3248.,  4256.,  5264.,  6272.,  3678.,  4820.,  5962.,  7104.,  4060.,  5320.,  6580.,  7840.,  4490.,  5884.,  7278.,  8672.,  4442.,  5820.,  7198.,  8576.,  4490.,  5884.,  7278.,  8672.,  4060.,  5320.,  6580.,  7840.,  3678.,  4820.,  5962.,  7104.,  3248.,  4256.,  5264.,  6272.,  2866.,  3756.,  4646.,  5536.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2818.,  3692.,  4566.,  5440.,  3248.,  4256.,  5264.,  6272.,  3630.,  4756.,  5882.,  7008.,  4060.,  5320.,  6580.,  7840.,  4442.,  5820.,  7198.,  8576.,  4490.,  5884.,  7278.,  8672.,  4442.,  5820.,  7198.,  8576.,  4060.,  5320.,  6580.,  7840.,  3630.,  4756.,  5882.,  7008.,  3248.,  4256.,  5264.,  6272.,  2818.,  3692.,  4566.,  5440.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3248.,  4256.,  5264.,  6272.,  3712.,  4864.,  6016.,  7168.,  4176.,  5472.,  6768.,  8064.,  4640.,  6080.,  7520.,  8960.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  4640.,  6080.,  7520.,  8960.,  4176.,  5472.,  6768.,  8064.,  3712.,  4864.,  6016.,  7168.,  3248.,  4256.,  5264.,  6272.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3630.,  4756.,  5882.,  7008.,  4176.,  5472.,  6768.,  8064.,  4674.,  6124.,  7574.,  9024.,  5220.,  6840.,  8460., 10080.,  5718.,  7492.,  9266., 11040.,  5766.,  7556.,  9346., 11136.,  5718.,  7492.,  9266., 11040.,  5220.,  6840.,  8460., 10080.,  4674.,  6124.,  7574.,  9024.,  4176.,  5472.,  6768.,  8064.,  3630.,  4756.,  5882.,  7008.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  4060.,  5320.,  6580.,  7840.,  4640.,  6080.,  7520.,  8960.,  5220.,  6840.,  8460., 10080.,  5800.,  7600.,  9400., 11200.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  5800.,  7600.,  9400., 11200.,  5220.,  6840.,  8460., 10080.,  4640.,  6080.,  7520.,  8960.,  4060.,  5320.,  6580.,  7840.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4442.,  5820.,  7198.,  8576.,  5104.,  6688.,  8272.,  9856.,  5718.,  7492.,  9266., 11040.,  6380.,  8360., 10340., 12320.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  6380.,  8360., 10340., 12320.,  5718.,  7492.,  9266., 11040.,  5104.,  6688.,  8272.,  9856.,  4442.,  5820.,  7198.,  8576.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4490.,  5884.,  7278.,  8672.,  5104.,  6688.,  8272.,  9856.,  5766.,  7556.,  9346., 11136.,  6380.,  8360., 10340., 12320.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6380.,  8360., 10340., 12320.,  5766.,  7556.,  9346., 11136.,  5104.,  6688.,  8272.,  9856.,  4490.,  5884.,  7278.,  8672.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  4060.,  5320.,  6580.,  7840.,  4640.,  6080.,  7520.,  8960.,  5220.,  6840.,  8460., 10080.,  5800.,  7600.,  9400., 11200.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  5800.,  7600.,  9400., 11200.,  5220.,  6840.,  8460., 10080.,  4640.,  6080.,  7520.,  8960.,  4060.,  5320.,  6580.,  7840.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3678.,  4820.,  5962.,  7104.,  4176.,  5472.,  6768.,  8064.,  4722.,  6188.,  7654.,  9120.,  5220.,  6840.,  8460., 10080.,  5766.,  7556.,  9346., 11136.,  5718.,  7492.,  9266., 11040.,  5766.,  7556.,  9346., 11136.,  5220.,  6840.,  8460., 10080.,  4722.,  6188.,  7654.,  9120.,  4176.,  5472.,  6768.,  8064.,  3678.,  4820.,  5962.,  7104.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3248.,  4256.,  5264.,  6272.,  3712.,  4864.,  6016.,  7168.,  4176.,  5472.,  6768.,  8064.,  4640.,  6080.,  7520.,  8960.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  4640.,  6080.,  7520.,  8960.,  4176.,  5472.,  6768.,  8064.,  3712.,  4864.,  6016.,  7168.,  3248.,  4256.,  5264.,  6272.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2866.,  3756.,  4646.,  5536.,  3248.,  4256.,  5264.,  6272.,  3678.,  4820.,  5962.,  7104.,  4060.,  5320.,  6580.,  7840.,  4490.,  5884.,  7278.,  8672.,  4442.,  5820.,  7198.,  8576.,  4490.,  5884.,  7278.,  8672.,  4060.,  5320.,  6580.,  7840.,  3678.,  4820.,  5962.,  7104.,  3248.,  4256.,  5264.,  6272.,  2866.,  3756.,  4646.,  5536.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.};
  const std::array<int, 4> in_shape = {{ 3, 12, 13, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x13x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.};
  const std::array<int, 4> in_shape = {{ 3, 12, 13, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x14x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2673., 3080., 3524., 3983., 4355., 4650., 4603., 4380., 4269., 3765., 3544., 3148., 2791., 2463., 3161., 3458., 3804., 4320., 4983., 5498., 5393., 5224., 5263., 4662., 4180., 3568., 3121., 2718., 3668., 3968., 4544., 5180., 5676., 6200., 6284., 6224., 6196., 5572., 5152., 4384., 3644., 2956., 3526., 4172., 5072., 5673., 6366., 7014., 7070., 7158., 7358., 6859., 6162., 5404., 4786., 3965., 3731., 4192., 4892., 5709., 6857., 7638., 7641., 7612., 7759., 7207., 6576., 5924., 5277., 4693., 4335., 4902., 5684., 6222., 7065., 7978., 8303., 8276., 8345., 7588., 6848., 6120., 5255., 4456., 4945., 5600., 6188., 6682., 7455., 7968., 7925., 7978., 8303., 7526., 6712., 5952., 5145., 4398., 4657., 5334., 5908., 6785., 7507., 7872., 7737., 7346., 7291., 6593., 6046., 5324., 4741., 4211., 3702., 4268., 4944., 5801., 6494., 7254., 7372., 7138., 7048., 6183., 5568., 4812., 4132., 3505., 3308., 3688., 4128., 4620., 5188., 5728., 5948., 6232., 6468., 5868., 5352., 4448., 3820., 3252., 3119., 3360., 3892., 4484., 4873., 5132., 5079., 4994., 5181., 4932., 4608., 4168., 3811., 3240., 2107., 2474., 3100., 3531., 4017., 4552., 4587., 4494., 4481., 4115., 3778., 3348., 3071., 2825., 2241., 2736., 3252., 3831., 4691., 5138., 5011., 4804., 4885., 4533., 4240., 3900., 3343., 2831., 2449., 2826., 3372., 3888., 4671., 5490., 5945., 6000., 5927., 5358., 4836., 4304., 3593., 2934., 3540., 3840., 4288., 4604., 5164., 5688., 5836., 6032., 6452., 5956., 5344., 4768., 4028., 3340., 4350., 5020., 5552., 6209., 6838., 7110., 6878., 6630., 6702., 6227., 5882., 5356., 4530., 3765., 4195., 5032., 5964., 6837., 7657., 8414., 8433., 8116., 7959., 6999., 6296., 5460., 4709., 4037., 4823., 5550., 6340., 7134., 8097., 8834., 8871., 8860., 8849., 7932., 7136., 5992., 5055., 4208., 4713., 5304., 6188., 7146., 7975., 8664., 8861., 8834., 8871., 8254., 7608., 6640., 5729., 4646., 3905., 4654., 5668., 6393., 7203., 7960., 8097., 8090., 8211., 7649., 6902., 6108., 5469., 4643., 3550., 3996., 4672., 5457., 6326., 6806., 6956., 7058., 7096., 6575., 5976., 5356., 4740., 4185., 3436., 3944., 4640., 5068., 5572., 6112., 6268., 6040., 6084., 5612., 4904., 4192., 3564., 2996., 3127., 3832., 4436., 4900., 5425., 5636., 5567., 5546., 5621., 4956., 4416., 3896., 3275., 2704., 2635., 3106., 3692., 4307., 4721., 4992., 5059., 4822., 4665., 4291., 3898., 3300., 2935., 2617., 2673., 3080., 3524., 3983., 4355., 4650., 4603., 4380., 4269., 3765., 3544., 3148., 2791., 2463., 3161., 3458., 3804., 4320., 4983., 5498., 5393., 5224., 5263., 4662., 4180., 3568., 3121., 2718., 3668., 3968., 4544., 5180., 5676., 6200., 6284., 6224., 6196., 5572., 5152., 4384., 3644., 2956., 3526., 4172., 5072., 5673., 6366., 7014., 7070., 7158., 7358., 6859., 6162., 5404., 4786., 3965., 3731., 4192., 4892., 5709., 6857., 7638., 7641., 7612., 7759., 7207., 6576., 5924., 5277., 4693., 4335., 4902., 5684., 6222., 7065., 7978., 8303., 8276., 8345., 7588., 6848., 6120., 5255., 4456., 4945., 5600., 6188., 6682., 7455., 7968., 7925., 7978., 8303., 7526., 6712., 5952., 5145., 4398., 4657., 5334., 5908., 6785., 7507., 7872., 7737., 7346., 7291., 6593., 6046., 5324., 4741., 4211., 3702., 4268., 4944., 5801., 6494., 7254., 7372., 7138., 7048., 6183., 5568., 4812., 4132., 3505., 3308., 3688., 4128., 4620., 5188., 5728., 5948., 6232., 6468., 5868., 5352., 4448., 3820., 3252., 3119., 3360., 3892., 4484., 4873., 5132., 5079., 4994., 5181., 4932., 4608., 4168., 3811., 3240., 2107., 2474., 3100., 3531., 4017., 4552., 4587., 4494., 4481., 4115., 3778., 3348., 3071., 2825.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x14x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {7978., 8303., 8276., 8345., 7968., 7925., 7978., 8303., 8834., 8871., 8860., 8849., 8664., 8861., 8834., 8871., 7978., 8303., 8276., 8345., 7968., 7925., 7978., 8303.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x14x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2568., 2898., 3098., 3472., 3408., 3832., 3774., 4238., 4056., 4566., 4402., 4948., 4306., 4838., 4114., 4632., 4130., 4650., 3564., 4026., 3266., 3680., 2896., 3256., 2530., 2846., 2292., 2558., 3083., 3458., 3446., 3876., 3852., 4344., 4383., 4928., 4801., 5406., 5348., 6004., 5317., 5970., 5174., 5808., 5175., 5806., 4519., 5084., 4092., 4600., 3396., 3840., 2925., 3314., 2613., 2940., 3360., 3768., 3720., 4192., 4352., 4896., 4920., 5528., 5344., 6024., 5960., 6704., 5976., 6728., 5976., 6720., 6024., 6776., 5408., 6088., 4984., 5600., 4352., 4896., 3912., 4392., 3168., 3576., 3551., 3980., 4052., 4552., 4796., 5376., 5285., 5938., 5869., 6604., 6466., 7276., 6543., 7372., 6700., 7532., 6809., 7660., 6447., 7222., 5746., 6452., 4884., 5512., 4423., 4980., 3709., 4186., 3792., 4262., 4254., 4800., 4944., 5576., 5458., 6170., 6528., 7330., 7430., 8316., 7326., 8226., 7174., 8072., 7342., 8270., 6924., 7774., 6150., 6928., 5520., 6216., 4990., 5610., 4260., 4794., 4059., 4590., 4810., 5420., 5772., 6472., 6123., 6908., 6977., 7858., 7736., 8708., 7977., 8958., 8042., 9016., 8011., 9010., 7263., 8168., 6608., 7440., 6148., 6896., 5249., 5918., 4445., 5024., 4675., 5266., 5480., 6144., 5964., 6712., 6425., 7252., 7337., 8254., 7718., 8720., 7751., 8746., 7736., 8708., 7977., 8958., 7295., 8172., 6342., 7136., 5636., 6336., 4911., 5538., 4301., 4844., 4332., 4882., 5074., 5692., 5456., 6152., 6130., 6898., 6788., 7638., 7218., 8144., 7366., 8290., 7018., 7924., 7070., 7974., 6320., 7122., 5770., 6492., 5232., 5864., 4534., 5098., 3968., 4454., 3779., 4268., 4526., 5080., 5116., 5744., 5787., 6482., 6137., 6908., 6564., 7404., 6541., 7384., 6342., 7172., 6415., 7248., 5683., 6430., 5316., 5984., 4724., 5304., 4085., 4600., 3593., 4034., 3296., 3704., 3736., 4208., 4224., 4768., 4840., 5448., 5344., 6024., 5976., 6720., 6024., 6776., 5960., 6704., 6040., 6792., 5344., 6024., 4904., 5520., 4224., 4768., 3800., 4280., 3296., 3704., 2635., 2974., 2908., 3296., 3468., 3912., 4077., 4584., 4513., 5090., 5114., 5752., 5171., 5822., 5180., 5828., 5205., 5866., 4639., 5240., 4234., 4784., 3844., 4336., 3611., 4054., 3037., 3424., 2300., 2582., 2502., 2820., 2960., 3320., 3214., 3622., 3524., 3986., 4054., 4576., 4106., 4646., 4174., 4716., 4386., 4946., 4216., 4726., 3854., 4324., 3248., 3672., 2954., 3342., 2568., 2914., 2152., 2418., 2586., 2912., 3024., 3416., 3486., 3934., 4216., 4726., 4722., 5284., 4690., 5270., 4514., 5096., 4642., 5242., 4492., 5050., 4050., 4560., 3664., 4120., 3170., 3566., 2580., 2910., 2603., 2930., 3118., 3508., 3788., 4248., 4055., 4576., 4577., 5166., 5212., 5860., 5517., 6178., 5550., 6208., 5567., 6238., 5095., 5708., 4580., 5144., 4164., 4672., 3429., 3874., 2869., 3244., 3232., 3640., 3848., 4320., 4352., 4896., 4792., 5400., 5472., 6152., 5832., 6576., 5976., 6728., 5976., 6720., 6152., 6904., 5536., 6216., 4856., 5472., 4352., 4896., 3784., 4264., 3296., 3704., 3871., 4348., 4540., 5096., 5052., 5696., 5789., 6498., 6381., 7164., 6746., 7596., 6775., 7628., 6532., 7372., 6657., 7500., 6095., 6854., 5594., 6276., 5076., 5672., 4207., 4724., 3485., 3914., 4144., 4678., 5086., 5712., 5840., 6568., 6466., 7274., 7136., 8034., 7878., 8844., 7822., 8786., 7622., 8568., 7726., 8670., 6764., 7614., 6118., 6880., 5264., 5928., 4542., 5114., 4036., 4506., 4603., 5182., 5394., 6076., 6220., 7016., 7075., 7964., 7905., 8898., 8704., 9780., 8625., 9710., 8482., 9544., 8323., 9378., 7391., 8344., 6776., 7632., 5764., 6512., 5001., 5646., 4253., 4784., 4387., 4930., 5040., 5680., 5964., 6712., 6817., 7668., 7561., 8526., 8414., 9472., 8639., 9722., 8704., 9780., 8625., 9710., 7871., 8860., 7134., 8032., 6276., 7072., 5623., 6322., 4493., 5084., 3916., 4402., 4530., 5100., 5392., 6056., 6002., 6754., 6692., 7542., 7378., 8320., 7526., 8498., 7674., 8644., 7806., 8790., 7312., 8210., 6490., 7308., 5552., 6280., 5014., 5658., 4256., 4806., 3523., 3964., 4022., 4536., 4732., 5328., 5251., 5922., 6073., 6828., 6700., 7532., 6725., 7576., 6670., 7524., 6727., 7600., 6291., 7086., 5692., 6416., 5236., 5880., 4605., 5176., 3753., 4242., 3168., 3576., 3736., 4208., 4480., 5024., 4840., 5448., 5472., 6152., 5976., 6720., 6152., 6904., 6088., 6832., 6040., 6792., 5472., 6152., 4904., 5520., 4480., 5024., 3800., 4280., 3168., 3576., 2987., 3374., 3540., 3984., 3980., 4488., 4341., 4904., 4929., 5554., 5186., 5864., 5227., 5902., 5124., 5780., 5197., 5850., 4703., 5288., 4130., 4656., 3716., 4176., 3219., 3622., 2781., 3120., 2780., 3126., 3302., 3700., 3664., 4120., 4030., 4534., 4324., 4882., 4598., 5200., 4730., 5334., 4526., 5116., 4482., 5058., 4056., 4566., 3726., 4180., 3312., 3704., 2730., 3070., 2216., 2498., 2568., 2898., 3098., 3472., 3408., 3832., 3774., 4238., 4056., 4566., 4402., 4948., 4306., 4838., 4114., 4632., 4130., 4650., 3564., 4026., 3266., 3680., 2896., 3256., 2530., 2846., 2292., 2558., 3083., 3458., 3446., 3876., 3852., 4344., 4383., 4928., 4801., 5406., 5348., 6004., 5317., 5970., 5174., 5808., 5175., 5806., 4519., 5084., 4092., 4600., 3396., 3840., 2925., 3314., 2613., 2940., 3360., 3768., 3720., 4192., 4352., 4896., 4920., 5528., 5344., 6024., 5960., 6704., 5976., 6728., 5976., 6720., 6024., 6776., 5408., 6088., 4984., 5600., 4352., 4896., 3912., 4392., 3168., 3576., 3551., 3980., 4052., 4552., 4796., 5376., 5285., 5938., 5869., 6604., 6466., 7276., 6543., 7372., 6700., 7532., 6809., 7660., 6447., 7222., 5746., 6452., 4884., 5512., 4423., 4980., 3709., 4186., 3792., 4262., 4254., 4800., 4944., 5576., 5458., 6170., 6528., 7330., 7430., 8316., 7326., 8226., 7174., 8072., 7342., 8270., 6924., 7774., 6150., 6928., 5520., 6216., 4990., 5610., 4260., 4794., 4059., 4590., 4810., 5420., 5772., 6472., 6123., 6908., 6977., 7858., 7736., 8708., 7977., 8958., 8042., 9016., 8011., 9010., 7263., 8168., 6608., 7440., 6148., 6896., 5249., 5918., 4445., 5024., 4675., 5266., 5480., 6144., 5964., 6712., 6425., 7252., 7337., 8254., 7718., 8720., 7751., 8746., 7736., 8708., 7977., 8958., 7295., 8172., 6342., 7136., 5636., 6336., 4911., 5538., 4301., 4844., 4332., 4882., 5074., 5692., 5456., 6152., 6130., 6898., 6788., 7638., 7218., 8144., 7366., 8290., 7018., 7924., 7070., 7974., 6320., 7122., 5770., 6492., 5232., 5864., 4534., 5098., 3968., 4454., 3779., 4268., 4526., 5080., 5116., 5744., 5787., 6482., 6137., 6908., 6564., 7404., 6541., 7384., 6342., 7172., 6415., 7248., 5683., 6430., 5316., 5984., 4724., 5304., 4085., 4600., 3593., 4034., 3296., 3704., 3736., 4208., 4224., 4768., 4840., 5448., 5344., 6024., 5976., 6720., 6024., 6776., 5960., 6704., 6040., 6792., 5344., 6024., 4904., 5520., 4224., 4768., 3800., 4280., 3296., 3704., 2635., 2974., 2908., 3296., 3468., 3912., 4077., 4584., 4513., 5090., 5114., 5752., 5171., 5822., 5180., 5828., 5205., 5866., 4639., 5240., 4234., 4784., 3844., 4336., 3611., 4054., 3037., 3424., 2300., 2582., 2502., 2820., 2960., 3320., 3214., 3622., 3524., 3986., 4054., 4576., 4106., 4646., 4174., 4716., 4386., 4946., 4216., 4726., 3854., 4324., 3248., 3672., 2954., 3342., 2568., 2914.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x14x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {7736., 8708., 7977., 8958., 8042., 9016., 8011., 9010., 7718., 8720., 7751., 8746., 7736., 8708., 7977., 8958., 8704., 9780., 8625., 9710., 8482., 9544., 8323., 9378., 8414., 9472., 8639., 9722., 8704., 9780., 8625., 9710., 7736., 8708., 7977., 8958., 8042., 9016., 8011., 9010., 7718., 8720., 7751., 8746., 7736., 8708., 7977., 8958.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x14x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2182.,  2512.,  2842.,  3172.,  2590.,  2964.,  3338.,  3712.,  2936.,  3360.,  3784.,  4208.,  3164.,  3628.,  4092.,  4556.,  3554.,  4064.,  4574.,  5084.,  3906.,  4452.,  4998.,  5544.,  3712.,  4244.,  4776.,  5308.,  3582.,  4100.,  4618.,  5136.,  3596.,  4116.,  4636.,  5156.,  3258.,  3720.,  4182.,  4644.,  2854.,  3268.,  3682.,  4096.,  2488.,  2848.,  3208.,  3568.,  2312.,  2628.,  2944.,  3260.,  2030.,  2296.,  2562.,  2828.,  2511.,  2886.,  3261.,  3636.,  2878.,  3308.,  3738.,  4168.,  3404.,  3896.,  4388.,  4880.,  3709.,  4254.,  4799.,  5344.,  4101.,  4706.,  5311.,  5916.,  4568.,  5224.,  5880.,  6536.,  4637.,  5290.,  5943.,  6596.,  4498.,  5132.,  5766.,  6400.,  4375.,  5006.,  5637.,  6268.,  3897.,  4462.,  5027.,  5592.,  3548.,  4056.,  4564.,  5072.,  3116.,  3560.,  4004.,  4448.,  2549.,  2938.,  3327.,  3716.,  2227.,  2554.,  2881.,  3208.,  2920.,  3328.,  3736.,  4144.,  3320.,  3792.,  4264.,  4736.,  3808.,  4352.,  4896.,  5440.,  4240.,  4848.,  5456.,  6064.,  4696.,  5376.,  6056.,  6736.,  5096.,  5840.,  6584.,  7328.,  5184.,  5936.,  6688.,  7440.,  5256.,  6000.,  6744.,  7488.,  5408.,  6160.,  6912.,  7664.,  4824.,  5504.,  6184.,  6864.,  4296.,  4912.,  5528.,  6144.,  3808.,  4352.,  4896.,  5440.,  3376.,  3856.,  4336.,  4816.,  2792.,  3200.,  3608.,  4016.,  3057.,  3486.,  3915.,  4344.,  3540.,  4040.,  4540.,  5040.,  4052.,  4632.,  5212.,  5792.,  4637.,  5290.,  5943.,  6596.,  5195.,  5930.,  6665.,  7400.,  5578.,  6388.,  7198.,  8008.,  5681.,  6510.,  7339.,  8168.,  5704.,  6536.,  7368.,  8200.,  5871.,  6722.,  7573.,  8424.,  5575.,  6350.,  7125.,  7900.,  5026.,  5732.,  6438.,  7144.,  4372.,  5000.,  5628.,  6256.,  3953.,  4510.,  5067.,  5624.,  3501.,  3978.,  4455.,  4932.,  3194.,  3664.,  4134.,  4604.,  3930.,  4476.,  5022.,  5568.,  4392.,  5024.,  5656.,  6288.,  4812.,  5524.,  6236.,  6948.,  5630.,  6432.,  7234.,  8036.,  6422.,  7308.,  8194.,  9080.,  6328.,  7228.,  8128.,  9028.,  6154.,  7052.,  7950.,  8848.,  6332.,  7260.,  8188.,  9116.,  5942.,  6792.,  7642.,  8492.,  5506.,  6284.,  7062.,  7840.,  4840.,  5536.,  6232.,  6928.,  4320.,  4940.,  5560.,  6180.,  3874.,  4408.,  4942.,  5476.,  3507.,  4038.,  4569.,  5100.,  4146.,  4756.,  5366.,  5976.,  4988.,  5688.,  6388.,  7088.,  5429.,  6214.,  6999.,  7784.,  5937.,  6818.,  7699.,  8580.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  7014.,  7988.,  8962.,  9936.,  6991.,  7990.,  8989.,  9988.,  6245.,  7150.,  8055.,  8960.,  5792.,  6624.,  7456.,  8288.,  5244.,  5992.,  6740.,  7488.,  4517.,  5186.,  5855.,  6524.,  3959.,  4538.,  5117.,  5696.,  4199.,  4790.,  5381.,  5972.,  4632.,  5296.,  5960.,  6624.,  5196.,  5944.,  6692.,  7440.,  5767.,  6594.,  7421.,  8248.,  6333.,  7250.,  8167.,  9084.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  6305.,  7182.,  8059.,  8936.,  5586.,  6380.,  7174.,  7968.,  4908.,  5608.,  6308.,  7008.,  4331.,  4958.,  5585.,  6212.,  3707.,  4250.,  4793.,  5336.,  3810.,  4360.,  4910.,  5460.,  4378.,  4996.,  5614.,  6232.,  4968.,  5664.,  6360.,  7056.,  5428.,  6196.,  6964.,  7732.,  5894.,  6744.,  7594.,  8444.,  6390.,  7316.,  8242.,  9168.,  6336.,  7260.,  8184.,  9108.,  6074.,  6980.,  7886.,  8792.,  6084.,  6988.,  7892.,  8796.,  5630.,  6432.,  7234.,  8036.,  5250.,  5972.,  6694.,  7416.,  4456.,  5088.,  5720.,  6352.,  3944.,  4508.,  5072.,  5636.,  3402.,  3888.,  4374.,  4860.,  3357.,  3846.,  4335.,  4824.,  3794.,  4348.,  4902.,  5456.,  4388.,  5016.,  5644.,  6272.,  4959.,  5654.,  6349.,  7044.,  5455.,  6226.,  6997.,  7768.,  5920.,  6760.,  7600.,  8440.,  5871.,  6714.,  7557.,  8400.,  5742.,  6572.,  7402.,  8232.,  5629.,  6462.,  7295.,  8128.,  5019.,  5766.,  6513.,  7260.,  4556.,  5224.,  5892.,  6560.,  4100.,  4680.,  5260.,  5840.,  3607.,  4122.,  4637.,  5152.,  3113.,  3554.,  3995.,  4436.,  2792.,  3200.,  3608.,  4016.,  3224.,  3696.,  4168.,  4640.,  3808.,  4352.,  4896.,  5440.,  4208.,  4816.,  5424.,  6032.,  4696.,  5376.,  6056.,  6736.,  5256.,  6000.,  6744.,  7488.,  5408.,  6160.,  6912.,  7664.,  5352.,  6096.,  6840.,  7584.,  5312.,  6064.,  6816.,  7568.,  4696.,  5376.,  6056.,  6736.,  4264.,  4880.,  5496.,  6112.,  3808.,  4352.,  4896.,  5440.,  3280.,  3760.,  4240.,  4720.,  2792.,  3200.,  3608.,  4016.,  2339.,  2678.,  3017.,  3356.,  2644.,  3032.,  3420.,  3808.,  3068.,  3512.,  3956.,  4400.,  3535.,  4042.,  4549.,  5056.,  3985.,  4562.,  5139.,  5716.,  4342.,  4980.,  5618.,  6256.,  4363.,  5014.,  5665.,  6316.,  4560.,  5208.,  5856.,  6504.,  4773.,  5434.,  6095.,  6756.,  4277.,  4878.,  5479.,  6080.,  3758.,  4308.,  4858.,  5408.,  3452.,  3944.,  4436.,  4928.,  3115.,  3558.,  4001.,  4444.,  2647.,  3034.,  3421.,  3808.,  1966.,  2248.,  2530.,  2812.,  2190.,  2508.,  2826.,  3144.,  2488.,  2848.,  3208.,  3568.,  2820.,  3228.,  3636.,  4044.,  3210.,  3672.,  4134.,  4596.,  3602.,  4124.,  4646.,  5168.,  3688.,  4228.,  4768.,  5308.,  3566.,  4108.,  4650.,  5192.,  3716.,  4276.,  4836.,  5396.,  3618.,  4128.,  4638.,  5148.,  3398.,  3868.,  4338.,  4808.,  2872.,  3296.,  3720.,  4144.,  2624.,  3012.,  3400.,  3788.,  2454.,  2800.,  3146.,  3492.,  1798.,  2064.,  2330.,  2596.,  2382.,  2708.,  3034.,  3360.,  2712.,  3104.,  3496.,  3888.,  2988.,  3436.,  3884.,  4332.,  3618.,  4128.,  4638.,  5148.,  4146.,  4708.,  5270.,  5832.,  4048.,  4628.,  5208.,  5788.,  3934.,  4516.,  5098.,  5680.,  4156.,  4756.,  5356.,  5956.,  3994.,  4552.,  5110.,  5668.,  3686.,  4196.,  4706.,  5216.,  3160.,  3616.,  4072.,  4528.,  2744.,  3140.,  3536.,  3932.,  2414.,  2744.,  3074.,  3404.,  2111.,  2438.,  2765.,  3092.,  2646.,  3036.,  3426.,  3816.,  3308.,  3768.,  4228.,  4688.,  3589.,  4110.,  4631.,  5152.,  3925.,  4514.,  5103.,  5692.,  4560.,  5208.,  5856.,  6504.,  4773.,  5434.,  6095.,  6756.,  4714.,  5372.,  6030.,  6688.,  4607.,  5278.,  5949.,  6620.,  4233.,  4846.,  5459.,  6072.,  3956.,  4520.,  5084.,  5648.,  3564.,  4072.,  4580.,  5088.,  2989.,  3434.,  3879.,  4324.,  2563.,  2938.,  3313.,  3688.,  2920.,  3328.,  3736.,  4144.,  3320.,  3792.,  4264.,  4736.,  3808.,  4352.,  4896.,  5440.,  4240.,  4848.,  5456.,  6064.,  4696.,  5376.,  6056.,  6736.,  5096.,  5840.,  6584.,  7328.,  5184.,  5936.,  6688.,  7440.,  5256.,  6000.,  6744.,  7488.,  5408.,  6160.,  6912.,  7664.,  4824.,  5504.,  6184.,  6864.,  4296.,  4912.,  5528.,  6144.,  3808.,  4352.,  4896.,  5440.,  3376.,  3856.,  4336.,  4816.,  2792.,  3200.,  3608.,  4016.,  3393.,  3870.,  4347.,  4824.,  3948.,  4504.,  5060.,  5616.,  4500.,  5144.,  5788.,  6432.,  5077.,  5786.,  6495.,  7204.,  5531.,  6314.,  7097.,  7880.,  5842.,  6692.,  7542.,  8392.,  5865.,  6718.,  7571.,  8424.,  5872.,  6712.,  7552.,  8392.,  5831.,  6674.,  7517.,  8360.,  5399.,  6158.,  6917.,  7676.,  4874.,  5556.,  6238.,  6920.,  4276.,  4872.,  5468.,  6064.,  3689.,  4206.,  4723.,  5240.,  3101.,  3530.,  3959.,  4388.,  3578.,  4112.,  4646.,  5180.,  4362.,  4988.,  5614.,  6240.,  5064.,  5792.,  6520.,  7248.,  5580.,  6388.,  7196.,  8004.,  6366.,  7264.,  8162.,  9060.,  6982.,  7948.,  8914.,  9880.,  6744.,  7708.,  8672.,  9636.,  6490.,  7436.,  8382.,  9328.,  6572.,  7516.,  8460.,  9404.,  6006.,  6856.,  7706.,  8556.,  5330.,  6092.,  6854.,  7616.,  4616.,  5280.,  5944.,  6608.,  4112.,  4684.,  5256.,  5828.,  3490.,  3960.,  4430.,  4900.,  3907.,  4486.,  5065.,  5644.,  4602.,  5284.,  5966.,  6648.,  5532.,  6328.,  7124.,  7920.,  6077.,  6966.,  7855.,  8744.,  6785.,  7778.,  8771.,  9764.,  7596.,  8672.,  9748., 10824.,  7749.,  8834.,  9919., 11004.,  7550.,  8612.,  9674., 10736.,  7303.,  8358.,  9413., 10468.,  6581.,  7534.,  8487.,  9440.,  5976.,  6832.,  7688.,  8544.,  5244.,  5992.,  6740.,  7488.,  4301.,  4946.,  5591.,  6236.,  3623.,  4154.,  4685.,  5216.,  3799.,  4342.,  4885.,  5428.,  4416.,  5056.,  5696.,  6336.,  5196.,  5944.,  6692.,  7440.,  5887.,  6738.,  7589.,  8440.,  6605.,  7570.,  8535.,  9500.,  7162.,  8220.,  9278., 10336.,  7395.,  8478.,  9561., 10644.,  7596.,  8672.,  9748., 10824.,  7749.,  8834.,  9919., 11004.,  6961.,  7950.,  8939.,  9928.,  6170.,  7068.,  7966.,  8864.,  5580.,  6376.,  7172.,  7968.,  4915.,  5614.,  6313.,  7012.,  4043.,  4634.,  5225.,  5816.,  3426.,  3912.,  4398.,  4884.,  3978.,  4548.,  5118.,  5688.,  4616.,  5280.,  5944.,  6608.,  5316.,  6068.,  6820.,  7572.,  5958.,  6808.,  7658.,  8508.,  6438.,  7380.,  8322.,  9264.,  6608.,  7580.,  8552.,  9524.,  6554.,  7524.,  8494.,  9464.,  6708.,  7692.,  8676.,  9660.,  6366.,  7264.,  8162.,  9060.,  5826.,  6644.,  7462.,  8280.,  5000.,  5728.,  6456.,  7184.,  4440.,  5084.,  5728.,  6372.,  3914.,  4464.,  5014.,  5564.,  3021.,  3462.,  3903.,  4344.,  3594.,  4108.,  4622.,  5136.,  4164.,  4760.,  5356.,  5952.,  4679.,  5350.,  6021.,  6692.,  5343.,  6098.,  6853.,  7608.,  5944.,  6776.,  7608.,  8440.,  5975.,  6826.,  7677.,  8528.,  5862.,  6716.,  7570.,  8424.,  5957.,  6830.,  7703.,  8576.,  5419.,  6214.,  7009.,  7804.,  4996.,  5720.,  6444.,  7168.,  4548.,  5192.,  5836.,  6480.,  3951.,  4522.,  5093.,  5664.,  3385.,  3874.,  4363.,  4852.,  2792.,  3200.,  3608.,  4016.,  3224.,  3696.,  4168.,  4640.,  3808.,  4352.,  4896.,  5440.,  4208.,  4816.,  5424.,  6032.,  4696.,  5376.,  6056.,  6736.,  5256.,  6000.,  6744.,  7488.,  5408.,  6160.,  6912.,  7664.,  5352.,  6096.,  6840.,  7584.,  5312.,  6064.,  6816.,  7568.,  4696.,  5376.,  6056.,  6736.,  4264.,  4880.,  5496.,  6112.,  3808.,  4352.,  4896.,  5440.,  3280.,  3760.,  4240.,  4720.,  2792.,  3200.,  3608.,  4016.,  2739.,  3126.,  3513.,  3900.,  3084.,  3528.,  3972.,  4416.,  3516.,  4024.,  4532.,  5040.,  3879.,  4442.,  5005.,  5568.,  4257.,  4882.,  5507.,  6132.,  4574.,  5252.,  5930.,  6608.,  4579.,  5254.,  5929.,  6604.,  4568.,  5224.,  5880.,  6536.,  4637.,  5290.,  5943.,  6596.,  4165.,  4750.,  5335.,  5920.,  3702.,  4228.,  4754.,  5280.,  3228.,  3688.,  4148.,  4608.,  2755.,  3158.,  3561.,  3964.,  2311.,  2650.,  2989.,  3328.,  2350.,  2696.,  3042.,  3388.,  2814.,  3212.,  3610.,  4008.,  3288.,  3744.,  4200.,  4656.,  3588.,  4092.,  4596.,  5100.,  3818.,  4376.,  4934.,  5492.,  4098.,  4700.,  5302.,  5904.,  4104.,  4708.,  5312.,  5916.,  3966.,  4556.,  5146.,  5736.,  3892.,  4468.,  5044.,  5620.,  3554.,  4064.,  4574.,  5084.,  3286.,  3740.,  4194.,  4648.,  2776.,  3168.,  3560.,  3952.,  2352.,  2692.,  3032.,  3372.,  1942.,  2224.,  2506.,  2788.,  2182.,  2512.,  2842.,  3172.,  2590.,  2964.,  3338.,  3712.,  2936.,  3360.,  3784.,  4208.,  3164.,  3628.,  4092.,  4556.,  3554.,  4064.,  4574.,  5084.,  3906.,  4452.,  4998.,  5544.,  3712.,  4244.,  4776.,  5308.,  3582.,  4100.,  4618.,  5136.,  3596.,  4116.,  4636.,  5156.,  3258.,  3720.,  4182.,  4644.,  2854.,  3268.,  3682.,  4096.,  2488.,  2848.,  3208.,  3568.,  2312.,  2628.,  2944.,  3260.,  2030.,  2296.,  2562.,  2828.,  2511.,  2886.,  3261.,  3636.,  2878.,  3308.,  3738.,  4168.,  3404.,  3896.,  4388.,  4880.,  3709.,  4254.,  4799.,  5344.,  4101.,  4706.,  5311.,  5916.,  4568.,  5224.,  5880.,  6536.,  4637.,  5290.,  5943.,  6596.,  4498.,  5132.,  5766.,  6400.,  4375.,  5006.,  5637.,  6268.,  3897.,  4462.,  5027.,  5592.,  3548.,  4056.,  4564.,  5072.,  3116.,  3560.,  4004.,  4448.,  2549.,  2938.,  3327.,  3716.,  2227.,  2554.,  2881.,  3208.,  2920.,  3328.,  3736.,  4144.,  3320.,  3792.,  4264.,  4736.,  3808.,  4352.,  4896.,  5440.,  4240.,  4848.,  5456.,  6064.,  4696.,  5376.,  6056.,  6736.,  5096.,  5840.,  6584.,  7328.,  5184.,  5936.,  6688.,  7440.,  5256.,  6000.,  6744.,  7488.,  5408.,  6160.,  6912.,  7664.,  4824.,  5504.,  6184.,  6864.,  4296.,  4912.,  5528.,  6144.,  3808.,  4352.,  4896.,  5440.,  3376.,  3856.,  4336.,  4816.,  2792.,  3200.,  3608.,  4016.,  3057.,  3486.,  3915.,  4344.,  3540.,  4040.,  4540.,  5040.,  4052.,  4632.,  5212.,  5792.,  4637.,  5290.,  5943.,  6596.,  5195.,  5930.,  6665.,  7400.,  5578.,  6388.,  7198.,  8008.,  5681.,  6510.,  7339.,  8168.,  5704.,  6536.,  7368.,  8200.,  5871.,  6722.,  7573.,  8424.,  5575.,  6350.,  7125.,  7900.,  5026.,  5732.,  6438.,  7144.,  4372.,  5000.,  5628.,  6256.,  3953.,  4510.,  5067.,  5624.,  3501.,  3978.,  4455.,  4932.,  3194.,  3664.,  4134.,  4604.,  3930.,  4476.,  5022.,  5568.,  4392.,  5024.,  5656.,  6288.,  4812.,  5524.,  6236.,  6948.,  5630.,  6432.,  7234.,  8036.,  6422.,  7308.,  8194.,  9080.,  6328.,  7228.,  8128.,  9028.,  6154.,  7052.,  7950.,  8848.,  6332.,  7260.,  8188.,  9116.,  5942.,  6792.,  7642.,  8492.,  5506.,  6284.,  7062.,  7840.,  4840.,  5536.,  6232.,  6928.,  4320.,  4940.,  5560.,  6180.,  3874.,  4408.,  4942.,  5476.,  3507.,  4038.,  4569.,  5100.,  4146.,  4756.,  5366.,  5976.,  4988.,  5688.,  6388.,  7088.,  5429.,  6214.,  6999.,  7784.,  5937.,  6818.,  7699.,  8580.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  7014.,  7988.,  8962.,  9936.,  6991.,  7990.,  8989.,  9988.,  6245.,  7150.,  8055.,  8960.,  5792.,  6624.,  7456.,  8288.,  5244.,  5992.,  6740.,  7488.,  4517.,  5186.,  5855.,  6524.,  3959.,  4538.,  5117.,  5696.,  4199.,  4790.,  5381.,  5972.,  4632.,  5296.,  5960.,  6624.,  5196.,  5944.,  6692.,  7440.,  5767.,  6594.,  7421.,  8248.,  6333.,  7250.,  8167.,  9084.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  6305.,  7182.,  8059.,  8936.,  5586.,  6380.,  7174.,  7968.,  4908.,  5608.,  6308.,  7008.,  4331.,  4958.,  5585.,  6212.,  3707.,  4250.,  4793.,  5336.,  3810.,  4360.,  4910.,  5460.,  4378.,  4996.,  5614.,  6232.,  4968.,  5664.,  6360.,  7056.,  5428.,  6196.,  6964.,  7732.,  5894.,  6744.,  7594.,  8444.,  6390.,  7316.,  8242.,  9168.,  6336.,  7260.,  8184.,  9108.,  6074.,  6980.,  7886.,  8792.,  6084.,  6988.,  7892.,  8796.,  5630.,  6432.,  7234.,  8036.,  5250.,  5972.,  6694.,  7416.,  4456.,  5088.,  5720.,  6352.,  3944.,  4508.,  5072.,  5636.,  3402.,  3888.,  4374.,  4860.,  3357.,  3846.,  4335.,  4824.,  3794.,  4348.,  4902.,  5456.,  4388.,  5016.,  5644.,  6272.,  4959.,  5654.,  6349.,  7044.,  5455.,  6226.,  6997.,  7768.,  5920.,  6760.,  7600.,  8440.,  5871.,  6714.,  7557.,  8400.,  5742.,  6572.,  7402.,  8232.,  5629.,  6462.,  7295.,  8128.,  5019.,  5766.,  6513.,  7260.,  4556.,  5224.,  5892.,  6560.,  4100.,  4680.,  5260.,  5840.,  3607.,  4122.,  4637.,  5152.,  3113.,  3554.,  3995.,  4436.,  2792.,  3200.,  3608.,  4016.,  3224.,  3696.,  4168.,  4640.,  3808.,  4352.,  4896.,  5440.,  4208.,  4816.,  5424.,  6032.,  4696.,  5376.,  6056.,  6736.,  5256.,  6000.,  6744.,  7488.,  5408.,  6160.,  6912.,  7664.,  5352.,  6096.,  6840.,  7584.,  5312.,  6064.,  6816.,  7568.,  4696.,  5376.,  6056.,  6736.,  4264.,  4880.,  5496.,  6112.,  3808.,  4352.,  4896.,  5440.,  3280.,  3760.,  4240.,  4720.,  2792.,  3200.,  3608.,  4016.,  2339.,  2678.,  3017.,  3356.,  2644.,  3032.,  3420.,  3808.,  3068.,  3512.,  3956.,  4400.,  3535.,  4042.,  4549.,  5056.,  3985.,  4562.,  5139.,  5716.,  4342.,  4980.,  5618.,  6256.,  4363.,  5014.,  5665.,  6316.,  4560.,  5208.,  5856.,  6504.,  4773.,  5434.,  6095.,  6756.,  4277.,  4878.,  5479.,  6080.,  3758.,  4308.,  4858.,  5408.,  3452.,  3944.,  4436.,  4928.,  3115.,  3558.,  4001.,  4444.,  2647.,  3034.,  3421.,  3808.,  1966.,  2248.,  2530.,  2812.,  2190.,  2508.,  2826.,  3144.,  2488.,  2848.,  3208.,  3568.,  2820.,  3228.,  3636.,  4044.,  3210.,  3672.,  4134.,  4596.,  3602.,  4124.,  4646.,  5168.,  3688.,  4228.,  4768.,  5308.,  3566.,  4108.,  4650.,  5192.,  3716.,  4276.,  4836.,  5396.,  3618.,  4128.,  4638.,  5148.,  3398.,  3868.,  4338.,  4808.,  2872.,  3296.,  3720.,  4144.,  2624.,  3012.,  3400.,  3788.,  2454.,  2800.,  3146.,  3492.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x14x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  7014.,  7988.,  8962.,  9936.,  6991.,  7990.,  8989.,  9988.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  7596.,  8672.,  9748., 10824.,  7749.,  8834.,  9919., 11004.,  7550.,  8612.,  9674., 10736.,  7303.,  8358.,  9413., 10468.,  7162.,  8220.,  9278., 10336.,  7395.,  8478.,  9561., 10644.,  7596.,  8672.,  9748., 10824.,  7749.,  8834.,  9919., 11004.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  7014.,  7988.,  8962.,  9936.,  6991.,  7990.,  8989.,  9988.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x14x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4784.,  5884.,  6768.,  7724.,  8992.,  9852.,  9600.,  8852.,  9160.,  8424.,  7712.,  7024.,  6200.,  5224.,  5958.,  6875.,  8168.,  8853.,  9802., 11183., 11741., 11499., 11545., 10190.,  9259.,  8008.,  6605.,  5618.,  7088.,  8016.,  9280., 10272., 11472., 12400., 12736., 12720., 13184., 11728., 10544.,  9280.,  8288.,  6832.,  7838.,  9083., 10552., 11965., 13058., 13743., 13977., 13795., 14285., 13454., 12319., 10776.,  9313.,  7586.,  8304.,  9772., 11408., 12476., 14560., 16492., 16184., 15460., 16032., 14472., 13048., 11408., 10176.,  8888.,  8998., 10595., 12808., 13933., 15866., 17623., 17965., 17779., 17417., 15326., 14251., 12648., 10845.,  9138.,  9822., 11239., 12680., 14025., 15906., 17019., 17553., 17623., 17965., 16358., 14439., 12648., 11425.,  9354.,  9096., 10384., 11536., 12824., 14328., 15424., 16044., 15624., 16004., 14768., 13236., 11408., 10292.,  8912.,  7758.,  9075., 10552., 11829., 13122., 14199., 14225., 13707., 13989., 12734., 11863., 10776.,  9513.,  8050.,  6832.,  7824.,  9280., 10208., 11472., 12720., 13184., 12912., 12992., 11472., 10480.,  9280.,  8096.,  6832.,  6126.,  6791.,  7784.,  8953., 10210., 11083., 11289., 11079., 11285.,  9926.,  8783.,  8008.,  7433.,  6314.,  5672.,  6344.,  7152.,  7760.,  8280.,  9128.,  9516.,  9232.,  9572.,  8992.,  8308.,  7024.,  6116.,  5216.,  4784.,  5884.,  6768.,  7724.,  8992.,  9852.,  9600.,  8852.,  9160.,  8424.,  7712.,  7024.,  6200.,  5224.,  5958.,  6875.,  8168.,  8853.,  9802., 11183., 11741., 11499., 11545., 10190.,  9259.,  8008.,  6605.,  5618.,  7088.,  8016.,  9280., 10272., 11472., 12400., 12736., 12720., 13184., 11728., 10544.,  9280.,  8288.,  6832.,  7838.,  9083., 10552., 11965., 13058., 13743., 13977., 13795., 14285., 13454., 12319., 10776.,  9313.,  7586.,  8304.,  9772., 11408., 12476., 14560., 16492., 16184., 15460., 16032., 14472., 13048., 11408., 10176.,  8888.,  8998., 10595., 12808., 13933., 15866., 17623., 17965., 17779., 17417., 15326., 14251., 12648., 10845.,  9138.,  9822., 11239., 12680., 14025., 15906., 17019., 17553., 17623., 17965., 16358., 14439., 12648., 11425.,  9354.,  9096., 10384., 11536., 12824., 14328., 15424., 16044., 15624., 16004., 14768., 13236., 11408., 10292.,  8912.,  7758.,  9075., 10552., 11829., 13122., 14199., 14225., 13707., 13989., 12734., 11863., 10776.,  9513.,  8050.,  6832.,  7824.,  9280., 10208., 11472., 12720., 13184., 12912., 12992., 11472., 10480.,  9280.,  8096.,  6832.,  6126.,  6791.,  7784.,  8953., 10210., 11083., 11289., 11079., 11285.,  9926.,  8783.,  8008.,  7433.,  6314.,  5672.,  6344.,  7152.,  7760.,  8280.,  9128.,  9516.,  9232.,  9572.,  8992.,  8308.,  7024.,  6116.,  5216.,  4784.,  5884.,  6768.,  7724.,  8992.,  9852.,  9600.,  8852.,  9160.,  8424.,  7712.,  7024.,  6200.,  5224.,  5958.,  6875.,  8168.,  8853.,  9802., 11183., 11741., 11499., 11545., 10190.,  9259.,  8008.,  6605.,  5618.,  7088.,  8016.,  9280., 10272., 11472., 12400., 12736., 12720., 13184., 11728., 10544.,  9280.,  8288.,  6832.,  7838.,  9083., 10552., 11965., 13058., 13743., 13977., 13795., 14285., 13454., 12319., 10776.,  9313.,  7586.,  8304.,  9772., 11408., 12476., 14560., 16492., 16184., 15460., 16032., 14472., 13048., 11408., 10176.,  8888.,  8998., 10595., 12808., 13933., 15866., 17623., 17965., 17779., 17417., 15326., 14251., 12648., 10845.,  9138.,  9822., 11239., 12680., 14025., 15906., 17019., 17553., 17623., 17965., 16358., 14439., 12648., 11425.,  9354.,  9096., 10384., 11536., 12824., 14328., 15424., 16044., 15624., 16004., 14768., 13236., 11408., 10292.,  8912.,  7758.,  9075., 10552., 11829., 13122., 14199., 14225., 13707., 13989., 12734., 11863., 10776.,  9513.,  8050.,  6832.,  7824.,  9280., 10208., 11472., 12720., 13184., 12912., 12992., 11472., 10480.,  9280.,  8096.,  6832.,  6126.,  6791.,  7784.,  8953., 10210., 11083., 11289., 11079., 11285.,  9926.,  8783.,  8008.,  7433.,  6314.,  5672.,  6344.,  7152.,  7760.,  8280.,  9128.,  9516.,  9232.,  9572.,  8992.,  8308.,  7024.,  6116.,  5216.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x14x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17623., 17965., 17779., 17417., 17019., 17553., 17623., 17965., 17623., 17965., 17779., 17417., 17019., 17553., 17623., 17965., 17623., 17965., 17779., 17417., 17019., 17553., 17623., 17965.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x14x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4428.,  5008.,  5674.,  6360.,  6448.,  7264.,  6974.,  7880.,  8420.,  9440.,  9410., 10504.,  8834.,  9936.,  8322.,  9400.,  8834.,  9952.,  8308.,  9328.,  7502.,  8432.,  6448.,  7264.,  5866.,  6576.,  5084.,  5664.,  5114.,  5804.,  6175.,  6982.,  7768.,  8720.,  8325.,  9386.,  9126., 10324., 10571., 11870., 11155., 12474., 10715., 11990., 10275., 11570.,  9166., 10332.,  8613.,  9686.,  7704.,  8656.,  6231.,  7066.,  5314.,  6004.,  6832.,  7648.,  7608.,  8544.,  8768.,  9856.,  9672., 10880., 10704., 12064., 11480., 12960., 11864., 13376., 12120., 13600., 12760., 14272., 11216., 12576.,  9928., 11168.,  8768.,  9856.,  7864.,  8832.,  6320.,  7136.,  7422.,  8316.,  8549.,  9590.,  9832., 11056., 11319., 12666., 12338., 13844., 12761., 14398., 13057., 14738., 13097., 14758., 13393., 15098., 12730., 14268., 11607., 13006., 10024., 11248.,  8893.,  9970.,  7590.,  8484.,  7588.,  8576.,  9478., 10632., 10832., 12192., 11810., 13320., 14028., 15728., 15662., 17496., 15022., 16880., 14126., 15944., 14702., 16576., 13660., 15360., 12466., 14016., 10832., 12192.,  9798., 10992.,  8500.,  9488.,  8274.,  9372.,  9787., 11062., 12152., 13648., 13097., 14762., 14478., 16356., 16631., 18670., 17535., 19610., 16967., 18982., 16463., 18514., 14518., 16364., 13513., 15206., 12088., 13584.,  9971., 11290.,  8474.,  9572.,  9490., 10636., 10411., 11710., 11896., 13392., 13401., 15074., 14926., 16820., 15911., 17974., 16175., 18274., 16631., 18670., 17535., 19610., 15414., 17276., 13497., 15198., 12088., 13584., 10851., 12194.,  8858., 10004.,  8580.,  9632.,  9774., 10960., 11088., 12448., 12378., 13888., 13740., 15440., 14678., 16544., 14966., 16888., 14294., 16176., 14646., 16552., 14028., 15728., 13082., 14632., 10832., 12192.,  9870., 11096.,  8740.,  9792.,  7326.,  8268.,  8509.,  9574.,  9832., 11056., 11039., 12394., 12498., 14020., 13809., 15470., 13817., 15522., 13313., 14998., 13321., 15050., 11946., 13500., 11055., 12462., 10024., 11248.,  8885.,  9986.,  7702.,  8644.,  6320.,  7136.,  7224.,  8160.,  8768.,  9856.,  9544., 10752., 10704., 12064., 12120., 13600., 12760., 14272., 12504., 13984., 12376., 13888., 10704., 12064.,  9800., 11040.,  8768.,  9856.,  7480.,  8448.,  6320.,  7136.,  6074.,  6812.,  6607.,  7438.,  7512.,  8464.,  8565.,  9634.,  9574., 10788., 10171., 11494., 10243., 11586., 10571., 11870., 11155., 12474.,  9806., 10988.,  8533.,  9614.,  7704.,  8656.,  6919.,  7778.,  5698.,  6436.,  5164.,  5808.,  5906.,  6624.,  6704.,  7520.,  7350.,  8256.,  8132.,  9152.,  8874., 10000.,  9098., 10264.,  8554.,  9696.,  8714.,  9864.,  8420.,  9440.,  7926.,  8856.,  6448.,  7264.,  5874.,  6616.,  5324.,  5968.,  4428.,  5008.,  5674.,  6360.,  6448.,  7264.,  6974.,  7880.,  8420.,  9440.,  9410., 10504.,  8834.,  9936.,  8322.,  9400.,  8834.,  9952.,  8308.,  9328.,  7502.,  8432.,  6448.,  7264.,  5866.,  6576.,  5084.,  5664.,  5114.,  5804.,  6175.,  6982.,  7768.,  8720.,  8325.,  9386.,  9126., 10324., 10571., 11870., 11155., 12474., 10715., 11990., 10275., 11570.,  9166., 10332.,  8613.,  9686.,  7704.,  8656.,  6231.,  7066.,  5314.,  6004.,  6832.,  7648.,  7608.,  8544.,  8768.,  9856.,  9672., 10880., 10704., 12064., 11480., 12960., 11864., 13376., 12120., 13600., 12760., 14272., 11216., 12576.,  9928., 11168.,  8768.,  9856.,  7864.,  8832.,  6320.,  7136.,  7422.,  8316.,  8549.,  9590.,  9832., 11056., 11319., 12666., 12338., 13844., 12761., 14398., 13057., 14738., 13097., 14758., 13393., 15098., 12730., 14268., 11607., 13006., 10024., 11248.,  8893.,  9970.,  7590.,  8484.,  7588.,  8576.,  9478., 10632., 10832., 12192., 11810., 13320., 14028., 15728., 15662., 17496., 15022., 16880., 14126., 15944., 14702., 16576., 13660., 15360., 12466., 14016., 10832., 12192.,  9798., 10992.,  8500.,  9488.,  8274.,  9372.,  9787., 11062., 12152., 13648., 13097., 14762., 14478., 16356., 16631., 18670., 17535., 19610., 16967., 18982., 16463., 18514., 14518., 16364., 13513., 15206., 12088., 13584.,  9971., 11290.,  8474.,  9572.,  9490., 10636., 10411., 11710., 11896., 13392., 13401., 15074., 14926., 16820., 15911., 17974., 16175., 18274., 16631., 18670., 17535., 19610., 15414., 17276., 13497., 15198., 12088., 13584., 10851., 12194.,  8858., 10004.,  8580.,  9632.,  9774., 10960., 11088., 12448., 12378., 13888., 13740., 15440., 14678., 16544., 14966., 16888., 14294., 16176., 14646., 16552., 14028., 15728., 13082., 14632., 10832., 12192.,  9870., 11096.,  8740.,  9792.,  7326.,  8268.,  8509.,  9574.,  9832., 11056., 11039., 12394., 12498., 14020., 13809., 15470., 13817., 15522., 13313., 14998., 13321., 15050., 11946., 13500., 11055., 12462., 10024., 11248.,  8885.,  9986.,  7702.,  8644.,  6320.,  7136.,  7224.,  8160.,  8768.,  9856.,  9544., 10752., 10704., 12064., 12120., 13600., 12760., 14272., 12504., 13984., 12376., 13888., 10704., 12064.,  9800., 11040.,  8768.,  9856.,  7480.,  8448.,  6320.,  7136.,  6074.,  6812.,  6607.,  7438.,  7512.,  8464.,  8565.,  9634.,  9574., 10788., 10171., 11494., 10243., 11586., 10571., 11870., 11155., 12474.,  9806., 10988.,  8533.,  9614.,  7704.,  8656.,  6919.,  7778.,  5698.,  6436.,  5164.,  5808.,  5906.,  6624.,  6704.,  7520.,  7350.,  8256.,  8132.,  9152.,  8874., 10000.,  9098., 10264.,  8554.,  9696.,  8714.,  9864.,  8420.,  9440.,  7926.,  8856.,  6448.,  7264.,  5874.,  6616.,  5324.,  5968.,  4428.,  5008.,  5674.,  6360.,  6448.,  7264.,  6974.,  7880.,  8420.,  9440.,  9410., 10504.,  8834.,  9936.,  8322.,  9400.,  8834.,  9952.,  8308.,  9328.,  7502.,  8432.,  6448.,  7264.,  5866.,  6576.,  5084.,  5664.,  5114.,  5804.,  6175.,  6982.,  7768.,  8720.,  8325.,  9386.,  9126., 10324., 10571., 11870., 11155., 12474., 10715., 11990., 10275., 11570.,  9166., 10332.,  8613.,  9686.,  7704.,  8656.,  6231.,  7066.,  5314.,  6004.,  6832.,  7648.,  7608.,  8544.,  8768.,  9856.,  9672., 10880., 10704., 12064., 11480., 12960., 11864., 13376., 12120., 13600., 12760., 14272., 11216., 12576.,  9928., 11168.,  8768.,  9856.,  7864.,  8832.,  6320.,  7136.,  7422.,  8316.,  8549.,  9590.,  9832., 11056., 11319., 12666., 12338., 13844., 12761., 14398., 13057., 14738., 13097., 14758., 13393., 15098., 12730., 14268., 11607., 13006., 10024., 11248.,  8893.,  9970.,  7590.,  8484.,  7588.,  8576.,  9478., 10632., 10832., 12192., 11810., 13320., 14028., 15728., 15662., 17496., 15022., 16880., 14126., 15944., 14702., 16576., 13660., 15360., 12466., 14016., 10832., 12192.,  9798., 10992.,  8500.,  9488.,  8274.,  9372.,  9787., 11062., 12152., 13648., 13097., 14762., 14478., 16356., 16631., 18670., 17535., 19610., 16967., 18982., 16463., 18514., 14518., 16364., 13513., 15206., 12088., 13584.,  9971., 11290.,  8474.,  9572.,  9490., 10636., 10411., 11710., 11896., 13392., 13401., 15074., 14926., 16820., 15911., 17974., 16175., 18274., 16631., 18670., 17535., 19610., 15414., 17276., 13497., 15198., 12088., 13584., 10851., 12194.,  8858., 10004.,  8580.,  9632.,  9774., 10960., 11088., 12448., 12378., 13888., 13740., 15440., 14678., 16544., 14966., 16888., 14294., 16176., 14646., 16552., 14028., 15728., 13082., 14632., 10832., 12192.,  9870., 11096.,  8740.,  9792.,  7326.,  8268.,  8509.,  9574.,  9832., 11056., 11039., 12394., 12498., 14020., 13809., 15470., 13817., 15522., 13313., 14998., 13321., 15050., 11946., 13500., 11055., 12462., 10024., 11248.,  8885.,  9986.,  7702.,  8644.,  6320.,  7136.,  7224.,  8160.,  8768.,  9856.,  9544., 10752., 10704., 12064., 12120., 13600., 12760., 14272., 12504., 13984., 12376., 13888., 10704., 12064.,  9800., 11040.,  8768.,  9856.,  7480.,  8448.,  6320.,  7136.,  6074.,  6812.,  6607.,  7438.,  7512.,  8464.,  8565.,  9634.,  9574., 10788., 10171., 11494., 10243., 11586., 10571., 11870., 11155., 12474.,  9806., 10988.,  8533.,  9614.,  7704.,  8656.,  6919.,  7778.,  5698.,  6436.,  5164.,  5808.,  5906.,  6624.,  6704.,  7520.,  7350.,  8256.,  8132.,  9152.,  8874., 10000.,  9098., 10264.,  8554.,  9696.,  8714.,  9864.,  8420.,  9440.,  7926.,  8856.,  6448.,  7264.,  5874.,  6616.,  5324.,  5968.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x14x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {16631., 18670., 17535., 19610., 16967., 18982., 16463., 18514., 15911., 17974., 16175., 18274., 16631., 18670., 17535., 19610., 16631., 18670., 17535., 19610., 16967., 18982., 16463., 18514., 15911., 17974., 16175., 18274., 16631., 18670., 17535., 19610., 16631., 18670., 17535., 19610., 16967., 18982., 16463., 18514., 15911., 17974., 16175., 18274., 16631., 18670., 17535., 19610.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x14x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4132.,  4712.,  5292.,  5872.,  4982.,  5668.,  6354.,  7040.,  5808.,  6624.,  7440.,  8256.,  6290.,  7196.,  8102.,  9008.,  7260.,  8280.,  9300., 10320.,  7886.,  8980., 10074., 11168.,  7686.,  8788.,  9890., 10992.,  7646.,  8724.,  9802., 10880.,  8054.,  9172., 10290., 11408.,  7260.,  8280.,  9300., 10320.,  6586.,  7516.,  8446.,  9376.,  5808.,  6624.,  7440.,  8256.,  5150.,  5860.,  6570.,  7280.,  4132.,  4712.,  5292.,  5872.,  4866.,  5556.,  6246.,  6936.,  5655.,  6462.,  7269.,  8076.,  6712.,  7664.,  8616.,  9568.,  7701.,  8762.,  9823., 10884.,  8446.,  9644., 10842., 12040.,  9123., 10422., 11721., 13020.,  9375., 10694., 12013., 13332.,  9179., 10454., 11729., 13004.,  8919., 10214., 11509., 12804.,  8382.,  9548., 10714., 11880.,  7577.,  8650.,  9723., 10796.,  6840.,  7792.,  8744.,  9696.,  5739.,  6574.,  7409.,  8244.,  4962.,  5652.,  6342.,  7032.,  5808.,  6624.,  7440.,  8256.,  6792.,  7728.,  8664.,  9600.,  7744.,  8832.,  9920., 11008.,  8472.,  9680., 10888., 12096.,  9680., 11040., 12400., 13760., 10664., 12144., 13624., 15104., 10632., 12144., 13656., 15168., 10408., 11888., 13368., 14848., 10888., 12400., 13912., 15424.,  9680., 11040., 12400., 13760.,  8696.,  9936., 11176., 12416.,  7744.,  8832.,  9920., 11008.,  7016.,  7984.,  8952.,  9920.,  5808.,  6624.,  7440.,  8256.,  6318.,  7212.,  8106.,  9000.,  7225.,  8266.,  9307., 10348.,  8648.,  9872., 11096., 12320.,  9771., 11118., 12465., 13812., 10642., 12148., 13654., 15160., 11565., 13202., 14839., 16476., 11985., 13666., 15347., 17028., 11957., 13618., 15279., 16940., 11865., 13570., 15275., 16980., 11026., 12564., 14102., 15640.,  9927., 11326., 12725., 14124.,  8776., 10000., 11224., 12448.,  7365.,  8442.,  9519., 10596.,  6414.,  7308.,  8202.,  9096.,  7036.,  8024.,  9012., 10000.,  8378.,  9532., 10686., 11840.,  9680., 11040., 12400., 13760., 10526., 12036., 13546., 15056., 12100., 13800., 15500., 17200., 13218., 15052., 16886., 18720., 13002., 14860., 16718., 18576., 12850., 14668., 16486., 18304., 13498., 15372., 17246., 19120., 12100., 13800., 15500., 17200., 10934., 12484., 14034., 15584.,  9680., 11040., 12400., 13760.,  8658.,  9852., 11046., 12240.,  7036.,  8024.,  9012., 10000.,  7770.,  8868.,  9966., 11064.,  8923., 10198., 11473., 12748., 10584., 12080., 13576., 15072., 12065., 13730., 15395., 17060., 13286., 15164., 17042., 18920., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 13222., 15068., 16914., 18760., 12053., 13746., 15439., 17132., 10712., 12208., 13704., 15200.,  9119., 10438., 11757., 13076.,  7866.,  8964., 10062., 11160.,  8106.,  9252., 10398., 11544.,  9379., 10678., 11977., 13276., 10584., 12080., 13576., 15072., 11769., 13442., 15115., 16788., 13398., 15292., 17186., 19080., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 13334., 15196., 17058., 18920., 11757., 13458., 15159., 16860., 10712., 12208., 13704., 15200.,  9575., 10918., 12261., 13604.,  8202.,  9348., 10494., 11640.,  7484.,  8536.,  9588., 10640.,  8282.,  9468., 10654., 11840.,  9680., 11040., 12400., 13760., 10846., 12356., 13866., 15376., 12100., 13800., 15500., 17200., 13122., 14988., 16854., 18720., 13770., 15692., 17614., 19536., 13618., 15500., 17382., 19264., 13402., 15308., 17214., 19120., 12100., 13800., 15500., 17200., 11254., 12804., 14354., 15904.,  9680., 11040., 12400., 13760.,  8562.,  9788., 11014., 12240.,  7484.,  8536.,  9588., 10640.,  6654.,  7596.,  8538.,  9480.,  7745.,  8810.,  9875., 10940.,  8648.,  9872., 11096., 12320.,  9539., 10894., 12249., 13604., 10754., 12276., 13798., 15320., 11957., 13618., 15279., 16940., 11865., 13570., 15275., 16980., 11837., 13522., 15207., 16892., 12257., 13986., 15715., 17444., 11138., 12692., 14246., 15800.,  9695., 11102., 12509., 13916.,  8776., 10000., 11224., 12448.,  7885.,  8986., 10087., 11188.,  6750.,  7692.,  8634.,  9576.,  5808.,  6624.,  7440.,  8256.,  6536.,  7472.,  8408.,  9344.,  7744.,  8832.,  9920., 11008.,  8728.,  9936., 11144., 12352.,  9680., 11040., 12400., 13760., 10408., 11888., 13368., 14848., 10888., 12400., 13912., 15424., 10664., 12144., 13624., 15104., 10632., 12144., 13656., 15168.,  9680., 11040., 12400., 13760.,  8952., 10192., 11432., 12672.,  7744.,  8832.,  9920., 11008.,  6760.,  7728.,  8696.,  9664.,  5808.,  6624.,  7440.,  8256.,  5202.,  5940.,  6678.,  7416.,  5983.,  6814.,  7645.,  8476.,  6712.,  7664.,  8616.,  9568.,  7533.,  8602.,  9671., 10740.,  8558.,  9772., 10986., 12200.,  9579., 10902., 12225., 13548.,  9319., 10662., 12005., 13348.,  9123., 10422., 11721., 13020.,  9375., 10694., 12013., 13332.,  8494.,  9676., 10858., 12040.,  7409.,  8490.,  9571., 10652.,  6840.,  7792.,  8744.,  9696.,  6067.,  6926.,  7785.,  8644.,  5298.,  6036.,  6774.,  7512.,  4580.,  5224.,  5868.,  6512.,  5014.,  5732.,  6450.,  7168.,  5808.,  6624.,  7440.,  8256.,  6482.,  7388.,  8294.,  9200.,  7260.,  8280.,  9300., 10320.,  7918.,  9044., 10170., 11296.,  8326.,  9492., 10658., 11824.,  8286.,  9428., 10570., 11712.,  8086.,  9236., 10386., 11536.,  7260.,  8280.,  9300., 10320.,  6778.,  7708.,  8638.,  9568.,  5808.,  6624.,  7440.,  8256.,  5182.,  5924.,  6666.,  7408.,  4580.,  5224.,  5868.,  6512.,  4132.,  4712.,  5292.,  5872.,  4982.,  5668.,  6354.,  7040.,  5808.,  6624.,  7440.,  8256.,  6290.,  7196.,  8102.,  9008.,  7260.,  8280.,  9300., 10320.,  7886.,  8980., 10074., 11168.,  7686.,  8788.,  9890., 10992.,  7646.,  8724.,  9802., 10880.,  8054.,  9172., 10290., 11408.,  7260.,  8280.,  9300., 10320.,  6586.,  7516.,  8446.,  9376.,  5808.,  6624.,  7440.,  8256.,  5150.,  5860.,  6570.,  7280.,  4132.,  4712.,  5292.,  5872.,  4866.,  5556.,  6246.,  6936.,  5655.,  6462.,  7269.,  8076.,  6712.,  7664.,  8616.,  9568.,  7701.,  8762.,  9823., 10884.,  8446.,  9644., 10842., 12040.,  9123., 10422., 11721., 13020.,  9375., 10694., 12013., 13332.,  9179., 10454., 11729., 13004.,  8919., 10214., 11509., 12804.,  8382.,  9548., 10714., 11880.,  7577.,  8650.,  9723., 10796.,  6840.,  7792.,  8744.,  9696.,  5739.,  6574.,  7409.,  8244.,  4962.,  5652.,  6342.,  7032.,  5808.,  6624.,  7440.,  8256.,  6792.,  7728.,  8664.,  9600.,  7744.,  8832.,  9920., 11008.,  8472.,  9680., 10888., 12096.,  9680., 11040., 12400., 13760., 10664., 12144., 13624., 15104., 10632., 12144., 13656., 15168., 10408., 11888., 13368., 14848., 10888., 12400., 13912., 15424.,  9680., 11040., 12400., 13760.,  8696.,  9936., 11176., 12416.,  7744.,  8832.,  9920., 11008.,  7016.,  7984.,  8952.,  9920.,  5808.,  6624.,  7440.,  8256.,  6318.,  7212.,  8106.,  9000.,  7225.,  8266.,  9307., 10348.,  8648.,  9872., 11096., 12320.,  9771., 11118., 12465., 13812., 10642., 12148., 13654., 15160., 11565., 13202., 14839., 16476., 11985., 13666., 15347., 17028., 11957., 13618., 15279., 16940., 11865., 13570., 15275., 16980., 11026., 12564., 14102., 15640.,  9927., 11326., 12725., 14124.,  8776., 10000., 11224., 12448.,  7365.,  8442.,  9519., 10596.,  6414.,  7308.,  8202.,  9096.,  7036.,  8024.,  9012., 10000.,  8378.,  9532., 10686., 11840.,  9680., 11040., 12400., 13760., 10526., 12036., 13546., 15056., 12100., 13800., 15500., 17200., 13218., 15052., 16886., 18720., 13002., 14860., 16718., 18576., 12850., 14668., 16486., 18304., 13498., 15372., 17246., 19120., 12100., 13800., 15500., 17200., 10934., 12484., 14034., 15584.,  9680., 11040., 12400., 13760.,  8658.,  9852., 11046., 12240.,  7036.,  8024.,  9012., 10000.,  7770.,  8868.,  9966., 11064.,  8923., 10198., 11473., 12748., 10584., 12080., 13576., 15072., 12065., 13730., 15395., 17060., 13286., 15164., 17042., 18920., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 13222., 15068., 16914., 18760., 12053., 13746., 15439., 17132., 10712., 12208., 13704., 15200.,  9119., 10438., 11757., 13076.,  7866.,  8964., 10062., 11160.,  8106.,  9252., 10398., 11544.,  9379., 10678., 11977., 13276., 10584., 12080., 13576., 15072., 11769., 13442., 15115., 16788., 13398., 15292., 17186., 19080., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 13334., 15196., 17058., 18920., 11757., 13458., 15159., 16860., 10712., 12208., 13704., 15200.,  9575., 10918., 12261., 13604.,  8202.,  9348., 10494., 11640.,  7484.,  8536.,  9588., 10640.,  8282.,  9468., 10654., 11840.,  9680., 11040., 12400., 13760., 10846., 12356., 13866., 15376., 12100., 13800., 15500., 17200., 13122., 14988., 16854., 18720., 13770., 15692., 17614., 19536., 13618., 15500., 17382., 19264., 13402., 15308., 17214., 19120., 12100., 13800., 15500., 17200., 11254., 12804., 14354., 15904.,  9680., 11040., 12400., 13760.,  8562.,  9788., 11014., 12240.,  7484.,  8536.,  9588., 10640.,  6654.,  7596.,  8538.,  9480.,  7745.,  8810.,  9875., 10940.,  8648.,  9872., 11096., 12320.,  9539., 10894., 12249., 13604., 10754., 12276., 13798., 15320., 11957., 13618., 15279., 16940., 11865., 13570., 15275., 16980., 11837., 13522., 15207., 16892., 12257., 13986., 15715., 17444., 11138., 12692., 14246., 15800.,  9695., 11102., 12509., 13916.,  8776., 10000., 11224., 12448.,  7885.,  8986., 10087., 11188.,  6750.,  7692.,  8634.,  9576.,  5808.,  6624.,  7440.,  8256.,  6536.,  7472.,  8408.,  9344.,  7744.,  8832.,  9920., 11008.,  8728.,  9936., 11144., 12352.,  9680., 11040., 12400., 13760., 10408., 11888., 13368., 14848., 10888., 12400., 13912., 15424., 10664., 12144., 13624., 15104., 10632., 12144., 13656., 15168.,  9680., 11040., 12400., 13760.,  8952., 10192., 11432., 12672.,  7744.,  8832.,  9920., 11008.,  6760.,  7728.,  8696.,  9664.,  5808.,  6624.,  7440.,  8256.,  5202.,  5940.,  6678.,  7416.,  5983.,  6814.,  7645.,  8476.,  6712.,  7664.,  8616.,  9568.,  7533.,  8602.,  9671., 10740.,  8558.,  9772., 10986., 12200.,  9579., 10902., 12225., 13548.,  9319., 10662., 12005., 13348.,  9123., 10422., 11721., 13020.,  9375., 10694., 12013., 13332.,  8494.,  9676., 10858., 12040.,  7409.,  8490.,  9571., 10652.,  6840.,  7792.,  8744.,  9696.,  6067.,  6926.,  7785.,  8644.,  5298.,  6036.,  6774.,  7512.,  4580.,  5224.,  5868.,  6512.,  5014.,  5732.,  6450.,  7168.,  5808.,  6624.,  7440.,  8256.,  6482.,  7388.,  8294.,  9200.,  7260.,  8280.,  9300., 10320.,  7918.,  9044., 10170., 11296.,  8326.,  9492., 10658., 11824.,  8286.,  9428., 10570., 11712.,  8086.,  9236., 10386., 11536.,  7260.,  8280.,  9300., 10320.,  6778.,  7708.,  8638.,  9568.,  5808.,  6624.,  7440.,  8256.,  5182.,  5924.,  6666.,  7408.,  4580.,  5224.,  5868.,  6512.,  4132.,  4712.,  5292.,  5872.,  4982.,  5668.,  6354.,  7040.,  5808.,  6624.,  7440.,  8256.,  6290.,  7196.,  8102.,  9008.,  7260.,  8280.,  9300., 10320.,  7886.,  8980., 10074., 11168.,  7686.,  8788.,  9890., 10992.,  7646.,  8724.,  9802., 10880.,  8054.,  9172., 10290., 11408.,  7260.,  8280.,  9300., 10320.,  6586.,  7516.,  8446.,  9376.,  5808.,  6624.,  7440.,  8256.,  5150.,  5860.,  6570.,  7280.,  4132.,  4712.,  5292.,  5872.,  4866.,  5556.,  6246.,  6936.,  5655.,  6462.,  7269.,  8076.,  6712.,  7664.,  8616.,  9568.,  7701.,  8762.,  9823., 10884.,  8446.,  9644., 10842., 12040.,  9123., 10422., 11721., 13020.,  9375., 10694., 12013., 13332.,  9179., 10454., 11729., 13004.,  8919., 10214., 11509., 12804.,  8382.,  9548., 10714., 11880.,  7577.,  8650.,  9723., 10796.,  6840.,  7792.,  8744.,  9696.,  5739.,  6574.,  7409.,  8244.,  4962.,  5652.,  6342.,  7032.,  5808.,  6624.,  7440.,  8256.,  6792.,  7728.,  8664.,  9600.,  7744.,  8832.,  9920., 11008.,  8472.,  9680., 10888., 12096.,  9680., 11040., 12400., 13760., 10664., 12144., 13624., 15104., 10632., 12144., 13656., 15168., 10408., 11888., 13368., 14848., 10888., 12400., 13912., 15424.,  9680., 11040., 12400., 13760.,  8696.,  9936., 11176., 12416.,  7744.,  8832.,  9920., 11008.,  7016.,  7984.,  8952.,  9920.,  5808.,  6624.,  7440.,  8256.,  6318.,  7212.,  8106.,  9000.,  7225.,  8266.,  9307., 10348.,  8648.,  9872., 11096., 12320.,  9771., 11118., 12465., 13812., 10642., 12148., 13654., 15160., 11565., 13202., 14839., 16476., 11985., 13666., 15347., 17028., 11957., 13618., 15279., 16940., 11865., 13570., 15275., 16980., 11026., 12564., 14102., 15640.,  9927., 11326., 12725., 14124.,  8776., 10000., 11224., 12448.,  7365.,  8442.,  9519., 10596.,  6414.,  7308.,  8202.,  9096.,  7036.,  8024.,  9012., 10000.,  8378.,  9532., 10686., 11840.,  9680., 11040., 12400., 13760., 10526., 12036., 13546., 15056., 12100., 13800., 15500., 17200., 13218., 15052., 16886., 18720., 13002., 14860., 16718., 18576., 12850., 14668., 16486., 18304., 13498., 15372., 17246., 19120., 12100., 13800., 15500., 17200., 10934., 12484., 14034., 15584.,  9680., 11040., 12400., 13760.,  8658.,  9852., 11046., 12240.,  7036.,  8024.,  9012., 10000.,  7770.,  8868.,  9966., 11064.,  8923., 10198., 11473., 12748., 10584., 12080., 13576., 15072., 12065., 13730., 15395., 17060., 13286., 15164., 17042., 18920., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 13222., 15068., 16914., 18760., 12053., 13746., 15439., 17132., 10712., 12208., 13704., 15200.,  9119., 10438., 11757., 13076.,  7866.,  8964., 10062., 11160.,  8106.,  9252., 10398., 11544.,  9379., 10678., 11977., 13276., 10584., 12080., 13576., 15072., 11769., 13442., 15115., 16788., 13398., 15292., 17186., 19080., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 13334., 15196., 17058., 18920., 11757., 13458., 15159., 16860., 10712., 12208., 13704., 15200.,  9575., 10918., 12261., 13604.,  8202.,  9348., 10494., 11640.,  7484.,  8536.,  9588., 10640.,  8282.,  9468., 10654., 11840.,  9680., 11040., 12400., 13760., 10846., 12356., 13866., 15376., 12100., 13800., 15500., 17200., 13122., 14988., 16854., 18720., 13770., 15692., 17614., 19536., 13618., 15500., 17382., 19264., 13402., 15308., 17214., 19120., 12100., 13800., 15500., 17200., 11254., 12804., 14354., 15904.,  9680., 11040., 12400., 13760.,  8562.,  9788., 11014., 12240.,  7484.,  8536.,  9588., 10640.,  6654.,  7596.,  8538.,  9480.,  7745.,  8810.,  9875., 10940.,  8648.,  9872., 11096., 12320.,  9539., 10894., 12249., 13604., 10754., 12276., 13798., 15320., 11957., 13618., 15279., 16940., 11865., 13570., 15275., 16980., 11837., 13522., 15207., 16892., 12257., 13986., 15715., 17444., 11138., 12692., 14246., 15800.,  9695., 11102., 12509., 13916.,  8776., 10000., 11224., 12448.,  7885.,  8986., 10087., 11188.,  6750.,  7692.,  8634.,  9576.,  5808.,  6624.,  7440.,  8256.,  6536.,  7472.,  8408.,  9344.,  7744.,  8832.,  9920., 11008.,  8728.,  9936., 11144., 12352.,  9680., 11040., 12400., 13760., 10408., 11888., 13368., 14848., 10888., 12400., 13912., 15424., 10664., 12144., 13624., 15104., 10632., 12144., 13656., 15168.,  9680., 11040., 12400., 13760.,  8952., 10192., 11432., 12672.,  7744.,  8832.,  9920., 11008.,  6760.,  7728.,  8696.,  9664.,  5808.,  6624.,  7440.,  8256.,  5202.,  5940.,  6678.,  7416.,  5983.,  6814.,  7645.,  8476.,  6712.,  7664.,  8616.,  9568.,  7533.,  8602.,  9671., 10740.,  8558.,  9772., 10986., 12200.,  9579., 10902., 12225., 13548.,  9319., 10662., 12005., 13348.,  9123., 10422., 11721., 13020.,  9375., 10694., 12013., 13332.,  8494.,  9676., 10858., 12040.,  7409.,  8490.,  9571., 10652.,  6840.,  7792.,  8744.,  9696.,  6067.,  6926.,  7785.,  8644.,  5298.,  6036.,  6774.,  7512.,  4580.,  5224.,  5868.,  6512.,  5014.,  5732.,  6450.,  7168.,  5808.,  6624.,  7440.,  8256.,  6482.,  7388.,  8294.,  9200.,  7260.,  8280.,  9300., 10320.,  7918.,  9044., 10170., 11296.,  8326.,  9492., 10658., 11824.,  8286.,  9428., 10570., 11712.,  8086.,  9236., 10386., 11536.,  7260.,  8280.,  9300., 10320.,  6778.,  7708.,  8638.,  9568.,  5808.,  6624.,  7440.,  8256.,  5182.,  5924.,  6666.,  7408.,  4580.,  5224.,  5868.,  6512.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x14x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x14x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x14x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x14x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x14x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x12x14x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x12x14x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x12x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2095., 2356., 2652., 2993., 3597., 4266., 4619., 4523., 4236., 3812., 3433., 2817., 3215., 3484., 3796., 3872., 4169., 4552., 4655., 4302., 4028., 3696., 3393., 3126., 3500., 4224., 4928., 5428., 6084., 6568., 6428., 5548., 4752., 3968., 3444., 2964., 3246., 3812., 4560., 5401., 6342., 7374., 7798., 7229., 6548., 5684., 4790., 3939., 3885., 4300., 4852., 5291., 6039., 6894., 7313., 7049., 6500., 5852., 5387., 4715., 4817., 5564., 6380., 6966., 7551., 7996., 7985., 7144., 6348., 5528., 4951., 4436., 4741., 5728., 6716., 7422., 8315., 9064., 9085., 8252., 7276., 6088., 5195., 4368., 4025., 4788., 5740., 6614., 7607., 8708., 9161., 8480., 7708., 6776., 5839., 4972., 3935., 4460., 5116., 5653., 6285., 7002., 7443., 7079., 6676., 6164., 5601., 4837., 3696., 4396., 5160., 5835., 6348., 6690., 6712., 6043., 5396., 4700., 4172., 3693., 2964., 3552., 4384., 5148., 5996., 6664., 6772., 6244., 5536., 4576., 3884., 3244., 2515., 2996., 3652., 4060., 4533., 5064., 5427., 5322., 5084., 4640., 4013., 3434., 2357., 2660., 3076., 3343., 3663., 4030., 4273., 4069., 3788., 3356., 3067., 2815., 3103., 3344., 3612., 3629., 3853., 4150., 4167., 3819., 3544., 3204., 2885., 2593., 3283., 3944., 4580., 5008., 5589., 5996., 5779., 4978., 4260., 3552., 3101., 2690., 3020., 3504., 4160., 4900., 5732., 6648., 6956., 6284., 5696., 4928., 4132., 3380., 3794., 4172., 4672., 5045., 5714., 6478., 6806., 6529., 5960., 5284., 4782., 4063., 4621., 5312., 6068., 6591., 7111., 7490., 7413., 6649., 5928., 5180., 4671., 4219., 4741., 5728., 6716., 7422., 8315., 9064., 9085., 8252., 7276., 6088., 5195., 4368., 4025., 4788., 5740., 6614., 7607., 8708., 9161., 8480., 7708., 6776., 5839., 4972., 4285., 4776., 5404., 5918., 6739., 7664., 8149., 7764., 7100., 6344., 5779., 5016., 4351., 5032., 5788., 6465., 6989., 7350., 7359., 6567., 5808., 5012., 4445., 3925., 3620., 4412., 5208., 5951., 6792., 7466., 7488., 6863., 6080., 5068., 4332., 3641., 2804., 3248., 3872., 4460., 5132., 5880., 6308., 5956., 5488., 4832., 4220., 3660., 2951., 3232., 3636., 3900., 4225., 4604., 4839., 4526., 4148., 3632., 3305., 3014., 2565., 3032., 3556., 4115., 4479., 4642., 4549., 3989., 3424., 2780., 2479., 2207., 3055., 3756., 4220., 4457., 4829., 5010., 4963., 4379., 3860., 3332., 2849., 2401., 2487., 2996., 3668., 4416., 5249., 6160., 6471., 5894., 5388., 4688., 3929., 3214., 2988., 3392., 3904., 4276., 4932., 5672., 6044., 5804., 5392., 4864., 4404., 3732., 4454., 4980., 5552., 5873., 6174., 6574., 6646., 6069., 5516., 4916., 4358., 3851., 4269., 5284., 6292., 7011., 7911., 8662., 8681., 7929., 7020., 5884., 5027., 4235., 4025., 4788., 5740., 6614., 7607., 8708., 9161., 8480., 7708., 6776., 5839., 4972., 4285., 4776., 5404., 5918., 6739., 7664., 8149., 7764., 7100., 6344., 5779., 5016., 4817., 5564., 6380., 6966., 7551., 7996., 7985., 7144., 6348., 5528., 4951., 4436., 4431., 5364., 6300., 6957., 7725., 8338., 8283., 7527., 6620., 5492., 4649., 3861., 3336., 3948., 4744., 5459., 6276., 7186., 7464., 6963., 6364., 5596., 4812., 4085., 3348., 3680., 4128., 4444., 4844., 5320., 5556., 5220., 4832., 4320., 4012., 3500., 3307., 3900., 4548., 5020., 5309., 5408., 5243., 4562., 3884., 3136., 2741., 2386., 2341., 2796., 3492., 4103., 4783., 5270., 5209., 4837., 4276., 3452., 2883., 2351.};
  const std::array<int, 4> in_shape = {{ 3, 13, 12, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x12x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {7996., 7985., 9064., 9085., 8708., 9161., 9064., 9085., 8708., 9161., 7664., 8149., 8708., 9161., 7664., 8149., 7996., 7985.};
  const std::array<int, 4> in_shape = {{ 3, 13, 12, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x12x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2328., 2606., 2660., 2984., 3024., 3400., 3312., 3730., 3608., 4074., 3980., 4500., 4140., 4678., 3964., 4454., 3572., 4008., 3152., 3528., 2860., 3202., 2420., 2722., 2899., 3246., 3360., 3768., 3852., 4328., 4281., 4800., 4681., 5250., 5118., 5744., 5231., 5870., 4807., 5388., 4260., 4776., 3524., 3968., 3077., 3474., 2773., 3116., 3072., 3464., 3728., 4192., 4352., 4896., 4784., 5384., 5376., 6040., 5936., 6672., 6000., 6760., 5504., 6200., 4976., 5600., 4352., 4896., 3920., 4408., 3456., 3880., 3263., 3676., 3884., 4376., 4668., 5248., 5133., 5778., 5709., 6428., 6458., 7260., 6743., 7580., 6231., 7002., 5568., 6264., 4884., 5496., 4277., 4828., 3717., 4198., 3968., 4442., 4460., 5016., 5072., 5720., 5512., 6230., 6208., 7006., 7028., 7916., 7484., 8402., 7004., 7842., 6028., 6776., 5136., 5784., 4668., 5254., 4068., 4582., 4243., 4786., 5080., 5720., 5964., 6712., 6777., 7596., 7481., 8382., 8006., 9000., 8071., 9090., 7375., 8304., 6604., 7432., 5764., 6480., 5213., 5854., 4621., 5176., 4515., 5082., 5572., 6240., 6348., 7128., 6757., 7612., 7433., 8374., 8114., 9152., 8243., 9306., 7759., 8728., 7080., 7944., 6148., 6896., 5353., 6022., 4589., 5168., 4083., 4610., 4944., 5576., 5964., 6712., 6577., 7404., 7321., 8238., 8254., 9272., 8463., 9522., 7695., 8672., 6836., 7720., 6020., 6800., 5269., 5966., 4621., 5224., 3684., 4142., 4356., 4904., 5136., 5784., 5732., 6458., 6364., 7178., 7092., 8004., 7576., 8534., 7016., 7902., 6340., 7144., 5744., 6456., 5120., 5762., 4376., 4938., 3331., 3744., 3948., 4440., 4604., 5184., 5201., 5846., 5769., 6488., 6370., 7172., 6635., 7472., 6179., 6950., 5648., 6344., 4980., 5592., 4449., 5000., 3833., 4314., 3072., 3464., 3728., 4192., 4352., 4896., 4784., 5384., 5376., 6040., 5936., 6672., 6000., 6760., 5504., 6200., 4976., 5600., 4352., 4896., 3920., 4408., 3456., 3880., 2555., 2886., 3192., 3592., 3980., 4456., 4233., 4760., 4561., 5146., 5030., 5680., 5135., 5814., 4815., 5444., 4492., 5064., 4100., 4608., 3589., 4042., 3101., 3492., 2116., 2378., 2428., 2744., 2832., 3208., 3140., 3566., 3692., 4174., 4300., 4844., 4752., 5330., 4480., 5018., 3980., 4472., 3440., 3880., 2968., 3366., 2544., 2894., 2696., 3022., 3108., 3488., 3536., 3976., 3888., 4362., 4200., 4714., 4540., 5100., 4556., 5118., 4204., 4710., 3716., 4160., 3024., 3400., 2604., 2938., 2308., 2594., 2947., 3318., 3548., 3984., 4108., 4616., 4469., 5024., 4985., 5594., 5466., 6136., 5451., 6134., 4967., 5588., 4432., 4984., 3780., 4256., 3297., 3722., 2965., 3332., 3072., 3464., 3632., 4096., 4352., 4896., 4752., 5352., 5248., 5912., 5904., 6640., 6096., 6856., 5504., 6200., 4944., 5568., 4352., 4896., 3824., 4312., 3328., 3752., 3807., 4260., 4248., 4776., 4796., 5408., 5161., 5834., 5773., 6516., 6502., 7324., 6867., 7708., 6439., 7202., 5500., 6176., 4628., 5208., 4161., 4684., 3541., 3998., 4112., 4634., 4892., 5504., 5712., 6424., 6456., 7230., 7088., 7934., 7540., 8468., 7532., 8474., 6828., 7682., 6028., 6784., 5136., 5784., 4716., 5294., 4244., 4742., 4515., 5082., 5572., 6240., 6348., 7128., 6757., 7612., 7433., 8374., 8114., 9152., 8243., 9306., 7759., 8728., 7080., 7944., 6148., 6896., 5353., 6022., 4589., 5168., 4083., 4610., 4944., 5576., 5964., 6712., 6577., 7404., 7321., 8238., 8254., 9272., 8463., 9522., 7695., 8672., 6836., 7720., 6020., 6800., 5269., 5966., 4621., 5224., 4291., 4810., 4876., 5488., 5580., 6296., 6109., 6908., 6889., 7782., 7786., 8784., 8315., 9354., 7823., 8776., 6864., 7720., 6020., 6768., 5361., 6038., 4589., 5184., 3604., 4078., 4340., 4896., 5136., 5784., 5892., 6610., 6636., 7434., 7172., 8060., 7320., 8238., 6680., 7518., 6004., 6752., 5232., 5880., 4720., 5306., 4136., 4650., 3651., 4104., 4456., 4984., 4988., 5600., 5341., 6014., 5865., 6608., 6366., 7188., 6391., 7232., 5843., 6606., 5308., 5984., 4724., 5304., 4221., 4744., 3689., 4146., 3072., 3464., 3632., 4096., 4352., 4896., 4752., 5352., 5248., 5912., 5904., 6640., 6096., 6856., 5504., 6200., 4944., 5568., 4352., 4896., 3824., 4312., 3328., 3752., 2475., 2798., 2916., 3296., 3468., 3912., 3941., 4440., 4417., 4978., 4962., 5592., 5323., 5982., 4911., 5516., 4312., 4856., 3716., 4192., 3281., 3714., 2909., 3292., 2260., 2538., 2588., 2912., 2960., 3336., 3348., 3766., 3676., 4142., 4012., 4532., 4064., 4602., 3728., 4218., 3500., 3936., 3056., 3432., 2872., 3214., 2528., 2830., 2552., 2862., 3236., 3608., 3664., 4104., 3872., 4354., 4216., 4746., 4508., 5092., 4636., 5238., 4380., 4934., 4036., 4536., 3536., 3976., 3052., 3442., 2708., 3042., 2611., 2942., 3032., 3432., 3596., 4072., 4081., 4608., 4649., 5234., 5366., 6016., 5623., 6302., 5127., 5756., 4620., 5192., 4036., 4544., 3453., 3906., 3029., 3420., 3200., 3592., 3728., 4192., 4352., 4896., 4784., 5384., 5248., 5912., 5808., 6544., 6128., 6888., 5632., 6328., 4976., 5600., 4352., 4896., 3920., 4408., 3328., 3752., 3839., 4300., 4500., 5048., 5180., 5824., 5765., 6466., 6221., 6988., 6738., 7580., 6847., 7708., 6327., 7114., 5672., 6376., 4884., 5496., 4445., 4988., 3941., 4406., 3936., 4442., 4844., 5448., 5712., 6424., 6200., 6982., 6944., 7806., 7684., 8636., 7852., 8834., 7420., 8322., 6748., 7560., 5776., 6488., 5052., 5686., 4356., 4902., 4083., 4610., 4944., 5576., 5964., 6712., 6577., 7404., 7321., 8238., 8254., 9272., 8463., 9522., 7695., 8672., 6836., 7720., 6020., 6800., 5269., 5966., 4621., 5224., 4291., 4810., 4876., 5488., 5580., 6296., 6109., 6908., 6889., 7782., 7786., 8784., 8315., 9354., 7823., 8776., 6864., 7720., 6020., 6768., 5361., 6038., 4589., 5184., 4243., 4786., 5080., 5720., 5964., 6712., 6777., 7596., 7481., 8382., 8006., 9000., 8071., 9090., 7375., 8304., 6604., 7432., 5764., 6480., 5213., 5854., 4621., 5176., 4100., 4622., 5076., 5688., 5776., 6488., 6116., 6890., 6652., 7498., 7188., 8116., 7224., 8166., 6664., 7518., 6148., 6904., 5360., 6008., 4688., 5266., 4024., 4522., 3587., 4048., 4276., 4824., 5116., 5760., 5545., 6246., 6089., 6856., 6810., 7652., 6835., 7696., 6083., 6870., 5400., 6104., 4724., 5336., 4073., 4616., 3481., 3946., 3200., 3592., 3728., 4192., 4352., 4896., 4784., 5384., 5248., 5912., 5808., 6544., 6128., 6888., 5632., 6328., 4976., 5600., 4352., 4896., 3920., 4408., 3328., 3752., 2715., 3062., 3200., 3608., 3724., 4200., 4113., 4632., 4465., 5034., 4846., 5472., 4935., 5574., 4623., 5204., 4196., 4712., 3588., 4032., 3277., 3674., 2845., 3188., 2532., 2858., 3020., 3400., 3472., 3912., 3716., 4190., 4108., 4622., 4460., 5020., 4336., 4898., 4000., 4506., 3596., 4040., 3056., 3432., 2664., 2998., 2192., 2478.};
  const std::array<int, 4> in_shape = {{ 3, 13, 12, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x12x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {8006., 9000., 8071., 9090., 8114., 9152., 8243., 9306., 8254., 9272., 8463., 9522., 8114., 9152., 8243., 9306., 8254., 9272., 8463., 9522., 7786., 8784., 8315., 9354., 8254., 9272., 8463., 9522., 7786., 8784., 8315., 9354., 8006., 9000., 8071., 9090.};
  const std::array<int, 4> in_shape = {{ 3, 13, 12, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x12x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 1978.,  2256.,  2534.,  2812.,  2244.,  2568.,  2892.,  3216.,  2600.,  2976.,  3352.,  3728.,  2894.,  3312.,  3730.,  4148.,  3150.,  3616.,  4082.,  4548.,  3504.,  4024.,  4544.,  5064.,  3790.,  4328.,  4866.,  5404.,  3646.,  4136.,  4626.,  5116.,  3124.,  3560.,  3996.,  4432.,  2600.,  2976.,  3352.,  3728.,  2370.,  2712.,  3054.,  3396.,  2090.,  2392.,  2694.,  2996.,  2491.,  2838.,  3185.,  3532.,  2888.,  3296.,  3704.,  4112.,  3292.,  3768.,  4244.,  4720.,  3723.,  4242.,  4761.,  5280.,  4025.,  4594.,  5163.,  5732.,  4330.,  4956.,  5582.,  6208.,  4415.,  5054.,  5693.,  6332.,  4201.,  4782.,  5363.,  5944.,  3812.,  4328.,  4844.,  5360.,  3116.,  3560.,  4004.,  4448.,  2781.,  3178.,  3575.,  3972.,  2531.,  2874.,  3217.,  3560.,  2616.,  3008.,  3400.,  3792.,  3280.,  3744.,  4208.,  4672.,  3808.,  4352.,  4896.,  5440.,  4168.,  4768.,  5368.,  5968.,  4776.,  5440.,  6104.,  6768.,  5248.,  5984.,  6720.,  7456.,  5160.,  5920.,  6680.,  7440.,  4744.,  5440.,  6136.,  6832.,  4336.,  4960.,  5584.,  6208.,  3808.,  4352.,  4896.,  5440.,  3448.,  3936.,  4424.,  4912.,  3096.,  3520.,  3944.,  4368.,  2753.,  3166.,  3579.,  3992.,  3276.,  3768.,  4260.,  4752.,  4052.,  4632.,  5212.,  5792.,  4405.,  5050.,  5695.,  6340.,  4891.,  5610.,  6329.,  7048.,  5634.,  6436.,  7238.,  8040.,  5881.,  6718.,  7555.,  8392.,  5339.,  6110.,  6881.,  7652.,  4776.,  5472.,  6168.,  6864.,  4260.,  4872.,  5484.,  6096.,  3699.,  4250.,  4801.,  5352.,  3321.,  3802.,  4283.,  4764.,  3414.,  3888.,  4362.,  4836.,  3884.,  4440.,  4996.,  5552.,  4504.,  5152.,  5800.,  6448.,  4978.,  5696.,  6414.,  7132.,  5410.,  6208.,  7006.,  7804.,  6000.,  6888.,  7776.,  8664.,  6498.,  7416.,  8334.,  9252.,  6146.,  6984.,  7822.,  8660.,  5292.,  6040.,  6788.,  7536.,  4504.,  5152.,  5800.,  6448.,  4094.,  4680.,  5266.,  5852.,  3510.,  4024.,  4538.,  5052.,  3927.,  4470.,  5013.,  5556.,  4560.,  5200.,  5840.,  6480.,  5196.,  5944.,  6692.,  7440.,  5903.,  6722.,  7541.,  8360.,  6413.,  7314.,  8215.,  9116.,  6922.,  7916.,  8910.,  9904.,  7091.,  8110.,  9129., 10148.,  6701.,  7630.,  8559.,  9488.,  6076.,  6904.,  7732.,  8560.,  5020.,  5736.,  6452.,  7168.,  4537.,  5178.,  5819.,  6460.,  4079.,  4634.,  5189.,  5744.,  3743.,  4310.,  4877.,  5444.,  4684.,  5352.,  6020.,  6688.,  5420.,  6200.,  6980.,  7760.,  5891.,  6746.,  7601.,  8456.,  6725.,  7666.,  8607.,  9548.,  7350.,  8388.,  9426., 10464.,  7135.,  8198.,  9261., 10324.,  6597.,  7566.,  8535.,  9504.,  6032.,  6896.,  7760.,  8624.,  5244.,  5992.,  6740.,  7488.,  4661.,  5330.,  5999.,  6668.,  4247.,  4826.,  5405.,  5984.,  3495.,  4022.,  4549.,  5076.,  4168.,  4800.,  5432.,  6064.,  5196.,  5944.,  6692.,  7440.,  5623.,  6450.,  7277.,  8104.,  6205.,  7122.,  8039.,  8956.,  7138.,  8156.,  9174., 10192.,  7323.,  8382.,  9441., 10500.,  6653.,  7630.,  8607.,  9584.,  6100.,  6984.,  7868.,  8752.,  5468.,  6248.,  7028.,  7808.,  4593.,  5290.,  5987.,  6684.,  4031.,  4634.,  5237.,  5840.,  3310.,  3768.,  4226.,  4684.,  3812.,  4360.,  4908.,  5456.,  4504.,  5152.,  5800.,  6448.,  5026.,  5752.,  6478.,  7204.,  5530.,  6344.,  7158.,  7972.,  6152.,  7064.,  7976.,  8888.,  6722.,  7680.,  8638.,  9596.,  6234.,  7120.,  8006.,  8892.,  5604.,  6408.,  7212.,  8016.,  5016.,  5728.,  6440.,  7152.,  4430.,  5072.,  5714.,  6356.,  3694.,  4256.,  4818.,  5380.,  3017.,  3430.,  3843.,  4256.,  3532.,  4024.,  4516.,  5008.,  4052.,  4632.,  5212.,  5792.,  4669.,  5314.,  5959.,  6604.,  5155.,  5874.,  6593.,  7312.,  5634.,  6436.,  7238.,  8040.,  5873.,  6710.,  7547.,  8384.,  5475.,  6246.,  7017.,  7788.,  5000.,  5696.,  6392.,  7088.,  4324.,  4936.,  5548.,  6160.,  3915.,  4466.,  5017.,  5568.,  3425.,  3906.,  4387.,  4868.,  2616.,  3008.,  3400.,  3792.,  3280.,  3744.,  4208.,  4672.,  3808.,  4352.,  4896.,  5440.,  4168.,  4768.,  5368.,  5968.,  4776.,  5440.,  6104.,  6768.,  5248.,  5984.,  6720.,  7456.,  5160.,  5920.,  6680.,  7440.,  4744.,  5440.,  6136.,  6832.,  4336.,  4960.,  5584.,  6208.,  3808.,  4352.,  4896.,  5440.,  3448.,  3936.,  4424.,  4912.,  3096.,  3520.,  3944.,  4368.,  2187.,  2518.,  2849.,  3180.,  2624.,  3024.,  3424.,  3824.,  3292.,  3768.,  4244.,  4720.,  3571.,  4098.,  4625.,  5152.,  3945.,  4530.,  5115.,  5700.,  4546.,  5196.,  5846.,  6496.,  4647.,  5326.,  6005.,  6684.,  4281.,  4910.,  5539.,  6168.,  3964.,  4536.,  5108.,  5680.,  3564.,  4072.,  4580.,  5088.,  2965.,  3418.,  3871.,  4324.,  2611.,  3002.,  3393.,  3784.,  1874.,  2136.,  2398.,  2660.,  2172.,  2488.,  2804.,  3120.,  2600.,  2976.,  3352.,  3728.,  2942.,  3368.,  3794.,  4220.,  3270.,  3752.,  4234.,  4716.,  3656.,  4200.,  4744.,  5288.,  4014.,  4592.,  5170.,  5748.,  3734.,  4272.,  4810.,  5348.,  3436.,  3928.,  4420.,  4912.,  3112.,  3552.,  3992.,  4432.,  2706.,  3104.,  3502.,  3900.,  2274.,  2624.,  2974.,  3324.,  2346.,  2672.,  2998.,  3324.,  2700.,  3080.,  3460.,  3840.,  3048.,  3488.,  3928.,  4368.,  3414.,  3888.,  4362.,  4836.,  3646.,  4160.,  4674.,  5188.,  3880.,  4440.,  5000.,  5560.,  3894.,  4456.,  5018.,  5580.,  3726.,  4232.,  4738.,  5244.,  3340.,  3784.,  4228.,  4672.,  2600.,  2976.,  3352.,  3728.,  2378.,  2712.,  3046.,  3380.,  2202.,  2488.,  2774.,  3060.,  2435.,  2806.,  3177.,  3548.,  3044.,  3480.,  3916.,  4352.,  3516.,  4024.,  4532.,  5040.,  3807.,  4362.,  4917.,  5472.,  4337.,  4946.,  5555.,  6164.,  4726.,  5396.,  6066.,  6736.,  4555.,  5238.,  5921.,  6604.,  4225.,  4846.,  5467.,  6088.,  3864.,  4416.,  4968.,  5520.,  3340.,  3816.,  4292.,  4768.,  2937.,  3362.,  3787.,  4212.,  2699.,  3066.,  3433.,  3800.,  2616.,  3008.,  3400.,  3792.,  3088.,  3552.,  4016.,  4480.,  3808.,  4352.,  4896.,  5440.,  4104.,  4704.,  5304.,  5904.,  4520.,  5184.,  5848.,  6512.,  5184.,  5920.,  6656.,  7392.,  5352.,  6112.,  6872.,  7632.,  4744.,  5440.,  6136.,  6832.,  4272.,  4896.,  5520.,  6144.,  3808.,  4352.,  4896.,  5440.,  3256.,  3744.,  4232.,  4720.,  2840.,  3264.,  3688.,  4112.,  3289.,  3742.,  4195.,  4648.,  3712.,  4240.,  4768.,  5296.,  4276.,  4888.,  5500.,  6112.,  4689.,  5362.,  6035.,  6708.,  5059.,  5802.,  6545.,  7288.,  5574.,  6396.,  7218.,  8040.,  5997.,  6838.,  7679.,  8520.,  5635.,  6398.,  7161.,  7924.,  4724.,  5400.,  6076.,  6752.,  4036.,  4616.,  5196.,  5776.,  3687.,  4210.,  4733.,  5256.,  3121.,  3578.,  4035.,  4492.,  3782.,  4304.,  4826.,  5348.,  4372.,  4984.,  5596.,  6208.,  4952.,  5664.,  6376.,  7088.,  5594.,  6368.,  7142.,  7916.,  6034.,  6880.,  7726.,  8572.,  6472.,  7400.,  8328.,  9256.,  6570.,  7512.,  8454.,  9396.,  6226.,  7080.,  7934.,  8788.,  5604.,  6360.,  7116.,  7872.,  4504.,  5152.,  5800.,  6448.,  4134.,  4712.,  5290.,  5868.,  3750.,  4248.,  4746.,  5244.,  3743.,  4310.,  4877.,  5444.,  4684.,  5352.,  6020.,  6688.,  5420.,  6200.,  6980.,  7760.,  5891.,  6746.,  7601.,  8456.,  6725.,  7666.,  8607.,  9548.,  7350.,  8388.,  9426., 10464.,  7135.,  8198.,  9261., 10324.,  6597.,  7566.,  8535.,  9504.,  6032.,  6896.,  7760.,  8624.,  5244.,  5992.,  6740.,  7488.,  4661.,  5330.,  5999.,  6668.,  4247.,  4826.,  5405.,  5984.,  3495.,  4022.,  4549.,  5076.,  4168.,  4800.,  5432.,  6064.,  5196.,  5944.,  6692.,  7440.,  5623.,  6450.,  7277.,  8104.,  6205.,  7122.,  8039.,  8956.,  7138.,  8156.,  9174., 10192.,  7323.,  8382.,  9441., 10500.,  6653.,  7630.,  8607.,  9584.,  6100.,  6984.,  7868.,  8752.,  5468.,  6248.,  7028.,  7808.,  4593.,  5290.,  5987.,  6684.,  4031.,  4634.,  5237.,  5840.,  3727.,  4246.,  4765.,  5284.,  4244.,  4856.,  5468.,  6080.,  4972.,  5688.,  6404.,  7120.,  5547.,  6346.,  7145.,  7944.,  6069.,  6962.,  7855.,  8748.,  6734.,  7732.,  8730.,  9728.,  7303.,  8342.,  9381., 10420.,  6869.,  7822.,  8775.,  9728.,  5992.,  6848.,  7704.,  8560.,  5244.,  5992.,  6740.,  7488.,  4669.,  5346.,  6023.,  6700.,  3975.,  4570.,  5165.,  5760.,  3454.,  3928.,  4402.,  4876.,  3964.,  4520.,  5076.,  5632.,  4504.,  5152.,  5800.,  6448.,  5162.,  5880.,  6598.,  7316.,  5706.,  6504.,  7302.,  8100.,  6208.,  7096.,  7984.,  8872.,  6378.,  7296.,  8214.,  9132.,  5930.,  6768.,  7606.,  8444.,  5500.,  6248.,  6996.,  7744.,  4568.,  5216.,  5864.,  6512.,  4134.,  4720.,  5306.,  5892.,  3646.,  4160.,  4674.,  5188.,  3041.,  3494.,  3947.,  4400.,  3744.,  4272.,  4800.,  5328.,  4276.,  4888.,  5500.,  6112.,  4665.,  5338.,  6011.,  6684.,  5323.,  6066.,  6809.,  7552.,  5862.,  6684.,  7506.,  8328.,  5637.,  6478.,  7319.,  8160.,  5067.,  5830.,  6593.,  7356.,  4596.,  5272.,  5948.,  6624.,  4100.,  4680.,  5260.,  5840.,  3679.,  4202.,  4725.,  5248.,  3289.,  3746.,  4203.,  4660.,  2616.,  3008.,  3400.,  3792.,  3088.,  3552.,  4016.,  4480.,  3808.,  4352.,  4896.,  5440.,  4104.,  4704.,  5304.,  5904.,  4520.,  5184.,  5848.,  6512.,  5184.,  5920.,  6656.,  7392.,  5352.,  6112.,  6872.,  7632.,  4744.,  5440.,  6136.,  6832.,  4272.,  4896.,  5520.,  6144.,  3808.,  4352.,  4896.,  5440.,  3256.,  3744.,  4232.,  4720.,  2840.,  3264.,  3688.,  4112.,  2291.,  2614.,  2937.,  3260.,  2604.,  2984.,  3364.,  3744.,  3068.,  3512.,  3956.,  4400.,  3463.,  3962.,  4461.,  4960.,  3809.,  4370.,  4931.,  5492.,  4238.,  4868.,  5498.,  6128.,  4595.,  5254.,  5913.,  6572.,  4369.,  4974.,  5579.,  6184.,  3824.,  4368.,  4912.,  5456.,  3340.,  3816.,  4292.,  4768.,  2945.,  3378.,  3811.,  4244.,  2555.,  2938.,  3321.,  3704.,  2018.,  2296.,  2574.,  2852.,  2292.,  2616.,  2940.,  3264.,  2600.,  2976.,  3352.,  3728.,  2982.,  3400.,  3818.,  4236.,  3318.,  3784.,  4250.,  4716.,  3616.,  4136.,  4656.,  5176.,  3702.,  4240.,  4778.,  5316.,  3430.,  3920.,  4410.,  4900.,  3236.,  3672.,  4108.,  4544.,  2664.,  3040.,  3416.,  3792.,  2378.,  2720.,  3062.,  3404.,  2098.,  2400.,  2702.,  3004.,  2010.,  2320.,  2630.,  2940.,  2580.,  2952.,  3324.,  3696.,  3048.,  3488.,  3928.,  4368.,  3310.,  3792.,  4274.,  4756.,  3790.,  4320.,  4850.,  5380.,  4112.,  4696.,  5280.,  5864.,  4078.,  4680.,  5282.,  5884.,  3902.,  4456.,  5010.,  5564.,  3604.,  4104.,  4604.,  5104.,  3048.,  3488.,  3928.,  4368.,  2706.,  3096.,  3486.,  3876.,  2506.,  2840.,  3174.,  3508.,  2187.,  2518.,  2849.,  3180.,  2624.,  3024.,  3424.,  3824.,  3292.,  3768.,  4244.,  4720.,  3571.,  4098.,  4625.,  5152.,  3945.,  4530.,  5115.,  5700.,  4546.,  5196.,  5846.,  6496.,  4647.,  5326.,  6005.,  6684.,  4281.,  4910.,  5539.,  6168.,  3964.,  4536.,  5108.,  5680.,  3564.,  4072.,  4580.,  5088.,  2965.,  3418.,  3871.,  4324.,  2611.,  3002.,  3393.,  3784.,  2872.,  3264.,  3656.,  4048.,  3280.,  3744.,  4208.,  4672.,  3808.,  4352.,  4896.,  5440.,  4168.,  4768.,  5368.,  5968.,  4520.,  5184.,  5848.,  6512.,  4992.,  5728.,  6464.,  7200.,  5416.,  6176.,  6936.,  7696.,  5000.,  5696.,  6392.,  7088.,  4336.,  4960.,  5584.,  6208.,  3808.,  4352.,  4896.,  5440.,  3448.,  3936.,  4424.,  4912.,  2840.,  3264.,  3688.,  4112.,  3345.,  3806.,  4267.,  4728.,  3940.,  4488.,  5036.,  5584.,  4500.,  5144.,  5788.,  6432.,  5101.,  5802.,  6503.,  7204.,  5483.,  6250.,  7017.,  7784.,  5898.,  6740.,  7582.,  8424.,  6065.,  6926.,  7787.,  8648.,  5771.,  6558.,  7345.,  8132.,  5104.,  5808.,  6512.,  7216.,  4260.,  4872.,  5484.,  6096.,  3915.,  4458.,  5001.,  5544.,  3529.,  3994.,  4459.,  4924.,  3318.,  3824.,  4330.,  4836.,  4220.,  4824.,  5428.,  6032.,  4952.,  5664.,  6376.,  7088.,  5394.,  6176.,  6958.,  7740.,  6178.,  7040.,  7902.,  8764.,  6736.,  7688.,  8640.,  9592.,  6658.,  7640.,  8622.,  9604.,  6274.,  7176.,  8078.,  8980.,  5772.,  6584.,  7396.,  8208.,  4952.,  5664.,  6376.,  7088.,  4430.,  5064.,  5698.,  6332.,  4054.,  4600.,  5146.,  5692.,  3495.,  4022.,  4549.,  5076.,  4168.,  4800.,  5432.,  6064.,  5196.,  5944.,  6692.,  7440.,  5623.,  6450.,  7277.,  8104.,  6205.,  7122.,  8039.,  8956.,  7138.,  8156.,  9174., 10192.,  7323.,  8382.,  9441., 10500.,  6653.,  7630.,  8607.,  9584.,  6100.,  6984.,  7868.,  8752.,  5468.,  6248.,  7028.,  7808.,  4593.,  5290.,  5987.,  6684.,  4031.,  4634.,  5237.,  5840.,  3727.,  4246.,  4765.,  5284.,  4244.,  4856.,  5468.,  6080.,  4972.,  5688.,  6404.,  7120.,  5547.,  6346.,  7145.,  7944.,  6069.,  6962.,  7855.,  8748.,  6734.,  7732.,  8730.,  9728.,  7303.,  8342.,  9381., 10420.,  6869.,  7822.,  8775.,  9728.,  5992.,  6848.,  7704.,  8560.,  5244.,  5992.,  6740.,  7488.,  4669.,  5346.,  6023.,  6700.,  3975.,  4570.,  5165.,  5760.,  3927.,  4470.,  5013.,  5556.,  4560.,  5200.,  5840.,  6480.,  5196.,  5944.,  6692.,  7440.,  5903.,  6722.,  7541.,  8360.,  6413.,  7314.,  8215.,  9116.,  6922.,  7916.,  8910.,  9904.,  7091.,  8110.,  9129., 10148.,  6701.,  7630.,  8559.,  9488.,  6076.,  6904.,  7732.,  8560.,  5020.,  5736.,  6452.,  7168.,  4537.,  5178.,  5819.,  6460.,  4079.,  4634.,  5189.,  5744.,  3438.,  3960.,  4482.,  5004.,  4292.,  4904.,  5516.,  6128.,  4952.,  5664.,  6376.,  7088.,  5362.,  6136.,  6910.,  7684.,  6074.,  6920.,  7766.,  8612.,  6584.,  7512.,  8440.,  9368.,  6290.,  7232.,  8174.,  9116.,  5690.,  6544.,  7398.,  8252.,  5268.,  6024.,  6780.,  7536.,  4568.,  5216.,  5864.,  6512.,  4014.,  4592.,  5170.,  5748.,  3566.,  4064.,  4562.,  5060.,  3097.,  3558.,  4019.,  4480.,  3620.,  4168.,  4716.,  5264.,  4500.,  5144.,  5788.,  6432.,  4789.,  5490.,  6191.,  6892.,  5235.,  6002.,  6769.,  7536.,  5962.,  6804.,  7646.,  8488.,  5993.,  6854.,  7715.,  8576.,  5267.,  6054.,  6841.,  7628.,  4752.,  5456.,  6160.,  6864.,  4324.,  4936.,  5548.,  6160.,  3555.,  4098.,  4641.,  5184.,  2993.,  3458.,  3923.,  4388.,  2872.,  3264.,  3656.,  4048.,  3280.,  3744.,  4208.,  4672.,  3808.,  4352.,  4896.,  5440.,  4168.,  4768.,  5368.,  5968.,  4520.,  5184.,  5848.,  6512.,  4992.,  5728.,  6464.,  7200.,  5416.,  6176.,  6936.,  7696.,  5000.,  5696.,  6392.,  7088.,  4336.,  4960.,  5584.,  6208.,  3808.,  4352.,  4896.,  5440.,  3448.,  3936.,  4424.,  4912.,  2840.,  3264.,  3688.,  4112.,  2491.,  2838.,  3185.,  3532.,  2888.,  3296.,  3704.,  4112.,  3292.,  3768.,  4244.,  4720.,  3723.,  4242.,  4761.,  5280.,  4025.,  4594.,  5163.,  5732.,  4330.,  4956.,  5582.,  6208.,  4415.,  5054.,  5693.,  6332.,  4201.,  4782.,  5363.,  5944.,  3812.,  4328.,  4844.,  5360.,  3116.,  3560.,  4004.,  4448.,  2781.,  3178.,  3575.,  3972.,  2531.,  2874.,  3217.,  3560.,  2130.,  2456.,  2782.,  3108.,  2652.,  3032.,  3412.,  3792.,  3048.,  3488.,  3928.,  4368.,  3278.,  3752.,  4226.,  4700.,  3686.,  4200.,  4714.,  5228.,  3960.,  4520.,  5080.,  5640.,  3710.,  4272.,  4834.,  5396.,  3318.,  3824.,  4330.,  4836.,  3100.,  3544.,  3988.,  4432.,  2664.,  3040.,  3416.,  3792.,  2290.,  2624.,  2958.,  3292.,  2018.,  2304.,  2590.,  2876.};
  const std::array<int, 4> in_shape = {{ 3, 13, 12, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x12x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6922.,  7916.,  8910.,  9904.,  7091.,  8110.,  9129., 10148.,  7350.,  8388.,  9426., 10464.,  7135.,  8198.,  9261., 10324.,  7138.,  8156.,  9174., 10192.,  7323.,  8382.,  9441., 10500.,  7350.,  8388.,  9426., 10464.,  7135.,  8198.,  9261., 10324.,  7138.,  8156.,  9174., 10192.,  7323.,  8382.,  9441., 10500.,  6734.,  7732.,  8730.,  9728.,  7303.,  8342.,  9381., 10420.,  7138.,  8156.,  9174., 10192.,  7323.,  8382.,  9441., 10500.,  6734.,  7732.,  8730.,  9728.,  7303.,  8342.,  9381., 10420.,  6922.,  7916.,  8910.,  9904.,  7091.,  8110.,  9129., 10148.};
  const std::array<int, 4> in_shape = {{ 3, 13, 12, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x12x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 5096.,  6304.,  7280.,  7560.,  8072.,  8576.,  9188.,  9024.,  8308.,  7280.,  6644.,  5776.,  5582.,  6519.,  7784.,  8681.,  9666., 11003., 11785., 10862.,  9691.,  8008.,  6973.,  6290.,  6416.,  7776.,  9280.,  9968., 11056., 12288., 13104., 12144., 10784.,  9280.,  8592.,  7504.,  7166.,  8651., 10552., 11597., 12386., 13695., 14537., 13510., 12131., 10392.,  9517.,  8554.,  8216.,  9688., 11408., 12032., 13496., 15288., 16596., 15984., 14084., 11664., 10580.,  9200.,  8286., 10215., 12680., 14217., 15650., 17227., 17841., 16206., 14387., 12392., 11333., 10274.,  9262., 11071., 12680., 13249., 14706., 16531., 17913., 17246., 15403., 13160., 11805., 10162.,  8286., 10215., 12680., 14217., 15650., 17227., 17841., 16206., 14387., 12392., 11333., 10274.,  8112., 10012., 11664., 12236., 13360., 14764., 15864., 14904., 13712., 12048., 10824.,  9288.,  6934.,  8399., 10296., 11225., 12378., 14003., 14637., 13326., 11951., 10264.,  9185.,  8002.,  6416.,  7776.,  9280.,  9968., 11056., 12288., 13104., 12144., 10784.,  9280.,  8592.,  7504.,  5374.,  6655.,  8296.,  8785.,  9330., 10195., 10625., 10142.,  9443.,  8264.,  7509.,  6578.,  4768.,  5612.,  6512.,  6972.,  8160.,  9324., 10016.,  9432.,  8312.,  6896.,  6016.,  5128.,  4776.,  5504.,  6512.,  7528.,  8520.,  9760., 10372.,  9472.,  8276.,  6512.,  5844.,  5456.,  5918.,  7055.,  8296.,  8929.,  9874., 10883., 11409., 10750.,  9619.,  8264.,  7637.,  6818.,  6416.,  7648.,  9280., 10096., 11056., 12416., 13232., 12144., 10912.,  9280.,  8464.,  7504.,  7566.,  8835., 10296., 10981., 12402., 14055., 15153., 14486., 12475., 10392.,  9573.,  8378.,  7768.,  9464., 11664., 13088., 14328., 15640., 16436., 15024., 13348., 11408., 10612.,  9776.,  9262., 11071., 12680., 13249., 14706., 16531., 17913., 17246., 15403., 13160., 11805., 10162.,  8286., 10215., 12680., 14217., 15650., 17227., 17841., 16206., 14387., 12392., 11333., 10274.,  9262., 11071., 12680., 13249., 14706., 16531., 17913., 17246., 15403., 13160., 11805., 10162.,  7536.,  9212., 11408., 12716., 14320., 15948., 16536., 14840., 13168., 11280., 10280.,  9224.,  7462.,  9159., 10552., 11185., 12266., 13531., 14421., 13406., 12103., 10776.,  9817.,  8466.,  6416.,  7648.,  9280., 10096., 11056., 12416., 13232., 12144., 10912.,  9280.,  8464.,  7504.,  5454.,  6551.,  7784.,  8649.,  9794., 10971., 11657., 10798.,  9499.,  8008.,  7277.,  6594.,  4832.,  5900.,  7280.,  7772.,  8224.,  8908.,  9088.,  8472.,  8088.,  7152.,  6560.,  5704.,  5096.,  6304.,  7280.,  7560.,  8072.,  8576.,  9188.,  9024.,  8308.,  7280.,  6644.,  5776.,  5582.,  6519.,  7784.,  8681.,  9666., 11003., 11785., 10862.,  9691.,  8008.,  6973.,  6290.,  6416.,  7776.,  9280.,  9968., 11056., 12288., 13104., 12144., 10784.,  9280.,  8592.,  7504.,  7166.,  8651., 10552., 11597., 12386., 13695., 14537., 13510., 12131., 10392.,  9517.,  8554.,  8216.,  9688., 11408., 12032., 13496., 15288., 16596., 15984., 14084., 11664., 10580.,  9200.,  8286., 10215., 12680., 14217., 15650., 17227., 17841., 16206., 14387., 12392., 11333., 10274.,  9262., 11071., 12680., 13249., 14706., 16531., 17913., 17246., 15403., 13160., 11805., 10162.,  8286., 10215., 12680., 14217., 15650., 17227., 17841., 16206., 14387., 12392., 11333., 10274.,  8112., 10012., 11664., 12236., 13360., 14764., 15864., 14904., 13712., 12048., 10824.,  9288.,  6934.,  8399., 10296., 11225., 12378., 14003., 14637., 13326., 11951., 10264.,  9185.,  8002.,  6416.,  7776.,  9280.,  9968., 11056., 12288., 13104., 12144., 10784.,  9280.,  8592.,  7504.,  5374.,  6655.,  8296.,  8785.,  9330., 10195., 10625., 10142.,  9443.,  8264.,  7509.,  6578.,  4768.,  5612.,  6512.,  6972.,  8160.,  9324., 10016.,  9432.,  8312.,  6896.,  6016.,  5128.};
  const std::array<int, 4> in_shape = {{ 3, 13, 12, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x12x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17227., 17841., 16531., 17913., 17227., 17841., 16531., 17913., 17227., 17841., 16531., 17913., 17227., 17841., 16531., 17913., 17227., 17841.};
  const std::array<int, 4> in_shape = {{ 3, 13, 12, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x12x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4428.,  4992.,  5370.,  6048.,  6448.,  7264.,  7054.,  7936.,  7908.,  8880.,  8530.,  9616.,  9106., 10264.,  8948., 10016.,  7902.,  8856.,  6448.,  7264.,  5946.,  6696.,  5468.,  6128.,  5178.,  5820.,  6127.,  6910.,  7512.,  8464.,  8277.,  9298.,  8934., 10052., 10011., 11254., 10467., 11794.,  9934., 11164.,  9189., 10294.,  7704.,  8656.,  6679.,  7546.,  6082.,  6836.,  6064.,  6816.,  7416.,  8320.,  8768.,  9856.,  9352., 10528., 10448., 11744., 11544., 12992., 12312., 13856., 11472., 12896., 10120., 11392.,  8768.,  9856.,  8184.,  9184.,  7088.,  7968.,  6654.,  7484.,  7973.,  8982.,  9832., 11056., 10871., 12186., 11570., 13012., 12953., 14558., 13889., 15602., 13050., 14636., 11591., 13014.,  9768., 10992.,  8877.,  9994.,  8166.,  9140.,  7460.,  8400.,  9078., 10208., 10832., 12192., 11730., 13200., 13132., 14752., 14302., 16112., 15262., 17192., 14684., 16464., 12962., 14552., 10832., 12192., 10038., 11288.,  9012., 10112.,  8210.,  9228.,  9707., 10942., 11896., 13392., 13081., 14690., 14158., 15924., 15911., 17878., 16751., 18850., 15670., 17612., 14377., 16118., 12088., 13584., 10643., 12010.,  9626., 10820.,  8338.,  9388., 10123., 11374., 11896., 13392., 12921., 14546., 14542., 16340., 16007., 18022., 16847., 18994., 15926., 17900., 14089., 15846., 12088., 13584., 11059., 12442.,  9882., 11108.,  8210.,  9228.,  9707., 10942., 11896., 13392., 13081., 14690., 14158., 15924., 15911., 17878., 16751., 18850., 15670., 17612., 14377., 16118., 12088., 13584., 10643., 12010.,  9626., 10820.,  7492.,  8432.,  9214., 10344., 10832., 12192., 11626., 13096., 13164., 14784., 14438., 16248., 15110., 17040., 13964., 15744., 12714., 14304., 11088., 12448., 10014., 11264.,  8676.,  9776.,  6686.,  7516.,  7981.,  8990.,  9832., 11056., 10639., 11954., 11602., 13044., 13217., 14822., 13865., 15578., 12586., 14172., 11471., 12894., 10024., 11248.,  8725.,  9842.,  7574.,  8548.,  6064.,  6816.,  7416.,  8320.,  8768.,  9856.,  9352., 10528., 10448., 11744., 11544., 12992., 12312., 13856., 11472., 12896., 10120., 11392.,  8768.,  9856.,  8184.,  9184.,  7088.,  7968.,  5178.,  5820.,  6127.,  6910.,  7512.,  8464.,  8277.,  9298.,  8934., 10052., 10011., 11254., 10467., 11794.,  9934., 11164.,  9189., 10294.,  7704.,  8656.,  6679.,  7546.,  6082.,  6836.,  4460.,  5024.,  5506.,  6184.,  6448.,  7264.,  6950.,  7832.,  7940.,  8912.,  8666.,  9752.,  8954., 10112.,  8228.,  9296.,  7654.,  8608.,  6704.,  7520.,  5922.,  6672.,  5132.,  5792.,  4556.,  5120.,  5306.,  5984.,  6448.,  7264.,  7246.,  8128.,  7780.,  8752.,  8594.,  9680.,  9170., 10328.,  8820.,  9888.,  8094.,  9048.,  6448.,  7264.,  5882.,  6632.,  5596.,  6256.,  5306.,  5980.,  6415.,  7214.,  7512.,  8464.,  8245.,  9282.,  9318., 10468., 10235., 11526., 10691., 12066., 10190., 11452.,  9029., 10150.,  7704.,  8656.,  6967.,  7850.,  6338.,  7124.,  6064.,  6816.,  7160.,  8064.,  8768.,  9856.,  9608., 10784., 10448., 11744., 11800., 13248., 12568., 14112., 11472., 12896., 10376., 11648.,  8768.,  9856.,  7928.,  8928.,  7088.,  7968.,  6910.,  7772.,  8325.,  9350.,  9832., 11056., 10647., 11978., 11826., 13300., 13113., 14766., 14049., 15810., 13434., 15052., 11495., 12934.,  9768., 10992.,  9229., 10362.,  8294.,  9300.,  7588.,  8528.,  8886., 10016., 10832., 12192., 12050., 13520., 13004., 14624., 14494., 16304., 15454., 17384., 14556., 16336., 13282., 14872., 10832., 12192.,  9846., 11096.,  9140., 10240.,  8338.,  9388., 10123., 11374., 11896., 13392., 12921., 14546., 14542., 16340., 16007., 18022., 16847., 18994., 15926., 17900., 14089., 15846., 12088., 13584., 11059., 12442.,  9882., 11108.,  8210.,  9228.,  9707., 10942., 11896., 13392., 13081., 14690., 14158., 15924., 15911., 17878., 16751., 18850., 15670., 17612., 14377., 16118., 12088., 13584., 10643., 12010.,  9626., 10820.,  8338.,  9388., 10123., 11374., 11896., 13392., 12921., 14546., 14542., 16340., 16007., 18022., 16847., 18994., 15926., 17900., 14089., 15846., 12088., 13584., 11059., 12442.,  9882., 11108.,  7620.,  8560.,  8894., 10024., 10832., 12192., 11818., 13288., 13036., 14656., 14758., 16568., 15430., 17360., 14092., 15872., 13162., 14752., 11088., 12448.,  9694., 10944.,  8548.,  9648.,  6942.,  7804.,  8461.,  9486.,  9832., 11056., 10543., 11874., 11858., 13332., 13249., 14902., 13897., 15658., 12714., 14332., 11247., 12686., 10024., 11248.,  9205., 10338.,  7958.,  8964.,  6064.,  6816.,  7160.,  8064.,  8768.,  9856.,  9608., 10784., 10448., 11744., 11800., 13248., 12568., 14112., 11472., 12896., 10376., 11648.,  8768.,  9856.,  7928.,  8928.,  7088.,  7968.,  5306.,  5980.,  6415.,  7214.,  7512.,  8464.,  8245.,  9282.,  9318., 10468., 10235., 11526., 10691., 12066., 10190., 11452.,  9029., 10150.,  7704.,  8656.,  6967.,  7850.,  6338.,  7124.,  4588.,  5152.,  5314.,  5992.,  6448.,  7264.,  7014.,  7896.,  7812.,  8784.,  8858.,  9944.,  9146., 10304.,  8356.,  9424.,  7974.,  8928.,  6704.,  7520.,  5730.,  6480.,  5004.,  5664.,  4428.,  4992.,  5370.,  6048.,  6448.,  7264.,  7054.,  7936.,  7908.,  8880.,  8530.,  9616.,  9106., 10264.,  8948., 10016.,  7902.,  8856.,  6448.,  7264.,  5946.,  6696.,  5468.,  6128.,  5178.,  5820.,  6127.,  6910.,  7512.,  8464.,  8277.,  9298.,  8934., 10052., 10011., 11254., 10467., 11794.,  9934., 11164.,  9189., 10294.,  7704.,  8656.,  6679.,  7546.,  6082.,  6836.,  6064.,  6816.,  7416.,  8320.,  8768.,  9856.,  9352., 10528., 10448., 11744., 11544., 12992., 12312., 13856., 11472., 12896., 10120., 11392.,  8768.,  9856.,  8184.,  9184.,  7088.,  7968.,  6654.,  7484.,  7973.,  8982.,  9832., 11056., 10871., 12186., 11570., 13012., 12953., 14558., 13889., 15602., 13050., 14636., 11591., 13014.,  9768., 10992.,  8877.,  9994.,  8166.,  9140.,  7460.,  8400.,  9078., 10208., 10832., 12192., 11730., 13200., 13132., 14752., 14302., 16112., 15262., 17192., 14684., 16464., 12962., 14552., 10832., 12192., 10038., 11288.,  9012., 10112.,  8210.,  9228.,  9707., 10942., 11896., 13392., 13081., 14690., 14158., 15924., 15911., 17878., 16751., 18850., 15670., 17612., 14377., 16118., 12088., 13584., 10643., 12010.,  9626., 10820.,  8338.,  9388., 10123., 11374., 11896., 13392., 12921., 14546., 14542., 16340., 16007., 18022., 16847., 18994., 15926., 17900., 14089., 15846., 12088., 13584., 11059., 12442.,  9882., 11108.,  8210.,  9228.,  9707., 10942., 11896., 13392., 13081., 14690., 14158., 15924., 15911., 17878., 16751., 18850., 15670., 17612., 14377., 16118., 12088., 13584., 10643., 12010.,  9626., 10820.,  7492.,  8432.,  9214., 10344., 10832., 12192., 11626., 13096., 13164., 14784., 14438., 16248., 15110., 17040., 13964., 15744., 12714., 14304., 11088., 12448., 10014., 11264.,  8676.,  9776.,  6686.,  7516.,  7981.,  8990.,  9832., 11056., 10639., 11954., 11602., 13044., 13217., 14822., 13865., 15578., 12586., 14172., 11471., 12894., 10024., 11248.,  8725.,  9842.,  7574.,  8548.,  6064.,  6816.,  7416.,  8320.,  8768.,  9856.,  9352., 10528., 10448., 11744., 11544., 12992., 12312., 13856., 11472., 12896., 10120., 11392.,  8768.,  9856.,  8184.,  9184.,  7088.,  7968.,  5178.,  5820.,  6127.,  6910.,  7512.,  8464.,  8277.,  9298.,  8934., 10052., 10011., 11254., 10467., 11794.,  9934., 11164.,  9189., 10294.,  7704.,  8656.,  6679.,  7546.,  6082.,  6836.,  4460.,  5024.,  5506.,  6184.,  6448.,  7264.,  6950.,  7832.,  7940.,  8912.,  8666.,  9752.,  8954., 10112.,  8228.,  9296.,  7654.,  8608.,  6704.,  7520.,  5922.,  6672.,  5132.,  5792.};
  const std::array<int, 4> in_shape = {{ 3, 13, 12, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x12x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {15911., 17878., 16751., 18850., 16007., 18022., 16847., 18994., 15911., 17878., 16751., 18850., 16007., 18022., 16847., 18994., 15911., 17878., 16751., 18850., 16007., 18022., 16847., 18994., 15911., 17878., 16751., 18850., 16007., 18022., 16847., 18994., 15911., 17878., 16751., 18850.};
  const std::array<int, 4> in_shape = {{ 3, 13, 12, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x12x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4020.,  4584.,  5148.,  5712.,  5022.,  5700.,  6378.,  7056.,  5808.,  6624.,  7440.,  8256.,  6090.,  6972.,  7854.,  8736.,  6924.,  7896.,  8868.,  9840.,  7542.,  8628.,  9714., 10800.,  8046.,  9204., 10362., 11520.,  7596.,  8664.,  9732., 10800.,  6594.,  7548.,  8502.,  9456.,  5808.,  6624.,  7440.,  8256.,  5526.,  6276.,  7026.,  7776.,  4692.,  5352.,  6012.,  6672.,  4530.,  5172.,  5814.,  6456.,  5327.,  6110.,  6893.,  7676.,  6712.,  7664.,  8616.,  9568.,  7517.,  8538.,  9559., 10580.,  7886.,  9004., 10122., 11240.,  9083., 10326., 11569., 12812.,  9527., 10854., 12181., 13508.,  8830., 10060., 11290., 12520.,  7929.,  9034., 10139., 11244.,  6840.,  7792.,  8744.,  9696.,  5835.,  6702.,  7569.,  8436.,  5410.,  6164.,  6918.,  7672.,  5360.,  6112.,  6864.,  7616.,  6696.,  7600.,  8504.,  9408.,  7744.,  8832.,  9920., 11008.,  8120.,  9296., 10472., 11648.,  9232., 10528., 11824., 13120., 10056., 11504., 12952., 14400., 10728., 12272., 13816., 15360., 10128., 11552., 12976., 14400.,  8792., 10064., 11336., 12608.,  7744.,  8832.,  9920., 11008.,  7368.,  8368.,  9368., 10368.,  6256.,  7136.,  8016.,  8896.,  5870.,  6700.,  7530.,  8360.,  6873.,  7882.,  8891.,  9900.,  8648.,  9872., 11096., 12320.,  9675., 10990., 12305., 13620., 10194., 11636., 13078., 14520., 11725., 13330., 14935., 16540., 12337., 14050., 15763., 17476., 11362., 12948., 14534., 16120., 10255., 11678., 13101., 14524.,  8776., 10000., 11224., 12448.,  7549.,  8666.,  9783., 10900.,  6974.,  7948.,  8922.,  9896.,  6700.,  7640.,  8580.,  9520.,  8370.,  9500., 10630., 11760.,  9680., 11040., 12400., 13760., 10150., 11620., 13090., 14560., 11540., 13160., 14780., 16400., 12570., 14380., 16190., 18000., 13410., 15340., 17270., 19200., 12660., 14440., 16220., 18000., 10990., 12580., 14170., 15760.,  9680., 11040., 12400., 13760.,  9210., 10460., 11710., 12960.,  7820.,  8920., 10020., 11120.,  7210.,  8228.,  9246., 10264.,  8419.,  9654., 10889., 12124., 10584., 12080., 13576., 15072., 11833., 13442., 15051., 16660., 12502., 14268., 16034., 17800., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13894., 15836., 17778., 19720., 12581., 14322., 16063., 17804., 10712., 12208., 13704., 15200.,  9263., 10630., 11997., 13364.,  8538.,  9732., 10926., 12120.,  7434.,  8484.,  9534., 10584.,  9235., 10486., 11737., 12988., 10584., 12080., 13576., 15072., 11241., 12866., 14491., 16116., 12726., 14524., 16322., 18120., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14118., 16092., 18066., 20040., 11989., 13746., 15503., 17260., 10712., 12208., 13704., 15200., 10079., 11462., 12845., 14228.,  8762.,  9988., 11214., 12440.,  7210.,  8228.,  9246., 10264.,  8419.,  9654., 10889., 12124., 10584., 12080., 13576., 15072., 11833., 13442., 15051., 16660., 12502., 14268., 16034., 17800., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13894., 15836., 17778., 19720., 12581., 14322., 16063., 17804., 10712., 12208., 13704., 15200.,  9263., 10630., 11997., 13364.,  8538.,  9732., 10926., 12120.,  6700.,  7640.,  8580.,  9520.,  8370.,  9500., 10630., 11760.,  9680., 11040., 12400., 13760., 10150., 11620., 13090., 14560., 11540., 13160., 14780., 16400., 12570., 14380., 16190., 18000., 13410., 15340., 17270., 19200., 12660., 14440., 16220., 18000., 10990., 12580., 14170., 15760.,  9680., 11040., 12400., 13760.,  9210., 10460., 11710., 12960.,  7820.,  8920., 10020., 11120.,  5870.,  6700.,  7530.,  8360.,  6873.,  7882.,  8891.,  9900.,  8648.,  9872., 11096., 12320.,  9675., 10990., 12305., 13620., 10194., 11636., 13078., 14520., 11725., 13330., 14935., 16540., 12337., 14050., 15763., 17476., 11362., 12948., 14534., 16120., 10255., 11678., 13101., 14524.,  8776., 10000., 11224., 12448.,  7549.,  8666.,  9783., 10900.,  6974.,  7948.,  8922.,  9896.,  5360.,  6112.,  6864.,  7616.,  6696.,  7600.,  8504.,  9408.,  7744.,  8832.,  9920., 11008.,  8120.,  9296., 10472., 11648.,  9232., 10528., 11824., 13120., 10056., 11504., 12952., 14400., 10728., 12272., 13816., 15360., 10128., 11552., 12976., 14400.,  8792., 10064., 11336., 12608.,  7744.,  8832.,  9920., 11008.,  7368.,  8368.,  9368., 10368.,  6256.,  7136.,  8016.,  8896.,  4530.,  5172.,  5814.,  6456.,  5327.,  6110.,  6893.,  7676.,  6712.,  7664.,  8616.,  9568.,  7517.,  8538.,  9559., 10580.,  7886.,  9004., 10122., 11240.,  9083., 10326., 11569., 12812.,  9527., 10854., 12181., 13508.,  8830., 10060., 11290., 12520.,  7929.,  9034., 10139., 11244.,  6840.,  7792.,  8744.,  9696.,  5835.,  6702.,  7569.,  8436.,  5410.,  6164.,  6918.,  7672.,  4020.,  4584.,  5148.,  5712.,  5022.,  5700.,  6378.,  7056.,  5808.,  6624.,  7440.,  8256.,  6090.,  6972.,  7854.,  8736.,  6924.,  7896.,  8868.,  9840.,  7542.,  8628.,  9714., 10800.,  8046.,  9204., 10362., 11520.,  7596.,  8664.,  9732., 10800.,  6594.,  7548.,  8502.,  9456.,  5808.,  6624.,  7440.,  8256.,  5526.,  6276.,  7026.,  7776.,  4692.,  5352.,  6012.,  6672.,  4020.,  4584.,  5148.,  5712.,  4638.,  5316.,  5994.,  6672.,  5808.,  6624.,  7440.,  8256.,  6474.,  7356.,  8238.,  9120.,  6924.,  7896.,  8868.,  9840.,  7926.,  9012., 10098., 11184.,  8430.,  9588., 10746., 11904.,  7596.,  8664.,  9732., 10800.,  6978.,  7932.,  8886.,  9840.,  5808.,  6624.,  7440.,  8256.,  5142.,  5892.,  6642.,  7392.,  4692.,  5352.,  6012.,  6672.,  4754.,  5428.,  6102.,  6776.,  5887.,  6686.,  7485.,  8284.,  6712.,  7664.,  8616.,  9568.,  7181.,  8218.,  9255., 10292.,  8110.,  9260., 10410., 11560.,  8971., 10262., 11553., 12844.,  9415., 10790., 12165., 13540.,  9054., 10316., 11578., 12840.,  7593.,  8714.,  9835., 10956.,  6840.,  7792.,  8744.,  9696.,  6395.,  7278.,  8161.,  9044.,  5634.,  6420.,  7206.,  7992.,  5360.,  6112.,  6864.,  7616.,  6184.,  7088.,  7992.,  8896.,  7744.,  8832.,  9920., 11008.,  8632.,  9808., 10984., 12160.,  9232., 10528., 11824., 13120., 10568., 12016., 13464., 14912., 11240., 12784., 14328., 15872., 10128., 11552., 12976., 14400.,  9304., 10576., 11848., 13120.,  7744.,  8832.,  9920., 11008.,  6856.,  7856.,  8856.,  9856.,  6256.,  7136.,  8016.,  8896.,  6094.,  6956.,  7818.,  8680.,  7561.,  8586.,  9611., 10636.,  8648.,  9872., 11096., 12320.,  9211., 10542., 11873., 13204., 10418., 11892., 13366., 14840., 11485., 13138., 14791., 16444., 12097., 13858., 15619., 17380., 11586., 13204., 14822., 16440.,  9791., 11230., 12669., 14108.,  8776., 10000., 11224., 12448.,  8237.,  9370., 10503., 11636.,  7198.,  8204.,  9210., 10216.,  6700.,  7640.,  8580.,  9520.,  7730.,  8860.,  9990., 11120.,  9680., 11040., 12400., 13760., 10790., 12260., 13730., 15200., 11540., 13160., 14780., 16400., 13210., 15020., 16830., 18640., 14050., 15980., 17910., 19840., 12660., 14440., 16220., 18000., 11630., 13220., 14810., 16400.,  9680., 11040., 12400., 13760.,  8570.,  9820., 11070., 12320.,  7820.,  8920., 10020., 11120.,  7434.,  8484.,  9534., 10584.,  9235., 10486., 11737., 12988., 10584., 12080., 13576., 15072., 11241., 12866., 14491., 16116., 12726., 14524., 16322., 18120., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14118., 16092., 18066., 20040., 11989., 13746., 15503., 17260., 10712., 12208., 13704., 15200., 10079., 11462., 12845., 14228.,  8762.,  9988., 11214., 12440.,  7210.,  8228.,  9246., 10264.,  8419.,  9654., 10889., 12124., 10584., 12080., 13576., 15072., 11833., 13442., 15051., 16660., 12502., 14268., 16034., 17800., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13894., 15836., 17778., 19720., 12581., 14322., 16063., 17804., 10712., 12208., 13704., 15200.,  9263., 10630., 11997., 13364.,  8538.,  9732., 10926., 12120.,  7434.,  8484.,  9534., 10584.,  9235., 10486., 11737., 12988., 10584., 12080., 13576., 15072., 11241., 12866., 14491., 16116., 12726., 14524., 16322., 18120., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14118., 16092., 18066., 20040., 11989., 13746., 15503., 17260., 10712., 12208., 13704., 15200., 10079., 11462., 12845., 14228.,  8762.,  9988., 11214., 12440.,  6700.,  7640.,  8580.,  9520.,  7730.,  8860.,  9990., 11120.,  9680., 11040., 12400., 13760., 10790., 12260., 13730., 15200., 11540., 13160., 14780., 16400., 13210., 15020., 16830., 18640., 14050., 15980., 17910., 19840., 12660., 14440., 16220., 18000., 11630., 13220., 14810., 16400.,  9680., 11040., 12400., 13760.,  8570.,  9820., 11070., 12320.,  7820.,  8920., 10020., 11120.,  6094.,  6956.,  7818.,  8680.,  7561.,  8586.,  9611., 10636.,  8648.,  9872., 11096., 12320.,  9211., 10542., 11873., 13204., 10418., 11892., 13366., 14840., 11485., 13138., 14791., 16444., 12097., 13858., 15619., 17380., 11586., 13204., 14822., 16440.,  9791., 11230., 12669., 14108.,  8776., 10000., 11224., 12448.,  8237.,  9370., 10503., 11636.,  7198.,  8204.,  9210., 10216.,  5360.,  6112.,  6864.,  7616.,  6184.,  7088.,  7992.,  8896.,  7744.,  8832.,  9920., 11008.,  8632.,  9808., 10984., 12160.,  9232., 10528., 11824., 13120., 10568., 12016., 13464., 14912., 11240., 12784., 14328., 15872., 10128., 11552., 12976., 14400.,  9304., 10576., 11848., 13120.,  7744.,  8832.,  9920., 11008.,  6856.,  7856.,  8856.,  9856.,  6256.,  7136.,  8016.,  8896.,  4754.,  5428.,  6102.,  6776.,  5887.,  6686.,  7485.,  8284.,  6712.,  7664.,  8616.,  9568.,  7181.,  8218.,  9255., 10292.,  8110.,  9260., 10410., 11560.,  8971., 10262., 11553., 12844.,  9415., 10790., 12165., 13540.,  9054., 10316., 11578., 12840.,  7593.,  8714.,  9835., 10956.,  6840.,  7792.,  8744.,  9696.,  6395.,  7278.,  8161.,  9044.,  5634.,  6420.,  7206.,  7992.,  4020.,  4584.,  5148.,  5712.,  4638.,  5316.,  5994.,  6672.,  5808.,  6624.,  7440.,  8256.,  6474.,  7356.,  8238.,  9120.,  6924.,  7896.,  8868.,  9840.,  7926.,  9012., 10098., 11184.,  8430.,  9588., 10746., 11904.,  7596.,  8664.,  9732., 10800.,  6978.,  7932.,  8886.,  9840.,  5808.,  6624.,  7440.,  8256.,  5142.,  5892.,  6642.,  7392.,  4692.,  5352.,  6012.,  6672.,  4020.,  4584.,  5148.,  5712.,  5022.,  5700.,  6378.,  7056.,  5808.,  6624.,  7440.,  8256.,  6090.,  6972.,  7854.,  8736.,  6924.,  7896.,  8868.,  9840.,  7542.,  8628.,  9714., 10800.,  8046.,  9204., 10362., 11520.,  7596.,  8664.,  9732., 10800.,  6594.,  7548.,  8502.,  9456.,  5808.,  6624.,  7440.,  8256.,  5526.,  6276.,  7026.,  7776.,  4692.,  5352.,  6012.,  6672.,  4530.,  5172.,  5814.,  6456.,  5327.,  6110.,  6893.,  7676.,  6712.,  7664.,  8616.,  9568.,  7517.,  8538.,  9559., 10580.,  7886.,  9004., 10122., 11240.,  9083., 10326., 11569., 12812.,  9527., 10854., 12181., 13508.,  8830., 10060., 11290., 12520.,  7929.,  9034., 10139., 11244.,  6840.,  7792.,  8744.,  9696.,  5835.,  6702.,  7569.,  8436.,  5410.,  6164.,  6918.,  7672.,  5360.,  6112.,  6864.,  7616.,  6696.,  7600.,  8504.,  9408.,  7744.,  8832.,  9920., 11008.,  8120.,  9296., 10472., 11648.,  9232., 10528., 11824., 13120., 10056., 11504., 12952., 14400., 10728., 12272., 13816., 15360., 10128., 11552., 12976., 14400.,  8792., 10064., 11336., 12608.,  7744.,  8832.,  9920., 11008.,  7368.,  8368.,  9368., 10368.,  6256.,  7136.,  8016.,  8896.,  5870.,  6700.,  7530.,  8360.,  6873.,  7882.,  8891.,  9900.,  8648.,  9872., 11096., 12320.,  9675., 10990., 12305., 13620., 10194., 11636., 13078., 14520., 11725., 13330., 14935., 16540., 12337., 14050., 15763., 17476., 11362., 12948., 14534., 16120., 10255., 11678., 13101., 14524.,  8776., 10000., 11224., 12448.,  7549.,  8666.,  9783., 10900.,  6974.,  7948.,  8922.,  9896.,  6700.,  7640.,  8580.,  9520.,  8370.,  9500., 10630., 11760.,  9680., 11040., 12400., 13760., 10150., 11620., 13090., 14560., 11540., 13160., 14780., 16400., 12570., 14380., 16190., 18000., 13410., 15340., 17270., 19200., 12660., 14440., 16220., 18000., 10990., 12580., 14170., 15760.,  9680., 11040., 12400., 13760.,  9210., 10460., 11710., 12960.,  7820.,  8920., 10020., 11120.,  7210.,  8228.,  9246., 10264.,  8419.,  9654., 10889., 12124., 10584., 12080., 13576., 15072., 11833., 13442., 15051., 16660., 12502., 14268., 16034., 17800., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13894., 15836., 17778., 19720., 12581., 14322., 16063., 17804., 10712., 12208., 13704., 15200.,  9263., 10630., 11997., 13364.,  8538.,  9732., 10926., 12120.,  7434.,  8484.,  9534., 10584.,  9235., 10486., 11737., 12988., 10584., 12080., 13576., 15072., 11241., 12866., 14491., 16116., 12726., 14524., 16322., 18120., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14118., 16092., 18066., 20040., 11989., 13746., 15503., 17260., 10712., 12208., 13704., 15200., 10079., 11462., 12845., 14228.,  8762.,  9988., 11214., 12440.,  7210.,  8228.,  9246., 10264.,  8419.,  9654., 10889., 12124., 10584., 12080., 13576., 15072., 11833., 13442., 15051., 16660., 12502., 14268., 16034., 17800., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13894., 15836., 17778., 19720., 12581., 14322., 16063., 17804., 10712., 12208., 13704., 15200.,  9263., 10630., 11997., 13364.,  8538.,  9732., 10926., 12120.,  6700.,  7640.,  8580.,  9520.,  8370.,  9500., 10630., 11760.,  9680., 11040., 12400., 13760., 10150., 11620., 13090., 14560., 11540., 13160., 14780., 16400., 12570., 14380., 16190., 18000., 13410., 15340., 17270., 19200., 12660., 14440., 16220., 18000., 10990., 12580., 14170., 15760.,  9680., 11040., 12400., 13760.,  9210., 10460., 11710., 12960.,  7820.,  8920., 10020., 11120.,  5870.,  6700.,  7530.,  8360.,  6873.,  7882.,  8891.,  9900.,  8648.,  9872., 11096., 12320.,  9675., 10990., 12305., 13620., 10194., 11636., 13078., 14520., 11725., 13330., 14935., 16540., 12337., 14050., 15763., 17476., 11362., 12948., 14534., 16120., 10255., 11678., 13101., 14524.,  8776., 10000., 11224., 12448.,  7549.,  8666.,  9783., 10900.,  6974.,  7948.,  8922.,  9896.,  5360.,  6112.,  6864.,  7616.,  6696.,  7600.,  8504.,  9408.,  7744.,  8832.,  9920., 11008.,  8120.,  9296., 10472., 11648.,  9232., 10528., 11824., 13120., 10056., 11504., 12952., 14400., 10728., 12272., 13816., 15360., 10128., 11552., 12976., 14400.,  8792., 10064., 11336., 12608.,  7744.,  8832.,  9920., 11008.,  7368.,  8368.,  9368., 10368.,  6256.,  7136.,  8016.,  8896.,  4530.,  5172.,  5814.,  6456.,  5327.,  6110.,  6893.,  7676.,  6712.,  7664.,  8616.,  9568.,  7517.,  8538.,  9559., 10580.,  7886.,  9004., 10122., 11240.,  9083., 10326., 11569., 12812.,  9527., 10854., 12181., 13508.,  8830., 10060., 11290., 12520.,  7929.,  9034., 10139., 11244.,  6840.,  7792.,  8744.,  9696.,  5835.,  6702.,  7569.,  8436.,  5410.,  6164.,  6918.,  7672.,  4020.,  4584.,  5148.,  5712.,  5022.,  5700.,  6378.,  7056.,  5808.,  6624.,  7440.,  8256.,  6090.,  6972.,  7854.,  8736.,  6924.,  7896.,  8868.,  9840.,  7542.,  8628.,  9714., 10800.,  8046.,  9204., 10362., 11520.,  7596.,  8664.,  9732., 10800.,  6594.,  7548.,  8502.,  9456.,  5808.,  6624.,  7440.,  8256.,  5526.,  6276.,  7026.,  7776.,  4692.,  5352.,  6012.,  6672.};
  const std::array<int, 4> in_shape = {{ 3, 13, 12, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x12x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444.};
  const std::array<int, 4> in_shape = {{ 3, 13, 12, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x12x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.};
  const std::array<int, 4> in_shape = {{ 3, 13, 12, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x12x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590.};
  const std::array<int, 4> in_shape = {{ 3, 13, 12, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x12x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.};
  const std::array<int, 4> in_shape = {{ 3, 13, 12, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x12x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.};
  const std::array<int, 4> in_shape = {{ 3, 13, 12, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x12x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.};
  const std::array<int, 4> in_shape = {{ 3, 13, 12, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x12x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.};
  const std::array<int, 4> in_shape = {{ 3, 13, 12, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x13x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2320., 2630., 2976., 3528., 4104., 4746., 5163., 5148., 4784., 4266., 3584., 2872., 2408., 2876., 3079., 3336., 3768., 4368., 5049., 5056., 5079., 4818., 4744., 4304., 3889., 3298., 3152., 3568., 4256., 4824., 5440., 5888., 5860., 5784., 5216., 4672., 4080., 3544., 3168., 4034., 4360., 4912., 5409., 6098., 6890., 6994., 6986., 6388., 5691., 5000., 4244., 3480., 4504., 5078., 5840., 6428., 7088., 7602., 7429., 7336., 6920., 6290., 5728., 4988., 4336., 4440., 5393., 6232., 7282., 8020., 8867., 8712., 8557., 7542., 6702., 5728., 4967., 4382., 4539., 5176., 5908., 6724., 7869., 8612., 8681., 8654., 8025., 7186., 6260., 5162., 4319., 4622., 5359., 6144., 6886., 7574., 8373., 8410., 8607., 7788., 7062., 6280., 5453., 4704., 4024., 4600., 5424., 6326., 7136., 7780., 7789., 7686., 7064., 6312., 5616., 4986., 4416., 3616., 4200., 4728., 5463., 6028., 6670., 6756., 6970., 6498., 5937., 5296., 4584., 3922., 3136., 3624., 4256., 4704., 5232., 5832., 5844., 5728., 5248., 4712., 4208., 3856., 3552., 2898., 3361., 3920., 4520., 4930., 5399., 5106., 5021., 4520., 4004., 3384., 2987., 2628., 2720., 3020., 3616., 3910., 4264., 4672., 4691., 4726., 4384., 3820., 3280., 2786., 2328., 2764., 3095., 3424., 3857., 4260., 4515., 4500., 4549., 4192., 3959., 3424., 2721., 2288., 3515., 3796., 4148., 4564., 5021., 5528., 5679., 5654., 5129., 4566., 4020., 3370., 2831., 3504., 4148., 4736., 5596., 6112., 6596., 6424., 6188., 5520., 5156., 4608., 4012., 3360., 3937., 4558., 5260., 5938., 6663., 7282., 7594., 7506., 6927., 6122., 5180., 4238., 3577., 4196., 4809., 5392., 6175., 7148., 8205., 8208., 8259., 7552., 7009., 6128., 5303., 4336., 4463., 5228., 6100., 6876., 7721., 8320., 8373., 8410., 7869., 7122., 6356., 5422., 4683., 4690., 5187., 5920., 6606., 7490., 8305., 8406., 8411., 7696., 6902., 6136., 5329., 4540., 4853., 5498., 6332., 6992., 7723., 8306., 8199., 8172., 7635., 6890., 6220., 5380., 4637., 4208., 5113., 5904., 6907., 7552., 8293., 8062., 7831., 6884., 6105., 5184., 4467., 3916., 3963., 4484., 5092., 5778., 6533., 7124., 7258., 7056., 6593., 5914., 5140., 4184., 3471., 3712., 4340., 4992., 5580., 5888., 6276., 6128., 6060., 5536., 5076., 4304., 3724., 3216., 2873., 3394., 4140., 4896., 5527., 5962., 5941., 5648., 5127., 4446., 3740., 3288., 2889., 2448., 2727., 3184., 3573., 4016., 4507., 4734., 4849., 4604., 4239., 3632., 3093., 2596., 2408., 2872., 3312., 3994., 4784., 5148., 5197., 5086., 4512., 4004., 3520., 2970., 2456., 2554., 2945., 3280., 3824., 4442., 5079., 5406., 5909., 5504., 5172., 4488., 3795., 3148., 3248., 3640., 4112., 4496., 5168., 5784., 5852., 5936., 5312., 5000., 4720., 4224., 3776., 3632., 4068., 4728., 5523., 6316., 6986., 6962., 7050., 6506., 5865., 5136., 4248., 3642., 4528., 4908., 5392., 5970., 6616., 7336., 7579., 7774., 7256., 6528., 5856., 5090., 4448., 4694., 5639., 6304., 7270., 7918., 8557., 8306., 8199., 7412., 6806., 6136., 5429., 4680., 4345., 5166., 6092., 7016., 8007., 8654., 8867., 8712., 7879., 6842., 5868., 4904., 4233., 4668., 5253., 5816., 6586., 7552., 8607., 8612., 8681., 7898., 7294., 6368., 5499., 4490., 4024., 4842., 5760., 6576., 7264., 7686., 7711., 7704., 7184., 6698., 6176., 5244., 4504., 3430., 3904., 4608., 5405., 6238., 6970., 7120., 7142., 6592., 5939., 5288., 4520., 4012., 3056., 3328., 3776., 4520., 5216., 5728., 5868., 6040., 5792., 5296., 4832., 4168., 3584., 2704., 3379., 3928., 4536., 4748., 5021., 5016., 4963., 4534., 4232., 3744., 3301., 3006., 2464., 2850., 3312., 3828., 4376., 4726., 4825., 4540., 4120., 3698., 3136., 2616., 2320.};
  const std::array<int, 4> in_shape = {{ 3, 13, 13, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x13x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {8867., 8712., 8557., 8612., 8681., 8654., 8373., 8410., 8607., 8320., 8373., 8410., 8305., 8406., 8411., 8306., 8199., 8172., 8557., 8306., 8199., 8654., 8867., 8712., 8607., 8612., 8681.};
  const std::array<int, 4> in_shape = {{ 3, 13, 13, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x13x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2336., 2624., 2719., 3052., 3136., 3520., 3495., 3936., 3832., 4320., 4247., 4788., 4535., 5094., 4487., 5048., 4244., 4752., 3747., 4212., 3184., 3600., 2695., 3056., 2500., 2816., 2783., 3112., 3043., 3422., 3356., 3792., 3836., 4336., 4357., 4912., 5177., 5794., 5098., 5728., 5067., 5694., 4567., 5140., 4288., 4816., 3748., 4224., 3345., 3762., 2901., 3268., 3120., 3520., 3580., 4032., 4320., 4832., 4684., 5264., 5152., 5792., 5628., 6336., 5676., 6392., 5644., 6352., 5328., 5968., 4716., 5296., 4192., 4704., 3564., 4016., 3104., 3504., 3887., 4356., 4408., 4944., 4892., 5504., 5433., 6114., 5901., 6644., 6614., 7428., 6547., 7364., 6528., 7332., 5843., 6568., 5145., 5798., 4612., 5184., 4214., 4712., 3457., 3888., 4072., 4592., 4693., 5292., 5488., 6176., 6133., 6904., 6960., 7808., 7469., 8404., 7541., 8474., 7277., 8192., 6692., 7520., 5865., 6612., 5280., 5936., 4557., 5128., 3972., 4464., 4247., 4800., 5249., 5890., 5868., 6608., 6642., 7476., 7341., 8264., 8183., 9206., 8232., 9264., 8297., 9322., 7527., 8460., 6798., 7644., 5876., 6624., 5087., 5742., 4405., 4972., 4643., 5206., 5206., 5856., 5852., 6600., 6447., 7288., 7481., 8410., 8100., 9128., 8101., 9122., 7910., 8924., 7415., 8338., 6703., 7540., 6100., 6840., 5116., 5764., 4445., 5006., 4495., 5068., 5451., 6110., 6188., 6944., 6924., 7772., 7333., 8268., 8049., 9082., 7986., 9012., 8243., 9262., 7383., 8312., 6672., 7500., 5812., 6544., 5081., 5722., 4357., 4912., 3828., 4320., 4415., 4992., 5232., 5904., 6083., 6844., 6948., 7792., 7535., 8472., 7715., 8650., 7415., 8348., 6632., 7488., 5903., 6672., 5456., 6144., 4847., 5460., 4272., 4800., 3411., 3840., 4060., 4560., 4636., 5216., 5297., 5950., 5753., 6488., 6370., 7196., 6283., 7112., 6452., 7284., 6007., 6772., 5633., 6322., 4948., 5568., 4322., 4880., 3741., 4228., 3152., 3536., 3508., 3952., 4000., 4512., 4372., 4944., 5008., 5648., 5764., 6480., 5924., 6632., 5812., 6528., 5328., 5984., 4676., 5264., 4144., 4672., 3748., 4224., 3424., 3840., 2687., 3044., 3145., 3554., 3692., 4160., 4266., 4784., 4533., 5108., 5119., 5758., 4728., 5348., 4737., 5354., 4367., 4928., 4118., 4616., 3668., 4112., 3287., 3686., 2749., 3096., 2628., 2944., 2989., 3352., 3632., 4048., 3617., 4076., 3748., 4256., 4141., 4704., 4193., 4742., 4261., 4812., 4032., 4528., 3445., 3880., 3104., 3488., 2765., 3108., 2296., 2592., 2500., 2824., 3143., 3518., 3504., 3920., 3971., 4434., 4148., 4664., 4391., 4950., 4343., 4904., 4423., 4986., 4120., 4624., 3975., 4430., 3376., 3776., 2719., 3058., 2144., 2432., 3315., 3702., 3684., 4136., 4012., 4520., 4397., 4968., 4937., 5562., 5362., 6032., 5587., 6254., 5460., 6124., 4879., 5474., 4181., 4716., 3620., 4088., 3082., 3476., 2821., 3150., 3296., 3728., 3900., 4408., 4512., 5088., 5388., 6040., 5952., 6672., 6444., 7224., 6204., 6992., 6108., 6888., 5408., 6112., 5084., 5720., 4464., 5024., 3948., 4424., 3280., 3680., 3767., 4226., 4429., 4972., 5148., 5768., 5570., 6276., 6141., 6926., 6699., 7556., 7032., 7908., 7093., 7972., 6767., 7566., 5918., 6644., 5092., 5736., 4179., 4732., 3597., 4066., 4052., 4552., 4677., 5266., 5168., 5840., 5841., 6606., 6676., 7528., 7813., 8746., 7709., 8656., 7717., 8662., 6864., 7728., 6269., 7058., 5504., 6208., 4973., 5582., 4232., 4752., 4419., 4990., 5234., 5896., 6236., 6984., 6875., 7720., 7689., 8626., 8096., 9120., 8049., 9082., 7986., 9012., 7607., 8538., 6763., 7604., 6100., 6840., 5064., 5708., 4285., 4838., 4575., 5140., 5303., 5958., 5996., 6752., 6744., 7596., 7413., 8356., 8237., 9266., 8286., 9324., 8415., 9446., 7447., 8384., 6524., 7372., 5828., 6576., 5269., 5922., 4405., 4968., 4347., 4906., 5052., 5700., 5932., 6680., 6661., 7504., 7569., 8502., 8154., 9188., 8299., 9342., 8108., 9144., 7511., 8454., 6701., 7556., 6164., 6920., 5250., 5912., 4493., 5066., 3944., 4464., 4875., 5474., 5424., 6112., 6131., 6902., 6720., 7568., 7443., 8378., 7399., 8332., 7371., 8286., 6524., 7352., 5943., 6690., 5152., 5808., 4475., 5046., 3884., 4376., 4163., 4662., 4621., 5192., 5148., 5800., 5614., 6340., 6257., 7050., 6723., 7592., 6748., 7604., 6373., 7200., 5883., 6626., 5338., 6004., 4868., 5448., 3979., 4480., 3361., 3790., 3520., 3968., 4228., 4744., 4944., 5536., 5636., 6296., 5776., 6496., 6196., 6984., 6036., 6816., 6052., 6808., 5408., 6096., 4980., 5592., 4144., 4672., 3636., 4088., 3088., 3472., 2931., 3298., 3314., 3748., 3900., 4408., 4451., 5024., 4985., 5614., 5472., 6164., 5609., 6298., 5218., 5888., 4727., 5342., 4211., 4764., 3812., 4296., 3400., 3824., 2973., 3330., 2352., 2656., 2745., 3102., 3296., 3712., 3657., 4122., 4040., 4560., 4561., 5142., 4501., 5084., 4489., 5058., 4220., 4744., 3941., 4414., 3280., 3696., 2777., 3146., 2268., 2584., 2408., 2704., 2767., 3120., 3056., 3456., 3583., 4036., 4208., 4720., 4487., 5048., 4567., 5130., 4567., 5148., 4252., 4784., 3851., 4328., 3520., 3952., 2967., 3348., 2556., 2880., 2567., 2884., 3125., 3506., 3500., 3936., 4078., 4576., 4461., 5028., 5067., 5694., 5116., 5756., 5501., 6170., 5063., 5680., 4602., 5160., 3924., 4432., 3347., 3798., 2933., 3320., 3120., 3488., 3452., 3888., 3920., 4416., 4300., 4864., 4960., 5600., 5644., 6352., 5884., 6600., 5884., 6624., 5328., 6000., 4764., 5376., 4464., 5024., 4076., 4576., 3616., 4048., 3487., 3936., 4130., 4648., 4716., 5296., 5435., 6086., 5933., 6664., 6528., 7332., 6461., 7268., 6602., 7428., 6155., 6900., 5699., 6370., 4980., 5584., 4256., 4784., 3465., 3924., 4256., 4768., 4869., 5464., 5472., 6144., 5901., 6660., 6760., 7600., 7277., 8192., 7413., 8326., 7437., 8364., 6780., 7616., 5889., 6640., 5232., 5904., 4653., 5236., 4252., 4752., 4271., 4828., 5123., 5774., 5756., 6496., 6676., 7516., 7509., 8444., 8297., 9322., 8154., 9188., 8299., 9342., 7383., 8328., 6776., 7628., 6132., 6896., 5393., 6058., 4549., 5120., 4299., 4850., 5096., 5740., 5980., 6712., 6593., 7424., 7377., 8302., 7910., 8924., 8183., 9206., 8232., 9264., 7751., 8686., 6809., 7652., 6036., 6792., 5006., 5664., 4333., 4898., 4631., 5192., 5405., 6058., 5804., 6544., 6398., 7236., 7165., 8096., 8243., 9262., 8100., 9128., 8101., 9122., 7223., 8148., 6650., 7484., 5940., 6688., 5323., 5974., 4501., 5060., 3628., 4128., 4567., 5156., 5680., 6352., 6419., 7184., 7132., 7984., 7415., 8348., 7355., 8302., 7247., 8192., 6800., 7664., 6239., 7028., 5824., 6528., 4823., 5432., 4072., 4592., 3555., 3980., 4110., 4608., 4620., 5200., 5195., 5866., 5769., 6524., 6452., 7284., 6733., 7584., 7030., 7884., 6271., 7056., 5571., 6294., 5028., 5680., 4468., 5040., 3813., 4312., 2848., 3216., 3188., 3616., 3696., 4192., 4484., 5056., 5328., 5968., 5812., 6528., 5940., 6680., 5892., 6640., 5456., 6144., 4996., 5632., 4704., 5280., 4084., 4592., 3552., 4000., 2423., 2752., 3211., 3590., 3612., 4048., 4060., 4560., 4349., 4904., 4737., 5354., 4890., 5520., 4963., 5590., 4575., 5148., 4352., 4880., 3812., 4288., 3225., 3642., 2909., 3276., 2636., 2944., 2821., 3172., 3072., 3472., 3361., 3816., 3788., 4288., 4261., 4812., 4457., 5010., 4157., 4696., 3832., 4320., 3605., 4052., 3344., 3744., 2805., 3152., 2464., 2768.};
  const std::array<int, 4> in_shape = {{ 3, 13, 13, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x13x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {8183., 9206., 8232., 9264., 8297., 9322., 8100., 9128., 8101., 9122., 7910., 8924., 8049., 9082., 7986., 9012., 8243., 9262., 8096., 9120., 8049., 9082., 7986., 9012., 8237., 9266., 8286., 9324., 8415., 9446., 8154., 9188., 8299., 9342., 8108., 9144., 8297., 9322., 8154., 9188., 8299., 9342., 7910., 8924., 8183., 9206., 8232., 9264., 8243., 9262., 8100., 9128., 8101., 9122.};
  const std::array<int, 4> in_shape = {{ 3, 13, 13, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x13x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2000.,  2288.,  2576.,  2864.,  2241.,  2574.,  2907.,  3240.,  2624.,  3008.,  3392.,  3776.,  2933.,  3374.,  3815.,  4256.,  3352.,  3840.,  4328.,  4816.,  3681.,  4222.,  4763.,  5304.,  3967.,  4526.,  5085.,  5644.,  3853.,  4414.,  4975.,  5536.,  3740.,  4248.,  4756.,  5264.,  3221.,  3686.,  4151.,  4616.,  2816.,  3232.,  3648.,  4064.,  2437.,  2798.,  3159.,  3520.,  2316.,  2632.,  2948.,  3264.,  2245.,  2574.,  2903.,  3232.,  2843.,  3222.,  3601.,  3980.,  3044.,  3480.,  3916.,  4352.,  3396.,  3896.,  4396.,  4896.,  3711.,  4266.,  4821.,  5376.,  4361.,  4978.,  5595.,  6212.,  4318.,  4948.,  5578.,  6208.,  4387.,  5014.,  5641.,  6268.,  3985.,  4558.,  5131.,  5704.,  3888.,  4416.,  4944.,  5472.,  3276.,  3752.,  4228.,  4704.,  2817.,  3234.,  3651.,  4068.,  2507.,  2874.,  3241.,  3608.,  2832.,  3232.,  3632.,  4032.,  3156.,  3608.,  4060.,  4512.,  3776.,  4288.,  4800.,  5312.,  4020.,  4600.,  5180.,  5760.,  4608.,  5248.,  5888.,  6528.,  4948.,  5656.,  6364.,  7072.,  5100.,  5816.,  6532.,  7248.,  4852.,  5560.,  6268.,  6976.,  4576.,  5216.,  5856.,  6496.,  4084.,  4664.,  5244.,  5824.,  3776.,  4288.,  4800.,  5312.,  3124.,  3576.,  4028.,  4480.,  2800.,  3200.,  3600.,  4000.,  3177.,  3646.,  4115.,  4584.,  3736.,  4272.,  4808.,  5344.,  4212.,  4824.,  5436.,  6048.,  4937.,  5618.,  6299.,  6980.,  5123.,  5866.,  6609.,  7352.,  5774.,  6588.,  7402.,  8216.,  5605.,  6422.,  7239.,  8056.,  5804.,  6608.,  7412.,  8216.,  5025.,  5750.,  6475.,  7200.,  4565.,  5218.,  5871.,  6524.,  3948.,  4520.,  5092.,  5664.,  3738.,  4236.,  4734.,  5232.,  3075.,  3506.,  3937.,  4368.,  3640.,  4160.,  4680.,  5200.,  4019.,  4618.,  5217.,  5816.,  4720.,  5408.,  6096.,  6784.,  5239.,  6010.,  6781.,  7552.,  6016.,  6864.,  7712.,  8560.,  6387.,  7322.,  8257.,  9192.,  6661.,  7594.,  8527.,  9460.,  6279.,  7194.,  8109.,  9024.,  5900.,  6728.,  7556.,  8384.,  5095.,  5842.,  6589.,  7336.,  4592.,  5248.,  5904.,  6560.,  3951.,  4522.,  5093.,  5664.,  3596.,  4088.,  4580.,  5072.,  3765.,  4318.,  4871.,  5424.,  4561.,  5202.,  5843.,  6484.,  5076.,  5816.,  6556.,  7296.,  5762.,  6596.,  7430.,  8264.,  6239.,  7162.,  8085.,  9008.,  7183.,  8206.,  9229., 10252.,  7080.,  8112.,  9144., 10176.,  7281.,  8306.,  9331., 10356.,  6489.,  7422.,  8355.,  9288.,  6046.,  6892.,  7738.,  8584.,  5084.,  5832.,  6580.,  7328.,  4495.,  5150.,  5805.,  6460.,  3891.,  4458.,  5025.,  5592.,  4083.,  4646.,  5209.,  5772.,  4546.,  5196.,  5846.,  6496.,  5356.,  6104.,  6852.,  7600.,  5669.,  6510.,  7351.,  8192.,  6593.,  7522.,  8451.,  9380.,  7076.,  8104.,  9132., 10160.,  7149.,  8170.,  9191., 10212.,  6838.,  7852.,  8866.,  9880.,  6611.,  7534.,  8457.,  9380.,  5913.,  6750.,  7587.,  8424.,  5348.,  6088.,  6828.,  7568.,  4336.,  4984.,  5632.,  6280.,  3977.,  4538.,  5099.,  5660.,  3825.,  4398.,  4971.,  5544.,  4595.,  5254.,  5913.,  6572.,  5316.,  6072.,  6828.,  7584.,  6152.,  7000.,  7848.,  8696.,  6371.,  7306.,  8241.,  9176.,  7289.,  8322.,  9355., 10388.,  6978.,  8004.,  9030., 10056.,  7307.,  8326.,  9345., 10364.,  6365.,  7294.,  8223.,  9152.,  5908.,  6736.,  7564.,  8392.,  5100.,  5832.,  6564.,  7296.,  4561.,  5202.,  5843.,  6484.,  3807.,  4362.,  4917.,  5472.,  3420.,  3912.,  4404.,  4896.,  3805.,  4382.,  4959.,  5536.,  4736.,  5408.,  6080.,  6752.,  5341.,  6102.,  6863.,  7624.,  5964.,  6808.,  7652.,  8496.,  6341.,  7278.,  8215.,  9152.,  6607.,  7542.,  8477.,  9412.,  6425.,  7358.,  8291.,  9224.,  5992.,  6848.,  7704.,  8560.,  5181.,  5950.,  6719.,  7488.,  4912.,  5600.,  6288.,  6976.,  4265.,  4878.,  5491.,  6104.,  3712.,  4240.,  4768.,  5296.,  2969.,  3398.,  3827.,  4256.,  3460.,  3960.,  4460.,  4960.,  3860.,  4440.,  5020.,  5600.,  4565.,  5218.,  5871.,  6524.,  5107.,  5842.,  6577.,  7312.,  5834.,  6660.,  7486.,  8312.,  5657.,  6486.,  7315.,  8144.,  5736.,  6568.,  7400.,  8232.,  5201.,  5966.,  6731.,  7496.,  4817.,  5506.,  6195.,  6884.,  4188.,  4808.,  5428.,  6048.,  3830.,  4388.,  4946.,  5504.,  3331.,  3818.,  4305.,  4792.,  2784.,  3168.,  3552.,  3936.,  3148.,  3592.,  4036.,  4480.,  3648.,  4160.,  4672.,  5184.,  3788.,  4360.,  4932.,  5504.,  4448.,  5088.,  5728.,  6368.,  4956.,  5672.,  6388.,  7104.,  5092.,  5800.,  6508.,  7216.,  4924.,  5640.,  6356.,  7072.,  4688.,  5344.,  6000.,  6656.,  4124.,  4712.,  5300.,  5888.,  3664.,  4192.,  4720.,  5248.,  3212.,  3688.,  4164.,  4640.,  2912.,  3328.,  3744.,  4160.,  2361.,  2718.,  3075.,  3432.,  2937.,  3346.,  3755.,  4164.,  3300.,  3768.,  4236.,  4704.,  3758.,  4276.,  4794.,  5312.,  3867.,  4442.,  5017.,  5592.,  4495.,  5134.,  5773.,  6412.,  4164.,  4784.,  5404.,  6024.,  4361.,  4978.,  5595.,  6212.,  3901.,  4462.,  5023.,  5584.,  3674.,  4172.,  4670.,  5168.,  3148.,  3592.,  4036.,  4480.,  2735.,  3134.,  3533.,  3932.,  2367.,  2714.,  3061.,  3408.,  2108.,  2424.,  2740.,  3056.,  2367.,  2730.,  3093.,  3456.,  3072.,  3488.,  3904.,  4320.,  3239.,  3698.,  4157.,  4616.,  3564.,  4072.,  4580.,  5088.,  3783.,  4346.,  4909.,  5472.,  3901.,  4450.,  4999.,  5548.,  3779.,  4330.,  4881.,  5432.,  3424.,  3920.,  4416.,  4912.,  2951.,  3386.,  3821.,  4256.,  2816.,  3200.,  3584.,  3968.,  2403.,  2746.,  3089.,  3432.,  2040.,  2336.,  2632.,  2928.,  2116.,  2440.,  2764.,  3088.,  2695.,  3070.,  3445.,  3820.,  2944.,  3360.,  3776.,  4192.,  3303.,  3766.,  4229.,  4692.,  3476.,  3992.,  4508.,  5024.,  4063.,  4622.,  5181.,  5740.,  3949.,  4510.,  5071.,  5632.,  4091.,  4654.,  5217.,  5780.,  3528.,  4032.,  4536.,  5040.,  3383.,  3838.,  4293.,  4748.,  2832.,  3232.,  3632.,  4032.,  2443.,  2782.,  3121.,  3460.,  2000.,  2288.,  2576.,  2864.,  2643.,  3030.,  3417.,  3804.,  3012.,  3464.,  3916.,  4368.,  3580.,  4088.,  4596.,  5104.,  3935.,  4506.,  5077.,  5648.,  4481.,  5106.,  5731.,  6356.,  4550.,  5220.,  5890.,  6560.,  4619.,  5286.,  5953.,  6620.,  4496.,  5160.,  5824.,  6488.,  4267.,  4862.,  5457.,  6052.,  3667.,  4202.,  4737.,  5272.,  3348.,  3816.,  4284.,  4752.,  2698.,  3092.,  3486.,  3880.,  2433.,  2762.,  3091.,  3420.,  3024.,  3456.,  3888.,  4320.,  3548.,  4056.,  4564.,  5072.,  3840.,  4416.,  4992.,  5568.,  4524.,  5176.,  5828.,  6480.,  4976.,  5696.,  6416.,  7136.,  5548.,  6328.,  7108.,  7888.,  5380.,  6168.,  6956.,  7744.,  5516.,  6296.,  7076.,  7856.,  4800.,  5504.,  6208.,  6912.,  4444.,  5080.,  5716.,  6352.,  3760.,  4320.,  4880.,  5440.,  3420.,  3896.,  4372.,  4848.,  2768.,  3168.,  3568.,  3968.,  3267.,  3726.,  4185.,  4644.,  3771.,  4314.,  4857.,  5400.,  4396.,  5016.,  5636.,  6256.,  4802.,  5508.,  6214.,  6920.,  5481.,  6266.,  7051.,  7836.,  5869.,  6726.,  7583.,  8440.,  6228.,  7104.,  7980.,  8856.,  6059.,  6938.,  7817.,  8696.,  5807.,  6606.,  7405.,  8204.,  4998.,  5724.,  6450.,  7176.,  4516.,  5160.,  5804.,  6448.,  3757.,  4310.,  4863.,  5416.,  3413.,  3882.,  4351.,  4820.,  3396.,  3896.,  4396.,  4896.,  4333.,  4922.,  5511.,  6100.,  4736.,  5408.,  6080.,  6752.,  5349.,  6114.,  6879.,  7644.,  5780.,  6632.,  7484.,  8336.,  6693.,  7626.,  8559.,  9492.,  6599.,  7546.,  8493.,  9440.,  6745.,  7690.,  8635.,  9580.,  6032.,  6896.,  7760.,  8624.,  5781.,  6570.,  7359.,  8148.,  4864.,  5568.,  6272.,  6976.,  4313.,  4922.,  5531.,  6140.,  3608.,  4128.,  4648.,  5168.,  3947.,  4518.,  5089.,  5660.,  4526.,  5188.,  5850.,  6512.,  5356.,  6104.,  6852.,  7600.,  5817.,  6662.,  7507.,  8352.,  6681.,  7618.,  8555.,  9492.,  7072.,  8096.,  9120., 10144.,  7289.,  8322.,  9355., 10388.,  6978.,  8004.,  9030., 10056.,  6667.,  7598.,  8529.,  9460.,  5837.,  6678.,  7519.,  8360.,  5348.,  6088.,  6828.,  7568.,  4364.,  5008.,  5652.,  6296.,  3921.,  4474.,  5027.,  5580.,  3801.,  4366.,  4931.,  5496.,  4495.,  5150.,  5805.,  6460.,  5188.,  5944.,  6700.,  7456.,  6108.,  6960.,  7812.,  8664.,  6459.,  7402.,  8345.,  9288.,  7157.,  8186.,  9215., 10244.,  7054.,  8092.,  9130., 10168.,  7383.,  8414.,  9445., 10476.,  6421.,  7358.,  8295.,  9232.,  5912.,  6760.,  7608.,  8456.,  5116.,  5864.,  6612.,  7360.,  4797.,  5450.,  6103.,  6756.,  3895.,  4458.,  5021.,  5584.,  3911.,  4470.,  5029.,  5588.,  4336.,  4984.,  5632.,  6280.,  5132.,  5880.,  6628.,  7376.,  5743.,  6586.,  7429.,  8272.,  6605.,  7538.,  8471.,  9404.,  7050.,  8084.,  9118., 10152.,  7395.,  8438.,  9481., 10524.,  7084.,  8120.,  9156., 10192.,  6623.,  7566.,  8509.,  9452.,  5795.,  6650.,  7505.,  8360.,  5332.,  6088.,  6844.,  7600.,  4526.,  5188.,  5850.,  6512.,  4061.,  4634.,  5207.,  5780.,  3544.,  4064.,  4584.,  5104.,  4271.,  4870.,  5469.,  6068.,  4720.,  5408.,  6096.,  6784.,  5347.,  6118.,  6889.,  7660.,  5728.,  6576.,  7424.,  8272.,  6575.,  7510.,  8445.,  9380.,  6393.,  7326.,  8259.,  9192.,  6515.,  7430.,  8345.,  9260.,  5660.,  6488.,  7316.,  8144.,  5347.,  6094.,  6841.,  7588.,  4464.,  5120.,  5776.,  6432.,  3899.,  4470.,  5041.,  5612.,  3260.,  3752.,  4244.,  4736.,  3587.,  4086.,  4585.,  5084.,  3999.,  4570.,  5141.,  5712.,  4748.,  5400.,  6052.,  6704.,  4998.,  5724.,  6450.,  7176.,  5609.,  6402.,  7195.,  7988.,  5985.,  6854.,  7723.,  8592.,  6048.,  6904.,  7760.,  8616.,  5583.,  6410.,  7237.,  8064.,  5295.,  6038.,  6781.,  7524.,  4634.,  5300.,  5966.,  6632.,  4260.,  4840.,  5420.,  6000.,  3345.,  3846.,  4347.,  4848.,  2981.,  3410.,  3839.,  4268.,  3072.,  3520.,  3968.,  4416.,  3556.,  4072.,  4588.,  5104.,  4176.,  4768.,  5360.,  5952.,  4884.,  5544.,  6204.,  6864.,  5008.,  5728.,  6448.,  7168.,  5556.,  6344.,  7132.,  7920.,  5308.,  6088.,  6868.,  7648.,  5428.,  6184.,  6940.,  7696.,  4688.,  5376.,  6064.,  6752.,  4388.,  5000.,  5612.,  6224.,  3664.,  4192.,  4720.,  5248.,  3332.,  3784.,  4236.,  4688.,  2656.,  3040.,  3424.,  3808.,  2519.,  2886.,  3253.,  3620.,  2866.,  3300.,  3734.,  4168.,  3484.,  3992.,  4500.,  5008.,  3961.,  4534.,  5107.,  5680.,  4429.,  5058.,  5687.,  6316.,  4684.,  5376.,  6068.,  6760.,  4881.,  5570.,  6259.,  6948.,  4550.,  5220.,  5890.,  6560.,  4279.,  4894.,  5509.,  6124.,  3693.,  4246.,  4799.,  5352.,  3460.,  3944.,  4428.,  4912.,  2920.,  3344.,  3768.,  4192.,  2597.,  2954.,  3311.,  3668.,  2048.,  2352.,  2656.,  2960.,  2445.,  2802.,  3159.,  3516.,  2784.,  3200.,  3616.,  4032.,  3153.,  3618.,  4083.,  4548.,  3544.,  4064.,  4584.,  5104.,  4093.,  4674.,  5255.,  5836.,  3971.,  4554.,  5137.,  5720.,  3961.,  4530.,  5099.,  5668.,  3548.,  4072.,  4596.,  5120.,  3345.,  3818.,  4291.,  4764.,  2752.,  3168.,  3584.,  4000.,  2449.,  2818.,  3187.,  3556.,  2076.,  2392.,  2708.,  3024.,  2040.,  2336.,  2632.,  2928.,  2381.,  2734.,  3087.,  3440.,  2704.,  3104.,  3504.,  3904.,  3001.,  3454.,  3907.,  4360.,  3632.,  4144.,  4656.,  5168.,  3853.,  4414.,  4975.,  5536.,  3995.,  4558.,  5121.,  5684.,  3961.,  4542.,  5123.,  5704.,  3796.,  4328.,  4860.,  5392.,  3321.,  3798.,  4275.,  4752.,  2960.,  3392.,  3824.,  4256.,  2577.,  2958.,  3339.,  3720.,  2388.,  2712.,  3036.,  3360.,  2145.,  2462.,  2779.,  3096.,  2717.,  3098.,  3479.,  3860.,  2948.,  3384.,  3820.,  4256.,  3370.,  3868.,  4366.,  4864.,  3779.,  4346.,  4913.,  5480.,  4387.,  5014.,  5641.,  6268.,  4344.,  4984.,  5624.,  6264.,  4701.,  5370.,  6039.,  6708.,  4293.,  4910.,  5527.,  6144.,  3974.,  4532.,  5090.,  5648.,  3468.,  3976.,  4484.,  4992.,  3043.,  3494.,  3945.,  4396.,  2647.,  3034.,  3421.,  3808.,  2608.,  2976.,  3344.,  3712.,  3044.,  3480.,  3916.,  4352.,  3760.,  4256.,  4752.,  5248.,  3908.,  4472.,  5036.,  5600.,  4480.,  5120.,  5760.,  6400.,  4852.,  5560.,  6268.,  6976.,  5132.,  5848.,  6564.,  7280.,  5172.,  5912.,  6652.,  7392.,  4800.,  5472.,  6144.,  6816.,  4276.,  4888.,  5500.,  6112.,  4016.,  4576.,  5136.,  5696.,  3460.,  3960.,  4460.,  4960.,  3024.,  3456.,  3888.,  4320.,  3037.,  3486.,  3935.,  4384.,  3710.,  4228.,  4746.,  5264.,  4020.,  4600.,  5180.,  5760.,  4715.,  5366.,  6017.,  6668.,  5039.,  5770.,  6501.,  7232.,  5804.,  6608.,  7412.,  8216.,  5635.,  6442.,  7249.,  8056.,  5866.,  6692.,  7518.,  8344.,  5181.,  5926.,  6671.,  7416.,  4855.,  5526.,  6197.,  6868.,  4268.,  4872.,  5476.,  6080.,  3824.,  4352.,  4880.,  5408.,  3255.,  3714.,  4173.,  4632.,  3568.,  4080.,  4592.,  5104.,  4023.,  4618.,  5213.,  5808.,  4704.,  5376.,  6048.,  6720.,  5139.,  5898.,  6657.,  7416.,  6040.,  6880.,  7720.,  8560.,  6279.,  7194.,  8109.,  9024.,  6425.,  7338.,  8251.,  9164.,  6331.,  7258.,  8185.,  9112.,  5972.,  6808.,  7644.,  8480.,  5235.,  5986.,  6737.,  7488.,  4736.,  5408.,  6080.,  6752.,  4035.,  4618.,  5201.,  5784.,  3700.,  4200.,  4700.,  5200.,  3777.,  4334.,  4891.,  5448.,  4587.,  5238.,  5889.,  6540.,  4980.,  5720.,  6460.,  7200.,  5792.,  6632.,  7472.,  8312.,  6339.,  7274.,  8209.,  9144.,  7281.,  8306.,  9331., 10356.,  7050.,  8084.,  9118., 10152.,  7395.,  8438.,  9481., 10524.,  6477.,  7422.,  8367.,  9312.,  5964.,  6816.,  7668.,  8520.,  5196.,  5960.,  6724.,  7488.,  4649.,  5314.,  5979.,  6644.,  3919.,  4490.,  5061.,  5632.,  3887.,  4438.,  4989.,  5540.,  4364.,  5008.,  5652.,  6296.,  5244.,  5976.,  6708.,  7440.,  5683.,  6514.,  7345.,  8176.,  6421.,  7346.,  8271.,  9196.,  6838.,  7852.,  8866.,  9880.,  7183.,  8206.,  9229., 10252.,  7080.,  8112.,  9144., 10176.,  6791.,  7726.,  8661.,  9596.,  5831.,  6674.,  7517.,  8360.,  5332.,  6088.,  6844.,  7600.,  4426.,  5084.,  5742.,  6400.,  4005.,  4570.,  5135.,  5700.,  3821.,  4382.,  4943.,  5504.,  4797.,  5450.,  6103.,  6756.,  5204.,  5944.,  6684.,  7424.,  5846.,  6684.,  7522.,  8360.,  6327.,  7258.,  8189.,  9120.,  7307.,  8326.,  9345., 10364.,  7076.,  8104.,  9132., 10160.,  7149.,  8170.,  9191., 10212.,  6337.,  7262.,  8187.,  9112.,  6082.,  6916.,  7750.,  8584.,  5212.,  5960.,  6708.,  7456.,  4587.,  5238.,  5889.,  6540.,  3835.,  4394.,  4953.,  5512.,  3364.,  3864.,  4364.,  4864.,  4001.,  4590.,  5179.,  5768.,  4864.,  5536.,  6208.,  6880.,  5337.,  6102.,  6867.,  7632.,  6004.,  6856.,  7708.,  8560.,  6425.,  7358.,  8291.,  9224.,  6707.,  7654.,  8601.,  9548.,  6397.,  7342.,  8287.,  9232.,  6032.,  6896.,  7760.,  8624.,  5449.,  6238.,  7027.,  7816.,  5120.,  5824.,  6528.,  7232.,  4125.,  4734.,  5343.,  5952.,  3640.,  4160.,  4680.,  5200.,  2909.,  3334.,  3759.,  4184.,  3306.,  3804.,  4302.,  4800.,  3956.,  4536.,  5116.,  5696.,  4855.,  5526.,  6197.,  6868.,  5247.,  6002.,  6757.,  7512.,  5736.,  6568.,  7400.,  8232.,  5767.,  6618.,  7469.,  8320.,  6102.,  6956.,  7810.,  8664.,  5325.,  6110.,  6895.,  7680.,  4915.,  5638.,  6361.,  7084.,  4444.,  5096.,  5748.,  6400.,  4140.,  4712.,  5284.,  5856.,  3399.,  3898.,  4397.,  4896.,  2704.,  3072.,  3440.,  3808.,  2908.,  3336.,  3764.,  4192.,  3312.,  3808.,  4304.,  4800.,  3884.,  4456.,  5028.,  5600.,  4576.,  5216.,  5856.,  6496.,  4924.,  5640.,  6356.,  7072.,  5220.,  5960.,  6700.,  7440.,  5180.,  5928.,  6676.,  7424.,  4912.,  5600.,  6288.,  6976.,  4332.,  4968.,  5604.,  6240.,  3968.,  4544.,  5120.,  5696.,  3468.,  3976.,  4484.,  4992.,  3136.,  3584.,  4032.,  4480.,  2245.,  2574.,  2903.,  3232.,  2843.,  3222.,  3601.,  3980.,  3044.,  3480.,  3916.,  4352.,  3396.,  3896.,  4396.,  4896.,  3711.,  4266.,  4821.,  5376.,  4361.,  4978.,  5595.,  6212.,  4318.,  4948.,  5578.,  6208.,  4387.,  5014.,  5641.,  6268.,  3985.,  4558.,  5131.,  5704.,  3888.,  4416.,  4944.,  5472.,  3276.,  3752.,  4228.,  4704.,  2817.,  3234.,  3651.,  4068.,  2507.,  2874.,  3241.,  3608.,  2068.,  2376.,  2684.,  2992.,  2395.,  2746.,  3097.,  3448.,  2992.,  3392.,  3792.,  4192.,  3179.,  3634.,  4089.,  4544.,  3492.,  3992.,  4492.,  4992.,  3779.,  4330.,  4881.,  5432.,  3913.,  4466.,  5019.,  5572.,  3583.,  4122.,  4661.,  5200.,  3352.,  3840.,  4328.,  4816.,  3163.,  3610.,  4057.,  4504.,  3024.,  3424.,  3824.,  4224.,  2319.,  2666.,  3013.,  3360.,  2080.,  2384.,  2688.,  2992.};
  const std::array<int, 4> in_shape = {{ 3, 13, 13, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x13x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 7183.,  8206.,  9229., 10252.,  7080.,  8112.,  9144., 10176.,  7281.,  8306.,  9331., 10356.,  7076.,  8104.,  9132., 10160.,  7149.,  8170.,  9191., 10212.,  6838.,  7852.,  8866.,  9880.,  7289.,  8322.,  9355., 10388.,  6978.,  8004.,  9030., 10056.,  7307.,  8326.,  9345., 10364.,  7072.,  8096.,  9120., 10144.,  7289.,  8322.,  9355., 10388.,  6978.,  8004.,  9030., 10056.,  7157.,  8186.,  9215., 10244.,  7054.,  8092.,  9130., 10168.,  7383.,  8414.,  9445., 10476.,  7050.,  8084.,  9118., 10152.,  7395.,  8438.,  9481., 10524.,  7084.,  8120.,  9156., 10192.,  7281.,  8306.,  9331., 10356.,  7050.,  8084.,  9118., 10152.,  7395.,  8438.,  9481., 10524.,  6838.,  7852.,  8866.,  9880.,  7183.,  8206.,  9229., 10252.,  7080.,  8112.,  9144., 10176.,  7307.,  8326.,  9345., 10364.,  7076.,  8104.,  9132., 10160.,  7149.,  8170.,  9191., 10212.};
  const std::array<int, 4> in_shape = {{ 3, 13, 13, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x13x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 5020.,  6046.,  7312.,  7922.,  8852.,  9270.,  9466.,  9278.,  8708.,  7866.,  7312.,  5830.,  5036.,  6298.,  7353.,  7880.,  8847.,  9686., 11365., 10979., 11361.,  9902.,  9235.,  7880.,  6869.,  5906.,  6800.,  7816.,  9408., 10488., 12016., 12904., 13064., 12520., 11760., 10360.,  9408.,  7944.,  7056.,  7870.,  9363., 10424., 11957., 12514., 14087., 13825., 14459., 13210., 12081., 10424.,  9335.,  7350.,  8660.,  9746., 11504., 12462., 14364., 15802., 16598., 15858., 14556., 12502., 11504., 10106.,  8900.,  8866., 11181., 12712., 14731., 16030., 17945., 17407., 17445., 15910., 14751., 12712., 11049.,  8986., 10230., 11299., 12616., 13581., 16090., 17175., 17421., 17139., 16194., 14081., 12616., 10687.,  9694.,  9226., 11353., 12712., 14751., 15782., 17445., 17035., 17841., 15566., 14371., 12712., 11285.,  9570.,  8340.,  9570., 11504., 13038., 14940., 15834., 16550., 15858., 14444., 12566., 11504.,  9770.,  8708.,  8166.,  9743., 10424., 11673., 12394., 14051., 13709., 14087., 12514., 11957., 10424.,  9363.,  7870.,  6800.,  7816.,  9408., 10488., 12016., 12904., 13064., 12520., 11760., 10360.,  9408.,  7944.,  7056.,  5906.,  6869.,  7880.,  9235.,  9902., 11361., 10879., 11165.,  9894.,  8951.,  7880.,  7249.,  6090.,  5468.,  5982.,  7312.,  7586.,  8148.,  8934.,  9338.,  9358.,  8900.,  7690.,  7312.,  6278.,  5148.,  5044.,  6498.,  7120.,  8126.,  8684.,  9466.,  9278.,  9602.,  8956.,  8534.,  7120.,  6090.,  4772.,  6478.,  7199.,  7912.,  8561., 10114., 10979., 11361., 11215., 10522.,  9077.,  7912.,  6683.,  6070.,  6608.,  8104.,  9152., 10712., 11696., 13064., 12520., 12808., 11184., 10456.,  9152.,  8360.,  7120.,  8042.,  9205., 10904., 11643., 12998., 13825., 14459., 14453., 13742., 12071., 10904.,  8777.,  7298.,  8748., 10334., 11184., 12674., 14132., 16598., 15858., 16142., 14100., 12874., 11184., 10134.,  8780.,  9430., 11003., 13128., 14421., 16570., 17407., 17445., 17035., 16466., 14457., 13128., 10967.,  9534.,  9530., 11137., 12456., 14375., 15430., 17421., 17139., 17945., 16046., 14427., 12456., 11181.,  9090.,  9614., 10935., 13000., 13817., 15634., 17035., 17841., 17175., 15818., 13821., 13000., 11331.,  9862.,  7644.,  9710., 11440., 13602., 14820., 16550., 15858., 15678., 13908., 12890., 11440., 10294.,  8300.,  8514.,  9457., 10520., 11119., 12718., 13709., 14087., 13889., 13286., 11643., 10520.,  8789.,  7658.,  6608.,  8104.,  9152., 10712., 11696., 13064., 12520., 12808., 11184., 10456.,  9152.,  8360.,  7120.,  5590.,  6683.,  8296.,  9173., 10394., 10879., 11165., 10683.,  9890.,  8905.,  8296.,  7095.,  6078.,  5348.,  6386.,  6864.,  7262.,  7948.,  9338.,  9358.,  9714.,  8492.,  8038.,  6864.,  6042.,  4996.,  5580.,  6374.,  7312.,  7866.,  8708.,  9278.,  9602.,  9542.,  9396.,  8194.,  7312.,  5774.,  5020.,  6210.,  7045.,  7880.,  9171.,  9838., 11361., 11215., 11773., 10374.,  9191.,  7880.,  7009.,  5786.,  7056.,  7944.,  9408., 10360., 11760., 12520., 12808., 12392., 11504.,  9976.,  9408.,  8328.,  7312.,  7830.,  9575., 10424., 11841., 12906., 14459., 14453., 14831., 13698., 12573., 10424.,  8859.,  7294.,  9028., 10170., 11504., 12438., 14876., 15858., 16142., 15770., 14668., 12798., 11504.,  9842.,  9092.,  9226., 11353., 12712., 14751., 15782., 17445., 17035., 17841., 15566., 14371., 12712., 11285.,  9570.,  9326., 10831., 13000., 14321., 16178., 17139., 17945., 17407., 16170., 14149., 13000., 10731.,  9206.,  9794., 11717., 12456., 13891., 15342., 17841., 17175., 17421., 15430., 14375., 12456., 11137.,  9530.,  8020.,  9770., 12016., 13382., 15324., 15858., 15678., 14986., 14124., 12766., 12016.,  9986.,  8660.,  8030.,  9299., 10168., 11589., 12466., 14087., 13889., 14651., 13018., 11841., 10168.,  8855.,  7126.,  7056.,  7944.,  9408., 10360., 11760., 12520., 12808., 12392., 11504.,  9976.,  9408.,  8328.,  7312.,  5386.,  7009.,  8136.,  9495., 10182., 11165., 10683., 10457.,  9694.,  9243.,  8136.,  7149.,  5682.,  5596.,  6214.,  6800.,  7242.,  8452.,  9358.,  9714.,  9238.,  8852.,  7682.,  6800.,  5630.,  4908.};
  const std::array<int, 4> in_shape = {{ 3, 13, 13, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x13x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17945., 17407., 17445., 17175., 17421., 17139., 17445., 17035., 17841., 17407., 17445., 17035., 17421., 17139., 17945., 17035., 17841., 17175., 17445., 17035., 17841., 17139., 17945., 17407., 17841., 17175., 17421.};
  const std::array<int, 4> in_shape = {{ 3, 13, 13, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x13x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4812.,  5416.,  5394.,  6108.,  6768.,  7584.,  7046.,  7956.,  8036.,  9032.,  8554.,  9660.,  9386., 10500.,  8938., 10060.,  8628.,  9640.,  7190.,  8100.,  6768.,  7584.,  5522.,  6220.,  4892.,  5480.,  5402.,  6100.,  6919.,  7746.,  7448.,  8400.,  8685.,  9758.,  9158., 10348., 10803., 12106., 10043., 11334., 10307., 11586.,  9102., 10268.,  8965., 10022.,  7448.,  8400.,  6647.,  7466.,  5378.,  6068.,  6768.,  7584.,  7576.,  8528.,  9024., 10112.,  9448., 10672., 11280., 12640., 11832., 13328., 12408., 13904., 11576., 13072., 11280., 12640.,  9704., 10928.,  9024., 10112.,  7320.,  8272.,  6768.,  7584.,  6974.,  7868.,  8709.,  9766.,  9576., 10800., 11415., 12778., 11762., 13268., 13561., 15214., 12897., 14562., 14025., 15702., 12122., 13652., 11343., 12722.,  9576., 10800.,  9013., 10078.,  7238.,  8140.,  8036.,  9032.,  9022., 10196., 11280., 12640., 11898., 13420., 13964., 15656., 14502., 16372., 15590., 17452., 14630., 16484., 13916., 15592., 11914., 13436., 11280., 12640.,  9406., 10596.,  8500.,  9512.,  8626.,  9748., 10739., 12042., 11704., 13200., 13601., 15270., 14318., 16172., 17007., 19058., 16183., 18238., 17023., 19082., 14646., 16508., 14073., 15758., 11704., 13200., 10531., 11826.,  8666.,  9780.,  9490., 10620., 10267., 11574., 12280., 13776., 13001., 14698., 15758., 17636., 16215., 18286., 16479., 18522., 15655., 17702., 15542., 17396., 13441., 15122., 12280., 13776.,  9931., 11230.,  9562., 10684.,  8690.,  9828., 10691., 12002., 11704., 13200., 14001., 15694., 14446., 16316., 17023., 19082., 15943., 18006., 17295., 19362., 14582., 16460., 13705., 15382., 11704., 13200., 10739., 12042.,  8794.,  9924.,  8324.,  9336.,  8918., 10100., 11280., 12640., 12258., 13804., 13932., 15640., 14334., 16212., 15390., 17260., 14654., 16516., 14092., 15784., 11650., 13164., 11280., 12640.,  9366., 10564.,  8356.,  9384.,  7262.,  8188.,  8941., 10014.,  9576., 10800., 11343., 12722., 12050., 13588., 14113., 15814., 13417., 15130., 13681., 15374., 11786., 13316., 11415., 12778.,  9576., 10800.,  8797.,  9878.,  7222.,  8156.,  6768.,  7584.,  7576.,  8528.,  9024., 10112.,  9448., 10672., 11280., 12640., 11832., 13328., 12408., 13904., 11576., 13072., 11280., 12640.,  9704., 10928.,  9024., 10112.,  7320.,  8272.,  6768.,  7584.,  5402.,  6116.,  6647.,  7466.,  7448.,  8400.,  9053., 10134.,  9350., 10556., 10787., 12114., 10027., 11342., 10803., 12106.,  9230., 10412.,  8757.,  9822.,  7448.,  8400.,  6951.,  7794.,  5762.,  6500.,  4908.,  5528.,  5258.,  5964.,  6768.,  7584.,  7182.,  8100.,  8196.,  9208.,  8674.,  9804.,  9474., 10612.,  8994., 10140.,  8356.,  9384.,  7022.,  7940.,  6768.,  7584.,  5642.,  6364.,  5004.,  5640.,  4652.,  5272.,  5906.,  6628.,  6384.,  7200.,  7270.,  8172.,  7812.,  8824.,  9386., 10500.,  8938., 10060.,  9514., 10644.,  8212.,  9240.,  7798.,  8732.,  6384.,  7200.,  5778.,  6484.,  4796.,  5400.,  5882.,  6588.,  6543.,  7374.,  7768.,  8720.,  8117.,  9186.,  9766., 10948., 10043., 11334., 10307., 11586.,  9995., 11294., 10062., 11252.,  8621.,  9706.,  7768.,  8720.,  6271.,  7094.,  5890.,  6588.,  6384.,  7200.,  7896.,  8848.,  8512.,  9600., 10152., 11376., 10640., 12000., 12408., 13904., 11576., 13072., 12408., 13904., 10640., 12000., 10152., 11376.,  8512.,  9600.,  7896.,  8848.,  6384.,  7200.,  7550.,  8468.,  8365.,  9450., 10280., 11504., 10783., 12150., 12402., 13916., 12897., 14562., 14025., 15702., 13361., 15050., 12794., 14332., 10743., 12126., 10280., 11504.,  8477.,  9538.,  7526.,  8420.,  7812.,  8824.,  9982., 11180., 10640., 12000., 12506., 14036., 13292., 15000., 15590., 17452., 14630., 16484., 15206., 17052., 13308., 15000., 12842., 14372., 10640., 12000.,  9790., 10972.,  7892.,  8888.,  9170., 10300., 10427., 11750., 12280., 13776., 12905., 14586., 15438., 17316., 16183., 18238., 17023., 19082., 15943., 18006., 15798., 17684., 13409., 15106., 12280., 13776.,  9963., 11278.,  9242., 10364.,  8562.,  9668., 10531., 11826., 11704., 13200., 14033., 15710., 14510., 16380., 16479., 18522., 15655., 17702., 17007., 19058., 14774., 16652., 14057., 15750., 11704., 13200., 11027., 12346.,  8858.,  9988.,  8914., 10028.,  9931., 11230., 12536., 14032., 13113., 14786., 15246., 17108., 15943., 18006., 17295., 19362., 16215., 18286., 15158., 17028., 13041., 14730., 12536., 14032., 10427., 11750.,  9370., 10508.,  7652.,  8648.,  9526., 10700., 10640., 12000., 12578., 14100., 13068., 14760., 15390., 17260., 14654., 16516., 15454., 17308., 12972., 14648., 12546., 14068., 10640., 12000.,  9718., 10908.,  7684.,  8696.,  7774.,  8692.,  8373.,  9442., 10024., 11248., 10743., 12126., 12946., 14492., 13417., 15130., 13681., 15374., 12793., 14466., 12586., 14092., 10783., 12150., 10024., 11248.,  8229.,  9306.,  7702.,  8628.,  6384.,  7200.,  7896.,  8848.,  8512.,  9600., 10152., 11376., 10640., 12000., 12408., 13904., 11576., 13072., 12408., 13904., 10640., 12000., 10152., 11376.,  8512.,  9600.,  7896.,  8848.,  6384.,  7200.,  5562.,  6252.,  6271.,  7094.,  8024.,  8976.,  8485.,  9562.,  9702., 10900., 10027., 11342., 10803., 12106., 10043., 11334.,  9614., 10788.,  8221.,  9282.,  8024.,  8976.,  6575.,  7422.,  5954.,  6668.,  4556.,  5160.,  5738.,  6452.,  6384.,  7200.,  7438.,  8348.,  7972.,  9000.,  9474., 10612.,  8994., 10140.,  9218., 10340.,  7684.,  8696.,  7534.,  8444.,  6384.,  7200.,  5866.,  6596.,  4652.,  5272.,  5004.,  5640.,  5778.,  6508.,  6768.,  7584.,  7046.,  7972.,  8484.,  9512.,  8938., 10060.,  9514., 10644.,  8810.,  9948.,  8692.,  9736.,  7446.,  8372.,  6768.,  7584.,  5394.,  6108.,  5212.,  5832.,  5466.,  6180.,  6679.,  7514.,  7448.,  8400.,  8829.,  9894.,  8966., 10140., 10307., 11586.,  9995., 11294., 11091., 12410.,  9486., 10700.,  8853.,  9934.,  7448.,  8400.,  6919.,  7746.,  5506.,  6212.,  6768.,  7584.,  7320.,  8272.,  9024., 10112.,  9704., 10928., 11280., 12640., 11576., 13072., 12408., 13904., 11832., 13328., 11280., 12640.,  9448., 10672.,  9024., 10112.,  7576.,  8528.,  6768.,  7584.,  7358.,  8300.,  9109., 10190.,  9576., 10800., 11175., 12546., 11890., 13412., 14025., 15702., 13361., 15050., 13977., 15678., 12314., 13860., 11679., 13066.,  9576., 10800.,  8709.,  9766.,  7366.,  8284.,  8484.,  9512.,  9470., 10660., 11280., 12640., 11706., 13244., 14092., 15784., 14630., 16484., 15206., 17052., 14438., 16308., 14236., 15944., 12362., 13900., 11280., 12640.,  9022., 10196.,  8628.,  9640.,  8690.,  9828., 10691., 12002., 11704., 13200., 14001., 15694., 14446., 16316., 17023., 19082., 15943., 18006., 17295., 19362., 14582., 16460., 13705., 15382., 11704., 13200., 10739., 12042.,  8794.,  9924.,  9106., 10220.,  9963., 11278., 12536., 14032., 13337., 15026., 15054., 16916., 15655., 17702., 17007., 19058., 16183., 18238., 15606., 17476., 12945., 14618., 12536., 14032., 10267., 11574.,  9114., 10220.,  8690.,  9812., 11027., 12346., 11704., 13200., 13697., 15382., 14702., 16588., 17295., 19362., 16215., 18286., 16479., 18522., 14454., 16316., 14105., 15774., 11704., 13200., 10691., 12002.,  8730.,  9844.,  8068.,  9080.,  9430., 10628., 11280., 12640., 11810., 13340., 13932., 15640., 14654., 16516., 15454., 17308., 14206., 16052., 13836., 15528., 12034., 13564., 11280., 12640.,  8918., 10100.,  8036.,  9032.,  7134.,  8044.,  8573.,  9638.,  9576., 10800., 11679., 13066., 12178., 13732., 13681., 15374., 12793., 14466., 13825., 15478., 11786., 13300., 11175., 12546.,  9576., 10800.,  8941., 10014.,  7030.,  7948.,  6768.,  7584.,  7320.,  8272.,  9024., 10112.,  9704., 10928., 11280., 12640., 11576., 13072., 12408., 13904., 11832., 13328., 11280., 12640.,  9448., 10672.,  9024., 10112.,  7576.,  8528.,  6768.,  7584.,  5402.,  6100.,  6919.,  7746.,  7448.,  8400.,  8685.,  9758.,  9158., 10348., 10803., 12106., 10043., 11334., 10307., 11586.,  9102., 10268.,  8965., 10022.,  7448.,  8400.,  6647.,  7466.,  5378.,  6068.,  4908.,  5528.,  5578.,  6300.,  6768.,  7584.,  7246.,  8180.,  8644.,  9688.,  8994., 10140.,  9218., 10340.,  8290.,  9388.,  8036.,  9032.,  7150.,  8052.,  6768.,  7584.,  5258.,  5964.,  4940.,  5544.};
  const std::array<int, 4> in_shape = {{ 3, 13, 13, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x13x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17007., 19058., 16183., 18238., 17023., 19082., 16215., 18286., 16479., 18522., 15655., 17702., 17023., 19082., 15943., 18006., 17295., 19362., 16183., 18238., 17023., 19082., 15943., 18006., 16479., 18522., 15655., 17702., 17007., 19058., 15943., 18006., 17295., 19362., 16215., 18286., 17023., 19082., 15943., 18006., 17295., 19362., 15655., 17702., 17007., 19058., 16183., 18238., 17295., 19362., 16215., 18286., 16479., 18522.};
  const std::array<int, 4> in_shape = {{ 3, 13, 13, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x13x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4556.,  5160.,  5764.,  6368.,  4714.,  5428.,  6142.,  6856.,  6192.,  7008.,  7824.,  8640.,  5982.,  6892.,  7802.,  8712.,  7604.,  8600.,  9596., 10592.,  7378.,  8484.,  9590., 10696.,  8458.,  9572., 10686., 11800.,  7490.,  8612.,  9734., 10856.,  7716.,  8728.,  9740., 10752.,  6110.,  7020.,  7930.,  8840.,  6192.,  7008.,  7824.,  8640.,  4602.,  5300.,  5998.,  6696.,  4444.,  5032.,  5620.,  6208.,  4666.,  5364.,  6062.,  6760.,  6227.,  7054.,  7881.,  8708.,  6328.,  7280.,  8232.,  9184.,  8089.,  9162., 10235., 11308.,  7878.,  9068., 10258., 11448.,  9839., 11142., 12445., 13748.,  8459.,  9750., 11041., 12332.,  9639., 10918., 12197., 13476.,  7742.,  8908., 10074., 11240.,  7913.,  8970., 10027., 11084.,  6328.,  7280.,  8232.,  9184.,  6203.,  7022.,  7841.,  8660.,  4578.,  5268.,  5958.,  6648.,  6192.,  7008.,  7824.,  8640.,  6328.,  7280.,  8232.,  9184.,  8256.,  9344., 10432., 11520.,  8136.,  9360., 10584., 11808., 10320., 11680., 13040., 14400.,  9944., 11440., 12936., 14432., 11352., 12848., 14344., 15840.,  9944., 11440., 12936., 14432., 10320., 11680., 13040., 14400.,  8136.,  9360., 10584., 11808.,  8256.,  9344., 10432., 11520.,  6328.,  7280.,  8232.,  9184.,  6192.,  7008.,  7824.,  8640.,  5934.,  6828.,  7722.,  8616.,  7913.,  8970., 10027., 11084.,  8136.,  9360., 10584., 11808., 10331., 11694., 13057., 14420., 10002., 11508., 13014., 14520., 12509., 14162., 15815., 17468., 11041., 12706., 14371., 16036., 12645., 14322., 15999., 17676., 10202., 11732., 13262., 14792., 10379., 11758., 13137., 14516.,  8136.,  9360., 10584., 11808.,  8001.,  9066., 10131., 11196.,  5958.,  6860.,  7762.,  8664.,  7604.,  8600.,  9596., 10592.,  7830.,  9004., 10178., 11352., 10320., 11680., 13040., 14400., 10050., 11572., 13094., 14616., 12812., 14504., 16196., 17888., 12398., 14268., 16138., 18008., 14134., 15996., 17858., 19720., 12286., 14140., 15994., 17848., 12700., 14376., 16052., 17728., 10178., 11700., 13222., 14744., 10320., 11680., 13040., 14400.,  7942.,  9132., 10322., 11512.,  7716.,  8728.,  9740., 10752.,  7426.,  8548.,  9670., 10792.,  9839., 11142., 12445., 13748.,  9944., 11440., 12936., 14432., 12685., 14354., 16023., 17692., 12350., 14204., 16058., 17912., 15515., 17566., 19617., 21668., 13607., 15662., 17717., 19772., 15539., 17598., 19657., 21716., 12438., 14300., 16162., 18024., 12605., 14290., 15975., 17660.,  9944., 11440., 12936., 14432.,  9687., 10982., 12277., 13572.,  7466.,  8580.,  9694., 10808.,  8634.,  9764., 10894., 12024.,  8507.,  9814., 11121., 12428., 11352., 12848., 14344., 15840., 11137., 12834., 14531., 16228., 14310., 16188., 18066., 19944., 13655., 15726., 17797., 19868., 15491., 17534., 19577., 21620., 13583., 15630., 17677., 19724., 14046., 15900., 17754., 19608., 11217., 12898., 14579., 16260., 11352., 12848., 14344., 15840.,  8611.,  9910., 11209., 12508.,  8418.,  9540., 10662., 11784.,  7538.,  8676.,  9814., 10952.,  9991., 11302., 12613., 13924.,  9944., 11440., 12936., 14432., 12821., 14514., 16207., 17900., 12334., 14204., 16074., 17944., 15539., 17598., 19657., 21716., 13631., 15694., 17757., 19820., 15563., 17630., 19697., 21764., 12422., 14300., 16178., 18056., 12645., 14322., 15999., 17676.,  9944., 11440., 12936., 14432.,  9839., 11142., 12445., 13748.,  7578.,  8708.,  9838., 10968.,  7716.,  8728.,  9740., 10752.,  7790.,  8972., 10154., 11336., 10320., 11680., 13040., 14400., 10250., 11796., 13342., 14888., 13052., 14760., 16468., 18176., 12486., 14364., 16242., 18120., 14222., 16092., 17962., 19832., 12374., 14236., 16098., 17960., 12940., 14632., 16324., 18016., 10026., 11540., 13054., 14568., 10320., 11680., 13040., 14400.,  7902.,  9100., 10298., 11496.,  7828.,  8856.,  9884., 10912.,  6158.,  7084.,  8010.,  8936.,  8089.,  9162., 10235., 11308.,  8136.,  9360., 10584., 11808., 10379., 11758., 13137., 14516., 10226., 11764., 13302., 14840., 12781., 14482., 16183., 17884., 11313., 13026., 14739., 16452., 12821., 14514., 16207., 17900., 10074., 11604., 13134., 14664., 10331., 11694., 13057., 14420.,  8136.,  9360., 10584., 11808.,  8177.,  9258., 10339., 11420.,  6182.,  7116.,  8050.,  8984.,  6192.,  7008.,  7824.,  8640.,  6328.,  7280.,  8232.,  9184.,  8256.,  9344., 10432., 11520.,  8136.,  9360., 10584., 11808., 10320., 11680., 13040., 14400.,  9944., 11440., 12936., 14432., 11352., 12848., 14344., 15840.,  9944., 11440., 12936., 14432., 10320., 11680., 13040., 14400.,  8136.,  9360., 10584., 11808.,  8256.,  9344., 10432., 11520.,  6328.,  7280.,  8232.,  9184.,  6192.,  7008.,  7824.,  8640.,  4650.,  5364.,  6078.,  6792.,  6203.,  7022.,  7841.,  8660.,  6328.,  7280.,  8232.,  9184.,  8177.,  9258., 10339., 11420.,  7990.,  9196., 10402., 11608., 10039., 11366., 12693., 14020.,  8659.,  9974., 11289., 12604.,  9839., 11142., 12445., 13748.,  7854.,  9036., 10218., 11400.,  8001.,  9066., 10131., 11196.,  6328.,  7280.,  8232.,  9184.,  6275.,  7118.,  7961.,  8804.,  4914.,  5652.,  6390.,  7128.,  4796.,  5416.,  6036.,  6656.,  4626.,  5332.,  6038.,  6744.,  6192.,  7008.,  7824.,  8640.,  6006.,  6924.,  7842.,  8760.,  7716.,  8728.,  9740., 10752.,  7514.,  8644.,  9774., 10904.,  8594.,  9732., 10870., 12008.,  7626.,  8772.,  9918., 11064.,  7828.,  8856.,  9884., 10912.,  6134.,  7052.,  7970.,  8888.,  6192.,  7008.,  7824.,  8640.,  4866.,  5588.,  6310.,  7032.,  4780.,  5416.,  6052.,  6688.,  4156.,  4776.,  5396.,  6016.,  5410.,  6132.,  6854.,  7576.,  5424.,  6240.,  7056.,  7872.,  6822.,  7724.,  8626.,  9528.,  6820.,  7832.,  8844.,  9856.,  8458.,  9572., 10686., 11800.,  7490.,  8612.,  9734., 10856.,  8570.,  9700., 10830., 11960.,  6932.,  7960.,  8988., 10016.,  7046.,  7980.,  8914.,  9848.,  5424.,  6240.,  7056.,  7872.,  5298.,  6004.,  6710.,  7416.,  4044.,  4648.,  5252.,  5856.,  5362.,  6068.,  6774.,  7480.,  5471.,  6302.,  7133.,  7964.,  7224.,  8176.,  9128., 10080.,  7021.,  8090.,  9159., 10228.,  8974., 10156., 11338., 12520.,  8459.,  9750., 11041., 12332.,  9639., 10918., 12197., 13476.,  8611.,  9910., 11209., 12508.,  8934., 10124., 11314., 12504.,  7197.,  8282.,  9367., 10452.,  7224.,  8176.,  9128., 10080.,  5447.,  6270.,  7093.,  7916.,  5274.,  5972.,  6670.,  7368.,  5424.,  6240.,  7056.,  7872.,  7224.,  8176.,  9128., 10080.,  7232.,  8320.,  9408., 10496.,  9288., 10512., 11736., 12960.,  9040., 10400., 11760., 13120., 11352., 12848., 14344., 15840.,  9944., 11440., 12936., 14432., 11352., 12848., 14344., 15840.,  9040., 10400., 11760., 13120.,  9288., 10512., 11736., 12960.,  7232.,  8320.,  9408., 10496.,  7224.,  8176.,  9128., 10080.,  5424.,  6240.,  7056.,  7872.,  6870.,  7788.,  8706.,  9624.,  7197.,  8282.,  9367., 10452.,  9288., 10512., 11736., 12960.,  9063., 10430., 11797., 13164., 11466., 12980., 14494., 16008., 11041., 12706., 14371., 16036., 12645., 14322., 15999., 17676., 11177., 12866., 14555., 16244., 11666., 13204., 14742., 16280.,  9111., 10494., 11877., 13260.,  9288., 10512., 11736., 12960.,  6933.,  7994.,  9055., 10116.,  6798.,  7692.,  8586.,  9480.,  6820.,  7832.,  8844.,  9856.,  9022., 10220., 11418., 12616.,  9040., 10400., 11760., 13120., 11514., 13044., 14574., 16104., 11388., 13096., 14804., 16512., 14134., 15996., 17858., 19720., 12286., 14140., 15994., 17848., 14022., 15868., 17714., 19560., 11276., 12968., 14660., 16352., 11642., 13172., 14702., 16232.,  9040., 10400., 11760., 13120.,  9038., 10220., 11402., 12584.,  6580.,  7576.,  8572.,  9568.,  8506.,  9636., 10766., 11896.,  8811., 10134., 11457., 12780., 11352., 12848., 14344., 15840., 11217., 12898., 14579., 16260., 14182., 16060., 17938., 19816., 13607., 15662., 17717., 19772., 15539., 17598., 19657., 21716., 13631., 15694., 17757., 19820., 14270., 16156., 18042., 19928., 11137., 12834., 14531., 16228., 11352., 12848., 14344., 15840.,  8659.,  9974., 11289., 12604.,  8546.,  9668., 10790., 11912.,  7314.,  8420.,  9526., 10632.,  9687., 10982., 12277., 13572.,  9944., 11440., 12936., 14432., 12645., 14322., 15999., 17676., 12462., 14332., 16202., 18072., 15491., 17534., 19577., 21620., 13583., 15630., 17677., 19724., 15515., 17566., 19617., 21668., 12550., 14428., 16306., 18184., 12821., 14514., 16207., 17900.,  9944., 11440., 12936., 14432.,  9887., 11206., 12525., 13844.,  7450.,  8580.,  9710., 10840.,  8522.,  9636., 10750., 11864.,  8611.,  9910., 11209., 12508., 11352., 12848., 14344., 15840., 11001., 12674., 14347., 16020., 14070., 15932., 17794., 19656., 13631., 15694., 17757., 19820., 15563., 17630., 19697., 21764., 13655., 15726., 17797., 19868., 14158., 16028., 17898., 19768., 11177., 12866., 14555., 16244., 11352., 12848., 14344., 15840.,  8811., 10134., 11457., 12780.,  8658.,  9796., 10934., 12072.,  6580.,  7576.,  8572.,  9568.,  8886., 10060., 11234., 12408.,  9040., 10400., 11760., 13120., 11618., 13140., 14662., 16184., 11276., 12968., 14660., 16352., 14222., 16092., 17962., 19832., 12374., 14236., 16098., 17960., 14110., 15964., 17818., 19672., 11164., 12840., 14516., 16192., 11490., 13012., 14534., 16056.,  9040., 10400., 11760., 13120.,  8998., 10188., 11378., 12568.,  6692.,  7704.,  8716.,  9728.,  6998.,  7916.,  8834.,  9752.,  7021.,  8090.,  9159., 10228.,  9288., 10512., 11736., 12960.,  9111., 10494., 11877., 13260., 11690., 13236., 14782., 16328., 11313., 13026., 14739., 16452., 12821., 14514., 16207., 17900., 11001., 12674., 14347., 16020., 11442., 12948., 14454., 15960.,  9063., 10430., 11797., 13164.,  9288., 10512., 11736., 12960.,  7109.,  8186.,  9263., 10340.,  7022.,  7948.,  8874.,  9800.,  5424.,  6240.,  7056.,  7872.,  7224.,  8176.,  9128., 10080.,  7232.,  8320.,  9408., 10496.,  9288., 10512., 11736., 12960.,  9040., 10400., 11760., 13120., 11352., 12848., 14344., 15840.,  9944., 11440., 12936., 14432., 11352., 12848., 14344., 15840.,  9040., 10400., 11760., 13120.,  9288., 10512., 11736., 12960.,  7232.,  8320.,  9408., 10496.,  7224.,  8176.,  9128., 10080.,  5424.,  6240.,  7056.,  7872.,  5250.,  5940.,  6630.,  7320.,  5447.,  6270.,  7093.,  7916.,  7224.,  8176.,  9128., 10080.,  7109.,  8186.,  9263., 10340.,  9086., 10284., 11482., 12680.,  8659.,  9974., 11289., 12604.,  9839., 11142., 12445., 13748.,  8459.,  9750., 11041., 12332.,  8950., 10124., 11298., 12472.,  6933.,  7994.,  9055., 10116.,  7224.,  8176.,  9128., 10080.,  5519.,  6366.,  7213.,  8060.,  5514.,  6228.,  6942.,  7656.,  4044.,  4648.,  5252.,  5856.,  5322.,  6036.,  6750.,  7464.,  5424.,  6240.,  7056.,  7872.,  6846.,  7756.,  8666.,  9576.,  6932.,  7960.,  8988., 10016.,  8594.,  9732., 10870., 12008.,  7626.,  8772.,  9918., 11064.,  8610.,  9732., 10854., 11976.,  6692.,  7704.,  8716.,  9728.,  6974.,  7884.,  8794.,  9704.,  5424.,  6240.,  7056.,  7872.,  5562.,  6292.,  7022.,  7752.,  4028.,  4648.,  5268.,  5888.,  4780.,  5416.,  6052.,  6688.,  4826.,  5556.,  6286.,  7016.,  6192.,  7008.,  7824.,  8640.,  6222.,  7148.,  8074.,  9000.,  7828.,  8856.,  9884., 10912.,  7490.,  8612.,  9734., 10856.,  8570.,  9700., 10830., 11960.,  7602.,  8740.,  9878., 11016.,  7940.,  8984., 10028., 11072.,  6094.,  7020.,  7946.,  8872.,  6192.,  7008.,  7824.,  8640.,  4714.,  5428.,  6142.,  6856.,  4668.,  5288.,  5908.,  6528.,  4778.,  5492.,  6206.,  6920.,  6251.,  7086.,  7921.,  8756.,  6328.,  7280.,  8232.,  9184.,  8001.,  9066., 10131., 11196.,  7766.,  8940., 10114., 11288.,  9639., 10918., 12197., 13476.,  8611.,  9910., 11209., 12508.,  9887., 11206., 12525., 13844.,  8078.,  9292., 10506., 11720.,  8177.,  9258., 10339., 11420.,  6328.,  7280.,  8232.,  9184.,  6227.,  7054.,  7881.,  8708.,  4690.,  5396.,  6102.,  6808.,  6192.,  7008.,  7824.,  8640.,  6328.,  7280.,  8232.,  9184.,  8256.,  9344., 10432., 11520.,  8136.,  9360., 10584., 11808., 10320., 11680., 13040., 14400.,  9944., 11440., 12936., 14432., 11352., 12848., 14344., 15840.,  9944., 11440., 12936., 14432., 10320., 11680., 13040., 14400.,  8136.,  9360., 10584., 11808.,  8256.,  9344., 10432., 11520.,  6328.,  7280.,  8232.,  9184.,  6192.,  7008.,  7824.,  8640.,  6270.,  7212.,  8154.,  9096.,  8177.,  9258., 10339., 11420.,  8136.,  9360., 10584., 11808., 10355., 11726., 13097., 14468., 10114., 11636., 13158., 14680., 12645., 14322., 15999., 17676., 11177., 12866., 14555., 16244., 12781., 14482., 16183., 17884., 10314., 11860., 13406., 14952., 10403., 11790., 13177., 14564.,  8136.,  9360., 10584., 11808.,  7913.,  8970., 10027., 11084.,  6198.,  7116.,  8034.,  8952.,  7828.,  8856.,  9884., 10912.,  7814.,  9004., 10194., 11384., 10320., 11680., 13040., 14400., 10162., 11700., 13238., 14776., 12940., 14632., 16324., 18016., 12286., 14140., 15994., 17848., 14022., 15868., 17714., 19560., 12526., 14396., 16266., 18136., 12924., 14632., 16340., 18048., 10290., 11828., 13366., 14904., 10320., 11680., 13040., 14400.,  7830.,  9004., 10178., 11352.,  7588.,  8600.,  9612., 10624.,  7538.,  8676.,  9814., 10952.,  9991., 11302., 12613., 13924.,  9944., 11440., 12936., 14432., 12821., 14514., 16207., 17900., 12334., 14204., 16074., 17944., 15539., 17598., 19657., 21716., 13631., 15694., 17757., 19820., 15563., 17630., 19697., 21764., 12422., 14300., 16178., 18056., 12645., 14322., 15999., 17676.,  9944., 11440., 12936., 14432.,  9839., 11142., 12445., 13748.,  7578.,  8708.,  9838., 10968.,  8394.,  9508., 10622., 11736.,  8659.,  9974., 11289., 12604., 11352., 12848., 14344., 15840., 11177., 12866., 14555., 16244., 14198., 16060., 17922., 19784., 13583., 15630., 17677., 19724., 15515., 17566., 19617., 21668., 13607., 15662., 17717., 19772., 14286., 16156., 18026., 19896., 11001., 12674., 14347., 16020., 11352., 12848., 14344., 15840.,  8507.,  9814., 11121., 12428.,  8434.,  9540., 10646., 11752.,  7554.,  8676.,  9798., 10920.,  9887., 11206., 12525., 13844.,  9944., 11440., 12936., 14432., 12605., 14290., 15975., 17660., 12574., 14460., 16346., 18232., 15563., 17630., 19697., 21764., 13655., 15726., 17797., 19868., 15491., 17534., 19577., 21620., 12310., 14172., 16034., 17896., 12685., 14354., 16023., 17692.,  9944., 11440., 12936., 14432.,  9991., 11302., 12613., 13924.,  7338.,  8452.,  9566., 10680.,  7588.,  8600.,  9612., 10624.,  8030.,  9228., 10426., 11624., 10320., 11680., 13040., 14400., 10266., 11796., 13326., 14856., 12924., 14632., 16340., 18048., 12374., 14236., 16098., 17960., 14110., 15964., 17818., 19672., 12262., 14108., 15954., 17800., 12812., 14504., 16196., 17888., 10138., 11668., 13198., 14728., 10320., 11680., 13040., 14400.,  7790.,  8972., 10154., 11336.,  7604.,  8600.,  9596., 10592.,  6046.,  6956.,  7866.,  8776.,  8001.,  9066., 10131., 11196.,  8136.,  9360., 10584., 11808., 10403., 11790., 13177., 14564., 10338., 11892., 13446., 15000., 12821., 14514., 16207., 17900., 11001., 12674., 14347., 16020., 12509., 14162., 15815., 17468., 10090., 11604., 13118., 14632., 10355., 11726., 13097., 14468.,  8136.,  9360., 10584., 11808.,  8089.,  9162., 10235., 11308.,  6070.,  6988.,  7906.,  8824.,  6192.,  7008.,  7824.,  8640.,  6328.,  7280.,  8232.,  9184.,  8256.,  9344., 10432., 11520.,  8136.,  9360., 10584., 11808., 10320., 11680., 13040., 14400.,  9944., 11440., 12936., 14432., 11352., 12848., 14344., 15840.,  9944., 11440., 12936., 14432., 10320., 11680., 13040., 14400.,  8136.,  9360., 10584., 11808.,  8256.,  9344., 10432., 11520.,  6328.,  7280.,  8232.,  9184.,  6192.,  7008.,  7824.,  8640.,  4666.,  5364.,  6062.,  6760.,  6227.,  7054.,  7881.,  8708.,  6328.,  7280.,  8232.,  9184.,  8089.,  9162., 10235., 11308.,  7878.,  9068., 10258., 11448.,  9839., 11142., 12445., 13748.,  8459.,  9750., 11041., 12332.,  9639., 10918., 12197., 13476.,  7742.,  8908., 10074., 11240.,  7913.,  8970., 10027., 11084.,  6328.,  7280.,  8232.,  9184.,  6203.,  7022.,  7841.,  8660.,  4578.,  5268.,  5958.,  6648.,  4668.,  5288.,  5908.,  6528.,  4738.,  5460.,  6182.,  6904.,  6192.,  7008.,  7824.,  8640.,  6246.,  7180.,  8114.,  9048.,  7940.,  8984., 10028., 11072.,  7626.,  8772.,  9918., 11064.,  8610.,  9732., 10854., 11976.,  7290.,  8388.,  9486., 10584.,  7604.,  8600.,  9596., 10592.,  6022.,  6924.,  7826.,  8728.,  6192.,  7008.,  7824.,  8640.,  4626.,  5332.,  6038.,  6744.,  4556.,  5160.,  5764.,  6368.};
  const std::array<int, 4> in_shape = {{ 3, 13, 13, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x13x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {15515., 17566., 19617., 21668., 13607., 15662., 17717., 19772., 15539., 17598., 19657., 21716., 13655., 15726., 17797., 19868., 15491., 17534., 19577., 21620., 13583., 15630., 17677., 19724., 15539., 17598., 19657., 21716., 13631., 15694., 17757., 19820., 15563., 17630., 19697., 21764., 13607., 15662., 17717., 19772., 15539., 17598., 19657., 21716., 13631., 15694., 17757., 19820., 15491., 17534., 19577., 21620., 13583., 15630., 17677., 19724., 15515., 17566., 19617., 21668., 13631., 15694., 17757., 19820., 15563., 17630., 19697., 21764., 13655., 15726., 17797., 19868., 15539., 17598., 19657., 21716., 13631., 15694., 17757., 19820., 15563., 17630., 19697., 21764., 13583., 15630., 17677., 19724., 15515., 17566., 19617., 21668., 13607., 15662., 17717., 19772., 15563., 17630., 19697., 21764., 13655., 15726., 17797., 19868., 15491., 17534., 19577., 21620.};
  const std::array<int, 4> in_shape = {{ 3, 13, 13, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x13x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3672.,  2940.,  4896.,  3780.,  6120.,  4620.,  6732.,  4620.,  6120.,  3780.,  4896.,  2940.,  3672.,  2940.,  4926.,  3920.,  6354.,  4900.,  7782.,  5390.,  7782.,  4900.,  6354.,  3920.,  4926.,  2940.,  4896.,  3920.,  6528.,  5040.,  8160.,  6160.,  8976.,  6160.,  8160.,  5040.,  6528.,  3920.,  4896.,  3780.,  6354.,  5040.,  8190.,  6300., 10026.,  6930., 10026.,  6300.,  8190.,  5040.,  6354.,  3780.,  6120.,  4900.,  8160.,  6300., 10200.,  7700., 11220.,  7700., 10200.,  6300.,  8160.,  4900.,  6120.,  4620.,  7782.,  6160., 10026.,  7700., 12270.,  8470., 12270.,  7700., 10026.,  6160.,  7782.,  4620.,  6732.,  5390.,  8976.,  6930., 11220.,  8470., 12270.,  8470., 11220.,  6930.,  8976.,  5390.,  6732.,  4620.,  7782.,  6160., 10026.,  7700., 12270.,  8470., 12270.,  7700., 10026.,  6160.,  7782.,  4620.,  6120.,  4900.,  8160.,  6300., 10200.,  7700., 11220.,  7700., 10200.,  6300.,  8160.,  4900.,  6120.,  3780.,  6354.,  5040.,  8190.,  6300., 10026.,  6930., 10026.,  6300.,  8190.,  5040.,  6354.,  3780.,  4896.,  3920.,  6528.,  5040.,  8160.,  6160.,  8976.,  6160.,  8160.,  5040.,  6528.,  3920.,  4896.,  2940.,  4926.,  3920.,  6354.,  4900.,  7782.,  5390.,  7782.,  4900.,  6354.,  3920.,  4926.,  2940.,  3672.,  2940.,  4896.,  3780.,  6120.,  4620.,  6732.,  4620.,  6120.,  3780.,  4896.,  2940.,  3672.,  2520.,  4284.,  3360.,  5508.,  4200.,  6732.,  4620.,  6732.,  4200.,  5508.,  3360.,  4284.,  2520.,  4284.,  3430.,  5712.,  4410.,  7140.,  5390.,  7782.,  5390.,  7140.,  4410.,  5712.,  3430.,  4284.,  3360.,  5712.,  4480.,  7344.,  5600.,  8976.,  6160.,  8976.,  5600.,  7344.,  4480.,  5712.,  3360.,  5508.,  4410.,  7344.,  5670.,  9180.,  6930., 10026.,  6930.,  9180.,  5670.,  7344.,  4410.,  5508.,  4200.,  7140.,  5600.,  9180.,  7000., 11220.,  7700., 11220.,  7000.,  9180.,  5600.,  7140.,  4200.,  6732.,  5390.,  8976.,  6930., 11220.,  8470., 12270.,  8470., 11220.,  6930.,  8976.,  5390.,  6732.,  4620.,  7782.,  6160., 10026.,  7700., 12270.,  8470., 12270.,  7700., 10026.,  6160.,  7782.,  4620.,  6732.,  5390.,  8976.,  6930., 11220.,  8470., 12270.,  8470., 11220.,  6930.,  8976.,  5390.,  6732.,  4200.,  7140.,  5600.,  9180.,  7000., 11220.,  7700., 11220.,  7000.,  9180.,  5600.,  7140.,  4200.,  5508.,  4410.,  7344.,  5670.,  9180.,  6930., 10026.,  6930.,  9180.,  5670.,  7344.,  4410.,  5508.,  3360.,  5712.,  4480.,  7344.,  5600.,  8976.,  6160.,  8976.,  5600.,  7344.,  4480.,  5712.,  3360.,  4284.,  3430.,  5712.,  4410.,  7140.,  5390.,  7782.,  5390.,  7140.,  4410.,  5712.,  3430.,  4284.,  2520.,  4284.,  3360.,  5508.,  4200.,  6732.,  4620.,  6732.,  4200.,  5508.,  3360.,  4284.,  2520.,  3672.,  2940.,  4896.,  3780.,  6120.,  4620.,  6732.,  4620.,  6120.,  3780.,  4896.,  2940.,  3672.,  2940.,  4926.,  3920.,  6354.,  4900.,  7782.,  5390.,  7782.,  4900.,  6354.,  3920.,  4926.,  2940.,  4896.,  3920.,  6528.,  5040.,  8160.,  6160.,  8976.,  6160.,  8160.,  5040.,  6528.,  3920.,  4896.,  3780.,  6354.,  5040.,  8190.,  6300., 10026.,  6930., 10026.,  6300.,  8190.,  5040.,  6354.,  3780.,  6120.,  4900.,  8160.,  6300., 10200.,  7700., 11220.,  7700., 10200.,  6300.,  8160.,  4900.,  6120.,  4620.,  7782.,  6160., 10026.,  7700., 12270.,  8470., 12270.,  7700., 10026.,  6160.,  7782.,  4620.,  6732.,  5390.,  8976.,  6930., 11220.,  8470., 12270.,  8470., 11220.,  6930.,  8976.,  5390.,  6732.,  4620.,  7782.,  6160., 10026.,  7700., 12270.,  8470., 12270.,  7700., 10026.,  6160.,  7782.,  4620.,  6120.,  4900.,  8160.,  6300., 10200.,  7700., 11220.,  7700., 10200.,  6300.,  8160.,  4900.,  6120.,  3780.,  6354.,  5040.,  8190.,  6300., 10026.,  6930., 10026.,  6300.,  8190.,  5040.,  6354.,  3780.,  4896.,  3920.,  6528.,  5040.,  8160.,  6160.,  8976.,  6160.,  8160.,  5040.,  6528.,  3920.,  4896.,  2940.,  4926.,  3920.,  6354.,  4900.,  7782.,  5390.,  7782.,  4900.,  6354.,  3920.,  4926.,  2940.,  3672.,  2940.,  4896.,  3780.,  6120.,  4620.,  6732.,  4620.,  6120.,  3780.,  4896.,  2940.,  3672.};
  const std::array<int, 4> in_shape = {{ 3, 13, 13, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x13x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.};
  const std::array<int, 4> in_shape = {{ 3, 13, 13, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x13x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2952.,  3600.,  3444.,  4200.,  3936.,  4800.,  4428.,  5400.,  4920.,  6000.,  5412.,  6600.,  5412.,  6600.,  5412.,  6600.,  4920.,  6000.,  4428.,  5400.,  3936.,  4800.,  3444.,  4200.,  2952.,  3600.,  3444.,  4200.,  3986.,  4860.,  4592.,  5600.,  5134.,  6260.,  5740.,  7000.,  6282.,  7660.,  6346.,  7740.,  6282.,  7660.,  5740.,  7000.,  5134.,  6260.,  4592.,  5600.,  3986.,  4860.,  3444.,  4200.,  3936.,  4800.,  4592.,  5600.,  5248.,  6400.,  5904.,  7200.,  6560.,  8000.,  7216.,  8800.,  7216.,  8800.,  7216.,  8800.,  6560.,  8000.,  5904.,  7200.,  5248.,  6400.,  4592.,  5600.,  3936.,  4800.,  4428.,  5400.,  5134.,  6260.,  5904.,  7200.,  6610.,  8060.,  7380.,  9000.,  8086.,  9860.,  8150.,  9940.,  8086.,  9860.,  7380.,  9000.,  6610.,  8060.,  5904.,  7200.,  5134.,  6260.,  4428.,  5400.,  4920.,  6000.,  5740.,  7000.,  6560.,  8000.,  7380.,  9000.,  8200., 10000.,  9020., 11000.,  9020., 11000.,  9020., 11000.,  8200., 10000.,  7380.,  9000.,  6560.,  8000.,  5740.,  7000.,  4920.,  6000.,  5412.,  6600.,  6282.,  7660.,  7216.,  8800.,  8086.,  9860.,  9020., 11000.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9020., 11000.,  8086.,  9860.,  7216.,  8800.,  6282.,  7660.,  5412.,  6600.,  5412.,  6600.,  6346.,  7740.,  7216.,  8800.,  8150.,  9940.,  9020., 11000.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9020., 11000.,  8150.,  9940.,  7216.,  8800.,  6346.,  7740.,  5412.,  6600.,  5412.,  6600.,  6282.,  7660.,  7216.,  8800.,  8086.,  9860.,  9020., 11000.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9020., 11000.,  8086.,  9860.,  7216.,  8800.,  6282.,  7660.,  5412.,  6600.,  4920.,  6000.,  5740.,  7000.,  6560.,  8000.,  7380.,  9000.,  8200., 10000.,  9020., 11000.,  9020., 11000.,  9020., 11000.,  8200., 10000.,  7380.,  9000.,  6560.,  8000.,  5740.,  7000.,  4920.,  6000.,  4428.,  5400.,  5134.,  6260.,  5904.,  7200.,  6610.,  8060.,  7380.,  9000.,  8086.,  9860.,  8150.,  9940.,  8086.,  9860.,  7380.,  9000.,  6610.,  8060.,  5904.,  7200.,  5134.,  6260.,  4428.,  5400.,  3936.,  4800.,  4592.,  5600.,  5248.,  6400.,  5904.,  7200.,  6560.,  8000.,  7216.,  8800.,  7216.,  8800.,  7216.,  8800.,  6560.,  8000.,  5904.,  7200.,  5248.,  6400.,  4592.,  5600.,  3936.,  4800.,  3444.,  4200.,  3986.,  4860.,  4592.,  5600.,  5134.,  6260.,  5740.,  7000.,  6282.,  7660.,  6346.,  7740.,  6282.,  7660.,  5740.,  7000.,  5134.,  6260.,  4592.,  5600.,  3986.,  4860.,  3444.,  4200.,  2952.,  3600.,  3444.,  4200.,  3936.,  4800.,  4428.,  5400.,  4920.,  6000.,  5412.,  6600.,  5412.,  6600.,  5412.,  6600.,  4920.,  6000.,  4428.,  5400.,  3936.,  4800.,  3444.,  4200.,  2952.,  3600.,  2952.,  3600.,  3444.,  4200.,  3936.,  4800.,  4428.,  5400.,  4920.,  6000.,  5412.,  6600.,  5412.,  6600.,  5412.,  6600.,  4920.,  6000.,  4428.,  5400.,  3936.,  4800.,  3444.,  4200.,  2952.,  3600.,  3444.,  4200.,  4050.,  4940.,  4592.,  5600.,  5198.,  6340.,  5740.,  7000.,  6346.,  7740.,  6282.,  7660.,  6346.,  7740.,  5740.,  7000.,  5198.,  6340.,  4592.,  5600.,  4050.,  4940.,  3444.,  4200.,  3936.,  4800.,  4592.,  5600.,  5248.,  6400.,  5904.,  7200.,  6560.,  8000.,  7216.,  8800.,  7216.,  8800.,  7216.,  8800.,  6560.,  8000.,  5904.,  7200.,  5248.,  6400.,  4592.,  5600.,  3936.,  4800.,  4428.,  5400.,  5198.,  6340.,  5904.,  7200.,  6674.,  8140.,  7380.,  9000.,  8150.,  9940.,  8086.,  9860.,  8150.,  9940.,  7380.,  9000.,  6674.,  8140.,  5904.,  7200.,  5198.,  6340.,  4428.,  5400.,  4920.,  6000.,  5740.,  7000.,  6560.,  8000.,  7380.,  9000.,  8200., 10000.,  9020., 11000.,  9020., 11000.,  9020., 11000.,  8200., 10000.,  7380.,  9000.,  6560.,  8000.,  5740.,  7000.,  4920.,  6000.,  5412.,  6600.,  6346.,  7740.,  7216.,  8800.,  8150.,  9940.,  9020., 11000.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9020., 11000.,  8150.,  9940.,  7216.,  8800.,  6346.,  7740.,  5412.,  6600.,  5412.,  6600.,  6282.,  7660.,  7216.,  8800.,  8086.,  9860.,  9020., 11000.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9020., 11000.,  8086.,  9860.,  7216.,  8800.,  6282.,  7660.,  5412.,  6600.,  5412.,  6600.,  6346.,  7740.,  7216.,  8800.,  8150.,  9940.,  9020., 11000.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9020., 11000.,  8150.,  9940.,  7216.,  8800.,  6346.,  7740.,  5412.,  6600.,  4920.,  6000.,  5740.,  7000.,  6560.,  8000.,  7380.,  9000.,  8200., 10000.,  9020., 11000.,  9020., 11000.,  9020., 11000.,  8200., 10000.,  7380.,  9000.,  6560.,  8000.,  5740.,  7000.,  4920.,  6000.,  4428.,  5400.,  5198.,  6340.,  5904.,  7200.,  6674.,  8140.,  7380.,  9000.,  8150.,  9940.,  8086.,  9860.,  8150.,  9940.,  7380.,  9000.,  6674.,  8140.,  5904.,  7200.,  5198.,  6340.,  4428.,  5400.,  3936.,  4800.,  4592.,  5600.,  5248.,  6400.,  5904.,  7200.,  6560.,  8000.,  7216.,  8800.,  7216.,  8800.,  7216.,  8800.,  6560.,  8000.,  5904.,  7200.,  5248.,  6400.,  4592.,  5600.,  3936.,  4800.,  3444.,  4200.,  4050.,  4940.,  4592.,  5600.,  5198.,  6340.,  5740.,  7000.,  6346.,  7740.,  6282.,  7660.,  6346.,  7740.,  5740.,  7000.,  5198.,  6340.,  4592.,  5600.,  4050.,  4940.,  3444.,  4200.,  2952.,  3600.,  3444.,  4200.,  3936.,  4800.,  4428.,  5400.,  4920.,  6000.,  5412.,  6600.,  5412.,  6600.,  5412.,  6600.,  4920.,  6000.,  4428.,  5400.,  3936.,  4800.,  3444.,  4200.,  2952.,  3600.,  2952.,  3600.,  3444.,  4200.,  3936.,  4800.,  4428.,  5400.,  4920.,  6000.,  5412.,  6600.,  5412.,  6600.,  5412.,  6600.,  4920.,  6000.,  4428.,  5400.,  3936.,  4800.,  3444.,  4200.,  2952.,  3600.,  3444.,  4200.,  3986.,  4860.,  4592.,  5600.,  5134.,  6260.,  5740.,  7000.,  6282.,  7660.,  6346.,  7740.,  6282.,  7660.,  5740.,  7000.,  5134.,  6260.,  4592.,  5600.,  3986.,  4860.,  3444.,  4200.,  3936.,  4800.,  4592.,  5600.,  5248.,  6400.,  5904.,  7200.,  6560.,  8000.,  7216.,  8800.,  7216.,  8800.,  7216.,  8800.,  6560.,  8000.,  5904.,  7200.,  5248.,  6400.,  4592.,  5600.,  3936.,  4800.,  4428.,  5400.,  5134.,  6260.,  5904.,  7200.,  6610.,  8060.,  7380.,  9000.,  8086.,  9860.,  8150.,  9940.,  8086.,  9860.,  7380.,  9000.,  6610.,  8060.,  5904.,  7200.,  5134.,  6260.,  4428.,  5400.,  4920.,  6000.,  5740.,  7000.,  6560.,  8000.,  7380.,  9000.,  8200., 10000.,  9020., 11000.,  9020., 11000.,  9020., 11000.,  8200., 10000.,  7380.,  9000.,  6560.,  8000.,  5740.,  7000.,  4920.,  6000.,  5412.,  6600.,  6282.,  7660.,  7216.,  8800.,  8086.,  9860.,  9020., 11000.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9020., 11000.,  8086.,  9860.,  7216.,  8800.,  6282.,  7660.,  5412.,  6600.,  5412.,  6600.,  6346.,  7740.,  7216.,  8800.,  8150.,  9940.,  9020., 11000.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9020., 11000.,  8150.,  9940.,  7216.,  8800.,  6346.,  7740.,  5412.,  6600.,  5412.,  6600.,  6282.,  7660.,  7216.,  8800.,  8086.,  9860.,  9020., 11000.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9020., 11000.,  8086.,  9860.,  7216.,  8800.,  6282.,  7660.,  5412.,  6600.,  4920.,  6000.,  5740.,  7000.,  6560.,  8000.,  7380.,  9000.,  8200., 10000.,  9020., 11000.,  9020., 11000.,  9020., 11000.,  8200., 10000.,  7380.,  9000.,  6560.,  8000.,  5740.,  7000.,  4920.,  6000.,  4428.,  5400.,  5134.,  6260.,  5904.,  7200.,  6610.,  8060.,  7380.,  9000.,  8086.,  9860.,  8150.,  9940.,  8086.,  9860.,  7380.,  9000.,  6610.,  8060.,  5904.,  7200.,  5134.,  6260.,  4428.,  5400.,  3936.,  4800.,  4592.,  5600.,  5248.,  6400.,  5904.,  7200.,  6560.,  8000.,  7216.,  8800.,  7216.,  8800.,  7216.,  8800.,  6560.,  8000.,  5904.,  7200.,  5248.,  6400.,  4592.,  5600.,  3936.,  4800.,  3444.,  4200.,  3986.,  4860.,  4592.,  5600.,  5134.,  6260.,  5740.,  7000.,  6282.,  7660.,  6346.,  7740.,  6282.,  7660.,  5740.,  7000.,  5134.,  6260.,  4592.,  5600.,  3986.,  4860.,  3444.,  4200.,  2952.,  3600.,  3444.,  4200.,  3936.,  4800.,  4428.,  5400.,  4920.,  6000.,  5412.,  6600.,  5412.,  6600.,  5412.,  6600.,  4920.,  6000.,  4428.,  5400.,  3936.,  4800.,  3444.,  4200.,  2952.,  3600.};
  const std::array<int, 4> in_shape = {{ 3, 13, 13, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x13x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.};
  const std::array<int, 4> in_shape = {{ 3, 13, 13, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x13x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2818.,  3692.,  4566.,  5440.,  3248.,  4256.,  5264.,  6272.,  3630.,  4756.,  5882.,  7008.,  4060.,  5320.,  6580.,  7840.,  4442.,  5820.,  7198.,  8576.,  4490.,  5884.,  7278.,  8672.,  4442.,  5820.,  7198.,  8576.,  4060.,  5320.,  6580.,  7840.,  3630.,  4756.,  5882.,  7008.,  3248.,  4256.,  5264.,  6272.,  2818.,  3692.,  4566.,  5440.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3248.,  4256.,  5264.,  6272.,  3712.,  4864.,  6016.,  7168.,  4176.,  5472.,  6768.,  8064.,  4640.,  6080.,  7520.,  8960.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  4640.,  6080.,  7520.,  8960.,  4176.,  5472.,  6768.,  8064.,  3712.,  4864.,  6016.,  7168.,  3248.,  4256.,  5264.,  6272.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3630.,  4756.,  5882.,  7008.,  4176.,  5472.,  6768.,  8064.,  4674.,  6124.,  7574.,  9024.,  5220.,  6840.,  8460., 10080.,  5718.,  7492.,  9266., 11040.,  5766.,  7556.,  9346., 11136.,  5718.,  7492.,  9266., 11040.,  5220.,  6840.,  8460., 10080.,  4674.,  6124.,  7574.,  9024.,  4176.,  5472.,  6768.,  8064.,  3630.,  4756.,  5882.,  7008.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  4060.,  5320.,  6580.,  7840.,  4640.,  6080.,  7520.,  8960.,  5220.,  6840.,  8460., 10080.,  5800.,  7600.,  9400., 11200.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  5800.,  7600.,  9400., 11200.,  5220.,  6840.,  8460., 10080.,  4640.,  6080.,  7520.,  8960.,  4060.,  5320.,  6580.,  7840.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4442.,  5820.,  7198.,  8576.,  5104.,  6688.,  8272.,  9856.,  5718.,  7492.,  9266., 11040.,  6380.,  8360., 10340., 12320.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  6380.,  8360., 10340., 12320.,  5718.,  7492.,  9266., 11040.,  5104.,  6688.,  8272.,  9856.,  4442.,  5820.,  7198.,  8576.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4490.,  5884.,  7278.,  8672.,  5104.,  6688.,  8272.,  9856.,  5766.,  7556.,  9346., 11136.,  6380.,  8360., 10340., 12320.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6380.,  8360., 10340., 12320.,  5766.,  7556.,  9346., 11136.,  5104.,  6688.,  8272.,  9856.,  4490.,  5884.,  7278.,  8672.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4442.,  5820.,  7198.,  8576.,  5104.,  6688.,  8272.,  9856.,  5718.,  7492.,  9266., 11040.,  6380.,  8360., 10340., 12320.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  6380.,  8360., 10340., 12320.,  5718.,  7492.,  9266., 11040.,  5104.,  6688.,  8272.,  9856.,  4442.,  5820.,  7198.,  8576.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  4060.,  5320.,  6580.,  7840.,  4640.,  6080.,  7520.,  8960.,  5220.,  6840.,  8460., 10080.,  5800.,  7600.,  9400., 11200.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  5800.,  7600.,  9400., 11200.,  5220.,  6840.,  8460., 10080.,  4640.,  6080.,  7520.,  8960.,  4060.,  5320.,  6580.,  7840.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3630.,  4756.,  5882.,  7008.,  4176.,  5472.,  6768.,  8064.,  4674.,  6124.,  7574.,  9024.,  5220.,  6840.,  8460., 10080.,  5718.,  7492.,  9266., 11040.,  5766.,  7556.,  9346., 11136.,  5718.,  7492.,  9266., 11040.,  5220.,  6840.,  8460., 10080.,  4674.,  6124.,  7574.,  9024.,  4176.,  5472.,  6768.,  8064.,  3630.,  4756.,  5882.,  7008.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3248.,  4256.,  5264.,  6272.,  3712.,  4864.,  6016.,  7168.,  4176.,  5472.,  6768.,  8064.,  4640.,  6080.,  7520.,  8960.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  4640.,  6080.,  7520.,  8960.,  4176.,  5472.,  6768.,  8064.,  3712.,  4864.,  6016.,  7168.,  3248.,  4256.,  5264.,  6272.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2818.,  3692.,  4566.,  5440.,  3248.,  4256.,  5264.,  6272.,  3630.,  4756.,  5882.,  7008.,  4060.,  5320.,  6580.,  7840.,  4442.,  5820.,  7198.,  8576.,  4490.,  5884.,  7278.,  8672.,  4442.,  5820.,  7198.,  8576.,  4060.,  5320.,  6580.,  7840.,  3630.,  4756.,  5882.,  7008.,  3248.,  4256.,  5264.,  6272.,  2818.,  3692.,  4566.,  5440.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2866.,  3756.,  4646.,  5536.,  3248.,  4256.,  5264.,  6272.,  3678.,  4820.,  5962.,  7104.,  4060.,  5320.,  6580.,  7840.,  4490.,  5884.,  7278.,  8672.,  4442.,  5820.,  7198.,  8576.,  4490.,  5884.,  7278.,  8672.,  4060.,  5320.,  6580.,  7840.,  3678.,  4820.,  5962.,  7104.,  3248.,  4256.,  5264.,  6272.,  2866.,  3756.,  4646.,  5536.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3248.,  4256.,  5264.,  6272.,  3712.,  4864.,  6016.,  7168.,  4176.,  5472.,  6768.,  8064.,  4640.,  6080.,  7520.,  8960.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  4640.,  6080.,  7520.,  8960.,  4176.,  5472.,  6768.,  8064.,  3712.,  4864.,  6016.,  7168.,  3248.,  4256.,  5264.,  6272.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3678.,  4820.,  5962.,  7104.,  4176.,  5472.,  6768.,  8064.,  4722.,  6188.,  7654.,  9120.,  5220.,  6840.,  8460., 10080.,  5766.,  7556.,  9346., 11136.,  5718.,  7492.,  9266., 11040.,  5766.,  7556.,  9346., 11136.,  5220.,  6840.,  8460., 10080.,  4722.,  6188.,  7654.,  9120.,  4176.,  5472.,  6768.,  8064.,  3678.,  4820.,  5962.,  7104.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  4060.,  5320.,  6580.,  7840.,  4640.,  6080.,  7520.,  8960.,  5220.,  6840.,  8460., 10080.,  5800.,  7600.,  9400., 11200.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  5800.,  7600.,  9400., 11200.,  5220.,  6840.,  8460., 10080.,  4640.,  6080.,  7520.,  8960.,  4060.,  5320.,  6580.,  7840.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4490.,  5884.,  7278.,  8672.,  5104.,  6688.,  8272.,  9856.,  5766.,  7556.,  9346., 11136.,  6380.,  8360., 10340., 12320.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6380.,  8360., 10340., 12320.,  5766.,  7556.,  9346., 11136.,  5104.,  6688.,  8272.,  9856.,  4490.,  5884.,  7278.,  8672.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4442.,  5820.,  7198.,  8576.,  5104.,  6688.,  8272.,  9856.,  5718.,  7492.,  9266., 11040.,  6380.,  8360., 10340., 12320.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  6380.,  8360., 10340., 12320.,  5718.,  7492.,  9266., 11040.,  5104.,  6688.,  8272.,  9856.,  4442.,  5820.,  7198.,  8576.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4490.,  5884.,  7278.,  8672.,  5104.,  6688.,  8272.,  9856.,  5766.,  7556.,  9346., 11136.,  6380.,  8360., 10340., 12320.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6380.,  8360., 10340., 12320.,  5766.,  7556.,  9346., 11136.,  5104.,  6688.,  8272.,  9856.,  4490.,  5884.,  7278.,  8672.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  4060.,  5320.,  6580.,  7840.,  4640.,  6080.,  7520.,  8960.,  5220.,  6840.,  8460., 10080.,  5800.,  7600.,  9400., 11200.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  5800.,  7600.,  9400., 11200.,  5220.,  6840.,  8460., 10080.,  4640.,  6080.,  7520.,  8960.,  4060.,  5320.,  6580.,  7840.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3678.,  4820.,  5962.,  7104.,  4176.,  5472.,  6768.,  8064.,  4722.,  6188.,  7654.,  9120.,  5220.,  6840.,  8460., 10080.,  5766.,  7556.,  9346., 11136.,  5718.,  7492.,  9266., 11040.,  5766.,  7556.,  9346., 11136.,  5220.,  6840.,  8460., 10080.,  4722.,  6188.,  7654.,  9120.,  4176.,  5472.,  6768.,  8064.,  3678.,  4820.,  5962.,  7104.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3248.,  4256.,  5264.,  6272.,  3712.,  4864.,  6016.,  7168.,  4176.,  5472.,  6768.,  8064.,  4640.,  6080.,  7520.,  8960.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  4640.,  6080.,  7520.,  8960.,  4176.,  5472.,  6768.,  8064.,  3712.,  4864.,  6016.,  7168.,  3248.,  4256.,  5264.,  6272.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2866.,  3756.,  4646.,  5536.,  3248.,  4256.,  5264.,  6272.,  3678.,  4820.,  5962.,  7104.,  4060.,  5320.,  6580.,  7840.,  4490.,  5884.,  7278.,  8672.,  4442.,  5820.,  7198.,  8576.,  4490.,  5884.,  7278.,  8672.,  4060.,  5320.,  6580.,  7840.,  3678.,  4820.,  5962.,  7104.,  3248.,  4256.,  5264.,  6272.,  2866.,  3756.,  4646.,  5536.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2818.,  3692.,  4566.,  5440.,  3248.,  4256.,  5264.,  6272.,  3630.,  4756.,  5882.,  7008.,  4060.,  5320.,  6580.,  7840.,  4442.,  5820.,  7198.,  8576.,  4490.,  5884.,  7278.,  8672.,  4442.,  5820.,  7198.,  8576.,  4060.,  5320.,  6580.,  7840.,  3630.,  4756.,  5882.,  7008.,  3248.,  4256.,  5264.,  6272.,  2818.,  3692.,  4566.,  5440.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3248.,  4256.,  5264.,  6272.,  3712.,  4864.,  6016.,  7168.,  4176.,  5472.,  6768.,  8064.,  4640.,  6080.,  7520.,  8960.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  4640.,  6080.,  7520.,  8960.,  4176.,  5472.,  6768.,  8064.,  3712.,  4864.,  6016.,  7168.,  3248.,  4256.,  5264.,  6272.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3630.,  4756.,  5882.,  7008.,  4176.,  5472.,  6768.,  8064.,  4674.,  6124.,  7574.,  9024.,  5220.,  6840.,  8460., 10080.,  5718.,  7492.,  9266., 11040.,  5766.,  7556.,  9346., 11136.,  5718.,  7492.,  9266., 11040.,  5220.,  6840.,  8460., 10080.,  4674.,  6124.,  7574.,  9024.,  4176.,  5472.,  6768.,  8064.,  3630.,  4756.,  5882.,  7008.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  4060.,  5320.,  6580.,  7840.,  4640.,  6080.,  7520.,  8960.,  5220.,  6840.,  8460., 10080.,  5800.,  7600.,  9400., 11200.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  5800.,  7600.,  9400., 11200.,  5220.,  6840.,  8460., 10080.,  4640.,  6080.,  7520.,  8960.,  4060.,  5320.,  6580.,  7840.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4442.,  5820.,  7198.,  8576.,  5104.,  6688.,  8272.,  9856.,  5718.,  7492.,  9266., 11040.,  6380.,  8360., 10340., 12320.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  6380.,  8360., 10340., 12320.,  5718.,  7492.,  9266., 11040.,  5104.,  6688.,  8272.,  9856.,  4442.,  5820.,  7198.,  8576.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4490.,  5884.,  7278.,  8672.,  5104.,  6688.,  8272.,  9856.,  5766.,  7556.,  9346., 11136.,  6380.,  8360., 10340., 12320.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6380.,  8360., 10340., 12320.,  5766.,  7556.,  9346., 11136.,  5104.,  6688.,  8272.,  9856.,  4490.,  5884.,  7278.,  8672.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4442.,  5820.,  7198.,  8576.,  5104.,  6688.,  8272.,  9856.,  5718.,  7492.,  9266., 11040.,  6380.,  8360., 10340., 12320.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  6380.,  8360., 10340., 12320.,  5718.,  7492.,  9266., 11040.,  5104.,  6688.,  8272.,  9856.,  4442.,  5820.,  7198.,  8576.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  4060.,  5320.,  6580.,  7840.,  4640.,  6080.,  7520.,  8960.,  5220.,  6840.,  8460., 10080.,  5800.,  7600.,  9400., 11200.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  5800.,  7600.,  9400., 11200.,  5220.,  6840.,  8460., 10080.,  4640.,  6080.,  7520.,  8960.,  4060.,  5320.,  6580.,  7840.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3630.,  4756.,  5882.,  7008.,  4176.,  5472.,  6768.,  8064.,  4674.,  6124.,  7574.,  9024.,  5220.,  6840.,  8460., 10080.,  5718.,  7492.,  9266., 11040.,  5766.,  7556.,  9346., 11136.,  5718.,  7492.,  9266., 11040.,  5220.,  6840.,  8460., 10080.,  4674.,  6124.,  7574.,  9024.,  4176.,  5472.,  6768.,  8064.,  3630.,  4756.,  5882.,  7008.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3248.,  4256.,  5264.,  6272.,  3712.,  4864.,  6016.,  7168.,  4176.,  5472.,  6768.,  8064.,  4640.,  6080.,  7520.,  8960.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  4640.,  6080.,  7520.,  8960.,  4176.,  5472.,  6768.,  8064.,  3712.,  4864.,  6016.,  7168.,  3248.,  4256.,  5264.,  6272.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2818.,  3692.,  4566.,  5440.,  3248.,  4256.,  5264.,  6272.,  3630.,  4756.,  5882.,  7008.,  4060.,  5320.,  6580.,  7840.,  4442.,  5820.,  7198.,  8576.,  4490.,  5884.,  7278.,  8672.,  4442.,  5820.,  7198.,  8576.,  4060.,  5320.,  6580.,  7840.,  3630.,  4756.,  5882.,  7008.,  3248.,  4256.,  5264.,  6272.,  2818.,  3692.,  4566.,  5440.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.};
  const std::array<int, 4> in_shape = {{ 3, 13, 13, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x13x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.};
  const std::array<int, 4> in_shape = {{ 3, 13, 13, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x14x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2673., 3080., 3524., 3983., 4355., 4650., 4603., 4380., 4269., 3765., 3544., 3148., 2791., 2463., 3161., 3458., 3804., 4320., 4983., 5498., 5393., 5224., 5263., 4662., 4180., 3568., 3121., 2718., 3668., 3968., 4544., 5180., 5676., 6200., 6284., 6224., 6196., 5572., 5152., 4384., 3644., 2956., 3526., 4172., 5072., 5673., 6366., 7014., 7070., 7158., 7358., 6859., 6162., 5404., 4786., 3965., 3731., 4192., 4892., 5709., 6857., 7638., 7641., 7612., 7759., 7207., 6576., 5924., 5277., 4693., 4335., 4902., 5684., 6222., 7065., 7978., 8303., 8276., 8345., 7588., 6848., 6120., 5255., 4456., 4945., 5600., 6188., 6682., 7455., 7968., 7925., 7978., 8303., 7526., 6712., 5952., 5145., 4398., 5123., 5866., 6500., 7286., 8069., 8518., 8363., 7968., 7925., 7192., 6624., 5896., 5067., 4308., 4513., 5220., 6036., 6807., 7427., 8126., 8167., 7872., 7737., 6745., 6012., 5148., 4371., 3659., 3840., 4388., 5000., 5619., 6332., 7034., 7104., 7254., 7372., 6649., 6030., 5044., 4244., 3511., 3516., 3808., 4384., 5028., 5492., 5848., 5796., 5728., 5948., 5692., 5376., 4704., 4132., 3364., 2849., 3342., 4092., 4436., 4847., 5318., 5281., 5132., 5079., 4598., 4156., 3632., 3273., 2958., 2443., 2644., 3068., 3517., 4033., 4354., 4421., 4552., 4587., 4171., 3644., 3060., 2713., 2401., 2121., 2462., 2836., 3285., 3979., 4688., 5121., 5138., 5011., 4421., 4118., 3788., 3261., 2767., 2867., 3056., 3396., 3800., 4437., 5028., 5243., 5490., 5945., 5552., 5032., 4536., 3863., 3228., 3556., 4056., 4416., 4916., 5628., 5968., 5844., 5688., 5836., 5428., 5240., 4864., 4180., 3548., 3936., 4608., 5368., 6159., 6876., 7510., 7486., 7110., 6878., 6125., 5612., 4948., 4350., 3811., 4219., 4850., 5548., 6431., 7473., 8280., 8379., 8414., 8433., 7607., 6890., 5812., 4927., 4117., 4713., 5304., 6188., 7146., 7975., 8664., 8861., 8834., 8871., 8254., 7608., 6640., 5729., 4646., 4059., 4850., 5908., 6678., 7549., 8382., 8595., 8664., 8861., 8240., 7440., 6600., 5923., 5068., 4029., 4556., 5324., 6210., 7427., 8276., 8345., 8382., 8595., 7922., 7176., 6416., 5669., 4994., 3985., 4586., 5396., 5957., 6611., 7316., 7597., 7510., 7759., 7265., 6546., 5836., 4985., 4195., 3746., 4492., 5152., 5701., 6338., 6686., 6644., 6666., 6928., 6291., 5796., 5340., 4596., 3909., 3052., 3592., 4256., 5196., 5956., 6336., 6332., 6040., 6052., 5548., 5032., 4320., 3852., 3444., 2779., 3236., 3780., 4276., 4829., 5416., 5587., 5630., 5785., 5248., 4712., 4008., 3367., 2780., 2251., 2726., 3244., 3623., 4049., 4420., 4615., 4842., 4989., 4739., 4510., 3876., 3291., 2761., 3313., 3556., 3828., 4139., 4547., 4966., 5111., 5096., 4905., 4389., 4068., 3388., 2723., 2095., 2957., 3502., 4284., 4752., 5299., 5790., 5701., 5628., 5635., 5114., 4620., 4064., 3645., 3018., 3156., 3552., 4160., 4860., 5868., 6488., 6412., 6288., 6228., 5572., 5024., 4448., 3868., 3340., 4042., 4324., 4800., 5269., 6026., 6838., 7214., 7222., 7134., 6463., 5798., 5132., 4314., 3545., 4643., 5284., 5852., 6321., 7065., 7546., 7469., 7472., 7731., 7031., 6292., 5604., 4865., 4181., 5123., 5866., 6500., 7286., 8069., 8518., 8363., 7968., 7925., 7192., 6624., 5896., 5067., 4308., 4901., 5668., 6540., 7362., 8139., 8860., 8849., 8518., 8363., 7322., 6552., 5664., 4877., 4170., 4823., 5550., 6340., 7134., 8097., 8834., 8871., 8860., 8849., 7932., 7136., 5992., 5055., 4208., 4481., 5024., 5860., 6771., 7507., 8090., 8211., 8108., 8069., 7529., 6952., 6044., 5183., 4139., 3508., 4164., 5080., 5703., 6408., 7058., 7096., 6990., 7012., 6589., 5978., 5316., 4804., 4099., 3324., 3680., 4256., 4932., 5684., 6040., 6084., 6080., 6012., 5436., 4768., 4064., 3620., 3236., 3237., 3706., 4364., 4708., 5115., 5546., 5621., 5312., 5275., 4858., 4196., 3520., 2917., 2362., 2763., 3384., 3900., 4273., 4705., 4822., 4665., 4556., 4543., 4011., 3600., 3204., 2701., 2241.};
  const std::array<int, 4> in_shape = {{ 3, 13, 14, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x14x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {7978., 8303., 8276., 8345., 7968., 7925., 7978., 8303., 8518., 8363., 7968., 7925., 8664., 8861., 8834., 8871., 8382., 8595., 8664., 8861., 8276., 8345., 8382., 8595., 8518., 8363., 7968., 7925., 8860., 8849., 8518., 8363., 8834., 8871., 8860., 8849.};
  const std::array<int, 4> in_shape = {{ 3, 13, 14, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x14x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2568., 2898., 3098., 3472., 3408., 3832., 3774., 4238., 4056., 4566., 4402., 4948., 4306., 4838., 4114., 4632., 4130., 4650., 3564., 4026., 3266., 3680., 2896., 3256., 2530., 2846., 2292., 2558., 3083., 3458., 3446., 3876., 3852., 4344., 4383., 4928., 4801., 5406., 5348., 6004., 5317., 5970., 5174., 5808., 5175., 5806., 4519., 5084., 4092., 4600., 3396., 3840., 2925., 3314., 2613., 2940., 3360., 3768., 3720., 4192., 4352., 4896., 4920., 5528., 5344., 6024., 5960., 6704., 5976., 6728., 5976., 6720., 6024., 6776., 5408., 6088., 4984., 5600., 4352., 4896., 3912., 4392., 3168., 3576., 3551., 3980., 4052., 4552., 4796., 5376., 5285., 5938., 5869., 6604., 6466., 7276., 6543., 7372., 6700., 7532., 6809., 7660., 6447., 7222., 5746., 6452., 4884., 5512., 4423., 4980., 3709., 4186., 3792., 4262., 4254., 4800., 4944., 5576., 5458., 6170., 6528., 7330., 7430., 8316., 7326., 8226., 7174., 8072., 7342., 8270., 6924., 7774., 6150., 6928., 5520., 6216., 4990., 5610., 4260., 4794., 4059., 4590., 4810., 5420., 5772., 6472., 6123., 6908., 6977., 7858., 7736., 8708., 7977., 8958., 8042., 9016., 8011., 9010., 7263., 8168., 6608., 7440., 6148., 6896., 5249., 5918., 4445., 5024., 4675., 5266., 5480., 6144., 5964., 6712., 6425., 7252., 7337., 8254., 7718., 8720., 7751., 8746., 7736., 8708., 7977., 8958., 7295., 8172., 6342., 7136., 5636., 6336., 4911., 5538., 4301., 4844., 4971., 5590., 5814., 6516., 6284., 7080., 7015., 7884., 7633., 8586., 8052., 9084., 8117., 9142., 7718., 8720., 7751., 8746., 7007., 7888., 6396., 7184., 5828., 6512., 4877., 5478., 4093., 4600., 4228., 4786., 5146., 5784., 5904., 6632., 6562., 7358., 6924., 7798., 7386., 8332., 7374., 8318., 7218., 8144., 7366., 8290., 6408., 7234., 5850., 6584., 5104., 5736., 4350., 4902., 3784., 4246., 3811., 4288., 4380., 4936., 4988., 5632., 5633., 6342., 6185., 6968., 6882., 7732., 6763., 7616., 6564., 7404., 6541., 7384., 5739., 6498., 5234., 5916., 4532., 5128., 4019., 4536., 3457., 3886., 3360., 3768., 3720., 4192., 4352., 4896., 4920., 5528., 5344., 6024., 5960., 6704., 5976., 6728., 5976., 6720., 6024., 6776., 5408., 6088., 4984., 5600., 4352., 4896., 3912., 4392., 3168., 3576., 2755., 3106., 3114., 3516., 3724., 4184., 3979., 4488., 4313., 4878., 4888., 5516., 4977., 5618., 5114., 5752., 5171., 5822., 4815., 5404., 4304., 4840., 3588., 4064., 3225., 3650., 2813., 3180., 2436., 2742., 2654., 3000., 3088., 3480., 3262., 3690., 3740., 4210., 4174., 4692., 4050., 4570., 4054., 4576., 4106., 4646., 3776., 4262., 3454., 3896., 3184., 3576., 2914., 3266., 2336., 2642., 2016., 2274., 2474., 2780., 2960., 3320., 3254., 3674., 3776., 4262., 4386., 4928., 4706., 5266., 4722., 5284., 4690., 5270., 4228., 4762., 3946., 4444., 3728., 4184., 3154., 3562., 2716., 3070., 2755., 3094., 3228., 3616., 3596., 4040., 4021., 4528., 4665., 5242., 4970., 5608., 5051., 5702., 5212., 5860., 5517., 6178., 5047., 5648., 4474., 5024., 4036., 4528., 3491., 3934., 3093., 3480., 3232., 3640., 3800., 4272., 4224., 4768., 4904., 5512., 5536., 6216., 5912., 6656., 6024., 6776., 5832., 6576., 5976., 6728., 5408., 6088., 4968., 5584., 4480., 5024., 3864., 4344., 3360., 3768., 3695., 4160., 4466., 5008., 5052., 5680., 5691., 6398., 6349., 7144., 7056., 7916., 6989., 7852., 6746., 7596., 6775., 7628., 6039., 6810., 5584., 6280., 4884., 5496., 4277., 4812., 3845., 4294., 4088., 4598., 4750., 5348., 5456., 6152., 6282., 7070., 7064., 7954., 7798., 8768., 7886., 8870., 7878., 8844., 7822., 8786., 6996., 7870., 6446., 7236., 5456., 6152., 4782., 5390., 4092., 4602., 4387., 4930., 5040., 5680., 5964., 6712., 6817., 7668., 7561., 8526., 8414., 9472., 8639., 9722., 8704., 9780., 8625., 9710., 7871., 8860., 7134., 8032., 6276., 7072., 5623., 6322., 4493., 5084., 4107., 4614., 4782., 5380., 5708., 6408., 6383., 7180., 7153., 8058., 7932., 8940., 8173., 9222., 8414., 9472., 8639., 9722., 8223., 9216., 7268., 8176., 6212., 7024., 5573., 6294., 4733., 5352., 4019., 4522., 4556., 5144., 5324., 6008., 5917., 6692., 7065., 7942., 8042., 9016., 8011., 9010., 7932., 8940., 8173., 9222., 7743., 8708., 6986., 7872., 6404., 7200., 5683., 6394., 4781., 5396., 3452., 3922., 4290., 4836., 5328., 5960., 5746., 6458., 6452., 7254., 7042., 7928., 7238., 8138., 7226., 8124., 7342., 8270., 6720., 7570., 6138., 6916., 5744., 6440., 4902., 5522., 4144., 4678., 3651., 4100., 4242., 4760., 4732., 5328., 5167., 5834., 5849., 6596., 6216., 7036., 6385., 7208., 6442., 7252., 6691., 7520., 6083., 6838., 5432., 6120., 4980., 5592., 4281., 4824., 3673., 4138., 3232., 3640., 3800., 4272., 4224., 4768., 4904., 5512., 5536., 6216., 5912., 6656., 6024., 6776., 5832., 6576., 5976., 6728., 5408., 6088., 4968., 5584., 4480., 5024., 3864., 4344., 3360., 3768., 2651., 2998., 3408., 3816., 3980., 4456., 4401., 4936., 4721., 5322., 5086., 5744., 5079., 5750., 5088., 5756., 5305., 5986., 4863., 5488., 4558., 5120., 3972., 4464., 3439., 3870., 3037., 3400., 2092., 2358., 2550., 2876., 3024., 3416., 3422., 3870., 3924., 4434., 4518., 5080., 4634., 5214., 4574., 5156., 4594., 5194., 4264., 4822., 4062., 4572., 3568., 4024., 3130., 3526., 2584., 2914., 3000., 3346., 3322., 3720., 3664., 4120., 3918., 4422., 4264., 4822., 4786., 5388., 4802., 5406., 4770., 5360., 4642., 5218., 4124., 4634., 3762., 4216., 3152., 3544., 2690., 3030., 2116., 2398., 2875., 3242., 3346., 3772., 4044., 4536., 4475., 5024., 4977., 5590., 5472., 6140., 5457., 6138., 5490., 6168., 5427., 6102., 4999., 5604., 4424., 4968., 3652., 4128., 3241., 3658., 2741., 3092., 3296., 3704., 3720., 4192., 4352., 4896., 4792., 5400., 5536., 6216., 6088., 6832., 6040., 6792., 5912., 6656., 5896., 6648., 5472., 6152., 4856., 5472., 4352., 4896., 3912., 4392., 3232., 3640., 3775., 4244., 4256., 4792., 4924., 5536., 5217., 5898., 5997., 6756., 6670., 7500., 6891., 7724., 6904., 7724., 6709., 7532., 6015., 6750., 5374., 6044., 4884., 5480., 4147., 4676., 3469., 3922., 4256., 4806., 5086., 5704., 5584., 6280., 6050., 6818., 6960., 7810., 7334., 8260., 7342., 8266., 7270., 8176., 7438., 8342., 6748., 7550., 5766., 6488., 5008., 5640., 4414., 4978., 3924., 4410., 4971., 5590., 5814., 6516., 6284., 7080., 7015., 7884., 7633., 8586., 8052., 9084., 8117., 9142., 7718., 8720., 7751., 8746., 7007., 7888., 6396., 7184., 5828., 6512., 4877., 5478., 4093., 4600., 4755., 5370., 5764., 6472., 6604., 7416., 7333., 8228., 7865., 8854., 8482., 9544., 8323., 9378., 8052., 9084., 8117., 9142., 7103., 8020., 6450., 7264., 5636., 6336., 4843., 5450., 4269., 4772., 4603., 5182., 5394., 6076., 6220., 7016., 7075., 7964., 7905., 8898., 8704., 9780., 8625., 9710., 8482., 9544., 8323., 9378., 7391., 8344., 6776., 7632., 5764., 6512., 5001., 5646., 4253., 4784., 4084., 4594., 4666., 5264., 5520., 6216., 6306., 7094., 6940., 7830., 7674., 8644., 7806., 8790., 7778., 8744., 7606., 8570., 6776., 7650., 6202., 6992., 5488., 6184., 4958., 5566., 3928., 4438., 3683., 4136., 4216., 4744., 4988., 5600., 5501., 6190., 6089., 6864., 6670., 7524., 6727., 7600., 6784., 7644., 6825., 7688., 6427., 7210., 5678., 6388., 4788., 5416., 4271., 4824., 3505., 3974., 3296., 3704., 3720., 4192., 4352., 4896., 4792., 5400., 5536., 6216., 6088., 6832., 6040., 6792., 5912., 6656., 5896., 6648., 5472., 6152., 4856., 5472., 4352., 4896., 3912., 4392., 3232., 3640., 2803., 3178., 3302., 3732., 3980., 4472., 4231., 4776., 4745., 5350., 5124., 5780., 5197., 5850., 5030., 5664., 4879., 5510., 4463., 5028., 4028., 4536., 3716., 4160., 3125., 3514., 2557., 2884., 2772., 3126., 3246., 3648., 3600., 4056., 3870., 4370., 4364., 4914., 4526., 5116., 4482., 5058., 4294., 4840., 4282., 4814., 3856., 4326., 3326., 3744., 2928., 3288., 2418., 2730., 1936., 2194.};
  const std::array<int, 4> in_shape = {{ 3, 13, 14, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x14x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {7736., 8708., 7977., 8958., 8042., 9016., 8011., 9010., 7718., 8720., 7751., 8746., 7736., 8708., 7977., 8958., 8052., 9084., 8117., 9142., 7718., 8720., 7751., 8746., 8414., 9472., 8639., 9722., 8704., 9780., 8625., 9710., 7932., 8940., 8173., 9222., 8414., 9472., 8639., 9722., 8042., 9016., 8011., 9010., 7932., 8940., 8173., 9222., 8052., 9084., 8117., 9142., 7718., 8720., 7751., 8746., 8482., 9544., 8323., 9378., 8052., 9084., 8117., 9142., 8704., 9780., 8625., 9710., 8482., 9544., 8323., 9378.};
  const std::array<int, 4> in_shape = {{ 3, 13, 14, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x14x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2182.,  2512.,  2842.,  3172.,  2590.,  2964.,  3338.,  3712.,  2936.,  3360.,  3784.,  4208.,  3164.,  3628.,  4092.,  4556.,  3554.,  4064.,  4574.,  5084.,  3906.,  4452.,  4998.,  5544.,  3712.,  4244.,  4776.,  5308.,  3582.,  4100.,  4618.,  5136.,  3596.,  4116.,  4636.,  5156.,  3258.,  3720.,  4182.,  4644.,  2854.,  3268.,  3682.,  4096.,  2488.,  2848.,  3208.,  3568.,  2312.,  2628.,  2944.,  3260.,  2030.,  2296.,  2562.,  2828.,  2511.,  2886.,  3261.,  3636.,  2878.,  3308.,  3738.,  4168.,  3404.,  3896.,  4388.,  4880.,  3709.,  4254.,  4799.,  5344.,  4101.,  4706.,  5311.,  5916.,  4568.,  5224.,  5880.,  6536.,  4637.,  5290.,  5943.,  6596.,  4498.,  5132.,  5766.,  6400.,  4375.,  5006.,  5637.,  6268.,  3897.,  4462.,  5027.,  5592.,  3548.,  4056.,  4564.,  5072.,  3116.,  3560.,  4004.,  4448.,  2549.,  2938.,  3327.,  3716.,  2227.,  2554.,  2881.,  3208.,  2920.,  3328.,  3736.,  4144.,  3320.,  3792.,  4264.,  4736.,  3808.,  4352.,  4896.,  5440.,  4240.,  4848.,  5456.,  6064.,  4696.,  5376.,  6056.,  6736.,  5096.,  5840.,  6584.,  7328.,  5184.,  5936.,  6688.,  7440.,  5256.,  6000.,  6744.,  7488.,  5408.,  6160.,  6912.,  7664.,  4824.,  5504.,  6184.,  6864.,  4296.,  4912.,  5528.,  6144.,  3808.,  4352.,  4896.,  5440.,  3376.,  3856.,  4336.,  4816.,  2792.,  3200.,  3608.,  4016.,  3057.,  3486.,  3915.,  4344.,  3540.,  4040.,  4540.,  5040.,  4052.,  4632.,  5212.,  5792.,  4637.,  5290.,  5943.,  6596.,  5195.,  5930.,  6665.,  7400.,  5578.,  6388.,  7198.,  8008.,  5681.,  6510.,  7339.,  8168.,  5704.,  6536.,  7368.,  8200.,  5871.,  6722.,  7573.,  8424.,  5575.,  6350.,  7125.,  7900.,  5026.,  5732.,  6438.,  7144.,  4372.,  5000.,  5628.,  6256.,  3953.,  4510.,  5067.,  5624.,  3501.,  3978.,  4455.,  4932.,  3194.,  3664.,  4134.,  4604.,  3930.,  4476.,  5022.,  5568.,  4392.,  5024.,  5656.,  6288.,  4812.,  5524.,  6236.,  6948.,  5630.,  6432.,  7234.,  8036.,  6422.,  7308.,  8194.,  9080.,  6328.,  7228.,  8128.,  9028.,  6154.,  7052.,  7950.,  8848.,  6332.,  7260.,  8188.,  9116.,  5942.,  6792.,  7642.,  8492.,  5506.,  6284.,  7062.,  7840.,  4840.,  5536.,  6232.,  6928.,  4320.,  4940.,  5560.,  6180.,  3874.,  4408.,  4942.,  5476.,  3507.,  4038.,  4569.,  5100.,  4146.,  4756.,  5366.,  5976.,  4988.,  5688.,  6388.,  7088.,  5429.,  6214.,  6999.,  7784.,  5937.,  6818.,  7699.,  8580.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  7014.,  7988.,  8962.,  9936.,  6991.,  7990.,  8989.,  9988.,  6245.,  7150.,  8055.,  8960.,  5792.,  6624.,  7456.,  8288.,  5244.,  5992.,  6740.,  7488.,  4517.,  5186.,  5855.,  6524.,  3959.,  4538.,  5117.,  5696.,  4199.,  4790.,  5381.,  5972.,  4632.,  5296.,  5960.,  6624.,  5196.,  5944.,  6692.,  7440.,  5767.,  6594.,  7421.,  8248.,  6333.,  7250.,  8167.,  9084.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  6305.,  7182.,  8059.,  8936.,  5586.,  6380.,  7174.,  7968.,  4908.,  5608.,  6308.,  7008.,  4331.,  4958.,  5585.,  6212.,  3707.,  4250.,  4793.,  5336.,  4283.,  4902.,  5521.,  6140.,  4974.,  5676.,  6378.,  7080.,  5660.,  6456.,  7252.,  8048.,  6169.,  7038.,  7907.,  8776.,  6601.,  7554.,  8507.,  9460.,  7104.,  8136.,  9168., 10200.,  7049.,  8074.,  9099., 10124.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  6205.,  7086.,  7967.,  8848.,  5732.,  6520.,  7308.,  8096.,  4924.,  5608.,  6292.,  6976.,  4225.,  4826.,  5427.,  6028.,  3583.,  4090.,  4597.,  5104.,  3754.,  4312.,  4870.,  5428.,  4342.,  4980.,  5618.,  6256.,  5064.,  5792.,  6520.,  7248.,  5656.,  6452.,  7248.,  8044.,  6206.,  7080.,  7954.,  8828.,  6642.,  7588.,  8534.,  9480.,  6524.,  7468.,  8412.,  9356.,  6390.,  7316.,  8242.,  9168.,  6336.,  7260.,  8184.,  9108.,  5558.,  6384.,  7210.,  8036.,  5014.,  5748.,  6482.,  7216.,  4456.,  5088.,  5720.,  6352.,  3940.,  4492.,  5044.,  5596.,  3250.,  3712.,  4174.,  4636.,  3273.,  3750.,  4227.,  4704.,  3756.,  4312.,  4868.,  5424.,  4500.,  5144.,  5788.,  6432.,  4893.,  5602.,  6311.,  7020.,  5411.,  6194.,  6977.,  7760.,  6034.,  6884.,  7734.,  8584.,  6049.,  6902.,  7755.,  8608.,  5920.,  6760.,  7600.,  8440.,  5871.,  6714.,  7557.,  8400.,  5247.,  6006.,  6765.,  7524.,  4634.,  5316.,  5998.,  6680.,  4084.,  4680.,  5276.,  5872.,  3441.,  3958.,  4475.,  4992.,  2917.,  3346.,  3775.,  4204.,  2920.,  3328.,  3736.,  4144.,  3320.,  3792.,  4264.,  4736.,  3808.,  4352.,  4896.,  5440.,  4240.,  4848.,  5456.,  6064.,  4696.,  5376.,  6056.,  6736.,  5096.,  5840.,  6584.,  7328.,  5184.,  5936.,  6688.,  7440.,  5256.,  6000.,  6744.,  7488.,  5408.,  6160.,  6912.,  7664.,  4824.,  5504.,  6184.,  6864.,  4296.,  4912.,  5528.,  6144.,  3808.,  4352.,  4896.,  5440.,  3376.,  3856.,  4336.,  4816.,  2792.,  3200.,  3608.,  4016.,  2439.,  2790.,  3141.,  3492.,  2786.,  3188.,  3590.,  3992.,  3180.,  3640.,  4100.,  4560.,  3561.,  4070.,  4579.,  5088.,  3917.,  4482.,  5047.,  5612.,  4316.,  4944.,  5572.,  6200.,  4401.,  5042.,  5683.,  6324.,  4342.,  4980.,  5618.,  6256.,  4363.,  5014.,  5665.,  6316.,  4193.,  4782.,  5371.,  5960.,  3880.,  4416.,  4952.,  5488.,  3340.,  3816.,  4292.,  4768.,  2905.,  3330.,  3755.,  4180.,  2635.,  3002.,  3369.,  3736.,  2022.,  2328.,  2634.,  2940.,  2370.,  2716.,  3062.,  3408.,  2712.,  3104.,  3496.,  3888.,  2960.,  3388.,  3816.,  4244.,  3282.,  3752.,  4222.,  4692.,  3590.,  4108.,  4626.,  5144.,  3596.,  4116.,  4636.,  5156.,  3602.,  4124.,  4646.,  5168.,  3688.,  4228.,  4768.,  5308.,  3210.,  3696.,  4182.,  4668.,  2978.,  3420.,  3862.,  4304.,  2776.,  3168.,  3560.,  3952.,  2484.,  2836.,  3188.,  3540.,  2062.,  2368.,  2674.,  2980.,  1630.,  1888.,  2146.,  2404.,  2114.,  2420.,  2726.,  3032.,  2616.,  2976.,  3336.,  3696.,  2904.,  3324.,  3744.,  4164.,  3210.,  3696.,  4182.,  4668.,  3782.,  4324.,  4866.,  5408.,  4132.,  4692.,  5252.,  5812.,  4146.,  4708.,  5270.,  5832.,  4048.,  4628.,  5208.,  5788.,  3682.,  4216.,  4750.,  5284.,  3586.,  4084.,  4582.,  5080.,  3288.,  3744.,  4200.,  4656.,  2828.,  3236.,  3644.,  4052.,  2438.,  2792.,  3146.,  3500.,  2339.,  2678.,  3017.,  3356.,  2644.,  3032.,  3420.,  3808.,  3068.,  3512.,  3956.,  4400.,  3535.,  4042.,  4549.,  5056.,  3985.,  4562.,  5139.,  5716.,  4342.,  4980.,  5618.,  6256.,  4363.,  5014.,  5665.,  6316.,  4560.,  5208.,  5856.,  6504.,  4773.,  5434.,  6095.,  6756.,  4277.,  4878.,  5479.,  6080.,  3758.,  4308.,  4858.,  5408.,  3452.,  3944.,  4436.,  4928.,  3115.,  3558.,  4001.,  4444.,  2647.,  3034.,  3421.,  3808.,  2920.,  3328.,  3736.,  4144.,  3352.,  3824.,  4296.,  4768.,  3808.,  4352.,  4896.,  5440.,  4336.,  4944.,  5552.,  6160.,  4824.,  5504.,  6184.,  6864.,  5128.,  5872.,  6616.,  7360.,  5152.,  5904.,  6656.,  7408.,  5096.,  5840.,  6584.,  7328.,  5184.,  5936.,  6688.,  7440.,  4824.,  5504.,  6184.,  6864.,  4392.,  5008.,  5624.,  6240.,  3808.,  4352.,  4896.,  5440.,  3408.,  3888.,  4368.,  4848.,  2920.,  3328.,  3736.,  4144.,  3181.,  3646.,  4111.,  4576.,  3814.,  4356.,  4898.,  5440.,  4388.,  5016.,  5644.,  6272.,  4883.,  5590.,  6297.,  7004.,  5615.,  6410.,  7205.,  8000.,  6260.,  7120.,  7980.,  8840.,  6091.,  6954.,  7817.,  8680.,  5842.,  6692.,  7542.,  8392.,  5865.,  6718.,  7571.,  8424.,  5467.,  6238.,  7009.,  7780.,  4872.,  5568.,  6264.,  6960.,  4260.,  4872.,  5484.,  6096.,  3779.,  4314.,  4849.,  5384.,  3353.,  3802.,  4251.,  4700.,  3426.,  3936.,  4446.,  4956.,  4070.,  4668.,  5266.,  5864.,  4840.,  5536.,  6232.,  6928.,  5392.,  6180.,  6968.,  7756.,  6070.,  6960.,  7850.,  8740.,  6818.,  7788.,  8758.,  9728.,  7108.,  8092.,  9076., 10060.,  6982.,  7948.,  8914.,  9880.,  6744.,  7708.,  8672.,  9636.,  6030.,  6904.,  7778.,  8652.,  5606.,  6396.,  7186.,  7976.,  4968.,  5664.,  6360.,  7056.,  4140.,  4748.,  5356.,  5964.,  3498.,  4008.,  4518.,  5028.,  3799.,  4342.,  4885.,  5428.,  4416.,  5056.,  5696.,  6336.,  5196.,  5944.,  6692.,  7440.,  5887.,  6738.,  7589.,  8440.,  6605.,  7570.,  8535.,  9500.,  7162.,  8220.,  9278., 10336.,  7395.,  8478.,  9561., 10644.,  7596.,  8672.,  9748., 10824.,  7749.,  8834.,  9919., 11004.,  6961.,  7950.,  8939.,  9928.,  6170.,  7068.,  7966.,  8864.,  5580.,  6376.,  7172.,  7968.,  4915.,  5614.,  6313.,  7012.,  4043.,  4634.,  5225.,  5816.,  3563.,  4070.,  4577.,  5084.,  4166.,  4764.,  5362.,  5960.,  4860.,  5560.,  6260.,  6960.,  5617.,  6414.,  7211.,  8008.,  6329.,  7234.,  8139.,  9044.,  6888.,  7896.,  8904.,  9912.,  7137.,  8186.,  9235., 10284.,  7162.,  8220.,  9278., 10336.,  7395.,  8478.,  9561., 10644.,  7117.,  8110.,  9103., 10096.,  6460.,  7368.,  8276.,  9184.,  5564.,  6376.,  7188.,  8000.,  4985.,  5706.,  6427.,  7148.,  4495.,  5114.,  5733.,  6352.,  3423.,  3926.,  4429.,  4932.,  4204.,  4792.,  5380.,  5968.,  4748.,  5432.,  6116.,  6800.,  5251.,  6026.,  6801.,  7576.,  6149.,  7026.,  7903.,  8780.,  7014.,  7988.,  8962.,  9936.,  6991.,  7990.,  8989.,  9988.,  6888.,  7896.,  8904.,  9912.,  7137.,  8186.,  9235., 10284.,  6665.,  7630.,  8595.,  9560.,  6206.,  7092.,  7978.,  8864.,  5580.,  6376.,  7172.,  7968.,  4895.,  5606.,  6317.,  7028.,  4339.,  4954.,  5569.,  6184.,  3090.,  3560.,  4030.,  4500.,  3714.,  4260.,  4806.,  5352.,  4520.,  5152.,  5784.,  6416.,  4908.,  5620.,  6332.,  7044.,  5398.,  6200.,  7002.,  7804.,  6206.,  7092.,  7978.,  8864.,  6488.,  7388.,  8288.,  9188.,  6370.,  7268.,  8166.,  9064.,  6476.,  7404.,  8332.,  9260.,  5806.,  6656.,  7506.,  8356.,  5418.,  6196.,  6974.,  7752.,  4904.,  5600.,  6296.,  6992.,  4176.,  4796.,  5416.,  6036.,  3578.,  4112.,  4646.,  5180.,  3205.,  3654.,  4103.,  4552.,  3518.,  4036.,  4554.,  5072.,  4164.,  4760.,  5356.,  5952.,  4771.,  5438.,  6105.,  6772.,  5159.,  5906.,  6653.,  7400.,  5500.,  6320.,  7140.,  7960.,  5579.,  6402.,  7225.,  8048.,  5706.,  6516.,  7326.,  8136.,  5929.,  6758.,  7587.,  8416.,  5299.,  6054.,  6809.,  7564.,  4768.,  5456.,  6144.,  6832.,  4324.,  4936.,  5548.,  6160.,  3779.,  4322.,  4865.,  5408.,  3121.,  3586.,  4051.,  4516.,  2920.,  3328.,  3736.,  4144.,  3352.,  3824.,  4296.,  4768.,  3808.,  4352.,  4896.,  5440.,  4336.,  4944.,  5552.,  6160.,  4824.,  5504.,  6184.,  6864.,  5128.,  5872.,  6616.,  7360.,  5152.,  5904.,  6656.,  7408.,  5096.,  5840.,  6584.,  7328.,  5184.,  5936.,  6688.,  7440.,  4824.,  5504.,  6184.,  6864.,  4392.,  5008.,  5624.,  6240.,  3808.,  4352.,  4896.,  5440.,  3408.,  3888.,  4368.,  4848.,  2920.,  3328.,  3736.,  4144.,  2363.,  2710.,  3057.,  3404.,  2856.,  3264.,  3672.,  4080.,  3292.,  3768.,  4244.,  4720.,  3707.,  4242.,  4777.,  5312.,  4249.,  4850.,  5451.,  6052.,  4714.,  5372.,  6030.,  6688.,  4607.,  5278.,  5949.,  6620.,  4548.,  5216.,  5884.,  6552.,  4633.,  5314.,  5995.,  6676.,  4317.,  4942.,  5567.,  6192.,  3946.,  4508.,  5070.,  5632.,  3452.,  3944.,  4436.,  4928.,  2975.,  3406.,  3837.,  4268.,  2607.,  2970.,  3333.,  3696.,  1694.,  1960.,  2226.,  2492.,  2214.,  2540.,  2866.,  3192.,  2840.,  3232.,  3624.,  4016.,  3068.,  3516.,  3964.,  4412.,  3386.,  3896.,  4406.,  4916.,  3978.,  4540.,  5102.,  5664.,  4192.,  4772.,  5352.,  5932.,  4070.,  4652.,  5234.,  5816.,  4092.,  4692.,  5292.,  5892.,  3794.,  4352.,  4910.,  5468.,  3582.,  4092.,  4602.,  5112.,  3224.,  3680.,  4136.,  4592.,  2648.,  3044.,  3440.,  3836.,  2182.,  2512.,  2842.,  3172.,  2454.,  2800.,  3146.,  3492.,  2886.,  3284.,  3682.,  4080.,  3160.,  3616.,  4072.,  4528.,  3348.,  3852.,  4356.,  4860.,  3794.,  4352.,  4910.,  5468.,  4170.,  4772.,  5374.,  5976.,  4184.,  4788.,  5392.,  5996.,  4118.,  4708.,  5298.,  5888.,  4116.,  4692.,  5268.,  5844.,  3690.,  4200.,  4710.,  5220.,  3230.,  3684.,  4138.,  4592.,  2712.,  3104.,  3496.,  3888.,  2352.,  2692.,  3032.,  3372.,  1982.,  2264.,  2546.,  2828.,  2487.,  2854.,  3221.,  3588.,  3002.,  3428.,  3854.,  4280.,  3532.,  4024.,  4516.,  5008.,  3889.,  4438.,  4987.,  5536.,  4189.,  4802.,  5415.,  6028.,  4548.,  5216.,  5884.,  6552.,  4633.,  5314.,  5995.,  6676.,  4574.,  5252.,  5930.,  6608.,  4579.,  5254.,  5929.,  6604.,  4305.,  4910.,  5515.,  6120.,  3920.,  4464.,  5008.,  5552.,  3340.,  3816.,  4292.,  4768.,  2897.,  3314.,  3731.,  4148.,  2523.,  2874.,  3225.,  3576.,  2792.,  3200.,  3608.,  4016.,  3320.,  3792.,  4264.,  4736.,  3808.,  4352.,  4896.,  5440.,  4240.,  4848.,  5456.,  6064.,  4824.,  5504.,  6184.,  6864.,  5352.,  6096.,  6840.,  7584.,  5312.,  6064.,  6816.,  7568.,  5128.,  5872.,  6616.,  7360.,  5152.,  5904.,  6656.,  7408.,  4696.,  5376.,  6056.,  6736.,  4296.,  4912.,  5528.,  6144.,  3808.,  4352.,  4896.,  5440.,  3376.,  3856.,  4336.,  4816.,  2920.,  3328.,  3736.,  4144.,  3209.,  3678.,  4147.,  4616.,  3656.,  4192.,  4728.,  5264.,  4276.,  4888.,  5500.,  6112.,  4729.,  5410.,  6091.,  6772.,  5235.,  5994.,  6753.,  7512.,  5838.,  6668.,  7498.,  8328.,  5989.,  6822.,  7655.,  8488.,  5996.,  6816.,  7636.,  8456.,  5827.,  6650.,  7473.,  8296.,  5135.,  5870.,  6605.,  7340.,  4638.,  5308.,  5978.,  6648.,  4148.,  4744.,  5340.,  5936.,  3621.,  4150.,  4679.,  5208.,  3173.,  3626.,  4079.,  4532.,  3914.,  4464.,  5014.,  5564.,  4434.,  5052.,  5670.,  6288.,  4840.,  5536.,  6232.,  6928.,  5236.,  6004.,  6772.,  7540.,  5870.,  6720.,  7570.,  8420.,  6446.,  7372.,  8298.,  9224.,  6336.,  7260.,  8184.,  9108.,  6338.,  7244.,  8150.,  9056.,  6548.,  7452.,  8356.,  9260.,  5830.,  6632.,  7434.,  8236.,  5114.,  5836.,  6558.,  7280.,  4392.,  5024.,  5656.,  6288.,  3928.,  4492.,  5056.,  5620.,  3378.,  3864.,  4350.,  4836.,  4283.,  4902.,  5521.,  6140.,  4974.,  5676.,  6378.,  7080.,  5660.,  6456.,  7252.,  8048.,  6169.,  7038.,  7907.,  8776.,  6601.,  7554.,  8507.,  9460.,  7104.,  8136.,  9168., 10200.,  7049.,  8074.,  9099., 10124.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  6205.,  7086.,  7967.,  8848.,  5732.,  6520.,  7308.,  8096.,  4924.,  5608.,  6292.,  6976.,  4225.,  4826.,  5427.,  6028.,  3583.,  4090.,  4597.,  5104.,  4143.,  4758.,  5373.,  5988.,  4836.,  5544.,  6252.,  6960.,  5644.,  6456.,  7268.,  8080.,  6299.,  7194.,  8089.,  8984.,  6997.,  7986.,  8975.,  9964.,  7550.,  8612.,  9674., 10736.,  7303.,  8358.,  9413., 10468.,  7104.,  8136.,  9168., 10200.,  7049.,  8074.,  9099., 10124.,  6329.,  7246.,  8163.,  9080.,  5590.,  6404.,  7218.,  8032.,  4908.,  5608.,  6308.,  7008.,  4343.,  4950.,  5557.,  6164.,  3683.,  4186.,  4689.,  5192.,  3907.,  4486.,  5065.,  5644.,  4602.,  5284.,  5966.,  6648.,  5532.,  6328.,  7124.,  7920.,  6077.,  6966.,  7855.,  8744.,  6785.,  7778.,  8771.,  9764.,  7596.,  8672.,  9748., 10824.,  7749.,  8834.,  9919., 11004.,  7550.,  8612.,  9674., 10736.,  7303.,  8358.,  9413., 10468.,  6581.,  7534.,  8487.,  9440.,  5976.,  6832.,  7688.,  8544.,  5244.,  5992.,  6740.,  7488.,  4301.,  4946.,  5591.,  6236.,  3623.,  4154.,  4685.,  5216.,  3578.,  4088.,  4598.,  5108.,  4126.,  4724.,  5322.,  5920.,  4840.,  5536.,  6232.,  6928.,  5472.,  6260.,  7048.,  7836.,  6094.,  6984.,  7874.,  8764.,  6554.,  7524.,  8494.,  9464.,  6708.,  7692.,  8676.,  9660.,  6830.,  7796.,  8762.,  9728.,  6904.,  7868.,  8832.,  9796.,  6054.,  6928.,  7802.,  8676.,  5406.,  6196.,  6986.,  7776.,  4904.,  5600.,  6296.,  6992.,  4268.,  4876.,  5484.,  6092.,  3362.,  3872.,  4382.,  4892.,  3233.,  3686.,  4139.,  4592.,  3712.,  4240.,  4768.,  5296.,  4276.,  4888.,  5500.,  6112.,  4905.,  5594.,  6283.,  6972.,  5483.,  6258.,  7033.,  7808.,  5862.,  6716.,  7570.,  8424.,  5957.,  6830.,  7703.,  8576.,  5828.,  6688.,  7548.,  8408.,  5907.,  6770.,  7633.,  8496.,  5575.,  6358.,  7141.,  7924.,  4982.,  5692.,  6402.,  7112.,  4308.,  4936.,  5564.,  6192.,  3845.,  4398.,  4951.,  5504.,  3357.,  3826.,  4295.,  4764.,  2792.,  3200.,  3608.,  4016.,  3320.,  3792.,  4264.,  4736.,  3808.,  4352.,  4896.,  5440.,  4240.,  4848.,  5456.,  6064.,  4824.,  5504.,  6184.,  6864.,  5352.,  6096.,  6840.,  7584.,  5312.,  6064.,  6816.,  7568.,  5128.,  5872.,  6616.,  7360.,  5152.,  5904.,  6656.,  7408.,  4696.,  5376.,  6056.,  6736.,  4296.,  4912.,  5528.,  6144.,  3808.,  4352.,  4896.,  5440.,  3376.,  3856.,  4336.,  4816.,  2920.,  3328.,  3736.,  4144.,  2511.,  2886.,  3261.,  3636.,  2878.,  3308.,  3738.,  4168.,  3404.,  3896.,  4388.,  4880.,  3709.,  4254.,  4799.,  5344.,  4101.,  4706.,  5311.,  5916.,  4568.,  5224.,  5880.,  6536.,  4637.,  5290.,  5943.,  6596.,  4498.,  5132.,  5766.,  6400.,  4375.,  5006.,  5637.,  6268.,  3897.,  4462.,  5027.,  5592.,  3548.,  4056.,  4564.,  5072.,  3116.,  3560.,  4004.,  4448.,  2549.,  2938.,  3327.,  3716.,  2227.,  2554.,  2881.,  3208.,  2518.,  2872.,  3226.,  3580.,  2794.,  3196.,  3598.,  4000.,  3160.,  3616.,  4072.,  4528.,  3464.,  3964.,  4464.,  4964.,  3746.,  4296.,  4846.,  5396.,  3966.,  4556.,  5146.,  5736.,  3892.,  4468.,  5044.,  5620.,  3802.,  4348.,  4894.,  5440.,  3792.,  4324.,  4856.,  5388.,  3258.,  3728.,  4198.,  4668.,  2938.,  3356.,  3774.,  4192.,  2552.,  2912.,  3272.,  3632.,  2108.,  2420.,  2732.,  3044.,  1630.,  1888.,  2146.,  2404.};
  const std::array<int, 4> in_shape = {{ 3, 13, 14, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x14x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  7014.,  7988.,  8962.,  9936.,  6991.,  7990.,  8989.,  9988.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  7104.,  8136.,  9168., 10200.,  7049.,  8074.,  9099., 10124.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  7162.,  8220.,  9278., 10336.,  7395.,  8478.,  9561., 10644.,  7596.,  8672.,  9748., 10824.,  7749.,  8834.,  9919., 11004.,  6888.,  7896.,  8904.,  9912.,  7137.,  8186.,  9235., 10284.,  7162.,  8220.,  9278., 10336.,  7395.,  8478.,  9561., 10644.,  7014.,  7988.,  8962.,  9936.,  6991.,  7990.,  8989.,  9988.,  6888.,  7896.,  8904.,  9912.,  7137.,  8186.,  9235., 10284.,  7104.,  8136.,  9168., 10200.,  7049.,  8074.,  9099., 10124.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  7550.,  8612.,  9674., 10736.,  7303.,  8358.,  9413., 10468.,  7104.,  8136.,  9168., 10200.,  7049.,  8074.,  9099., 10124.,  7596.,  8672.,  9748., 10824.,  7749.,  8834.,  9919., 11004.,  7550.,  8612.,  9674., 10736.,  7303.,  8358.,  9413., 10468.};
  const std::array<int, 4> in_shape = {{ 3, 13, 14, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x14x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4784.,  5884.,  6768.,  7724.,  8992.,  9852.,  9600.,  8852.,  9160.,  8424.,  7712.,  7024.,  6200.,  5224.,  5958.,  6875.,  8168.,  8853.,  9802., 11183., 11741., 11499., 11545., 10190.,  9259.,  8008.,  6605.,  5618.,  7088.,  8016.,  9280., 10272., 11472., 12400., 12736., 12720., 13184., 11728., 10544.,  9280.,  8288.,  6832.,  7838.,  9083., 10552., 11965., 13058., 13743., 13977., 13795., 14285., 13454., 12319., 10776.,  9313.,  7586.,  8304.,  9772., 11408., 12476., 14560., 16492., 16184., 15460., 16032., 14472., 13048., 11408., 10176.,  8888.,  8998., 10595., 12808., 13933., 15866., 17623., 17965., 17779., 17417., 15326., 14251., 12648., 10845.,  9138.,  9822., 11239., 12680., 14025., 15906., 17019., 17553., 17623., 17965., 16358., 14439., 12648., 11425.,  9354.,  9846., 11387., 12808., 14325., 15658., 16703., 17349., 17019., 17553., 16494., 14819., 12904., 11253.,  9410.,  8408.,  9928., 11664., 12880., 14216., 15432., 15668., 15424., 16044., 14368., 13148., 11792., 10348.,  8800.,  7350.,  8575., 10296., 11337., 12794., 14307., 14589., 14199., 14225., 12566., 11531., 10392.,  8949.,  7482.,  7088.,  8016.,  9280., 10272., 11472., 12400., 12736., 12720., 13184., 11728., 10544.,  9280.,  8288.,  6832.,  6214.,  7099.,  8168.,  8773.,  9386., 10415., 11053., 11083., 11289., 10382.,  9451.,  8008.,  7037.,  6178.,  5048.,  5792.,  7024.,  7592.,  8488.,  9296.,  9108.,  9128.,  9516.,  8656.,  8124.,  7152.,  6332.,  5168.,  5152.,  5860.,  6896.,  7700.,  8656.,  9940., 10328.,  9852.,  9600.,  8248.,  7768.,  6896.,  5792.,  5016.,  6590.,  7295.,  8296.,  9233., 10290., 10995., 11041., 11183., 11741., 10518.,  9479.,  8264.,  7217.,  6026.,  7088.,  8080.,  9280., 10464., 11728., 12464., 12672., 12400., 12736., 11728., 10736.,  9280.,  8352.,  7088.,  7654.,  8919., 10296., 11425., 13466., 15259., 14741., 13743., 13977., 12838., 11763., 10392.,  9341.,  8138.,  8480.,  9844., 11792., 12804., 14544., 16036., 16560., 16492., 16184., 14232., 13200., 11536.,  9992.,  8488.,  9822., 11239., 12680., 14025., 15906., 17019., 17553., 17623., 17965., 16358., 14439., 12648., 11425.,  9354.,  9846., 11387., 12808., 14325., 15658., 16703., 17349., 17019., 17553., 16494., 14819., 12904., 11253.,  9410.,  9230., 10831., 12680., 14033., 15954., 17779., 17417., 16703., 17349., 15734., 14367., 12904., 11401.,  9850.,  7848.,  9536., 11792., 12920., 14520., 15856., 15916., 15432., 15668., 14064., 13140., 11664.,  9956.,  8304.,  7998.,  8955., 10296., 11405., 12754., 13679., 14105., 14307., 14589., 12910., 11583., 10264.,  9009.,  7330.,  7088.,  8080.,  9280., 10464., 11728., 12464., 12672., 12400., 12736., 11728., 10736.,  9280.,  8352.,  7088.,  5790.,  7023.,  8296.,  8961., 10002., 10691., 10385., 10415., 11053., 10326.,  9479.,  8264.,  7281.,  6042.,  4680.,  5624.,  6896.,  7344.,  8472.,  9432.,  9644.,  9296.,  9108.,  8288.,  7700.,  6768.,  5908.,  4864.,  5904.,  6540.,  7024.,  7372.,  8288.,  9228.,  9600.,  9940., 10328.,  9128.,  8064.,  6768.,  6088.,  5192.,  6038.,  7027.,  8168.,  9245., 10362., 11159., 11381., 10995., 11041., 10334.,  9571.,  8264.,  7397.,  6402.,  6832.,  8016.,  9280., 10272., 11728., 12912., 12992., 12464., 12672., 11472., 10544.,  9280.,  8288.,  7088.,  7982.,  8883., 10296., 11221., 12818., 14487., 15233., 15259., 14741., 12734., 11591., 10264.,  8985.,  7666.,  8912., 10300., 11664., 12892., 14624., 15740., 16184., 16036., 16560., 15176., 13400., 11664., 10704.,  8856.,  9846., 11387., 12808., 14325., 15658., 16703., 17349., 17019., 17553., 16494., 14819., 12904., 11253.,  9410.,  9230., 10831., 12680., 14033., 15954., 17779., 17417., 16703., 17349., 15734., 14367., 12904., 11401.,  9850.,  8998., 10595., 12808., 13933., 15866., 17623., 17965., 17779., 17417., 15326., 14251., 12648., 10845.,  9138.,  8600.,  9768., 11408., 12896., 14696., 15624., 16004., 15856., 15916., 14016., 12748., 11536., 10444.,  8480.,  8134.,  9463., 10552., 11681., 12938., 13707., 13989., 13679., 14105., 13254., 12019., 10392.,  9197.,  7690.,  6832.,  8016.,  9280., 10272., 11728., 12912., 12992., 12464., 12672., 11472., 10544.,  9280.,  8288.,  7088.,  5366.,  6563.,  8168.,  9021., 10106., 11079., 11285., 10691., 10385.,  9470.,  9011.,  8264.,  7141.,  5906.,  5240.,  5888.,  6768.,  7736.,  8712.,  9232.,  9572.,  9432.,  9644.,  8560.,  7596.,  6896.,  6172.,  4848.};
  const std::array<int, 4> in_shape = {{ 3, 13, 14, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x14x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17623., 17965., 17779., 17417., 17019., 17553., 17623., 17965., 16703., 17349., 17019., 17553., 17019., 17553., 17623., 17965., 16703., 17349., 17019., 17553., 17779., 17417., 16703., 17349., 16703., 17349., 17019., 17553., 17779., 17417., 16703., 17349., 17623., 17965., 17779., 17417.};
  const std::array<int, 4> in_shape = {{ 3, 13, 14, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x14x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4428.,  5008.,  5674.,  6360.,  6448.,  7264.,  6974.,  7880.,  8420.,  9440.,  9410., 10504.,  8834.,  9936.,  8322.,  9400.,  8834.,  9952.,  8308.,  9328.,  7502.,  8432.,  6448.,  7264.,  5866.,  6576.,  5084.,  5664.,  5114.,  5804.,  6175.,  6982.,  7768.,  8720.,  8325.,  9386.,  9126., 10324., 10571., 11870., 11155., 12474., 10715., 11990., 10275., 11570.,  9166., 10332.,  8613.,  9686.,  7704.,  8656.,  6231.,  7066.,  5314.,  6004.,  6832.,  7648.,  7608.,  8544.,  8768.,  9856.,  9672., 10880., 10704., 12064., 11480., 12960., 11864., 13376., 12120., 13600., 12760., 14272., 11216., 12576.,  9928., 11168.,  8768.,  9856.,  7864.,  8832.,  6320.,  7136.,  7422.,  8316.,  8549.,  9590.,  9832., 11056., 11319., 12666., 12338., 13844., 12761., 14398., 13057., 14738., 13097., 14758., 13393., 15098., 12730., 14268., 11607., 13006., 10024., 11248.,  8893.,  9970.,  7590.,  8484.,  7588.,  8576.,  9478., 10632., 10832., 12192., 11810., 13320., 14028., 15728., 15662., 17496., 15022., 16880., 14126., 15944., 14702., 16576., 13660., 15360., 12466., 14016., 10832., 12192.,  9798., 10992.,  8500.,  9488.,  8274.,  9372.,  9787., 11062., 12152., 13648., 13097., 14762., 14478., 16356., 16631., 18670., 17535., 19610., 16967., 18982., 16463., 18514., 14518., 16364., 13513., 15206., 12088., 13584.,  9971., 11290.,  8474.,  9572.,  9490., 10636., 10411., 11710., 11896., 13392., 13401., 15074., 14926., 16820., 15911., 17974., 16175., 18274., 16631., 18670., 17535., 19610., 15414., 17276., 13497., 15198., 12088., 13584., 10851., 12194.,  8858., 10004.,  9170., 10300., 10587., 11878., 12152., 13648., 13641., 15290., 14862., 16708., 15831., 17854., 16287., 18378., 15911., 17974., 16175., 18274., 15542., 17420., 14377., 16086., 12088., 13584., 10771., 12106.,  9498., 10628.,  7876.,  8896.,  9262., 10432., 10832., 12192., 12122., 13616., 13804., 15472., 14998., 16816., 15030., 16904., 14678., 16544., 14966., 16888., 13324., 15056., 12378., 13944., 11088., 12448.,  9870., 11080.,  8292.,  9312.,  6942.,  7836.,  8045.,  9086.,  9832., 11056., 10575., 11922., 11858., 13364., 13537., 15174., 14057., 15738., 13809., 15470., 13817., 15522., 12138., 13676., 10911., 12310.,  9768., 10992.,  8165.,  9242.,  6870.,  7764.,  6832.,  7648.,  7608.,  8544.,  8768.,  9856.,  9672., 10880., 10704., 12064., 11480., 12960., 11864., 13376., 12120., 13600., 12760., 14272., 11216., 12576.,  9928., 11168.,  8768.,  9856.,  7864.,  8832.,  6320.,  7136.,  5754.,  6476.,  6719.,  7542.,  7768.,  8720.,  8613.,  9658.,  9254., 10420., 10027., 11310., 10419., 11754., 10171., 11494., 10243., 11586.,  9934., 11132.,  9221., 10310.,  7704.,  8656.,  6775.,  7626.,  6082.,  6804.,  4716.,  5328.,  5458.,  6160.,  6448.,  7264.,  7286.,  8176.,  8196.,  9184.,  8746.,  9824.,  8842.,  9960.,  8874., 10000.,  9098., 10264.,  7972.,  9024.,  7414.,  8360.,  6704.,  7520.,  5938.,  6664.,  4876.,  5488.,  4492.,  5104.,  5354.,  6056.,  6704.,  7520.,  7294.,  8216.,  7972.,  9024.,  9154., 10296.,  9858., 11008.,  9410., 10504.,  8834.,  9936.,  7732.,  8720.,  7502.,  8416.,  6704.,  7520.,  5546.,  6272.,  4764.,  5376.,  6074.,  6812.,  6607.,  7438.,  7512.,  8464.,  8565.,  9634.,  9574., 10788., 10171., 11494., 10243., 11586., 10571., 11870., 11155., 12474.,  9806., 10988.,  8533.,  9614.,  7704.,  8656.,  6919.,  7778.,  5698.,  6436.,  6832.,  7648.,  7736.,  8672.,  8768.,  9856., 10056., 11264., 11216., 12576., 11608., 13088., 11736., 13248., 11480., 12960., 11864., 13376., 11216., 12576., 10312., 11552.,  8768.,  9856.,  7992.,  8960.,  6832.,  7648.,  7038.,  7948.,  8725.,  9774.,  9832., 11056., 10727., 12098., 12722., 14276., 14473., 16150., 13809., 15498., 12761., 14398., 13057., 14738., 12282., 13804., 11143., 12534.,  9768., 10992.,  8813.,  9898.,  7910.,  8820.,  7652.,  8672.,  8966., 10136., 11088., 12448., 12066., 13592., 13324., 15056., 15214., 17096., 16238., 18144., 15662., 17496., 15022., 16880., 13084., 14752., 12402., 13936., 11088., 12448.,  9286., 10496.,  7924.,  8944.,  9490., 10636., 10411., 11710., 11896., 13392., 13401., 15074., 14926., 16820., 15911., 17974., 16175., 18274., 16631., 18670., 17535., 19610., 15414., 17276., 13497., 15198., 12088., 13584., 10851., 12194.,  8858., 10004.,  9170., 10300., 10587., 11878., 12152., 13648., 13641., 15290., 14862., 16708., 15831., 17854., 16287., 18378., 15911., 17974., 16175., 18274., 15542., 17420., 14377., 16086., 12088., 13584., 10771., 12106.,  9498., 10628.,  8594.,  9708., 10379., 11662., 11896., 13392., 13177., 14834., 15310., 17172., 16967., 18982., 16463., 18514., 15831., 17854., 16287., 18378., 14902., 16796., 13593., 15310., 12088., 13584., 10819., 12146.,  9370., 10484.,  7428.,  8416.,  8878., 10032., 11088., 12448., 11802., 13312., 13100., 14800., 15062., 16896., 15798., 17656., 14998., 16816., 15030., 16904., 13388., 15088., 12378., 13928., 10832., 12192.,  8974., 10168.,  7588.,  8576.,  7582.,  8492.,  8285.,  9334.,  9832., 11056., 11199., 12570., 12242., 13796., 12753., 14430., 13081., 14770., 13537., 15174., 14057., 15738., 12330., 13852., 11023., 12414., 10024., 11248.,  8661.,  9746.,  6806.,  7716.,  6832.,  7648.,  7736.,  8672.,  8768.,  9856., 10056., 11264., 11216., 12576., 11608., 13088., 11736., 13248., 11480., 12960., 11864., 13376., 11216., 12576., 10312., 11552.,  8768.,  9856.,  7992.,  8960.,  6832.,  7648.,  5434.,  6140.,  6575.,  7390.,  7512.,  8464.,  8341.,  9394.,  9702., 10884., 10715., 11990., 10275., 11570., 10027., 11310., 10419., 11754.,  9550., 10764.,  8629.,  9726.,  7704.,  8656.,  6887.,  7730.,  5954.,  6660.,  4268.,  4848.,  5266.,  5952.,  6704.,  7520.,  7030.,  7936.,  7748.,  8768.,  9002., 10096.,  9418., 10520.,  8746.,  9824.,  8842.,  9960.,  8036.,  9056.,  7478.,  8408.,  6448.,  7264.,  5234.,  5944.,  4428.,  5008.,  5324.,  5968.,  5930.,  6648.,  6448.,  7264.,  7038.,  7944.,  8036.,  9056.,  8898., 10024.,  9026., 10192.,  9154., 10296.,  9858., 11008.,  8692.,  9712.,  7438.,  8368.,  6448.,  7264.,  6122.,  6864.,  5212.,  5856.,  5754.,  6476.,  6719.,  7542.,  7768.,  8720.,  8613.,  9658.,  9254., 10420., 10027., 11310., 10419., 11754., 10171., 11494., 10243., 11586.,  9934., 11132.,  9221., 10310.,  7704.,  8656.,  6775.,  7626.,  6082.,  6804.,  6320.,  7136.,  7608.,  8544.,  8768.,  9856.,  9672., 10880., 11216., 12576., 12504., 13984., 12376., 13888., 11608., 13088., 11736., 13248., 10704., 12064.,  9928., 11168.,  8768.,  9856.,  7864.,  8832.,  6832.,  7648.,  7166.,  8092.,  8133.,  9190.,  9832., 11056., 10839., 12202., 12082., 13620., 13689., 15374., 14497., 16226., 14473., 16150., 13809., 15498., 11834., 13340., 10935., 12318., 10024., 11248.,  8477.,  9570.,  7206.,  8132.,  8740.,  9792.,  9734., 10920., 10832., 12192., 11874., 13384., 13388., 15088., 14638., 16504., 14958., 16880., 15214., 17096., 16238., 18144., 14300., 16000., 12402., 13952., 10832., 12192., 10054., 11280.,  8372.,  9424.,  9170., 10300., 10587., 11878., 12152., 13648., 13641., 15290., 14862., 16708., 15831., 17854., 16287., 18378., 15911., 17974., 16175., 18274., 15542., 17420., 14377., 16086., 12088., 13584., 10771., 12106.,  9498., 10628.,  8594.,  9708., 10379., 11662., 11896., 13392., 13177., 14834., 15310., 17172., 16967., 18982., 16463., 18514., 15831., 17854., 16287., 18378., 14902., 16796., 13593., 15310., 12088., 13584., 10819., 12146.,  9370., 10484.,  8274.,  9372.,  9787., 11062., 12152., 13648., 13097., 14762., 14478., 16356., 16631., 18670., 17535., 19610., 16967., 18982., 16463., 18514., 14518., 16364., 13513., 15206., 12088., 13584.,  9971., 11290.,  8474.,  9572.,  8516.,  9536.,  9198., 10368., 10832., 12192., 12378., 13904., 13676., 15408., 14294., 16176., 14646., 16552., 15062., 16896., 15798., 17656., 13452., 15120., 12122., 13656., 11088., 12448.,  9806., 11016.,  7652.,  8672.,  7710.,  8636.,  8781.,  9838.,  9832., 11056., 11247., 12610., 12626., 14164., 13313., 14998., 13321., 15050., 12753., 14430., 13081., 14770., 12522., 14028., 11391., 12774.,  9768., 10992.,  8901.,  9994.,  7766.,  8692.,  6320.,  7136.,  7608.,  8544.,  8768.,  9856.,  9672., 10880., 11216., 12576., 12504., 13984., 12376., 13888., 11608., 13088., 11736., 13248., 10704., 12064.,  9928., 11168.,  8768.,  9856.,  7864.,  8832.,  6832.,  7648.,  5114.,  5804.,  6175.,  6982.,  7768.,  8720.,  8325.,  9386.,  9126., 10324., 10571., 11870., 11155., 12474., 10715., 11990., 10275., 11570.,  9166., 10332.,  8613.,  9686.,  7704.,  8656.,  6231.,  7066.,  5314.,  6004.,  5100.,  5712.,  5394.,  6096.,  6448.,  7264.,  7542.,  8464.,  8324.,  9376.,  8554.,  9696.,  8714.,  9864.,  9002., 10096.,  9418., 10520.,  7844.,  8832.,  7158.,  8072.,  6704.,  7520.,  5874.,  6600.,  4492.,  5104.};
  const std::array<int, 4> in_shape = {{ 3, 13, 14, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x14x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {16631., 18670., 17535., 19610., 16967., 18982., 16463., 18514., 15911., 17974., 16175., 18274., 16631., 18670., 17535., 19610., 15831., 17854., 16287., 18378., 15911., 17974., 16175., 18274., 15911., 17974., 16175., 18274., 16631., 18670., 17535., 19610., 15831., 17854., 16287., 18378., 15911., 17974., 16175., 18274., 16967., 18982., 16463., 18514., 15831., 17854., 16287., 18378., 15831., 17854., 16287., 18378., 15911., 17974., 16175., 18274., 16967., 18982., 16463., 18514., 15831., 17854., 16287., 18378., 16631., 18670., 17535., 19610., 16967., 18982., 16463., 18514.};
  const std::array<int, 4> in_shape = {{ 3, 13, 14, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x14x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4132.,  4712.,  5292.,  5872.,  4982.,  5668.,  6354.,  7040.,  5808.,  6624.,  7440.,  8256.,  6290.,  7196.,  8102.,  9008.,  7260.,  8280.,  9300., 10320.,  7886.,  8980., 10074., 11168.,  7686.,  8788.,  9890., 10992.,  7646.,  8724.,  9802., 10880.,  8054.,  9172., 10290., 11408.,  7260.,  8280.,  9300., 10320.,  6586.,  7516.,  8446.,  9376.,  5808.,  6624.,  7440.,  8256.,  5150.,  5860.,  6570.,  7280.,  4132.,  4712.,  5292.,  5872.,  4866.,  5556.,  6246.,  6936.,  5655.,  6462.,  7269.,  8076.,  6712.,  7664.,  8616.,  9568.,  7701.,  8762.,  9823., 10884.,  8446.,  9644., 10842., 12040.,  9123., 10422., 11721., 13020.,  9375., 10694., 12013., 13332.,  9179., 10454., 11729., 13004.,  8919., 10214., 11509., 12804.,  8382.,  9548., 10714., 11880.,  7577.,  8650.,  9723., 10796.,  6840.,  7792.,  8744.,  9696.,  5739.,  6574.,  7409.,  8244.,  4962.,  5652.,  6342.,  7032.,  5808.,  6624.,  7440.,  8256.,  6792.,  7728.,  8664.,  9600.,  7744.,  8832.,  9920., 11008.,  8472.,  9680., 10888., 12096.,  9680., 11040., 12400., 13760., 10664., 12144., 13624., 15104., 10632., 12144., 13656., 15168., 10408., 11888., 13368., 14848., 10888., 12400., 13912., 15424.,  9680., 11040., 12400., 13760.,  8696.,  9936., 11176., 12416.,  7744.,  8832.,  9920., 11008.,  7016.,  7984.,  8952.,  9920.,  5808.,  6624.,  7440.,  8256.,  6318.,  7212.,  8106.,  9000.,  7225.,  8266.,  9307., 10348.,  8648.,  9872., 11096., 12320.,  9771., 11118., 12465., 13812., 10642., 12148., 13654., 15160., 11565., 13202., 14839., 16476., 11985., 13666., 15347., 17028., 11957., 13618., 15279., 16940., 11865., 13570., 15275., 16980., 11026., 12564., 14102., 15640.,  9927., 11326., 12725., 14124.,  8776., 10000., 11224., 12448.,  7365.,  8442.,  9519., 10596.,  6414.,  7308.,  8202.,  9096.,  7036.,  8024.,  9012., 10000.,  8378.,  9532., 10686., 11840.,  9680., 11040., 12400., 13760., 10526., 12036., 13546., 15056., 12100., 13800., 15500., 17200., 13218., 15052., 16886., 18720., 13002., 14860., 16718., 18576., 12850., 14668., 16486., 18304., 13498., 15372., 17246., 19120., 12100., 13800., 15500., 17200., 10934., 12484., 14034., 15584.,  9680., 11040., 12400., 13760.,  8658.,  9852., 11046., 12240.,  7036.,  8024.,  9012., 10000.,  7770.,  8868.,  9966., 11064.,  8923., 10198., 11473., 12748., 10584., 12080., 13576., 15072., 12065., 13730., 15395., 17060., 13286., 15164., 17042., 18920., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 13222., 15068., 16914., 18760., 12053., 13746., 15439., 17132., 10712., 12208., 13704., 15200.,  9119., 10438., 11757., 13076.,  7866.,  8964., 10062., 11160.,  8106.,  9252., 10398., 11544.,  9379., 10678., 11977., 13276., 10584., 12080., 13576., 15072., 11769., 13442., 15115., 16788., 13398., 15292., 17186., 19080., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 13334., 15196., 17058., 18920., 11757., 13458., 15159., 16860., 10712., 12208., 13704., 15200.,  9575., 10918., 12261., 13604.,  8202.,  9348., 10494., 11640.,  7994.,  9124., 10254., 11384.,  8971., 10262., 11553., 12844., 10584., 12080., 13576., 15072., 11889., 13538., 15187., 16836., 13062., 14908., 16754., 18600., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 13446., 15324., 17202., 19080., 12229., 13938., 15647., 17356., 10712., 12208., 13704., 15200.,  9167., 10502., 11837., 13172.,  8090.,  9220., 10350., 11480.,  7260.,  8280.,  9300., 10320.,  8554.,  9724., 10894., 12064.,  9680., 11040., 12400., 13760., 10478., 11972., 13466., 14960., 11876., 13544., 15212., 16880., 13042., 14860., 16678., 18496., 13178., 15052., 16926., 18800., 13122., 14988., 16854., 18720., 13770., 15692., 17614., 19536., 12324., 14056., 15788., 17520., 10982., 12548., 14114., 15680.,  9680., 11040., 12400., 13760.,  8834., 10044., 11254., 12464.,  7260.,  8280.,  9300., 10320.,  6318.,  7212.,  8106.,  9000.,  7225.,  8266.,  9307., 10348.,  8648.,  9872., 11096., 12320.,  9771., 11118., 12465., 13812., 10642., 12148., 13654., 15160., 11565., 13202., 14839., 16476., 11985., 13666., 15347., 17028., 11957., 13618., 15279., 16940., 11865., 13570., 15275., 16980., 11026., 12564., 14102., 15640.,  9927., 11326., 12725., 14124.,  8776., 10000., 11224., 12448.,  7365.,  8442.,  9519., 10596.,  6414.,  7308.,  8202.,  9096.,  5808.,  6624.,  7440.,  8256.,  6792.,  7728.,  8664.,  9600.,  7744.,  8832.,  9920., 11008.,  8472.,  9680., 10888., 12096.,  9680., 11040., 12400., 13760., 10664., 12144., 13624., 15104., 10632., 12144., 13656., 15168., 10408., 11888., 13368., 14848., 10888., 12400., 13912., 15424.,  9680., 11040., 12400., 13760.,  8696.,  9936., 11176., 12416.,  7744.,  8832.,  9920., 11008.,  7016.,  7984.,  8952.,  9920.,  5808.,  6624.,  7440.,  8256.,  5090.,  5812.,  6534.,  7256.,  5703.,  6526.,  7349.,  8172.,  6712.,  7664.,  8616.,  9568.,  7525.,  8570.,  9615., 10660.,  8222.,  9388., 10554., 11720.,  9075., 10358., 11641., 12924.,  9423., 10758., 12093., 13428.,  9579., 10902., 12225., 13548.,  9319., 10662., 12005., 13348.,  8606.,  9804., 11002., 12200.,  7753.,  8842.,  9931., 11020.,  6840.,  7792.,  8744.,  9696.,  5787.,  6638.,  7489.,  8340.,  5186.,  5908.,  6630.,  7352.,  4356.,  4968.,  5580.,  6192.,  5158.,  5860.,  6562.,  7264.,  5808.,  6624.,  7440.,  8256.,  6242.,  7132.,  8022.,  8912.,  7036.,  8024.,  9012., 10000.,  7710.,  8788.,  9866., 10944.,  7862.,  8980., 10098., 11216.,  7918.,  9044., 10170., 11296.,  8326.,  9492., 10658., 11824.,  7484.,  8536.,  9588., 10640.,  6634.,  7580.,  8526.,  9472.,  5808.,  6624.,  7440.,  8256.,  5326.,  6052.,  6778.,  7504.,  4356.,  4968.,  5580.,  6192.,  4356.,  4968.,  5580.,  6192.,  4966.,  5668.,  6370.,  7072.,  5808.,  6624.,  7440.,  8256.,  6658.,  7580.,  8502.,  9424.,  7484.,  8536.,  9588., 10640.,  7966.,  9108., 10250., 11392.,  8278.,  9428., 10578., 11728.,  7886.,  8980., 10074., 11168.,  7686.,  8788.,  9890., 10992.,  7036.,  8024.,  9012., 10000.,  6602.,  7516.,  8430.,  9344.,  5808.,  6624.,  7440.,  8256.,  5134.,  5860.,  6586.,  7312.,  4356.,  4968.,  5580.,  6192.,  5202.,  5940.,  6678.,  7416.,  5983.,  6814.,  7645.,  8476.,  6712.,  7664.,  8616.,  9568.,  7533.,  8602.,  9671., 10740.,  8558.,  9772., 10986., 12200.,  9579., 10902., 12225., 13548.,  9319., 10662., 12005., 13348.,  9123., 10422., 11721., 13020.,  9375., 10694., 12013., 13332.,  8494.,  9676., 10858., 12040.,  7409.,  8490.,  9571., 10652.,  6840.,  7792.,  8744.,  9696.,  6067.,  6926.,  7785.,  8644.,  5298.,  6036.,  6774.,  7512.,  5808.,  6624.,  7440.,  8256.,  6536.,  7472.,  8408.,  9344.,  7744.,  8832.,  9920., 11008.,  8728.,  9936., 11144., 12352.,  9680., 11040., 12400., 13760., 10408., 11888., 13368., 14848., 10888., 12400., 13912., 15424., 10664., 12144., 13624., 15104., 10632., 12144., 13656., 15168.,  9680., 11040., 12400., 13760.,  8952., 10192., 11432., 12672.,  7744.,  8832.,  9920., 11008.,  6760.,  7728.,  8696.,  9664.,  5808.,  6624.,  7440.,  8256.,  6430.,  7340.,  8250.,  9160.,  7569.,  8618.,  9667., 10716.,  8648.,  9872., 11096., 12320.,  9587., 10958., 12329., 13700., 10978., 12532., 14086., 15640., 12133., 13810., 15487., 17164., 11689., 13378., 15067., 16756., 11565., 13202., 14839., 16476., 11985., 13666., 15347., 17028., 10914., 12436., 13958., 15480.,  9647., 11038., 12429., 13820.,  8776., 10000., 11224., 12448.,  7709.,  8794.,  9879., 10964.,  6526.,  7436.,  8346.,  9256.,  7260.,  8280.,  9300., 10320.,  8234.,  9404., 10574., 11744.,  9680., 11040., 12400., 13760., 11022., 12548., 14074., 15600., 12324., 14056., 15788., 17520., 13170., 15052., 16934., 18816., 13722., 15628., 17534., 19440., 13218., 15052., 16886., 18720., 13002., 14860., 16718., 18576., 11876., 13544., 15212., 16880., 11078., 12612., 14146., 15680.,  9680., 11040., 12400., 13760.,  8514.,  9724., 10934., 12144.,  7260.,  8280.,  9300., 10320.,  8106.,  9252., 10398., 11544.,  9379., 10678., 11977., 13276., 10584., 12080., 13576., 15072., 11769., 13442., 15115., 16788., 13398., 15292., 17186., 19080., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 13334., 15196., 17058., 18920., 11757., 13458., 15159., 16860., 10712., 12208., 13704., 15200.,  9575., 10918., 12261., 13604.,  8202.,  9348., 10494., 11640.,  7994.,  9124., 10254., 11384.,  8971., 10262., 11553., 12844., 10584., 12080., 13576., 15072., 11889., 13538., 15187., 16836., 13062., 14908., 16754., 18600., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 13446., 15324., 17202., 19080., 12229., 13938., 15647., 17356., 10712., 12208., 13704., 15200.,  9167., 10502., 11837., 13172.,  8090.,  9220., 10350., 11480.,  7882.,  8996., 10110., 11224.,  9331., 10614., 11897., 13180., 10584., 12080., 13576., 15072., 11593., 13250., 14907., 16564., 13174., 15036., 16898., 18760., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 13558., 15452., 17346., 19240., 11933., 13650., 15367., 17084., 10712., 12208., 13704., 15200.,  9527., 10854., 12181., 13508.,  7978.,  9092., 10206., 11320.,  7036.,  8024.,  9012., 10000.,  8058.,  9212., 10366., 11520.,  9680., 11040., 12400., 13760., 10974., 12484., 13994., 15504., 12100., 13800., 15500., 17200., 12898., 14732., 16566., 18400., 13450., 15308., 17166., 19024., 13042., 14860., 16678., 18496., 13178., 15052., 16926., 18800., 12100., 13800., 15500., 17200., 11126., 12676., 14226., 15776.,  9680., 11040., 12400., 13760.,  8338.,  9532., 10726., 11920.,  7036.,  8024.,  9012., 10000.,  6430.,  7340.,  8250.,  9160.,  7569.,  8618.,  9667., 10716.,  8648.,  9872., 11096., 12320.,  9587., 10958., 12329., 13700., 10978., 12532., 14086., 15640., 12133., 13810., 15487., 17164., 11689., 13378., 15067., 16756., 11565., 13202., 14839., 16476., 11985., 13666., 15347., 17028., 10914., 12436., 13958., 15480.,  9647., 11038., 12429., 13820.,  8776., 10000., 11224., 12448.,  7709.,  8794.,  9879., 10964.,  6526.,  7436.,  8346.,  9256.,  5808.,  6624.,  7440.,  8256.,  6536.,  7472.,  8408.,  9344.,  7744.,  8832.,  9920., 11008.,  8728.,  9936., 11144., 12352.,  9680., 11040., 12400., 13760., 10408., 11888., 13368., 14848., 10888., 12400., 13912., 15424., 10664., 12144., 13624., 15104., 10632., 12144., 13656., 15168.,  9680., 11040., 12400., 13760.,  8952., 10192., 11432., 12672.,  7744.,  8832.,  9920., 11008.,  6760.,  7728.,  8696.,  9664.,  5808.,  6624.,  7440.,  8256.,  4978.,  5684.,  6390.,  7096.,  5935.,  6750.,  7565.,  8380.,  6712.,  7664.,  8616.,  9568.,  7357.,  8410.,  9463., 10516.,  8334.,  9516., 10698., 11880.,  9179., 10454., 11729., 13004.,  8919., 10214., 11509., 12804.,  9075., 10358., 11641., 12924.,  9423., 10758., 12093., 13428.,  8718.,  9932., 11146., 12360.,  7585.,  8682.,  9779., 10876.,  6840.,  7792.,  8744.,  9696.,  6019.,  6862.,  7705.,  8548.,  5074.,  5780.,  6486.,  7192.,  4132.,  4712.,  5292.,  5872.,  4790.,  5476.,  6162.,  6848.,  5808.,  6624.,  7440.,  8256.,  6610.,  7516.,  8422.,  9328.,  7260.,  8280.,  9300., 10320.,  7694.,  8788.,  9882., 10976.,  8006.,  9108., 10210., 11312.,  7710.,  8788.,  9866., 10944.,  7862.,  8980., 10098., 11216.,  7260.,  8280.,  9300., 10320.,  6650.,  7580.,  8510.,  9440.,  5808.,  6624.,  7440.,  8256.,  4958.,  5668.,  6378.,  7088.,  4132.,  4712.,  5292.,  5872.,  4580.,  5224.,  5868.,  6512.,  5206.,  5924.,  6642.,  7360.,  5808.,  6624.,  7440.,  8256.,  6418.,  7324.,  8230.,  9136.,  7260.,  8280.,  9300., 10320.,  8110.,  9236., 10362., 11488.,  8262.,  9428., 10594., 11760.,  7966.,  9108., 10250., 11392.,  8278.,  9428., 10578., 11728.,  7260.,  8280.,  9300., 10320.,  6458.,  7388.,  8318.,  9248.,  5808.,  6624.,  7440.,  8256.,  5374.,  6116.,  6858.,  7600.,  4580.,  5224.,  5868.,  6512.,  5090.,  5812.,  6534.,  7256.,  5703.,  6526.,  7349.,  8172.,  6712.,  7664.,  8616.,  9568.,  7525.,  8570.,  9615., 10660.,  8222.,  9388., 10554., 11720.,  9075., 10358., 11641., 12924.,  9423., 10758., 12093., 13428.,  9579., 10902., 12225., 13548.,  9319., 10662., 12005., 13348.,  8606.,  9804., 11002., 12200.,  7753.,  8842.,  9931., 11020.,  6840.,  7792.,  8744.,  9696.,  5787.,  6638.,  7489.,  8340.,  5186.,  5908.,  6630.,  7352.,  5808.,  6624.,  7440.,  8256.,  6792.,  7728.,  8664.,  9600.,  7744.,  8832.,  9920., 11008.,  8472.,  9680., 10888., 12096.,  9680., 11040., 12400., 13760., 10664., 12144., 13624., 15104., 10632., 12144., 13656., 15168., 10408., 11888., 13368., 14848., 10888., 12400., 13912., 15424.,  9680., 11040., 12400., 13760.,  8696.,  9936., 11176., 12416.,  7744.,  8832.,  9920., 11008.,  7016.,  7984.,  8952.,  9920.,  5808.,  6624.,  7440.,  8256.,  6542.,  7468.,  8394.,  9320.,  7401.,  8458.,  9515., 10572.,  8648.,  9872., 11096., 12320.,  9819., 11182., 12545., 13908., 10866., 12404., 13942., 15480., 11837., 13522., 15207., 16892., 12257., 13986., 15715., 17444., 12133., 13810., 15487., 17164., 11689., 13378., 15067., 16756., 10802., 12308., 13814., 15320.,  9879., 11262., 12645., 14028.,  8776., 10000., 11224., 12448.,  7541.,  8634.,  9727., 10820.,  6638.,  7564.,  8490.,  9416.,  7484.,  8536.,  9588., 10640.,  8602.,  9788., 10974., 12160.,  9680., 11040., 12400., 13760., 10654., 12164., 13674., 15184., 12100., 13800., 15500., 17200., 13442., 15308., 17174., 19040., 13578., 15500., 17422., 19344., 13170., 15052., 16934., 18816., 13722., 15628., 17534., 19440., 12100., 13800., 15500., 17200., 10806., 12356., 13906., 15456.,  9680., 11040., 12400., 13760.,  8882., 10108., 11334., 12560.,  7484.,  8536.,  9588., 10640.,  7994.,  9124., 10254., 11384.,  8971., 10262., 11553., 12844., 10584., 12080., 13576., 15072., 11889., 13538., 15187., 16836., 13062., 14908., 16754., 18600., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 13446., 15324., 17202., 19080., 12229., 13938., 15647., 17356., 10712., 12208., 13704., 15200.,  9167., 10502., 11837., 13172.,  8090.,  9220., 10350., 11480.,  7882.,  8996., 10110., 11224.,  9331., 10614., 11897., 13180., 10584., 12080., 13576., 15072., 11593., 13250., 14907., 16564., 13174., 15036., 16898., 18760., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 13558., 15452., 17346., 19240., 11933., 13650., 15367., 17084., 10712., 12208., 13704., 15200.,  9527., 10854., 12181., 13508.,  7978.,  9092., 10206., 11320.,  7770.,  8868.,  9966., 11064.,  8923., 10198., 11473., 12748., 10584., 12080., 13576., 15072., 12065., 13730., 15395., 17060., 13286., 15164., 17042., 18920., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 13222., 15068., 16914., 18760., 12053., 13746., 15439., 17132., 10712., 12208., 13704., 15200.,  9119., 10438., 11757., 13076.,  7866.,  8964., 10062., 11160.,  7260.,  8280.,  9300., 10320.,  8426.,  9596., 10766., 11936.,  9680., 11040., 12400., 13760., 10702., 12228., 13754., 15280., 12324., 14056., 15788., 17520., 13618., 15500., 17382., 19264., 13402., 15308., 17214., 19120., 12898., 14732., 16566., 18400., 13450., 15308., 17166., 19024., 11876., 13544., 15212., 16880., 10758., 12292., 13826., 15360.,  9680., 11040., 12400., 13760.,  8706.,  9916., 11126., 12336.,  7260.,  8280.,  9300., 10320.,  6542.,  7468.,  8394.,  9320.,  7401.,  8458.,  9515., 10572.,  8648.,  9872., 11096., 12320.,  9819., 11182., 12545., 13908., 10866., 12404., 13942., 15480., 11837., 13522., 15207., 16892., 12257., 13986., 15715., 17444., 12133., 13810., 15487., 17164., 11689., 13378., 15067., 16756., 10802., 12308., 13814., 15320.,  9879., 11262., 12645., 14028.,  8776., 10000., 11224., 12448.,  7541.,  8634.,  9727., 10820.,  6638.,  7564.,  8490.,  9416.,  5808.,  6624.,  7440.,  8256.,  6792.,  7728.,  8664.,  9600.,  7744.,  8832.,  9920., 11008.,  8472.,  9680., 10888., 12096.,  9680., 11040., 12400., 13760., 10664., 12144., 13624., 15104., 10632., 12144., 13656., 15168., 10408., 11888., 13368., 14848., 10888., 12400., 13912., 15424.,  9680., 11040., 12400., 13760.,  8696.,  9936., 11176., 12416.,  7744.,  8832.,  9920., 11008.,  7016.,  7984.,  8952.,  9920.,  5808.,  6624.,  7440.,  8256.,  4866.,  5556.,  6246.,  6936.,  5655.,  6462.,  7269.,  8076.,  6712.,  7664.,  8616.,  9568.,  7701.,  8762.,  9823., 10884.,  8446.,  9644., 10842., 12040.,  9123., 10422., 11721., 13020.,  9375., 10694., 12013., 13332.,  9179., 10454., 11729., 13004.,  8919., 10214., 11509., 12804.,  8382.,  9548., 10714., 11880.,  7577.,  8650.,  9723., 10796.,  6840.,  7792.,  8744.,  9696.,  5739.,  6574.,  7409.,  8244.,  4962.,  5652.,  6342.,  7032.,  4356.,  4968.,  5580.,  6192.,  5030.,  5732.,  6434.,  7136.,  5808.,  6624.,  7440.,  8256.,  6466.,  7388.,  8310.,  9232.,  7484.,  8536.,  9588., 10640.,  8286.,  9428., 10570., 11712.,  8086.,  9236., 10386., 11536.,  7694.,  8788.,  9882., 10976.,  8006.,  9108., 10210., 11312.,  7036.,  8024.,  9012., 10000.,  6410.,  7324.,  8238.,  9152.,  5808.,  6624.,  7440.,  8256.,  5198.,  5924.,  6650.,  7376.,  4356.,  4968.,  5580.,  6192.};
  const std::array<int, 4> in_shape = {{ 3, 13, 14, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x14x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388.};
  const std::array<int, 4> in_shape = {{ 3, 13, 14, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x14x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.};
  const std::array<int, 4> in_shape = {{ 3, 13, 14, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x14x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590.};
  const std::array<int, 4> in_shape = {{ 3, 13, 14, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x14x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.};
  const std::array<int, 4> in_shape = {{ 3, 13, 14, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x14x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.};
  const std::array<int, 4> in_shape = {{ 3, 13, 14, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x13x14x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.};
  const std::array<int, 4> in_shape = {{ 3, 13, 14, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x13x14x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.};
  const std::array<int, 4> in_shape = {{ 3, 13, 14, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x12x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2095., 2356., 2652., 2993., 3597., 4266., 4619., 4523., 4236., 3812., 3433., 2817., 3215., 3484., 3796., 3872., 4169., 4552., 4655., 4302., 4028., 3696., 3393., 3126., 3500., 4224., 4928., 5428., 6084., 6568., 6428., 5548., 4752., 3968., 3444., 2964., 3246., 3812., 4560., 5401., 6342., 7374., 7798., 7229., 6548., 5684., 4790., 3939., 3885., 4300., 4852., 5291., 6039., 6894., 7313., 7049., 6500., 5852., 5387., 4715., 4817., 5564., 6380., 6966., 7551., 7996., 7985., 7144., 6348., 5528., 4951., 4436., 4741., 5728., 6716., 7422., 8315., 9064., 9085., 8252., 7276., 6088., 5195., 4368., 4025., 4788., 5740., 6614., 7607., 8708., 9161., 8480., 7708., 6776., 5839., 4972., 4285., 4776., 5404., 5918., 6739., 7664., 8149., 7764., 7100., 6344., 5779., 5016., 4351., 5032., 5788., 6465., 6989., 7350., 7359., 6567., 5808., 5012., 4445., 3925., 3620., 4412., 5208., 5951., 6792., 7466., 7488., 6863., 6080., 5068., 4332., 3641., 2804., 3248., 3872., 4460., 5132., 5880., 6308., 5956., 5488., 4832., 4220., 3660., 2951., 3232., 3636., 3900., 4225., 4604., 4839., 4526., 4148., 3632., 3305., 3014., 2565., 3032., 3556., 4115., 4479., 4642., 4549., 3989., 3424., 2780., 2479., 2207., 3055., 3756., 4220., 4457., 4829., 5010., 4963., 4379., 3860., 3332., 2849., 2401., 2487., 2996., 3668., 4416., 5249., 6160., 6471., 5894., 5388., 4688., 3929., 3214., 2988., 3392., 3904., 4276., 4932., 5672., 6044., 5804., 5392., 4864., 4404., 3732., 4454., 4980., 5552., 5873., 6174., 6574., 6646., 6069., 5516., 4916., 4358., 3851., 4269., 5284., 6292., 7011., 7911., 8662., 8681., 7929., 7020., 5884., 5027., 4235., 4025., 4788., 5740., 6614., 7607., 8708., 9161., 8480., 7708., 6776., 5839., 4972., 4285., 4776., 5404., 5918., 6739., 7664., 8149., 7764., 7100., 6344., 5779., 5016., 4817., 5564., 6380., 6966., 7551., 7996., 7985., 7144., 6348., 5528., 4951., 4436., 4741., 5728., 6716., 7422., 8315., 9064., 9085., 8252., 7276., 6088., 5195., 4368., 3871., 4592., 5500., 6329., 7261., 8286., 8663., 8023., 7288., 6388., 5477., 4629., 3676., 4124., 4696., 5143., 5680., 6298., 6640., 6359., 6040., 5612., 5132., 4449., 3572., 4208., 4896., 5484., 5900., 6136., 6052., 5316., 4592., 3808., 3388., 3020., 2831., 3384., 4180., 4892., 5673., 6260., 6287., 5782., 5092., 4144., 3457., 2814., 2277., 2688., 3268., 3595., 3983., 4426., 4701., 4677., 4520., 4156., 3607., 3103., 2095., 2356., 2652., 2993., 3597., 4266., 4619., 4523., 4236., 3812., 3433., 2817., 3215., 3484., 3796., 3872., 4169., 4552., 4655., 4302., 4028., 3696., 3393., 3126., 3500., 4224., 4928., 5428., 6084., 6568., 6428., 5548., 4752., 3968., 3444., 2964., 3246., 3812., 4560., 5401., 6342., 7374., 7798., 7229., 6548., 5684., 4790., 3939., 3885., 4300., 4852., 5291., 6039., 6894., 7313., 7049., 6500., 5852., 5387., 4715., 4817., 5564., 6380., 6966., 7551., 7996., 7985., 7144., 6348., 5528., 4951., 4436., 4741., 5728., 6716., 7422., 8315., 9064., 9085., 8252., 7276., 6088., 5195., 4368., 4025., 4788., 5740., 6614., 7607., 8708., 9161., 8480., 7708., 6776., 5839., 4972., 4285., 4776., 5404., 5918., 6739., 7664., 8149., 7764., 7100., 6344., 5779., 5016., 4351., 5032., 5788., 6465., 6989., 7350., 7359., 6567., 5808., 5012., 4445., 3925., 3620., 4412., 5208., 5951., 6792., 7466., 7488., 6863., 6080., 5068., 4332., 3641., 2804., 3248., 3872., 4460., 5132., 5880., 6308., 5956., 5488., 4832., 4220., 3660., 2951., 3232., 3636., 3900., 4225., 4604., 4839., 4526., 4148., 3632., 3305., 3014., 2565., 3032., 3556., 4115., 4479., 4642., 4549., 3989., 3424., 2780., 2479., 2207.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x12x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {7996., 7985., 9064., 9085., 8708., 9161., 7664., 8149., 8708., 9161., 7664., 8149., 7996., 7985., 9064., 9085., 7996., 7985., 9064., 9085., 8708., 9161., 7664., 8149.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x12x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2328., 2606., 2660., 2984., 3024., 3400., 3312., 3730., 3608., 4074., 3980., 4500., 4140., 4678., 3964., 4454., 3572., 4008., 3152., 3528., 2860., 3202., 2420., 2722., 2899., 3246., 3360., 3768., 3852., 4328., 4281., 4800., 4681., 5250., 5118., 5744., 5231., 5870., 4807., 5388., 4260., 4776., 3524., 3968., 3077., 3474., 2773., 3116., 3072., 3464., 3728., 4192., 4352., 4896., 4784., 5384., 5376., 6040., 5936., 6672., 6000., 6760., 5504., 6200., 4976., 5600., 4352., 4896., 3920., 4408., 3456., 3880., 3263., 3676., 3884., 4376., 4668., 5248., 5133., 5778., 5709., 6428., 6458., 7260., 6743., 7580., 6231., 7002., 5568., 6264., 4884., 5496., 4277., 4828., 3717., 4198., 3968., 4442., 4460., 5016., 5072., 5720., 5512., 6230., 6208., 7006., 7028., 7916., 7484., 8402., 7004., 7842., 6028., 6776., 5136., 5784., 4668., 5254., 4068., 4582., 4243., 4786., 5080., 5720., 5964., 6712., 6777., 7596., 7481., 8382., 8006., 9000., 8071., 9090., 7375., 8304., 6604., 7432., 5764., 6480., 5213., 5854., 4621., 5176., 4515., 5082., 5572., 6240., 6348., 7128., 6757., 7612., 7433., 8374., 8114., 9152., 8243., 9306., 7759., 8728., 7080., 7944., 6148., 6896., 5353., 6022., 4589., 5168., 4083., 4610., 4944., 5576., 5964., 6712., 6577., 7404., 7321., 8238., 8254., 9272., 8463., 9522., 7695., 8672., 6836., 7720., 6020., 6800., 5269., 5966., 4621., 5224., 4291., 4810., 4876., 5488., 5580., 6296., 6109., 6908., 6889., 7782., 7786., 8784., 8315., 9354., 7823., 8776., 6864., 7720., 6020., 6768., 5361., 6038., 4589., 5184., 3604., 4078., 4340., 4896., 5136., 5784., 5892., 6610., 6636., 7434., 7172., 8060., 7320., 8238., 6680., 7518., 6004., 6752., 5232., 5880., 4720., 5306., 4136., 4650., 3651., 4104., 4456., 4984., 4988., 5600., 5341., 6014., 5865., 6608., 6366., 7188., 6391., 7232., 5843., 6606., 5308., 5984., 4724., 5304., 4221., 4744., 3689., 4146., 3072., 3464., 3632., 4096., 4352., 4896., 4752., 5352., 5248., 5912., 5904., 6640., 6096., 6856., 5504., 6200., 4944., 5568., 4352., 4896., 3824., 4312., 3328., 3752., 2475., 2798., 2916., 3296., 3468., 3912., 3941., 4440., 4417., 4978., 4962., 5592., 5323., 5982., 4911., 5516., 4312., 4856., 3716., 4192., 3281., 3714., 2909., 3292., 2260., 2538., 2588., 2912., 2960., 3336., 3348., 3766., 3676., 4142., 4012., 4532., 4064., 4602., 3728., 4218., 3500., 3936., 3056., 3432., 2872., 3214., 2528., 2830., 2552., 2862., 3236., 3608., 3664., 4104., 3872., 4354., 4216., 4746., 4508., 5092., 4636., 5238., 4380., 4934., 4036., 4536., 3536., 3976., 3052., 3442., 2708., 3042., 2611., 2942., 3032., 3432., 3596., 4072., 4081., 4608., 4649., 5234., 5366., 6016., 5623., 6302., 5127., 5756., 4620., 5192., 4036., 4544., 3453., 3906., 3029., 3420., 3200., 3592., 3728., 4192., 4352., 4896., 4784., 5384., 5248., 5912., 5808., 6544., 6128., 6888., 5632., 6328., 4976., 5600., 4352., 4896., 3920., 4408., 3328., 3752., 3839., 4300., 4500., 5048., 5180., 5824., 5765., 6466., 6221., 6988., 6738., 7580., 6847., 7708., 6327., 7114., 5672., 6376., 4884., 5496., 4445., 4988., 3941., 4406., 3936., 4442., 4844., 5448., 5712., 6424., 6200., 6982., 6944., 7806., 7684., 8636., 7852., 8834., 7420., 8322., 6748., 7560., 5776., 6488., 5052., 5686., 4356., 4902., 4083., 4610., 4944., 5576., 5964., 6712., 6577., 7404., 7321., 8238., 8254., 9272., 8463., 9522., 7695., 8672., 6836., 7720., 6020., 6800., 5269., 5966., 4621., 5224., 4291., 4810., 4876., 5488., 5580., 6296., 6109., 6908., 6889., 7782., 7786., 8784., 8315., 9354., 7823., 8776., 6864., 7720., 6020., 6768., 5361., 6038., 4589., 5184., 4243., 4786., 5080., 5720., 5964., 6712., 6777., 7596., 7481., 8382., 8006., 9000., 8071., 9090., 7375., 8304., 6604., 7432., 5764., 6480., 5213., 5854., 4621., 5176., 4515., 5082., 5572., 6240., 6348., 7128., 6757., 7612., 7433., 8374., 8114., 9152., 8243., 9306., 7759., 8728., 7080., 7944., 6148., 6896., 5353., 6022., 4589., 5168., 3892., 4398., 4692., 5296., 5648., 6360., 6196., 6978., 6860., 7722., 7700., 8652., 7816., 8798., 6968., 7870., 6212., 7024., 5488., 6200., 4816., 5450., 4232., 4778., 3523., 3960., 4144., 4664., 4860., 5472., 5381., 6062., 5929., 6688., 6566., 7412., 6959., 7840., 6451., 7262., 5812., 6544., 5236., 5880., 4613., 5192., 3849., 4354., 3200., 3592., 3760., 4224., 4352., 4896., 4880., 5480., 5376., 6040., 5904., 6640., 6096., 6856., 5632., 6328., 5072., 5696., 4352., 4896., 3952., 4440., 3456., 3880., 2827., 3198., 3420., 3856., 3980., 4488., 4333., 4888., 4833., 5442., 5290., 5960., 5251., 5934., 4847., 5468., 4400., 4952., 3844., 4320., 3465., 3890., 3037., 3404., 2420., 2730., 3004., 3376., 3728., 4168., 3908., 4390., 4156., 4686., 4540., 5124., 4560., 5162., 4272., 4826., 3964., 4464., 3568., 4008., 3032., 3422., 2496., 2830., 2328., 2606., 2660., 2984., 3024., 3400., 3312., 3730., 3608., 4074., 3980., 4500., 4140., 4678., 3964., 4454., 3572., 4008., 3152., 3528., 2860., 3202., 2420., 2722., 2899., 3246., 3360., 3768., 3852., 4328., 4281., 4800., 4681., 5250., 5118., 5744., 5231., 5870., 4807., 5388., 4260., 4776., 3524., 3968., 3077., 3474., 2773., 3116., 3072., 3464., 3728., 4192., 4352., 4896., 4784., 5384., 5376., 6040., 5936., 6672., 6000., 6760., 5504., 6200., 4976., 5600., 4352., 4896., 3920., 4408., 3456., 3880., 3263., 3676., 3884., 4376., 4668., 5248., 5133., 5778., 5709., 6428., 6458., 7260., 6743., 7580., 6231., 7002., 5568., 6264., 4884., 5496., 4277., 4828., 3717., 4198., 3968., 4442., 4460., 5016., 5072., 5720., 5512., 6230., 6208., 7006., 7028., 7916., 7484., 8402., 7004., 7842., 6028., 6776., 5136., 5784., 4668., 5254., 4068., 4582., 4243., 4786., 5080., 5720., 5964., 6712., 6777., 7596., 7481., 8382., 8006., 9000., 8071., 9090., 7375., 8304., 6604., 7432., 5764., 6480., 5213., 5854., 4621., 5176., 4515., 5082., 5572., 6240., 6348., 7128., 6757., 7612., 7433., 8374., 8114., 9152., 8243., 9306., 7759., 8728., 7080., 7944., 6148., 6896., 5353., 6022., 4589., 5168., 4083., 4610., 4944., 5576., 5964., 6712., 6577., 7404., 7321., 8238., 8254., 9272., 8463., 9522., 7695., 8672., 6836., 7720., 6020., 6800., 5269., 5966., 4621., 5224., 4291., 4810., 4876., 5488., 5580., 6296., 6109., 6908., 6889., 7782., 7786., 8784., 8315., 9354., 7823., 8776., 6864., 7720., 6020., 6768., 5361., 6038., 4589., 5184., 3604., 4078., 4340., 4896., 5136., 5784., 5892., 6610., 6636., 7434., 7172., 8060., 7320., 8238., 6680., 7518., 6004., 6752., 5232., 5880., 4720., 5306., 4136., 4650., 3651., 4104., 4456., 4984., 4988., 5600., 5341., 6014., 5865., 6608., 6366., 7188., 6391., 7232., 5843., 6606., 5308., 5984., 4724., 5304., 4221., 4744., 3689., 4146., 3072., 3464., 3632., 4096., 4352., 4896., 4752., 5352., 5248., 5912., 5904., 6640., 6096., 6856., 5504., 6200., 4944., 5568., 4352., 4896., 3824., 4312., 3328., 3752., 2475., 2798., 2916., 3296., 3468., 3912., 3941., 4440., 4417., 4978., 4962., 5592., 5323., 5982., 4911., 5516., 4312., 4856., 3716., 4192., 3281., 3714., 2909., 3292., 2260., 2538., 2588., 2912., 2960., 3336., 3348., 3766., 3676., 4142., 4012., 4532., 4064., 4602., 3728., 4218., 3500., 3936., 3056., 3432., 2872., 3214., 2528., 2830.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x12x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {8006., 9000., 8071., 9090., 8114., 9152., 8243., 9306., 8254., 9272., 8463., 9522., 7786., 8784., 8315., 9354., 8254., 9272., 8463., 9522., 7786., 8784., 8315., 9354., 8006., 9000., 8071., 9090., 8114., 9152., 8243., 9306., 8006., 9000., 8071., 9090., 8114., 9152., 8243., 9306., 8254., 9272., 8463., 9522., 7786., 8784., 8315., 9354.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x12x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 1978.,  2256.,  2534.,  2812.,  2244.,  2568.,  2892.,  3216.,  2600.,  2976.,  3352.,  3728.,  2894.,  3312.,  3730.,  4148.,  3150.,  3616.,  4082.,  4548.,  3504.,  4024.,  4544.,  5064.,  3790.,  4328.,  4866.,  5404.,  3646.,  4136.,  4626.,  5116.,  3124.,  3560.,  3996.,  4432.,  2600.,  2976.,  3352.,  3728.,  2370.,  2712.,  3054.,  3396.,  2090.,  2392.,  2694.,  2996.,  2491.,  2838.,  3185.,  3532.,  2888.,  3296.,  3704.,  4112.,  3292.,  3768.,  4244.,  4720.,  3723.,  4242.,  4761.,  5280.,  4025.,  4594.,  5163.,  5732.,  4330.,  4956.,  5582.,  6208.,  4415.,  5054.,  5693.,  6332.,  4201.,  4782.,  5363.,  5944.,  3812.,  4328.,  4844.,  5360.,  3116.,  3560.,  4004.,  4448.,  2781.,  3178.,  3575.,  3972.,  2531.,  2874.,  3217.,  3560.,  2616.,  3008.,  3400.,  3792.,  3280.,  3744.,  4208.,  4672.,  3808.,  4352.,  4896.,  5440.,  4168.,  4768.,  5368.,  5968.,  4776.,  5440.,  6104.,  6768.,  5248.,  5984.,  6720.,  7456.,  5160.,  5920.,  6680.,  7440.,  4744.,  5440.,  6136.,  6832.,  4336.,  4960.,  5584.,  6208.,  3808.,  4352.,  4896.,  5440.,  3448.,  3936.,  4424.,  4912.,  3096.,  3520.,  3944.,  4368.,  2753.,  3166.,  3579.,  3992.,  3276.,  3768.,  4260.,  4752.,  4052.,  4632.,  5212.,  5792.,  4405.,  5050.,  5695.,  6340.,  4891.,  5610.,  6329.,  7048.,  5634.,  6436.,  7238.,  8040.,  5881.,  6718.,  7555.,  8392.,  5339.,  6110.,  6881.,  7652.,  4776.,  5472.,  6168.,  6864.,  4260.,  4872.,  5484.,  6096.,  3699.,  4250.,  4801.,  5352.,  3321.,  3802.,  4283.,  4764.,  3414.,  3888.,  4362.,  4836.,  3884.,  4440.,  4996.,  5552.,  4504.,  5152.,  5800.,  6448.,  4978.,  5696.,  6414.,  7132.,  5410.,  6208.,  7006.,  7804.,  6000.,  6888.,  7776.,  8664.,  6498.,  7416.,  8334.,  9252.,  6146.,  6984.,  7822.,  8660.,  5292.,  6040.,  6788.,  7536.,  4504.,  5152.,  5800.,  6448.,  4094.,  4680.,  5266.,  5852.,  3510.,  4024.,  4538.,  5052.,  3927.,  4470.,  5013.,  5556.,  4560.,  5200.,  5840.,  6480.,  5196.,  5944.,  6692.,  7440.,  5903.,  6722.,  7541.,  8360.,  6413.,  7314.,  8215.,  9116.,  6922.,  7916.,  8910.,  9904.,  7091.,  8110.,  9129., 10148.,  6701.,  7630.,  8559.,  9488.,  6076.,  6904.,  7732.,  8560.,  5020.,  5736.,  6452.,  7168.,  4537.,  5178.,  5819.,  6460.,  4079.,  4634.,  5189.,  5744.,  3743.,  4310.,  4877.,  5444.,  4684.,  5352.,  6020.,  6688.,  5420.,  6200.,  6980.,  7760.,  5891.,  6746.,  7601.,  8456.,  6725.,  7666.,  8607.,  9548.,  7350.,  8388.,  9426., 10464.,  7135.,  8198.,  9261., 10324.,  6597.,  7566.,  8535.,  9504.,  6032.,  6896.,  7760.,  8624.,  5244.,  5992.,  6740.,  7488.,  4661.,  5330.,  5999.,  6668.,  4247.,  4826.,  5405.,  5984.,  3495.,  4022.,  4549.,  5076.,  4168.,  4800.,  5432.,  6064.,  5196.,  5944.,  6692.,  7440.,  5623.,  6450.,  7277.,  8104.,  6205.,  7122.,  8039.,  8956.,  7138.,  8156.,  9174., 10192.,  7323.,  8382.,  9441., 10500.,  6653.,  7630.,  8607.,  9584.,  6100.,  6984.,  7868.,  8752.,  5468.,  6248.,  7028.,  7808.,  4593.,  5290.,  5987.,  6684.,  4031.,  4634.,  5237.,  5840.,  3727.,  4246.,  4765.,  5284.,  4244.,  4856.,  5468.,  6080.,  4972.,  5688.,  6404.,  7120.,  5547.,  6346.,  7145.,  7944.,  6069.,  6962.,  7855.,  8748.,  6734.,  7732.,  8730.,  9728.,  7303.,  8342.,  9381., 10420.,  6869.,  7822.,  8775.,  9728.,  5992.,  6848.,  7704.,  8560.,  5244.,  5992.,  6740.,  7488.,  4669.,  5346.,  6023.,  6700.,  3975.,  4570.,  5165.,  5760.,  3454.,  3928.,  4402.,  4876.,  3964.,  4520.,  5076.,  5632.,  4504.,  5152.,  5800.,  6448.,  5162.,  5880.,  6598.,  7316.,  5706.,  6504.,  7302.,  8100.,  6208.,  7096.,  7984.,  8872.,  6378.,  7296.,  8214.,  9132.,  5930.,  6768.,  7606.,  8444.,  5500.,  6248.,  6996.,  7744.,  4568.,  5216.,  5864.,  6512.,  4134.,  4720.,  5306.,  5892.,  3646.,  4160.,  4674.,  5188.,  3041.,  3494.,  3947.,  4400.,  3744.,  4272.,  4800.,  5328.,  4276.,  4888.,  5500.,  6112.,  4665.,  5338.,  6011.,  6684.,  5323.,  6066.,  6809.,  7552.,  5862.,  6684.,  7506.,  8328.,  5637.,  6478.,  7319.,  8160.,  5067.,  5830.,  6593.,  7356.,  4596.,  5272.,  5948.,  6624.,  4100.,  4680.,  5260.,  5840.,  3679.,  4202.,  4725.,  5248.,  3289.,  3746.,  4203.,  4660.,  2616.,  3008.,  3400.,  3792.,  3088.,  3552.,  4016.,  4480.,  3808.,  4352.,  4896.,  5440.,  4104.,  4704.,  5304.,  5904.,  4520.,  5184.,  5848.,  6512.,  5184.,  5920.,  6656.,  7392.,  5352.,  6112.,  6872.,  7632.,  4744.,  5440.,  6136.,  6832.,  4272.,  4896.,  5520.,  6144.,  3808.,  4352.,  4896.,  5440.,  3256.,  3744.,  4232.,  4720.,  2840.,  3264.,  3688.,  4112.,  2291.,  2614.,  2937.,  3260.,  2604.,  2984.,  3364.,  3744.,  3068.,  3512.,  3956.,  4400.,  3463.,  3962.,  4461.,  4960.,  3809.,  4370.,  4931.,  5492.,  4238.,  4868.,  5498.,  6128.,  4595.,  5254.,  5913.,  6572.,  4369.,  4974.,  5579.,  6184.,  3824.,  4368.,  4912.,  5456.,  3340.,  3816.,  4292.,  4768.,  2945.,  3378.,  3811.,  4244.,  2555.,  2938.,  3321.,  3704.,  2018.,  2296.,  2574.,  2852.,  2292.,  2616.,  2940.,  3264.,  2600.,  2976.,  3352.,  3728.,  2982.,  3400.,  3818.,  4236.,  3318.,  3784.,  4250.,  4716.,  3616.,  4136.,  4656.,  5176.,  3702.,  4240.,  4778.,  5316.,  3430.,  3920.,  4410.,  4900.,  3236.,  3672.,  4108.,  4544.,  2664.,  3040.,  3416.,  3792.,  2378.,  2720.,  3062.,  3404.,  2098.,  2400.,  2702.,  3004.,  2010.,  2320.,  2630.,  2940.,  2580.,  2952.,  3324.,  3696.,  3048.,  3488.,  3928.,  4368.,  3310.,  3792.,  4274.,  4756.,  3790.,  4320.,  4850.,  5380.,  4112.,  4696.,  5280.,  5864.,  4078.,  4680.,  5282.,  5884.,  3902.,  4456.,  5010.,  5564.,  3604.,  4104.,  4604.,  5104.,  3048.,  3488.,  3928.,  4368.,  2706.,  3096.,  3486.,  3876.,  2506.,  2840.,  3174.,  3508.,  2187.,  2518.,  2849.,  3180.,  2624.,  3024.,  3424.,  3824.,  3292.,  3768.,  4244.,  4720.,  3571.,  4098.,  4625.,  5152.,  3945.,  4530.,  5115.,  5700.,  4546.,  5196.,  5846.,  6496.,  4647.,  5326.,  6005.,  6684.,  4281.,  4910.,  5539.,  6168.,  3964.,  4536.,  5108.,  5680.,  3564.,  4072.,  4580.,  5088.,  2965.,  3418.,  3871.,  4324.,  2611.,  3002.,  3393.,  3784.,  2872.,  3264.,  3656.,  4048.,  3280.,  3744.,  4208.,  4672.,  3808.,  4352.,  4896.,  5440.,  4168.,  4768.,  5368.,  5968.,  4520.,  5184.,  5848.,  6512.,  4992.,  5728.,  6464.,  7200.,  5416.,  6176.,  6936.,  7696.,  5000.,  5696.,  6392.,  7088.,  4336.,  4960.,  5584.,  6208.,  3808.,  4352.,  4896.,  5440.,  3448.,  3936.,  4424.,  4912.,  2840.,  3264.,  3688.,  4112.,  3345.,  3806.,  4267.,  4728.,  3940.,  4488.,  5036.,  5584.,  4500.,  5144.,  5788.,  6432.,  5101.,  5802.,  6503.,  7204.,  5483.,  6250.,  7017.,  7784.,  5898.,  6740.,  7582.,  8424.,  6065.,  6926.,  7787.,  8648.,  5771.,  6558.,  7345.,  8132.,  5104.,  5808.,  6512.,  7216.,  4260.,  4872.,  5484.,  6096.,  3915.,  4458.,  5001.,  5544.,  3529.,  3994.,  4459.,  4924.,  3318.,  3824.,  4330.,  4836.,  4220.,  4824.,  5428.,  6032.,  4952.,  5664.,  6376.,  7088.,  5394.,  6176.,  6958.,  7740.,  6178.,  7040.,  7902.,  8764.,  6736.,  7688.,  8640.,  9592.,  6658.,  7640.,  8622.,  9604.,  6274.,  7176.,  8078.,  8980.,  5772.,  6584.,  7396.,  8208.,  4952.,  5664.,  6376.,  7088.,  4430.,  5064.,  5698.,  6332.,  4054.,  4600.,  5146.,  5692.,  3495.,  4022.,  4549.,  5076.,  4168.,  4800.,  5432.,  6064.,  5196.,  5944.,  6692.,  7440.,  5623.,  6450.,  7277.,  8104.,  6205.,  7122.,  8039.,  8956.,  7138.,  8156.,  9174., 10192.,  7323.,  8382.,  9441., 10500.,  6653.,  7630.,  8607.,  9584.,  6100.,  6984.,  7868.,  8752.,  5468.,  6248.,  7028.,  7808.,  4593.,  5290.,  5987.,  6684.,  4031.,  4634.,  5237.,  5840.,  3727.,  4246.,  4765.,  5284.,  4244.,  4856.,  5468.,  6080.,  4972.,  5688.,  6404.,  7120.,  5547.,  6346.,  7145.,  7944.,  6069.,  6962.,  7855.,  8748.,  6734.,  7732.,  8730.,  9728.,  7303.,  8342.,  9381., 10420.,  6869.,  7822.,  8775.,  9728.,  5992.,  6848.,  7704.,  8560.,  5244.,  5992.,  6740.,  7488.,  4669.,  5346.,  6023.,  6700.,  3975.,  4570.,  5165.,  5760.,  3927.,  4470.,  5013.,  5556.,  4560.,  5200.,  5840.,  6480.,  5196.,  5944.,  6692.,  7440.,  5903.,  6722.,  7541.,  8360.,  6413.,  7314.,  8215.,  9116.,  6922.,  7916.,  8910.,  9904.,  7091.,  8110.,  9129., 10148.,  6701.,  7630.,  8559.,  9488.,  6076.,  6904.,  7732.,  8560.,  5020.,  5736.,  6452.,  7168.,  4537.,  5178.,  5819.,  6460.,  4079.,  4634.,  5189.,  5744.,  3743.,  4310.,  4877.,  5444.,  4684.,  5352.,  6020.,  6688.,  5420.,  6200.,  6980.,  7760.,  5891.,  6746.,  7601.,  8456.,  6725.,  7666.,  8607.,  9548.,  7350.,  8388.,  9426., 10464.,  7135.,  8198.,  9261., 10324.,  6597.,  7566.,  8535.,  9504.,  6032.,  6896.,  7760.,  8624.,  5244.,  5992.,  6740.,  7488.,  4661.,  5330.,  5999.,  6668.,  4247.,  4826.,  5405.,  5984.,  3358.,  3864.,  4370.,  4876.,  3980.,  4584.,  5188.,  5792.,  4952.,  5664.,  6376.,  7088.,  5322.,  6104.,  6886.,  7668.,  5834.,  6696.,  7558.,  8420.,  6688.,  7640.,  8592.,  9544.,  6794.,  7776.,  8758.,  9740.,  6058.,  6960.,  7862.,  8764.,  5596.,  6408.,  7220.,  8032.,  5016.,  5728.,  6440.,  7152.,  4150.,  4784.,  5418.,  6052.,  3550.,  4096.,  4642.,  5188.,  3185.,  3622.,  4059.,  4496.,  3640.,  4160.,  4680.,  5200.,  4276.,  4888.,  5500.,  6112.,  4737.,  5418.,  6099.,  6780.,  5179.,  5938.,  6697.,  7456.,  5726.,  6572.,  7418.,  8264.,  6221.,  7102.,  7983.,  8864.,  5723.,  6534.,  7345.,  8156.,  5036.,  5768.,  6500.,  7232.,  4548.,  5192.,  5836.,  6480.,  4023.,  4602.,  5181.,  5760.,  3305.,  3810.,  4315.,  4820.,  2872.,  3264.,  3656.,  4048.,  3344.,  3808.,  4272.,  4736.,  3808.,  4352.,  4896.,  5440.,  4360.,  4960.,  5560.,  6160.,  4776.,  5440.,  6104.,  6768.,  5184.,  5920.,  6656.,  7392.,  5352.,  6112.,  6872.,  7632.,  5000.,  5696.,  6392.,  7088.,  4528.,  5152.,  5776.,  6400.,  3808.,  4352.,  4896.,  5440.,  3512.,  4000.,  4488.,  4976.,  3096.,  3520.,  3944.,  4368.,  2435.,  2806.,  3177.,  3548.,  3044.,  3480.,  3916.,  4352.,  3516.,  4024.,  4532.,  5040.,  3807.,  4362.,  4917.,  5472.,  4337.,  4946.,  5555.,  6164.,  4726.,  5396.,  6066.,  6736.,  4555.,  5238.,  5921.,  6604.,  4225.,  4846.,  5467.,  6088.,  3864.,  4416.,  4968.,  5520.,  3340.,  3816.,  4292.,  4768.,  2937.,  3362.,  3787.,  4212.,  2699.,  3066.,  3433.,  3800.,  2050.,  2360.,  2670.,  2980.,  2436.,  2808.,  3180.,  3552.,  3048.,  3488.,  3928.,  4368.,  3270.,  3752.,  4234.,  4716.,  3574.,  4104.,  4634.,  5164.,  4096.,  4680.,  5264.,  5848.,  4118.,  4720.,  5322.,  5924.,  3686.,  4240.,  4794.,  5348.,  3460.,  3960.,  4460.,  4960.,  3112.,  3552.,  3992.,  4432.,  2522.,  2912.,  3302.,  3692.,  2130.,  2464.,  2798.,  3132.,  1978.,  2256.,  2534.,  2812.,  2244.,  2568.,  2892.,  3216.,  2600.,  2976.,  3352.,  3728.,  2894.,  3312.,  3730.,  4148.,  3150.,  3616.,  4082.,  4548.,  3504.,  4024.,  4544.,  5064.,  3790.,  4328.,  4866.,  5404.,  3646.,  4136.,  4626.,  5116.,  3124.,  3560.,  3996.,  4432.,  2600.,  2976.,  3352.,  3728.,  2370.,  2712.,  3054.,  3396.,  2090.,  2392.,  2694.,  2996.,  2491.,  2838.,  3185.,  3532.,  2888.,  3296.,  3704.,  4112.,  3292.,  3768.,  4244.,  4720.,  3723.,  4242.,  4761.,  5280.,  4025.,  4594.,  5163.,  5732.,  4330.,  4956.,  5582.,  6208.,  4415.,  5054.,  5693.,  6332.,  4201.,  4782.,  5363.,  5944.,  3812.,  4328.,  4844.,  5360.,  3116.,  3560.,  4004.,  4448.,  2781.,  3178.,  3575.,  3972.,  2531.,  2874.,  3217.,  3560.,  2616.,  3008.,  3400.,  3792.,  3280.,  3744.,  4208.,  4672.,  3808.,  4352.,  4896.,  5440.,  4168.,  4768.,  5368.,  5968.,  4776.,  5440.,  6104.,  6768.,  5248.,  5984.,  6720.,  7456.,  5160.,  5920.,  6680.,  7440.,  4744.,  5440.,  6136.,  6832.,  4336.,  4960.,  5584.,  6208.,  3808.,  4352.,  4896.,  5440.,  3448.,  3936.,  4424.,  4912.,  3096.,  3520.,  3944.,  4368.,  2753.,  3166.,  3579.,  3992.,  3276.,  3768.,  4260.,  4752.,  4052.,  4632.,  5212.,  5792.,  4405.,  5050.,  5695.,  6340.,  4891.,  5610.,  6329.,  7048.,  5634.,  6436.,  7238.,  8040.,  5881.,  6718.,  7555.,  8392.,  5339.,  6110.,  6881.,  7652.,  4776.,  5472.,  6168.,  6864.,  4260.,  4872.,  5484.,  6096.,  3699.,  4250.,  4801.,  5352.,  3321.,  3802.,  4283.,  4764.,  3414.,  3888.,  4362.,  4836.,  3884.,  4440.,  4996.,  5552.,  4504.,  5152.,  5800.,  6448.,  4978.,  5696.,  6414.,  7132.,  5410.,  6208.,  7006.,  7804.,  6000.,  6888.,  7776.,  8664.,  6498.,  7416.,  8334.,  9252.,  6146.,  6984.,  7822.,  8660.,  5292.,  6040.,  6788.,  7536.,  4504.,  5152.,  5800.,  6448.,  4094.,  4680.,  5266.,  5852.,  3510.,  4024.,  4538.,  5052.,  3927.,  4470.,  5013.,  5556.,  4560.,  5200.,  5840.,  6480.,  5196.,  5944.,  6692.,  7440.,  5903.,  6722.,  7541.,  8360.,  6413.,  7314.,  8215.,  9116.,  6922.,  7916.,  8910.,  9904.,  7091.,  8110.,  9129., 10148.,  6701.,  7630.,  8559.,  9488.,  6076.,  6904.,  7732.,  8560.,  5020.,  5736.,  6452.,  7168.,  4537.,  5178.,  5819.,  6460.,  4079.,  4634.,  5189.,  5744.,  3743.,  4310.,  4877.,  5444.,  4684.,  5352.,  6020.,  6688.,  5420.,  6200.,  6980.,  7760.,  5891.,  6746.,  7601.,  8456.,  6725.,  7666.,  8607.,  9548.,  7350.,  8388.,  9426., 10464.,  7135.,  8198.,  9261., 10324.,  6597.,  7566.,  8535.,  9504.,  6032.,  6896.,  7760.,  8624.,  5244.,  5992.,  6740.,  7488.,  4661.,  5330.,  5999.,  6668.,  4247.,  4826.,  5405.,  5984.,  3495.,  4022.,  4549.,  5076.,  4168.,  4800.,  5432.,  6064.,  5196.,  5944.,  6692.,  7440.,  5623.,  6450.,  7277.,  8104.,  6205.,  7122.,  8039.,  8956.,  7138.,  8156.,  9174., 10192.,  7323.,  8382.,  9441., 10500.,  6653.,  7630.,  8607.,  9584.,  6100.,  6984.,  7868.,  8752.,  5468.,  6248.,  7028.,  7808.,  4593.,  5290.,  5987.,  6684.,  4031.,  4634.,  5237.,  5840.,  3727.,  4246.,  4765.,  5284.,  4244.,  4856.,  5468.,  6080.,  4972.,  5688.,  6404.,  7120.,  5547.,  6346.,  7145.,  7944.,  6069.,  6962.,  7855.,  8748.,  6734.,  7732.,  8730.,  9728.,  7303.,  8342.,  9381., 10420.,  6869.,  7822.,  8775.,  9728.,  5992.,  6848.,  7704.,  8560.,  5244.,  5992.,  6740.,  7488.,  4669.,  5346.,  6023.,  6700.,  3975.,  4570.,  5165.,  5760.,  3454.,  3928.,  4402.,  4876.,  3964.,  4520.,  5076.,  5632.,  4504.,  5152.,  5800.,  6448.,  5162.,  5880.,  6598.,  7316.,  5706.,  6504.,  7302.,  8100.,  6208.,  7096.,  7984.,  8872.,  6378.,  7296.,  8214.,  9132.,  5930.,  6768.,  7606.,  8444.,  5500.,  6248.,  6996.,  7744.,  4568.,  5216.,  5864.,  6512.,  4134.,  4720.,  5306.,  5892.,  3646.,  4160.,  4674.,  5188.,  3041.,  3494.,  3947.,  4400.,  3744.,  4272.,  4800.,  5328.,  4276.,  4888.,  5500.,  6112.,  4665.,  5338.,  6011.,  6684.,  5323.,  6066.,  6809.,  7552.,  5862.,  6684.,  7506.,  8328.,  5637.,  6478.,  7319.,  8160.,  5067.,  5830.,  6593.,  7356.,  4596.,  5272.,  5948.,  6624.,  4100.,  4680.,  5260.,  5840.,  3679.,  4202.,  4725.,  5248.,  3289.,  3746.,  4203.,  4660.,  2616.,  3008.,  3400.,  3792.,  3088.,  3552.,  4016.,  4480.,  3808.,  4352.,  4896.,  5440.,  4104.,  4704.,  5304.,  5904.,  4520.,  5184.,  5848.,  6512.,  5184.,  5920.,  6656.,  7392.,  5352.,  6112.,  6872.,  7632.,  4744.,  5440.,  6136.,  6832.,  4272.,  4896.,  5520.,  6144.,  3808.,  4352.,  4896.,  5440.,  3256.,  3744.,  4232.,  4720.,  2840.,  3264.,  3688.,  4112.,  2291.,  2614.,  2937.,  3260.,  2604.,  2984.,  3364.,  3744.,  3068.,  3512.,  3956.,  4400.,  3463.,  3962.,  4461.,  4960.,  3809.,  4370.,  4931.,  5492.,  4238.,  4868.,  5498.,  6128.,  4595.,  5254.,  5913.,  6572.,  4369.,  4974.,  5579.,  6184.,  3824.,  4368.,  4912.,  5456.,  3340.,  3816.,  4292.,  4768.,  2945.,  3378.,  3811.,  4244.,  2555.,  2938.,  3321.,  3704.,  2018.,  2296.,  2574.,  2852.,  2292.,  2616.,  2940.,  3264.,  2600.,  2976.,  3352.,  3728.,  2982.,  3400.,  3818.,  4236.,  3318.,  3784.,  4250.,  4716.,  3616.,  4136.,  4656.,  5176.,  3702.,  4240.,  4778.,  5316.,  3430.,  3920.,  4410.,  4900.,  3236.,  3672.,  4108.,  4544.,  2664.,  3040.,  3416.,  3792.,  2378.,  2720.,  3062.,  3404.,  2098.,  2400.,  2702.,  3004.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x12x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6922.,  7916.,  8910.,  9904.,  7091.,  8110.,  9129., 10148.,  7350.,  8388.,  9426., 10464.,  7135.,  8198.,  9261., 10324.,  7138.,  8156.,  9174., 10192.,  7323.,  8382.,  9441., 10500.,  6734.,  7732.,  8730.,  9728.,  7303.,  8342.,  9381., 10420.,  7138.,  8156.,  9174., 10192.,  7323.,  8382.,  9441., 10500.,  6734.,  7732.,  8730.,  9728.,  7303.,  8342.,  9381., 10420.,  6922.,  7916.,  8910.,  9904.,  7091.,  8110.,  9129., 10148.,  7350.,  8388.,  9426., 10464.,  7135.,  8198.,  9261., 10324.,  6922.,  7916.,  8910.,  9904.,  7091.,  8110.,  9129., 10148.,  7350.,  8388.,  9426., 10464.,  7135.,  8198.,  9261., 10324.,  7138.,  8156.,  9174., 10192.,  7323.,  8382.,  9441., 10500.,  6734.,  7732.,  8730.,  9728.,  7303.,  8342.,  9381., 10420.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x12x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 5096.,  6304.,  7280.,  7560.,  8072.,  8576.,  9188.,  9024.,  8308.,  7280.,  6644.,  5776.,  5582.,  6519.,  7784.,  8681.,  9666., 11003., 11785., 10862.,  9691.,  8008.,  6973.,  6290.,  6416.,  7776.,  9280.,  9968., 11056., 12288., 13104., 12144., 10784.,  9280.,  8592.,  7504.,  7166.,  8651., 10552., 11597., 12386., 13695., 14537., 13510., 12131., 10392.,  9517.,  8554.,  8216.,  9688., 11408., 12032., 13496., 15288., 16596., 15984., 14084., 11664., 10580.,  9200.,  8286., 10215., 12680., 14217., 15650., 17227., 17841., 16206., 14387., 12392., 11333., 10274.,  9262., 11071., 12680., 13249., 14706., 16531., 17913., 17246., 15403., 13160., 11805., 10162.,  8286., 10215., 12680., 14217., 15650., 17227., 17841., 16206., 14387., 12392., 11333., 10274.,  9262., 11071., 12680., 13249., 14706., 16531., 17913., 17246., 15403., 13160., 11805., 10162.,  7536.,  9212., 11408., 12716., 14320., 15948., 16536., 14840., 13168., 11280., 10280.,  9224.,  7462.,  9159., 10552., 11185., 12266., 13531., 14421., 13406., 12103., 10776.,  9817.,  8466.,  6416.,  7648.,  9280., 10096., 11056., 12416., 13232., 12144., 10912.,  9280.,  8464.,  7504.,  5454.,  6551.,  7784.,  8649.,  9794., 10971., 11657., 10798.,  9499.,  8008.,  7277.,  6594.,  4832.,  5900.,  7280.,  7772.,  8224.,  8908.,  9088.,  8472.,  8088.,  7152.,  6560.,  5704.,  5096.,  6304.,  7280.,  7560.,  8072.,  8576.,  9188.,  9024.,  8308.,  7280.,  6644.,  5776.,  5582.,  6519.,  7784.,  8681.,  9666., 11003., 11785., 10862.,  9691.,  8008.,  6973.,  6290.,  6416.,  7776.,  9280.,  9968., 11056., 12288., 13104., 12144., 10784.,  9280.,  8592.,  7504.,  7166.,  8651., 10552., 11597., 12386., 13695., 14537., 13510., 12131., 10392.,  9517.,  8554.,  8216.,  9688., 11408., 12032., 13496., 15288., 16596., 15984., 14084., 11664., 10580.,  9200.,  8286., 10215., 12680., 14217., 15650., 17227., 17841., 16206., 14387., 12392., 11333., 10274.,  9262., 11071., 12680., 13249., 14706., 16531., 17913., 17246., 15403., 13160., 11805., 10162.,  8286., 10215., 12680., 14217., 15650., 17227., 17841., 16206., 14387., 12392., 11333., 10274.,  9262., 11071., 12680., 13249., 14706., 16531., 17913., 17246., 15403., 13160., 11805., 10162.,  7536.,  9212., 11408., 12716., 14320., 15948., 16536., 14840., 13168., 11280., 10280.,  9224.,  7462.,  9159., 10552., 11185., 12266., 13531., 14421., 13406., 12103., 10776.,  9817.,  8466.,  6416.,  7648.,  9280., 10096., 11056., 12416., 13232., 12144., 10912.,  9280.,  8464.,  7504.,  5454.,  6551.,  7784.,  8649.,  9794., 10971., 11657., 10798.,  9499.,  8008.,  7277.,  6594.,  4832.,  5900.,  7280.,  7772.,  8224.,  8908.,  9088.,  8472.,  8088.,  7152.,  6560.,  5704.,  5096.,  6304.,  7280.,  7560.,  8072.,  8576.,  9188.,  9024.,  8308.,  7280.,  6644.,  5776.,  5582.,  6519.,  7784.,  8681.,  9666., 11003., 11785., 10862.,  9691.,  8008.,  6973.,  6290.,  6416.,  7776.,  9280.,  9968., 11056., 12288., 13104., 12144., 10784.,  9280.,  8592.,  7504.,  7166.,  8651., 10552., 11597., 12386., 13695., 14537., 13510., 12131., 10392.,  9517.,  8554.,  8216.,  9688., 11408., 12032., 13496., 15288., 16596., 15984., 14084., 11664., 10580.,  9200.,  8286., 10215., 12680., 14217., 15650., 17227., 17841., 16206., 14387., 12392., 11333., 10274.,  9262., 11071., 12680., 13249., 14706., 16531., 17913., 17246., 15403., 13160., 11805., 10162.,  8286., 10215., 12680., 14217., 15650., 17227., 17841., 16206., 14387., 12392., 11333., 10274.,  9262., 11071., 12680., 13249., 14706., 16531., 17913., 17246., 15403., 13160., 11805., 10162.,  7536.,  9212., 11408., 12716., 14320., 15948., 16536., 14840., 13168., 11280., 10280.,  9224.,  7462.,  9159., 10552., 11185., 12266., 13531., 14421., 13406., 12103., 10776.,  9817.,  8466.,  6416.,  7648.,  9280., 10096., 11056., 12416., 13232., 12144., 10912.,  9280.,  8464.,  7504.,  5454.,  6551.,  7784.,  8649.,  9794., 10971., 11657., 10798.,  9499.,  8008.,  7277.,  6594.,  4832.,  5900.,  7280.,  7772.,  8224.,  8908.,  9088.,  8472.,  8088.,  7152.,  6560.,  5704.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x12x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17227., 17841., 16531., 17913., 17227., 17841., 16531., 17913., 17227., 17841., 16531., 17913., 17227., 17841., 16531., 17913., 17227., 17841., 16531., 17913., 17227., 17841., 16531., 17913.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x12x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4428.,  4992.,  5370.,  6048.,  6448.,  7264.,  7054.,  7936.,  7908.,  8880.,  8530.,  9616.,  9106., 10264.,  8948., 10016.,  7902.,  8856.,  6448.,  7264.,  5946.,  6696.,  5468.,  6128.,  5178.,  5820.,  6127.,  6910.,  7512.,  8464.,  8277.,  9298.,  8934., 10052., 10011., 11254., 10467., 11794.,  9934., 11164.,  9189., 10294.,  7704.,  8656.,  6679.,  7546.,  6082.,  6836.,  6064.,  6816.,  7416.,  8320.,  8768.,  9856.,  9352., 10528., 10448., 11744., 11544., 12992., 12312., 13856., 11472., 12896., 10120., 11392.,  8768.,  9856.,  8184.,  9184.,  7088.,  7968.,  6654.,  7484.,  7973.,  8982.,  9832., 11056., 10871., 12186., 11570., 13012., 12953., 14558., 13889., 15602., 13050., 14636., 11591., 13014.,  9768., 10992.,  8877.,  9994.,  8166.,  9140.,  7460.,  8400.,  9078., 10208., 10832., 12192., 11730., 13200., 13132., 14752., 14302., 16112., 15262., 17192., 14684., 16464., 12962., 14552., 10832., 12192., 10038., 11288.,  9012., 10112.,  8210.,  9228.,  9707., 10942., 11896., 13392., 13081., 14690., 14158., 15924., 15911., 17878., 16751., 18850., 15670., 17612., 14377., 16118., 12088., 13584., 10643., 12010.,  9626., 10820.,  8338.,  9388., 10123., 11374., 11896., 13392., 12921., 14546., 14542., 16340., 16007., 18022., 16847., 18994., 15926., 17900., 14089., 15846., 12088., 13584., 11059., 12442.,  9882., 11108.,  8210.,  9228.,  9707., 10942., 11896., 13392., 13081., 14690., 14158., 15924., 15911., 17878., 16751., 18850., 15670., 17612., 14377., 16118., 12088., 13584., 10643., 12010.,  9626., 10820.,  8338.,  9388., 10123., 11374., 11896., 13392., 12921., 14546., 14542., 16340., 16007., 18022., 16847., 18994., 15926., 17900., 14089., 15846., 12088., 13584., 11059., 12442.,  9882., 11108.,  7620.,  8560.,  8894., 10024., 10832., 12192., 11818., 13288., 13036., 14656., 14758., 16568., 15430., 17360., 14092., 15872., 13162., 14752., 11088., 12448.,  9694., 10944.,  8548.,  9648.,  6942.,  7804.,  8461.,  9486.,  9832., 11056., 10543., 11874., 11858., 13332., 13249., 14902., 13897., 15658., 12714., 14332., 11247., 12686., 10024., 11248.,  9205., 10338.,  7958.,  8964.,  6064.,  6816.,  7160.,  8064.,  8768.,  9856.,  9608., 10784., 10448., 11744., 11800., 13248., 12568., 14112., 11472., 12896., 10376., 11648.,  8768.,  9856.,  7928.,  8928.,  7088.,  7968.,  5306.,  5980.,  6415.,  7214.,  7512.,  8464.,  8245.,  9282.,  9318., 10468., 10235., 11526., 10691., 12066., 10190., 11452.,  9029., 10150.,  7704.,  8656.,  6967.,  7850.,  6338.,  7124.,  4588.,  5152.,  5314.,  5992.,  6448.,  7264.,  7014.,  7896.,  7812.,  8784.,  8858.,  9944.,  9146., 10304.,  8356.,  9424.,  7974.,  8928.,  6704.,  7520.,  5730.,  6480.,  5004.,  5664.,  4428.,  4992.,  5370.,  6048.,  6448.,  7264.,  7054.,  7936.,  7908.,  8880.,  8530.,  9616.,  9106., 10264.,  8948., 10016.,  7902.,  8856.,  6448.,  7264.,  5946.,  6696.,  5468.,  6128.,  5178.,  5820.,  6127.,  6910.,  7512.,  8464.,  8277.,  9298.,  8934., 10052., 10011., 11254., 10467., 11794.,  9934., 11164.,  9189., 10294.,  7704.,  8656.,  6679.,  7546.,  6082.,  6836.,  6064.,  6816.,  7416.,  8320.,  8768.,  9856.,  9352., 10528., 10448., 11744., 11544., 12992., 12312., 13856., 11472., 12896., 10120., 11392.,  8768.,  9856.,  8184.,  9184.,  7088.,  7968.,  6654.,  7484.,  7973.,  8982.,  9832., 11056., 10871., 12186., 11570., 13012., 12953., 14558., 13889., 15602., 13050., 14636., 11591., 13014.,  9768., 10992.,  8877.,  9994.,  8166.,  9140.,  7460.,  8400.,  9078., 10208., 10832., 12192., 11730., 13200., 13132., 14752., 14302., 16112., 15262., 17192., 14684., 16464., 12962., 14552., 10832., 12192., 10038., 11288.,  9012., 10112.,  8210.,  9228.,  9707., 10942., 11896., 13392., 13081., 14690., 14158., 15924., 15911., 17878., 16751., 18850., 15670., 17612., 14377., 16118., 12088., 13584., 10643., 12010.,  9626., 10820.,  8338.,  9388., 10123., 11374., 11896., 13392., 12921., 14546., 14542., 16340., 16007., 18022., 16847., 18994., 15926., 17900., 14089., 15846., 12088., 13584., 11059., 12442.,  9882., 11108.,  8210.,  9228.,  9707., 10942., 11896., 13392., 13081., 14690., 14158., 15924., 15911., 17878., 16751., 18850., 15670., 17612., 14377., 16118., 12088., 13584., 10643., 12010.,  9626., 10820.,  8338.,  9388., 10123., 11374., 11896., 13392., 12921., 14546., 14542., 16340., 16007., 18022., 16847., 18994., 15926., 17900., 14089., 15846., 12088., 13584., 11059., 12442.,  9882., 11108.,  7620.,  8560.,  8894., 10024., 10832., 12192., 11818., 13288., 13036., 14656., 14758., 16568., 15430., 17360., 14092., 15872., 13162., 14752., 11088., 12448.,  9694., 10944.,  8548.,  9648.,  6942.,  7804.,  8461.,  9486.,  9832., 11056., 10543., 11874., 11858., 13332., 13249., 14902., 13897., 15658., 12714., 14332., 11247., 12686., 10024., 11248.,  9205., 10338.,  7958.,  8964.,  6064.,  6816.,  7160.,  8064.,  8768.,  9856.,  9608., 10784., 10448., 11744., 11800., 13248., 12568., 14112., 11472., 12896., 10376., 11648.,  8768.,  9856.,  7928.,  8928.,  7088.,  7968.,  5306.,  5980.,  6415.,  7214.,  7512.,  8464.,  8245.,  9282.,  9318., 10468., 10235., 11526., 10691., 12066., 10190., 11452.,  9029., 10150.,  7704.,  8656.,  6967.,  7850.,  6338.,  7124.,  4588.,  5152.,  5314.,  5992.,  6448.,  7264.,  7014.,  7896.,  7812.,  8784.,  8858.,  9944.,  9146., 10304.,  8356.,  9424.,  7974.,  8928.,  6704.,  7520.,  5730.,  6480.,  5004.,  5664.,  4428.,  4992.,  5370.,  6048.,  6448.,  7264.,  7054.,  7936.,  7908.,  8880.,  8530.,  9616.,  9106., 10264.,  8948., 10016.,  7902.,  8856.,  6448.,  7264.,  5946.,  6696.,  5468.,  6128.,  5178.,  5820.,  6127.,  6910.,  7512.,  8464.,  8277.,  9298.,  8934., 10052., 10011., 11254., 10467., 11794.,  9934., 11164.,  9189., 10294.,  7704.,  8656.,  6679.,  7546.,  6082.,  6836.,  6064.,  6816.,  7416.,  8320.,  8768.,  9856.,  9352., 10528., 10448., 11744., 11544., 12992., 12312., 13856., 11472., 12896., 10120., 11392.,  8768.,  9856.,  8184.,  9184.,  7088.,  7968.,  6654.,  7484.,  7973.,  8982.,  9832., 11056., 10871., 12186., 11570., 13012., 12953., 14558., 13889., 15602., 13050., 14636., 11591., 13014.,  9768., 10992.,  8877.,  9994.,  8166.,  9140.,  7460.,  8400.,  9078., 10208., 10832., 12192., 11730., 13200., 13132., 14752., 14302., 16112., 15262., 17192., 14684., 16464., 12962., 14552., 10832., 12192., 10038., 11288.,  9012., 10112.,  8210.,  9228.,  9707., 10942., 11896., 13392., 13081., 14690., 14158., 15924., 15911., 17878., 16751., 18850., 15670., 17612., 14377., 16118., 12088., 13584., 10643., 12010.,  9626., 10820.,  8338.,  9388., 10123., 11374., 11896., 13392., 12921., 14546., 14542., 16340., 16007., 18022., 16847., 18994., 15926., 17900., 14089., 15846., 12088., 13584., 11059., 12442.,  9882., 11108.,  8210.,  9228.,  9707., 10942., 11896., 13392., 13081., 14690., 14158., 15924., 15911., 17878., 16751., 18850., 15670., 17612., 14377., 16118., 12088., 13584., 10643., 12010.,  9626., 10820.,  8338.,  9388., 10123., 11374., 11896., 13392., 12921., 14546., 14542., 16340., 16007., 18022., 16847., 18994., 15926., 17900., 14089., 15846., 12088., 13584., 11059., 12442.,  9882., 11108.,  7620.,  8560.,  8894., 10024., 10832., 12192., 11818., 13288., 13036., 14656., 14758., 16568., 15430., 17360., 14092., 15872., 13162., 14752., 11088., 12448.,  9694., 10944.,  8548.,  9648.,  6942.,  7804.,  8461.,  9486.,  9832., 11056., 10543., 11874., 11858., 13332., 13249., 14902., 13897., 15658., 12714., 14332., 11247., 12686., 10024., 11248.,  9205., 10338.,  7958.,  8964.,  6064.,  6816.,  7160.,  8064.,  8768.,  9856.,  9608., 10784., 10448., 11744., 11800., 13248., 12568., 14112., 11472., 12896., 10376., 11648.,  8768.,  9856.,  7928.,  8928.,  7088.,  7968.,  5306.,  5980.,  6415.,  7214.,  7512.,  8464.,  8245.,  9282.,  9318., 10468., 10235., 11526., 10691., 12066., 10190., 11452.,  9029., 10150.,  7704.,  8656.,  6967.,  7850.,  6338.,  7124.,  4588.,  5152.,  5314.,  5992.,  6448.,  7264.,  7014.,  7896.,  7812.,  8784.,  8858.,  9944.,  9146., 10304.,  8356.,  9424.,  7974.,  8928.,  6704.,  7520.,  5730.,  6480.,  5004.,  5664.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x12x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {15911., 17878., 16751., 18850., 16007., 18022., 16847., 18994., 15911., 17878., 16751., 18850., 16007., 18022., 16847., 18994., 15911., 17878., 16751., 18850., 16007., 18022., 16847., 18994., 15911., 17878., 16751., 18850., 16007., 18022., 16847., 18994., 15911., 17878., 16751., 18850., 16007., 18022., 16847., 18994., 15911., 17878., 16751., 18850., 16007., 18022., 16847., 18994.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x12x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4020.,  4584.,  5148.,  5712.,  5022.,  5700.,  6378.,  7056.,  5808.,  6624.,  7440.,  8256.,  6090.,  6972.,  7854.,  8736.,  6924.,  7896.,  8868.,  9840.,  7542.,  8628.,  9714., 10800.,  8046.,  9204., 10362., 11520.,  7596.,  8664.,  9732., 10800.,  6594.,  7548.,  8502.,  9456.,  5808.,  6624.,  7440.,  8256.,  5526.,  6276.,  7026.,  7776.,  4692.,  5352.,  6012.,  6672.,  4530.,  5172.,  5814.,  6456.,  5327.,  6110.,  6893.,  7676.,  6712.,  7664.,  8616.,  9568.,  7517.,  8538.,  9559., 10580.,  7886.,  9004., 10122., 11240.,  9083., 10326., 11569., 12812.,  9527., 10854., 12181., 13508.,  8830., 10060., 11290., 12520.,  7929.,  9034., 10139., 11244.,  6840.,  7792.,  8744.,  9696.,  5835.,  6702.,  7569.,  8436.,  5410.,  6164.,  6918.,  7672.,  5360.,  6112.,  6864.,  7616.,  6696.,  7600.,  8504.,  9408.,  7744.,  8832.,  9920., 11008.,  8120.,  9296., 10472., 11648.,  9232., 10528., 11824., 13120., 10056., 11504., 12952., 14400., 10728., 12272., 13816., 15360., 10128., 11552., 12976., 14400.,  8792., 10064., 11336., 12608.,  7744.,  8832.,  9920., 11008.,  7368.,  8368.,  9368., 10368.,  6256.,  7136.,  8016.,  8896.,  5870.,  6700.,  7530.,  8360.,  6873.,  7882.,  8891.,  9900.,  8648.,  9872., 11096., 12320.,  9675., 10990., 12305., 13620., 10194., 11636., 13078., 14520., 11725., 13330., 14935., 16540., 12337., 14050., 15763., 17476., 11362., 12948., 14534., 16120., 10255., 11678., 13101., 14524.,  8776., 10000., 11224., 12448.,  7549.,  8666.,  9783., 10900.,  6974.,  7948.,  8922.,  9896.,  6700.,  7640.,  8580.,  9520.,  8370.,  9500., 10630., 11760.,  9680., 11040., 12400., 13760., 10150., 11620., 13090., 14560., 11540., 13160., 14780., 16400., 12570., 14380., 16190., 18000., 13410., 15340., 17270., 19200., 12660., 14440., 16220., 18000., 10990., 12580., 14170., 15760.,  9680., 11040., 12400., 13760.,  9210., 10460., 11710., 12960.,  7820.,  8920., 10020., 11120.,  7210.,  8228.,  9246., 10264.,  8419.,  9654., 10889., 12124., 10584., 12080., 13576., 15072., 11833., 13442., 15051., 16660., 12502., 14268., 16034., 17800., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13894., 15836., 17778., 19720., 12581., 14322., 16063., 17804., 10712., 12208., 13704., 15200.,  9263., 10630., 11997., 13364.,  8538.,  9732., 10926., 12120.,  7434.,  8484.,  9534., 10584.,  9235., 10486., 11737., 12988., 10584., 12080., 13576., 15072., 11241., 12866., 14491., 16116., 12726., 14524., 16322., 18120., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14118., 16092., 18066., 20040., 11989., 13746., 15503., 17260., 10712., 12208., 13704., 15200., 10079., 11462., 12845., 14228.,  8762.,  9988., 11214., 12440.,  7210.,  8228.,  9246., 10264.,  8419.,  9654., 10889., 12124., 10584., 12080., 13576., 15072., 11833., 13442., 15051., 16660., 12502., 14268., 16034., 17800., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13894., 15836., 17778., 19720., 12581., 14322., 16063., 17804., 10712., 12208., 13704., 15200.,  9263., 10630., 11997., 13364.,  8538.,  9732., 10926., 12120.,  7434.,  8484.,  9534., 10584.,  9235., 10486., 11737., 12988., 10584., 12080., 13576., 15072., 11241., 12866., 14491., 16116., 12726., 14524., 16322., 18120., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14118., 16092., 18066., 20040., 11989., 13746., 15503., 17260., 10712., 12208., 13704., 15200., 10079., 11462., 12845., 14228.,  8762.,  9988., 11214., 12440.,  6700.,  7640.,  8580.,  9520.,  7730.,  8860.,  9990., 11120.,  9680., 11040., 12400., 13760., 10790., 12260., 13730., 15200., 11540., 13160., 14780., 16400., 13210., 15020., 16830., 18640., 14050., 15980., 17910., 19840., 12660., 14440., 16220., 18000., 11630., 13220., 14810., 16400.,  9680., 11040., 12400., 13760.,  8570.,  9820., 11070., 12320.,  7820.,  8920., 10020., 11120.,  6094.,  6956.,  7818.,  8680.,  7561.,  8586.,  9611., 10636.,  8648.,  9872., 11096., 12320.,  9211., 10542., 11873., 13204., 10418., 11892., 13366., 14840., 11485., 13138., 14791., 16444., 12097., 13858., 15619., 17380., 11586., 13204., 14822., 16440.,  9791., 11230., 12669., 14108.,  8776., 10000., 11224., 12448.,  8237.,  9370., 10503., 11636.,  7198.,  8204.,  9210., 10216.,  5360.,  6112.,  6864.,  7616.,  6184.,  7088.,  7992.,  8896.,  7744.,  8832.,  9920., 11008.,  8632.,  9808., 10984., 12160.,  9232., 10528., 11824., 13120., 10568., 12016., 13464., 14912., 11240., 12784., 14328., 15872., 10128., 11552., 12976., 14400.,  9304., 10576., 11848., 13120.,  7744.,  8832.,  9920., 11008.,  6856.,  7856.,  8856.,  9856.,  6256.,  7136.,  8016.,  8896.,  4754.,  5428.,  6102.,  6776.,  5887.,  6686.,  7485.,  8284.,  6712.,  7664.,  8616.,  9568.,  7181.,  8218.,  9255., 10292.,  8110.,  9260., 10410., 11560.,  8971., 10262., 11553., 12844.,  9415., 10790., 12165., 13540.,  9054., 10316., 11578., 12840.,  7593.,  8714.,  9835., 10956.,  6840.,  7792.,  8744.,  9696.,  6395.,  7278.,  8161.,  9044.,  5634.,  6420.,  7206.,  7992.,  4020.,  4584.,  5148.,  5712.,  4638.,  5316.,  5994.,  6672.,  5808.,  6624.,  7440.,  8256.,  6474.,  7356.,  8238.,  9120.,  6924.,  7896.,  8868.,  9840.,  7926.,  9012., 10098., 11184.,  8430.,  9588., 10746., 11904.,  7596.,  8664.,  9732., 10800.,  6978.,  7932.,  8886.,  9840.,  5808.,  6624.,  7440.,  8256.,  5142.,  5892.,  6642.,  7392.,  4692.,  5352.,  6012.,  6672.,  4020.,  4584.,  5148.,  5712.,  5022.,  5700.,  6378.,  7056.,  5808.,  6624.,  7440.,  8256.,  6090.,  6972.,  7854.,  8736.,  6924.,  7896.,  8868.,  9840.,  7542.,  8628.,  9714., 10800.,  8046.,  9204., 10362., 11520.,  7596.,  8664.,  9732., 10800.,  6594.,  7548.,  8502.,  9456.,  5808.,  6624.,  7440.,  8256.,  5526.,  6276.,  7026.,  7776.,  4692.,  5352.,  6012.,  6672.,  4530.,  5172.,  5814.,  6456.,  5327.,  6110.,  6893.,  7676.,  6712.,  7664.,  8616.,  9568.,  7517.,  8538.,  9559., 10580.,  7886.,  9004., 10122., 11240.,  9083., 10326., 11569., 12812.,  9527., 10854., 12181., 13508.,  8830., 10060., 11290., 12520.,  7929.,  9034., 10139., 11244.,  6840.,  7792.,  8744.,  9696.,  5835.,  6702.,  7569.,  8436.,  5410.,  6164.,  6918.,  7672.,  5360.,  6112.,  6864.,  7616.,  6696.,  7600.,  8504.,  9408.,  7744.,  8832.,  9920., 11008.,  8120.,  9296., 10472., 11648.,  9232., 10528., 11824., 13120., 10056., 11504., 12952., 14400., 10728., 12272., 13816., 15360., 10128., 11552., 12976., 14400.,  8792., 10064., 11336., 12608.,  7744.,  8832.,  9920., 11008.,  7368.,  8368.,  9368., 10368.,  6256.,  7136.,  8016.,  8896.,  5870.,  6700.,  7530.,  8360.,  6873.,  7882.,  8891.,  9900.,  8648.,  9872., 11096., 12320.,  9675., 10990., 12305., 13620., 10194., 11636., 13078., 14520., 11725., 13330., 14935., 16540., 12337., 14050., 15763., 17476., 11362., 12948., 14534., 16120., 10255., 11678., 13101., 14524.,  8776., 10000., 11224., 12448.,  7549.,  8666.,  9783., 10900.,  6974.,  7948.,  8922.,  9896.,  6700.,  7640.,  8580.,  9520.,  8370.,  9500., 10630., 11760.,  9680., 11040., 12400., 13760., 10150., 11620., 13090., 14560., 11540., 13160., 14780., 16400., 12570., 14380., 16190., 18000., 13410., 15340., 17270., 19200., 12660., 14440., 16220., 18000., 10990., 12580., 14170., 15760.,  9680., 11040., 12400., 13760.,  9210., 10460., 11710., 12960.,  7820.,  8920., 10020., 11120.,  7210.,  8228.,  9246., 10264.,  8419.,  9654., 10889., 12124., 10584., 12080., 13576., 15072., 11833., 13442., 15051., 16660., 12502., 14268., 16034., 17800., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13894., 15836., 17778., 19720., 12581., 14322., 16063., 17804., 10712., 12208., 13704., 15200.,  9263., 10630., 11997., 13364.,  8538.,  9732., 10926., 12120.,  7434.,  8484.,  9534., 10584.,  9235., 10486., 11737., 12988., 10584., 12080., 13576., 15072., 11241., 12866., 14491., 16116., 12726., 14524., 16322., 18120., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14118., 16092., 18066., 20040., 11989., 13746., 15503., 17260., 10712., 12208., 13704., 15200., 10079., 11462., 12845., 14228.,  8762.,  9988., 11214., 12440.,  7210.,  8228.,  9246., 10264.,  8419.,  9654., 10889., 12124., 10584., 12080., 13576., 15072., 11833., 13442., 15051., 16660., 12502., 14268., 16034., 17800., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13894., 15836., 17778., 19720., 12581., 14322., 16063., 17804., 10712., 12208., 13704., 15200.,  9263., 10630., 11997., 13364.,  8538.,  9732., 10926., 12120.,  7434.,  8484.,  9534., 10584.,  9235., 10486., 11737., 12988., 10584., 12080., 13576., 15072., 11241., 12866., 14491., 16116., 12726., 14524., 16322., 18120., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14118., 16092., 18066., 20040., 11989., 13746., 15503., 17260., 10712., 12208., 13704., 15200., 10079., 11462., 12845., 14228.,  8762.,  9988., 11214., 12440.,  6700.,  7640.,  8580.,  9520.,  7730.,  8860.,  9990., 11120.,  9680., 11040., 12400., 13760., 10790., 12260., 13730., 15200., 11540., 13160., 14780., 16400., 13210., 15020., 16830., 18640., 14050., 15980., 17910., 19840., 12660., 14440., 16220., 18000., 11630., 13220., 14810., 16400.,  9680., 11040., 12400., 13760.,  8570.,  9820., 11070., 12320.,  7820.,  8920., 10020., 11120.,  6094.,  6956.,  7818.,  8680.,  7561.,  8586.,  9611., 10636.,  8648.,  9872., 11096., 12320.,  9211., 10542., 11873., 13204., 10418., 11892., 13366., 14840., 11485., 13138., 14791., 16444., 12097., 13858., 15619., 17380., 11586., 13204., 14822., 16440.,  9791., 11230., 12669., 14108.,  8776., 10000., 11224., 12448.,  8237.,  9370., 10503., 11636.,  7198.,  8204.,  9210., 10216.,  5360.,  6112.,  6864.,  7616.,  6184.,  7088.,  7992.,  8896.,  7744.,  8832.,  9920., 11008.,  8632.,  9808., 10984., 12160.,  9232., 10528., 11824., 13120., 10568., 12016., 13464., 14912., 11240., 12784., 14328., 15872., 10128., 11552., 12976., 14400.,  9304., 10576., 11848., 13120.,  7744.,  8832.,  9920., 11008.,  6856.,  7856.,  8856.,  9856.,  6256.,  7136.,  8016.,  8896.,  4754.,  5428.,  6102.,  6776.,  5887.,  6686.,  7485.,  8284.,  6712.,  7664.,  8616.,  9568.,  7181.,  8218.,  9255., 10292.,  8110.,  9260., 10410., 11560.,  8971., 10262., 11553., 12844.,  9415., 10790., 12165., 13540.,  9054., 10316., 11578., 12840.,  7593.,  8714.,  9835., 10956.,  6840.,  7792.,  8744.,  9696.,  6395.,  7278.,  8161.,  9044.,  5634.,  6420.,  7206.,  7992.,  4020.,  4584.,  5148.,  5712.,  4638.,  5316.,  5994.,  6672.,  5808.,  6624.,  7440.,  8256.,  6474.,  7356.,  8238.,  9120.,  6924.,  7896.,  8868.,  9840.,  7926.,  9012., 10098., 11184.,  8430.,  9588., 10746., 11904.,  7596.,  8664.,  9732., 10800.,  6978.,  7932.,  8886.,  9840.,  5808.,  6624.,  7440.,  8256.,  5142.,  5892.,  6642.,  7392.,  4692.,  5352.,  6012.,  6672.,  4020.,  4584.,  5148.,  5712.,  5022.,  5700.,  6378.,  7056.,  5808.,  6624.,  7440.,  8256.,  6090.,  6972.,  7854.,  8736.,  6924.,  7896.,  8868.,  9840.,  7542.,  8628.,  9714., 10800.,  8046.,  9204., 10362., 11520.,  7596.,  8664.,  9732., 10800.,  6594.,  7548.,  8502.,  9456.,  5808.,  6624.,  7440.,  8256.,  5526.,  6276.,  7026.,  7776.,  4692.,  5352.,  6012.,  6672.,  4530.,  5172.,  5814.,  6456.,  5327.,  6110.,  6893.,  7676.,  6712.,  7664.,  8616.,  9568.,  7517.,  8538.,  9559., 10580.,  7886.,  9004., 10122., 11240.,  9083., 10326., 11569., 12812.,  9527., 10854., 12181., 13508.,  8830., 10060., 11290., 12520.,  7929.,  9034., 10139., 11244.,  6840.,  7792.,  8744.,  9696.,  5835.,  6702.,  7569.,  8436.,  5410.,  6164.,  6918.,  7672.,  5360.,  6112.,  6864.,  7616.,  6696.,  7600.,  8504.,  9408.,  7744.,  8832.,  9920., 11008.,  8120.,  9296., 10472., 11648.,  9232., 10528., 11824., 13120., 10056., 11504., 12952., 14400., 10728., 12272., 13816., 15360., 10128., 11552., 12976., 14400.,  8792., 10064., 11336., 12608.,  7744.,  8832.,  9920., 11008.,  7368.,  8368.,  9368., 10368.,  6256.,  7136.,  8016.,  8896.,  5870.,  6700.,  7530.,  8360.,  6873.,  7882.,  8891.,  9900.,  8648.,  9872., 11096., 12320.,  9675., 10990., 12305., 13620., 10194., 11636., 13078., 14520., 11725., 13330., 14935., 16540., 12337., 14050., 15763., 17476., 11362., 12948., 14534., 16120., 10255., 11678., 13101., 14524.,  8776., 10000., 11224., 12448.,  7549.,  8666.,  9783., 10900.,  6974.,  7948.,  8922.,  9896.,  6700.,  7640.,  8580.,  9520.,  8370.,  9500., 10630., 11760.,  9680., 11040., 12400., 13760., 10150., 11620., 13090., 14560., 11540., 13160., 14780., 16400., 12570., 14380., 16190., 18000., 13410., 15340., 17270., 19200., 12660., 14440., 16220., 18000., 10990., 12580., 14170., 15760.,  9680., 11040., 12400., 13760.,  9210., 10460., 11710., 12960.,  7820.,  8920., 10020., 11120.,  7210.,  8228.,  9246., 10264.,  8419.,  9654., 10889., 12124., 10584., 12080., 13576., 15072., 11833., 13442., 15051., 16660., 12502., 14268., 16034., 17800., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13894., 15836., 17778., 19720., 12581., 14322., 16063., 17804., 10712., 12208., 13704., 15200.,  9263., 10630., 11997., 13364.,  8538.,  9732., 10926., 12120.,  7434.,  8484.,  9534., 10584.,  9235., 10486., 11737., 12988., 10584., 12080., 13576., 15072., 11241., 12866., 14491., 16116., 12726., 14524., 16322., 18120., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14118., 16092., 18066., 20040., 11989., 13746., 15503., 17260., 10712., 12208., 13704., 15200., 10079., 11462., 12845., 14228.,  8762.,  9988., 11214., 12440.,  7210.,  8228.,  9246., 10264.,  8419.,  9654., 10889., 12124., 10584., 12080., 13576., 15072., 11833., 13442., 15051., 16660., 12502., 14268., 16034., 17800., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13894., 15836., 17778., 19720., 12581., 14322., 16063., 17804., 10712., 12208., 13704., 15200.,  9263., 10630., 11997., 13364.,  8538.,  9732., 10926., 12120.,  7434.,  8484.,  9534., 10584.,  9235., 10486., 11737., 12988., 10584., 12080., 13576., 15072., 11241., 12866., 14491., 16116., 12726., 14524., 16322., 18120., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14118., 16092., 18066., 20040., 11989., 13746., 15503., 17260., 10712., 12208., 13704., 15200., 10079., 11462., 12845., 14228.,  8762.,  9988., 11214., 12440.,  6700.,  7640.,  8580.,  9520.,  7730.,  8860.,  9990., 11120.,  9680., 11040., 12400., 13760., 10790., 12260., 13730., 15200., 11540., 13160., 14780., 16400., 13210., 15020., 16830., 18640., 14050., 15980., 17910., 19840., 12660., 14440., 16220., 18000., 11630., 13220., 14810., 16400.,  9680., 11040., 12400., 13760.,  8570.,  9820., 11070., 12320.,  7820.,  8920., 10020., 11120.,  6094.,  6956.,  7818.,  8680.,  7561.,  8586.,  9611., 10636.,  8648.,  9872., 11096., 12320.,  9211., 10542., 11873., 13204., 10418., 11892., 13366., 14840., 11485., 13138., 14791., 16444., 12097., 13858., 15619., 17380., 11586., 13204., 14822., 16440.,  9791., 11230., 12669., 14108.,  8776., 10000., 11224., 12448.,  8237.,  9370., 10503., 11636.,  7198.,  8204.,  9210., 10216.,  5360.,  6112.,  6864.,  7616.,  6184.,  7088.,  7992.,  8896.,  7744.,  8832.,  9920., 11008.,  8632.,  9808., 10984., 12160.,  9232., 10528., 11824., 13120., 10568., 12016., 13464., 14912., 11240., 12784., 14328., 15872., 10128., 11552., 12976., 14400.,  9304., 10576., 11848., 13120.,  7744.,  8832.,  9920., 11008.,  6856.,  7856.,  8856.,  9856.,  6256.,  7136.,  8016.,  8896.,  4754.,  5428.,  6102.,  6776.,  5887.,  6686.,  7485.,  8284.,  6712.,  7664.,  8616.,  9568.,  7181.,  8218.,  9255., 10292.,  8110.,  9260., 10410., 11560.,  8971., 10262., 11553., 12844.,  9415., 10790., 12165., 13540.,  9054., 10316., 11578., 12840.,  7593.,  8714.,  9835., 10956.,  6840.,  7792.,  8744.,  9696.,  6395.,  7278.,  8161.,  9044.,  5634.,  6420.,  7206.,  7992.,  4020.,  4584.,  5148.,  5712.,  4638.,  5316.,  5994.,  6672.,  5808.,  6624.,  7440.,  8256.,  6474.,  7356.,  8238.,  9120.,  6924.,  7896.,  8868.,  9840.,  7926.,  9012., 10098., 11184.,  8430.,  9588., 10746., 11904.,  7596.,  8664.,  9732., 10800.,  6978.,  7932.,  8886.,  9840.,  5808.,  6624.,  7440.,  8256.,  5142.,  5892.,  6642.,  7392.,  4692.,  5352.,  6012.,  6672.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x12x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220., 14367., 16334., 18301., 20268., 15147., 17246., 19345., 21444., 13999., 16014., 18029., 20044., 14779., 16926., 19073., 21220.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x12x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x12x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x12x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x12x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x12x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x12x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x13x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2320., 2630., 2976., 3528., 4104., 4746., 5163., 5148., 4784., 4266., 3584., 2872., 2408., 2876., 3079., 3336., 3768., 4368., 5049., 5056., 5079., 4818., 4744., 4304., 3889., 3298., 3152., 3568., 4256., 4824., 5440., 5888., 5860., 5784., 5216., 4672., 4080., 3544., 3168., 4034., 4360., 4912., 5409., 6098., 6890., 6994., 6986., 6388., 5691., 5000., 4244., 3480., 4504., 5078., 5840., 6428., 7088., 7602., 7429., 7336., 6920., 6290., 5728., 4988., 4336., 4440., 5393., 6232., 7282., 8020., 8867., 8712., 8557., 7542., 6702., 5728., 4967., 4382., 4539., 5176., 5908., 6724., 7869., 8612., 8681., 8654., 8025., 7186., 6260., 5162., 4319., 4622., 5359., 6144., 6886., 7574., 8373., 8410., 8607., 7788., 7062., 6280., 5453., 4704., 4529., 5174., 5916., 6744., 7647., 8406., 8411., 8320., 7663., 6890., 6188., 5312., 4513., 4496., 5229., 5680., 6351., 6864., 7465., 7490., 7659., 7060., 6381., 5632., 4823., 4076., 3719., 4388., 5156., 5758., 6457., 6988., 6866., 6632., 6029., 5390., 4804., 4280., 3811., 3328., 3844., 4320., 5004., 5520., 6116., 5840., 5788., 5280., 4772., 3920., 3308., 2752., 3525., 3958., 4476., 4704., 5003., 5366., 5329., 5324., 4867., 4198., 3564., 2988., 2461., 2384., 2883., 3584., 4161., 4544., 4983., 4794., 4701., 4332., 3787., 3392., 3041., 2484., 3160., 3404., 3680., 3998., 4336., 4704., 4817., 4738., 4192., 3848., 3504., 3038., 2664., 2774., 3301., 3968., 4896., 5470., 6003., 5882., 5681., 5116., 4844., 4376., 3847., 3248., 3072., 3512., 4048., 4800., 5584., 6248., 6652., 6640., 6128., 5480., 4688., 3888., 3360., 3916., 4348., 4840., 5511., 6352., 7258., 7202., 7178., 6678., 6325., 5616., 4944., 4110., 3808., 4472., 5424., 6270., 7176., 7828., 7927., 7994., 7544., 6876., 6176., 5294., 4592., 4690., 5187., 5920., 6606., 7490., 8305., 8406., 8411., 7696., 6902., 6136., 5329., 4540., 4853., 5498., 6332., 6992., 7723., 8306., 8199., 8172., 7635., 6890., 6220., 5380., 4637., 4440., 5393., 6232., 7282., 8020., 8867., 8712., 8557., 7542., 6702., 5728., 4967., 4382., 4539., 5176., 5908., 6724., 7869., 8612., 8681., 8654., 8025., 7186., 6260., 5162., 4319., 4272., 5043., 5856., 6621., 7120., 7711., 7704., 7841., 7292., 6819., 6048., 5229., 4484., 3369., 3964., 4796., 5696., 6495., 7120., 7142., 7036., 6535., 5892., 5244., 4664., 4145., 2960., 3340., 3904., 4660., 5232., 5868., 6040., 6324., 5936., 5436., 4704., 4052., 3456., 2847., 3372., 4036., 4304., 4633., 5016., 4963., 5022., 4781., 4466., 3956., 3594., 3275., 2304., 2789., 3360., 3963., 4368., 4825., 4540., 4447., 4052., 3629., 3056., 2707., 2396., 2800., 3106., 3232., 3508., 4056., 4534., 4647., 4568., 4064., 3862., 3680., 3268., 2888., 2992., 3283., 3784., 4408., 5020., 5501., 5316., 5211., 4646., 4224., 3712., 3037., 2638., 4048., 4304., 4640., 5048., 5504., 6016., 6164., 6152., 5536., 4896., 4304., 3608., 3024., 4310., 4928., 5504., 6365., 6894., 7402., 7186., 6922., 6232., 5711., 5112., 4460., 3748., 4104., 4890., 5776., 6656., 7600., 8198., 8361., 8140., 7384., 6422., 5520., 4624., 4016., 4668., 5253., 5816., 6586., 7552., 8607., 8612., 8681., 7898., 7294., 6368., 5499., 4490., 4463., 5228., 6100., 6876., 7721., 8320., 8373., 8410., 7869., 7122., 6356., 5422., 4683., 4690., 5187., 5920., 6606., 7490., 8305., 8406., 8411., 7696., 6902., 6136., 5329., 4540., 4853., 5498., 6332., 6992., 7723., 8306., 8199., 8172., 7635., 6890., 6220., 5380., 4637., 4208., 5113., 5904., 6907., 7552., 8293., 8062., 7831., 6884., 6105., 5184., 4467., 3916., 3963., 4484., 5092., 5778., 6533., 7124., 7258., 7056., 6593., 5914., 5140., 4184., 3471., 3712., 4340., 4992., 5580., 5888., 6276., 6128., 6060., 5536., 5076., 4304., 3724., 3216., 2873., 3394., 4140., 4896., 5527., 5962., 5941., 5648., 5127., 4446., 3740., 3288., 2889., 2448., 2727., 3184., 3573., 4016., 4507., 4734., 4849., 4604., 4239., 3632., 3093., 2596.};
  const std::array<int, 4> in_shape = {{ 3, 14, 13, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x13x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {8867., 8712., 8557., 8612., 8681., 8654., 8373., 8410., 8607., 8406., 8411., 8320., 8305., 8406., 8411., 8306., 8199., 8172., 8867., 8712., 8557., 8612., 8681., 8654., 8607., 8612., 8681., 8320., 8373., 8410., 8305., 8406., 8411., 8306., 8199., 8172.};
  const std::array<int, 4> in_shape = {{ 3, 14, 13, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x13x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2336., 2624., 2719., 3052., 3136., 3520., 3495., 3936., 3832., 4320., 4247., 4788., 4535., 5094., 4487., 5048., 4244., 4752., 3747., 4212., 3184., 3600., 2695., 3056., 2500., 2816., 2783., 3112., 3043., 3422., 3356., 3792., 3836., 4336., 4357., 4912., 5177., 5794., 5098., 5728., 5067., 5694., 4567., 5140., 4288., 4816., 3748., 4224., 3345., 3762., 2901., 3268., 3120., 3520., 3580., 4032., 4320., 4832., 4684., 5264., 5152., 5792., 5628., 6336., 5676., 6392., 5644., 6352., 5328., 5968., 4716., 5296., 4192., 4704., 3564., 4016., 3104., 3504., 3887., 4356., 4408., 4944., 4892., 5504., 5433., 6114., 5901., 6644., 6614., 7428., 6547., 7364., 6528., 7332., 5843., 6568., 5145., 5798., 4612., 5184., 4214., 4712., 3457., 3888., 4072., 4592., 4693., 5292., 5488., 6176., 6133., 6904., 6960., 7808., 7469., 8404., 7541., 8474., 7277., 8192., 6692., 7520., 5865., 6612., 5280., 5936., 4557., 5128., 3972., 4464., 4247., 4800., 5249., 5890., 5868., 6608., 6642., 7476., 7341., 8264., 8183., 9206., 8232., 9264., 8297., 9322., 7527., 8460., 6798., 7644., 5876., 6624., 5087., 5742., 4405., 4972., 4643., 5206., 5206., 5856., 5852., 6600., 6447., 7288., 7481., 8410., 8100., 9128., 8101., 9122., 7910., 8924., 7415., 8338., 6703., 7540., 6100., 6840., 5116., 5764., 4445., 5006., 4495., 5068., 5451., 6110., 6188., 6944., 6924., 7772., 7333., 8268., 8049., 9082., 7986., 9012., 8243., 9262., 7383., 8312., 6672., 7500., 5812., 6544., 5081., 5722., 4357., 4912., 4523., 5090., 5216., 5884., 6108., 6872., 6793., 7648., 7665., 8606., 8286., 9324., 8415., 9446., 8096., 9120., 7319., 8254., 6529., 7364., 6052., 6792., 5190., 5840., 4397., 4946., 3896., 4400., 4731., 5322., 5312., 5984., 6003., 6750., 6512., 7344., 7203., 8130., 7159., 8084., 7403., 8326., 6732., 7576., 6167., 6922., 5328., 6000., 4587., 5182., 3932., 4440., 3715., 4174., 4209., 4744., 4748., 5352., 5186., 5852., 5905., 6642., 6503., 7320., 6528., 7332., 6313., 7120., 5723., 6458., 5006., 5660., 4452., 5032., 3967., 4480., 3585., 4022., 3472., 3904., 4020., 4520., 4400., 4960., 4980., 5592., 5280., 5952., 5924., 6664., 5524., 6240., 5556., 6264., 5136., 5776., 4868., 5432., 4176., 4672., 3588., 4024., 2880., 3248., 3123., 3514., 3654., 4108., 4316., 4824., 4343., 4896., 4537., 5142., 5012., 5676., 5133., 5778., 5046., 5688., 4631., 5206., 3895., 4396., 3444., 3880., 3036., 3416., 2541., 2858., 2464., 2784., 2841., 3222., 3376., 3808., 3865., 4338., 4200., 4720., 4753., 5326., 4389., 4948., 4201., 4762., 3820., 4328., 3381., 3830., 3136., 3536., 2953., 3298., 2204., 2488., 2680., 2992., 2991., 3352., 3328., 3744., 3695., 4172., 4192., 4720., 4551., 5120., 4759., 5330., 4583., 5156., 4012., 4528., 3547., 4016., 3184., 3600., 2807., 3164., 2668., 2976., 2775., 3132., 3225., 3642., 3804., 4288., 4626., 5184., 5117., 5740., 5519., 6198., 5440., 6132., 5473., 6162., 4919., 5544., 4702., 5272., 4148., 4656., 3655., 4094., 3077., 3456., 3072., 3456., 3628., 4080., 4272., 4800., 4860., 5472., 5424., 6112., 5948., 6704., 6332., 7112., 6412., 7200., 6080., 6800., 5292., 5952., 4496., 5088., 3836., 4352., 3472., 3920., 3567., 3992., 4006., 4504., 4492., 5072., 5135., 5806., 5917., 6672., 6980., 7812., 6833., 7684., 6766., 7620., 6139., 6924., 5735., 6458., 5124., 5776., 4708., 5280., 4041., 4540., 3856., 4352., 4533., 5104., 5488., 6144., 6061., 6812., 6792., 7632., 7357., 8280., 7445., 8382., 7485., 8420., 7212., 8064., 6433., 7208., 5792., 6480., 4845., 5452., 4124., 4656., 4575., 5140., 5303., 5958., 5996., 6752., 6744., 7596., 7413., 8356., 8237., 9266., 8286., 9324., 8415., 9446., 7447., 8384., 6524., 7372., 5828., 6576., 5269., 5922., 4405., 4968., 4347., 4906., 5052., 5700., 5932., 6680., 6661., 7504., 7569., 8502., 8154., 9188., 8299., 9342., 8108., 9144., 7511., 8454., 6701., 7556., 6164., 6920., 5250., 5912., 4493., 5066., 4247., 4800., 5249., 5890., 5868., 6608., 6642., 7476., 7341., 8264., 8183., 9206., 8232., 9264., 8297., 9322., 7527., 8460., 6798., 7644., 5876., 6624., 5087., 5742., 4405., 4972., 4643., 5206., 5206., 5856., 5852., 6600., 6447., 7288., 7481., 8410., 8100., 9128., 8101., 9122., 7910., 8924., 7415., 8338., 6703., 7540., 6100., 6840., 5116., 5764., 4445., 5006., 3888., 4400., 4931., 5526., 5744., 6432., 6547., 7322., 6808., 7664., 7355., 8302., 7247., 8192., 7427., 8370., 6724., 7592., 6279., 7062., 5472., 6160., 4787., 5386., 4100., 4616., 3555., 3986., 4023., 4536., 4700., 5304., 5392., 6080., 6081., 6846., 6733., 7584., 7030., 7884., 6815., 7672., 6195., 6990., 5588., 6312., 5140., 5784., 4517., 5088., 3913., 4402., 2832., 3200., 3332., 3768., 4000., 4512., 4740., 5320., 5264., 5920., 5940., 6680., 5892., 6640., 6068., 6824., 5648., 6352., 5252., 5896., 4512., 5088., 3972., 4488., 3472., 3920., 2635., 2958., 3068., 3448., 3628., 4072., 3853., 4352., 4321., 4882., 4890., 5520., 4963., 5590., 4988., 5628., 4759., 5354., 4325., 4868., 3828., 4312., 3458., 3892., 3149., 3526., 2328., 2624., 2657., 3002., 3056., 3456., 3465., 3910., 3808., 4304., 4457., 5010., 4157., 4696., 4225., 4766., 3972., 4472., 3797., 4250., 3328., 3728., 2913., 3270., 2324., 2632., 2704., 3008., 2943., 3300., 3056., 3456., 3319., 3768., 3848., 4352., 4391., 4940., 4599., 5150., 4423., 4976., 3972., 4464., 3475., 3916., 3200., 3600., 2791., 3144., 2516., 2816., 2895., 3280., 3455., 3894., 3948., 4432., 4568., 5104., 4917., 5512., 5349., 5994., 5158., 5800., 5127., 5766., 4615., 5180., 4300., 4800., 3684., 4128., 3021., 3402., 2453., 2780., 3776., 4224., 4284., 4800., 4768., 5344., 5068., 5712., 5536., 6240., 5900., 6656., 6060., 6808., 5900., 6640., 5248., 5904., 4524., 5104., 4000., 4512., 3516., 3952., 3168., 3536., 3903., 4396., 4420., 4992., 4956., 5600., 5765., 6490., 6477., 7276., 7138., 8004., 6943., 7812., 6924., 7780., 6067., 6832., 5477., 6158., 4804., 5408., 4242., 4760., 3537., 3976., 4040., 4560., 4821., 5428., 5680., 6368., 6261., 7040., 7008., 7872., 7501., 8444., 7717., 8674., 7693., 8648., 7204., 8064., 6233., 7004., 5408., 6096., 4509., 5104., 3956., 4464., 4631., 5192., 5405., 6058., 5804., 6544., 6398., 7236., 7165., 8096., 8243., 9262., 8100., 9128., 8101., 9122., 7223., 8148., 6650., 7484., 5940., 6688., 5323., 5974., 4501., 5060., 4419., 4990., 5234., 5896., 6236., 6984., 6875., 7720., 7689., 8626., 8096., 9120., 8049., 9082., 7986., 9012., 7607., 8538., 6763., 7604., 6100., 6840., 5064., 5708., 4285., 4838., 4575., 5140., 5303., 5958., 5996., 6752., 6744., 7596., 7413., 8356., 8237., 9266., 8286., 9324., 8415., 9446., 7447., 8384., 6524., 7372., 5828., 6576., 5269., 5922., 4405., 4968., 4347., 4906., 5052., 5700., 5932., 6680., 6661., 7504., 7569., 8502., 8154., 9188., 8299., 9342., 8108., 9144., 7511., 8454., 6701., 7556., 6164., 6920., 5250., 5912., 4493., 5066., 3944., 4464., 4875., 5474., 5424., 6112., 6131., 6902., 6720., 7568., 7443., 8378., 7399., 8332., 7371., 8286., 6524., 7352., 5943., 6690., 5152., 5808., 4475., 5046., 3884., 4376., 4163., 4662., 4621., 5192., 5148., 5800., 5614., 6340., 6257., 7050., 6723., 7592., 6748., 7604., 6373., 7200., 5883., 6626., 5338., 6004., 4868., 5448., 3979., 4480., 3361., 3790., 3520., 3968., 4228., 4744., 4944., 5536., 5636., 6296., 5776., 6496., 6196., 6984., 6036., 6816., 6052., 6808., 5408., 6096., 4980., 5592., 4144., 4672., 3636., 4088., 3088., 3472., 2931., 3298., 3314., 3748., 3900., 4408., 4451., 5024., 4985., 5614., 5472., 6164., 5609., 6298., 5218., 5888., 4727., 5342., 4211., 4764., 3812., 4296., 3400., 3824., 2973., 3330., 2352., 2656., 2745., 3102., 3296., 3712., 3657., 4122., 4040., 4560., 4561., 5142., 4501., 5084., 4489., 5058., 4220., 4744., 3941., 4414., 3280., 3696., 2777., 3146., 2268., 2584.};
  const std::array<int, 4> in_shape = {{ 3, 14, 13, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x13x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {8183., 9206., 8232., 9264., 8297., 9322., 8100., 9128., 8101., 9122., 7910., 8924., 8049., 9082., 7986., 9012., 8243., 9262., 8286., 9324., 8415., 9446., 8096., 9120., 8237., 9266., 8286., 9324., 8415., 9446., 8154., 9188., 8299., 9342., 8108., 9144., 8183., 9206., 8232., 9264., 8297., 9322., 8100., 9128., 8101., 9122., 7910., 8924., 8243., 9262., 8100., 9128., 8101., 9122., 8096., 9120., 8049., 9082., 7986., 9012., 8237., 9266., 8286., 9324., 8415., 9446., 8154., 9188., 8299., 9342., 8108., 9144.};
  const std::array<int, 4> in_shape = {{ 3, 14, 13, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x13x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2000.,  2288.,  2576.,  2864.,  2241.,  2574.,  2907.,  3240.,  2624.,  3008.,  3392.,  3776.,  2933.,  3374.,  3815.,  4256.,  3352.,  3840.,  4328.,  4816.,  3681.,  4222.,  4763.,  5304.,  3967.,  4526.,  5085.,  5644.,  3853.,  4414.,  4975.,  5536.,  3740.,  4248.,  4756.,  5264.,  3221.,  3686.,  4151.,  4616.,  2816.,  3232.,  3648.,  4064.,  2437.,  2798.,  3159.,  3520.,  2316.,  2632.,  2948.,  3264.,  2245.,  2574.,  2903.,  3232.,  2843.,  3222.,  3601.,  3980.,  3044.,  3480.,  3916.,  4352.,  3396.,  3896.,  4396.,  4896.,  3711.,  4266.,  4821.,  5376.,  4361.,  4978.,  5595.,  6212.,  4318.,  4948.,  5578.,  6208.,  4387.,  5014.,  5641.,  6268.,  3985.,  4558.,  5131.,  5704.,  3888.,  4416.,  4944.,  5472.,  3276.,  3752.,  4228.,  4704.,  2817.,  3234.,  3651.,  4068.,  2507.,  2874.,  3241.,  3608.,  2832.,  3232.,  3632.,  4032.,  3156.,  3608.,  4060.,  4512.,  3776.,  4288.,  4800.,  5312.,  4020.,  4600.,  5180.,  5760.,  4608.,  5248.,  5888.,  6528.,  4948.,  5656.,  6364.,  7072.,  5100.,  5816.,  6532.,  7248.,  4852.,  5560.,  6268.,  6976.,  4576.,  5216.,  5856.,  6496.,  4084.,  4664.,  5244.,  5824.,  3776.,  4288.,  4800.,  5312.,  3124.,  3576.,  4028.,  4480.,  2800.,  3200.,  3600.,  4000.,  3177.,  3646.,  4115.,  4584.,  3736.,  4272.,  4808.,  5344.,  4212.,  4824.,  5436.,  6048.,  4937.,  5618.,  6299.,  6980.,  5123.,  5866.,  6609.,  7352.,  5774.,  6588.,  7402.,  8216.,  5605.,  6422.,  7239.,  8056.,  5804.,  6608.,  7412.,  8216.,  5025.,  5750.,  6475.,  7200.,  4565.,  5218.,  5871.,  6524.,  3948.,  4520.,  5092.,  5664.,  3738.,  4236.,  4734.,  5232.,  3075.,  3506.,  3937.,  4368.,  3640.,  4160.,  4680.,  5200.,  4019.,  4618.,  5217.,  5816.,  4720.,  5408.,  6096.,  6784.,  5239.,  6010.,  6781.,  7552.,  6016.,  6864.,  7712.,  8560.,  6387.,  7322.,  8257.,  9192.,  6661.,  7594.,  8527.,  9460.,  6279.,  7194.,  8109.,  9024.,  5900.,  6728.,  7556.,  8384.,  5095.,  5842.,  6589.,  7336.,  4592.,  5248.,  5904.,  6560.,  3951.,  4522.,  5093.,  5664.,  3596.,  4088.,  4580.,  5072.,  3765.,  4318.,  4871.,  5424.,  4561.,  5202.,  5843.,  6484.,  5076.,  5816.,  6556.,  7296.,  5762.,  6596.,  7430.,  8264.,  6239.,  7162.,  8085.,  9008.,  7183.,  8206.,  9229., 10252.,  7080.,  8112.,  9144., 10176.,  7281.,  8306.,  9331., 10356.,  6489.,  7422.,  8355.,  9288.,  6046.,  6892.,  7738.,  8584.,  5084.,  5832.,  6580.,  7328.,  4495.,  5150.,  5805.,  6460.,  3891.,  4458.,  5025.,  5592.,  4083.,  4646.,  5209.,  5772.,  4546.,  5196.,  5846.,  6496.,  5356.,  6104.,  6852.,  7600.,  5669.,  6510.,  7351.,  8192.,  6593.,  7522.,  8451.,  9380.,  7076.,  8104.,  9132., 10160.,  7149.,  8170.,  9191., 10212.,  6838.,  7852.,  8866.,  9880.,  6611.,  7534.,  8457.,  9380.,  5913.,  6750.,  7587.,  8424.,  5348.,  6088.,  6828.,  7568.,  4336.,  4984.,  5632.,  6280.,  3977.,  4538.,  5099.,  5660.,  3825.,  4398.,  4971.,  5544.,  4595.,  5254.,  5913.,  6572.,  5316.,  6072.,  6828.,  7584.,  6152.,  7000.,  7848.,  8696.,  6371.,  7306.,  8241.,  9176.,  7289.,  8322.,  9355., 10388.,  6978.,  8004.,  9030., 10056.,  7307.,  8326.,  9345., 10364.,  6365.,  7294.,  8223.,  9152.,  5908.,  6736.,  7564.,  8392.,  5100.,  5832.,  6564.,  7296.,  4561.,  5202.,  5843.,  6484.,  3807.,  4362.,  4917.,  5472.,  3935.,  4502.,  5069.,  5636.,  4452.,  5120.,  5788.,  6456.,  5468.,  6232.,  6996.,  7760.,  5931.,  6786.,  7641.,  8496.,  6597.,  7538.,  8479.,  9420.,  7054.,  8092.,  9130., 10168.,  7383.,  8414.,  9445., 10476.,  7072.,  8096.,  9120., 10144.,  6567.,  7502.,  8437.,  9372.,  5663.,  6498.,  7333.,  8168.,  5380.,  6120.,  6860.,  7600.,  4546.,  5196.,  5846.,  6496.,  3893.,  4442.,  4991.,  5540.,  3400.,  3904.,  4408.,  4912.,  4055.,  4646.,  5237.,  5828.,  4512.,  5184.,  5856.,  6528.,  5307.,  6054.,  6801.,  7548.,  5712.,  6544.,  7376.,  8208.,  6487.,  7414.,  8341.,  9268.,  6305.,  7230.,  8155.,  9080.,  6443.,  7366.,  8289.,  9212.,  5740.,  6584.,  7428.,  8272.,  5275.,  6030.,  6785.,  7540.,  4544.,  5216.,  5888.,  6560.,  4163.,  4758.,  5353.,  5948.,  3468.,  3976.,  4484.,  4992.,  3307.,  3766.,  4225.,  4684.,  3723.,  4258.,  4793.,  5328.,  4252.,  4856.,  5460.,  6064.,  4458.,  5124.,  5790.,  6456.,  5217.,  5954.,  6691.,  7428.,  5597.,  6414.,  7231.,  8048.,  5660.,  6464.,  7268.,  8072.,  5483.,  6290.,  7097.,  7904.,  5239.,  5974.,  6709.,  7444.,  4494.,  5148.,  5802.,  6456.,  3940.,  4520.,  5100.,  5680.,  3373.,  3886.,  4399.,  4912.,  3037.,  3474.,  3911.,  4348.,  2992.,  3424.,  3856.,  4288.,  3668.,  4168.,  4668.,  5168.,  3888.,  4448.,  5008.,  5568.,  4388.,  5000.,  5612.,  6224.,  4576.,  5248.,  5920.,  6592.,  5316.,  6056.,  6796.,  7536.,  4860.,  5576.,  6292.,  7008.,  4996.,  5704.,  6412.,  7120.,  4448.,  5088.,  5728.,  6368.,  4212.,  4776.,  5340.,  5904.,  3504.,  4000.,  4496.,  4992.,  2996.,  3432.,  3868.,  4304.,  2512.,  2880.,  3248.,  3616.,  2623.,  3014.,  3405.,  3796.,  3014.,  3468.,  3922.,  4376.,  3804.,  4312.,  4820.,  5328.,  3829.,  4382.,  4935.,  5488.,  4197.,  4802.,  5407.,  6012.,  4496.,  5160.,  5824.,  6488.,  4677.,  5322.,  5967.,  6612.,  4426.,  5068.,  5710.,  6352.,  3999.,  4574.,  5149.,  5724.,  3433.,  3934.,  4435.,  4936.,  3284.,  3720.,  4156.,  4592.,  2684.,  3064.,  3444.,  3824.,  2221.,  2538.,  2855.,  3172.,  2128.,  2448.,  2768.,  3088.,  2549.,  2930.,  3311.,  3692.,  2928.,  3360.,  3792.,  4224.,  3433.,  3906.,  4379.,  4852.,  3544.,  4064.,  4584.,  5104.,  3973.,  4546.,  5119.,  5692.,  3771.,  4330.,  4889.,  5448.,  3905.,  4466.,  5027.,  5588.,  3404.,  3912.,  4420.,  4928.,  3081.,  3530.,  3979.,  4428.,  2736.,  3136.,  3536.,  3936.,  2505.,  2850.,  3195.,  3540.,  1916.,  2200.,  2484.,  2768.,  2120.,  2432.,  2744.,  3056.,  2437.,  2798.,  3159.,  3520.,  2976.,  3392.,  3808.,  4224.,  3265.,  3742.,  4219.,  4696.,  3712.,  4240.,  4768.,  5296.,  3909.,  4478.,  5047.,  5616.,  4051.,  4622.,  5193.,  5764.,  3937.,  4510.,  5083.,  5656.,  3716.,  4232.,  4748.,  5264.,  3297.,  3766.,  4235.,  4704.,  3072.,  3488.,  3904.,  4320.,  2537.,  2894.,  3251.,  3608.,  2308.,  2616.,  2924.,  3232.,  2393.,  2750.,  3107.,  3464.,  2817.,  3234.,  3651.,  4068.,  3252.,  3736.,  4220.,  4704.,  3894.,  4452.,  5010.,  5568.,  4267.,  4890.,  5513.,  6136.,  4727.,  5406.,  6085.,  6764.,  4684.,  5376.,  6068.,  6760.,  4881.,  5570.,  6259.,  6948.,  4253.,  4878.,  5503.,  6128.,  3906.,  4476.,  5046.,  5616.,  3404.,  3912.,  4420.,  4928.,  3159.,  3598.,  4037.,  4476.,  2623.,  3002.,  3381.,  3760.,  2752.,  3136.,  3520.,  3904.,  3124.,  3576.,  4028.,  4480.,  3664.,  4192.,  4720.,  5248.,  4212.,  4824.,  5436.,  6048.,  4848.,  5536.,  6224.,  6912.,  5156.,  5912.,  6668.,  7424.,  5452.,  6232.,  7012.,  7792.,  5412.,  6200.,  6988.,  7776.,  5232.,  5952.,  6672.,  7392.,  4516.,  5176.,  5836.,  6496.,  4048.,  4640.,  5232.,  5824.,  3476.,  3992.,  4508.,  5024.,  3232.,  3680.,  4128.,  4576.,  2965.,  3390.,  3815.,  4240.,  3738.,  4236.,  4734.,  5232.,  4084.,  4664.,  5244.,  5824.,  4607.,  5278.,  5949.,  6620.,  5175.,  5930.,  6685.,  7440.,  6040.,  6872.,  7704.,  8536.,  5951.,  6802.,  7653.,  8504.,  6038.,  6892.,  7746.,  8600.,  5493.,  6278.,  7063.,  7848.,  5323.,  6046.,  6769.,  7492.,  4508.,  5160.,  5812.,  6464.,  3980.,  4552.,  5124.,  5696.,  3471.,  3970.,  4469.,  4968.,  3424.,  3920.,  4416.,  4912.,  3951.,  4522.,  5093.,  5664.,  4752.,  5408.,  6064.,  6720.,  5147.,  5898.,  6649.,  7400.,  5912.,  6752.,  7592.,  8432.,  6431.,  7354.,  8277.,  9200.,  6721.,  7658.,  8595.,  9532.,  6419.,  7354.,  8289.,  9224.,  6116.,  6968.,  7820.,  8672.,  5467.,  6242.,  7017.,  7792.,  5072.,  5760.,  6448.,  7136.,  4203.,  4810.,  5417.,  6024.,  3796.,  4328.,  4860.,  5392.,  3801.,  4366.,  4931.,  5496.,  4495.,  5150.,  5805.,  6460.,  5188.,  5944.,  6700.,  7456.,  6108.,  6960.,  7812.,  8664.,  6459.,  7402.,  8345.,  9288.,  7157.,  8186.,  9215., 10244.,  7054.,  8092.,  9130., 10168.,  7383.,  8414.,  9445., 10476.,  6421.,  7358.,  8295.,  9232.,  5912.,  6760.,  7608.,  8456.,  5116.,  5864.,  6612.,  7360.,  4797.,  5450.,  6103.,  6756.,  3895.,  4458.,  5021.,  5584.,  3911.,  4470.,  5029.,  5588.,  4336.,  4984.,  5632.,  6280.,  5132.,  5880.,  6628.,  7376.,  5743.,  6586.,  7429.,  8272.,  6605.,  7538.,  8471.,  9404.,  7050.,  8084.,  9118., 10152.,  7395.,  8438.,  9481., 10524.,  7084.,  8120.,  9156., 10192.,  6623.,  7566.,  8509.,  9452.,  5795.,  6650.,  7505.,  8360.,  5332.,  6088.,  6844.,  7600.,  4526.,  5188.,  5850.,  6512.,  4061.,  4634.,  5207.,  5780.,  3765.,  4318.,  4871.,  5424.,  4561.,  5202.,  5843.,  6484.,  5076.,  5816.,  6556.,  7296.,  5762.,  6596.,  7430.,  8264.,  6239.,  7162.,  8085.,  9008.,  7183.,  8206.,  9229., 10252.,  7080.,  8112.,  9144., 10176.,  7281.,  8306.,  9331., 10356.,  6489.,  7422.,  8355.,  9288.,  6046.,  6892.,  7738.,  8584.,  5084.,  5832.,  6580.,  7328.,  4495.,  5150.,  5805.,  6460.,  3891.,  4458.,  5025.,  5592.,  4083.,  4646.,  5209.,  5772.,  4546.,  5196.,  5846.,  6496.,  5356.,  6104.,  6852.,  7600.,  5669.,  6510.,  7351.,  8192.,  6593.,  7522.,  8451.,  9380.,  7076.,  8104.,  9132., 10160.,  7149.,  8170.,  9191., 10212.,  6838.,  7852.,  8866.,  9880.,  6611.,  7534.,  8457.,  9380.,  5913.,  6750.,  7587.,  8424.,  5348.,  6088.,  6828.,  7568.,  4336.,  4984.,  5632.,  6280.,  3977.,  4538.,  5099.,  5660.,  3408.,  3920.,  4432.,  4944.,  4163.,  4758.,  5353.,  5948.,  4848.,  5536.,  6224.,  6912.,  5631.,  6406.,  7181.,  7956.,  5832.,  6688.,  7544.,  8400.,  6707.,  7654.,  8601.,  9548.,  6397.,  7342.,  8287.,  9232.,  6663.,  7606.,  8549.,  9492.,  5860.,  6728.,  7596.,  8464.,  5599.,  6382.,  7165.,  7948.,  4816.,  5504.,  6192.,  6880.,  4271.,  4870.,  5469.,  6068.,  3476.,  3992.,  4508.,  5024.,  2983.,  3414.,  3845.,  4276.,  3373.,  3886.,  4399.,  4912.,  4284.,  4888.,  5492.,  6096.,  4848.,  5536.,  6224.,  6912.,  5413.,  6178.,  6943.,  7708.,  5767.,  6618.,  7469.,  8320.,  6102.,  6956.,  7810.,  8664.,  5925.,  6782.,  7639.,  8496.,  5483.,  6278.,  7073.,  7868.,  4820.,  5544.,  6268.,  6992.,  4612.,  5256.,  5900.,  6544.,  3999.,  4570.,  5141.,  5712.,  3449.,  3938.,  4427.,  4916.,  2544.,  2912.,  3280.,  3648.,  2996.,  3432.,  3868.,  4304.,  3392.,  3904.,  4416.,  4928.,  4068.,  4648.,  5228.,  5808.,  4560.,  5216.,  5872.,  6528.,  5220.,  5960.,  6700.,  7440.,  5180.,  5928.,  6676.,  7424.,  5332.,  6088.,  6844.,  7600.,  4896.,  5600.,  6304.,  7008.,  4516.,  5160.,  5804.,  6448.,  3840.,  4416.,  4992.,  5568.,  3556.,  4072.,  4588.,  5104.,  3104.,  3552.,  4000.,  4448.,  2355.,  2678.,  3001.,  3324.,  2684.,  3064.,  3444.,  3824.,  3132.,  3576.,  4020.,  4464.,  3255.,  3754.,  4253.,  4752.,  3873.,  4434.,  4995.,  5556.,  4318.,  4948.,  5578.,  6208.,  4387.,  5014.,  5641.,  6268.,  4344.,  4984.,  5624.,  6264.,  4299.,  4894.,  5489.,  6084.,  3835.,  4378.,  4921.,  5464.,  3364.,  3848.,  4332.,  4816.,  2866.,  3300.,  3734.,  4168.,  2641.,  3018.,  3395.,  3772.,  1944.,  2240.,  2536.,  2832.,  2505.,  2850.,  3195.,  3540.,  2832.,  3232.,  3632.,  4032.,  3237.,  3682.,  4127.,  4572.,  3328.,  3824.,  4320.,  4816.,  3913.,  4466.,  5019.,  5572.,  3583.,  4122.,  4661.,  5200.,  3717.,  4258.,  4799.,  5340.,  3396.,  3896.,  4396.,  4896.,  3365.,  3818.,  4271.,  4724.,  2864.,  3264.,  3664.,  4064.,  2445.,  2802.,  3159.,  3516.,  2036.,  2344.,  2652.,  2960.,  2144.,  2448.,  2752.,  3056.,  2537.,  2894.,  3251.,  3608.,  2960.,  3360.,  3760.,  4160.,  3021.,  3470.,  3919.,  4368.,  3496.,  4000.,  4504.,  5008.,  3769.,  4318.,  4867.,  5416.,  3911.,  4462.,  5013.,  5564.,  3797.,  4350.,  4903.,  5456.,  3596.,  4088.,  4580.,  5072.,  3149.,  3590.,  4031.,  4472.,  2864.,  3264.,  3664.,  4064.,  2381.,  2734.,  3087.,  3440.,  2172.,  2472.,  2772.,  3072.,  2541.,  2926.,  3311.,  3696.,  3159.,  3598.,  4037.,  4476.,  3412.,  3896.,  4380.,  4864.,  3800.,  4336.,  4872.,  5408.,  4023.,  4618.,  5213.,  5808.,  4677.,  5322.,  5967.,  6612.,  4426.,  5068.,  5710.,  6352.,  4495.,  5134.,  5773.,  6412.,  3833.,  4398.,  4963.,  5528.,  3684.,  4184.,  4684.,  5184.,  3180.,  3624.,  4068.,  4512.,  2717.,  3098.,  3479.,  3860.,  2227.,  2554.,  2881.,  3208.,  3072.,  3520.,  3968.,  4416.,  3476.,  3992.,  4508.,  5024.,  4096.,  4672.,  5248.,  5824.,  4468.,  5112.,  5756.,  6400.,  5056.,  5760.,  6464.,  7168.,  5188.,  5944.,  6700.,  7456.,  5324.,  6072.,  6820.,  7568.,  5076.,  5816.,  6556.,  7296.,  4656.,  5312.,  5968.,  6624.,  3956.,  4536.,  5116.,  5696.,  3648.,  4160.,  4672.,  5184.,  3044.,  3480.,  3916.,  4352.,  2704.,  3072.,  3440.,  3808.,  3441.,  3934.,  4427.,  4920.,  3980.,  4552.,  5124.,  5696.,  4308.,  4952.,  5596.,  6240.,  5045.,  5770.,  6495.,  7220.,  5515.,  6314.,  7113.,  7912.,  6130.,  6996.,  7862.,  8728.,  5961.,  6830.,  7699.,  8568.,  6160.,  7016.,  7872.,  8728.,  5305.,  6070.,  6835.,  7600.,  4753.,  5434.,  6115.,  6796.,  4044.,  4648.,  5252.,  5856.,  3710.,  4228.,  4746.,  5264.,  3099.,  3538.,  3977.,  4416.,  3704.,  4224.,  4744.,  5264.,  4203.,  4810.,  5417.,  6024.,  4848.,  5536.,  6224.,  6912.,  5295.,  6074.,  6853.,  7632.,  6032.,  6896.,  7760.,  8624.,  6443.,  7386.,  8329.,  9272.,  6733.,  7690.,  8647.,  9604.,  6559.,  7514.,  8469.,  9424.,  6316.,  7176.,  8036.,  8896.,  5359.,  6130.,  6901.,  7672.,  4816.,  5504.,  6192.,  6880.,  4023.,  4618.,  5213.,  5808.,  3676.,  4184.,  4692.,  5200.,  3821.,  4382.,  4943.,  5504.,  4797.,  5450.,  6103.,  6756.,  5204.,  5944.,  6684.,  7424.,  5846.,  6684.,  7522.,  8360.,  6327.,  7258.,  8189.,  9120.,  7307.,  8326.,  9345., 10364.,  7076.,  8104.,  9132., 10160.,  7149.,  8170.,  9191., 10212.,  6337.,  7262.,  8187.,  9112.,  6082.,  6916.,  7750.,  8584.,  5212.,  5960.,  6708.,  7456.,  4587.,  5238.,  5889.,  6540.,  3835.,  4394.,  4953.,  5512.,  3947.,  4518.,  5089.,  5660.,  4526.,  5188.,  5850.,  6512.,  5356.,  6104.,  6852.,  7600.,  5817.,  6662.,  7507.,  8352.,  6681.,  7618.,  8555.,  9492.,  7072.,  8096.,  9120., 10144.,  7289.,  8322.,  9355., 10388.,  6978.,  8004.,  9030., 10056.,  6667.,  7598.,  8529.,  9460.,  5837.,  6678.,  7519.,  8360.,  5348.,  6088.,  6828.,  7568.,  4364.,  5008.,  5652.,  6296.,  3921.,  4474.,  5027.,  5580.,  3801.,  4366.,  4931.,  5496.,  4495.,  5150.,  5805.,  6460.,  5188.,  5944.,  6700.,  7456.,  6108.,  6960.,  7812.,  8664.,  6459.,  7402.,  8345.,  9288.,  7157.,  8186.,  9215., 10244.,  7054.,  8092.,  9130., 10168.,  7383.,  8414.,  9445., 10476.,  6421.,  7358.,  8295.,  9232.,  5912.,  6760.,  7608.,  8456.,  5116.,  5864.,  6612.,  7360.,  4797.,  5450.,  6103.,  6756.,  3895.,  4458.,  5021.,  5584.,  3911.,  4470.,  5029.,  5588.,  4336.,  4984.,  5632.,  6280.,  5132.,  5880.,  6628.,  7376.,  5743.,  6586.,  7429.,  8272.,  6605.,  7538.,  8471.,  9404.,  7050.,  8084.,  9118., 10152.,  7395.,  8438.,  9481., 10524.,  7084.,  8120.,  9156., 10192.,  6623.,  7566.,  8509.,  9452.,  5795.,  6650.,  7505.,  8360.,  5332.,  6088.,  6844.,  7600.,  4526.,  5188.,  5850.,  6512.,  4061.,  4634.,  5207.,  5780.,  3544.,  4064.,  4584.,  5104.,  4271.,  4870.,  5469.,  6068.,  4720.,  5408.,  6096.,  6784.,  5347.,  6118.,  6889.,  7660.,  5728.,  6576.,  7424.,  8272.,  6575.,  7510.,  8445.,  9380.,  6393.,  7326.,  8259.,  9192.,  6515.,  7430.,  8345.,  9260.,  5660.,  6488.,  7316.,  8144.,  5347.,  6094.,  6841.,  7588.,  4464.,  5120.,  5776.,  6432.,  3899.,  4470.,  5041.,  5612.,  3260.,  3752.,  4244.,  4736.,  3587.,  4086.,  4585.,  5084.,  3999.,  4570.,  5141.,  5712.,  4748.,  5400.,  6052.,  6704.,  4998.,  5724.,  6450.,  7176.,  5609.,  6402.,  7195.,  7988.,  5985.,  6854.,  7723.,  8592.,  6048.,  6904.,  7760.,  8616.,  5583.,  6410.,  7237.,  8064.,  5295.,  6038.,  6781.,  7524.,  4634.,  5300.,  5966.,  6632.,  4260.,  4840.,  5420.,  6000.,  3345.,  3846.,  4347.,  4848.,  2981.,  3410.,  3839.,  4268.,  3072.,  3520.,  3968.,  4416.,  3556.,  4072.,  4588.,  5104.,  4176.,  4768.,  5360.,  5952.,  4884.,  5544.,  6204.,  6864.,  5008.,  5728.,  6448.,  7168.,  5556.,  6344.,  7132.,  7920.,  5308.,  6088.,  6868.,  7648.,  5428.,  6184.,  6940.,  7696.,  4688.,  5376.,  6064.,  6752.,  4388.,  5000.,  5612.,  6224.,  3664.,  4192.,  4720.,  5248.,  3332.,  3784.,  4236.,  4688.,  2656.,  3040.,  3424.,  3808.,  2519.,  2886.,  3253.,  3620.,  2866.,  3300.,  3734.,  4168.,  3484.,  3992.,  4500.,  5008.,  3961.,  4534.,  5107.,  5680.,  4429.,  5058.,  5687.,  6316.,  4684.,  5376.,  6068.,  6760.,  4881.,  5570.,  6259.,  6948.,  4550.,  5220.,  5890.,  6560.,  4279.,  4894.,  5509.,  6124.,  3693.,  4246.,  4799.,  5352.,  3460.,  3944.,  4428.,  4912.,  2920.,  3344.,  3768.,  4192.,  2597.,  2954.,  3311.,  3668.,  2048.,  2352.,  2656.,  2960.,  2445.,  2802.,  3159.,  3516.,  2784.,  3200.,  3616.,  4032.,  3153.,  3618.,  4083.,  4548.,  3544.,  4064.,  4584.,  5104.,  4093.,  4674.,  5255.,  5836.,  3971.,  4554.,  5137.,  5720.,  3961.,  4530.,  5099.,  5668.,  3548.,  4072.,  4596.,  5120.,  3345.,  3818.,  4291.,  4764.,  2752.,  3168.,  3584.,  4000.,  2449.,  2818.,  3187.,  3556.,  2076.,  2392.,  2708.,  3024.};
  const std::array<int, 4> in_shape = {{ 3, 14, 13, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x13x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 7183.,  8206.,  9229., 10252.,  7080.,  8112.,  9144., 10176.,  7281.,  8306.,  9331., 10356.,  7076.,  8104.,  9132., 10160.,  7149.,  8170.,  9191., 10212.,  6838.,  7852.,  8866.,  9880.,  7289.,  8322.,  9355., 10388.,  6978.,  8004.,  9030., 10056.,  7307.,  8326.,  9345., 10364.,  7054.,  8092.,  9130., 10168.,  7383.,  8414.,  9445., 10476.,  7072.,  8096.,  9120., 10144.,  7157.,  8186.,  9215., 10244.,  7054.,  8092.,  9130., 10168.,  7383.,  8414.,  9445., 10476.,  7050.,  8084.,  9118., 10152.,  7395.,  8438.,  9481., 10524.,  7084.,  8120.,  9156., 10192.,  7183.,  8206.,  9229., 10252.,  7080.,  8112.,  9144., 10176.,  7281.,  8306.,  9331., 10356.,  7076.,  8104.,  9132., 10160.,  7149.,  8170.,  9191., 10212.,  6838.,  7852.,  8866.,  9880.,  7307.,  8326.,  9345., 10364.,  7076.,  8104.,  9132., 10160.,  7149.,  8170.,  9191., 10212.,  7072.,  8096.,  9120., 10144.,  7289.,  8322.,  9355., 10388.,  6978.,  8004.,  9030., 10056.,  7157.,  8186.,  9215., 10244.,  7054.,  8092.,  9130., 10168.,  7383.,  8414.,  9445., 10476.,  7050.,  8084.,  9118., 10152.,  7395.,  8438.,  9481., 10524.,  7084.,  8120.,  9156., 10192.};
  const std::array<int, 4> in_shape = {{ 3, 14, 13, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x13x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 5020.,  6046.,  7312.,  7922.,  8852.,  9270.,  9466.,  9278.,  8708.,  7866.,  7312.,  5830.,  5036.,  6298.,  7353.,  7880.,  8847.,  9686., 11365., 10979., 11361.,  9902.,  9235.,  7880.,  6869.,  5906.,  6800.,  7816.,  9408., 10488., 12016., 12904., 13064., 12520., 11760., 10360.,  9408.,  7944.,  7056.,  7870.,  9363., 10424., 11957., 12514., 14087., 13825., 14459., 13210., 12081., 10424.,  9335.,  7350.,  8660.,  9746., 11504., 12462., 14364., 15802., 16598., 15858., 14556., 12502., 11504., 10106.,  8900.,  8866., 11181., 12712., 14731., 16030., 17945., 17407., 17445., 15910., 14751., 12712., 11049.,  8986., 10230., 11299., 12616., 13581., 16090., 17175., 17421., 17139., 16194., 14081., 12616., 10687.,  9694.,  9226., 11353., 12712., 14751., 15782., 17445., 17035., 17841., 15566., 14371., 12712., 11285.,  9570.,  9326., 10831., 13000., 14321., 16178., 17139., 17945., 17407., 16170., 14149., 13000., 10731.,  9206.,  8972., 10814., 11440., 12738., 13604., 15494., 15426., 16142., 14148., 13242., 11440., 10198.,  8620.,  7522.,  8809., 10520., 11799., 13598., 14309., 14351., 13753., 12854., 11411., 10520.,  8797.,  7706.,  7120.,  8360.,  9152., 10456., 11184., 12808., 12520., 13064., 11696., 10712.,  9152.,  8104.,  6608.,  6182.,  6963.,  8296.,  8669.,  9418., 10471., 11189., 11075., 10290.,  8833.,  8296.,  7199.,  6110.,  4644.,  5778.,  6864.,  8126.,  8668.,  9770.,  9406.,  9170.,  8300.,  7686.,  6864.,  6090.,  4756.,  5468.,  5974.,  6800.,  7450.,  8900.,  9566.,  9714.,  9270.,  8580.,  7586.,  6800.,  5870.,  5468.,  5922.,  7149.,  8136.,  9547., 10302., 11369., 10983., 11365.,  9974.,  9391.,  8136.,  7289.,  6314.,  7056.,  7944.,  9408., 10360., 11760., 12520., 13064., 12904., 12016., 10488.,  9408.,  7816.,  6800.,  7942.,  9263., 10168., 11609., 12922., 15155., 14141., 14087., 12466., 11589., 10168.,  9299.,  8030.,  8708., 10010., 12016., 13110., 14988., 16002., 16158., 15802., 15372., 13406., 12016., 10114.,  8884.,  9530., 11137., 12456., 14375., 15430., 17421., 17139., 17945., 16046., 14427., 12456., 11181.,  9090.,  9614., 10935., 13000., 13817., 15634., 17035., 17841., 17175., 15818., 13821., 13000., 11331.,  9862.,  8866., 11181., 12712., 14731., 16030., 17945., 17407., 17445., 15910., 14751., 12712., 11049.,  8986., 10230., 11299., 12616., 13581., 16090., 17175., 17421., 17139., 16194., 14081., 12616., 10687.,  9694.,  8076., 10294., 11696., 13738., 14436., 15678., 14986., 15494., 13828., 13218., 11696., 10382.,  8748.,  7738.,  8757., 10392., 11547., 12998., 13889., 14651., 14309., 13198., 11527., 10392.,  8537.,  7298.,  7120.,  8360.,  9152., 10456., 11184., 12808., 12392., 12808., 11184., 10456.,  9152.,  8360.,  7120.,  5758.,  6823.,  8424.,  9177., 10290., 10683., 10457., 10471., 10250.,  9309.,  8424.,  6995.,  6102.,  5220.,  5930.,  6608.,  7558.,  8268.,  9714.,  9238.,  9770.,  8684.,  7822.,  6608.,  5778.,  4868.,  5468.,  6142.,  6800.,  7314.,  8580.,  9542., 10122.,  9566.,  8900.,  7450.,  6800.,  5974.,  5468.,  5866.,  7249.,  8136.,  9495., 10486., 11773., 11499., 11369., 10302.,  9547.,  8136.,  7149.,  5922.,  7312.,  8328.,  9408.,  9976., 11504., 12392., 12808., 12520., 11760., 10360.,  9408.,  7944.,  7056.,  7758.,  9163., 10168., 11725., 13042., 14831., 14569., 15155., 12922., 11609., 10168.,  9263.,  7942.,  8644., 10018., 12016., 13134., 14940., 15770., 16358., 16002., 14988., 13110., 12016., 10010.,  8708.,  9794., 11717., 12456., 13891., 15342., 17841., 17175., 17421., 15430., 14375., 12456., 11137.,  9530.,  9430., 11003., 13128., 14421., 16570., 17407., 17445., 17035., 16466., 14457., 13128., 10967.,  9534.,  9530., 11137., 12456., 14375., 15430., 17421., 17139., 17945., 16046., 14427., 12456., 11181.,  9090.,  9614., 10935., 13000., 13817., 15634., 17035., 17841., 17175., 15818., 13821., 13000., 11331.,  9862.,  7644.,  9710., 11440., 13602., 14820., 16550., 15858., 15678., 13908., 12890., 11440., 10294.,  8300.,  8514.,  9457., 10520., 11119., 12718., 13709., 14087., 13889., 13286., 11643., 10520.,  8789.,  7658.,  6608.,  8104.,  9152., 10712., 11696., 13064., 12520., 12808., 11184., 10456.,  9152.,  8360.,  7120.,  5590.,  6683.,  8296.,  9173., 10394., 10879., 11165., 10683.,  9890.,  8905.,  8296.,  7095.,  6078.,  5348.,  6386.,  6864.,  7262.,  7948.,  9338.,  9358.,  9714.,  8492.,  8038.,  6864.,  6042.,  4996.};
  const std::array<int, 4> in_shape = {{ 3, 14, 13, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x13x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17945., 17407., 17445., 17175., 17421., 17139., 17445., 17035., 17841., 17139., 17945., 17407., 17421., 17139., 17945., 17035., 17841., 17175., 17945., 17407., 17445., 17175., 17421., 17139., 17841., 17175., 17421., 17407., 17445., 17035., 17421., 17139., 17945., 17035., 17841., 17175.};
  const std::array<int, 4> in_shape = {{ 3, 14, 13, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x13x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4812.,  5416.,  5394.,  6108.,  6768.,  7584.,  7046.,  7956.,  8036.,  9032.,  8554.,  9660.,  9386., 10500.,  8938., 10060.,  8628.,  9640.,  7190.,  8100.,  6768.,  7584.,  5522.,  6220.,  4892.,  5480.,  5402.,  6100.,  6919.,  7746.,  7448.,  8400.,  8685.,  9758.,  9158., 10348., 10803., 12106., 10043., 11334., 10307., 11586.,  9102., 10268.,  8965., 10022.,  7448.,  8400.,  6647.,  7466.,  5378.,  6068.,  6768.,  7584.,  7576.,  8528.,  9024., 10112.,  9448., 10672., 11280., 12640., 11832., 13328., 12408., 13904., 11576., 13072., 11280., 12640.,  9704., 10928.,  9024., 10112.,  7320.,  8272.,  6768.,  7584.,  6974.,  7868.,  8709.,  9766.,  9576., 10800., 11415., 12778., 11762., 13268., 13561., 15214., 12897., 14562., 14025., 15702., 12122., 13652., 11343., 12722.,  9576., 10800.,  9013., 10078.,  7238.,  8140.,  8036.,  9032.,  9022., 10196., 11280., 12640., 11898., 13420., 13964., 15656., 14502., 16372., 15590., 17452., 14630., 16484., 13916., 15592., 11914., 13436., 11280., 12640.,  9406., 10596.,  8500.,  9512.,  8626.,  9748., 10739., 12042., 11704., 13200., 13601., 15270., 14318., 16172., 17007., 19058., 16183., 18238., 17023., 19082., 14646., 16508., 14073., 15758., 11704., 13200., 10531., 11826.,  8666.,  9780.,  9490., 10620., 10267., 11574., 12280., 13776., 13001., 14698., 15758., 17636., 16215., 18286., 16479., 18522., 15655., 17702., 15542., 17396., 13441., 15122., 12280., 13776.,  9931., 11230.,  9562., 10684.,  8690.,  9828., 10691., 12002., 11704., 13200., 14001., 15694., 14446., 16316., 17023., 19082., 15943., 18006., 17295., 19362., 14582., 16460., 13705., 15382., 11704., 13200., 10739., 12042.,  8794.,  9924.,  9106., 10220.,  9963., 11278., 12536., 14032., 13337., 15026., 15054., 16916., 15655., 17702., 17007., 19058., 16183., 18238., 15606., 17476., 12945., 14618., 12536., 14032., 10267., 11574.,  9114., 10220.,  7972.,  9000.,  9910., 11116., 10640., 12000., 12642., 14164., 13196., 14888., 15326., 17196., 14782., 16676., 15326., 17212., 13164., 14872., 12738., 14260., 10640., 12000.,  9782., 10972.,  7812.,  8824.,  7582.,  8500.,  8597.,  9682., 10024., 11248., 10583., 11950., 12690., 14204., 13129., 14794., 13713., 15390., 13017., 14706., 12714., 14252., 10815., 12198., 10024., 11248.,  8005.,  9066.,  7318.,  8212.,  6384.,  7200.,  7896.,  8848.,  8512.,  9600., 10152., 11376., 10640., 12000., 12408., 13904., 11576., 13072., 12408., 13904., 10640., 12000., 10152., 11376.,  8512.,  9600.,  7896.,  8848.,  6384.,  7200.,  5690.,  6412.,  6303.,  7142.,  8024.,  8976.,  8261.,  9322.,  9318., 10484.,  9995., 11294., 11091., 12410., 10523., 11862.,  9870., 11076.,  8317.,  9394.,  8024.,  8976.,  6543.,  7374.,  5762.,  6476.,  4684.,  5288.,  5802.,  6516.,  6384.,  7200.,  7630.,  8540.,  7652.,  8648.,  8834.,  9940.,  8610.,  9724.,  9154., 10276.,  7812.,  8824.,  7598.,  8508.,  6384.,  7200.,  5738.,  6436.,  4460.,  5048.,  5068.,  5672.,  5522.,  6220.,  6768.,  7584.,  6982.,  7908.,  8356.,  9384.,  8746.,  9868.,  9002., 10100.,  8554.,  9660.,  8628.,  9640.,  7510.,  8436.,  6768.,  7584.,  5586.,  6300.,  5340.,  5960.,  5402.,  6116.,  6647.,  7466.,  7448.,  8400.,  9053., 10134.,  9350., 10556., 10787., 12114., 10027., 11342., 10803., 12106.,  9230., 10412.,  8757.,  9822.,  7448.,  8400.,  6951.,  7794.,  5762.,  6500.,  6768.,  7584.,  7320.,  8272.,  9024., 10112.,  9704., 10928., 11280., 12640., 11576., 13072., 12408., 13904., 11832., 13328., 11280., 12640.,  9448., 10672.,  9024., 10112.,  7576.,  8528.,  6768.,  7584.,  7102.,  8012.,  9013., 10078.,  9576., 10800., 11207., 12594., 12146., 13700., 14377., 16070., 13265., 14938., 13561., 15214., 11930., 13444., 11519., 12890.,  9576., 10800.,  8805.,  9878.,  7302.,  8220.,  8356.,  9384.,  9406., 10596., 11280., 12640., 11770., 13308., 14028., 15752., 14886., 16772., 15718., 17596., 14502., 16372., 14364., 16072., 12298., 13836., 11280., 12640.,  9278., 10484.,  8692.,  9736.,  8562.,  9668., 10531., 11826., 11704., 13200., 14033., 15710., 14510., 16380., 16479., 18522., 15655., 17702., 17007., 19058., 14774., 16652., 14057., 15750., 11704., 13200., 11027., 12346.,  8858.,  9988.,  8914., 10028.,  9931., 11230., 12536., 14032., 13113., 14786., 15246., 17108., 15943., 18006., 17295., 19362., 16215., 18286., 15158., 17028., 13041., 14730., 12536., 14032., 10427., 11750.,  9370., 10508.,  8626.,  9748., 10739., 12042., 11704., 13200., 13601., 15270., 14318., 16172., 17007., 19058., 16183., 18238., 17023., 19082., 14646., 16508., 14073., 15758., 11704., 13200., 10531., 11826.,  8666.,  9780.,  9490., 10620., 10267., 11574., 12280., 13776., 13001., 14698., 15758., 17636., 16215., 18286., 16479., 18522., 15655., 17702., 15542., 17396., 13441., 15122., 12280., 13776.,  9931., 11230.,  9562., 10684.,  7844.,  8872.,  9782., 10972., 10640., 12000., 12706., 14244., 13068., 14760., 15454., 17308., 14206., 16052., 15326., 17196., 13164., 14872., 12674., 14212., 10640., 12000.,  9526., 10700.,  7812.,  8824.,  7390.,  8292.,  8005.,  9066., 10280., 11504., 11079., 12470., 12498., 14028., 12793., 14466., 13825., 15478., 13129., 14794., 12394., 13916., 10543., 11918., 10280., 11504.,  8373.,  9442.,  7254.,  8164.,  6384.,  7200.,  7896.,  8848.,  8512.,  9600., 10152., 11376., 10640., 12000., 12408., 13904., 11832., 13328., 12408., 13904., 10640., 12000., 10152., 11376.,  8512.,  9600.,  7896.,  8848.,  6384.,  7200.,  5882.,  6588.,  6543.,  7374.,  7768.,  8720.,  8117.,  9186.,  9766., 10948., 10043., 11334., 10307., 11586.,  9995., 11294., 10062., 11252.,  8621.,  9706.,  7768.,  8720.,  6271.,  7094.,  5890.,  6588.,  4556.,  5160.,  5738.,  6436.,  6384.,  7200.,  7758.,  8684.,  7972.,  9000.,  9218., 10340.,  8290.,  9388.,  8834.,  9940.,  7812.,  8824.,  7726.,  8652.,  6384.,  7200.,  5738.,  6452.,  4780.,  5400.,  4940.,  5544.,  5586.,  6300.,  6768.,  7584.,  7110.,  8020.,  8484.,  9512.,  8810.,  9948.,  9386., 10532.,  8746.,  9868.,  8500.,  9512.,  7126.,  8036.,  6768.,  7584.,  5778.,  6508.,  5468.,  6088.,  5530.,  6260.,  6951.,  7794.,  7448.,  8400.,  8461.,  9518.,  9222., 10412., 11091., 12410., 10523., 11862., 10787., 12114.,  9358., 10556.,  9061., 10134.,  7448.,  8400.,  6679.,  7514.,  5634.,  6356.,  6768.,  7584.,  7576.,  8528.,  9024., 10112.,  9448., 10672., 11280., 12640., 11832., 13328., 12408., 13904., 11576., 13072., 11280., 12640.,  9704., 10928.,  9024., 10112.,  7320.,  8272.,  6768.,  7584.,  7230.,  8156.,  8805.,  9878.,  9576., 10800., 11447., 12826., 12018., 13556., 13977., 15678., 13313., 15026., 14377., 16070., 12058., 13588., 11183., 12546.,  9576., 10800.,  9109., 10190.,  7366.,  8300.,  8484.,  9512.,  9278., 10484., 11280., 12640., 11962., 13484., 13836., 15528., 14438., 16308., 15590., 17484., 14886., 16772., 14492., 16200., 11850., 13372., 11280., 12640.,  9470., 10660.,  8628.,  9640.,  8690.,  9812., 11027., 12346., 11704., 13200., 13697., 15382., 14702., 16588., 17295., 19362., 16215., 18286., 16479., 18522., 14454., 16316., 14105., 15774., 11704., 13200., 10691., 12002.,  8730.,  9844.,  9170., 10300., 10427., 11750., 12280., 13776., 12905., 14586., 15438., 17316., 16183., 18238., 17023., 19082., 15943., 18006., 15798., 17684., 13409., 15106., 12280., 13776.,  9963., 11278.,  9242., 10364.,  8562.,  9668., 10531., 11826., 11704., 13200., 14033., 15710., 14510., 16380., 16479., 18522., 15655., 17702., 17007., 19058., 14774., 16652., 14057., 15750., 11704., 13200., 11027., 12346.,  8858.,  9988.,  8914., 10028.,  9931., 11230., 12536., 14032., 13113., 14786., 15246., 17108., 15943., 18006., 17295., 19362., 16215., 18286., 15158., 17028., 13041., 14730., 12536., 14032., 10427., 11750.,  9370., 10508.,  7652.,  8648.,  9526., 10700., 10640., 12000., 12578., 14100., 13068., 14760., 15390., 17260., 14654., 16516., 15454., 17308., 12972., 14648., 12546., 14068., 10640., 12000.,  9718., 10908.,  7684.,  8696.,  7774.,  8692.,  8373.,  9442., 10024., 11248., 10743., 12126., 12946., 14492., 13417., 15130., 13681., 15374., 12793., 14466., 12586., 14092., 10783., 12150., 10024., 11248.,  8229.,  9306.,  7702.,  8628.,  6384.,  7200.,  7896.,  8848.,  8512.,  9600., 10152., 11376., 10640., 12000., 12408., 13904., 11576., 13072., 12408., 13904., 10640., 12000., 10152., 11376.,  8512.,  9600.,  7896.,  8848.,  6384.,  7200.,  5562.,  6252.,  6271.,  7094.,  8024.,  8976.,  8485.,  9562.,  9702., 10900., 10027., 11342., 10803., 12106., 10043., 11334.,  9614., 10788.,  8221.,  9282.,  8024.,  8976.,  6575.,  7422.,  5954.,  6668.,  4556.,  5160.,  5738.,  6452.,  6384.,  7200.,  7438.,  8348.,  7972.,  9000.,  9474., 10612.,  8994., 10140.,  9218., 10340.,  7684.,  8696.,  7534.,  8444.,  6384.,  7200.,  5866.,  6596.,  4652.,  5272.};
  const std::array<int, 4> in_shape = {{ 3, 14, 13, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x13x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17007., 19058., 16183., 18238., 17023., 19082., 16215., 18286., 16479., 18522., 15655., 17702., 17023., 19082., 15943., 18006., 17295., 19362., 15655., 17702., 17007., 19058., 16183., 18238., 16479., 18522., 15655., 17702., 17007., 19058., 15943., 18006., 17295., 19362., 16215., 18286., 17007., 19058., 16183., 18238., 17023., 19082., 16215., 18286., 16479., 18522., 15655., 17702., 17295., 19362., 16215., 18286., 16479., 18522., 16183., 18238., 17023., 19082., 15943., 18006., 16479., 18522., 15655., 17702., 17007., 19058., 15943., 18006., 17295., 19362., 16215., 18286.};
  const std::array<int, 4> in_shape = {{ 3, 14, 13, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x13x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4556.,  5160.,  5764.,  6368.,  4714.,  5428.,  6142.,  6856.,  6192.,  7008.,  7824.,  8640.,  5982.,  6892.,  7802.,  8712.,  7604.,  8600.,  9596., 10592.,  7378.,  8484.,  9590., 10696.,  8458.,  9572., 10686., 11800.,  7490.,  8612.,  9734., 10856.,  7716.,  8728.,  9740., 10752.,  6110.,  7020.,  7930.,  8840.,  6192.,  7008.,  7824.,  8640.,  4602.,  5300.,  5998.,  6696.,  4444.,  5032.,  5620.,  6208.,  4666.,  5364.,  6062.,  6760.,  6227.,  7054.,  7881.,  8708.,  6328.,  7280.,  8232.,  9184.,  8089.,  9162., 10235., 11308.,  7878.,  9068., 10258., 11448.,  9839., 11142., 12445., 13748.,  8459.,  9750., 11041., 12332.,  9639., 10918., 12197., 13476.,  7742.,  8908., 10074., 11240.,  7913.,  8970., 10027., 11084.,  6328.,  7280.,  8232.,  9184.,  6203.,  7022.,  7841.,  8660.,  4578.,  5268.,  5958.,  6648.,  6192.,  7008.,  7824.,  8640.,  6328.,  7280.,  8232.,  9184.,  8256.,  9344., 10432., 11520.,  8136.,  9360., 10584., 11808., 10320., 11680., 13040., 14400.,  9944., 11440., 12936., 14432., 11352., 12848., 14344., 15840.,  9944., 11440., 12936., 14432., 10320., 11680., 13040., 14400.,  8136.,  9360., 10584., 11808.,  8256.,  9344., 10432., 11520.,  6328.,  7280.,  8232.,  9184.,  6192.,  7008.,  7824.,  8640.,  5934.,  6828.,  7722.,  8616.,  7913.,  8970., 10027., 11084.,  8136.,  9360., 10584., 11808., 10331., 11694., 13057., 14420., 10002., 11508., 13014., 14520., 12509., 14162., 15815., 17468., 11041., 12706., 14371., 16036., 12645., 14322., 15999., 17676., 10202., 11732., 13262., 14792., 10379., 11758., 13137., 14516.,  8136.,  9360., 10584., 11808.,  8001.,  9066., 10131., 11196.,  5958.,  6860.,  7762.,  8664.,  7604.,  8600.,  9596., 10592.,  7830.,  9004., 10178., 11352., 10320., 11680., 13040., 14400., 10050., 11572., 13094., 14616., 12812., 14504., 16196., 17888., 12398., 14268., 16138., 18008., 14134., 15996., 17858., 19720., 12286., 14140., 15994., 17848., 12700., 14376., 16052., 17728., 10178., 11700., 13222., 14744., 10320., 11680., 13040., 14400.,  7942.,  9132., 10322., 11512.,  7716.,  8728.,  9740., 10752.,  7426.,  8548.,  9670., 10792.,  9839., 11142., 12445., 13748.,  9944., 11440., 12936., 14432., 12685., 14354., 16023., 17692., 12350., 14204., 16058., 17912., 15515., 17566., 19617., 21668., 13607., 15662., 17717., 19772., 15539., 17598., 19657., 21716., 12438., 14300., 16162., 18024., 12605., 14290., 15975., 17660.,  9944., 11440., 12936., 14432.,  9687., 10982., 12277., 13572.,  7466.,  8580.,  9694., 10808.,  8634.,  9764., 10894., 12024.,  8507.,  9814., 11121., 12428., 11352., 12848., 14344., 15840., 11137., 12834., 14531., 16228., 14310., 16188., 18066., 19944., 13655., 15726., 17797., 19868., 15491., 17534., 19577., 21620., 13583., 15630., 17677., 19724., 14046., 15900., 17754., 19608., 11217., 12898., 14579., 16260., 11352., 12848., 14344., 15840.,  8611.,  9910., 11209., 12508.,  8418.,  9540., 10662., 11784.,  7538.,  8676.,  9814., 10952.,  9991., 11302., 12613., 13924.,  9944., 11440., 12936., 14432., 12821., 14514., 16207., 17900., 12334., 14204., 16074., 17944., 15539., 17598., 19657., 21716., 13631., 15694., 17757., 19820., 15563., 17630., 19697., 21764., 12422., 14300., 16178., 18056., 12645., 14322., 15999., 17676.,  9944., 11440., 12936., 14432.,  9839., 11142., 12445., 13748.,  7578.,  8708.,  9838., 10968.,  8394.,  9508., 10622., 11736.,  8659.,  9974., 11289., 12604., 11352., 12848., 14344., 15840., 11177., 12866., 14555., 16244., 14198., 16060., 17922., 19784., 13583., 15630., 17677., 19724., 15515., 17566., 19617., 21668., 13607., 15662., 17717., 19772., 14286., 16156., 18026., 19896., 11001., 12674., 14347., 16020., 11352., 12848., 14344., 15840.,  8507.,  9814., 11121., 12428.,  8434.,  9540., 10646., 11752.,  6932.,  7960.,  8988., 10016.,  9110., 10316., 11522., 12728.,  9040., 10400., 11760., 13120., 11490., 13012., 14534., 16056., 11276., 12968., 14660., 16352., 14094., 15964., 17834., 19704., 12598., 14492., 16386., 18280., 14334., 16220., 18106., 19992., 11260., 12968., 14676., 16384., 11618., 13140., 14662., 16184.,  9040., 10400., 11760., 13120.,  9126., 10316., 11506., 12696.,  6692.,  7704.,  8716.,  9728.,  6870.,  7788.,  8706.,  9624.,  7197.,  8282.,  9367., 10452.,  9288., 10512., 11736., 12960.,  9063., 10430., 11797., 13164., 11466., 12980., 14494., 16008., 11041., 12706., 14371., 16036., 12645., 14322., 15999., 17676., 11177., 12866., 14555., 16244., 11666., 13204., 14742., 16280.,  9111., 10494., 11877., 13260.,  9288., 10512., 11736., 12960.,  6933.,  7994.,  9055., 10116.,  6798.,  7692.,  8586.,  9480.,  5424.,  6240.,  7056.,  7872.,  7224.,  8176.,  9128., 10080.,  7232.,  8320.,  9408., 10496.,  9288., 10512., 11736., 12960.,  9040., 10400., 11760., 13120., 11352., 12848., 14344., 15840.,  9944., 11440., 12936., 14432., 11352., 12848., 14344., 15840.,  9040., 10400., 11760., 13120.,  9288., 10512., 11736., 12960.,  7232.,  8320.,  9408., 10496.,  7224.,  8176.,  9128., 10080.,  5424.,  6240.,  7056.,  7872.,  5474.,  6196.,  6918.,  7640.,  5495.,  6334.,  7173.,  8012.,  7224.,  8176.,  9128., 10080.,  6933.,  7994.,  9055., 10116.,  8862., 10028., 11194., 12360.,  8611.,  9910., 11209., 12508.,  9887., 11206., 12525., 13844.,  8859., 10198., 11537., 12876.,  9174., 10380., 11586., 12792.,  7109.,  8186.,  9263., 10340.,  7224.,  8176.,  9128., 10080.,  5471.,  6302.,  7133.,  7964.,  5386.,  6100.,  6814.,  7528.,  4044.,  4648.,  5252.,  5856.,  5450.,  6164.,  6878.,  7592.,  5424.,  6240.,  7056.,  7872.,  6974.,  7884.,  8794.,  9704.,  6580.,  7576.,  8572.,  9568.,  8370.,  9476., 10582., 11688.,  7402.,  8516.,  9630., 10744.,  8482.,  9604., 10726., 11848.,  6692.,  7704.,  8716.,  9728.,  6846.,  7756.,  8666.,  9576.,  5424.,  6240.,  7056.,  7872.,  5338.,  6036.,  6734.,  7432.,  3932.,  4520.,  5108.,  5696.,  4684.,  5288.,  5892.,  6496.,  4602.,  5300.,  5998.,  6696.,  6192.,  7008.,  7824.,  8640.,  6094.,  7020.,  7946.,  8872.,  7828.,  8856.,  9884., 10912.,  7362.,  8484.,  9606., 10728.,  8346.,  9444., 10542., 11640.,  7378.,  8484.,  9590., 10696.,  7588.,  8600.,  9612., 10624.,  6222.,  7148.,  8074.,  9000.,  6192.,  7008.,  7824.,  8640.,  4842.,  5556.,  6270.,  6984.,  4668.,  5288.,  5908.,  6528.,  4650.,  5364.,  6078.,  6792.,  6203.,  7022.,  7841.,  8660.,  6328.,  7280.,  8232.,  9184.,  8177.,  9258., 10339., 11420.,  7990.,  9196., 10402., 11608., 10039., 11366., 12693., 14020.,  8659.,  9974., 11289., 12604.,  9839., 11142., 12445., 13748.,  7854.,  9036., 10218., 11400.,  8001.,  9066., 10131., 11196.,  6328.,  7280.,  8232.,  9184.,  6275.,  7118.,  7961.,  8804.,  4914.,  5652.,  6390.,  7128.,  6192.,  7008.,  7824.,  8640.,  6328.,  7280.,  8232.,  9184.,  8256.,  9344., 10432., 11520.,  8136.,  9360., 10584., 11808., 10320., 11680., 13040., 14400.,  9944., 11440., 12936., 14432., 11352., 12848., 14344., 15840.,  9944., 11440., 12936., 14432., 10320., 11680., 13040., 14400.,  8136.,  9360., 10584., 11808.,  8256.,  9344., 10432., 11520.,  6328.,  7280.,  8232.,  9184.,  6192.,  7008.,  7824.,  8640.,  6046.,  6956.,  7866.,  8776.,  8001.,  9066., 10131., 11196.,  8136.,  9360., 10584., 11808., 10403., 11790., 13177., 14564., 10338., 11892., 13446., 15000., 12821., 14514., 16207., 17900., 11001., 12674., 14347., 16020., 12509., 14162., 15815., 17468., 10090., 11604., 13118., 14632., 10355., 11726., 13097., 14468.,  8136.,  9360., 10584., 11808.,  8089.,  9162., 10235., 11308.,  6070.,  6988.,  7906.,  8824.,  7828.,  8856.,  9884., 10912.,  7942.,  9132., 10322., 11512., 10320., 11680., 13040., 14400., 10290., 11828., 13366., 14904., 13036., 14760., 16484., 18208., 12510., 14396., 16282., 18168., 14246., 16124., 18002., 19880., 12398., 14268., 16138., 18008., 12924., 14632., 16340., 18048., 10162., 11700., 13238., 14776., 10320., 11680., 13040., 14400.,  8054.,  9260., 10466., 11672.,  7940.,  8984., 10028., 11072.,  7314.,  8420.,  9526., 10632.,  9687., 10982., 12277., 13572.,  9944., 11440., 12936., 14432., 12645., 14322., 15999., 17676., 12462., 14332., 16202., 18072., 15491., 17534., 19577., 21620., 13583., 15630., 17677., 19724., 15515., 17566., 19617., 21668., 12550., 14428., 16306., 18184., 12821., 14514., 16207., 17900.,  9944., 11440., 12936., 14432.,  9887., 11206., 12525., 13844.,  7450.,  8580.,  9710., 10840.,  8522.,  9636., 10750., 11864.,  8611.,  9910., 11209., 12508., 11352., 12848., 14344., 15840., 11001., 12674., 14347., 16020., 14070., 15932., 17794., 19656., 13631., 15694., 17757., 19820., 15563., 17630., 19697., 21764., 13655., 15726., 17797., 19868., 14158., 16028., 17898., 19768., 11177., 12866., 14555., 16244., 11352., 12848., 14344., 15840.,  8811., 10134., 11457., 12780.,  8658.,  9796., 10934., 12072.,  7426.,  8548.,  9670., 10792.,  9839., 11142., 12445., 13748.,  9944., 11440., 12936., 14432., 12685., 14354., 16023., 17692., 12350., 14204., 16058., 17912., 15515., 17566., 19617., 21668., 13607., 15662., 17717., 19772., 15539., 17598., 19657., 21716., 12438., 14300., 16162., 18024., 12605., 14290., 15975., 17660.,  9944., 11440., 12936., 14432.,  9687., 10982., 12277., 13572.,  7466.,  8580.,  9694., 10808.,  8634.,  9764., 10894., 12024.,  8507.,  9814., 11121., 12428., 11352., 12848., 14344., 15840., 11137., 12834., 14531., 16228., 14310., 16188., 18066., 19944., 13655., 15726., 17797., 19868., 15491., 17534., 19577., 21620., 13583., 15630., 17677., 19724., 14046., 15900., 17754., 19608., 11217., 12898., 14579., 16260., 11352., 12848., 14344., 15840.,  8611.,  9910., 11209., 12508.,  8418.,  9540., 10662., 11784.,  6804.,  7832.,  8860.,  9888.,  9126., 10316., 11506., 12696.,  9040., 10400., 11760., 13120., 11730., 13268., 14806., 16344., 11148., 12840., 14532., 16224., 14110., 15964., 17818., 19672., 12262., 14108., 15954., 17800., 14094., 15964., 17834., 19704., 11388., 13096., 14804., 16512., 11602., 13140., 14678., 16216.,  9040., 10400., 11760., 13120.,  8886., 10060., 11234., 12408.,  6820.,  7832.,  8844.,  9856.,  6886.,  7788.,  8690.,  9592.,  6933.,  7994.,  9055., 10116.,  9288., 10512., 11736., 12960.,  9135., 10526., 11917., 13308., 11706., 13236., 14766., 16296., 11001., 12674., 14347., 16020., 12509., 14162., 15815., 17468., 11041., 12706., 14371., 16036., 11554., 13076., 14598., 16120.,  9087., 10462., 11837., 13212.,  9288., 10512., 11736., 12960.,  7021.,  8090.,  9159., 10228.,  6910.,  7820.,  8730.,  9640.,  5424.,  6240.,  7056.,  7872.,  7224.,  8176.,  9128., 10080.,  7232.,  8320.,  9408., 10496.,  9288., 10512., 11736., 12960.,  9040., 10400., 11760., 13120., 11352., 12848., 14344., 15840.,  9944., 11440., 12936., 14432., 11352., 12848., 14344., 15840.,  9040., 10400., 11760., 13120.,  9288., 10512., 11736., 12960.,  7232.,  8320.,  9408., 10496.,  7224.,  8176.,  9128., 10080.,  5424.,  6240.,  7056.,  7872.,  5362.,  6068.,  6774.,  7480.,  5471.,  6302.,  7133.,  7964.,  7224.,  8176.,  9128., 10080.,  7021.,  8090.,  9159., 10228.,  8974., 10156., 11338., 12520.,  8459.,  9750., 11041., 12332.,  9639., 10918., 12197., 13476.,  8611.,  9910., 11209., 12508.,  8934., 10124., 11314., 12504.,  7197.,  8282.,  9367., 10452.,  7224.,  8176.,  9128., 10080.,  5447.,  6270.,  7093.,  7916.,  5274.,  5972.,  6670.,  7368.,  3916.,  4520.,  5124.,  5728.,  5338.,  6036.,  6734.,  7432.,  5424.,  6240.,  7056.,  7872.,  7086.,  8012.,  8938.,  9864.,  6804.,  7832.,  8860.,  9888.,  8610.,  9732., 10854., 11976.,  7290.,  8388.,  9486., 10584.,  8370.,  9476., 10582., 11688.,  6820.,  7832.,  8844.,  9856.,  6958.,  7884.,  8810.,  9736.,  5424.,  6240.,  7056.,  7872.,  5322.,  6036.,  6750.,  7464.,  4156.,  4776.,  5396.,  6016.,  4556.,  5160.,  5764.,  6368.,  4842.,  5556.,  6270.,  6984.,  6192.,  7008.,  7824.,  8640.,  6110.,  7020.,  7930.,  8840.,  7700.,  8728.,  9756., 10784.,  7602.,  8740.,  9878., 11016.,  8682.,  9828., 10974., 12120.,  7362.,  8484.,  9606., 10728.,  7716.,  8728.,  9740., 10752.,  5982.,  6892.,  7802.,  8712.,  6192.,  7008.,  7824.,  8640.,  4826.,  5556.,  6286.,  7016.,  4796.,  5416.,  6036.,  6656.,  4890.,  5620.,  6350.,  7080.,  6275.,  7118.,  7961.,  8804.,  6328.,  7280.,  8232.,  9184.,  7913.,  8970., 10027., 11084.,  8006.,  9196., 10386., 11576.,  9887., 11206., 12525., 13844.,  8859., 10198., 11537., 12876., 10039., 11366., 12693., 14020.,  7966.,  9164., 10362., 11560.,  8089.,  9162., 10235., 11308.,  6328.,  7280.,  8232.,  9184.,  6251.,  7086.,  7921.,  8756.,  4802.,  5524.,  6246.,  6968.,  6192.,  7008.,  7824.,  8640.,  6328.,  7280.,  8232.,  9184.,  8256.,  9344., 10432., 11520.,  8136.,  9360., 10584., 11808., 10320., 11680., 13040., 14400.,  9944., 11440., 12936., 14432., 11352., 12848., 14344., 15840.,  9944., 11440., 12936., 14432., 10320., 11680., 13040., 14400.,  8136.,  9360., 10584., 11808.,  8256.,  9344., 10432., 11520.,  6328.,  7280.,  8232.,  9184.,  6192.,  7008.,  7824.,  8640.,  6158.,  7084.,  8010.,  8936.,  8089.,  9162., 10235., 11308.,  8136.,  9360., 10584., 11808., 10379., 11758., 13137., 14516., 10226., 11764., 13302., 14840., 12781., 14482., 16183., 17884., 11313., 13026., 14739., 16452., 12821., 14514., 16207., 17900., 10074., 11604., 13134., 14664., 10331., 11694., 13057., 14420.,  8136.,  9360., 10584., 11808.,  8177.,  9258., 10339., 11420.,  6182.,  7116.,  8050.,  8984.,  7700.,  8728.,  9756., 10784.,  8054.,  9260., 10466., 11672., 10320., 11680., 13040., 14400., 10178., 11700., 13222., 14744., 12812., 14504., 16196., 17888., 12526., 14396., 16266., 18136., 14358., 16252., 18146., 20040., 12510., 14396., 16282., 18168., 13052., 14760., 16468., 18176., 10050., 11572., 13094., 14616., 10320., 11680., 13040., 14400.,  7814.,  9004., 10194., 11384.,  7716.,  8728.,  9740., 10752.,  7554.,  8676.,  9798., 10920.,  9887., 11206., 12525., 13844.,  9944., 11440., 12936., 14432., 12605., 14290., 15975., 17660., 12574., 14460., 16346., 18232., 15563., 17630., 19697., 21764., 13655., 15726., 17797., 19868., 15491., 17534., 19577., 21620., 12310., 14172., 16034., 17896., 12685., 14354., 16023., 17692.,  9944., 11440., 12936., 14432.,  9991., 11302., 12613., 13924.,  7338.,  8452.,  9566., 10680.,  8506.,  9636., 10766., 11896.,  8811., 10134., 11457., 12780., 11352., 12848., 14344., 15840., 11217., 12898., 14579., 16260., 14182., 16060., 17938., 19816., 13607., 15662., 17717., 19772., 15539., 17598., 19657., 21716., 13631., 15694., 17757., 19820., 14270., 16156., 18042., 19928., 11137., 12834., 14531., 16228., 11352., 12848., 14344., 15840.,  8659.,  9974., 11289., 12604.,  8546.,  9668., 10790., 11912.,  7314.,  8420.,  9526., 10632.,  9687., 10982., 12277., 13572.,  9944., 11440., 12936., 14432., 12645., 14322., 15999., 17676., 12462., 14332., 16202., 18072., 15491., 17534., 19577., 21620., 13583., 15630., 17677., 19724., 15515., 17566., 19617., 21668., 12550., 14428., 16306., 18184., 12821., 14514., 16207., 17900.,  9944., 11440., 12936., 14432.,  9887., 11206., 12525., 13844.,  7450.,  8580.,  9710., 10840.,  8522.,  9636., 10750., 11864.,  8611.,  9910., 11209., 12508., 11352., 12848., 14344., 15840., 11001., 12674., 14347., 16020., 14070., 15932., 17794., 19656., 13631., 15694., 17757., 19820., 15563., 17630., 19697., 21764., 13655., 15726., 17797., 19868., 14158., 16028., 17898., 19768., 11177., 12866., 14555., 16244., 11352., 12848., 14344., 15840.,  8811., 10134., 11457., 12780.,  8658.,  9796., 10934., 12072.,  6580.,  7576.,  8572.,  9568.,  8886., 10060., 11234., 12408.,  9040., 10400., 11760., 13120., 11618., 13140., 14662., 16184., 11276., 12968., 14660., 16352., 14222., 16092., 17962., 19832., 12374., 14236., 16098., 17960., 14110., 15964., 17818., 19672., 11164., 12840., 14516., 16192., 11490., 13012., 14534., 16056.,  9040., 10400., 11760., 13120.,  8998., 10188., 11378., 12568.,  6692.,  7704.,  8716.,  9728.,  6998.,  7916.,  8834.,  9752.,  7021.,  8090.,  9159., 10228.,  9288., 10512., 11736., 12960.,  9111., 10494., 11877., 13260., 11690., 13236., 14782., 16328., 11313., 13026., 14739., 16452., 12821., 14514., 16207., 17900., 11001., 12674., 14347., 16020., 11442., 12948., 14454., 15960.,  9063., 10430., 11797., 13164.,  9288., 10512., 11736., 12960.,  7109.,  8186.,  9263., 10340.,  7022.,  7948.,  8874.,  9800.,  5424.,  6240.,  7056.,  7872.,  7224.,  8176.,  9128., 10080.,  7232.,  8320.,  9408., 10496.,  9288., 10512., 11736., 12960.,  9040., 10400., 11760., 13120., 11352., 12848., 14344., 15840.,  9944., 11440., 12936., 14432., 11352., 12848., 14344., 15840.,  9040., 10400., 11760., 13120.,  9288., 10512., 11736., 12960.,  7232.,  8320.,  9408., 10496.,  7224.,  8176.,  9128., 10080.,  5424.,  6240.,  7056.,  7872.,  5250.,  5940.,  6630.,  7320.,  5447.,  6270.,  7093.,  7916.,  7224.,  8176.,  9128., 10080.,  7109.,  8186.,  9263., 10340.,  9086., 10284., 11482., 12680.,  8659.,  9974., 11289., 12604.,  9839., 11142., 12445., 13748.,  8459.,  9750., 11041., 12332.,  8950., 10124., 11298., 12472.,  6933.,  7994.,  9055., 10116.,  7224.,  8176.,  9128., 10080.,  5519.,  6366.,  7213.,  8060.,  5514.,  6228.,  6942.,  7656.,  4044.,  4648.,  5252.,  5856.,  5322.,  6036.,  6750.,  7464.,  5424.,  6240.,  7056.,  7872.,  6846.,  7756.,  8666.,  9576.,  6932.,  7960.,  8988., 10016.,  8594.,  9732., 10870., 12008.,  7626.,  8772.,  9918., 11064.,  8610.,  9732., 10854., 11976.,  6692.,  7704.,  8716.,  9728.,  6974.,  7884.,  8794.,  9704.,  5424.,  6240.,  7056.,  7872.,  5562.,  6292.,  7022.,  7752.,  4028.,  4648.,  5268.,  5888.};
  const std::array<int, 4> in_shape = {{ 3, 14, 13, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x13x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {15515., 17566., 19617., 21668., 13607., 15662., 17717., 19772., 15539., 17598., 19657., 21716., 13655., 15726., 17797., 19868., 15491., 17534., 19577., 21620., 13583., 15630., 17677., 19724., 15539., 17598., 19657., 21716., 13631., 15694., 17757., 19820., 15563., 17630., 19697., 21764., 13583., 15630., 17677., 19724., 15515., 17566., 19617., 21668., 13607., 15662., 17717., 19772., 15491., 17534., 19577., 21620., 13583., 15630., 17677., 19724., 15515., 17566., 19617., 21668., 13631., 15694., 17757., 19820., 15563., 17630., 19697., 21764., 13655., 15726., 17797., 19868., 15515., 17566., 19617., 21668., 13607., 15662., 17717., 19772., 15539., 17598., 19657., 21716., 13655., 15726., 17797., 19868., 15491., 17534., 19577., 21620., 13583., 15630., 17677., 19724., 15563., 17630., 19697., 21764., 13655., 15726., 17797., 19868., 15491., 17534., 19577., 21620., 13607., 15662., 17717., 19772., 15539., 17598., 19657., 21716., 13631., 15694., 17757., 19820., 15491., 17534., 19577., 21620., 13583., 15630., 17677., 19724., 15515., 17566., 19617., 21668., 13631., 15694., 17757., 19820., 15563., 17630., 19697., 21764., 13655., 15726., 17797., 19868.};
  const std::array<int, 4> in_shape = {{ 3, 14, 13, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x13x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3672.,  2940.,  4896.,  3780.,  6120.,  4620.,  6732.,  4620.,  6120.,  3780.,  4896.,  2940.,  3672.,  2940.,  4926.,  3920.,  6354.,  4900.,  7782.,  5390.,  7782.,  4900.,  6354.,  3920.,  4926.,  2940.,  4896.,  3920.,  6528.,  5040.,  8160.,  6160.,  8976.,  6160.,  8160.,  5040.,  6528.,  3920.,  4896.,  3780.,  6354.,  5040.,  8190.,  6300., 10026.,  6930., 10026.,  6300.,  8190.,  5040.,  6354.,  3780.,  6120.,  4900.,  8160.,  6300., 10200.,  7700., 11220.,  7700., 10200.,  6300.,  8160.,  4900.,  6120.,  4620.,  7782.,  6160., 10026.,  7700., 12270.,  8470., 12270.,  7700., 10026.,  6160.,  7782.,  4620.,  6732.,  5390.,  8976.,  6930., 11220.,  8470., 12270.,  8470., 11220.,  6930.,  8976.,  5390.,  6732.,  4620.,  7782.,  6160., 10026.,  7700., 12270.,  8470., 12270.,  7700., 10026.,  6160.,  7782.,  4620.,  6732.,  5390.,  8976.,  6930., 11220.,  8470., 12270.,  8470., 11220.,  6930.,  8976.,  5390.,  6732.,  4200.,  7140.,  5600.,  9180.,  7000., 11220.,  7700., 11220.,  7000.,  9180.,  5600.,  7140.,  4200.,  5508.,  4410.,  7344.,  5670.,  9180.,  6930., 10026.,  6930.,  9180.,  5670.,  7344.,  4410.,  5508.,  3360.,  5712.,  4480.,  7344.,  5600.,  8976.,  6160.,  8976.,  5600.,  7344.,  4480.,  5712.,  3360.,  4284.,  3430.,  5712.,  4410.,  7140.,  5390.,  7782.,  5390.,  7140.,  4410.,  5712.,  3430.,  4284.,  2520.,  4284.,  3360.,  5508.,  4200.,  6732.,  4620.,  6732.,  4200.,  5508.,  3360.,  4284.,  2520.,  3672.,  2940.,  4896.,  3780.,  6120.,  4620.,  6732.,  4620.,  6120.,  3780.,  4896.,  2940.,  3672.,  2940.,  4926.,  3920.,  6354.,  4900.,  7782.,  5390.,  7782.,  4900.,  6354.,  3920.,  4926.,  2940.,  4896.,  3920.,  6528.,  5040.,  8160.,  6160.,  8976.,  6160.,  8160.,  5040.,  6528.,  3920.,  4896.,  3780.,  6354.,  5040.,  8190.,  6300., 10026.,  6930., 10026.,  6300.,  8190.,  5040.,  6354.,  3780.,  6120.,  4900.,  8160.,  6300., 10200.,  7700., 11220.,  7700., 10200.,  6300.,  8160.,  4900.,  6120.,  4620.,  7782.,  6160., 10026.,  7700., 12270.,  8470., 12270.,  7700., 10026.,  6160.,  7782.,  4620.,  6732.,  5390.,  8976.,  6930., 11220.,  8470., 12270.,  8470., 11220.,  6930.,  8976.,  5390.,  6732.,  4620.,  7782.,  6160., 10026.,  7700., 12270.,  8470., 12270.,  7700., 10026.,  6160.,  7782.,  4620.,  6732.,  5390.,  8976.,  6930., 11220.,  8470., 12270.,  8470., 11220.,  6930.,  8976.,  5390.,  6732.,  4200.,  7140.,  5600.,  9180.,  7000., 11220.,  7700., 11220.,  7000.,  9180.,  5600.,  7140.,  4200.,  5508.,  4410.,  7344.,  5670.,  9180.,  6930., 10026.,  6930.,  9180.,  5670.,  7344.,  4410.,  5508.,  3360.,  5712.,  4480.,  7344.,  5600.,  8976.,  6160.,  8976.,  5600.,  7344.,  4480.,  5712.,  3360.,  4284.,  3430.,  5712.,  4410.,  7140.,  5390.,  7782.,  5390.,  7140.,  4410.,  5712.,  3430.,  4284.,  2520.,  4284.,  3360.,  5508.,  4200.,  6732.,  4620.,  6732.,  4200.,  5508.,  3360.,  4284.,  2520.,  3672.,  2940.,  4896.,  3780.,  6120.,  4620.,  6732.,  4620.,  6120.,  3780.,  4896.,  2940.,  3672.,  2940.,  4926.,  3920.,  6354.,  4900.,  7782.,  5390.,  7782.,  4900.,  6354.,  3920.,  4926.,  2940.,  4896.,  3920.,  6528.,  5040.,  8160.,  6160.,  8976.,  6160.,  8160.,  5040.,  6528.,  3920.,  4896.,  3780.,  6354.,  5040.,  8190.,  6300., 10026.,  6930., 10026.,  6300.,  8190.,  5040.,  6354.,  3780.,  6120.,  4900.,  8160.,  6300., 10200.,  7700., 11220.,  7700., 10200.,  6300.,  8160.,  4900.,  6120.,  4620.,  7782.,  6160., 10026.,  7700., 12270.,  8470., 12270.,  7700., 10026.,  6160.,  7782.,  4620.,  6732.,  5390.,  8976.,  6930., 11220.,  8470., 12270.,  8470., 11220.,  6930.,  8976.,  5390.,  6732.,  4620.,  7782.,  6160., 10026.,  7700., 12270.,  8470., 12270.,  7700., 10026.,  6160.,  7782.,  4620.,  6732.,  5390.,  8976.,  6930., 11220.,  8470., 12270.,  8470., 11220.,  6930.,  8976.,  5390.,  6732.,  4200.,  7140.,  5600.,  9180.,  7000., 11220.,  7700., 11220.,  7000.,  9180.,  5600.,  7140.,  4200.,  5508.,  4410.,  7344.,  5670.,  9180.,  6930., 10026.,  6930.,  9180.,  5670.,  7344.,  4410.,  5508.,  3360.,  5712.,  4480.,  7344.,  5600.,  8976.,  6160.,  8976.,  5600.,  7344.,  4480.,  5712.,  3360.,  4284.,  3430.,  5712.,  4410.,  7140.,  5390.,  7782.,  5390.,  7140.,  4410.,  5712.,  3430.,  4284.,  2520.,  4284.,  3360.,  5508.,  4200.,  6732.,  4620.,  6732.,  4200.,  5508.,  3360.,  4284.,  2520.};
  const std::array<int, 4> in_shape = {{ 3, 14, 13, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x13x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470., 12270.,  8470.};
  const std::array<int, 4> in_shape = {{ 3, 14, 13, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x13x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2952.,  3600.,  3444.,  4200.,  3936.,  4800.,  4428.,  5400.,  4920.,  6000.,  5412.,  6600.,  5412.,  6600.,  5412.,  6600.,  4920.,  6000.,  4428.,  5400.,  3936.,  4800.,  3444.,  4200.,  2952.,  3600.,  3444.,  4200.,  3986.,  4860.,  4592.,  5600.,  5134.,  6260.,  5740.,  7000.,  6282.,  7660.,  6346.,  7740.,  6282.,  7660.,  5740.,  7000.,  5134.,  6260.,  4592.,  5600.,  3986.,  4860.,  3444.,  4200.,  3936.,  4800.,  4592.,  5600.,  5248.,  6400.,  5904.,  7200.,  6560.,  8000.,  7216.,  8800.,  7216.,  8800.,  7216.,  8800.,  6560.,  8000.,  5904.,  7200.,  5248.,  6400.,  4592.,  5600.,  3936.,  4800.,  4428.,  5400.,  5134.,  6260.,  5904.,  7200.,  6610.,  8060.,  7380.,  9000.,  8086.,  9860.,  8150.,  9940.,  8086.,  9860.,  7380.,  9000.,  6610.,  8060.,  5904.,  7200.,  5134.,  6260.,  4428.,  5400.,  4920.,  6000.,  5740.,  7000.,  6560.,  8000.,  7380.,  9000.,  8200., 10000.,  9020., 11000.,  9020., 11000.,  9020., 11000.,  8200., 10000.,  7380.,  9000.,  6560.,  8000.,  5740.,  7000.,  4920.,  6000.,  5412.,  6600.,  6282.,  7660.,  7216.,  8800.,  8086.,  9860.,  9020., 11000.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9020., 11000.,  8086.,  9860.,  7216.,  8800.,  6282.,  7660.,  5412.,  6600.,  5412.,  6600.,  6346.,  7740.,  7216.,  8800.,  8150.,  9940.,  9020., 11000.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9020., 11000.,  8150.,  9940.,  7216.,  8800.,  6346.,  7740.,  5412.,  6600.,  5412.,  6600.,  6282.,  7660.,  7216.,  8800.,  8086.,  9860.,  9020., 11000.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9020., 11000.,  8086.,  9860.,  7216.,  8800.,  6282.,  7660.,  5412.,  6600.,  5412.,  6600.,  6346.,  7740.,  7216.,  8800.,  8150.,  9940.,  9020., 11000.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9020., 11000.,  8150.,  9940.,  7216.,  8800.,  6346.,  7740.,  5412.,  6600.,  4920.,  6000.,  5740.,  7000.,  6560.,  8000.,  7380.,  9000.,  8200., 10000.,  9020., 11000.,  9020., 11000.,  9020., 11000.,  8200., 10000.,  7380.,  9000.,  6560.,  8000.,  5740.,  7000.,  4920.,  6000.,  4428.,  5400.,  5198.,  6340.,  5904.,  7200.,  6674.,  8140.,  7380.,  9000.,  8150.,  9940.,  8086.,  9860.,  8150.,  9940.,  7380.,  9000.,  6674.,  8140.,  5904.,  7200.,  5198.,  6340.,  4428.,  5400.,  3936.,  4800.,  4592.,  5600.,  5248.,  6400.,  5904.,  7200.,  6560.,  8000.,  7216.,  8800.,  7216.,  8800.,  7216.,  8800.,  6560.,  8000.,  5904.,  7200.,  5248.,  6400.,  4592.,  5600.,  3936.,  4800.,  3444.,  4200.,  4050.,  4940.,  4592.,  5600.,  5198.,  6340.,  5740.,  7000.,  6346.,  7740.,  6282.,  7660.,  6346.,  7740.,  5740.,  7000.,  5198.,  6340.,  4592.,  5600.,  4050.,  4940.,  3444.,  4200.,  2952.,  3600.,  3444.,  4200.,  3936.,  4800.,  4428.,  5400.,  4920.,  6000.,  5412.,  6600.,  5412.,  6600.,  5412.,  6600.,  4920.,  6000.,  4428.,  5400.,  3936.,  4800.,  3444.,  4200.,  2952.,  3600.,  2952.,  3600.,  3444.,  4200.,  3936.,  4800.,  4428.,  5400.,  4920.,  6000.,  5412.,  6600.,  5412.,  6600.,  5412.,  6600.,  4920.,  6000.,  4428.,  5400.,  3936.,  4800.,  3444.,  4200.,  2952.,  3600.,  3444.,  4200.,  3986.,  4860.,  4592.,  5600.,  5134.,  6260.,  5740.,  7000.,  6282.,  7660.,  6346.,  7740.,  6282.,  7660.,  5740.,  7000.,  5134.,  6260.,  4592.,  5600.,  3986.,  4860.,  3444.,  4200.,  3936.,  4800.,  4592.,  5600.,  5248.,  6400.,  5904.,  7200.,  6560.,  8000.,  7216.,  8800.,  7216.,  8800.,  7216.,  8800.,  6560.,  8000.,  5904.,  7200.,  5248.,  6400.,  4592.,  5600.,  3936.,  4800.,  4428.,  5400.,  5134.,  6260.,  5904.,  7200.,  6610.,  8060.,  7380.,  9000.,  8086.,  9860.,  8150.,  9940.,  8086.,  9860.,  7380.,  9000.,  6610.,  8060.,  5904.,  7200.,  5134.,  6260.,  4428.,  5400.,  4920.,  6000.,  5740.,  7000.,  6560.,  8000.,  7380.,  9000.,  8200., 10000.,  9020., 11000.,  9020., 11000.,  9020., 11000.,  8200., 10000.,  7380.,  9000.,  6560.,  8000.,  5740.,  7000.,  4920.,  6000.,  5412.,  6600.,  6282.,  7660.,  7216.,  8800.,  8086.,  9860.,  9020., 11000.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9020., 11000.,  8086.,  9860.,  7216.,  8800.,  6282.,  7660.,  5412.,  6600.,  5412.,  6600.,  6346.,  7740.,  7216.,  8800.,  8150.,  9940.,  9020., 11000.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9020., 11000.,  8150.,  9940.,  7216.,  8800.,  6346.,  7740.,  5412.,  6600.,  5412.,  6600.,  6282.,  7660.,  7216.,  8800.,  8086.,  9860.,  9020., 11000.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9020., 11000.,  8086.,  9860.,  7216.,  8800.,  6282.,  7660.,  5412.,  6600.,  5412.,  6600.,  6346.,  7740.,  7216.,  8800.,  8150.,  9940.,  9020., 11000.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9020., 11000.,  8150.,  9940.,  7216.,  8800.,  6346.,  7740.,  5412.,  6600.,  4920.,  6000.,  5740.,  7000.,  6560.,  8000.,  7380.,  9000.,  8200., 10000.,  9020., 11000.,  9020., 11000.,  9020., 11000.,  8200., 10000.,  7380.,  9000.,  6560.,  8000.,  5740.,  7000.,  4920.,  6000.,  4428.,  5400.,  5198.,  6340.,  5904.,  7200.,  6674.,  8140.,  7380.,  9000.,  8150.,  9940.,  8086.,  9860.,  8150.,  9940.,  7380.,  9000.,  6674.,  8140.,  5904.,  7200.,  5198.,  6340.,  4428.,  5400.,  3936.,  4800.,  4592.,  5600.,  5248.,  6400.,  5904.,  7200.,  6560.,  8000.,  7216.,  8800.,  7216.,  8800.,  7216.,  8800.,  6560.,  8000.,  5904.,  7200.,  5248.,  6400.,  4592.,  5600.,  3936.,  4800.,  3444.,  4200.,  4050.,  4940.,  4592.,  5600.,  5198.,  6340.,  5740.,  7000.,  6346.,  7740.,  6282.,  7660.,  6346.,  7740.,  5740.,  7000.,  5198.,  6340.,  4592.,  5600.,  4050.,  4940.,  3444.,  4200.,  2952.,  3600.,  3444.,  4200.,  3936.,  4800.,  4428.,  5400.,  4920.,  6000.,  5412.,  6600.,  5412.,  6600.,  5412.,  6600.,  4920.,  6000.,  4428.,  5400.,  3936.,  4800.,  3444.,  4200.,  2952.,  3600.,  2952.,  3600.,  3444.,  4200.,  3936.,  4800.,  4428.,  5400.,  4920.,  6000.,  5412.,  6600.,  5412.,  6600.,  5412.,  6600.,  4920.,  6000.,  4428.,  5400.,  3936.,  4800.,  3444.,  4200.,  2952.,  3600.,  3444.,  4200.,  3986.,  4860.,  4592.,  5600.,  5134.,  6260.,  5740.,  7000.,  6282.,  7660.,  6346.,  7740.,  6282.,  7660.,  5740.,  7000.,  5134.,  6260.,  4592.,  5600.,  3986.,  4860.,  3444.,  4200.,  3936.,  4800.,  4592.,  5600.,  5248.,  6400.,  5904.,  7200.,  6560.,  8000.,  7216.,  8800.,  7216.,  8800.,  7216.,  8800.,  6560.,  8000.,  5904.,  7200.,  5248.,  6400.,  4592.,  5600.,  3936.,  4800.,  4428.,  5400.,  5134.,  6260.,  5904.,  7200.,  6610.,  8060.,  7380.,  9000.,  8086.,  9860.,  8150.,  9940.,  8086.,  9860.,  7380.,  9000.,  6610.,  8060.,  5904.,  7200.,  5134.,  6260.,  4428.,  5400.,  4920.,  6000.,  5740.,  7000.,  6560.,  8000.,  7380.,  9000.,  8200., 10000.,  9020., 11000.,  9020., 11000.,  9020., 11000.,  8200., 10000.,  7380.,  9000.,  6560.,  8000.,  5740.,  7000.,  4920.,  6000.,  5412.,  6600.,  6282.,  7660.,  7216.,  8800.,  8086.,  9860.,  9020., 11000.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9020., 11000.,  8086.,  9860.,  7216.,  8800.,  6282.,  7660.,  5412.,  6600.,  5412.,  6600.,  6346.,  7740.,  7216.,  8800.,  8150.,  9940.,  9020., 11000.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9020., 11000.,  8150.,  9940.,  7216.,  8800.,  6346.,  7740.,  5412.,  6600.,  5412.,  6600.,  6282.,  7660.,  7216.,  8800.,  8086.,  9860.,  9020., 11000.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9020., 11000.,  8086.,  9860.,  7216.,  8800.,  6282.,  7660.,  5412.,  6600.,  5412.,  6600.,  6346.,  7740.,  7216.,  8800.,  8150.,  9940.,  9020., 11000.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9020., 11000.,  8150.,  9940.,  7216.,  8800.,  6346.,  7740.,  5412.,  6600.,  4920.,  6000.,  5740.,  7000.,  6560.,  8000.,  7380.,  9000.,  8200., 10000.,  9020., 11000.,  9020., 11000.,  9020., 11000.,  8200., 10000.,  7380.,  9000.,  6560.,  8000.,  5740.,  7000.,  4920.,  6000.,  4428.,  5400.,  5198.,  6340.,  5904.,  7200.,  6674.,  8140.,  7380.,  9000.,  8150.,  9940.,  8086.,  9860.,  8150.,  9940.,  7380.,  9000.,  6674.,  8140.,  5904.,  7200.,  5198.,  6340.,  4428.,  5400.,  3936.,  4800.,  4592.,  5600.,  5248.,  6400.,  5904.,  7200.,  6560.,  8000.,  7216.,  8800.,  7216.,  8800.,  7216.,  8800.,  6560.,  8000.,  5904.,  7200.,  5248.,  6400.,  4592.,  5600.,  3936.,  4800.,  3444.,  4200.,  4050.,  4940.,  4592.,  5600.,  5198.,  6340.,  5740.,  7000.,  6346.,  7740.,  6282.,  7660.,  6346.,  7740.,  5740.,  7000.,  5198.,  6340.,  4592.,  5600.,  4050.,  4940.,  3444.,  4200.,  2952.,  3600.,  3444.,  4200.,  3936.,  4800.,  4428.,  5400.,  4920.,  6000.,  5412.,  6600.,  5412.,  6600.,  5412.,  6600.,  4920.,  6000.,  4428.,  5400.,  3936.,  4800.,  3444.,  4200.,  2952.,  3600.};
  const std::array<int, 4> in_shape = {{ 3, 14, 13, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x13x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.,  9890., 12060.,  9954., 12140.};
  const std::array<int, 4> in_shape = {{ 3, 14, 13, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x13x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2818.,  3692.,  4566.,  5440.,  3248.,  4256.,  5264.,  6272.,  3630.,  4756.,  5882.,  7008.,  4060.,  5320.,  6580.,  7840.,  4442.,  5820.,  7198.,  8576.,  4490.,  5884.,  7278.,  8672.,  4442.,  5820.,  7198.,  8576.,  4060.,  5320.,  6580.,  7840.,  3630.,  4756.,  5882.,  7008.,  3248.,  4256.,  5264.,  6272.,  2818.,  3692.,  4566.,  5440.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3248.,  4256.,  5264.,  6272.,  3712.,  4864.,  6016.,  7168.,  4176.,  5472.,  6768.,  8064.,  4640.,  6080.,  7520.,  8960.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  4640.,  6080.,  7520.,  8960.,  4176.,  5472.,  6768.,  8064.,  3712.,  4864.,  6016.,  7168.,  3248.,  4256.,  5264.,  6272.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3630.,  4756.,  5882.,  7008.,  4176.,  5472.,  6768.,  8064.,  4674.,  6124.,  7574.,  9024.,  5220.,  6840.,  8460., 10080.,  5718.,  7492.,  9266., 11040.,  5766.,  7556.,  9346., 11136.,  5718.,  7492.,  9266., 11040.,  5220.,  6840.,  8460., 10080.,  4674.,  6124.,  7574.,  9024.,  4176.,  5472.,  6768.,  8064.,  3630.,  4756.,  5882.,  7008.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  4060.,  5320.,  6580.,  7840.,  4640.,  6080.,  7520.,  8960.,  5220.,  6840.,  8460., 10080.,  5800.,  7600.,  9400., 11200.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  5800.,  7600.,  9400., 11200.,  5220.,  6840.,  8460., 10080.,  4640.,  6080.,  7520.,  8960.,  4060.,  5320.,  6580.,  7840.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4442.,  5820.,  7198.,  8576.,  5104.,  6688.,  8272.,  9856.,  5718.,  7492.,  9266., 11040.,  6380.,  8360., 10340., 12320.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  6380.,  8360., 10340., 12320.,  5718.,  7492.,  9266., 11040.,  5104.,  6688.,  8272.,  9856.,  4442.,  5820.,  7198.,  8576.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4490.,  5884.,  7278.,  8672.,  5104.,  6688.,  8272.,  9856.,  5766.,  7556.,  9346., 11136.,  6380.,  8360., 10340., 12320.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6380.,  8360., 10340., 12320.,  5766.,  7556.,  9346., 11136.,  5104.,  6688.,  8272.,  9856.,  4490.,  5884.,  7278.,  8672.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4442.,  5820.,  7198.,  8576.,  5104.,  6688.,  8272.,  9856.,  5718.,  7492.,  9266., 11040.,  6380.,  8360., 10340., 12320.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  6380.,  8360., 10340., 12320.,  5718.,  7492.,  9266., 11040.,  5104.,  6688.,  8272.,  9856.,  4442.,  5820.,  7198.,  8576.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4490.,  5884.,  7278.,  8672.,  5104.,  6688.,  8272.,  9856.,  5766.,  7556.,  9346., 11136.,  6380.,  8360., 10340., 12320.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6380.,  8360., 10340., 12320.,  5766.,  7556.,  9346., 11136.,  5104.,  6688.,  8272.,  9856.,  4490.,  5884.,  7278.,  8672.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  4060.,  5320.,  6580.,  7840.,  4640.,  6080.,  7520.,  8960.,  5220.,  6840.,  8460., 10080.,  5800.,  7600.,  9400., 11200.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  5800.,  7600.,  9400., 11200.,  5220.,  6840.,  8460., 10080.,  4640.,  6080.,  7520.,  8960.,  4060.,  5320.,  6580.,  7840.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3678.,  4820.,  5962.,  7104.,  4176.,  5472.,  6768.,  8064.,  4722.,  6188.,  7654.,  9120.,  5220.,  6840.,  8460., 10080.,  5766.,  7556.,  9346., 11136.,  5718.,  7492.,  9266., 11040.,  5766.,  7556.,  9346., 11136.,  5220.,  6840.,  8460., 10080.,  4722.,  6188.,  7654.,  9120.,  4176.,  5472.,  6768.,  8064.,  3678.,  4820.,  5962.,  7104.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3248.,  4256.,  5264.,  6272.,  3712.,  4864.,  6016.,  7168.,  4176.,  5472.,  6768.,  8064.,  4640.,  6080.,  7520.,  8960.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  4640.,  6080.,  7520.,  8960.,  4176.,  5472.,  6768.,  8064.,  3712.,  4864.,  6016.,  7168.,  3248.,  4256.,  5264.,  6272.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2866.,  3756.,  4646.,  5536.,  3248.,  4256.,  5264.,  6272.,  3678.,  4820.,  5962.,  7104.,  4060.,  5320.,  6580.,  7840.,  4490.,  5884.,  7278.,  8672.,  4442.,  5820.,  7198.,  8576.,  4490.,  5884.,  7278.,  8672.,  4060.,  5320.,  6580.,  7840.,  3678.,  4820.,  5962.,  7104.,  3248.,  4256.,  5264.,  6272.,  2866.,  3756.,  4646.,  5536.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2818.,  3692.,  4566.,  5440.,  3248.,  4256.,  5264.,  6272.,  3630.,  4756.,  5882.,  7008.,  4060.,  5320.,  6580.,  7840.,  4442.,  5820.,  7198.,  8576.,  4490.,  5884.,  7278.,  8672.,  4442.,  5820.,  7198.,  8576.,  4060.,  5320.,  6580.,  7840.,  3630.,  4756.,  5882.,  7008.,  3248.,  4256.,  5264.,  6272.,  2818.,  3692.,  4566.,  5440.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3248.,  4256.,  5264.,  6272.,  3712.,  4864.,  6016.,  7168.,  4176.,  5472.,  6768.,  8064.,  4640.,  6080.,  7520.,  8960.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  4640.,  6080.,  7520.,  8960.,  4176.,  5472.,  6768.,  8064.,  3712.,  4864.,  6016.,  7168.,  3248.,  4256.,  5264.,  6272.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3630.,  4756.,  5882.,  7008.,  4176.,  5472.,  6768.,  8064.,  4674.,  6124.,  7574.,  9024.,  5220.,  6840.,  8460., 10080.,  5718.,  7492.,  9266., 11040.,  5766.,  7556.,  9346., 11136.,  5718.,  7492.,  9266., 11040.,  5220.,  6840.,  8460., 10080.,  4674.,  6124.,  7574.,  9024.,  4176.,  5472.,  6768.,  8064.,  3630.,  4756.,  5882.,  7008.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  4060.,  5320.,  6580.,  7840.,  4640.,  6080.,  7520.,  8960.,  5220.,  6840.,  8460., 10080.,  5800.,  7600.,  9400., 11200.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  5800.,  7600.,  9400., 11200.,  5220.,  6840.,  8460., 10080.,  4640.,  6080.,  7520.,  8960.,  4060.,  5320.,  6580.,  7840.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4442.,  5820.,  7198.,  8576.,  5104.,  6688.,  8272.,  9856.,  5718.,  7492.,  9266., 11040.,  6380.,  8360., 10340., 12320.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  6380.,  8360., 10340., 12320.,  5718.,  7492.,  9266., 11040.,  5104.,  6688.,  8272.,  9856.,  4442.,  5820.,  7198.,  8576.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4490.,  5884.,  7278.,  8672.,  5104.,  6688.,  8272.,  9856.,  5766.,  7556.,  9346., 11136.,  6380.,  8360., 10340., 12320.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6380.,  8360., 10340., 12320.,  5766.,  7556.,  9346., 11136.,  5104.,  6688.,  8272.,  9856.,  4490.,  5884.,  7278.,  8672.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4442.,  5820.,  7198.,  8576.,  5104.,  6688.,  8272.,  9856.,  5718.,  7492.,  9266., 11040.,  6380.,  8360., 10340., 12320.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  6380.,  8360., 10340., 12320.,  5718.,  7492.,  9266., 11040.,  5104.,  6688.,  8272.,  9856.,  4442.,  5820.,  7198.,  8576.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4490.,  5884.,  7278.,  8672.,  5104.,  6688.,  8272.,  9856.,  5766.,  7556.,  9346., 11136.,  6380.,  8360., 10340., 12320.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6380.,  8360., 10340., 12320.,  5766.,  7556.,  9346., 11136.,  5104.,  6688.,  8272.,  9856.,  4490.,  5884.,  7278.,  8672.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  4060.,  5320.,  6580.,  7840.,  4640.,  6080.,  7520.,  8960.,  5220.,  6840.,  8460., 10080.,  5800.,  7600.,  9400., 11200.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  5800.,  7600.,  9400., 11200.,  5220.,  6840.,  8460., 10080.,  4640.,  6080.,  7520.,  8960.,  4060.,  5320.,  6580.,  7840.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3678.,  4820.,  5962.,  7104.,  4176.,  5472.,  6768.,  8064.,  4722.,  6188.,  7654.,  9120.,  5220.,  6840.,  8460., 10080.,  5766.,  7556.,  9346., 11136.,  5718.,  7492.,  9266., 11040.,  5766.,  7556.,  9346., 11136.,  5220.,  6840.,  8460., 10080.,  4722.,  6188.,  7654.,  9120.,  4176.,  5472.,  6768.,  8064.,  3678.,  4820.,  5962.,  7104.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3248.,  4256.,  5264.,  6272.,  3712.,  4864.,  6016.,  7168.,  4176.,  5472.,  6768.,  8064.,  4640.,  6080.,  7520.,  8960.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  4640.,  6080.,  7520.,  8960.,  4176.,  5472.,  6768.,  8064.,  3712.,  4864.,  6016.,  7168.,  3248.,  4256.,  5264.,  6272.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2866.,  3756.,  4646.,  5536.,  3248.,  4256.,  5264.,  6272.,  3678.,  4820.,  5962.,  7104.,  4060.,  5320.,  6580.,  7840.,  4490.,  5884.,  7278.,  8672.,  4442.,  5820.,  7198.,  8576.,  4490.,  5884.,  7278.,  8672.,  4060.,  5320.,  6580.,  7840.,  3678.,  4820.,  5962.,  7104.,  3248.,  4256.,  5264.,  6272.,  2866.,  3756.,  4646.,  5536.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2818.,  3692.,  4566.,  5440.,  3248.,  4256.,  5264.,  6272.,  3630.,  4756.,  5882.,  7008.,  4060.,  5320.,  6580.,  7840.,  4442.,  5820.,  7198.,  8576.,  4490.,  5884.,  7278.,  8672.,  4442.,  5820.,  7198.,  8576.,  4060.,  5320.,  6580.,  7840.,  3630.,  4756.,  5882.,  7008.,  3248.,  4256.,  5264.,  6272.,  2818.,  3692.,  4566.,  5440.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3248.,  4256.,  5264.,  6272.,  3712.,  4864.,  6016.,  7168.,  4176.,  5472.,  6768.,  8064.,  4640.,  6080.,  7520.,  8960.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  4640.,  6080.,  7520.,  8960.,  4176.,  5472.,  6768.,  8064.,  3712.,  4864.,  6016.,  7168.,  3248.,  4256.,  5264.,  6272.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3630.,  4756.,  5882.,  7008.,  4176.,  5472.,  6768.,  8064.,  4674.,  6124.,  7574.,  9024.,  5220.,  6840.,  8460., 10080.,  5718.,  7492.,  9266., 11040.,  5766.,  7556.,  9346., 11136.,  5718.,  7492.,  9266., 11040.,  5220.,  6840.,  8460., 10080.,  4674.,  6124.,  7574.,  9024.,  4176.,  5472.,  6768.,  8064.,  3630.,  4756.,  5882.,  7008.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  4060.,  5320.,  6580.,  7840.,  4640.,  6080.,  7520.,  8960.,  5220.,  6840.,  8460., 10080.,  5800.,  7600.,  9400., 11200.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  5800.,  7600.,  9400., 11200.,  5220.,  6840.,  8460., 10080.,  4640.,  6080.,  7520.,  8960.,  4060.,  5320.,  6580.,  7840.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4442.,  5820.,  7198.,  8576.,  5104.,  6688.,  8272.,  9856.,  5718.,  7492.,  9266., 11040.,  6380.,  8360., 10340., 12320.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  6380.,  8360., 10340., 12320.,  5718.,  7492.,  9266., 11040.,  5104.,  6688.,  8272.,  9856.,  4442.,  5820.,  7198.,  8576.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4490.,  5884.,  7278.,  8672.,  5104.,  6688.,  8272.,  9856.,  5766.,  7556.,  9346., 11136.,  6380.,  8360., 10340., 12320.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6380.,  8360., 10340., 12320.,  5766.,  7556.,  9346., 11136.,  5104.,  6688.,  8272.,  9856.,  4490.,  5884.,  7278.,  8672.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4442.,  5820.,  7198.,  8576.,  5104.,  6688.,  8272.,  9856.,  5718.,  7492.,  9266., 11040.,  6380.,  8360., 10340., 12320.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  6380.,  8360., 10340., 12320.,  5718.,  7492.,  9266., 11040.,  5104.,  6688.,  8272.,  9856.,  4442.,  5820.,  7198.,  8576.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4490.,  5884.,  7278.,  8672.,  5104.,  6688.,  8272.,  9856.,  5766.,  7556.,  9346., 11136.,  6380.,  8360., 10340., 12320.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6380.,  8360., 10340., 12320.,  5766.,  7556.,  9346., 11136.,  5104.,  6688.,  8272.,  9856.,  4490.,  5884.,  7278.,  8672.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  4060.,  5320.,  6580.,  7840.,  4640.,  6080.,  7520.,  8960.,  5220.,  6840.,  8460., 10080.,  5800.,  7600.,  9400., 11200.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  6380.,  8360., 10340., 12320.,  5800.,  7600.,  9400., 11200.,  5220.,  6840.,  8460., 10080.,  4640.,  6080.,  7520.,  8960.,  4060.,  5320.,  6580.,  7840.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3678.,  4820.,  5962.,  7104.,  4176.,  5472.,  6768.,  8064.,  4722.,  6188.,  7654.,  9120.,  5220.,  6840.,  8460., 10080.,  5766.,  7556.,  9346., 11136.,  5718.,  7492.,  9266., 11040.,  5766.,  7556.,  9346., 11136.,  5220.,  6840.,  8460., 10080.,  4722.,  6188.,  7654.,  9120.,  4176.,  5472.,  6768.,  8064.,  3678.,  4820.,  5962.,  7104.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3248.,  4256.,  5264.,  6272.,  3712.,  4864.,  6016.,  7168.,  4176.,  5472.,  6768.,  8064.,  4640.,  6080.,  7520.,  8960.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  5104.,  6688.,  8272.,  9856.,  4640.,  6080.,  7520.,  8960.,  4176.,  5472.,  6768.,  8064.,  3712.,  4864.,  6016.,  7168.,  3248.,  4256.,  5264.,  6272.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2866.,  3756.,  4646.,  5536.,  3248.,  4256.,  5264.,  6272.,  3678.,  4820.,  5962.,  7104.,  4060.,  5320.,  6580.,  7840.,  4490.,  5884.,  7278.,  8672.,  4442.,  5820.,  7198.,  8576.,  4490.,  5884.,  7278.,  8672.,  4060.,  5320.,  6580.,  7840.,  3678.,  4820.,  5962.,  7104.,  3248.,  4256.,  5264.,  6272.,  2866.,  3756.,  4646.,  5536.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.};
  const std::array<int, 4> in_shape = {{ 3, 14, 13, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x13x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.,  6994.,  9164., 11334., 13504.,  7042.,  9228., 11414., 13600.};
  const std::array<int, 4> in_shape = {{ 3, 14, 13, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x14x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2673., 3080., 3524., 3983., 4355., 4650., 4603., 4380., 4269., 3765., 3544., 3148., 2791., 2463., 3161., 3458., 3804., 4320., 4983., 5498., 5393., 5224., 5263., 4662., 4180., 3568., 3121., 2718., 3668., 3968., 4544., 5180., 5676., 6200., 6284., 6224., 6196., 5572., 5152., 4384., 3644., 2956., 3526., 4172., 5072., 5673., 6366., 7014., 7070., 7158., 7358., 6859., 6162., 5404., 4786., 3965., 3731., 4192., 4892., 5709., 6857., 7638., 7641., 7612., 7759., 7207., 6576., 5924., 5277., 4693., 4335., 4902., 5684., 6222., 7065., 7978., 8303., 8276., 8345., 7588., 6848., 6120., 5255., 4456., 4945., 5600., 6188., 6682., 7455., 7968., 7925., 7978., 8303., 7526., 6712., 5952., 5145., 4398., 5123., 5866., 6500., 7286., 8069., 8518., 8363., 7968., 7925., 7192., 6624., 5896., 5067., 4308., 4901., 5668., 6540., 7362., 8139., 8860., 8849., 8518., 8363., 7322., 6552., 5664., 4877., 4170., 4513., 5186., 5924., 6669., 7507., 8108., 8069., 8126., 8167., 7313., 6570., 5468., 4561., 3731., 3946., 4380., 5104., 5901., 6522., 6990., 7012., 7034., 7104., 6699., 6252., 5468., 4724., 3789., 3180., 3720., 4512., 5004., 5572., 6080., 6012., 5848., 5796., 5292., 4840., 4320., 3980., 3444., 3059., 3372., 3908., 4468., 5093., 5312., 5275., 5318., 5281., 4744., 4104., 3416., 2975., 2580., 2747., 3118., 3676., 3919., 4225., 4556., 4543., 4354., 4421., 4131., 3590., 3028., 2531., 2073., 2593., 2748., 2948., 3203., 3683., 4222., 4447., 4688., 5121., 4725., 4188., 3660., 3195., 2751., 2997., 3398., 3660., 4064., 4683., 5126., 5101., 5028., 5243., 4946., 4860., 4576., 3973., 3410., 3284., 3808., 4416., 5052., 5612., 6104., 6220., 5968., 5844., 5188., 4832., 4320., 3868., 3468., 4002., 4500., 5056., 5789., 6674., 7414., 7502., 7510., 7486., 6631., 5870., 4988., 4282., 3633., 4211., 4716., 5516., 6393., 7145., 7938., 8229., 8280., 8379., 7863., 7308., 6420., 5577., 4549., 4059., 4850., 5908., 6678., 7549., 8382., 8595., 8664., 8861., 8240., 7440., 6600., 5923., 5068., 4029., 4556., 5324., 6210., 7427., 8276., 8345., 8382., 8595., 7922., 7176., 6416., 5669., 4994., 4335., 4902., 5684., 6222., 7065., 7978., 8303., 8276., 8345., 7588., 6848., 6120., 5255., 4456., 4945., 5600., 6188., 6682., 7455., 7968., 7925., 7978., 8303., 7526., 6712., 5952., 5145., 4398., 4657., 5334., 5908., 6785., 7507., 7872., 7737., 7346., 7291., 6593., 6046., 5324., 4741., 4211., 3702., 4268., 4944., 5801., 6494., 7254., 7372., 7138., 7048., 6183., 5568., 4812., 4132., 3505., 3308., 3688., 4128., 4620., 5188., 5728., 5948., 6232., 6468., 5868., 5352., 4448., 3820., 3252., 3119., 3360., 3892., 4484., 4873., 5132., 5079., 4994., 5181., 4932., 4608., 4168., 3811., 3240., 2107., 2474., 3100., 3531., 4017., 4552., 4587., 4494., 4481., 4115., 3778., 3348., 3071., 2825., 2241., 2736., 3252., 3831., 4691., 5138., 5011., 4804., 4885., 4533., 4240., 3900., 3343., 2831., 2449., 2826., 3372., 3888., 4671., 5490., 5945., 6000., 5927., 5358., 4836., 4304., 3593., 2934., 3540., 3840., 4288., 4604., 5164., 5688., 5836., 6032., 6452., 5956., 5344., 4768., 4028., 3340., 4350., 5020., 5552., 6209., 6838., 7110., 6878., 6630., 6702., 6227., 5882., 5356., 4530., 3765., 4195., 5032., 5964., 6837., 7657., 8414., 8433., 8116., 7959., 6999., 6296., 5460., 4709., 4037., 4823., 5550., 6340., 7134., 8097., 8834., 8871., 8860., 8849., 7932., 7136., 5992., 5055., 4208., 4713., 5304., 6188., 7146., 7975., 8664., 8861., 8834., 8871., 8254., 7608., 6640., 5729., 4646., 4059., 4850., 5908., 6678., 7549., 8382., 8595., 8664., 8861., 8240., 7440., 6600., 5923., 5068., 4029., 4556., 5324., 6210., 7427., 8276., 8345., 8382., 8595., 7922., 7176., 6416., 5669., 4994., 3985., 4586., 5396., 5957., 6611., 7316., 7597., 7510., 7759., 7265., 6546., 5836., 4985., 4195., 3746., 4492., 5152., 5701., 6338., 6686., 6644., 6666., 6928., 6291., 5796., 5340., 4596., 3909., 3052., 3592., 4256., 5196., 5956., 6336., 6332., 6040., 6052., 5548., 5032., 4320., 3852., 3444., 2779., 3236., 3780., 4276., 4829., 5416., 5587., 5630., 5785., 5248., 4712., 4008., 3367., 2780., 2251., 2726., 3244., 3623., 4049., 4420., 4615., 4842., 4989., 4739., 4510., 3876., 3291., 2761.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x14x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {7978., 8303., 8276., 8345., 7968., 7925., 7978., 8303., 8518., 8363., 7968., 7925., 8860., 8849., 8518., 8363., 8382., 8595., 8664., 8861., 8276., 8345., 8382., 8595., 7978., 8303., 8276., 8345., 7968., 7925., 7978., 8303., 8834., 8871., 8860., 8849., 8664., 8861., 8834., 8871., 8382., 8595., 8664., 8861., 8276., 8345., 8382., 8595.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x14x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2568., 2898., 3098., 3472., 3408., 3832., 3774., 4238., 4056., 4566., 4402., 4948., 4306., 4838., 4114., 4632., 4130., 4650., 3564., 4026., 3266., 3680., 2896., 3256., 2530., 2846., 2292., 2558., 3083., 3458., 3446., 3876., 3852., 4344., 4383., 4928., 4801., 5406., 5348., 6004., 5317., 5970., 5174., 5808., 5175., 5806., 4519., 5084., 4092., 4600., 3396., 3840., 2925., 3314., 2613., 2940., 3360., 3768., 3720., 4192., 4352., 4896., 4920., 5528., 5344., 6024., 5960., 6704., 5976., 6728., 5976., 6720., 6024., 6776., 5408., 6088., 4984., 5600., 4352., 4896., 3912., 4392., 3168., 3576., 3551., 3980., 4052., 4552., 4796., 5376., 5285., 5938., 5869., 6604., 6466., 7276., 6543., 7372., 6700., 7532., 6809., 7660., 6447., 7222., 5746., 6452., 4884., 5512., 4423., 4980., 3709., 4186., 3792., 4262., 4254., 4800., 4944., 5576., 5458., 6170., 6528., 7330., 7430., 8316., 7326., 8226., 7174., 8072., 7342., 8270., 6924., 7774., 6150., 6928., 5520., 6216., 4990., 5610., 4260., 4794., 4059., 4590., 4810., 5420., 5772., 6472., 6123., 6908., 6977., 7858., 7736., 8708., 7977., 8958., 8042., 9016., 8011., 9010., 7263., 8168., 6608., 7440., 6148., 6896., 5249., 5918., 4445., 5024., 4675., 5266., 5480., 6144., 5964., 6712., 6425., 7252., 7337., 8254., 7718., 8720., 7751., 8746., 7736., 8708., 7977., 8958., 7295., 8172., 6342., 7136., 5636., 6336., 4911., 5538., 4301., 4844., 4971., 5590., 5814., 6516., 6284., 7080., 7015., 7884., 7633., 8586., 8052., 9084., 8117., 9142., 7718., 8720., 7751., 8746., 7007., 7888., 6396., 7184., 5828., 6512., 4877., 5478., 4093., 4600., 4755., 5370., 5764., 6472., 6604., 7416., 7333., 8228., 7865., 8854., 8482., 9544., 8323., 9378., 8052., 9084., 8117., 9142., 7103., 8020., 6450., 7264., 5636., 6336., 4843., 5450., 4269., 4772., 4188., 4722., 4898., 5524., 5648., 6376., 6434., 7242., 7124., 8022., 7778., 8744., 7606., 8570., 7386., 8332., 7374., 8318., 6560., 7410., 6074., 6836., 5168., 5832., 4486., 5058., 3792., 4262., 3779., 4244., 4250., 4792., 4988., 5616., 5655., 6362., 6169., 6964., 6784., 7644., 6825., 7688., 6882., 7732., 6763., 7616., 5987., 6758., 5440., 6136., 4724., 5336., 4161., 4696., 3321., 3770., 3360., 3768., 3800., 4272., 4480., 5024., 4904., 5512., 5408., 6088., 5912., 6656., 5896., 6648., 5960., 6704., 5976., 6728., 5536., 6216., 4968., 5584., 4224., 4768., 3864., 4344., 3232., 3640., 2811., 3174., 3160., 3576., 3724., 4200., 4025., 4552., 4625., 5210., 5030., 5664., 4879., 5510., 4888., 5516., 4977., 5618., 4671., 5248., 4150., 4672., 3716., 4176., 3319., 3726., 2653., 3000., 2508., 2838., 2902., 3276., 3472., 3896., 3614., 4078., 4020., 4530., 4294., 4840., 4282., 4814., 4174., 4692., 4050., 4570., 3656., 4118., 3214., 3628., 2864., 3224., 2458., 2774., 2040., 2306., 2264., 2546., 2682., 3000., 2896., 3256., 3166., 3574., 3656., 4118., 4018., 4540., 4178., 4718., 4386., 4928., 4706., 5266., 4284., 4794., 3730., 4200., 3280., 3704., 2946., 3334., 2724., 3070., 2843., 3194., 3290., 3692., 3596., 4056., 4163., 4672., 4689., 5254., 5080., 5708., 5193., 5834., 4970., 5608., 5051., 5702., 4679., 5268., 4400., 4936., 4036., 4512., 3505., 3930., 3125., 3492., 3168., 3576., 3848., 4320., 4352., 4896., 4920., 5528., 5408., 6088., 5960., 6704., 6040., 6792., 5912., 6656., 6024., 6776., 5344., 6024., 4984., 5600., 4352., 4896., 3784., 4264., 3360., 3768., 3711., 4164., 4232., 4760., 4796., 5408., 5481., 6170., 6125., 6900., 6902., 7756., 7043., 7916., 7056., 7916., 6989., 7852., 6175., 6958., 5606., 6316., 4820., 5448., 4315., 4868., 3757., 4226., 3968., 4454., 4510., 5080., 5328., 5992., 6082., 6834., 6736., 7586., 7590., 8532., 7790., 8762., 7798., 8768., 7886., 8870., 7292., 8190., 6678., 7496., 5904., 6632., 5374., 6018., 4340., 4890., 4107., 4614., 4782., 5380., 5708., 6408., 6383., 7180., 7153., 8058., 7932., 8940., 8173., 9222., 8414., 9472., 8639., 9722., 8223., 9216., 7268., 8176., 6212., 7024., 5573., 6294., 4733., 5352., 4019., 4522., 4556., 5144., 5324., 6008., 5917., 6692., 7065., 7942., 8042., 9016., 8011., 9010., 7932., 8940., 8173., 9222., 7743., 8708., 6986., 7872., 6404., 7200., 5683., 6394., 4781., 5396., 4059., 4590., 4810., 5420., 5772., 6472., 6123., 6908., 6977., 7858., 7736., 8708., 7977., 8958., 8042., 9016., 8011., 9010., 7263., 8168., 6608., 7440., 6148., 6896., 5249., 5918., 4445., 5024., 4675., 5266., 5480., 6144., 5964., 6712., 6425., 7252., 7337., 8254., 7718., 8720., 7751., 8746., 7736., 8708., 7977., 8958., 7295., 8172., 6342., 7136., 5636., 6336., 4911., 5538., 4301., 4844., 4332., 4882., 5074., 5692., 5456., 6152., 6130., 6898., 6788., 7638., 7218., 8144., 7366., 8290., 7018., 7924., 7070., 7974., 6320., 7122., 5770., 6492., 5232., 5864., 4534., 5098., 3968., 4454., 3779., 4268., 4526., 5080., 5116., 5744., 5787., 6482., 6137., 6908., 6564., 7404., 6541., 7384., 6342., 7172., 6415., 7248., 5683., 6430., 5316., 5984., 4724., 5304., 4085., 4600., 3593., 4034., 3296., 3704., 3736., 4208., 4224., 4768., 4840., 5448., 5344., 6024., 5976., 6720., 6024., 6776., 5960., 6704., 6040., 6792., 5344., 6024., 4904., 5520., 4224., 4768., 3800., 4280., 3296., 3704., 2635., 2974., 2908., 3296., 3468., 3912., 4077., 4584., 4513., 5090., 5114., 5752., 5171., 5822., 5180., 5828., 5205., 5866., 4639., 5240., 4234., 4784., 3844., 4336., 3611., 4054., 3037., 3424., 2300., 2582., 2502., 2820., 2960., 3320., 3214., 3622., 3524., 3986., 4054., 4576., 4106., 4646., 4174., 4716., 4386., 4946., 4216., 4726., 3854., 4324., 3248., 3672., 2954., 3342., 2568., 2914., 2152., 2418., 2586., 2912., 3024., 3416., 3486., 3934., 4216., 4726., 4722., 5284., 4690., 5270., 4514., 5096., 4642., 5242., 4492., 5050., 4050., 4560., 3664., 4120., 3170., 3566., 2580., 2910., 2603., 2930., 3118., 3508., 3788., 4248., 4055., 4576., 4577., 5166., 5212., 5860., 5517., 6178., 5550., 6208., 5567., 6238., 5095., 5708., 4580., 5144., 4164., 4672., 3429., 3874., 2869., 3244., 3232., 3640., 3848., 4320., 4352., 4896., 4792., 5400., 5472., 6152., 5832., 6576., 5976., 6728., 5976., 6720., 6152., 6904., 5536., 6216., 4856., 5472., 4352., 4896., 3784., 4264., 3296., 3704., 3871., 4348., 4540., 5096., 5052., 5696., 5789., 6498., 6381., 7164., 6746., 7596., 6775., 7628., 6532., 7372., 6657., 7500., 6095., 6854., 5594., 6276., 5076., 5672., 4207., 4724., 3485., 3914., 4144., 4678., 5086., 5712., 5840., 6568., 6466., 7274., 7136., 8034., 7878., 8844., 7822., 8786., 7622., 8568., 7726., 8670., 6764., 7614., 6118., 6880., 5264., 5928., 4542., 5114., 4036., 4506., 4603., 5182., 5394., 6076., 6220., 7016., 7075., 7964., 7905., 8898., 8704., 9780., 8625., 9710., 8482., 9544., 8323., 9378., 7391., 8344., 6776., 7632., 5764., 6512., 5001., 5646., 4253., 4784., 4387., 4930., 5040., 5680., 5964., 6712., 6817., 7668., 7561., 8526., 8414., 9472., 8639., 9722., 8704., 9780., 8625., 9710., 7871., 8860., 7134., 8032., 6276., 7072., 5623., 6322., 4493., 5084., 4107., 4614., 4782., 5380., 5708., 6408., 6383., 7180., 7153., 8058., 7932., 8940., 8173., 9222., 8414., 9472., 8639., 9722., 8223., 9216., 7268., 8176., 6212., 7024., 5573., 6294., 4733., 5352., 4019., 4522., 4556., 5144., 5324., 6008., 5917., 6692., 7065., 7942., 8042., 9016., 8011., 9010., 7932., 8940., 8173., 9222., 7743., 8708., 6986., 7872., 6404., 7200., 5683., 6394., 4781., 5396., 3452., 3922., 4290., 4836., 5328., 5960., 5746., 6458., 6452., 7254., 7042., 7928., 7238., 8138., 7226., 8124., 7342., 8270., 6720., 7570., 6138., 6916., 5744., 6440., 4902., 5522., 4144., 4678., 3651., 4100., 4242., 4760., 4732., 5328., 5167., 5834., 5849., 6596., 6216., 7036., 6385., 7208., 6442., 7252., 6691., 7520., 6083., 6838., 5432., 6120., 4980., 5592., 4281., 4824., 3673., 4138., 3232., 3640., 3800., 4272., 4224., 4768., 4904., 5512., 5536., 6216., 5912., 6656., 6024., 6776., 5832., 6576., 5976., 6728., 5408., 6088., 4968., 5584., 4480., 5024., 3864., 4344., 3360., 3768., 2651., 2998., 3408., 3816., 3980., 4456., 4401., 4936., 4721., 5322., 5086., 5744., 5079., 5750., 5088., 5756., 5305., 5986., 4863., 5488., 4558., 5120., 3972., 4464., 3439., 3870., 3037., 3400., 2092., 2358., 2550., 2876., 3024., 3416., 3422., 3870., 3924., 4434., 4518., 5080., 4634., 5214., 4574., 5156., 4594., 5194., 4264., 4822., 4062., 4572., 3568., 4024., 3130., 3526., 2584., 2914.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x14x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {7736., 8708., 7977., 8958., 8042., 9016., 8011., 9010., 7718., 8720., 7751., 8746., 7736., 8708., 7977., 8958., 8052., 9084., 8117., 9142., 7718., 8720., 7751., 8746., 8482., 9544., 8323., 9378., 8052., 9084., 8117., 9142., 7932., 8940., 8173., 9222., 8414., 9472., 8639., 9722., 8042., 9016., 8011., 9010., 7932., 8940., 8173., 9222., 7736., 8708., 7977., 8958., 8042., 9016., 8011., 9010., 7718., 8720., 7751., 8746., 7736., 8708., 7977., 8958., 8704., 9780., 8625., 9710., 8482., 9544., 8323., 9378., 8414., 9472., 8639., 9722., 8704., 9780., 8625., 9710., 7932., 8940., 8173., 9222., 8414., 9472., 8639., 9722., 8042., 9016., 8011., 9010., 7932., 8940., 8173., 9222.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x14x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2182.,  2512.,  2842.,  3172.,  2590.,  2964.,  3338.,  3712.,  2936.,  3360.,  3784.,  4208.,  3164.,  3628.,  4092.,  4556.,  3554.,  4064.,  4574.,  5084.,  3906.,  4452.,  4998.,  5544.,  3712.,  4244.,  4776.,  5308.,  3582.,  4100.,  4618.,  5136.,  3596.,  4116.,  4636.,  5156.,  3258.,  3720.,  4182.,  4644.,  2854.,  3268.,  3682.,  4096.,  2488.,  2848.,  3208.,  3568.,  2312.,  2628.,  2944.,  3260.,  2030.,  2296.,  2562.,  2828.,  2511.,  2886.,  3261.,  3636.,  2878.,  3308.,  3738.,  4168.,  3404.,  3896.,  4388.,  4880.,  3709.,  4254.,  4799.,  5344.,  4101.,  4706.,  5311.,  5916.,  4568.,  5224.,  5880.,  6536.,  4637.,  5290.,  5943.,  6596.,  4498.,  5132.,  5766.,  6400.,  4375.,  5006.,  5637.,  6268.,  3897.,  4462.,  5027.,  5592.,  3548.,  4056.,  4564.,  5072.,  3116.,  3560.,  4004.,  4448.,  2549.,  2938.,  3327.,  3716.,  2227.,  2554.,  2881.,  3208.,  2920.,  3328.,  3736.,  4144.,  3320.,  3792.,  4264.,  4736.,  3808.,  4352.,  4896.,  5440.,  4240.,  4848.,  5456.,  6064.,  4696.,  5376.,  6056.,  6736.,  5096.,  5840.,  6584.,  7328.,  5184.,  5936.,  6688.,  7440.,  5256.,  6000.,  6744.,  7488.,  5408.,  6160.,  6912.,  7664.,  4824.,  5504.,  6184.,  6864.,  4296.,  4912.,  5528.,  6144.,  3808.,  4352.,  4896.,  5440.,  3376.,  3856.,  4336.,  4816.,  2792.,  3200.,  3608.,  4016.,  3057.,  3486.,  3915.,  4344.,  3540.,  4040.,  4540.,  5040.,  4052.,  4632.,  5212.,  5792.,  4637.,  5290.,  5943.,  6596.,  5195.,  5930.,  6665.,  7400.,  5578.,  6388.,  7198.,  8008.,  5681.,  6510.,  7339.,  8168.,  5704.,  6536.,  7368.,  8200.,  5871.,  6722.,  7573.,  8424.,  5575.,  6350.,  7125.,  7900.,  5026.,  5732.,  6438.,  7144.,  4372.,  5000.,  5628.,  6256.,  3953.,  4510.,  5067.,  5624.,  3501.,  3978.,  4455.,  4932.,  3194.,  3664.,  4134.,  4604.,  3930.,  4476.,  5022.,  5568.,  4392.,  5024.,  5656.,  6288.,  4812.,  5524.,  6236.,  6948.,  5630.,  6432.,  7234.,  8036.,  6422.,  7308.,  8194.,  9080.,  6328.,  7228.,  8128.,  9028.,  6154.,  7052.,  7950.,  8848.,  6332.,  7260.,  8188.,  9116.,  5942.,  6792.,  7642.,  8492.,  5506.,  6284.,  7062.,  7840.,  4840.,  5536.,  6232.,  6928.,  4320.,  4940.,  5560.,  6180.,  3874.,  4408.,  4942.,  5476.,  3507.,  4038.,  4569.,  5100.,  4146.,  4756.,  5366.,  5976.,  4988.,  5688.,  6388.,  7088.,  5429.,  6214.,  6999.,  7784.,  5937.,  6818.,  7699.,  8580.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  7014.,  7988.,  8962.,  9936.,  6991.,  7990.,  8989.,  9988.,  6245.,  7150.,  8055.,  8960.,  5792.,  6624.,  7456.,  8288.,  5244.,  5992.,  6740.,  7488.,  4517.,  5186.,  5855.,  6524.,  3959.,  4538.,  5117.,  5696.,  4199.,  4790.,  5381.,  5972.,  4632.,  5296.,  5960.,  6624.,  5196.,  5944.,  6692.,  7440.,  5767.,  6594.,  7421.,  8248.,  6333.,  7250.,  8167.,  9084.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  6305.,  7182.,  8059.,  8936.,  5586.,  6380.,  7174.,  7968.,  4908.,  5608.,  6308.,  7008.,  4331.,  4958.,  5585.,  6212.,  3707.,  4250.,  4793.,  5336.,  4283.,  4902.,  5521.,  6140.,  4974.,  5676.,  6378.,  7080.,  5660.,  6456.,  7252.,  8048.,  6169.,  7038.,  7907.,  8776.,  6601.,  7554.,  8507.,  9460.,  7104.,  8136.,  9168., 10200.,  7049.,  8074.,  9099., 10124.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  6205.,  7086.,  7967.,  8848.,  5732.,  6520.,  7308.,  8096.,  4924.,  5608.,  6292.,  6976.,  4225.,  4826.,  5427.,  6028.,  3583.,  4090.,  4597.,  5104.,  4143.,  4758.,  5373.,  5988.,  4836.,  5544.,  6252.,  6960.,  5644.,  6456.,  7268.,  8080.,  6299.,  7194.,  8089.,  8984.,  6997.,  7986.,  8975.,  9964.,  7550.,  8612.,  9674., 10736.,  7303.,  8358.,  9413., 10468.,  7104.,  8136.,  9168., 10200.,  7049.,  8074.,  9099., 10124.,  6329.,  7246.,  8163.,  9080.,  5590.,  6404.,  7218.,  8032.,  4908.,  5608.,  6308.,  7008.,  4343.,  4950.,  5557.,  6164.,  3683.,  4186.,  4689.,  5192.,  3602.,  4136.,  4670.,  5204.,  4210.,  4836.,  5462.,  6088.,  5064.,  5792.,  6520.,  7248.,  5548.,  6356.,  7164.,  7972.,  6134.,  7032.,  7930.,  8828.,  6830.,  7796.,  8762.,  9728.,  6904.,  7868.,  8832.,  9796.,  6642.,  7588.,  8534.,  9480.,  6524.,  7468.,  8412.,  9356.,  5870.,  6720.,  7570.,  8420.,  5306.,  6068.,  6830.,  7592.,  4552.,  5216.,  5880.,  6544.,  3776.,  4348.,  4920.,  5492.,  3194.,  3664.,  4134.,  4604.,  3317.,  3782.,  4247.,  4712.,  3766.,  4308.,  4850.,  5392.,  4388.,  5016.,  5644.,  6272.,  4939.,  5646.,  6353.,  7060.,  5495.,  6290.,  7085.,  7880.,  5828.,  6688.,  7548.,  8408.,  5907.,  6770.,  7633.,  8496.,  6034.,  6884.,  7734.,  8584.,  6049.,  6902.,  7755.,  8608.,  5347.,  6118.,  6889.,  7660.,  4776.,  5472.,  6168.,  6864.,  4324.,  4936.,  5548.,  6160.,  3675.,  4210.,  4745.,  5280.,  2945.,  3394.,  3843.,  4292.,  2920.,  3328.,  3736.,  4144.,  3352.,  3824.,  4296.,  4768.,  3808.,  4352.,  4896.,  5440.,  4336.,  4944.,  5552.,  6160.,  4824.,  5504.,  6184.,  6864.,  5128.,  5872.,  6616.,  7360.,  5152.,  5904.,  6656.,  7408.,  5096.,  5840.,  6584.,  7328.,  5184.,  5936.,  6688.,  7440.,  4824.,  5504.,  6184.,  6864.,  4392.,  5008.,  5624.,  6240.,  3808.,  4352.,  4896.,  5440.,  3408.,  3888.,  4368.,  4848.,  2920.,  3328.,  3736.,  4144.,  2411.,  2774.,  3137.,  3500.,  2864.,  3280.,  3696.,  4112.,  3292.,  3768.,  4244.,  4720.,  3603.,  4130.,  4657.,  5184.,  4073.,  4658.,  5243.,  5828.,  4498.,  5132.,  5766.,  6400.,  4375.,  5006.,  5637.,  6268.,  4316.,  4944.,  5572.,  6200.,  4401.,  5042.,  5683.,  6324.,  3981.,  4558.,  5135.,  5712.,  3554.,  4076.,  4598.,  5120.,  3228.,  3688.,  4148.,  4608.,  2887.,  3294.,  3701.,  4108.,  2495.,  2842.,  3189.,  3536.,  2206.,  2536.,  2866.,  3196.,  2486.,  2860.,  3234.,  3608.,  2936.,  3360.,  3784.,  4208.,  3180.,  3644.,  4108.,  4572.,  3450.,  3960.,  4470.,  4980.,  3802.,  4348.,  4894.,  5440.,  3792.,  4324.,  4856.,  5388.,  3590.,  4108.,  4626.,  5144.,  3596.,  4116.,  4636.,  5156.,  3186.,  3648.,  4110.,  4572.,  2878.,  3292.,  3706.,  4120.,  2424.,  2784.,  3144.,  3504.,  2024.,  2340.,  2656.,  2972.,  1798.,  2064.,  2330.,  2596.,  1942.,  2224.,  2506.,  2788.,  2198.,  2516.,  2834.,  3152.,  2488.,  2848.,  3208.,  3568.,  2836.,  3244.,  3652.,  4060.,  3186.,  3648.,  4110.,  4572.,  3610.,  4132.,  4654.,  5176.,  3640.,  4180.,  4720.,  5260.,  3782.,  4324.,  4866.,  5408.,  4132.,  4692.,  5252.,  5812.,  3754.,  4264.,  4774.,  5284.,  3278.,  3748.,  4218.,  4688.,  2936.,  3360.,  3784.,  4208.,  2816.,  3204.,  3592.,  3980.,  2494.,  2840.,  3186.,  3532.,  2439.,  2790.,  3141.,  3492.,  2786.,  3188.,  3590.,  3992.,  3180.,  3640.,  4100.,  4560.,  3561.,  4070.,  4579.,  5088.,  3917.,  4482.,  5047.,  5612.,  4316.,  4944.,  5572.,  6200.,  4401.,  5042.,  5683.,  6324.,  4342.,  4980.,  5618.,  6256.,  4363.,  5014.,  5665.,  6316.,  4193.,  4782.,  5371.,  5960.,  3880.,  4416.,  4952.,  5488.,  3340.,  3816.,  4292.,  4768.,  2905.,  3330.,  3755.,  4180.,  2635.,  3002.,  3369.,  3736.,  2792.,  3200.,  3608.,  4016.,  3320.,  3792.,  4264.,  4736.,  3808.,  4352.,  4896.,  5440.,  4240.,  4848.,  5456.,  6064.,  4824.,  5504.,  6184.,  6864.,  5352.,  6096.,  6840.,  7584.,  5312.,  6064.,  6816.,  7568.,  5128.,  5872.,  6616.,  7360.,  5152.,  5904.,  6656.,  7408.,  4696.,  5376.,  6056.,  6736.,  4296.,  4912.,  5528.,  6144.,  3808.,  4352.,  4896.,  5440.,  3376.,  3856.,  4336.,  4816.,  2920.,  3328.,  3736.,  4144.,  3097.,  3550.,  4003.,  4456.,  3616.,  4144.,  4672.,  5200.,  4276.,  4888.,  5500.,  6112.,  4737.,  5426.,  6115.,  6804.,  5347.,  6122.,  6897.,  7672.,  6022.,  6876.,  7730.,  8584.,  6253.,  7126.,  7999.,  8872.,  6260.,  7120.,  7980.,  8840.,  6091.,  6954.,  7817.,  8680.,  5407.,  6190.,  6973.,  7756.,  4934.,  5644.,  6354.,  7064.,  4500.,  5128.,  5756.,  6384.,  3805.,  4358.,  4911.,  5464.,  3221.,  3690.,  4159.,  4628.,  3402.,  3888.,  4374.,  4860.,  3970.,  4540.,  5110.,  5680.,  4616.,  5280.,  5944.,  6608.,  5188.,  5940.,  6692.,  7444.,  5806.,  6656.,  7506.,  8356.,  6430.,  7372.,  8314.,  9256.,  6672.,  7644.,  8616.,  9588.,  6818.,  7788.,  8758.,  9728.,  7108.,  8092.,  9076., 10060.,  6438.,  7336.,  8234.,  9132.,  5690.,  6508.,  7326.,  8144.,  5064.,  5792.,  6520.,  7248.,  4616.,  5260.,  5904.,  6548.,  3890.,  4440.,  4990.,  5540.,  3563.,  4070.,  4577.,  5084.,  4166.,  4764.,  5362.,  5960.,  4860.,  5560.,  6260.,  6960.,  5617.,  6414.,  7211.,  8008.,  6329.,  7234.,  8139.,  9044.,  6888.,  7896.,  8904.,  9912.,  7137.,  8186.,  9235., 10284.,  7162.,  8220.,  9278., 10336.,  7395.,  8478.,  9561., 10644.,  7117.,  8110.,  9103., 10096.,  6460.,  7368.,  8276.,  9184.,  5564.,  6376.,  7188.,  8000.,  4985.,  5706.,  6427.,  7148.,  4495.,  5114.,  5733.,  6352.,  3423.,  3926.,  4429.,  4932.,  4204.,  4792.,  5380.,  5968.,  4748.,  5432.,  6116.,  6800.,  5251.,  6026.,  6801.,  7576.,  6149.,  7026.,  7903.,  8780.,  7014.,  7988.,  8962.,  9936.,  6991.,  7990.,  8989.,  9988.,  6888.,  7896.,  8904.,  9912.,  7137.,  8186.,  9235., 10284.,  6665.,  7630.,  8595.,  9560.,  6206.,  7092.,  7978.,  8864.,  5580.,  6376.,  7172.,  7968.,  4895.,  5606.,  6317.,  7028.,  4339.,  4954.,  5569.,  6184.,  3507.,  4038.,  4569.,  5100.,  4146.,  4756.,  5366.,  5976.,  4988.,  5688.,  6388.,  7088.,  5429.,  6214.,  6999.,  7784.,  5937.,  6818.,  7699.,  8580.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  7014.,  7988.,  8962.,  9936.,  6991.,  7990.,  8989.,  9988.,  6245.,  7150.,  8055.,  8960.,  5792.,  6624.,  7456.,  8288.,  5244.,  5992.,  6740.,  7488.,  4517.,  5186.,  5855.,  6524.,  3959.,  4538.,  5117.,  5696.,  4199.,  4790.,  5381.,  5972.,  4632.,  5296.,  5960.,  6624.,  5196.,  5944.,  6692.,  7440.,  5767.,  6594.,  7421.,  8248.,  6333.,  7250.,  8167.,  9084.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  6305.,  7182.,  8059.,  8936.,  5586.,  6380.,  7174.,  7968.,  4908.,  5608.,  6308.,  7008.,  4331.,  4958.,  5585.,  6212.,  3707.,  4250.,  4793.,  5336.,  3810.,  4360.,  4910.,  5460.,  4378.,  4996.,  5614.,  6232.,  4968.,  5664.,  6360.,  7056.,  5428.,  6196.,  6964.,  7732.,  5894.,  6744.,  7594.,  8444.,  6390.,  7316.,  8242.,  9168.,  6336.,  7260.,  8184.,  9108.,  6074.,  6980.,  7886.,  8792.,  6084.,  6988.,  7892.,  8796.,  5630.,  6432.,  7234.,  8036.,  5250.,  5972.,  6694.,  7416.,  4456.,  5088.,  5720.,  6352.,  3944.,  4508.,  5072.,  5636.,  3402.,  3888.,  4374.,  4860.,  3357.,  3846.,  4335.,  4824.,  3794.,  4348.,  4902.,  5456.,  4388.,  5016.,  5644.,  6272.,  4959.,  5654.,  6349.,  7044.,  5455.,  6226.,  6997.,  7768.,  5920.,  6760.,  7600.,  8440.,  5871.,  6714.,  7557.,  8400.,  5742.,  6572.,  7402.,  8232.,  5629.,  6462.,  7295.,  8128.,  5019.,  5766.,  6513.,  7260.,  4556.,  5224.,  5892.,  6560.,  4100.,  4680.,  5260.,  5840.,  3607.,  4122.,  4637.,  5152.,  3113.,  3554.,  3995.,  4436.,  2792.,  3200.,  3608.,  4016.,  3224.,  3696.,  4168.,  4640.,  3808.,  4352.,  4896.,  5440.,  4208.,  4816.,  5424.,  6032.,  4696.,  5376.,  6056.,  6736.,  5256.,  6000.,  6744.,  7488.,  5408.,  6160.,  6912.,  7664.,  5352.,  6096.,  6840.,  7584.,  5312.,  6064.,  6816.,  7568.,  4696.,  5376.,  6056.,  6736.,  4264.,  4880.,  5496.,  6112.,  3808.,  4352.,  4896.,  5440.,  3280.,  3760.,  4240.,  4720.,  2792.,  3200.,  3608.,  4016.,  2339.,  2678.,  3017.,  3356.,  2644.,  3032.,  3420.,  3808.,  3068.,  3512.,  3956.,  4400.,  3535.,  4042.,  4549.,  5056.,  3985.,  4562.,  5139.,  5716.,  4342.,  4980.,  5618.,  6256.,  4363.,  5014.,  5665.,  6316.,  4560.,  5208.,  5856.,  6504.,  4773.,  5434.,  6095.,  6756.,  4277.,  4878.,  5479.,  6080.,  3758.,  4308.,  4858.,  5408.,  3452.,  3944.,  4436.,  4928.,  3115.,  3558.,  4001.,  4444.,  2647.,  3034.,  3421.,  3808.,  1966.,  2248.,  2530.,  2812.,  2190.,  2508.,  2826.,  3144.,  2488.,  2848.,  3208.,  3568.,  2820.,  3228.,  3636.,  4044.,  3210.,  3672.,  4134.,  4596.,  3602.,  4124.,  4646.,  5168.,  3688.,  4228.,  4768.,  5308.,  3566.,  4108.,  4650.,  5192.,  3716.,  4276.,  4836.,  5396.,  3618.,  4128.,  4638.,  5148.,  3398.,  3868.,  4338.,  4808.,  2872.,  3296.,  3720.,  4144.,  2624.,  3012.,  3400.,  3788.,  2454.,  2800.,  3146.,  3492.,  1798.,  2064.,  2330.,  2596.,  2382.,  2708.,  3034.,  3360.,  2712.,  3104.,  3496.,  3888.,  2988.,  3436.,  3884.,  4332.,  3618.,  4128.,  4638.,  5148.,  4146.,  4708.,  5270.,  5832.,  4048.,  4628.,  5208.,  5788.,  3934.,  4516.,  5098.,  5680.,  4156.,  4756.,  5356.,  5956.,  3994.,  4552.,  5110.,  5668.,  3686.,  4196.,  4706.,  5216.,  3160.,  3616.,  4072.,  4528.,  2744.,  3140.,  3536.,  3932.,  2414.,  2744.,  3074.,  3404.,  2111.,  2438.,  2765.,  3092.,  2646.,  3036.,  3426.,  3816.,  3308.,  3768.,  4228.,  4688.,  3589.,  4110.,  4631.,  5152.,  3925.,  4514.,  5103.,  5692.,  4560.,  5208.,  5856.,  6504.,  4773.,  5434.,  6095.,  6756.,  4714.,  5372.,  6030.,  6688.,  4607.,  5278.,  5949.,  6620.,  4233.,  4846.,  5459.,  6072.,  3956.,  4520.,  5084.,  5648.,  3564.,  4072.,  4580.,  5088.,  2989.,  3434.,  3879.,  4324.,  2563.,  2938.,  3313.,  3688.,  2920.,  3328.,  3736.,  4144.,  3320.,  3792.,  4264.,  4736.,  3808.,  4352.,  4896.,  5440.,  4240.,  4848.,  5456.,  6064.,  4696.,  5376.,  6056.,  6736.,  5096.,  5840.,  6584.,  7328.,  5184.,  5936.,  6688.,  7440.,  5256.,  6000.,  6744.,  7488.,  5408.,  6160.,  6912.,  7664.,  4824.,  5504.,  6184.,  6864.,  4296.,  4912.,  5528.,  6144.,  3808.,  4352.,  4896.,  5440.,  3376.,  3856.,  4336.,  4816.,  2792.,  3200.,  3608.,  4016.,  3393.,  3870.,  4347.,  4824.,  3948.,  4504.,  5060.,  5616.,  4500.,  5144.,  5788.,  6432.,  5077.,  5786.,  6495.,  7204.,  5531.,  6314.,  7097.,  7880.,  5842.,  6692.,  7542.,  8392.,  5865.,  6718.,  7571.,  8424.,  5872.,  6712.,  7552.,  8392.,  5831.,  6674.,  7517.,  8360.,  5399.,  6158.,  6917.,  7676.,  4874.,  5556.,  6238.,  6920.,  4276.,  4872.,  5468.,  6064.,  3689.,  4206.,  4723.,  5240.,  3101.,  3530.,  3959.,  4388.,  3578.,  4112.,  4646.,  5180.,  4362.,  4988.,  5614.,  6240.,  5064.,  5792.,  6520.,  7248.,  5580.,  6388.,  7196.,  8004.,  6366.,  7264.,  8162.,  9060.,  6982.,  7948.,  8914.,  9880.,  6744.,  7708.,  8672.,  9636.,  6490.,  7436.,  8382.,  9328.,  6572.,  7516.,  8460.,  9404.,  6006.,  6856.,  7706.,  8556.,  5330.,  6092.,  6854.,  7616.,  4616.,  5280.,  5944.,  6608.,  4112.,  4684.,  5256.,  5828.,  3490.,  3960.,  4430.,  4900.,  3907.,  4486.,  5065.,  5644.,  4602.,  5284.,  5966.,  6648.,  5532.,  6328.,  7124.,  7920.,  6077.,  6966.,  7855.,  8744.,  6785.,  7778.,  8771.,  9764.,  7596.,  8672.,  9748., 10824.,  7749.,  8834.,  9919., 11004.,  7550.,  8612.,  9674., 10736.,  7303.,  8358.,  9413., 10468.,  6581.,  7534.,  8487.,  9440.,  5976.,  6832.,  7688.,  8544.,  5244.,  5992.,  6740.,  7488.,  4301.,  4946.,  5591.,  6236.,  3623.,  4154.,  4685.,  5216.,  3799.,  4342.,  4885.,  5428.,  4416.,  5056.,  5696.,  6336.,  5196.,  5944.,  6692.,  7440.,  5887.,  6738.,  7589.,  8440.,  6605.,  7570.,  8535.,  9500.,  7162.,  8220.,  9278., 10336.,  7395.,  8478.,  9561., 10644.,  7596.,  8672.,  9748., 10824.,  7749.,  8834.,  9919., 11004.,  6961.,  7950.,  8939.,  9928.,  6170.,  7068.,  7966.,  8864.,  5580.,  6376.,  7172.,  7968.,  4915.,  5614.,  6313.,  7012.,  4043.,  4634.,  5225.,  5816.,  3563.,  4070.,  4577.,  5084.,  4166.,  4764.,  5362.,  5960.,  4860.,  5560.,  6260.,  6960.,  5617.,  6414.,  7211.,  8008.,  6329.,  7234.,  8139.,  9044.,  6888.,  7896.,  8904.,  9912.,  7137.,  8186.,  9235., 10284.,  7162.,  8220.,  9278., 10336.,  7395.,  8478.,  9561., 10644.,  7117.,  8110.,  9103., 10096.,  6460.,  7368.,  8276.,  9184.,  5564.,  6376.,  7188.,  8000.,  4985.,  5706.,  6427.,  7148.,  4495.,  5114.,  5733.,  6352.,  3423.,  3926.,  4429.,  4932.,  4204.,  4792.,  5380.,  5968.,  4748.,  5432.,  6116.,  6800.,  5251.,  6026.,  6801.,  7576.,  6149.,  7026.,  7903.,  8780.,  7014.,  7988.,  8962.,  9936.,  6991.,  7990.,  8989.,  9988.,  6888.,  7896.,  8904.,  9912.,  7137.,  8186.,  9235., 10284.,  6665.,  7630.,  8595.,  9560.,  6206.,  7092.,  7978.,  8864.,  5580.,  6376.,  7172.,  7968.,  4895.,  5606.,  6317.,  7028.,  4339.,  4954.,  5569.,  6184.,  3090.,  3560.,  4030.,  4500.,  3714.,  4260.,  4806.,  5352.,  4520.,  5152.,  5784.,  6416.,  4908.,  5620.,  6332.,  7044.,  5398.,  6200.,  7002.,  7804.,  6206.,  7092.,  7978.,  8864.,  6488.,  7388.,  8288.,  9188.,  6370.,  7268.,  8166.,  9064.,  6476.,  7404.,  8332.,  9260.,  5806.,  6656.,  7506.,  8356.,  5418.,  6196.,  6974.,  7752.,  4904.,  5600.,  6296.,  6992.,  4176.,  4796.,  5416.,  6036.,  3578.,  4112.,  4646.,  5180.,  3205.,  3654.,  4103.,  4552.,  3518.,  4036.,  4554.,  5072.,  4164.,  4760.,  5356.,  5952.,  4771.,  5438.,  6105.,  6772.,  5159.,  5906.,  6653.,  7400.,  5500.,  6320.,  7140.,  7960.,  5579.,  6402.,  7225.,  8048.,  5706.,  6516.,  7326.,  8136.,  5929.,  6758.,  7587.,  8416.,  5299.,  6054.,  6809.,  7564.,  4768.,  5456.,  6144.,  6832.,  4324.,  4936.,  5548.,  6160.,  3779.,  4322.,  4865.,  5408.,  3121.,  3586.,  4051.,  4516.,  2920.,  3328.,  3736.,  4144.,  3352.,  3824.,  4296.,  4768.,  3808.,  4352.,  4896.,  5440.,  4336.,  4944.,  5552.,  6160.,  4824.,  5504.,  6184.,  6864.,  5128.,  5872.,  6616.,  7360.,  5152.,  5904.,  6656.,  7408.,  5096.,  5840.,  6584.,  7328.,  5184.,  5936.,  6688.,  7440.,  4824.,  5504.,  6184.,  6864.,  4392.,  5008.,  5624.,  6240.,  3808.,  4352.,  4896.,  5440.,  3408.,  3888.,  4368.,  4848.,  2920.,  3328.,  3736.,  4144.,  2363.,  2710.,  3057.,  3404.,  2856.,  3264.,  3672.,  4080.,  3292.,  3768.,  4244.,  4720.,  3707.,  4242.,  4777.,  5312.,  4249.,  4850.,  5451.,  6052.,  4714.,  5372.,  6030.,  6688.,  4607.,  5278.,  5949.,  6620.,  4548.,  5216.,  5884.,  6552.,  4633.,  5314.,  5995.,  6676.,  4317.,  4942.,  5567.,  6192.,  3946.,  4508.,  5070.,  5632.,  3452.,  3944.,  4436.,  4928.,  2975.,  3406.,  3837.,  4268.,  2607.,  2970.,  3333.,  3696.,  1694.,  1960.,  2226.,  2492.,  2214.,  2540.,  2866.,  3192.,  2840.,  3232.,  3624.,  4016.,  3068.,  3516.,  3964.,  4412.,  3386.,  3896.,  4406.,  4916.,  3978.,  4540.,  5102.,  5664.,  4192.,  4772.,  5352.,  5932.,  4070.,  4652.,  5234.,  5816.,  4092.,  4692.,  5292.,  5892.,  3794.,  4352.,  4910.,  5468.,  3582.,  4092.,  4602.,  5112.,  3224.,  3680.,  4136.,  4592.,  2648.,  3044.,  3440.,  3836.,  2182.,  2512.,  2842.,  3172.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x14x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  7014.,  7988.,  8962.,  9936.,  6991.,  7990.,  8989.,  9988.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  7104.,  8136.,  9168., 10200.,  7049.,  8074.,  9099., 10124.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  7550.,  8612.,  9674., 10736.,  7303.,  8358.,  9413., 10468.,  7104.,  8136.,  9168., 10200.,  7049.,  8074.,  9099., 10124.,  6888.,  7896.,  8904.,  9912.,  7137.,  8186.,  9235., 10284.,  7162.,  8220.,  9278., 10336.,  7395.,  8478.,  9561., 10644.,  7014.,  7988.,  8962.,  9936.,  6991.,  7990.,  8989.,  9988.,  6888.,  7896.,  8904.,  9912.,  7137.,  8186.,  9235., 10284.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  7014.,  7988.,  8962.,  9936.,  6991.,  7990.,  8989.,  9988.,  6850.,  7852.,  8854.,  9856.,  6731.,  7726.,  8721.,  9716.,  6788.,  7760.,  8732.,  9704.,  7069.,  8050.,  9031., 10012.,  7596.,  8672.,  9748., 10824.,  7749.,  8834.,  9919., 11004.,  7550.,  8612.,  9674., 10736.,  7303.,  8358.,  9413., 10468.,  7162.,  8220.,  9278., 10336.,  7395.,  8478.,  9561., 10644.,  7596.,  8672.,  9748., 10824.,  7749.,  8834.,  9919., 11004.,  6888.,  7896.,  8904.,  9912.,  7137.,  8186.,  9235., 10284.,  7162.,  8220.,  9278., 10336.,  7395.,  8478.,  9561., 10644.,  7014.,  7988.,  8962.,  9936.,  6991.,  7990.,  8989.,  9988.,  6888.,  7896.,  8904.,  9912.,  7137.,  8186.,  9235., 10284.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x14x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4784.,  5884.,  6768.,  7724.,  8992.,  9852.,  9600.,  8852.,  9160.,  8424.,  7712.,  7024.,  6200.,  5224.,  5958.,  6875.,  8168.,  8853.,  9802., 11183., 11741., 11499., 11545., 10190.,  9259.,  8008.,  6605.,  5618.,  7088.,  8016.,  9280., 10272., 11472., 12400., 12736., 12720., 13184., 11728., 10544.,  9280.,  8288.,  6832.,  7838.,  9083., 10552., 11965., 13058., 13743., 13977., 13795., 14285., 13454., 12319., 10776.,  9313.,  7586.,  8304.,  9772., 11408., 12476., 14560., 16492., 16184., 15460., 16032., 14472., 13048., 11408., 10176.,  8888.,  8998., 10595., 12808., 13933., 15866., 17623., 17965., 17779., 17417., 15326., 14251., 12648., 10845.,  9138.,  9822., 11239., 12680., 14025., 15906., 17019., 17553., 17623., 17965., 16358., 14439., 12648., 11425.,  9354.,  9846., 11387., 12808., 14325., 15658., 16703., 17349., 17019., 17553., 16494., 14819., 12904., 11253.,  9410.,  9230., 10831., 12680., 14033., 15954., 17779., 17417., 16703., 17349., 15734., 14367., 12904., 11401.,  9850.,  7848.,  9536., 11792., 12920., 14520., 15856., 15916., 15432., 15668., 14064., 13140., 11664.,  9956.,  8304.,  7998.,  8955., 10296., 11405., 12754., 13679., 14105., 14307., 14589., 12910., 11583., 10264.,  9009.,  7330.,  7088.,  8080.,  9280., 10464., 11728., 12464., 12672., 12400., 12736., 11728., 10736.,  9280.,  8352.,  7088.,  5790.,  7023.,  8296.,  8961., 10002., 10691., 10385., 10415., 11053., 10326.,  9479.,  8264.,  7281.,  6042.,  4680.,  5624.,  6896.,  7344.,  8472.,  9432.,  9644.,  9296.,  9108.,  8288.,  7700.,  6768.,  5908.,  4864.,  5904.,  6540.,  7024.,  7372.,  8288.,  9228.,  9600.,  9940., 10328.,  9128.,  8064.,  6768.,  6088.,  5192.,  6038.,  7027.,  8168.,  9245., 10362., 11159., 11381., 10995., 11041., 10334.,  9571.,  8264.,  7397.,  6402.,  6832.,  8016.,  9280., 10272., 11728., 12912., 12992., 12464., 12672., 11472., 10544.,  9280.,  8288.,  7088.,  7982.,  8883., 10296., 11221., 12818., 14487., 15233., 15259., 14741., 12734., 11591., 10264.,  8985.,  7666.,  8912., 10300., 11664., 12892., 14624., 15740., 16184., 16036., 16560., 15176., 13400., 11664., 10704.,  8856.,  9846., 11387., 12808., 14325., 15658., 16703., 17349., 17019., 17553., 16494., 14819., 12904., 11253.,  9410.,  9230., 10831., 12680., 14033., 15954., 17779., 17417., 16703., 17349., 15734., 14367., 12904., 11401.,  9850.,  8998., 10595., 12808., 13933., 15866., 17623., 17965., 17779., 17417., 15326., 14251., 12648., 10845.,  9138.,  9822., 11239., 12680., 14025., 15906., 17019., 17553., 17623., 17965., 16358., 14439., 12648., 11425.,  9354.,  9096., 10384., 11536., 12824., 14328., 15424., 16044., 15624., 16004., 14768., 13236., 11408., 10292.,  8912.,  7758.,  9075., 10552., 11829., 13122., 14199., 14225., 13707., 13989., 12734., 11863., 10776.,  9513.,  8050.,  6832.,  7824.,  9280., 10208., 11472., 12720., 13184., 12912., 12992., 11472., 10480.,  9280.,  8096.,  6832.,  6126.,  6791.,  7784.,  8953., 10210., 11083., 11289., 11079., 11285.,  9926.,  8783.,  8008.,  7433.,  6314.,  5672.,  6344.,  7152.,  7760.,  8280.,  9128.,  9516.,  9232.,  9572.,  8992.,  8308.,  7024.,  6116.,  5216.,  4784.,  5884.,  6768.,  7724.,  8992.,  9852.,  9600.,  8852.,  9160.,  8424.,  7712.,  7024.,  6200.,  5224.,  5958.,  6875.,  8168.,  8853.,  9802., 11183., 11741., 11499., 11545., 10190.,  9259.,  8008.,  6605.,  5618.,  7088.,  8016.,  9280., 10272., 11472., 12400., 12736., 12720., 13184., 11728., 10544.,  9280.,  8288.,  6832.,  7838.,  9083., 10552., 11965., 13058., 13743., 13977., 13795., 14285., 13454., 12319., 10776.,  9313.,  7586.,  8304.,  9772., 11408., 12476., 14560., 16492., 16184., 15460., 16032., 14472., 13048., 11408., 10176.,  8888.,  8998., 10595., 12808., 13933., 15866., 17623., 17965., 17779., 17417., 15326., 14251., 12648., 10845.,  9138.,  9822., 11239., 12680., 14025., 15906., 17019., 17553., 17623., 17965., 16358., 14439., 12648., 11425.,  9354.,  9846., 11387., 12808., 14325., 15658., 16703., 17349., 17019., 17553., 16494., 14819., 12904., 11253.,  9410.,  9230., 10831., 12680., 14033., 15954., 17779., 17417., 16703., 17349., 15734., 14367., 12904., 11401.,  9850.,  7848.,  9536., 11792., 12920., 14520., 15856., 15916., 15432., 15668., 14064., 13140., 11664.,  9956.,  8304.,  7998.,  8955., 10296., 11405., 12754., 13679., 14105., 14307., 14589., 12910., 11583., 10264.,  9009.,  7330.,  7088.,  8080.,  9280., 10464., 11728., 12464., 12672., 12400., 12736., 11728., 10736.,  9280.,  8352.,  7088.,  5790.,  7023.,  8296.,  8961., 10002., 10691., 10385., 10415., 11053., 10326.,  9479.,  8264.,  7281.,  6042.,  4680.,  5624.,  6896.,  7344.,  8472.,  9432.,  9644.,  9296.,  9108.,  8288.,  7700.,  6768.,  5908.,  4864.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x14x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17623., 17965., 17779., 17417., 17019., 17553., 17623., 17965., 16703., 17349., 17019., 17553., 17779., 17417., 16703., 17349., 16703., 17349., 17019., 17553., 17779., 17417., 16703., 17349., 17623., 17965., 17779., 17417., 17019., 17553., 17623., 17965., 17623., 17965., 17779., 17417., 17019., 17553., 17623., 17965., 16703., 17349., 17019., 17553., 17779., 17417., 16703., 17349.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x14x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4428.,  5008.,  5674.,  6360.,  6448.,  7264.,  6974.,  7880.,  8420.,  9440.,  9410., 10504.,  8834.,  9936.,  8322.,  9400.,  8834.,  9952.,  8308.,  9328.,  7502.,  8432.,  6448.,  7264.,  5866.,  6576.,  5084.,  5664.,  5114.,  5804.,  6175.,  6982.,  7768.,  8720.,  8325.,  9386.,  9126., 10324., 10571., 11870., 11155., 12474., 10715., 11990., 10275., 11570.,  9166., 10332.,  8613.,  9686.,  7704.,  8656.,  6231.,  7066.,  5314.,  6004.,  6832.,  7648.,  7608.,  8544.,  8768.,  9856.,  9672., 10880., 10704., 12064., 11480., 12960., 11864., 13376., 12120., 13600., 12760., 14272., 11216., 12576.,  9928., 11168.,  8768.,  9856.,  7864.,  8832.,  6320.,  7136.,  7422.,  8316.,  8549.,  9590.,  9832., 11056., 11319., 12666., 12338., 13844., 12761., 14398., 13057., 14738., 13097., 14758., 13393., 15098., 12730., 14268., 11607., 13006., 10024., 11248.,  8893.,  9970.,  7590.,  8484.,  7588.,  8576.,  9478., 10632., 10832., 12192., 11810., 13320., 14028., 15728., 15662., 17496., 15022., 16880., 14126., 15944., 14702., 16576., 13660., 15360., 12466., 14016., 10832., 12192.,  9798., 10992.,  8500.,  9488.,  8274.,  9372.,  9787., 11062., 12152., 13648., 13097., 14762., 14478., 16356., 16631., 18670., 17535., 19610., 16967., 18982., 16463., 18514., 14518., 16364., 13513., 15206., 12088., 13584.,  9971., 11290.,  8474.,  9572.,  9490., 10636., 10411., 11710., 11896., 13392., 13401., 15074., 14926., 16820., 15911., 17974., 16175., 18274., 16631., 18670., 17535., 19610., 15414., 17276., 13497., 15198., 12088., 13584., 10851., 12194.,  8858., 10004.,  9170., 10300., 10587., 11878., 12152., 13648., 13641., 15290., 14862., 16708., 15831., 17854., 16287., 18378., 15911., 17974., 16175., 18274., 15542., 17420., 14377., 16086., 12088., 13584., 10771., 12106.,  9498., 10628.,  8594.,  9708., 10379., 11662., 11896., 13392., 13177., 14834., 15310., 17172., 16967., 18982., 16463., 18514., 15831., 17854., 16287., 18378., 14902., 16796., 13593., 15310., 12088., 13584., 10819., 12146.,  9370., 10484.,  7428.,  8416.,  8878., 10032., 11088., 12448., 11802., 13312., 13100., 14800., 15062., 16896., 15798., 17656., 14998., 16816., 15030., 16904., 13388., 15088., 12378., 13928., 10832., 12192.,  8974., 10168.,  7588.,  8576.,  7582.,  8492.,  8285.,  9334.,  9832., 11056., 11199., 12570., 12242., 13796., 12753., 14430., 13081., 14770., 13537., 15174., 14057., 15738., 12330., 13852., 11023., 12414., 10024., 11248.,  8661.,  9746.,  6806.,  7716.,  6832.,  7648.,  7736.,  8672.,  8768.,  9856., 10056., 11264., 11216., 12576., 11608., 13088., 11736., 13248., 11480., 12960., 11864., 13376., 11216., 12576., 10312., 11552.,  8768.,  9856.,  7992.,  8960.,  6832.,  7648.,  5434.,  6140.,  6575.,  7390.,  7512.,  8464.,  8341.,  9394.,  9702., 10884., 10715., 11990., 10275., 11570., 10027., 11310., 10419., 11754.,  9550., 10764.,  8629.,  9726.,  7704.,  8656.,  6887.,  7730.,  5954.,  6660.,  4268.,  4848.,  5266.,  5952.,  6704.,  7520.,  7030.,  7936.,  7748.,  8768.,  9002., 10096.,  9418., 10520.,  8746.,  9824.,  8842.,  9960.,  8036.,  9056.,  7478.,  8408.,  6448.,  7264.,  5234.,  5944.,  4428.,  5008.,  5324.,  5968.,  5930.,  6648.,  6448.,  7264.,  7038.,  7944.,  8036.,  9056.,  8898., 10024.,  9026., 10192.,  9154., 10296.,  9858., 11008.,  8692.,  9712.,  7438.,  8368.,  6448.,  7264.,  6122.,  6864.,  5212.,  5856.,  5754.,  6476.,  6719.,  7542.,  7768.,  8720.,  8613.,  9658.,  9254., 10420., 10027., 11310., 10419., 11754., 10171., 11494., 10243., 11586.,  9934., 11132.,  9221., 10310.,  7704.,  8656.,  6775.,  7626.,  6082.,  6804.,  6320.,  7136.,  7608.,  8544.,  8768.,  9856.,  9672., 10880., 11216., 12576., 12504., 13984., 12376., 13888., 11608., 13088., 11736., 13248., 10704., 12064.,  9928., 11168.,  8768.,  9856.,  7864.,  8832.,  6832.,  7648.,  7166.,  8092.,  8133.,  9190.,  9832., 11056., 10839., 12202., 12082., 13620., 13689., 15374., 14497., 16226., 14473., 16150., 13809., 15498., 11834., 13340., 10935., 12318., 10024., 11248.,  8477.,  9570.,  7206.,  8132.,  8740.,  9792.,  9734., 10920., 10832., 12192., 11874., 13384., 13388., 15088., 14638., 16504., 14958., 16880., 15214., 17096., 16238., 18144., 14300., 16000., 12402., 13952., 10832., 12192., 10054., 11280.,  8372.,  9424.,  9170., 10300., 10587., 11878., 12152., 13648., 13641., 15290., 14862., 16708., 15831., 17854., 16287., 18378., 15911., 17974., 16175., 18274., 15542., 17420., 14377., 16086., 12088., 13584., 10771., 12106.,  9498., 10628.,  8594.,  9708., 10379., 11662., 11896., 13392., 13177., 14834., 15310., 17172., 16967., 18982., 16463., 18514., 15831., 17854., 16287., 18378., 14902., 16796., 13593., 15310., 12088., 13584., 10819., 12146.,  9370., 10484.,  8274.,  9372.,  9787., 11062., 12152., 13648., 13097., 14762., 14478., 16356., 16631., 18670., 17535., 19610., 16967., 18982., 16463., 18514., 14518., 16364., 13513., 15206., 12088., 13584.,  9971., 11290.,  8474.,  9572.,  9490., 10636., 10411., 11710., 11896., 13392., 13401., 15074., 14926., 16820., 15911., 17974., 16175., 18274., 16631., 18670., 17535., 19610., 15414., 17276., 13497., 15198., 12088., 13584., 10851., 12194.,  8858., 10004.,  8580.,  9632.,  9774., 10960., 11088., 12448., 12378., 13888., 13740., 15440., 14678., 16544., 14966., 16888., 14294., 16176., 14646., 16552., 14028., 15728., 13082., 14632., 10832., 12192.,  9870., 11096.,  8740.,  9792.,  7326.,  8268.,  8509.,  9574.,  9832., 11056., 11039., 12394., 12498., 14020., 13809., 15470., 13817., 15522., 13313., 14998., 13321., 15050., 11946., 13500., 11055., 12462., 10024., 11248.,  8885.,  9986.,  7702.,  8644.,  6320.,  7136.,  7224.,  8160.,  8768.,  9856.,  9544., 10752., 10704., 12064., 12120., 13600., 12760., 14272., 12504., 13984., 12376., 13888., 10704., 12064.,  9800., 11040.,  8768.,  9856.,  7480.,  8448.,  6320.,  7136.,  6074.,  6812.,  6607.,  7438.,  7512.,  8464.,  8565.,  9634.,  9574., 10788., 10171., 11494., 10243., 11586., 10571., 11870., 11155., 12474.,  9806., 10988.,  8533.,  9614.,  7704.,  8656.,  6919.,  7778.,  5698.,  6436.,  5164.,  5808.,  5906.,  6624.,  6704.,  7520.,  7350.,  8256.,  8132.,  9152.,  8874., 10000.,  9098., 10264.,  8554.,  9696.,  8714.,  9864.,  8420.,  9440.,  7926.,  8856.,  6448.,  7264.,  5874.,  6616.,  5324.,  5968.,  4428.,  5008.,  5674.,  6360.,  6448.,  7264.,  6974.,  7880.,  8420.,  9440.,  9410., 10504.,  8834.,  9936.,  8322.,  9400.,  8834.,  9952.,  8308.,  9328.,  7502.,  8432.,  6448.,  7264.,  5866.,  6576.,  5084.,  5664.,  5114.,  5804.,  6175.,  6982.,  7768.,  8720.,  8325.,  9386.,  9126., 10324., 10571., 11870., 11155., 12474., 10715., 11990., 10275., 11570.,  9166., 10332.,  8613.,  9686.,  7704.,  8656.,  6231.,  7066.,  5314.,  6004.,  6832.,  7648.,  7608.,  8544.,  8768.,  9856.,  9672., 10880., 10704., 12064., 11480., 12960., 11864., 13376., 12120., 13600., 12760., 14272., 11216., 12576.,  9928., 11168.,  8768.,  9856.,  7864.,  8832.,  6320.,  7136.,  7422.,  8316.,  8549.,  9590.,  9832., 11056., 11319., 12666., 12338., 13844., 12761., 14398., 13057., 14738., 13097., 14758., 13393., 15098., 12730., 14268., 11607., 13006., 10024., 11248.,  8893.,  9970.,  7590.,  8484.,  7588.,  8576.,  9478., 10632., 10832., 12192., 11810., 13320., 14028., 15728., 15662., 17496., 15022., 16880., 14126., 15944., 14702., 16576., 13660., 15360., 12466., 14016., 10832., 12192.,  9798., 10992.,  8500.,  9488.,  8274.,  9372.,  9787., 11062., 12152., 13648., 13097., 14762., 14478., 16356., 16631., 18670., 17535., 19610., 16967., 18982., 16463., 18514., 14518., 16364., 13513., 15206., 12088., 13584.,  9971., 11290.,  8474.,  9572.,  9490., 10636., 10411., 11710., 11896., 13392., 13401., 15074., 14926., 16820., 15911., 17974., 16175., 18274., 16631., 18670., 17535., 19610., 15414., 17276., 13497., 15198., 12088., 13584., 10851., 12194.,  8858., 10004.,  9170., 10300., 10587., 11878., 12152., 13648., 13641., 15290., 14862., 16708., 15831., 17854., 16287., 18378., 15911., 17974., 16175., 18274., 15542., 17420., 14377., 16086., 12088., 13584., 10771., 12106.,  9498., 10628.,  8594.,  9708., 10379., 11662., 11896., 13392., 13177., 14834., 15310., 17172., 16967., 18982., 16463., 18514., 15831., 17854., 16287., 18378., 14902., 16796., 13593., 15310., 12088., 13584., 10819., 12146.,  9370., 10484.,  7428.,  8416.,  8878., 10032., 11088., 12448., 11802., 13312., 13100., 14800., 15062., 16896., 15798., 17656., 14998., 16816., 15030., 16904., 13388., 15088., 12378., 13928., 10832., 12192.,  8974., 10168.,  7588.,  8576.,  7582.,  8492.,  8285.,  9334.,  9832., 11056., 11199., 12570., 12242., 13796., 12753., 14430., 13081., 14770., 13537., 15174., 14057., 15738., 12330., 13852., 11023., 12414., 10024., 11248.,  8661.,  9746.,  6806.,  7716.,  6832.,  7648.,  7736.,  8672.,  8768.,  9856., 10056., 11264., 11216., 12576., 11608., 13088., 11736., 13248., 11480., 12960., 11864., 13376., 11216., 12576., 10312., 11552.,  8768.,  9856.,  7992.,  8960.,  6832.,  7648.,  5434.,  6140.,  6575.,  7390.,  7512.,  8464.,  8341.,  9394.,  9702., 10884., 10715., 11990., 10275., 11570., 10027., 11310., 10419., 11754.,  9550., 10764.,  8629.,  9726.,  7704.,  8656.,  6887.,  7730.,  5954.,  6660.,  4268.,  4848.,  5266.,  5952.,  6704.,  7520.,  7030.,  7936.,  7748.,  8768.,  9002., 10096.,  9418., 10520.,  8746.,  9824.,  8842.,  9960.,  8036.,  9056.,  7478.,  8408.,  6448.,  7264.,  5234.,  5944.,  4428.,  5008.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x14x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {16631., 18670., 17535., 19610., 16967., 18982., 16463., 18514., 15911., 17974., 16175., 18274., 16631., 18670., 17535., 19610., 15831., 17854., 16287., 18378., 15911., 17974., 16175., 18274., 16967., 18982., 16463., 18514., 15831., 17854., 16287., 18378., 15831., 17854., 16287., 18378., 15911., 17974., 16175., 18274., 16967., 18982., 16463., 18514., 15831., 17854., 16287., 18378., 16631., 18670., 17535., 19610., 16967., 18982., 16463., 18514., 15911., 17974., 16175., 18274., 16631., 18670., 17535., 19610., 16631., 18670., 17535., 19610., 16967., 18982., 16463., 18514., 15911., 17974., 16175., 18274., 16631., 18670., 17535., 19610., 15831., 17854., 16287., 18378., 15911., 17974., 16175., 18274., 16967., 18982., 16463., 18514., 15831., 17854., 16287., 18378.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x14x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4132.,  4712.,  5292.,  5872.,  4982.,  5668.,  6354.,  7040.,  5808.,  6624.,  7440.,  8256.,  6290.,  7196.,  8102.,  9008.,  7260.,  8280.,  9300., 10320.,  7886.,  8980., 10074., 11168.,  7686.,  8788.,  9890., 10992.,  7646.,  8724.,  9802., 10880.,  8054.,  9172., 10290., 11408.,  7260.,  8280.,  9300., 10320.,  6586.,  7516.,  8446.,  9376.,  5808.,  6624.,  7440.,  8256.,  5150.,  5860.,  6570.,  7280.,  4132.,  4712.,  5292.,  5872.,  4866.,  5556.,  6246.,  6936.,  5655.,  6462.,  7269.,  8076.,  6712.,  7664.,  8616.,  9568.,  7701.,  8762.,  9823., 10884.,  8446.,  9644., 10842., 12040.,  9123., 10422., 11721., 13020.,  9375., 10694., 12013., 13332.,  9179., 10454., 11729., 13004.,  8919., 10214., 11509., 12804.,  8382.,  9548., 10714., 11880.,  7577.,  8650.,  9723., 10796.,  6840.,  7792.,  8744.,  9696.,  5739.,  6574.,  7409.,  8244.,  4962.,  5652.,  6342.,  7032.,  5808.,  6624.,  7440.,  8256.,  6792.,  7728.,  8664.,  9600.,  7744.,  8832.,  9920., 11008.,  8472.,  9680., 10888., 12096.,  9680., 11040., 12400., 13760., 10664., 12144., 13624., 15104., 10632., 12144., 13656., 15168., 10408., 11888., 13368., 14848., 10888., 12400., 13912., 15424.,  9680., 11040., 12400., 13760.,  8696.,  9936., 11176., 12416.,  7744.,  8832.,  9920., 11008.,  7016.,  7984.,  8952.,  9920.,  5808.,  6624.,  7440.,  8256.,  6318.,  7212.,  8106.,  9000.,  7225.,  8266.,  9307., 10348.,  8648.,  9872., 11096., 12320.,  9771., 11118., 12465., 13812., 10642., 12148., 13654., 15160., 11565., 13202., 14839., 16476., 11985., 13666., 15347., 17028., 11957., 13618., 15279., 16940., 11865., 13570., 15275., 16980., 11026., 12564., 14102., 15640.,  9927., 11326., 12725., 14124.,  8776., 10000., 11224., 12448.,  7365.,  8442.,  9519., 10596.,  6414.,  7308.,  8202.,  9096.,  7036.,  8024.,  9012., 10000.,  8378.,  9532., 10686., 11840.,  9680., 11040., 12400., 13760., 10526., 12036., 13546., 15056., 12100., 13800., 15500., 17200., 13218., 15052., 16886., 18720., 13002., 14860., 16718., 18576., 12850., 14668., 16486., 18304., 13498., 15372., 17246., 19120., 12100., 13800., 15500., 17200., 10934., 12484., 14034., 15584.,  9680., 11040., 12400., 13760.,  8658.,  9852., 11046., 12240.,  7036.,  8024.,  9012., 10000.,  7770.,  8868.,  9966., 11064.,  8923., 10198., 11473., 12748., 10584., 12080., 13576., 15072., 12065., 13730., 15395., 17060., 13286., 15164., 17042., 18920., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 13222., 15068., 16914., 18760., 12053., 13746., 15439., 17132., 10712., 12208., 13704., 15200.,  9119., 10438., 11757., 13076.,  7866.,  8964., 10062., 11160.,  8106.,  9252., 10398., 11544.,  9379., 10678., 11977., 13276., 10584., 12080., 13576., 15072., 11769., 13442., 15115., 16788., 13398., 15292., 17186., 19080., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 13334., 15196., 17058., 18920., 11757., 13458., 15159., 16860., 10712., 12208., 13704., 15200.,  9575., 10918., 12261., 13604.,  8202.,  9348., 10494., 11640.,  7994.,  9124., 10254., 11384.,  8971., 10262., 11553., 12844., 10584., 12080., 13576., 15072., 11889., 13538., 15187., 16836., 13062., 14908., 16754., 18600., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 13446., 15324., 17202., 19080., 12229., 13938., 15647., 17356., 10712., 12208., 13704., 15200.,  9167., 10502., 11837., 13172.,  8090.,  9220., 10350., 11480.,  7882.,  8996., 10110., 11224.,  9331., 10614., 11897., 13180., 10584., 12080., 13576., 15072., 11593., 13250., 14907., 16564., 13174., 15036., 16898., 18760., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 13558., 15452., 17346., 19240., 11933., 13650., 15367., 17084., 10712., 12208., 13704., 15200.,  9527., 10854., 12181., 13508.,  7978.,  9092., 10206., 11320.,  7036.,  8024.,  9012., 10000.,  8058.,  9212., 10366., 11520.,  9680., 11040., 12400., 13760., 10974., 12484., 13994., 15504., 12100., 13800., 15500., 17200., 12898., 14732., 16566., 18400., 13450., 15308., 17166., 19024., 13042., 14860., 16678., 18496., 13178., 15052., 16926., 18800., 12100., 13800., 15500., 17200., 11126., 12676., 14226., 15776.,  9680., 11040., 12400., 13760.,  8338.,  9532., 10726., 11920.,  7036.,  8024.,  9012., 10000.,  6430.,  7340.,  8250.,  9160.,  7569.,  8618.,  9667., 10716.,  8648.,  9872., 11096., 12320.,  9587., 10958., 12329., 13700., 10978., 12532., 14086., 15640., 12133., 13810., 15487., 17164., 11689., 13378., 15067., 16756., 11565., 13202., 14839., 16476., 11985., 13666., 15347., 17028., 10914., 12436., 13958., 15480.,  9647., 11038., 12429., 13820.,  8776., 10000., 11224., 12448.,  7709.,  8794.,  9879., 10964.,  6526.,  7436.,  8346.,  9256.,  5808.,  6624.,  7440.,  8256.,  6536.,  7472.,  8408.,  9344.,  7744.,  8832.,  9920., 11008.,  8728.,  9936., 11144., 12352.,  9680., 11040., 12400., 13760., 10408., 11888., 13368., 14848., 10888., 12400., 13912., 15424., 10664., 12144., 13624., 15104., 10632., 12144., 13656., 15168.,  9680., 11040., 12400., 13760.,  8952., 10192., 11432., 12672.,  7744.,  8832.,  9920., 11008.,  6760.,  7728.,  8696.,  9664.,  5808.,  6624.,  7440.,  8256.,  4978.,  5684.,  6390.,  7096.,  5935.,  6750.,  7565.,  8380.,  6712.,  7664.,  8616.,  9568.,  7357.,  8410.,  9463., 10516.,  8334.,  9516., 10698., 11880.,  9179., 10454., 11729., 13004.,  8919., 10214., 11509., 12804.,  9075., 10358., 11641., 12924.,  9423., 10758., 12093., 13428.,  8718.,  9932., 11146., 12360.,  7585.,  8682.,  9779., 10876.,  6840.,  7792.,  8744.,  9696.,  6019.,  6862.,  7705.,  8548.,  5074.,  5780.,  6486.,  7192.,  4132.,  4712.,  5292.,  5872.,  4790.,  5476.,  6162.,  6848.,  5808.,  6624.,  7440.,  8256.,  6610.,  7516.,  8422.,  9328.,  7260.,  8280.,  9300., 10320.,  7694.,  8788.,  9882., 10976.,  8006.,  9108., 10210., 11312.,  7710.,  8788.,  9866., 10944.,  7862.,  8980., 10098., 11216.,  7260.,  8280.,  9300., 10320.,  6650.,  7580.,  8510.,  9440.,  5808.,  6624.,  7440.,  8256.,  4958.,  5668.,  6378.,  7088.,  4132.,  4712.,  5292.,  5872.,  4580.,  5224.,  5868.,  6512.,  5206.,  5924.,  6642.,  7360.,  5808.,  6624.,  7440.,  8256.,  6418.,  7324.,  8230.,  9136.,  7260.,  8280.,  9300., 10320.,  8110.,  9236., 10362., 11488.,  8262.,  9428., 10594., 11760.,  7966.,  9108., 10250., 11392.,  8278.,  9428., 10578., 11728.,  7260.,  8280.,  9300., 10320.,  6458.,  7388.,  8318.,  9248.,  5808.,  6624.,  7440.,  8256.,  5374.,  6116.,  6858.,  7600.,  4580.,  5224.,  5868.,  6512.,  5090.,  5812.,  6534.,  7256.,  5703.,  6526.,  7349.,  8172.,  6712.,  7664.,  8616.,  9568.,  7525.,  8570.,  9615., 10660.,  8222.,  9388., 10554., 11720.,  9075., 10358., 11641., 12924.,  9423., 10758., 12093., 13428.,  9579., 10902., 12225., 13548.,  9319., 10662., 12005., 13348.,  8606.,  9804., 11002., 12200.,  7753.,  8842.,  9931., 11020.,  6840.,  7792.,  8744.,  9696.,  5787.,  6638.,  7489.,  8340.,  5186.,  5908.,  6630.,  7352.,  5808.,  6624.,  7440.,  8256.,  6792.,  7728.,  8664.,  9600.,  7744.,  8832.,  9920., 11008.,  8472.,  9680., 10888., 12096.,  9680., 11040., 12400., 13760., 10664., 12144., 13624., 15104., 10632., 12144., 13656., 15168., 10408., 11888., 13368., 14848., 10888., 12400., 13912., 15424.,  9680., 11040., 12400., 13760.,  8696.,  9936., 11176., 12416.,  7744.,  8832.,  9920., 11008.,  7016.,  7984.,  8952.,  9920.,  5808.,  6624.,  7440.,  8256.,  6542.,  7468.,  8394.,  9320.,  7401.,  8458.,  9515., 10572.,  8648.,  9872., 11096., 12320.,  9819., 11182., 12545., 13908., 10866., 12404., 13942., 15480., 11837., 13522., 15207., 16892., 12257., 13986., 15715., 17444., 12133., 13810., 15487., 17164., 11689., 13378., 15067., 16756., 10802., 12308., 13814., 15320.,  9879., 11262., 12645., 14028.,  8776., 10000., 11224., 12448.,  7541.,  8634.,  9727., 10820.,  6638.,  7564.,  8490.,  9416.,  7484.,  8536.,  9588., 10640.,  8602.,  9788., 10974., 12160.,  9680., 11040., 12400., 13760., 10654., 12164., 13674., 15184., 12100., 13800., 15500., 17200., 13442., 15308., 17174., 19040., 13578., 15500., 17422., 19344., 13170., 15052., 16934., 18816., 13722., 15628., 17534., 19440., 12100., 13800., 15500., 17200., 10806., 12356., 13906., 15456.,  9680., 11040., 12400., 13760.,  8882., 10108., 11334., 12560.,  7484.,  8536.,  9588., 10640.,  7994.,  9124., 10254., 11384.,  8971., 10262., 11553., 12844., 10584., 12080., 13576., 15072., 11889., 13538., 15187., 16836., 13062., 14908., 16754., 18600., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 13446., 15324., 17202., 19080., 12229., 13938., 15647., 17356., 10712., 12208., 13704., 15200.,  9167., 10502., 11837., 13172.,  8090.,  9220., 10350., 11480.,  7882.,  8996., 10110., 11224.,  9331., 10614., 11897., 13180., 10584., 12080., 13576., 15072., 11593., 13250., 14907., 16564., 13174., 15036., 16898., 18760., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 13558., 15452., 17346., 19240., 11933., 13650., 15367., 17084., 10712., 12208., 13704., 15200.,  9527., 10854., 12181., 13508.,  7978.,  9092., 10206., 11320.,  7770.,  8868.,  9966., 11064.,  8923., 10198., 11473., 12748., 10584., 12080., 13576., 15072., 12065., 13730., 15395., 17060., 13286., 15164., 17042., 18920., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 13222., 15068., 16914., 18760., 12053., 13746., 15439., 17132., 10712., 12208., 13704., 15200.,  9119., 10438., 11757., 13076.,  7866.,  8964., 10062., 11160.,  8106.,  9252., 10398., 11544.,  9379., 10678., 11977., 13276., 10584., 12080., 13576., 15072., 11769., 13442., 15115., 16788., 13398., 15292., 17186., 19080., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 13334., 15196., 17058., 18920., 11757., 13458., 15159., 16860., 10712., 12208., 13704., 15200.,  9575., 10918., 12261., 13604.,  8202.,  9348., 10494., 11640.,  7484.,  8536.,  9588., 10640.,  8282.,  9468., 10654., 11840.,  9680., 11040., 12400., 13760., 10846., 12356., 13866., 15376., 12100., 13800., 15500., 17200., 13122., 14988., 16854., 18720., 13770., 15692., 17614., 19536., 13618., 15500., 17382., 19264., 13402., 15308., 17214., 19120., 12100., 13800., 15500., 17200., 11254., 12804., 14354., 15904.,  9680., 11040., 12400., 13760.,  8562.,  9788., 11014., 12240.,  7484.,  8536.,  9588., 10640.,  6654.,  7596.,  8538.,  9480.,  7745.,  8810.,  9875., 10940.,  8648.,  9872., 11096., 12320.,  9539., 10894., 12249., 13604., 10754., 12276., 13798., 15320., 11957., 13618., 15279., 16940., 11865., 13570., 15275., 16980., 11837., 13522., 15207., 16892., 12257., 13986., 15715., 17444., 11138., 12692., 14246., 15800.,  9695., 11102., 12509., 13916.,  8776., 10000., 11224., 12448.,  7885.,  8986., 10087., 11188.,  6750.,  7692.,  8634.,  9576.,  5808.,  6624.,  7440.,  8256.,  6536.,  7472.,  8408.,  9344.,  7744.,  8832.,  9920., 11008.,  8728.,  9936., 11144., 12352.,  9680., 11040., 12400., 13760., 10408., 11888., 13368., 14848., 10888., 12400., 13912., 15424., 10664., 12144., 13624., 15104., 10632., 12144., 13656., 15168.,  9680., 11040., 12400., 13760.,  8952., 10192., 11432., 12672.,  7744.,  8832.,  9920., 11008.,  6760.,  7728.,  8696.,  9664.,  5808.,  6624.,  7440.,  8256.,  5202.,  5940.,  6678.,  7416.,  5983.,  6814.,  7645.,  8476.,  6712.,  7664.,  8616.,  9568.,  7533.,  8602.,  9671., 10740.,  8558.,  9772., 10986., 12200.,  9579., 10902., 12225., 13548.,  9319., 10662., 12005., 13348.,  9123., 10422., 11721., 13020.,  9375., 10694., 12013., 13332.,  8494.,  9676., 10858., 12040.,  7409.,  8490.,  9571., 10652.,  6840.,  7792.,  8744.,  9696.,  6067.,  6926.,  7785.,  8644.,  5298.,  6036.,  6774.,  7512.,  4580.,  5224.,  5868.,  6512.,  5014.,  5732.,  6450.,  7168.,  5808.,  6624.,  7440.,  8256.,  6482.,  7388.,  8294.,  9200.,  7260.,  8280.,  9300., 10320.,  7918.,  9044., 10170., 11296.,  8326.,  9492., 10658., 11824.,  8286.,  9428., 10570., 11712.,  8086.,  9236., 10386., 11536.,  7260.,  8280.,  9300., 10320.,  6778.,  7708.,  8638.,  9568.,  5808.,  6624.,  7440.,  8256.,  5182.,  5924.,  6666.,  7408.,  4580.,  5224.,  5868.,  6512.,  4132.,  4712.,  5292.,  5872.,  4982.,  5668.,  6354.,  7040.,  5808.,  6624.,  7440.,  8256.,  6290.,  7196.,  8102.,  9008.,  7260.,  8280.,  9300., 10320.,  7886.,  8980., 10074., 11168.,  7686.,  8788.,  9890., 10992.,  7646.,  8724.,  9802., 10880.,  8054.,  9172., 10290., 11408.,  7260.,  8280.,  9300., 10320.,  6586.,  7516.,  8446.,  9376.,  5808.,  6624.,  7440.,  8256.,  5150.,  5860.,  6570.,  7280.,  4132.,  4712.,  5292.,  5872.,  4866.,  5556.,  6246.,  6936.,  5655.,  6462.,  7269.,  8076.,  6712.,  7664.,  8616.,  9568.,  7701.,  8762.,  9823., 10884.,  8446.,  9644., 10842., 12040.,  9123., 10422., 11721., 13020.,  9375., 10694., 12013., 13332.,  9179., 10454., 11729., 13004.,  8919., 10214., 11509., 12804.,  8382.,  9548., 10714., 11880.,  7577.,  8650.,  9723., 10796.,  6840.,  7792.,  8744.,  9696.,  5739.,  6574.,  7409.,  8244.,  4962.,  5652.,  6342.,  7032.,  5808.,  6624.,  7440.,  8256.,  6792.,  7728.,  8664.,  9600.,  7744.,  8832.,  9920., 11008.,  8472.,  9680., 10888., 12096.,  9680., 11040., 12400., 13760., 10664., 12144., 13624., 15104., 10632., 12144., 13656., 15168., 10408., 11888., 13368., 14848., 10888., 12400., 13912., 15424.,  9680., 11040., 12400., 13760.,  8696.,  9936., 11176., 12416.,  7744.,  8832.,  9920., 11008.,  7016.,  7984.,  8952.,  9920.,  5808.,  6624.,  7440.,  8256.,  6318.,  7212.,  8106.,  9000.,  7225.,  8266.,  9307., 10348.,  8648.,  9872., 11096., 12320.,  9771., 11118., 12465., 13812., 10642., 12148., 13654., 15160., 11565., 13202., 14839., 16476., 11985., 13666., 15347., 17028., 11957., 13618., 15279., 16940., 11865., 13570., 15275., 16980., 11026., 12564., 14102., 15640.,  9927., 11326., 12725., 14124.,  8776., 10000., 11224., 12448.,  7365.,  8442.,  9519., 10596.,  6414.,  7308.,  8202.,  9096.,  7036.,  8024.,  9012., 10000.,  8378.,  9532., 10686., 11840.,  9680., 11040., 12400., 13760., 10526., 12036., 13546., 15056., 12100., 13800., 15500., 17200., 13218., 15052., 16886., 18720., 13002., 14860., 16718., 18576., 12850., 14668., 16486., 18304., 13498., 15372., 17246., 19120., 12100., 13800., 15500., 17200., 10934., 12484., 14034., 15584.,  9680., 11040., 12400., 13760.,  8658.,  9852., 11046., 12240.,  7036.,  8024.,  9012., 10000.,  7770.,  8868.,  9966., 11064.,  8923., 10198., 11473., 12748., 10584., 12080., 13576., 15072., 12065., 13730., 15395., 17060., 13286., 15164., 17042., 18920., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 13222., 15068., 16914., 18760., 12053., 13746., 15439., 17132., 10712., 12208., 13704., 15200.,  9119., 10438., 11757., 13076.,  7866.,  8964., 10062., 11160.,  8106.,  9252., 10398., 11544.,  9379., 10678., 11977., 13276., 10584., 12080., 13576., 15072., 11769., 13442., 15115., 16788., 13398., 15292., 17186., 19080., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 13334., 15196., 17058., 18920., 11757., 13458., 15159., 16860., 10712., 12208., 13704., 15200.,  9575., 10918., 12261., 13604.,  8202.,  9348., 10494., 11640.,  7994.,  9124., 10254., 11384.,  8971., 10262., 11553., 12844., 10584., 12080., 13576., 15072., 11889., 13538., 15187., 16836., 13062., 14908., 16754., 18600., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 13446., 15324., 17202., 19080., 12229., 13938., 15647., 17356., 10712., 12208., 13704., 15200.,  9167., 10502., 11837., 13172.,  8090.,  9220., 10350., 11480.,  7882.,  8996., 10110., 11224.,  9331., 10614., 11897., 13180., 10584., 12080., 13576., 15072., 11593., 13250., 14907., 16564., 13174., 15036., 16898., 18760., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 13558., 15452., 17346., 19240., 11933., 13650., 15367., 17084., 10712., 12208., 13704., 15200.,  9527., 10854., 12181., 13508.,  7978.,  9092., 10206., 11320.,  7036.,  8024.,  9012., 10000.,  8058.,  9212., 10366., 11520.,  9680., 11040., 12400., 13760., 10974., 12484., 13994., 15504., 12100., 13800., 15500., 17200., 12898., 14732., 16566., 18400., 13450., 15308., 17166., 19024., 13042., 14860., 16678., 18496., 13178., 15052., 16926., 18800., 12100., 13800., 15500., 17200., 11126., 12676., 14226., 15776.,  9680., 11040., 12400., 13760.,  8338.,  9532., 10726., 11920.,  7036.,  8024.,  9012., 10000.,  6430.,  7340.,  8250.,  9160.,  7569.,  8618.,  9667., 10716.,  8648.,  9872., 11096., 12320.,  9587., 10958., 12329., 13700., 10978., 12532., 14086., 15640., 12133., 13810., 15487., 17164., 11689., 13378., 15067., 16756., 11565., 13202., 14839., 16476., 11985., 13666., 15347., 17028., 10914., 12436., 13958., 15480.,  9647., 11038., 12429., 13820.,  8776., 10000., 11224., 12448.,  7709.,  8794.,  9879., 10964.,  6526.,  7436.,  8346.,  9256.,  5808.,  6624.,  7440.,  8256.,  6536.,  7472.,  8408.,  9344.,  7744.,  8832.,  9920., 11008.,  8728.,  9936., 11144., 12352.,  9680., 11040., 12400., 13760., 10408., 11888., 13368., 14848., 10888., 12400., 13912., 15424., 10664., 12144., 13624., 15104., 10632., 12144., 13656., 15168.,  9680., 11040., 12400., 13760.,  8952., 10192., 11432., 12672.,  7744.,  8832.,  9920., 11008.,  6760.,  7728.,  8696.,  9664.,  5808.,  6624.,  7440.,  8256.,  4978.,  5684.,  6390.,  7096.,  5935.,  6750.,  7565.,  8380.,  6712.,  7664.,  8616.,  9568.,  7357.,  8410.,  9463., 10516.,  8334.,  9516., 10698., 11880.,  9179., 10454., 11729., 13004.,  8919., 10214., 11509., 12804.,  9075., 10358., 11641., 12924.,  9423., 10758., 12093., 13428.,  8718.,  9932., 11146., 12360.,  7585.,  8682.,  9779., 10876.,  6840.,  7792.,  8744.,  9696.,  6019.,  6862.,  7705.,  8548.,  5074.,  5780.,  6486.,  7192.,  4132.,  4712.,  5292.,  5872.,  4790.,  5476.,  6162.,  6848.,  5808.,  6624.,  7440.,  8256.,  6610.,  7516.,  8422.,  9328.,  7260.,  8280.,  9300., 10320.,  7694.,  8788.,  9882., 10976.,  8006.,  9108., 10210., 11312.,  7710.,  8788.,  9866., 10944.,  7862.,  8980., 10098., 11216.,  7260.,  8280.,  9300., 10320.,  6650.,  7580.,  8510.,  9440.,  5808.,  6624.,  7440.,  8256.,  4958.,  5668.,  6378.,  7088.,  4132.,  4712.,  5292.,  5872.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x14x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14327., 16366., 18405., 20444., 14819., 16894., 18969., 21044., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140., 14911., 16974., 19037., 21100., 14635., 16734., 18833., 20932., 14511., 16526., 18541., 20556., 14235., 16286., 18337., 20388., 14279., 16302., 18325., 20348., 14867., 16958., 19049., 21140.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 16.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x14x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5580.,  6302.,  7440.,  8226.,  9300., 10150., 10590., 10150., 10590.,  9620.,  8730.,  7696.,  6870.,  5772.,  5160.,  5660.,  6880.,  7380.,  8600.,  9100.,  9820.,  9100.,  9820.,  8600.,  8100.,  6880.,  6380.,  5160.,  4548.,  5170.,  6064.,  6750.,  7580.,  8330.,  8626.,  8330.,  8626.,  7900.,  7110.,  6320.,  5594.,  4740.,  4128.,  4528.,  5504.,  5904.,  6880.,  7280.,  7856.,  7280.,  7856.,  6880.,  6480.,  5504.,  5104.,  4128.,  3516.,  4038.,  4688.,  5274.,  5860.,  6510.,  6662.,  6510.,  6662.,  6180.,  5490.,  4944.,  4318.,  3708.,  3096.,  3396.,  4128.,  4428.,  5160.,  5460.,  5892.,  5460.,  5892.,  5160.,  4860.,  4128.,  3828.,  3096.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x14x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590., 10150., 10590.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x14x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  5412.,  6600.,  5962.,  7260.,  7216.,  8800.,  7766.,  9460.,  9020., 11000.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9020., 11000.,  8470., 10340.,  7216.,  8800.,  6666.,  8140.,  5412.,  6600.,  4920.,  6000.,  5420.,  6600.,  6560.,  8000.,  7060.,  8600.,  8200., 10000.,  8700., 10600.,  9340., 11400.,  8700., 10600.,  9340., 11400.,  8200., 10000.,  7700.,  9400.,  6560.,  8000.,  6060.,  7400.,  4920.,  6000.,  4428.,  5400.,  4878.,  5940.,  5904.,  7200.,  6354.,  7740.,  7380.,  9000.,  7830.,  9540.,  8406., 10260.,  7830.,  9540.,  8406., 10260.,  7380.,  9000.,  6930.,  8460.,  5904.,  7200.,  5454.,  6660.,  4428.,  5400.,  3936.,  4800.,  4336.,  5280.,  5248.,  6400.,  5648.,  6880.,  6560.,  8000.,  6960.,  8480.,  7472.,  9120.,  6960.,  8480.,  7472.,  9120.,  6560.,  8000.,  6160.,  7520.,  5248.,  6400.,  4848.,  5920.,  3936.,  4800.,  3444.,  4200.,  3794.,  4620.,  4592.,  5600.,  4942.,  6020.,  5740.,  7000.,  6090.,  7420.,  6538.,  7980.,  6090.,  7420.,  6538.,  7980.,  5740.,  7000.,  5390.,  6580.,  4592.,  5600.,  4242.,  5180.,  3444.,  4200.,  2952.,  3600.,  3252.,  3960.,  3936.,  4800.,  4236.,  5160.,  4920.,  6000.,  5220.,  6360.,  5604.,  6840.,  5220.,  6360.,  5604.,  6840.,  4920.,  6000.,  4620.,  5640.,  3936.,  4800.,  3636.,  4440.,  2952.,  3600.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x14x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.,  9570., 11660., 10274., 12540.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, SAME3x14x14x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3828.,  5016.,  6204.,  7392.,  4202.,  5500.,  6798.,  8096.,  5104.,  6688.,  8272.,  9856.,  5478.,  7172.,  8866., 10560.,  6380.,  8360., 10340., 12320.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6380.,  8360., 10340., 12320.,  6006.,  7876.,  9746., 11616.,  5104.,  6688.,  8272.,  9856.,  4730.,  6204.,  7678.,  9152.,  3828.,  5016.,  6204.,  7392.,  3480.,  4560.,  5640.,  6720.,  3820.,  5000.,  6180.,  7360.,  4640.,  6080.,  7520.,  8960.,  4980.,  6520.,  8060.,  9600.,  5800.,  7600.,  9400., 11200.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  6140.,  8040.,  9940., 11840.,  6620.,  8680., 10740., 12800.,  5800.,  7600.,  9400., 11200.,  5460.,  7160.,  8860., 10560.,  4640.,  6080.,  7520.,  8960.,  4300.,  5640.,  6980.,  8320.,  3480.,  4560.,  5640.,  6720.,  3132.,  4104.,  5076.,  6048.,  3438.,  4500.,  5562.,  6624.,  4176.,  5472.,  6768.,  8064.,  4482.,  5868.,  7254.,  8640.,  5220.,  6840.,  8460., 10080.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5526.,  7236.,  8946., 10656.,  5958.,  7812.,  9666., 11520.,  5220.,  6840.,  8460., 10080.,  4914.,  6444.,  7974.,  9504.,  4176.,  5472.,  6768.,  8064.,  3870.,  5076.,  6282.,  7488.,  3132.,  4104.,  5076.,  6048.,  2784.,  3648.,  4512.,  5376.,  3056.,  4000.,  4944.,  5888.,  3712.,  4864.,  6016.,  7168.,  3984.,  5216.,  6448.,  7680.,  4640.,  6080.,  7520.,  8960.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4912.,  6432.,  7952.,  9472.,  5296.,  6944.,  8592., 10240.,  4640.,  6080.,  7520.,  8960.,  4368.,  5728.,  7088.,  8448.,  3712.,  4864.,  6016.,  7168.,  3440.,  4512.,  5584.,  6656.,  2784.,  3648.,  4512.,  5376.,  2436.,  3192.,  3948.,  4704.,  2674.,  3500.,  4326.,  5152.,  3248.,  4256.,  5264.,  6272.,  3486.,  4564.,  5642.,  6720.,  4060.,  5320.,  6580.,  7840.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4298.,  5628.,  6958.,  8288.,  4634.,  6076.,  7518.,  8960.,  4060.,  5320.,  6580.,  7840.,  3822.,  5012.,  6202.,  7392.,  3248.,  4256.,  5264.,  6272.,  3010.,  3948.,  4886.,  5824.,  2436.,  3192.,  3948.,  4704.,  2088.,  2736.,  3384.,  4032.,  2292.,  3000.,  3708.,  4416.,  2784.,  3648.,  4512.,  5376.,  2988.,  3912.,  4836.,  5760.,  3480.,  4560.,  5640.,  6720.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3684.,  4824.,  5964.,  7104.,  3972.,  5208.,  6444.,  7680.,  3480.,  4560.,  5640.,  6720.,  3276.,  4296.,  5316.,  6336.,  2784.,  3648.,  4512.,  5376.,  2580.,  3384.,  4188.,  4992.,  2088.,  2736.,  3384.,  4032.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(ForwardWindow11Stride1, VALID3x14x14x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.,  6754.,  8844., 10934., 13024.,  7282.,  9548., 11814., 14080.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 8.0;
  this->run_forward_test(exp_out, in_shape, features, padding, max_input_val);
}