/*
 * Copyright Codeplay Software Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use these files except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// DO NOT MODIFY BY HAND
// This file was automatically generated by generate_conv2d_tests.py.
// Results calculated using Tensorflow v1.13.2.

#include <gtest/gtest.h>

#include "sycldnn/padding_mode.h"

#include "test/types/cartesian_product.h"
#include "test/types/kernel_data_types.h"
#include "test/types/nested_pairs_to_triple.h"
#include "test/types/test_backend_types.h"
#include "test/types/to_gtest_types.h"

#include "test/conv2d/selector_list.h"
#include "test/conv2d/window_stride_fixture.h"

#include <array>
#include <vector>

using DataTypeList = sycldnn::types::KernelDataTypes;
using Selectors = sycldnn::types::SelectorList;
using Backends = sycldnn::types::AllBackendTypes;

using SNNTypePairs =
    sycldnn::types::CartesianProduct<Selectors, DataTypeList>::type;
using BackendTypePairs =
    sycldnn::types::CartesianProduct<SNNTypePairs, Backends>::type;
using TestTriples = sycldnn::types::NestedPairsToTriple<BackendTypePairs>::type;

using GTestTypeTriples = sycldnn::types::ToGTestTypes<TestTriples>::type;


template <typename Pair>
using InputBackpropWindow7Stride4 = WindowStrideTest<Pair, 7, 4>;
TYPED_TEST_SUITE(InputBackpropWindow7Stride4, GTestTypeTriples);
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x11x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 17.,  18.,  49.,  52.,  55.,  36.,  83.,  88.,  93.,  54.,  57.,  24.,  25.,  70.,  73.,  76.,  50., 118., 123., 128.,  75.,  78.,  43.,  48., 116., 128., 140.,  84., 184., 200., 216., 120., 129.,  78.,  83., 200., 212., 224., 133., 296., 312., 328., 183., 192., 113., 118., 284., 296., 308., 182., 408., 424., 440., 246., 255.,  96., 100., 214., 223., 232., 125., 262., 273., 284., 150., 156., 145., 156., 320., 344., 368., 192., 388., 416., 444., 228., 243., 222., 233., 488., 512., 536., 283., 584., 612., 640., 333., 348., 299., 310., 656., 680., 704., 374., 780., 808., 836., 438., 453., 168., 175., 358., 373., 388., 200., 406., 423., 440., 225., 234., 217., 224., 463., 478., 493., 256., 525., 542., 559., 288., 297.};
  const std::array<int, 4> in_shape = {{ 1, 11, 11, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x11x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  1.,   2.,   3.,   4.,   7.,  10.,  13.,   8.,  10.,  12.,  14.,   8.,   9.,  10.,  11.,  28.,  31.,  34.,  22.,  24.,  26.,  28.,  15.,  16.,  17.,  18.,  49.,  52.,  55.,  36.,  38.,  40.,  42.,  22.,  23.,  24.,  25.,  70.,  73.,  76.,  50.,  52.,  54.,  56.,  32.,  36.,  40.,  44., 110., 120., 130.,  80.,  86.,  92.,  98.,  60.,  64.,  68.,  72., 180., 190., 200., 122., 128., 134., 140.,  88.,  92.,  96., 100., 250., 260., 270., 164., 170., 176., 182.,  66.,  69.,  72.,  75., 166., 173., 180., 100., 104., 108., 112.,  87.,  90.,  93.,  96., 215., 222., 229., 128., 132., 136., 140., 108., 111., 114., 117., 264., 271., 278., 156., 160., 164., 168., 129., 132., 135., 138., 313., 320., 327., 184., 188., 192., 196.};
  const std::array<int, 4> in_shape = {{ 1, 11, 11, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x11x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 101.,  107.,  320.,  340.,  360.,  249.,  588.,  624.,  660.,  391.,  413.,  143.,  149.,  460.,  480.,  500.,  347.,  840.,  876.,  912.,  545.,  567.,  268.,  304.,  772.,  860.,  948.,  588., 1308., 1428., 1548.,  872.,  940.,  520.,  556., 1388., 1476., 1564.,  952., 2148., 2268., 2388., 1348., 1416.,  772.,  808., 2004., 2092., 2180., 1316., 2988., 3108., 3228., 1824., 1892.,  713.,  743., 1600., 1668., 1736.,  941., 1980., 2064., 2148., 1139., 1185., 1072., 1156., 2380., 2564., 2748., 1440., 2916., 3132., 3348., 1724., 1840., 1660., 1744., 3668., 3852., 4036., 2140., 4428., 4644., 4860., 2536., 2652., 2248., 2332., 4956., 5140., 5324., 2840., 5940., 6156., 6372., 3348., 3464., 1283., 1337., 2740., 2856., 2972., 1535., 3120., 3252., 3384., 1733., 1803., 1661., 1715., 3552., 3668., 3784., 1969., 4044., 4176., 4308., 2223., 2293.};
  const std::array<int, 4> in_shape = {{ 1, 11, 11, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x11x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   40.,   60.,   80.,   53.,   67.,   81.,   95.,   47.,   53.,   59.,   65.,  180.,  200.,  220.,  151.,  165.,  179.,  193.,   89.,   95.,  101.,  107.,  320.,  340.,  360.,  249.,  263.,  277.,  291.,  131.,  137.,  143.,  149.,  460.,  480.,  500.,  347.,  361.,  375.,  389.,  190.,  218.,  246.,  274.,  728.,  800.,  872.,  558.,  602.,  646.,  690.,  386.,  414.,  442.,  470., 1232., 1304., 1376.,  866.,  910.,  954.,  998.,  582.,  610.,  638.,  666., 1736., 1808., 1880., 1174., 1218., 1262., 1306.,  479.,  501.,  523.,  545., 1220., 1272., 1324.,  743.,  773.,  803.,  833.,  633.,  655.,  677.,  699., 1584., 1636., 1688.,  953.,  983., 1013., 1043.,  787.,  809.,  831.,  853., 1948., 2000., 2052., 1163., 1193., 1223., 1253.,  941.,  963.,  985., 1007., 2312., 2364., 2416., 1373., 1403., 1433., 1463.};
  const std::array<int, 4> in_shape = {{ 1, 11, 11, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x11x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  670.,   710.,  2276.,  2420.,  2564.,  1838.,  4404.,  4676.,  4948.,  2966.,  3134.,   950.,   990.,  3284.,  3428.,  3572.,  2566.,  6308.,  6580.,  6852.,  4142.,  4310.,  1844.,  2116.,  4280.,  4952.,  5624.,  4372.,  6488.,  7416.,  8344.,  6628.,  1780.,  2468.,  2740.,  5656.,  6328.,  7000.,  3844.,  7608.,  8536.,  9464.,  4948.,  5476.,  4372.,  4644., 10360., 11032., 11704.,  6644., 14104., 15032., 15960.,  8644.,  9172.,  5486.,  5718., 12356., 12884., 13412.,  7294., 15380., 16036., 16692.,  8870.,  9230.,  8228.,  8884., 10904., 12344., 13784., 11140., 13112., 14808., 16504., 13396.,  2788.,  5396.,  6052., 11512., 12952., 14392.,  7156., 13464., 15160., 16856.,  8260.,  9172.,  9988., 10644., 21592., 23032., 24472., 12644., 25336., 27032., 28728., 14644., 15556., 10022., 10446., 21428., 22340., 23252., 12022., 24452., 25492., 26532., 13598., 14150., 12990., 13414., 14244., 15156., 16068., 15438., 16116., 17156., 18196., 17462.,   350.};
  const std::array<int, 4> in_shape = {{ 1, 11, 11, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 128.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x11x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   260.,   404.,   548.,   382.,   486.,   590.,   694.,   310.,   350.,   390.,   430.,  1268.,  1412.,  1556.,  1110.,  1214.,  1318.,  1422.,   590.,   630.,   670.,   710.,  2276.,  2420.,  2564.,  1838.,  1942.,  2046.,  2150.,   870.,   910.,   950.,   990.,  3284.,  3428.,  3572.,  2566.,  2670.,  2774.,  2878.,  1260.,  1468.,  1676.,  1884.,  5224.,  5768.,  6312.,  4140.,  4476.,  4812.,  5148.,  2716.,  2924.,  3132.,  3340.,  9032.,  9576., 10120.,  6492.,  6828.,  7164.,  7500.,  4172.,  4380.,  4588.,  4796., 12840., 13384., 13928.,  8844.,  9180.,  9516.,  9852.,  3638.,  3806.,  3974.,  4142.,  9332.,  9732., 10132.,  5718.,  5950.,  6182.,  6414.,  4814.,  4982.,  5150.,  5318., 12132., 12532., 12932.,  7342.,  7574.,  7806.,  8038.,  5990.,  6158.,  6326.,  6494., 14932., 15332., 15732.,  8966.,  9198.,  9430.,  9662.,  7166.,  7334.,  7502.,  7670., 17732., 18132., 18532., 10590., 10822., 11054., 11286.};
  const std::array<int, 4> in_shape = {{ 1, 11, 11, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x11x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,  161.,  166.,  171.,  176.,  181.,  186.,  105.,  108.,  111.,  114.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  231.,  236.,  241.,  246.,  251.,  256.,  147.,  150.,  153.,  156.,   81.,   86.,   91.,   96.,  220.,  232.,  244.,  256.,  268.,  280.,  161.,  168.,  352.,  368.,  384.,  400.,  416.,  432.,  231.,  240.,  249.,  258.,  151.,  156.,  161.,  166.,  388.,  400.,  412.,  424.,  436.,  448.,  259.,  266.,  576.,  592.,  608.,  624.,  640.,  656.,  357.,  366.,  375.,  384.,  221.,  226.,  231.,  236.,  556.,  568.,  580.,  592.,  604.,  616.,  357.,  364.,  800.,  816.,  832.,  848.,  864.,  880.,  483.,  492.,  501.,  510.,  188.,  192.,  196.,  200.,  419.,  428.,  437.,  446.,  455.,  464.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  306.,  312.,  279.,  290.,  301.,  312.,  616.,  640.,  664.,  688.,  712.,  736.,  371.,  384.,  748.,  776.,  804.,  832.,  860.,  888.,  441.,  456.,  471.,  486.,  433.,  444.,  455.,  466.,  952.,  976., 1000., 1024., 1048., 1072.,  553.,  566., 1140., 1168., 1196., 1224., 1252., 1280.,  651.,  666.,  681.,  696.,  587.,  598.,  609.,  620., 1288., 1312., 1336., 1360., 1384., 1408.,  735.,  748., 1532., 1560., 1588., 1616., 1644., 1672.,  861.,  876.,  891.,  906.,  329.,  336.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  795.,  812.,  829.,  846.,  863.,  880.,  441.,  450.,  459.,  468.,  427.,  434.,  441.,  448.,  911.,  926.,  941.,  956.,  971.,  986.,  504.,  512., 1033., 1050., 1067., 1084., 1101., 1118.,  567.,  576.,  585.,  594.};
  const std::array<int, 4> in_shape = {{ 1, 11, 11, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x11x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,  11.,  14.,  17.,  20.,  23.,  26.,  14.,  16.,  18.,  20.,  22.,  24.,  26.,  28.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  53.,  56.,  59.,  62.,  65.,  68.,  42.,  44.,  46.,  48.,  50.,  52.,  54.,  56.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,  95.,  98., 101., 104., 107., 110.,  70.,  72.,  74.,  76.,  78.,  80.,  82.,  84.,  43.,  44.,  45.,  46.,  47.,  48.,  49.,  50., 137., 140., 143., 146., 149., 152.,  98., 100., 102., 104., 106., 108., 110., 112.,  60.,  64.,  68.,  72.,  76.,  80.,  84.,  88., 210., 220., 230., 240., 250., 260., 154., 160., 166., 172., 178., 184., 190., 196., 116., 120., 124., 128., 132., 136., 140., 144., 350., 360., 370., 380., 390., 400., 238., 244., 250., 256., 262., 268., 274., 280., 172., 176., 180., 184., 188., 192., 196., 200., 490., 500., 510., 520., 530., 540., 322., 328., 334., 340., 346., 352., 358., 364., 129., 132., 135., 138., 141., 144., 147., 150., 325., 332., 339., 346., 353., 360., 196., 200., 204., 208., 212., 216., 220., 224., 171., 174., 177., 180., 183., 186., 189., 192., 423., 430., 437., 444., 451., 458., 252., 256., 260., 264., 268., 272., 276., 280., 213., 216., 219., 222., 225., 228., 231., 234., 521., 528., 535., 542., 549., 556., 308., 312., 316., 320., 324., 328., 332., 336., 255., 258., 261., 264., 267., 270., 273., 276., 619., 626., 633., 640., 647., 654., 364., 368., 372., 376., 380., 384., 388., 392.};
  const std::array<int, 4> in_shape = {{ 1, 11, 11, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x11x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  197.,   203.,   209.,   215.,   624.,   644.,   664.,   684.,   704.,   724.,   487.,   501.,  1148.,  1184.,  1220.,  1256.,  1292.,  1328.,   765.,   787.,   809.,   831.,   281.,   287.,   293.,   299.,   904.,   924.,   944.,   964.,   984.,  1004.,   683.,   697.,  1652.,  1688.,  1724.,  1760.,  1796.,  1832.,  1073.,  1095.,  1117.,  1139.,   508.,   544.,   580.,   616.,  1476.,  1564.,  1652.,  1740.,  1828.,  1916.,  1136.,  1188.,  2524.,  2644.,  2764.,  2884.,  3004.,  3124.,  1692.,  1760.,  1828.,  1896.,  1012.,  1048.,  1084.,  1120.,  2708.,  2796.,  2884.,  2972.,  3060.,  3148.,  1864.,  1916.,  4204.,  4324.,  4444.,  4564.,  4684.,  4804.,  2644.,  2712.,  2780.,  2848.,  1516.,  1552.,  1588.,  1624.,  3940.,  4028.,  4116.,  4204.,  4292.,  4380.,  2592.,  2644.,  5884.,  6004.,  6124.,  6244.,  6364.,  6484.,  3596.,  3664.,  3732.,  3800.,  1403.,  1433.,  1463.,  1493.,  3148.,  3216.,  3284.,  3352.,  3420.,  3488.,  1853.,  1891.,  3896.,  3980.,  4064.,  4148.,  4232.,  4316.,  2243.,  2289.,  2335.,  2381.,  2080.,  2164.,  2248.,  2332.,  4620.,  4804.,  4988.,  5172.,  5356.,  5540.,  2804.,  2904.,  5668.,  5884.,  6100.,  6316.,  6532.,  6748.,  3360.,  3476.,  3592.,  3708.,  3256.,  3340.,  3424.,  3508.,  7196.,  7380.,  7564.,  7748.,  7932.,  8116.,  4204.,  4304.,  8692.,  8908.,  9124.,  9340.,  9556.,  9772.,  4984.,  5100.,  5216.,  5332.,  4432.,  4516.,  4600.,  4684.,  9772.,  9956., 10140., 10324., 10508., 10692.,  5604.,  5704., 11716., 11932., 12148., 12364., 12580., 12796.,  6608.,  6724.,  6840.,  6956.,  2525.,  2579.,  2633.,  2687.,  5392.,  5508.,  5624.,  5740.,  5856.,  5972.,  3023.,  3085.,  6140.,  6272.,  6404.,  6536.,  6668.,  6800.,  3413.,  3483.,  3553.,  3623.,  3281.,  3335.,  3389.,  3443.,  7016.,  7132.,  7248.,  7364.,  7480.,  7596.,  3891.,  3953.,  7988.,  8120.,  8252.,  8384.,  8516.,  8648.,  4393.,  4463.,  4533.,  4603.};
  const std::array<int, 4> in_shape = {{ 1, 11, 11, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x11x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   29.,   35.,   41.,   47.,   64.,   84.,  104.,  124.,  144.,  164.,   95.,  109.,  123.,  137.,  151.,  165.,  179.,  193.,   89.,   95.,  101.,  107.,  113.,  119.,  125.,  131.,  344.,  364.,  384.,  404.,  424.,  444.,  291.,  305.,  319.,  333.,  347.,  361.,  375.,  389.,  173.,  179.,  185.,  191.,  197.,  203.,  209.,  215.,  624.,  644.,  664.,  684.,  704.,  724.,  487.,  501.,  515.,  529.,  543.,  557.,  571.,  585.,  257.,  263.,  269.,  275.,  281.,  287.,  293.,  299.,  904.,  924.,  944.,  964.,  984., 1004.,  683.,  697.,  711.,  725.,  739.,  753.,  767.,  781.,  358.,  386.,  414.,  442.,  470.,  498.,  526.,  554., 1400., 1472., 1544., 1616., 1688., 1760., 1082., 1126., 1170., 1214., 1258., 1302., 1346., 1390.,  750.,  778.,  806.,  834.,  862.,  890.,  918.,  946., 2408., 2480., 2552., 2624., 2696., 2768., 1698., 1742., 1786., 1830., 1874., 1918., 1962., 2006., 1142., 1170., 1198., 1226., 1254., 1282., 1310., 1338., 3416., 3488., 3560., 3632., 3704., 3776., 2314., 2358., 2402., 2446., 2490., 2534., 2578., 2622.,  941.,  963.,  985., 1007., 1029., 1051., 1073., 1095., 2400., 2452., 2504., 2556., 2608., 2660., 1463., 1493., 1523., 1553., 1583., 1613., 1643., 1673., 1249., 1271., 1293., 1315., 1337., 1359., 1381., 1403., 3128., 3180., 3232., 3284., 3336., 3388., 1883., 1913., 1943., 1973., 2003., 2033., 2063., 2093., 1557., 1579., 1601., 1623., 1645., 1667., 1689., 1711., 3856., 3908., 3960., 4012., 4064., 4116., 2303., 2333., 2363., 2393., 2423., 2453., 2483., 2513., 1865., 1887., 1909., 1931., 1953., 1975., 1997., 2019., 4584., 4636., 4688., 4740., 4792., 4844., 2723., 2753., 2783., 2813., 2843., 2873., 2903., 2933.};
  const std::array<int, 4> in_shape = {{ 1, 11, 11, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x11x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,  1508.,  1652.,  1796.,  1940.,   420.,   564.,   278.,   382.,  2612.,  2884.,  3156.,  3428.,  1012.,  1284.,   446.,   614.,   782.,   950.,   590.,   630.,    30.,    70.,  1220.,  1364.,  1508.,  1652.,  1796.,  1940.,    70.,   174.,  2068.,  2340.,  2612.,  2884.,  3156.,  3428.,   110.,   278.,   446.,   614.,  1588.,  1860.,  2132.,  2404.,  3128.,  3800.,  4472.,  5144.,  5816.,  6488.,  3492.,  3892.,  4312.,  5240.,  6168.,  7096.,  8024.,  8952.,  4852.,  5380.,  3220.,  3748.,  1044.,  1316.,  1588.,  1860.,  7160.,  7832.,  3128.,  3800.,  4472.,  5144.,  2692.,  3092.,  9880., 10808.,  4312.,  5240.,  6168.,  7096.,  3796.,  4324.,  4852.,  5380.,   500.,   772.,  1044.,  1316.,  5816.,  6488.,  7160.,  7832.,  3128.,  3800.,  1892.,  2292.,  8024.,  8952.,  9880., 10808.,  4312.,  5240.,  2740.,  3268.,  3796.,  4324.,  3398.,  3630.,   150.,   382.,  3764.,  4292.,  4820.,  5348.,  5876.,  6404.,   190.,   486.,  4612.,  5268.,  5924.,  6580.,  7236.,  7892.,   230.,   590.,   950.,  1310.,  4900.,  5556.,  6212.,  6868.,  6680.,  8120.,  9560., 11000., 12440., 13880.,  7572.,  8356.,  7864.,  9560., 11256., 12952., 14648., 16344.,  8932.,  9844.,  4996.,  5908.,  3588.,  4244.,  4900.,  5556., 15320., 16760.,  6680.,  8120.,  9560., 11000.,  6004.,  6788., 18040., 19736.,  7864.,  9560., 11256., 12952.,  7108.,  8020.,  8932.,  9844.,  2276.,  2932.,  3588.,  4244., 12440., 13880., 15320., 16760.,  6680.,  8120.,  4436.,  5220., 14648., 16344., 18040., 19736.,  7864.,  9560.,  5284.,  6196.,  7108.,  8020.,  6206.,  6630.,   270.,   694.,  6308.,  7220.,  8132.,  9044.,  9956., 10868.,   310.,   798.,  7156.,  8196.,  9236., 10276., 11316., 12356.,   350.,   902.,  1454.,  2006.,  5358.,  5782.,  6206.,  6630.,  4484.,  5396.,  6308.,  7220.,  8132.,  9044.,  7142.,  7630.,  5076.,  6116.,  7156.,  8196.,  9236., 10276.,  8078.,  8630.,   350.,   902.};
  const std::array<int, 4> in_shape = {{ 1, 11, 11, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x11x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   420.,   564.,   708.,   852.,   996.,  1140.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,   590.,   630.,   670.,   710.,   750.,   790.,   830.,   870.,  2436.,  2580.,  2724.,  2868.,  3012.,  3156.,  2150.,  2254.,  2358.,  2462.,  2566.,  2670.,  2774.,  2878.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  4452.,  4596.,  4740.,  4884.,  5028.,  5172.,  3606.,  3710.,  3814.,  3918.,  4022.,  4126.,  4230.,  4334.,  1710.,  1750.,  1790.,  1830.,  1870.,  1910.,  1950.,  1990.,  6468.,  6612.,  6756.,  6900.,  7044.,  7188.,  5062.,  5166.,  5270.,  5374.,  5478.,  5582.,  5686.,  5790.,  2380.,  2588.,  2796.,  3004.,  3212.,  3420.,  3628.,  3836.,  7528.,  8072.,  8616.,  9160.,  9704., 10248.,  8060.,  8396.,  2076.,  2412.,  2748.,  3084.,  3420.,  3756.,  2732.,  2940.,  3148.,  3356.,  3564.,  3772.,  3980.,  4188.,  8488.,  9032.,  9576., 10120., 10664., 11208.,  6108.,  6444.,  6780.,  7116.,  7452.,  7788.,  8124.,  8460.,  5644.,  5852.,  6060.,  6268.,  6476.,  6684.,  6892.,  7100., 16104., 16648., 17192., 17736., 18280., 18824., 10812., 11148., 11484., 11820., 12156., 12492., 12828., 13164.,  7166.,  7334.,  7502.,  7670.,  7838.,  8006.,  8174.,  8342., 18404., 18804., 19204., 19604., 20004., 20404., 11286., 11518., 11750., 11982., 12214., 12446., 12678., 12910.,  9518.,  9686.,  9854., 10022., 10190., 10358., 10526., 10694., 13252., 13652., 14052., 14452., 14852., 15252., 14534., 14766.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  4004.,  4404.,  4804.,  5204.,  5604.,  6004.,  2934.,  3166.,  3398.,  3630.,  3862.,  4094.,  4326.,  4558.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  9604., 10004., 10404., 10804., 11204., 11604.,  6182.,  6414.,  6646.,  6878.,  7110.,  7342.,  7574.,  7806.};
  const std::array<int, 4> in_shape = {{ 1, 11, 11, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x11x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  317.,  322.,  327.,  332.,  337.,  342.,  347.,  352.,  357.,  362.,  367.,  372.,  207.,  210.,  213.,  216.,  219.,  222.,  225.,  228.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  457.,  462.,  467.,  472.,  477.,  482.,  487.,  492.,  497.,  502.,  507.,  512.,  291.,  294.,  297.,  300.,  303.,  306.,  309.,  312.,  157.,  162.,  167.,  172.,  177.,  182.,  187.,  192.,  428.,  440.,  452.,  464.,  476.,  488.,  500.,  512.,  524.,  536.,  548.,  560.,  315.,  322.,  329.,  336.,  688.,  704.,  720.,  736.,  752.,  768.,  784.,  800.,  816.,  832.,  848.,  864.,  453.,  462.,  471.,  480.,  489.,  498.,  507.,  516.,  297.,  302.,  307.,  312.,  317.,  322.,  327.,  332.,  764.,  776.,  788.,  800.,  812.,  824.,  836.,  848.,  860.,  872.,  884.,  896.,  511.,  518.,  525.,  532., 1136., 1152., 1168., 1184., 1200., 1216., 1232., 1248., 1264., 1280., 1296., 1312.,  705.,  714.,  723.,  732.,  741.,  750.,  759.,  768.,  437.,  442.,  447.,  452.,  457.,  462.,  467.,  472., 1100., 1112., 1124., 1136., 1148., 1160., 1172., 1184., 1196., 1208., 1220., 1232.,  707.,  714.,  721.,  728., 1584., 1600., 1616., 1632., 1648., 1664., 1680., 1696., 1712., 1728., 1744., 1760.,  957.,  966.,  975.,  984.,  993., 1002., 1011., 1020.,  372.,  376.,  380.,  384.,  388.,  392.,  396.,  400.,  829.,  838.,  847.,  856.,  865.,  874.,  883.,  892.,  901.,  910.,  919.,  928.,  485.,  490.,  495.,  500., 1015., 1026., 1037., 1048., 1059., 1070., 1081., 1092., 1103., 1114., 1125., 1136.,  582.,  588.,  594.,  600.,  606.,  612.,  618.,  624.,  547.,  558.,  569.,  580.,  591.,  602.,  613.,  624., 1208., 1232., 1256., 1280., 1304., 1328., 1352., 1376., 1400., 1424., 1448., 1472.,  729.,  742.,  755.,  768., 1468., 1496., 1524., 1552., 1580., 1608., 1636., 1664., 1692., 1720., 1748., 1776.,  867.,  882.,  897.,  912.,  927.,  942.,  957.,  972.,  855.,  866.,  877.,  888.,  899.,  910.,  921.,  932., 1880., 1904., 1928., 1952., 1976., 2000., 2024., 2048., 2072., 2096., 2120., 2144., 1093., 1106., 1119., 1132., 2252., 2280., 2308., 2336., 2364., 2392., 2420., 2448., 2476., 2504., 2532., 2560., 1287., 1302., 1317., 1332., 1347., 1362., 1377., 1392., 1163., 1174., 1185., 1196., 1207., 1218., 1229., 1240., 2552., 2576., 2600., 2624., 2648., 2672., 2696., 2720., 2744., 2768., 2792., 2816., 1457., 1470., 1483., 1496., 3036., 3064., 3092., 3120., 3148., 3176., 3204., 3232., 3260., 3288., 3316., 3344., 1707., 1722., 1737., 1752., 1767., 1782., 1797., 1812.,  651.,  658.,  665.,  672.,  679.,  686.,  693.,  700., 1387., 1402., 1417., 1432., 1447., 1462., 1477., 1492., 1507., 1522., 1537., 1552.,  776.,  784.,  792.,  800., 1573., 1590., 1607., 1624., 1641., 1658., 1675., 1692., 1709., 1726., 1743., 1760.,  873.,  882.,  891.,  900.,  909.,  918.,  927.,  936.,  847.,  854.,  861.,  868.,  875.,  882.,  889.,  896., 1807., 1822., 1837., 1852., 1867., 1882., 1897., 1912., 1927., 1942., 1957., 1972., 1000., 1008., 1016., 1024., 2049., 2066., 2083., 2100., 2117., 2134., 2151., 2168., 2185., 2202., 2219., 2236., 1125., 1134., 1143., 1152., 1161., 1170., 1179., 1188.};
  const std::array<int, 4> in_shape = {{ 1, 11, 11, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x11x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,    9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   19.,   22.,   25.,   28.,   31.,   34.,   37.,   40.,   43.,   46.,   49.,   52.,   26.,   28.,   30.,   32.,   34.,   36.,   38.,   40.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,  103.,  106.,  109.,  112.,  115.,  118.,  121.,  124.,  127.,  130.,  133.,  136.,   82.,   84.,   86.,   88.,   90.,   92.,   94.,   96.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,   57.,   58.,   59.,   60.,   61.,   62.,   63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  146.,  148.,  150.,  152.,  154.,  156.,  158.,  160.,  162.,  164.,  166.,  168.,   85.,   86.,   87.,   88.,   89.,   90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  202.,  204.,  206.,  208.,  210.,  212.,  214.,  216.,  218.,  220.,  222.,  224.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  148.,  152.,  156.,  160.,  164.,  168.,  172.,  176.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  302.,  308.,  314.,  320.,  326.,  332.,  338.,  344.,  350.,  356.,  362.,  368.,  374.,  380.,  386.,  392.,  228.,  232.,  236.,  240.,  244.,  248.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,  284.,  288.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  470.,  476.,  482.,  488.,  494.,  500.,  506.,  512.,  518.,  524.,  530.,  536.,  542.,  548.,  554.,  560.,  340.,  344.,  348.,  352.,  356.,  360.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,  396.,  400.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080.,  638.,  644.,  650.,  656.,  662.,  668.,  674.,  680.,  686.,  692.,  698.,  704.,  710.,  716.,  722.,  728.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  279.,  282.,  285.,  288.,  291.,  294.,  297.,  300.,  643.,  650.,  657.,  664.,  671.,  678.,  685.,  692.,  699.,  706.,  713.,  720.,  388.,  392.,  396.,  400.,  404.,  408.,  412.,  416.,  420.,  424.,  428.,  432.,  436.,  440.,  444.,  448.,  339.,  342.,  345.,  348.,  351.,  354.,  357.,  360.,  363.,  366.,  369.,  372.,  375.,  378.,  381.,  384.,  839.,  846.,  853.,  860.,  867.,  874.,  881.,  888.,  895.,  902.,  909.,  916.,  500.,  504.,  508.,  512.,  516.,  520.,  524.,  528.,  532.,  536.,  540.,  544.,  548.,  552.,  556.,  560.,  423.,  426.,  429.,  432.,  435.,  438.,  441.,  444.,  447.,  450.,  453.,  456.,  459.,  462.,  465.,  468., 1035., 1042., 1049., 1056., 1063., 1070., 1077., 1084., 1091., 1098., 1105., 1112.,  612.,  616.,  620.,  624.,  628.,  632.,  636.,  640.,  644.,  648.,  652.,  656.,  660.,  664.,  668.,  672.,  507.,  510.,  513.,  516.,  519.,  522.,  525.,  528.,  531.,  534.,  537.,  540.,  543.,  546.,  549.,  552., 1231., 1238., 1245., 1252., 1259., 1266., 1273., 1280., 1287., 1294., 1301., 1308.,  724.,  728.,  732.,  736.,  740.,  744.,  748.,  752.,  756.,  760.,  764.,  768.,  772.,  776.,  780.,  784.};
  const std::array<int, 4> in_shape = {{ 1, 11, 11, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x11x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  389.,   395.,   401.,   407.,   413.,   419.,   425.,   431.,  1232.,  1252.,  1272.,  1292.,  1312.,  1332.,  1352.,  1372.,  1392.,  1412.,  1432.,  1452.,   963.,   977.,   991.,  1005.,  2268.,  2304.,  2340.,  2376.,  2412.,  2448.,  2484.,  2520.,  2556.,  2592.,  2628.,  2664.,  1513.,  1535.,  1557.,  1579.,  1601.,  1623.,  1645.,  1667.,   557.,   563.,   569.,   575.,   581.,   587.,   593.,   599.,  1792.,  1812.,  1832.,  1852.,  1872.,  1892.,  1912.,  1932.,  1952.,  1972.,  1992.,  2012.,  1355.,  1369.,  1383.,  1397.,  3276.,  3312.,  3348.,  3384.,  3420.,  3456.,  3492.,  3528.,  3564.,  3600.,  3636.,  3672.,  2129.,  2151.,  2173.,  2195.,  2217.,  2239.,  2261.,  2283.,   988.,  1024.,  1060.,  1096.,  1132.,  1168.,  1204.,  1240.,  2884.,  2972.,  3060.,  3148.,  3236.,  3324.,  3412.,  3500.,  3588.,  3676.,  3764.,  3852.,  2232.,  2284.,  2336.,  2388.,  4956.,  5076.,  5196.,  5316.,  5436.,  5556.,  5676.,  5796.,  5916.,  6036.,  6156.,  6276.,  3332.,  3400.,  3468.,  3536.,  3604.,  3672.,  3740.,  3808.,  1996.,  2032.,  2068.,  2104.,  2140.,  2176.,  2212.,  2248.,  5348.,  5436.,  5524.,  5612.,  5700.,  5788.,  5876.,  5964.,  6052.,  6140.,  6228.,  6316.,  3688.,  3740.,  3792.,  3844.,  8316.,  8436.,  8556.,  8676.,  8796.,  8916.,  9036.,  9156.,  9276.,  9396.,  9516.,  9636.,  5236.,  5304.,  5372.,  5440.,  5508.,  5576.,  5644.,  5712.,  3004.,  3040.,  3076.,  3112.,  3148.,  3184.,  3220.,  3256.,  7812.,  7900.,  7988.,  8076.,  8164.,  8252.,  8340.,  8428.,  8516.,  8604.,  8692.,  8780.,  5144.,  5196.,  5248.,  5300., 11676., 11796., 11916., 12036., 12156., 12276., 12396., 12516., 12636., 12756., 12876., 12996.,  7140.,  7208.,  7276.,  7344.,  7412.,  7480.,  7548.,  7616.,  2783.,  2813.,  2843.,  2873.,  2903.,  2933.,  2963.,  2993.,  6244.,  6312.,  6380.,  6448.,  6516.,  6584.,  6652.,  6720.,  6788.,  6856.,  6924.,  6992.,  3677.,  3715.,  3753.,  3791.,  7728.,  7812.,  7896.,  7980.,  8064.,  8148.,  8232.,  8316.,  8400.,  8484.,  8568.,  8652.,  4451.,  4497.,  4543.,  4589.,  4635.,  4681.,  4727.,  4773.,  4096.,  4180.,  4264.,  4348.,  4432.,  4516.,  4600.,  4684.,  9100.,  9284.,  9468.,  9652.,  9836., 10020., 10204., 10388., 10572., 10756., 10940., 11124.,  5532.,  5632.,  5732.,  5832., 11172., 11388., 11604., 11820., 12036., 12252., 12468., 12684., 12900., 13116., 13332., 13548.,  6632.,  6748.,  6864.,  6980.,  7096.,  7212.,  7328.,  7444.,  6448.,  6532.,  6616.,  6700.,  6784.,  6868.,  6952.,  7036., 14252., 14436., 14620., 14804., 14988., 15172., 15356., 15540., 15724., 15908., 16092., 16276.,  8332.,  8432.,  8532.,  8632., 17220., 17436., 17652., 17868., 18084., 18300., 18516., 18732., 18948., 19164., 19380., 19596.,  9880.,  9996., 10112., 10228., 10344., 10460., 10576., 10692.,  8800.,  8884.,  8968.,  9052.,  9136.,  9220.,  9304.,  9388., 19404., 19588., 19772., 19956., 20140., 20324., 20508., 20692., 20876., 21060., 21244., 21428., 11132., 11232., 11332., 11432., 23268., 23484., 23700., 23916., 24132., 24348., 24564., 24780., 24996., 25212., 25428., 25644., 13128., 13244., 13360., 13476., 13592., 13708., 13824., 13940.,  5009.,  5063.,  5117.,  5171.,  5225.,  5279.,  5333.,  5387., 10696., 10812., 10928., 11044., 11160., 11276., 11392., 11508., 11624., 11740., 11856., 11972.,  5999.,  6061.,  6123.,  6185., 12180., 12312., 12444., 12576., 12708., 12840., 12972., 13104., 13236., 13368., 13500., 13632.,  6773.,  6843.,  6913.,  6983.,  7053.,  7123.,  7193.,  7263.,  6521.,  6575.,  6629.,  6683.,  6737.,  6791.,  6845.,  6899., 13944., 14060., 14176., 14292., 14408., 14524., 14640., 14756., 14872., 14988., 15104., 15220.,  7735.,  7797.,  7859.,  7921., 15876., 16008., 16140., 16272., 16404., 16536., 16668., 16800., 16932., 17064., 17196., 17328.,  8733.,  8803.,  8873.,  8943.,  9013.,  9083.,  9153.,  9223.};
  const std::array<int, 4> in_shape = {{ 1, 11, 11, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x11x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   29.,   35.,   41.,   47.,   53.,   59.,   65.,   71.,   77.,   83.,   89.,   95.,  112.,  132.,  152.,  172.,  192.,  212.,  232.,  252.,  272.,  292.,  312.,  332.,  179.,  193.,  207.,  221.,  235.,  249.,  263.,  277.,  291.,  305.,  319.,  333.,  347.,  361.,  375.,  389.,  173.,  179.,  185.,  191.,  197.,  203.,  209.,  215.,  221.,  227.,  233.,  239.,  245.,  251.,  257.,  263.,  672.,  692.,  712.,  732.,  752.,  772.,  792.,  812.,  832.,  852.,  872.,  892.,  571.,  585.,  599.,  613.,  627.,  641.,  655.,  669.,  683.,  697.,  711.,  725.,  739.,  753.,  767.,  781.,  341.,  347.,  353.,  359.,  365.,  371.,  377.,  383.,  389.,  395.,  401.,  407.,  413.,  419.,  425.,  431., 1232., 1252., 1272., 1292., 1312., 1332., 1352., 1372., 1392., 1412., 1432., 1452.,  963.,  977.,  991., 1005., 1019., 1033., 1047., 1061., 1075., 1089., 1103., 1117., 1131., 1145., 1159., 1173.,  509.,  515.,  521.,  527.,  533.,  539.,  545.,  551.,  557.,  563.,  569.,  575.,  581.,  587.,  593.,  599., 1792., 1812., 1832., 1852., 1872., 1892., 1912., 1932., 1952., 1972., 1992., 2012., 1355., 1369., 1383., 1397., 1411., 1425., 1439., 1453., 1467., 1481., 1495., 1509., 1523., 1537., 1551., 1565.,  694.,  722.,  750.,  778.,  806.,  834.,  862.,  890.,  918.,  946.,  974., 1002., 1030., 1058., 1086., 1114., 2744., 2816., 2888., 2960., 3032., 3104., 3176., 3248., 3320., 3392., 3464., 3536., 2130., 2174., 2218., 2262., 2306., 2350., 2394., 2438., 2482., 2526., 2570., 2614., 2658., 2702., 2746., 2790., 1478., 1506., 1534., 1562., 1590., 1618., 1646., 1674., 1702., 1730., 1758., 1786., 1814., 1842., 1870., 1898., 4760., 4832., 4904., 4976., 5048., 5120., 5192., 5264., 5336., 5408., 5480., 5552., 3362., 3406., 3450., 3494., 3538., 3582., 3626., 3670., 3714., 3758., 3802., 3846., 3890., 3934., 3978., 4022., 2262., 2290., 2318., 2346., 2374., 2402., 2430., 2458., 2486., 2514., 2542., 2570., 2598., 2626., 2654., 2682., 6776., 6848., 6920., 6992., 7064., 7136., 7208., 7280., 7352., 7424., 7496., 7568., 4594., 4638., 4682., 4726., 4770., 4814., 4858., 4902., 4946., 4990., 5034., 5078., 5122., 5166., 5210., 5254., 1865., 1887., 1909., 1931., 1953., 1975., 1997., 2019., 2041., 2063., 2085., 2107., 2129., 2151., 2173., 2195., 4760., 4812., 4864., 4916., 4968., 5020., 5072., 5124., 5176., 5228., 5280., 5332., 2903., 2933., 2963., 2993., 3023., 3053., 3083., 3113., 3143., 3173., 3203., 3233., 3263., 3293., 3323., 3353., 2481., 2503., 2525., 2547., 2569., 2591., 2613., 2635., 2657., 2679., 2701., 2723., 2745., 2767., 2789., 2811., 6216., 6268., 6320., 6372., 6424., 6476., 6528., 6580., 6632., 6684., 6736., 6788., 3743., 3773., 3803., 3833., 3863., 3893., 3923., 3953., 3983., 4013., 4043., 4073., 4103., 4133., 4163., 4193., 3097., 3119., 3141., 3163., 3185., 3207., 3229., 3251., 3273., 3295., 3317., 3339., 3361., 3383., 3405., 3427., 7672., 7724., 7776., 7828., 7880., 7932., 7984., 8036., 8088., 8140., 8192., 8244., 4583., 4613., 4643., 4673., 4703., 4733., 4763., 4793., 4823., 4853., 4883., 4913., 4943., 4973., 5003., 5033., 3713., 3735., 3757., 3779., 3801., 3823., 3845., 3867., 3889., 3911., 3933., 3955., 3977., 3999., 4021., 4043., 9128., 9180., 9232., 9284., 9336., 9388., 9440., 9492., 9544., 9596., 9648., 9700., 5423., 5453., 5483., 5513., 5543., 5573., 5603., 5633., 5663., 5693., 5723., 5753., 5783., 5813., 5843., 5873.};
  const std::array<int, 4> in_shape = {{ 1, 11, 11, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x11x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,  1252.,  1396.,  1540.,  1684.,  1828.,  1972.,  2116.,  2260.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,  2356.,  2628.,  2900.,  3172.,  3444.,  3716.,  3988.,  4260.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,   510.,   550.,   590.,   630.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,  1252.,  1396.,  1540.,  1684.,  1828.,  1972.,  2116.,  2260.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,  2356.,  2628.,  2900.,  3172.,  3444.,  3716.,  3988.,  4260.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,  2356.,  2628.,  2900.,  3172.,  3444.,  3716.,  3988.,  4260.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,  5816.,  6488.,  7160.,  7832.,  5060.,  5460.,  5860.,  6260.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,  8024.,  8952.,  9880., 10808.,  6676.,  7204.,  7732.,  8260.,   340.,   868.,  1396.,  1924.,  1268.,  1540.,  1812.,  2084.,  2356.,  2628.,  2900.,  3172.,  8504.,  9176.,  9848., 10520.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,  3460.,  3860.,  4260.,  4660., 11736., 12664., 13592., 14520.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,  4564.,  5092.,  5620.,  6148.,  6676.,  7204.,  7732.,  8260.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,  5816.,  6488.,  7160.,  7832.,  8504.,  9176.,  9848., 10520.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,  8024.,  8952.,  9880., 10808., 11736., 12664., 13592., 14520.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,  4564.,  5092.,  5620.,  6148.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,  4564.,  5092.,  5620.,  6148.,  6676.,  7204.,  7732.,  8260.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,  5668.,  6324.,  6980.,  7636.,  8292.,  8948.,  9604., 10260.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,  5668.,  6324.,  6980.,  7636.,  8292.,  8948.,  9604., 10260.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000., 12440., 13880., 15320., 16760.,  9908., 10692., 11476., 12260.,  1080.,  2776.,  4472.,  6168.,  7864.,  9560., 11256., 12952., 14648., 16344., 18040., 19736., 11524., 12436., 13348., 14260.,   580.,  1492.,  2404.,  3316.,  3044.,  3700.,  4356.,  5012.,  5668.,  6324.,  6980.,  7636., 18200., 19640., 21080., 22520.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,  6772.,  7556.,  8340.,  9124., 21432., 23128., 24824., 26520.,  1080.,  2776.,  4472.,  6168.,  7864.,  9560., 11256., 12952.,  7876.,  8788.,  9700., 10612., 11524., 12436., 13348., 14260.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012., 12440., 13880., 15320., 16760., 18200., 19640., 21080., 22520.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988., 14648., 16344., 18040., 19736., 21432., 23128., 24824., 26520.,  1080.,  2776.,  4472.,  6168.,  4228.,  5140.,  6052.,  6964.,  7876.,  8788.,  9700., 10612.,  5358.,  5782.,  6206.,  6630.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,  7876.,  8788.,  9700., 10612., 11524., 12436., 13348., 14260.,   310.,   798.,  1286.,  1774.,  4820.,  5860.,  6900.,  7940.,  8980., 10020., 11060., 12100., 13140., 14180., 15220., 16260.,   350.,   902.,  1454.,  2006.,  2558.,  3110.,  3662.,  4214.,  3662.,  4086.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,  7876.,  8788.,  9700., 10612.,  6166.,  6654.,  7142.,  7630.,   660.,  1700.,  2740.,  3780.,  4820.,  5860.,  6900.,  7940.,  8980., 10020., 11060., 12100.,  6974.,  7526.,  8078.,  8630.,   350.,   902.,  1454.,  2006.};
  const std::array<int, 4> in_shape = {{ 1, 11, 11, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x11x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   350.,   390.,   430.,   470.,   510.,   550.,   590.,   630.,   740.,   884.,  1028.,  1172.,  1316.,  1460.,  1604.,  1748.,  1892.,  2036.,  2180.,  2324.,  1318.,  1422.,  1526.,  1630.,  1734.,  1838.,  1942.,  2046.,  2150.,  2254.,  2358.,  2462.,  2566.,  2670.,  2774.,  2878.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  1470.,  1510.,  1550.,  1590.,  1630.,  1670.,  1710.,  1750.,  4772.,  4916.,  5060.,  5204.,  5348.,  5492.,  5636.,  5780.,  5924.,  6068.,  6212.,  6356.,  4230.,  4334.,  4438.,  4542.,  4646.,  4750.,  4854.,  4958.,  5062.,  5166.,  5270.,  5374.,  5478.,  5582.,  5686.,  5790.,  2270.,  2310.,  2350.,  2390.,  2430.,  2470.,  2510.,  2550.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,  6244.,  6388.,  6532.,  6676.,  6820.,  6964.,  7108.,  7252.,   740.,   884.,  1028.,  1172.,   486.,   590.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,  1526.,  1630.,  1734.,  1838.,  1942.,  2046.,   830.,   870.,   910.,   950.,   990.,  1030.,  1070.,  1110.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  3620.,  3764.,  3908.,  4052.,  4196.,  4340.,  4484.,  4628.,  4772.,  4916.,  5060.,  5204.,  3398.,  3502.,  3606.,  3710.,  3814.,  3918.,  4022.,  4126.,  4230.,  4334.,  4438.,  4542.,  4646.,  4750.,  4854.,  4958.,  2060.,  2268.,  2476.,  2684.,  2892.,  3100.,  3308.,  3516.,  3724.,  3932.,  4140.,  4348.,  4556.,  4764.,  4972.,  5180.,  8040.,  8584.,  9128.,  9672., 10216., 10760., 11304., 11848., 12392., 12936., 13480., 14024.,  9244.,  9580.,  9916., 10252.,  3932.,  4268.,  4604.,  4940.,  5276.,  5612.,  5948.,  6284.,  6620.,  6956.,  7292.,  7628.,  5324.,  5532.,  5740.,  5948.,  6156.,  6364.,  6572.,  6780.,  6988.,  7196.,  7404.,  7612.,  7820.,  8028.,  8236.,  8444., 16616., 17160., 17704., 18248., 18792., 19336., 19880., 20424., 20968., 21512., 22056., 22600., 11996., 12332., 12668., 13004., 13340., 13676., 14012., 14348., 14684., 15020., 15356., 15692., 16028., 16364., 16700., 17036., 11148., 11356., 11564., 11772., 11980., 12188., 12396., 12604.,  2060.,  2268.,  2476.,  2684.,  2892.,  3100.,  3308.,  3516., 21096., 21640., 22184., 22728., 23272., 23816., 24360., 24904.,  8040.,  8584.,  9128.,  9672.,  6556.,  6892.,  7228.,  7564.,  7900.,  8236.,  8572.,  8908.,  9244.,  9580.,  9916., 10252.,  3932.,  4268.,  4604.,  4940.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  4814.,  4982.,  5150.,  5318.,  5486.,  5654.,  5822.,  5990., 10948., 11348., 11748., 12148., 12548., 12948., 13348., 13748., 14148., 14548., 14948., 15348.,  7574.,  7806.,  8038.,  8270.,  8502.,  8734.,  8966.,  9198.,  9430.,  9662.,  9894., 10126., 10358., 10590., 10822., 11054.,  8174.,  8342.,  8510.,  8678.,  8846.,  9014.,  9182.,  9350.,  9518.,  9686.,  9854., 10022., 10190., 10358., 10526., 10694., 11396., 11796., 12196., 12596., 12996., 13396., 13796., 14196., 14596., 14996., 15396., 15796., 14070., 14302., 14534., 14766.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,  2006.,  2238.,  2470.,  2702.,  2126.,  2294.,  2462.,  2630.,  2798.,  2966.,  3134.,  3302.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  7748.,  8148.,  8548.,  8948.,  9348.,  9748., 10148., 10548., 10948., 11348., 11748., 12148.,  5718.,  5950.,  6182.,  6414.,  6646.,  6878.,  7110.,  7342.,  7574.,  7806.,  8038.,  8270.,  8502.,  8734.,  8966.,  9198.,  6830.,  6998.,  7166.,  7334.,  7502.,  7670.,  7838.,  8006.,  8174.,  8342.,  8510.,  8678.,  8846.,  9014.,  9182.,  9350., 18948., 19348., 19748., 20148., 20548., 20948., 21348., 21748., 11396., 11796., 12196., 12596., 12214., 12446., 12678., 12910., 13142., 13374., 13606., 13838., 14070., 14302., 14534., 14766.,   150.,   382.,   614.,   846.};
  const std::array<int, 4> in_shape = {{ 1, 11, 11, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x12x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 16.,  17.,  18.,  49.,  52.,  55.,  36.,  83.,  88.,  93.,  54.,  57.,  23.,  24.,  25.,  70.,  73.,  76.,  50., 118., 123., 128.,  75.,  78.,  38.,  43.,  48., 116., 128., 140.,  84., 184., 200., 216., 120., 129.,  73.,  78.,  83., 200., 212., 224., 133., 296., 312., 328., 183., 192., 108., 113., 118., 284., 296., 308., 182., 408., 424., 440., 246., 255.,  92.,  96., 100., 214., 223., 232., 125., 262., 273., 284., 150., 156., 134., 145., 156., 320., 344., 368., 192., 388., 416., 444., 228., 243., 211., 222., 233., 488., 512., 536., 283., 584., 612., 640., 333., 348., 288., 299., 310., 656., 680., 704., 374., 780., 808., 836., 438., 453., 161., 168., 175., 358., 373., 388., 200., 406., 423., 440., 225., 234., 210., 217., 224., 463., 478., 493., 256., 525., 542., 559., 288., 297.};
  const std::array<int, 4> in_shape = {{ 1, 11, 12, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x12x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  1.,   2.,   3.,   4.,   7.,  10.,  13.,   8.,  10.,  12.,  14.,   0.,   8.,   9.,  10.,  11.,  28.,  31.,  34.,  22.,  24.,  26.,  28.,   0.,  15.,  16.,  17.,  18.,  49.,  52.,  55.,  36.,  38.,  40.,  42.,   0.,  22.,  23.,  24.,  25.,  70.,  73.,  76.,  50.,  52.,  54.,  56.,   0.,  32.,  36.,  40.,  44., 110., 120., 130.,  80.,  86.,  92.,  98.,   0.,  60.,  64.,  68.,  72., 180., 190., 200., 122., 128., 134., 140.,   0.,  88.,  92.,  96., 100., 250., 260., 270., 164., 170., 176., 182.,   0.,  66.,  69.,  72.,  75., 166., 173., 180., 100., 104., 108., 112.,   0.,  87.,  90.,  93.,  96., 215., 222., 229., 128., 132., 136., 140.,   0., 108., 111., 114., 117., 264., 271., 278., 156., 160., 164., 168.,   0., 129., 132., 135., 138., 313., 320., 327., 184., 188., 192., 196.,   0.};
  const std::array<int, 4> in_shape = {{ 1, 11, 12, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x12x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  95.,  101.,  107.,  320.,  340.,  360.,  249.,  588.,  624.,  660.,  391.,  413.,  137.,  143.,  149.,  460.,  480.,  500.,  347.,  840.,  876.,  912.,  545.,  567.,  232.,  268.,  304.,  772.,  860.,  948.,  588., 1308., 1428., 1548.,  872.,  940.,  484.,  520.,  556., 1388., 1476., 1564.,  952., 2148., 2268., 2388., 1348., 1416.,  736.,  772.,  808., 2004., 2092., 2180., 1316., 2988., 3108., 3228., 1824., 1892.,  683.,  713.,  743., 1600., 1668., 1736.,  941., 1980., 2064., 2148., 1139., 1185.,  988., 1072., 1156., 2380., 2564., 2748., 1440., 2916., 3132., 3348., 1724., 1840., 1576., 1660., 1744., 3668., 3852., 4036., 2140., 4428., 4644., 4860., 2536., 2652., 2164., 2248., 2332., 4956., 5140., 5324., 2840., 5940., 6156., 6372., 3348., 3464., 1229., 1283., 1337., 2740., 2856., 2972., 1535., 3120., 3252., 3384., 1733., 1803., 1607., 1661., 1715., 3552., 3668., 3784., 1969., 4044., 4176., 4308., 2223., 2293.};
  const std::array<int, 4> in_shape = {{ 1, 11, 12, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x12x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   40.,   60.,   80.,   53.,   67.,   81.,   95.,    0.,   47.,   53.,   59.,   65.,  180.,  200.,  220.,  151.,  165.,  179.,  193.,    0.,   89.,   95.,  101.,  107.,  320.,  340.,  360.,  249.,  263.,  277.,  291.,    0.,  131.,  137.,  143.,  149.,  460.,  480.,  500.,  347.,  361.,  375.,  389.,    0.,  190.,  218.,  246.,  274.,  728.,  800.,  872.,  558.,  602.,  646.,  690.,    0.,  386.,  414.,  442.,  470., 1232., 1304., 1376.,  866.,  910.,  954.,  998.,    0.,  582.,  610.,  638.,  666., 1736., 1808., 1880., 1174., 1218., 1262., 1306.,    0.,  479.,  501.,  523.,  545., 1220., 1272., 1324.,  743.,  773.,  803.,  833.,    0.,  633.,  655.,  677.,  699., 1584., 1636., 1688.,  953.,  983., 1013., 1043.,    0.,  787.,  809.,  831.,  853., 1948., 2000., 2052., 1163., 1193., 1223., 1253.,    0.,  941.,  963.,  985., 1007., 2312., 2364., 2416., 1373., 1403., 1433., 1463.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 11, 12, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x12x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  630.,   670.,   710.,  2276.,  2420.,  2564.,  1838.,  4404.,  4676.,  4948.,  2966.,  3134.,   910.,   950.,   990.,  3284.,  3428.,  3572.,  2566.,  6308.,  6580.,  6852.,  4142.,  4310.,  1572.,  1844.,  2116.,  4280.,  4952.,  5624.,  4372.,  6488.,  7416.,  8344.,  6628.,  1780.,  2196.,  2468.,  2740.,  5656.,  6328.,  7000.,  3844.,  7608.,  8536.,  9464.,  4948.,  5476.,  4100.,  4372.,  4644., 10360., 11032., 11704.,  6644., 14104., 15032., 15960.,  8644.,  9172.,  5254.,  5486.,  5718., 12356., 12884., 13412.,  7294., 15380., 16036., 16692.,  8870.,  9230.,  7572.,  8228.,  8884., 10904., 12344., 13784., 11140., 13112., 14808., 16504., 13396.,  2788.,  4740.,  5396.,  6052., 11512., 12952., 14392.,  7156., 13464., 15160., 16856.,  8260.,  9172.,  9332.,  9988., 10644., 21592., 23032., 24472., 12644., 25336., 27032., 28728., 14644., 15556.,  9598., 10022., 10446., 21428., 22340., 23252., 12022., 24452., 25492., 26532., 13598., 14150., 12566., 12990., 13414., 14244., 15156., 16068., 15438., 16116., 17156., 18196., 17462.,   350.};
  const std::array<int, 4> in_shape = {{ 1, 11, 12, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 128.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x12x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   260.,   404.,   548.,   382.,   486.,   590.,   694.,     0.,   310.,   350.,   390.,   430.,  1268.,  1412.,  1556.,  1110.,  1214.,  1318.,  1422.,     0.,   590.,   630.,   670.,   710.,  2276.,  2420.,  2564.,  1838.,  1942.,  2046.,  2150.,     0.,   870.,   910.,   950.,   990.,  3284.,  3428.,  3572.,  2566.,  2670.,  2774.,  2878.,     0.,  1260.,  1468.,  1676.,  1884.,  5224.,  5768.,  6312.,  4140.,  4476.,  4812.,  5148.,     0.,  2716.,  2924.,  3132.,  3340.,  9032.,  9576., 10120.,  6492.,  6828.,  7164.,  7500.,     0.,  4172.,  4380.,  4588.,  4796., 12840., 13384., 13928.,  8844.,  9180.,  9516.,  9852.,     0.,  3638.,  3806.,  3974.,  4142.,  9332.,  9732., 10132.,  5718.,  5950.,  6182.,  6414.,     0.,  4814.,  4982.,  5150.,  5318., 12132., 12532., 12932.,  7342.,  7574.,  7806.,  8038.,     0.,  5990.,  6158.,  6326.,  6494., 14932., 15332., 15732.,  8966.,  9198.,  9430.,  9662.,     0.,  7166.,  7334.,  7502.,  7670., 17732., 18132., 18532., 10590., 10822., 11054., 11286.,     0.};
  const std::array<int, 4> in_shape = {{ 1, 11, 12, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x12x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  31.,   32.,   33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,  161.,  166.,  171.,  176.,  181.,  186.,  105.,  108.,  111.,  114.,   45.,   46.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  231.,  236.,  241.,  246.,  251.,  256.,  147.,  150.,  153.,  156.,   71.,   76.,   81.,   86.,   91.,   96.,  220.,  232.,  244.,  256.,  268.,  280.,  161.,  168.,  352.,  368.,  384.,  400.,  416.,  432.,  231.,  240.,  249.,  258.,  141.,  146.,  151.,  156.,  161.,  166.,  388.,  400.,  412.,  424.,  436.,  448.,  259.,  266.,  576.,  592.,  608.,  624.,  640.,  656.,  357.,  366.,  375.,  384.,  211.,  216.,  221.,  226.,  231.,  236.,  556.,  568.,  580.,  592.,  604.,  616.,  357.,  364.,  800.,  816.,  832.,  848.,  864.,  880.,  483.,  492.,  501.,  510.,  180.,  184.,  188.,  192.,  196.,  200.,  419.,  428.,  437.,  446.,  455.,  464.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  306.,  312.,  257.,  268.,  279.,  290.,  301.,  312.,  616.,  640.,  664.,  688.,  712.,  736.,  371.,  384.,  748.,  776.,  804.,  832.,  860.,  888.,  441.,  456.,  471.,  486.,  411.,  422.,  433.,  444.,  455.,  466.,  952.,  976., 1000., 1024., 1048., 1072.,  553.,  566., 1140., 1168., 1196., 1224., 1252., 1280.,  651.,  666.,  681.,  696.,  565.,  576.,  587.,  598.,  609.,  620., 1288., 1312., 1336., 1360., 1384., 1408.,  735.,  748., 1532., 1560., 1588., 1616., 1644., 1672.,  861.,  876.,  891.,  906.,  315.,  322.,  329.,  336.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  795.,  812.,  829.,  846.,  863.,  880.,  441.,  450.,  459.,  468.,  413.,  420.,  427.,  434.,  441.,  448.,  911.,  926.,  941.,  956.,  971.,  986.,  504.,  512., 1033., 1050., 1067., 1084., 1101., 1118.,  567.,  576.,  585.,  594.};
  const std::array<int, 4> in_shape = {{ 1, 11, 12, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x12x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,  11.,  14.,  17.,  20.,  23.,  26.,  14.,  16.,  18.,  20.,  22.,  24.,  26.,  28.,   0.,   0.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  53.,  56.,  59.,  62.,  65.,  68.,  42.,  44.,  46.,  48.,  50.,  52.,  54.,  56.,   0.,   0.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,  95.,  98., 101., 104., 107., 110.,  70.,  72.,  74.,  76.,  78.,  80.,  82.,  84.,   0.,   0.,  43.,  44.,  45.,  46.,  47.,  48.,  49.,  50., 137., 140., 143., 146., 149., 152.,  98., 100., 102., 104., 106., 108., 110., 112.,   0.,   0.,  60.,  64.,  68.,  72.,  76.,  80.,  84.,  88., 210., 220., 230., 240., 250., 260., 154., 160., 166., 172., 178., 184., 190., 196.,   0.,   0., 116., 120., 124., 128., 132., 136., 140., 144., 350., 360., 370., 380., 390., 400., 238., 244., 250., 256., 262., 268., 274., 280.,   0.,   0., 172., 176., 180., 184., 188., 192., 196., 200., 490., 500., 510., 520., 530., 540., 322., 328., 334., 340., 346., 352., 358., 364.,   0.,   0., 129., 132., 135., 138., 141., 144., 147., 150., 325., 332., 339., 346., 353., 360., 196., 200., 204., 208., 212., 216., 220., 224.,   0.,   0., 171., 174., 177., 180., 183., 186., 189., 192., 423., 430., 437., 444., 451., 458., 252., 256., 260., 264., 268., 272., 276., 280.,   0.,   0., 213., 216., 219., 222., 225., 228., 231., 234., 521., 528., 535., 542., 549., 556., 308., 312., 316., 320., 324., 328., 332., 336.,   0.,   0., 255., 258., 261., 264., 267., 270., 273., 276., 619., 626., 633., 640., 647., 654., 364., 368., 372., 376., 380., 384., 388., 392.,   0.,   0.};
  const std::array<int, 4> in_shape = {{ 1, 11, 12, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x12x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  185.,   191.,   197.,   203.,   209.,   215.,   624.,   644.,   664.,   684.,   704.,   724.,   487.,   501.,  1148.,  1184.,  1220.,  1256.,  1292.,  1328.,   765.,   787.,   809.,   831.,   269.,   275.,   281.,   287.,   293.,   299.,   904.,   924.,   944.,   964.,   984.,  1004.,   683.,   697.,  1652.,  1688.,  1724.,  1760.,  1796.,  1832.,  1073.,  1095.,  1117.,  1139.,   436.,   472.,   508.,   544.,   580.,   616.,  1476.,  1564.,  1652.,  1740.,  1828.,  1916.,  1136.,  1188.,  2524.,  2644.,  2764.,  2884.,  3004.,  3124.,  1692.,  1760.,  1828.,  1896.,   940.,   976.,  1012.,  1048.,  1084.,  1120.,  2708.,  2796.,  2884.,  2972.,  3060.,  3148.,  1864.,  1916.,  4204.,  4324.,  4444.,  4564.,  4684.,  4804.,  2644.,  2712.,  2780.,  2848.,  1444.,  1480.,  1516.,  1552.,  1588.,  1624.,  3940.,  4028.,  4116.,  4204.,  4292.,  4380.,  2592.,  2644.,  5884.,  6004.,  6124.,  6244.,  6364.,  6484.,  3596.,  3664.,  3732.,  3800.,  1343.,  1373.,  1403.,  1433.,  1463.,  1493.,  3148.,  3216.,  3284.,  3352.,  3420.,  3488.,  1853.,  1891.,  3896.,  3980.,  4064.,  4148.,  4232.,  4316.,  2243.,  2289.,  2335.,  2381.,  1912.,  1996.,  2080.,  2164.,  2248.,  2332.,  4620.,  4804.,  4988.,  5172.,  5356.,  5540.,  2804.,  2904.,  5668.,  5884.,  6100.,  6316.,  6532.,  6748.,  3360.,  3476.,  3592.,  3708.,  3088.,  3172.,  3256.,  3340.,  3424.,  3508.,  7196.,  7380.,  7564.,  7748.,  7932.,  8116.,  4204.,  4304.,  8692.,  8908.,  9124.,  9340.,  9556.,  9772.,  4984.,  5100.,  5216.,  5332.,  4264.,  4348.,  4432.,  4516.,  4600.,  4684.,  9772.,  9956., 10140., 10324., 10508., 10692.,  5604.,  5704., 11716., 11932., 12148., 12364., 12580., 12796.,  6608.,  6724.,  6840.,  6956.,  2417.,  2471.,  2525.,  2579.,  2633.,  2687.,  5392.,  5508.,  5624.,  5740.,  5856.,  5972.,  3023.,  3085.,  6140.,  6272.,  6404.,  6536.,  6668.,  6800.,  3413.,  3483.,  3553.,  3623.,  3173.,  3227.,  3281.,  3335.,  3389.,  3443.,  7016.,  7132.,  7248.,  7364.,  7480.,  7596.,  3891.,  3953.,  7988.,  8120.,  8252.,  8384.,  8516.,  8648.,  4393.,  4463.,  4533.,  4603.};
  const std::array<int, 4> in_shape = {{ 1, 11, 12, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x12x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   29.,   35.,   41.,   47.,   64.,   84.,  104.,  124.,  144.,  164.,   95.,  109.,  123.,  137.,  151.,  165.,  179.,  193.,    0.,    0.,   89.,   95.,  101.,  107.,  113.,  119.,  125.,  131.,  344.,  364.,  384.,  404.,  424.,  444.,  291.,  305.,  319.,  333.,  347.,  361.,  375.,  389.,    0.,    0.,  173.,  179.,  185.,  191.,  197.,  203.,  209.,  215.,  624.,  644.,  664.,  684.,  704.,  724.,  487.,  501.,  515.,  529.,  543.,  557.,  571.,  585.,    0.,    0.,  257.,  263.,  269.,  275.,  281.,  287.,  293.,  299.,  904.,  924.,  944.,  964.,  984., 1004.,  683.,  697.,  711.,  725.,  739.,  753.,  767.,  781.,    0.,    0.,  358.,  386.,  414.,  442.,  470.,  498.,  526.,  554., 1400., 1472., 1544., 1616., 1688., 1760., 1082., 1126., 1170., 1214., 1258., 1302., 1346., 1390.,    0.,    0.,  750.,  778.,  806.,  834.,  862.,  890.,  918.,  946., 2408., 2480., 2552., 2624., 2696., 2768., 1698., 1742., 1786., 1830., 1874., 1918., 1962., 2006.,    0.,    0., 1142., 1170., 1198., 1226., 1254., 1282., 1310., 1338., 3416., 3488., 3560., 3632., 3704., 3776., 2314., 2358., 2402., 2446., 2490., 2534., 2578., 2622.,    0.,    0.,  941.,  963.,  985., 1007., 1029., 1051., 1073., 1095., 2400., 2452., 2504., 2556., 2608., 2660., 1463., 1493., 1523., 1553., 1583., 1613., 1643., 1673.,    0.,    0., 1249., 1271., 1293., 1315., 1337., 1359., 1381., 1403., 3128., 3180., 3232., 3284., 3336., 3388., 1883., 1913., 1943., 1973., 2003., 2033., 2063., 2093.,    0.,    0., 1557., 1579., 1601., 1623., 1645., 1667., 1689., 1711., 3856., 3908., 3960., 4012., 4064., 4116., 2303., 2333., 2363., 2393., 2423., 2453., 2483., 2513.,    0.,    0., 1865., 1887., 1909., 1931., 1953., 1975., 1997., 2019., 4584., 4636., 4688., 4740., 4792., 4844., 2723., 2753., 2783., 2813., 2843., 2873., 2903., 2933.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 11, 12, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x12x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  590.,   630.,    30.,    70.,   110.,   150.,  1508.,  1652.,  1796.,  1940.,   420.,   564.,   278.,   382.,  2612.,  2884.,  3156.,  3428.,  1012.,  1284.,   446.,   614.,   782.,   950.,   510.,   550.,   590.,   630.,    30.,    70.,  1220.,  1364.,  1508.,  1652.,  1796.,  1940.,    70.,   174.,  2068.,  2340.,  2612.,  2884.,  3156.,  3428.,   110.,   278.,   446.,   614.,  1044.,  1316.,  1588.,  1860.,  2132.,  2404.,  3128.,  3800.,  4472.,  5144.,  5816.,  6488.,  3492.,  3892.,  4312.,  5240.,  6168.,  7096.,  8024.,  8952.,  4852.,  5380.,  3220.,  3748.,   500.,   772.,  1044.,  1316.,  1588.,  1860.,  7160.,  7832.,  3128.,  3800.,  4472.,  5144.,  2692.,  3092.,  9880., 10808.,  4312.,  5240.,  6168.,  7096.,  3796.,  4324.,  4852.,  5380.,  3668.,  3940.,   500.,   772.,  1044.,  1316.,  5816.,  6488.,  7160.,  7832.,  3128.,  3800.,  1892.,  2292.,  8024.,  8952.,  9880., 10808.,  4312.,  5240.,  2740.,  3268.,  3796.,  4324.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,  3764.,  4292.,  4820.,  5348.,  5876.,  6404.,   190.,   486.,  4612.,  5268.,  5924.,  6580.,  7236.,  7892.,   230.,   590.,   950.,  1310.,  3588.,  4244.,  4900.,  5556.,  6212.,  6868.,  6680.,  8120.,  9560., 11000., 12440., 13880.,  7572.,  8356.,  7864.,  9560., 11256., 12952., 14648., 16344.,  8932.,  9844.,  4996.,  5908.,  2276.,  2932.,  3588.,  4244.,  4900.,  5556., 15320., 16760.,  6680.,  8120.,  9560., 11000.,  6004.,  6788., 18040., 19736.,  7864.,  9560., 11256., 12952.,  7108.,  8020.,  8932.,  9844.,  7748.,  8404.,  2276.,  2932.,  3588.,  4244., 12440., 13880., 15320., 16760.,  6680.,  8120.,  4436.,  5220., 14648., 16344., 18040., 19736.,  7864.,  9560.,  5284.,  6196.,  7108.,  8020.,  5358.,  5782.,  6206.,  6630.,   270.,   694.,  6308.,  7220.,  8132.,  9044.,  9956., 10868.,   310.,   798.,  7156.,  8196.,  9236., 10276., 11316., 12356.,   350.,   902.,  1454.,  2006.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,  4484.,  5396.,  6308.,  7220.,  8132.,  9044.,  7142.,  7630.,  5076.,  6116.,  7156.,  8196.,  9236., 10276.,  8078.,  8630.,   350.,   902.};
  const std::array<int, 4> in_shape = {{ 1, 11, 12, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x12x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   420.,   564.,   708.,   852.,   996.,  1140.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,     0.,     0.,   590.,   630.,   670.,   710.,   750.,   790.,   830.,   870.,  2436.,  2580.,  2724.,  2868.,  3012.,  3156.,  2150.,  2254.,  2358.,  2462.,  2566.,  2670.,  2774.,  2878.,     0.,     0.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  4452.,  4596.,  4740.,  4884.,  5028.,  5172.,  3606.,  3710.,  3814.,  3918.,  4022.,  4126.,  4230.,  4334.,     0.,     0.,  1710.,  1750.,  1790.,  1830.,  1870.,  1910.,  1950.,  1990.,  6468.,  6612.,  6756.,  6900.,  7044.,  7188.,  5062.,  5166.,  5270.,  5374.,  5478.,  5582.,  5686.,  5790.,     0.,     0.,  2380.,  2588.,  2796.,  3004.,  3212.,  3420.,  3628.,  3836.,  7528.,  8072.,  8616.,  9160.,  9704., 10248.,  8060.,  8396.,  2076.,  2412.,  2748.,  3084.,  3420.,  3756.,     0.,     0.,  2732.,  2940.,  3148.,  3356.,  3564.,  3772.,  3980.,  4188.,  8488.,  9032.,  9576., 10120., 10664., 11208.,  6108.,  6444.,  6780.,  7116.,  7452.,  7788.,  8124.,  8460.,     0.,     0.,  5644.,  5852.,  6060.,  6268.,  6476.,  6684.,  6892.,  7100., 16104., 16648., 17192., 17736., 18280., 18824., 10812., 11148., 11484., 11820., 12156., 12492., 12828., 13164.,     0.,     0.,  7166.,  7334.,  7502.,  7670.,  7838.,  8006.,  8174.,  8342., 18404., 18804., 19204., 19604., 20004., 20404., 11286., 11518., 11750., 11982., 12214., 12446., 12678., 12910.,     0.,     0.,  9518.,  9686.,  9854., 10022., 10190., 10358., 10526., 10694., 13252., 13652., 14052., 14452., 14852., 15252., 14534., 14766.,   150.,   382.,   614.,   846.,  1078.,  1310.,     0.,     0.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  4004.,  4404.,  4804.,  5204.,  5604.,  6004.,  2934.,  3166.,  3398.,  3630.,  3862.,  4094.,  4326.,  4558.,     0.,     0.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  9604., 10004., 10404., 10804., 11204., 11604.,  6182.,  6414.,  6646.,  6878.,  7110.,  7342.,  7574.,  7806.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 1, 11, 12, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x12x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  61.,   62.,   63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  317.,  322.,  327.,  332.,  337.,  342.,  347.,  352.,  357.,  362.,  367.,  372.,  207.,  210.,  213.,  216.,  219.,  222.,  225.,  228.,   89.,   90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  457.,  462.,  467.,  472.,  477.,  482.,  487.,  492.,  497.,  502.,  507.,  512.,  291.,  294.,  297.,  300.,  303.,  306.,  309.,  312.,  137.,  142.,  147.,  152.,  157.,  162.,  167.,  172.,  177.,  182.,  187.,  192.,  428.,  440.,  452.,  464.,  476.,  488.,  500.,  512.,  524.,  536.,  548.,  560.,  315.,  322.,  329.,  336.,  688.,  704.,  720.,  736.,  752.,  768.,  784.,  800.,  816.,  832.,  848.,  864.,  453.,  462.,  471.,  480.,  489.,  498.,  507.,  516.,  277.,  282.,  287.,  292.,  297.,  302.,  307.,  312.,  317.,  322.,  327.,  332.,  764.,  776.,  788.,  800.,  812.,  824.,  836.,  848.,  860.,  872.,  884.,  896.,  511.,  518.,  525.,  532., 1136., 1152., 1168., 1184., 1200., 1216., 1232., 1248., 1264., 1280., 1296., 1312.,  705.,  714.,  723.,  732.,  741.,  750.,  759.,  768.,  417.,  422.,  427.,  432.,  437.,  442.,  447.,  452.,  457.,  462.,  467.,  472., 1100., 1112., 1124., 1136., 1148., 1160., 1172., 1184., 1196., 1208., 1220., 1232.,  707.,  714.,  721.,  728., 1584., 1600., 1616., 1632., 1648., 1664., 1680., 1696., 1712., 1728., 1744., 1760.,  957.,  966.,  975.,  984.,  993., 1002., 1011., 1020.,  356.,  360.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,  396.,  400.,  829.,  838.,  847.,  856.,  865.,  874.,  883.,  892.,  901.,  910.,  919.,  928.,  485.,  490.,  495.,  500., 1015., 1026., 1037., 1048., 1059., 1070., 1081., 1092., 1103., 1114., 1125., 1136.,  582.,  588.,  594.,  600.,  606.,  612.,  618.,  624.,  503.,  514.,  525.,  536.,  547.,  558.,  569.,  580.,  591.,  602.,  613.,  624., 1208., 1232., 1256., 1280., 1304., 1328., 1352., 1376., 1400., 1424., 1448., 1472.,  729.,  742.,  755.,  768., 1468., 1496., 1524., 1552., 1580., 1608., 1636., 1664., 1692., 1720., 1748., 1776.,  867.,  882.,  897.,  912.,  927.,  942.,  957.,  972.,  811.,  822.,  833.,  844.,  855.,  866.,  877.,  888.,  899.,  910.,  921.,  932., 1880., 1904., 1928., 1952., 1976., 2000., 2024., 2048., 2072., 2096., 2120., 2144., 1093., 1106., 1119., 1132., 2252., 2280., 2308., 2336., 2364., 2392., 2420., 2448., 2476., 2504., 2532., 2560., 1287., 1302., 1317., 1332., 1347., 1362., 1377., 1392., 1119., 1130., 1141., 1152., 1163., 1174., 1185., 1196., 1207., 1218., 1229., 1240., 2552., 2576., 2600., 2624., 2648., 2672., 2696., 2720., 2744., 2768., 2792., 2816., 1457., 1470., 1483., 1496., 3036., 3064., 3092., 3120., 3148., 3176., 3204., 3232., 3260., 3288., 3316., 3344., 1707., 1722., 1737., 1752., 1767., 1782., 1797., 1812.,  623.,  630.,  637.,  644.,  651.,  658.,  665.,  672.,  679.,  686.,  693.,  700., 1387., 1402., 1417., 1432., 1447., 1462., 1477., 1492., 1507., 1522., 1537., 1552.,  776.,  784.,  792.,  800., 1573., 1590., 1607., 1624., 1641., 1658., 1675., 1692., 1709., 1726., 1743., 1760.,  873.,  882.,  891.,  900.,  909.,  918.,  927.,  936.,  819.,  826.,  833.,  840.,  847.,  854.,  861.,  868.,  875.,  882.,  889.,  896., 1807., 1822., 1837., 1852., 1867., 1882., 1897., 1912., 1927., 1942., 1957., 1972., 1000., 1008., 1016., 1024., 2049., 2066., 2083., 2100., 2117., 2134., 2151., 2168., 2185., 2202., 2219., 2236., 1125., 1134., 1143., 1152., 1161., 1170., 1179., 1188.};
  const std::array<int, 4> in_shape = {{ 1, 11, 12, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x12x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,    9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   19.,   22.,   25.,   28.,   31.,   34.,   37.,   40.,   43.,   46.,   49.,   52.,   26.,   28.,   30.,   32.,   34.,   36.,   38.,   40.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,    0.,    0.,    0.,    0.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,  103.,  106.,  109.,  112.,  115.,  118.,  121.,  124.,  127.,  130.,  133.,  136.,   82.,   84.,   86.,   88.,   90.,   92.,   94.,   96.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,    0.,    0.,    0.,    0.,   57.,   58.,   59.,   60.,   61.,   62.,   63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  146.,  148.,  150.,  152.,  154.,  156.,  158.,  160.,  162.,  164.,  166.,  168.,    0.,    0.,    0.,    0.,   85.,   86.,   87.,   88.,   89.,   90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  202.,  204.,  206.,  208.,  210.,  212.,  214.,  216.,  218.,  220.,  222.,  224.,    0.,    0.,    0.,    0.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  148.,  152.,  156.,  160.,  164.,  168.,  172.,  176.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  302.,  308.,  314.,  320.,  326.,  332.,  338.,  344.,  350.,  356.,  362.,  368.,  374.,  380.,  386.,  392.,    0.,    0.,    0.,    0.,  228.,  232.,  236.,  240.,  244.,  248.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,  284.,  288.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  470.,  476.,  482.,  488.,  494.,  500.,  506.,  512.,  518.,  524.,  530.,  536.,  542.,  548.,  554.,  560.,    0.,    0.,    0.,    0.,  340.,  344.,  348.,  352.,  356.,  360.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,  396.,  400.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080.,  638.,  644.,  650.,  656.,  662.,  668.,  674.,  680.,  686.,  692.,  698.,  704.,  710.,  716.,  722.,  728.,    0.,    0.,    0.,    0.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  279.,  282.,  285.,  288.,  291.,  294.,  297.,  300.,  643.,  650.,  657.,  664.,  671.,  678.,  685.,  692.,  699.,  706.,  713.,  720.,  388.,  392.,  396.,  400.,  404.,  408.,  412.,  416.,  420.,  424.,  428.,  432.,  436.,  440.,  444.,  448.,    0.,    0.,    0.,    0.,  339.,  342.,  345.,  348.,  351.,  354.,  357.,  360.,  363.,  366.,  369.,  372.,  375.,  378.,  381.,  384.,  839.,  846.,  853.,  860.,  867.,  874.,  881.,  888.,  895.,  902.,  909.,  916.,  500.,  504.,  508.,  512.,  516.,  520.,  524.,  528.,  532.,  536.,  540.,  544.,  548.,  552.,  556.,  560.,    0.,    0.,    0.,    0.,  423.,  426.,  429.,  432.,  435.,  438.,  441.,  444.,  447.,  450.,  453.,  456.,  459.,  462.,  465.,  468., 1035., 1042., 1049., 1056., 1063., 1070., 1077., 1084., 1091., 1098., 1105., 1112.,  612.,  616.,  620.,  624.,  628.,  632.,  636.,  640.,  644.,  648.,  652.,  656.,  660.,  664.,  668.,  672.,    0.,    0.,    0.,    0.,  507.,  510.,  513.,  516.,  519.,  522.,  525.,  528.,  531.,  534.,  537.,  540.,  543.,  546.,  549.,  552., 1231., 1238., 1245., 1252., 1259., 1266., 1273., 1280., 1287., 1294., 1301., 1308.,  724.,  728.,  732.,  736.,  740.,  744.,  748.,  752.,  756.,  760.,  764.,  768.,  772.,  776.,  780.,  784.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 11, 12, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x12x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  365.,   371.,   377.,   383.,   389.,   395.,   401.,   407.,   413.,   419.,   425.,   431.,  1232.,  1252.,  1272.,  1292.,  1312.,  1332.,  1352.,  1372.,  1392.,  1412.,  1432.,  1452.,   963.,   977.,   991.,  1005.,  2268.,  2304.,  2340.,  2376.,  2412.,  2448.,  2484.,  2520.,  2556.,  2592.,  2628.,  2664.,  1513.,  1535.,  1557.,  1579.,  1601.,  1623.,  1645.,  1667.,   533.,   539.,   545.,   551.,   557.,   563.,   569.,   575.,   581.,   587.,   593.,   599.,  1792.,  1812.,  1832.,  1852.,  1872.,  1892.,  1912.,  1932.,  1952.,  1972.,  1992.,  2012.,  1355.,  1369.,  1383.,  1397.,  3276.,  3312.,  3348.,  3384.,  3420.,  3456.,  3492.,  3528.,  3564.,  3600.,  3636.,  3672.,  2129.,  2151.,  2173.,  2195.,  2217.,  2239.,  2261.,  2283.,   844.,   880.,   916.,   952.,   988.,  1024.,  1060.,  1096.,  1132.,  1168.,  1204.,  1240.,  2884.,  2972.,  3060.,  3148.,  3236.,  3324.,  3412.,  3500.,  3588.,  3676.,  3764.,  3852.,  2232.,  2284.,  2336.,  2388.,  4956.,  5076.,  5196.,  5316.,  5436.,  5556.,  5676.,  5796.,  5916.,  6036.,  6156.,  6276.,  3332.,  3400.,  3468.,  3536.,  3604.,  3672.,  3740.,  3808.,  1852.,  1888.,  1924.,  1960.,  1996.,  2032.,  2068.,  2104.,  2140.,  2176.,  2212.,  2248.,  5348.,  5436.,  5524.,  5612.,  5700.,  5788.,  5876.,  5964.,  6052.,  6140.,  6228.,  6316.,  3688.,  3740.,  3792.,  3844.,  8316.,  8436.,  8556.,  8676.,  8796.,  8916.,  9036.,  9156.,  9276.,  9396.,  9516.,  9636.,  5236.,  5304.,  5372.,  5440.,  5508.,  5576.,  5644.,  5712.,  2860.,  2896.,  2932.,  2968.,  3004.,  3040.,  3076.,  3112.,  3148.,  3184.,  3220.,  3256.,  7812.,  7900.,  7988.,  8076.,  8164.,  8252.,  8340.,  8428.,  8516.,  8604.,  8692.,  8780.,  5144.,  5196.,  5248.,  5300., 11676., 11796., 11916., 12036., 12156., 12276., 12396., 12516., 12636., 12756., 12876., 12996.,  7140.,  7208.,  7276.,  7344.,  7412.,  7480.,  7548.,  7616.,  2663.,  2693.,  2723.,  2753.,  2783.,  2813.,  2843.,  2873.,  2903.,  2933.,  2963.,  2993.,  6244.,  6312.,  6380.,  6448.,  6516.,  6584.,  6652.,  6720.,  6788.,  6856.,  6924.,  6992.,  3677.,  3715.,  3753.,  3791.,  7728.,  7812.,  7896.,  7980.,  8064.,  8148.,  8232.,  8316.,  8400.,  8484.,  8568.,  8652.,  4451.,  4497.,  4543.,  4589.,  4635.,  4681.,  4727.,  4773.,  3760.,  3844.,  3928.,  4012.,  4096.,  4180.,  4264.,  4348.,  4432.,  4516.,  4600.,  4684.,  9100.,  9284.,  9468.,  9652.,  9836., 10020., 10204., 10388., 10572., 10756., 10940., 11124.,  5532.,  5632.,  5732.,  5832., 11172., 11388., 11604., 11820., 12036., 12252., 12468., 12684., 12900., 13116., 13332., 13548.,  6632.,  6748.,  6864.,  6980.,  7096.,  7212.,  7328.,  7444.,  6112.,  6196.,  6280.,  6364.,  6448.,  6532.,  6616.,  6700.,  6784.,  6868.,  6952.,  7036., 14252., 14436., 14620., 14804., 14988., 15172., 15356., 15540., 15724., 15908., 16092., 16276.,  8332.,  8432.,  8532.,  8632., 17220., 17436., 17652., 17868., 18084., 18300., 18516., 18732., 18948., 19164., 19380., 19596.,  9880.,  9996., 10112., 10228., 10344., 10460., 10576., 10692.,  8464.,  8548.,  8632.,  8716.,  8800.,  8884.,  8968.,  9052.,  9136.,  9220.,  9304.,  9388., 19404., 19588., 19772., 19956., 20140., 20324., 20508., 20692., 20876., 21060., 21244., 21428., 11132., 11232., 11332., 11432., 23268., 23484., 23700., 23916., 24132., 24348., 24564., 24780., 24996., 25212., 25428., 25644., 13128., 13244., 13360., 13476., 13592., 13708., 13824., 13940.,  4793.,  4847.,  4901.,  4955.,  5009.,  5063.,  5117.,  5171.,  5225.,  5279.,  5333.,  5387., 10696., 10812., 10928., 11044., 11160., 11276., 11392., 11508., 11624., 11740., 11856., 11972.,  5999.,  6061.,  6123.,  6185., 12180., 12312., 12444., 12576., 12708., 12840., 12972., 13104., 13236., 13368., 13500., 13632.,  6773.,  6843.,  6913.,  6983.,  7053.,  7123.,  7193.,  7263.,  6305.,  6359.,  6413.,  6467.,  6521.,  6575.,  6629.,  6683.,  6737.,  6791.,  6845.,  6899., 13944., 14060., 14176., 14292., 14408., 14524., 14640., 14756., 14872., 14988., 15104., 15220.,  7735.,  7797.,  7859.,  7921., 15876., 16008., 16140., 16272., 16404., 16536., 16668., 16800., 16932., 17064., 17196., 17328.,  8733.,  8803.,  8873.,  8943.,  9013.,  9083.,  9153.,  9223.};
  const std::array<int, 4> in_shape = {{ 1, 11, 12, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x12x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   29.,   35.,   41.,   47.,   53.,   59.,   65.,   71.,   77.,   83.,   89.,   95.,  112.,  132.,  152.,  172.,  192.,  212.,  232.,  252.,  272.,  292.,  312.,  332.,  179.,  193.,  207.,  221.,  235.,  249.,  263.,  277.,  291.,  305.,  319.,  333.,  347.,  361.,  375.,  389.,    0.,    0.,    0.,    0.,  173.,  179.,  185.,  191.,  197.,  203.,  209.,  215.,  221.,  227.,  233.,  239.,  245.,  251.,  257.,  263.,  672.,  692.,  712.,  732.,  752.,  772.,  792.,  812.,  832.,  852.,  872.,  892.,  571.,  585.,  599.,  613.,  627.,  641.,  655.,  669.,  683.,  697.,  711.,  725.,  739.,  753.,  767.,  781.,    0.,    0.,    0.,    0.,  341.,  347.,  353.,  359.,  365.,  371.,  377.,  383.,  389.,  395.,  401.,  407.,  413.,  419.,  425.,  431., 1232., 1252., 1272., 1292., 1312., 1332., 1352., 1372., 1392., 1412., 1432., 1452.,  963.,  977.,  991., 1005., 1019., 1033., 1047., 1061., 1075., 1089., 1103., 1117., 1131., 1145., 1159., 1173.,    0.,    0.,    0.,    0.,  509.,  515.,  521.,  527.,  533.,  539.,  545.,  551.,  557.,  563.,  569.,  575.,  581.,  587.,  593.,  599., 1792., 1812., 1832., 1852., 1872., 1892., 1912., 1932., 1952., 1972., 1992., 2012., 1355., 1369., 1383., 1397., 1411., 1425., 1439., 1453., 1467., 1481., 1495., 1509., 1523., 1537., 1551., 1565.,    0.,    0.,    0.,    0.,  694.,  722.,  750.,  778.,  806.,  834.,  862.,  890.,  918.,  946.,  974., 1002., 1030., 1058., 1086., 1114., 2744., 2816., 2888., 2960., 3032., 3104., 3176., 3248., 3320., 3392., 3464., 3536., 2130., 2174., 2218., 2262., 2306., 2350., 2394., 2438., 2482., 2526., 2570., 2614., 2658., 2702., 2746., 2790.,    0.,    0.,    0.,    0., 1478., 1506., 1534., 1562., 1590., 1618., 1646., 1674., 1702., 1730., 1758., 1786., 1814., 1842., 1870., 1898., 4760., 4832., 4904., 4976., 5048., 5120., 5192., 5264., 5336., 5408., 5480., 5552., 3362., 3406., 3450., 3494., 3538., 3582., 3626., 3670., 3714., 3758., 3802., 3846., 3890., 3934., 3978., 4022.,    0.,    0.,    0.,    0., 2262., 2290., 2318., 2346., 2374., 2402., 2430., 2458., 2486., 2514., 2542., 2570., 2598., 2626., 2654., 2682., 6776., 6848., 6920., 6992., 7064., 7136., 7208., 7280., 7352., 7424., 7496., 7568., 4594., 4638., 4682., 4726., 4770., 4814., 4858., 4902., 4946., 4990., 5034., 5078., 5122., 5166., 5210., 5254.,    0.,    0.,    0.,    0., 1865., 1887., 1909., 1931., 1953., 1975., 1997., 2019., 2041., 2063., 2085., 2107., 2129., 2151., 2173., 2195., 4760., 4812., 4864., 4916., 4968., 5020., 5072., 5124., 5176., 5228., 5280., 5332., 2903., 2933., 2963., 2993., 3023., 3053., 3083., 3113., 3143., 3173., 3203., 3233., 3263., 3293., 3323., 3353.,    0.,    0.,    0.,    0., 2481., 2503., 2525., 2547., 2569., 2591., 2613., 2635., 2657., 2679., 2701., 2723., 2745., 2767., 2789., 2811., 6216., 6268., 6320., 6372., 6424., 6476., 6528., 6580., 6632., 6684., 6736., 6788., 3743., 3773., 3803., 3833., 3863., 3893., 3923., 3953., 3983., 4013., 4043., 4073., 4103., 4133., 4163., 4193.,    0.,    0.,    0.,    0., 3097., 3119., 3141., 3163., 3185., 3207., 3229., 3251., 3273., 3295., 3317., 3339., 3361., 3383., 3405., 3427., 7672., 7724., 7776., 7828., 7880., 7932., 7984., 8036., 8088., 8140., 8192., 8244., 4583., 4613., 4643., 4673., 4703., 4733., 4763., 4793., 4823., 4853., 4883., 4913., 4943., 4973., 5003., 5033.,    0.,    0.,    0.,    0., 3713., 3735., 3757., 3779., 3801., 3823., 3845., 3867., 3889., 3911., 3933., 3955., 3977., 3999., 4021., 4043., 9128., 9180., 9232., 9284., 9336., 9388., 9440., 9492., 9544., 9596., 9648., 9700., 5423., 5453., 5483., 5513., 5543., 5573., 5603., 5633., 5663., 5693., 5723., 5753., 5783., 5813., 5843., 5873.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 11, 12, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x12x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  510.,   550.,   590.,   630.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,  1252.,  1396.,  1540.,  1684.,  1828.,  1972.,  2116.,  2260.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,  2356.,  2628.,  2900.,  3172.,  3444.,  3716.,  3988.,  4260.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,   350.,   390.,   430.,   470.,   510.,   550.,   590.,   630.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,  1252.,  1396.,  1540.,  1684.,  1828.,  1972.,  2116.,  2260.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,  2356.,  2628.,  2900.,  3172.,  3444.,  3716.,  3988.,  4260.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,  1268.,  1540.,  1812.,  2084.,  2356.,  2628.,  2900.,  3172.,  3444.,  3716.,  3988.,  4260.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,  5816.,  6488.,  7160.,  7832.,  5060.,  5460.,  5860.,  6260.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,  8024.,  8952.,  9880., 10808.,  6676.,  7204.,  7732.,  8260.,   340.,   868.,  1396.,  1924.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,  2356.,  2628.,  2900.,  3172.,  8504.,  9176.,  9848., 10520.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,  3460.,  3860.,  4260.,  4660., 11736., 12664., 13592., 14520.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,  4564.,  5092.,  5620.,  6148.,  6676.,  7204.,  7732.,  8260.,  3444.,  3716.,  3988.,  4260.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,  5816.,  6488.,  7160.,  7832.,  8504.,  9176.,  9848., 10520.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,  8024.,  8952.,  9880., 10808., 11736., 12664., 13592., 14520.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,  4564.,  5092.,  5620.,  6148.,  2006.,  2238.,  2470.,  2702.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,  4564.,  5092.,  5620.,  6148.,  6676.,  7204.,  7732.,  8260.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,  5668.,  6324.,  6980.,  7636.,  8292.,  8948.,  9604., 10260.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,  3044.,  3700.,  4356.,  5012.,  5668.,  6324.,  6980.,  7636.,  8292.,  8948.,  9604., 10260.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000., 12440., 13880., 15320., 16760.,  9908., 10692., 11476., 12260.,  1080.,  2776.,  4472.,  6168.,  7864.,  9560., 11256., 12952., 14648., 16344., 18040., 19736., 11524., 12436., 13348., 14260.,   580.,  1492.,  2404.,  3316.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,  5668.,  6324.,  6980.,  7636., 18200., 19640., 21080., 22520.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,  6772.,  7556.,  8340.,  9124., 21432., 23128., 24824., 26520.,  1080.,  2776.,  4472.,  6168.,  7864.,  9560., 11256., 12952.,  7876.,  8788.,  9700., 10612., 11524., 12436., 13348., 14260.,  8292.,  8948.,  9604., 10260.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012., 12440., 13880., 15320., 16760., 18200., 19640., 21080., 22520.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988., 14648., 16344., 18040., 19736., 21432., 23128., 24824., 26520.,  1080.,  2776.,  4472.,  6168.,  4228.,  5140.,  6052.,  6964.,  7876.,  8788.,  9700., 10612.,  3662.,  4086.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,  7876.,  8788.,  9700., 10612., 11524., 12436., 13348., 14260.,   310.,   798.,  1286.,  1774.,  4820.,  5860.,  6900.,  7940.,  8980., 10020., 11060., 12100., 13140., 14180., 15220., 16260.,   350.,   902.,  1454.,  2006.,  2558.,  3110.,  3662.,  4214.,  1966.,  2390.,  2814.,  3238.,  3662.,  4086.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,  7876.,  8788.,  9700., 10612.,  6166.,  6654.,  7142.,  7630.,   660.,  1700.,  2740.,  3780.,  4820.,  5860.,  6900.,  7940.,  8980., 10020., 11060., 12100.,  6974.,  7526.,  8078.,  8630.,   350.,   902.,  1454.,  2006.};
  const std::array<int, 4> in_shape = {{ 1, 11, 12, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x12x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   350.,   390.,   430.,   470.,   510.,   550.,   590.,   630.,   740.,   884.,  1028.,  1172.,  1316.,  1460.,  1604.,  1748.,  1892.,  2036.,  2180.,  2324.,  1318.,  1422.,  1526.,  1630.,  1734.,  1838.,  1942.,  2046.,  2150.,  2254.,  2358.,  2462.,  2566.,  2670.,  2774.,  2878.,     0.,     0.,     0.,     0.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  1470.,  1510.,  1550.,  1590.,  1630.,  1670.,  1710.,  1750.,  4772.,  4916.,  5060.,  5204.,  5348.,  5492.,  5636.,  5780.,  5924.,  6068.,  6212.,  6356.,  4230.,  4334.,  4438.,  4542.,  4646.,  4750.,  4854.,  4958.,  5062.,  5166.,  5270.,  5374.,  5478.,  5582.,  5686.,  5790.,     0.,     0.,     0.,     0.,  2270.,  2310.,  2350.,  2390.,  2430.,  2470.,  2510.,  2550.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,  6244.,  6388.,  6532.,  6676.,  6820.,  6964.,  7108.,  7252.,   740.,   884.,  1028.,  1172.,   486.,   590.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,  1526.,  1630.,  1734.,  1838.,  1942.,  2046.,     0.,     0.,     0.,     0.,   830.,   870.,   910.,   950.,   990.,  1030.,  1070.,  1110.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  3620.,  3764.,  3908.,  4052.,  4196.,  4340.,  4484.,  4628.,  4772.,  4916.,  5060.,  5204.,  3398.,  3502.,  3606.,  3710.,  3814.,  3918.,  4022.,  4126.,  4230.,  4334.,  4438.,  4542.,  4646.,  4750.,  4854.,  4958.,     0.,     0.,     0.,     0.,  2060.,  2268.,  2476.,  2684.,  2892.,  3100.,  3308.,  3516.,  3724.,  3932.,  4140.,  4348.,  4556.,  4764.,  4972.,  5180.,  8040.,  8584.,  9128.,  9672., 10216., 10760., 11304., 11848., 12392., 12936., 13480., 14024.,  9244.,  9580.,  9916., 10252.,  3932.,  4268.,  4604.,  4940.,  5276.,  5612.,  5948.,  6284.,  6620.,  6956.,  7292.,  7628.,     0.,     0.,     0.,     0.,  5324.,  5532.,  5740.,  5948.,  6156.,  6364.,  6572.,  6780.,  6988.,  7196.,  7404.,  7612.,  7820.,  8028.,  8236.,  8444., 16616., 17160., 17704., 18248., 18792., 19336., 19880., 20424., 20968., 21512., 22056., 22600., 11996., 12332., 12668., 13004., 13340., 13676., 14012., 14348., 14684., 15020., 15356., 15692., 16028., 16364., 16700., 17036.,     0.,     0.,     0.,     0., 11148., 11356., 11564., 11772., 11980., 12188., 12396., 12604.,  2060.,  2268.,  2476.,  2684.,  2892.,  3100.,  3308.,  3516., 21096., 21640., 22184., 22728., 23272., 23816., 24360., 24904.,  8040.,  8584.,  9128.,  9672.,  6556.,  6892.,  7228.,  7564.,  7900.,  8236.,  8572.,  8908.,  9244.,  9580.,  9916., 10252.,  3932.,  4268.,  4604.,  4940.,     0.,     0.,     0.,     0.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  4814.,  4982.,  5150.,  5318.,  5486.,  5654.,  5822.,  5990., 10948., 11348., 11748., 12148., 12548., 12948., 13348., 13748., 14148., 14548., 14948., 15348.,  7574.,  7806.,  8038.,  8270.,  8502.,  8734.,  8966.,  9198.,  9430.,  9662.,  9894., 10126., 10358., 10590., 10822., 11054.,     0.,     0.,     0.,     0.,  8174.,  8342.,  8510.,  8678.,  8846.,  9014.,  9182.,  9350.,  9518.,  9686.,  9854., 10022., 10190., 10358., 10526., 10694., 11396., 11796., 12196., 12596., 12996., 13396., 13796., 14196., 14596., 14996., 15396., 15796., 14070., 14302., 14534., 14766.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,  2006.,  2238.,  2470.,  2702.,     0.,     0.,     0.,     0.,  2126.,  2294.,  2462.,  2630.,  2798.,  2966.,  3134.,  3302.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  7748.,  8148.,  8548.,  8948.,  9348.,  9748., 10148., 10548., 10948., 11348., 11748., 12148.,  5718.,  5950.,  6182.,  6414.,  6646.,  6878.,  7110.,  7342.,  7574.,  7806.,  8038.,  8270.,  8502.,  8734.,  8966.,  9198.,     0.,     0.,     0.,     0.,  6830.,  6998.,  7166.,  7334.,  7502.,  7670.,  7838.,  8006.,  8174.,  8342.,  8510.,  8678.,  8846.,  9014.,  9182.,  9350., 18948., 19348., 19748., 20148., 20548., 20948., 21348., 21748., 11396., 11796., 12196., 12596., 12214., 12446., 12678., 12910., 13142., 13374., 13606., 13838., 14070., 14302., 14534., 14766.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 1, 11, 12, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x14x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  17.,   18.,   49.,   52.,   55.,   36.,   83.,   88.,   93.,   54.,  117.,  124.,  131.,   72.,   24.,   25.,   70.,   73.,   76.,   50.,  118.,  123.,  128.,   75.,  166.,  173.,  180.,  100.,   46.,   52.,  122.,  136.,  150.,   88.,  190.,  208.,  226.,  124.,  258.,  280.,  302.,  160.,   88.,   94.,  220.,  234.,  248.,  144.,  316.,  334.,  352.,  194.,  412.,  434.,  456.,  244.,  130.,  136.,  318.,  332.,  346.,  200.,  442.,  460.,  478.,  264.,  566.,  588.,  610.,  328.,  120.,  125.,  262.,  273.,  284.,  150.,  310.,  323.,  336.,  175.,  358.,  373.,  388.,  200.,  182.,  196.,  394.,  424.,  454.,  232.,  462.,  496.,  530.,  268.,  530.,  568.,  606.,  304.,  280.,  294.,  604.,  634.,  664.,  344.,  700.,  734.,  768.,  394.,  796.,  834.,  872.,  444.,  378.,  392.,  814.,  844.,  874.,  456.,  938.,  972., 1006.,  520., 1062., 1100., 1138.,  584.,  216.,  225.,  454.,  473.,  492.,  250.,  502.,  523.,  544.,  275.,  550.,  573.,  596.,  300.,  279.,  288.,  587.,  606.,  625.,  320.,  649.,  670.,  691.,  352.,  711.,  734.,  757.,  384.};
  const std::array<int, 4> in_shape = {{ 1, 11, 14, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x14x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  1.,   2.,   3.,   4.,   7.,  10.,  13.,   8.,  10.,  12.,  14.,   0.,   0.,   0.,   8.,   9.,  10.,  11.,  28.,  31.,  34.,  22.,  24.,  26.,  28.,   0.,   0.,   0.,  15.,  16.,  17.,  18.,  49.,  52.,  55.,  36.,  38.,  40.,  42.,   0.,   0.,   0.,  22.,  23.,  24.,  25.,  70.,  73.,  76.,  50.,  52.,  54.,  56.,   0.,   0.,   0.,  32.,  36.,  40.,  44., 110., 120., 130.,  80.,  86.,  92.,  98.,   0.,   0.,   0.,  60.,  64.,  68.,  72., 180., 190., 200., 122., 128., 134., 140.,   0.,   0.,   0.,  88.,  92.,  96., 100., 250., 260., 270., 164., 170., 176., 182.,   0.,   0.,   0.,  66.,  69.,  72.,  75., 166., 173., 180., 100., 104., 108., 112.,   0.,   0.,   0.,  87.,  90.,  93.,  96., 215., 222., 229., 128., 132., 136., 140.,   0.,   0.,   0., 108., 111., 114., 117., 264., 271., 278., 156., 160., 164., 168.,   0.,   0.,   0., 129., 132., 135., 138., 313., 320., 327., 184., 188., 192., 196.,   0.,   0.,   0.};
  const std::array<int, 4> in_shape = {{ 1, 11, 14, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x14x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 101.,  107.,  320.,  340.,  360.,  249.,  588.,  624.,  660.,  391.,  856.,  908.,  960.,  533.,  143.,  149.,  460.,  480.,  500.,  347.,  840.,  876.,  912.,  545., 1220., 1272., 1324.,  743.,  290.,  334.,  816.,  920., 1024.,  618., 1352., 1488., 1624.,  902., 1888., 2056., 2224., 1186.,  598.,  642., 1544., 1648., 1752., 1038., 2304., 2440., 2576., 1434., 3064., 3232., 3400., 1830.,  906.,  950., 2272., 2376., 2480., 1458., 3256., 3392., 3528., 1966., 4240., 4408., 4576., 2474.,  903.,  941., 1980., 2064., 2148., 1139., 2360., 2460., 2560., 1337., 2740., 2856., 2972., 1535., 1362., 1470., 2960., 3192., 3424., 1754., 3496., 3760., 4024., 2038., 4032., 4328., 4624., 2322., 2118., 2226., 4584., 4816., 5048., 2622., 5344., 5608., 5872., 3018., 6104., 6400., 6696., 3414., 2874., 2982., 6208., 6440., 6672., 3490., 7192., 7456., 7720., 3998., 8176., 8472., 8768., 4506., 1663., 1733., 3500., 3648., 3796., 1931., 3880., 4044., 4208., 2129., 4260., 4440., 4620., 2327., 2153., 2223., 4536., 4684., 4832., 2477., 5028., 5192., 5356., 2731., 5520., 5700., 5880., 2985.};
  const std::array<int, 4> in_shape = {{ 1, 11, 14, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x14x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   40.,   60.,   80.,   53.,   67.,   81.,   95.,    0.,    0.,    0.,   47.,   53.,   59.,   65.,  180.,  200.,  220.,  151.,  165.,  179.,  193.,    0.,    0.,    0.,   89.,   95.,  101.,  107.,  320.,  340.,  360.,  249.,  263.,  277.,  291.,    0.,    0.,    0.,  131.,  137.,  143.,  149.,  460.,  480.,  500.,  347.,  361.,  375.,  389.,    0.,    0.,    0.,  190.,  218.,  246.,  274.,  728.,  800.,  872.,  558.,  602.,  646.,  690.,    0.,    0.,    0.,  386.,  414.,  442.,  470., 1232., 1304., 1376.,  866.,  910.,  954.,  998.,    0.,    0.,    0.,  582.,  610.,  638.,  666., 1736., 1808., 1880., 1174., 1218., 1262., 1306.,    0.,    0.,    0.,  479.,  501.,  523.,  545., 1220., 1272., 1324.,  743.,  773.,  803.,  833.,    0.,    0.,    0.,  633.,  655.,  677.,  699., 1584., 1636., 1688.,  953.,  983., 1013., 1043.,    0.,    0.,    0.,  787.,  809.,  831.,  853., 1948., 2000., 2052., 1163., 1193., 1223., 1253.,    0.,    0.,    0.,  941.,  963.,  985., 1007., 2312., 2364., 2416., 1373., 1403., 1433., 1463.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 11, 14, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x14x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,  1636.,  1780.,   260.,   174.,  2740.,  3012.,   596.,   278.,  3844.,  4244.,   932.,   382.,   310.,   350.,   980.,  1124.,  1268.,   902.,  1956.,  2228.,  2500.,  1454.,  2932.,  3332.,  3732.,  2006.,  1372.,  1708.,  2952.,  3752.,  4552.,  2940.,  4136.,  5192.,  6248.,  4172.,  5320.,  6632.,  7944.,  5404.,  3084.,  3420.,  6888.,  7688.,  8488.,  4524.,  8840.,  9896., 10952.,  5628., 10792., 12104., 13416.,  6732.,   700.,  1036.,  7752.,  8552.,  2952.,  2012., 10472., 11528.,  4136.,  2988., 13192., 14504.,  5320.,  3964.,  2262.,  2558.,  4884.,  5540.,  6196.,  3110.,  5860.,  6644.,  7428.,  3662.,  6836.,  7748.,  8660.,  4214.,  5788.,  6636.,  7688.,  9512., 11336.,  7868.,  8872., 10952., 13032.,  9100., 10056., 12392., 14728., 10332.,  6988.,  7836., 14696., 16520., 18344.,  8940., 16648., 18728., 20808., 10044., 18600., 20936., 23272., 11148.,  4092.,  4940., 18632., 20456.,  7688.,  5916., 21352., 23432.,  8872.,  6892., 24072., 26408., 10056.,  7868.,  4214.,  4766.,  8788.,  9956., 11124.,  5318.,  9764., 11060., 12356.,  5870., 10740., 12164., 13588.,  6422.,  8078.,  8630.,  8132.,  9300., 10468.,  9630.,  8980., 10276., 11572., 10630.,  9828., 11252., 12676., 11630.};
  const std::array<int, 4> in_shape = {{ 1, 11, 14, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x14x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   260.,   404.,   548.,   382.,   486.,   590.,   694.,     0.,     0.,     0.,   310.,   350.,   390.,   430.,  1268.,  1412.,  1556.,  1110.,  1214.,  1318.,  1422.,     0.,     0.,     0.,   590.,   630.,   670.,   710.,  2276.,  2420.,  2564.,  1838.,  1942.,  2046.,  2150.,     0.,     0.,     0.,   870.,   910.,   950.,   990.,  3284.,  3428.,  3572.,  2566.,  2670.,  2774.,  2878.,     0.,     0.,     0.,  1260.,  1468.,  1676.,  1884.,  5224.,  5768.,  6312.,  4140.,  4476.,  4812.,  5148.,     0.,     0.,     0.,  2716.,  2924.,  3132.,  3340.,  9032.,  9576., 10120.,  6492.,  6828.,  7164.,  7500.,     0.,     0.,     0.,  4172.,  4380.,  4588.,  4796., 12840., 13384., 13928.,  8844.,  9180.,  9516.,  9852.,     0.,     0.,     0.,  3638.,  3806.,  3974.,  4142.,  9332.,  9732., 10132.,  5718.,  5950.,  6182.,  6414.,     0.,     0.,     0.,  4814.,  4982.,  5150.,  5318., 12132., 12532., 12932.,  7342.,  7574.,  7806.,  8038.,     0.,     0.,     0.,  5990.,  6158.,  6326.,  6494., 14932., 15332., 15732.,  8966.,  9198.,  9430.,  9662.,     0.,     0.,     0.,  7166.,  7334.,  7502.,  7670., 17732., 18132., 18532., 10590., 10822., 11054., 11286.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 1, 11, 14, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x14x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,  161.,  166.,  171.,  176.,  181.,  186.,  105.,  108.,  227.,  234.,  241.,  248.,  255.,  262.,  140.,  144.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  231.,  236.,  241.,  246.,  251.,  256.,  147.,  150.,  325.,  332.,  339.,  346.,  353.,  360.,  196.,  200.,   86.,   92.,   98.,  104.,  230.,  244.,  258.,  272.,  286.,  300.,  168.,  176.,  362.,  380.,  398.,  416.,  434.,  452.,  238.,  248.,  494.,  516.,  538.,  560.,  582.,  604.,  308.,  320.,  170.,  176.,  182.,  188.,  426.,  440.,  454.,  468.,  482.,  496.,  280.,  288.,  614.,  632.,  650.,  668.,  686.,  704.,  378.,  388.,  802.,  824.,  846.,  868.,  890.,  912.,  476.,  488.,  254.,  260.,  266.,  272.,  622.,  636.,  650.,  664.,  678.,  692.,  392.,  400.,  866.,  884.,  902.,  920.,  938.,  956.,  518.,  528., 1110., 1132., 1154., 1176., 1198., 1220.,  644.,  656.,  235.,  240.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  607.,  620.,  633.,  646.,  659.,  672.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  350.,  364.,  378.,  392.,  758.,  788.,  818.,  848.,  878.,  908.,  448.,  464.,  890.,  924.,  958.,  992., 1026., 1060.,  518.,  536., 1022., 1060., 1098., 1136., 1174., 1212.,  588.,  608.,  546.,  560.,  574.,  588., 1178., 1208., 1238., 1268., 1298., 1328.,  672.,  688., 1366., 1400., 1434., 1468., 1502., 1536.,  770.,  788., 1554., 1592., 1630., 1668., 1706., 1744.,  868.,  888.,  742.,  756.,  770.,  784., 1598., 1628., 1658., 1688., 1718., 1748.,  896.,  912., 1842., 1876., 1910., 1944., 1978., 2012., 1022., 1040., 2086., 2124., 2162., 2200., 2238., 2276., 1148., 1168.,  423.,  432.,  441.,  450.,  889.,  908.,  927.,  946.,  965.,  984.,  490.,  500.,  983., 1004., 1025., 1046., 1067., 1088.,  539.,  550., 1077., 1100., 1123., 1146., 1169., 1192.,  588.,  600.,  549.,  558.,  567.,  576., 1155., 1174., 1193., 1212., 1231., 1250.,  630.,  640., 1277., 1298., 1319., 1340., 1361., 1382.,  693.,  704., 1399., 1422., 1445., 1468., 1491., 1514.,  756.,  768.};
  const std::array<int, 4> in_shape = {{ 1, 11, 14, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x14x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,  11.,  14.,  17.,  20.,  23.,  26.,  14.,  16.,  18.,  20.,  22.,  24.,  26.,  28.,   0.,   0.,   0.,   0.,   0.,   0.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  53.,  56.,  59.,  62.,  65.,  68.,  42.,  44.,  46.,  48.,  50.,  52.,  54.,  56.,   0.,   0.,   0.,   0.,   0.,   0.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,  95.,  98., 101., 104., 107., 110.,  70.,  72.,  74.,  76.,  78.,  80.,  82.,  84.,   0.,   0.,   0.,   0.,   0.,   0.,  43.,  44.,  45.,  46.,  47.,  48.,  49.,  50., 137., 140., 143., 146., 149., 152.,  98., 100., 102., 104., 106., 108., 110., 112.,   0.,   0.,   0.,   0.,   0.,   0.,  60.,  64.,  68.,  72.,  76.,  80.,  84.,  88., 210., 220., 230., 240., 250., 260., 154., 160., 166., 172., 178., 184., 190., 196.,   0.,   0.,   0.,   0.,   0.,   0., 116., 120., 124., 128., 132., 136., 140., 144., 350., 360., 370., 380., 390., 400., 238., 244., 250., 256., 262., 268., 274., 280.,   0.,   0.,   0.,   0.,   0.,   0., 172., 176., 180., 184., 188., 192., 196., 200., 490., 500., 510., 520., 530., 540., 322., 328., 334., 340., 346., 352., 358., 364.,   0.,   0.,   0.,   0.,   0.,   0., 129., 132., 135., 138., 141., 144., 147., 150., 325., 332., 339., 346., 353., 360., 196., 200., 204., 208., 212., 216., 220., 224.,   0.,   0.,   0.,   0.,   0.,   0., 171., 174., 177., 180., 183., 186., 189., 192., 423., 430., 437., 444., 451., 458., 252., 256., 260., 264., 268., 272., 276., 280.,   0.,   0.,   0.,   0.,   0.,   0., 213., 216., 219., 222., 225., 228., 231., 234., 521., 528., 535., 542., 549., 556., 308., 312., 316., 320., 324., 328., 332., 336.,   0.,   0.,   0.,   0.,   0.,   0., 255., 258., 261., 264., 267., 270., 273., 276., 619., 626., 633., 640., 647., 654., 364., 368., 372., 376., 380., 384., 388., 392.,   0.,   0.,   0.,   0.,   0.,   0.};
  const std::array<int, 4> in_shape = {{ 1, 11, 14, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x14x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  197.,   203.,   209.,   215.,   624.,   644.,   664.,   684.,   704.,   724.,   487.,   501.,  1148.,  1184.,  1220.,  1256.,  1292.,  1328.,   765.,   787.,  1672.,  1724.,  1776.,  1828.,  1880.,  1932.,  1043.,  1073.,   281.,   287.,   293.,   299.,   904.,   924.,   944.,   964.,   984.,  1004.,   683.,   697.,  1652.,  1688.,  1724.,  1760.,  1796.,  1832.,  1073.,  1095.,  2400.,  2452.,  2504.,  2556.,  2608.,  2660.,  1463.,  1493.,   546.,   590.,   634.,   678.,  1552.,  1656.,  1760.,  1864.,  1968.,  2072.,  1190.,  1250.,  2600.,  2736.,  2872.,  3008.,  3144.,  3280.,  1746.,  1822.,  3648.,  3816.,  3984.,  4152.,  4320.,  4488.,  2302.,  2394.,  1162.,  1206.,  1250.,  1294.,  3008.,  3112.,  3216.,  3320.,  3424.,  3528.,  2030.,  2090.,  4504.,  4640.,  4776.,  4912.,  5048.,  5184.,  2810.,  2886.,  6000.,  6168.,  6336.,  6504.,  6672.,  6840.,  3590.,  3682.,  1778.,  1822.,  1866.,  1910.,  4464.,  4568.,  4672.,  4776.,  4880.,  4984.,  2870.,  2930.,  6408.,  6544.,  6680.,  6816.,  6952.,  7088.,  3874.,  3950.,  8352.,  8520.,  8688.,  8856.,  9024.,  9192.,  4878.,  4970.,  1777.,  1815.,  1853.,  1891.,  3896.,  3980.,  4064.,  4148.,  4232.,  4316.,  2243.,  2289.,  4644.,  4744.,  4844.,  4944.,  5044.,  5144.,  2633.,  2687.,  5392.,  5508.,  5624.,  5740.,  5856.,  5972.,  3023.,  3085.,  2642.,  2750.,  2858.,  2966.,  5744.,  5976.,  6208.,  6440.,  6672.,  6904.,  3414.,  3538.,  6792.,  7056.,  7320.,  7584.,  7848.,  8112.,  3970.,  4110.,  7840.,  8136.,  8432.,  8728.,  9024.,  9320.,  4526.,  4682.,  4154.,  4262.,  4370.,  4478.,  8992.,  9224.,  9456.,  9688.,  9920., 10152.,  5150.,  5274., 10488., 10752., 11016., 11280., 11544., 11808.,  5930.,  6070., 11984., 12280., 12576., 12872., 13168., 13464.,  6710.,  6866.,  5666.,  5774.,  5882.,  5990., 12240., 12472., 12704., 12936., 13168., 13400.,  6886.,  7010., 14184., 14448., 14712., 14976., 15240., 15504.,  7890.,  8030., 16128., 16424., 16720., 17016., 17312., 17608.,  8894.,  9050.,  3273.,  3343.,  3413.,  3483.,  6888.,  7036.,  7184.,  7332.,  7480.,  7628.,  3803.,  3881.,  7636.,  7800.,  7964.,  8128.,  8292.,  8456.,  4193.,  4279.,  8384.,  8564.,  8744.,  8924.,  9104.,  9284.,  4583.,  4677.,  4253.,  4323.,  4393.,  4463.,  8960.,  9108.,  9256.,  9404.,  9552.,  9700.,  4895.,  4973.,  9932., 10096., 10260., 10424., 10588., 10752.,  5397.,  5483., 10904., 11084., 11264., 11444., 11624., 11804.,  5899.,  5993.};
  const std::array<int, 4> in_shape = {{ 1, 11, 14, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x14x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   29.,   35.,   41.,   47.,   64.,   84.,  104.,  124.,  144.,  164.,   95.,  109.,  123.,  137.,  151.,  165.,  179.,  193.,    0.,    0.,    0.,    0.,    0.,    0.,   89.,   95.,  101.,  107.,  113.,  119.,  125.,  131.,  344.,  364.,  384.,  404.,  424.,  444.,  291.,  305.,  319.,  333.,  347.,  361.,  375.,  389.,    0.,    0.,    0.,    0.,    0.,    0.,  173.,  179.,  185.,  191.,  197.,  203.,  209.,  215.,  624.,  644.,  664.,  684.,  704.,  724.,  487.,  501.,  515.,  529.,  543.,  557.,  571.,  585.,    0.,    0.,    0.,    0.,    0.,    0.,  257.,  263.,  269.,  275.,  281.,  287.,  293.,  299.,  904.,  924.,  944.,  964.,  984., 1004.,  683.,  697.,  711.,  725.,  739.,  753.,  767.,  781.,    0.,    0.,    0.,    0.,    0.,    0.,  358.,  386.,  414.,  442.,  470.,  498.,  526.,  554., 1400., 1472., 1544., 1616., 1688., 1760., 1082., 1126., 1170., 1214., 1258., 1302., 1346., 1390.,    0.,    0.,    0.,    0.,    0.,    0.,  750.,  778.,  806.,  834.,  862.,  890.,  918.,  946., 2408., 2480., 2552., 2624., 2696., 2768., 1698., 1742., 1786., 1830., 1874., 1918., 1962., 2006.,    0.,    0.,    0.,    0.,    0.,    0., 1142., 1170., 1198., 1226., 1254., 1282., 1310., 1338., 3416., 3488., 3560., 3632., 3704., 3776., 2314., 2358., 2402., 2446., 2490., 2534., 2578., 2622.,    0.,    0.,    0.,    0.,    0.,    0.,  941.,  963.,  985., 1007., 1029., 1051., 1073., 1095., 2400., 2452., 2504., 2556., 2608., 2660., 1463., 1493., 1523., 1553., 1583., 1613., 1643., 1673.,    0.,    0.,    0.,    0.,    0.,    0., 1249., 1271., 1293., 1315., 1337., 1359., 1381., 1403., 3128., 3180., 3232., 3284., 3336., 3388., 1883., 1913., 1943., 1973., 2003., 2033., 2063., 2093.,    0.,    0.,    0.,    0.,    0.,    0., 1557., 1579., 1601., 1623., 1645., 1667., 1689., 1711., 3856., 3908., 3960., 4012., 4064., 4116., 2303., 2333., 2363., 2393., 2423., 2453., 2483., 2513.,    0.,    0.,    0.,    0.,    0.,    0., 1865., 1887., 1909., 1931., 1953., 1975., 1997., 2019., 4584., 4636., 4688., 4740., 4792., 4844., 2723., 2753., 2783., 2813., 2843., 2873., 2903., 2933.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 11, 14, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x14x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,  1508.,  1652.,  1796.,  1940.,   420.,   564.,   278.,   382.,  2612.,  2884.,  3156.,  3428.,  1012.,  1284.,   446.,   614.,  3716.,  4116.,  4516.,  4916.,  1604.,  2004.,   614.,   846.,   590.,   630.,    30.,    70.,  1220.,  1364.,  1508.,  1652.,  1796.,  1940.,    70.,   174.,  2068.,  2340.,  2612.,  2884.,  3156.,  3428.,   110.,   278.,  2916.,  3316.,  3716.,  4116.,  4516.,  4916.,   150.,   382.,  1884.,  2220.,  2556.,  2892.,  3720.,  4520.,  5320.,  6120.,  6920.,  7720.,  3916.,  4380.,  4904.,  5960.,  7016.,  8072.,  9128., 10184.,  5276.,  5868.,  6088.,  7400.,  8712., 10024., 11336., 12648.,  6636.,  7356.,  1212.,  1548.,  1884.,  2220.,  8520.,  9320.,  3720.,  4520.,  5320.,  6120.,  2988.,  3452., 11240., 12296.,  4904.,  5960.,  7016.,  8072.,  4092.,  4684., 13960., 15272.,  6088.,  7400.,  8712., 10024.,  5196.,  5916.,   540.,   876.,  1212.,  1548.,  6920.,  7720.,  8520.,  9320.,  3720.,  4520.,  2060.,  2524.,  9128., 10184., 11240., 12296.,  4904.,  5960.,  2908.,  3500., 11336., 12648., 13960., 15272.,  6088.,  7400.,  3756.,  4476.,  4334.,  4630.,   190.,   486.,  4612.,  5268.,  5924.,  6580.,  7236.,  7892.,   230.,   590.,  5460.,  6244.,  7028.,  7812.,  8596.,  9380.,   270.,   694.,  6308.,  7220.,  8132.,  9044.,  9956., 10868.,   310.,   798.,  6300.,  7148.,  7996.,  8844.,  8456., 10280., 12104., 13928., 15752., 17576.,  9356., 10332.,  9640., 11720., 13800., 15880., 17960., 20040., 10716., 11820., 10824., 13160., 15496., 17832., 20168., 22504., 12076., 13308.,  4604.,  5452.,  6300.,  7148., 19400., 21224.,  8456., 10280., 12104., 13928.,  7404.,  8380., 22120., 24200.,  9640., 11720., 13800., 15880.,  8508.,  9612., 24840., 27176., 10824., 13160., 15496., 17832.,  9612., 10844.,  2908.,  3756.,  4604.,  5452., 15752., 17576., 19400., 21224.,  8456., 10280.,  5452.,  6428., 17960., 20040., 22120., 24200.,  9640., 11720.,  6300.,  7404., 20168., 22504., 24840., 27176., 10824., 13160.,  7148.,  8380.,  8078.,  8630.,   350.,   902.,  8004.,  9172., 10340., 11508., 12676., 13844.,   390.,  1006.,  8852., 10148., 11444., 12740., 14036., 15332.,   430.,  1110.,  9700., 11124., 12548., 13972., 15396., 16820.,   470.,  1214.,  6974.,  7526.,  8078.,  8630.,  5668.,  6836.,  8004.,  9172., 10340., 11508.,  9014.,  9630.,  6260.,  7556.,  8852., 10148., 11444., 12740.,  9950., 10630.,  6852.,  8276.,  9700., 11124., 12548., 13972., 10886., 11630.};
  const std::array<int, 4> in_shape = {{ 1, 11, 14, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x14x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   420.,   564.,   708.,   852.,   996.,  1140.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,     0.,     0.,     0.,     0.,     0.,     0.,   590.,   630.,   670.,   710.,   750.,   790.,   830.,   870.,  2436.,  2580.,  2724.,  2868.,  3012.,  3156.,  2150.,  2254.,  2358.,  2462.,  2566.,  2670.,  2774.,  2878.,     0.,     0.,     0.,     0.,     0.,     0.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  4452.,  4596.,  4740.,  4884.,  5028.,  5172.,  3606.,  3710.,  3814.,  3918.,  4022.,  4126.,  4230.,  4334.,     0.,     0.,     0.,     0.,     0.,     0.,  1710.,  1750.,  1790.,  1830.,  1870.,  1910.,  1950.,  1990.,  6468.,  6612.,  6756.,  6900.,  7044.,  7188.,  5062.,  5166.,  5270.,  5374.,  5478.,  5582.,  5686.,  5790.,     0.,     0.,     0.,     0.,     0.,     0.,  2380.,  2588.,  2796.,  3004.,  3212.,  3420.,  3628.,  3836.,  7528.,  8072.,  8616.,  9160.,  9704., 10248.,  8060.,  8396.,  2076.,  2412.,  2748.,  3084.,  3420.,  3756.,     0.,     0.,     0.,     0.,     0.,     0.,  2732.,  2940.,  3148.,  3356.,  3564.,  3772.,  3980.,  4188.,  8488.,  9032.,  9576., 10120., 10664., 11208.,  6108.,  6444.,  6780.,  7116.,  7452.,  7788.,  8124.,  8460.,     0.,     0.,     0.,     0.,     0.,     0.,  5644.,  5852.,  6060.,  6268.,  6476.,  6684.,  6892.,  7100., 16104., 16648., 17192., 17736., 18280., 18824., 10812., 11148., 11484., 11820., 12156., 12492., 12828., 13164.,     0.,     0.,     0.,     0.,     0.,     0.,  7166.,  7334.,  7502.,  7670.,  7838.,  8006.,  8174.,  8342., 18404., 18804., 19204., 19604., 20004., 20404., 11286., 11518., 11750., 11982., 12214., 12446., 12678., 12910.,     0.,     0.,     0.,     0.,     0.,     0.,  9518.,  9686.,  9854., 10022., 10190., 10358., 10526., 10694., 13252., 13652., 14052., 14452., 14852., 15252., 14534., 14766.,   150.,   382.,   614.,   846.,  1078.,  1310.,     0.,     0.,     0.,     0.,     0.,     0.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  4004.,  4404.,  4804.,  5204.,  5604.,  6004.,  2934.,  3166.,  3398.,  3630.,  3862.,  4094.,  4326.,  4558.,     0.,     0.,     0.,     0.,     0.,     0.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  9604., 10004., 10404., 10804., 11204., 11604.,  6182.,  6414.,  6646.,  6878.,  7110.,  7342.,  7574.,  7806.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 1, 11, 14, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x14x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  317.,  322.,  327.,  332.,  337.,  342.,  347.,  352.,  357.,  362.,  367.,  372.,  207.,  210.,  213.,  216.,  447.,  454.,  461.,  468.,  475.,  482.,  489.,  496.,  503.,  510.,  517.,  524.,  276.,  280.,  284.,  288.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  457.,  462.,  467.,  472.,  477.,  482.,  487.,  492.,  497.,  502.,  507.,  512.,  291.,  294.,  297.,  300.,  643.,  650.,  657.,  664.,  671.,  678.,  685.,  692.,  699.,  706.,  713.,  720.,  388.,  392.,  396.,  400.,  166.,  172.,  178.,  184.,  190.,  196.,  202.,  208.,  446.,  460.,  474.,  488.,  502.,  516.,  530.,  544.,  558.,  572.,  586.,  600.,  328.,  336.,  344.,  352.,  706.,  724.,  742.,  760.,  778.,  796.,  814.,  832.,  850.,  868.,  886.,  904.,  466.,  476.,  486.,  496.,  966.,  988., 1010., 1032., 1054., 1076., 1098., 1120., 1142., 1164., 1186., 1208.,  604.,  616.,  628.,  640.,  334.,  340.,  346.,  352.,  358.,  364.,  370.,  376.,  838.,  852.,  866.,  880.,  894.,  908.,  922.,  936.,  950.,  964.,  978.,  992.,  552.,  560.,  568.,  576., 1210., 1228., 1246., 1264., 1282., 1300., 1318., 1336., 1354., 1372., 1390., 1408.,  746.,  756.,  766.,  776., 1582., 1604., 1626., 1648., 1670., 1692., 1714., 1736., 1758., 1780., 1802., 1824.,  940.,  952.,  964.,  976.,  502.,  508.,  514.,  520.,  526.,  532.,  538.,  544., 1230., 1244., 1258., 1272., 1286., 1300., 1314., 1328., 1342., 1356., 1370., 1384.,  776.,  784.,  792.,  800., 1714., 1732., 1750., 1768., 1786., 1804., 1822., 1840., 1858., 1876., 1894., 1912., 1026., 1036., 1046., 1056., 2198., 2220., 2242., 2264., 2286., 2308., 2330., 2352., 2374., 2396., 2418., 2440., 1276., 1288., 1300., 1312.,  465.,  470.,  475.,  480.,  485.,  490.,  495.,  500., 1015., 1026., 1037., 1048., 1059., 1070., 1081., 1092., 1103., 1114., 1125., 1136.,  582.,  588.,  594.,  600., 1201., 1214., 1227., 1240., 1253., 1266., 1279., 1292., 1305., 1318., 1331., 1344.,  679.,  686.,  693.,  700., 1387., 1402., 1417., 1432., 1447., 1462., 1477., 1492., 1507., 1522., 1537., 1552.,  776.,  784.,  792.,  800.,  686.,  700.,  714.,  728.,  742.,  756.,  770.,  784., 1486., 1516., 1546., 1576., 1606., 1636., 1666., 1696., 1726., 1756., 1786., 1816.,  880.,  896.,  912.,  928., 1746., 1780., 1814., 1848., 1882., 1916., 1950., 1984., 2018., 2052., 2086., 2120., 1018., 1036., 1054., 1072., 2006., 2044., 2082., 2120., 2158., 2196., 2234., 2272., 2310., 2348., 2386., 2424., 1156., 1176., 1196., 1216., 1078., 1092., 1106., 1120., 1134., 1148., 1162., 1176., 2326., 2356., 2386., 2416., 2446., 2476., 2506., 2536., 2566., 2596., 2626., 2656., 1328., 1344., 1360., 1376., 2698., 2732., 2766., 2800., 2834., 2868., 2902., 2936., 2970., 3004., 3038., 3072., 1522., 1540., 1558., 1576., 3070., 3108., 3146., 3184., 3222., 3260., 3298., 3336., 3374., 3412., 3450., 3488., 1716., 1736., 1756., 1776., 1470., 1484., 1498., 1512., 1526., 1540., 1554., 1568., 3166., 3196., 3226., 3256., 3286., 3316., 3346., 3376., 3406., 3436., 3466., 3496., 1776., 1792., 1808., 1824., 3650., 3684., 3718., 3752., 3786., 3820., 3854., 3888., 3922., 3956., 3990., 4024., 2026., 2044., 2062., 2080., 4134., 4172., 4210., 4248., 4286., 4324., 4362., 4400., 4438., 4476., 4514., 4552., 2276., 2296., 2316., 2336.,  837.,  846.,  855.,  864.,  873.,  882.,  891.,  900., 1759., 1778., 1797., 1816., 1835., 1854., 1873., 1892., 1911., 1930., 1949., 1968.,  970.,  980.,  990., 1000., 1945., 1966., 1987., 2008., 2029., 2050., 2071., 2092., 2113., 2134., 2155., 2176., 1067., 1078., 1089., 1100., 2131., 2154., 2177., 2200., 2223., 2246., 2269., 2292., 2315., 2338., 2361., 2384., 1164., 1176., 1188., 1200., 1089., 1098., 1107., 1116., 1125., 1134., 1143., 1152., 2291., 2310., 2329., 2348., 2367., 2386., 2405., 2424., 2443., 2462., 2481., 2500., 1250., 1260., 1270., 1280., 2533., 2554., 2575., 2596., 2617., 2638., 2659., 2680., 2701., 2722., 2743., 2764., 1375., 1386., 1397., 1408., 2775., 2798., 2821., 2844., 2867., 2890., 2913., 2936., 2959., 2982., 3005., 3028., 1500., 1512., 1524., 1536.};
  const std::array<int, 4> in_shape = {{ 1, 11, 14, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x14x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,    9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   19.,   22.,   25.,   28.,   31.,   34.,   37.,   40.,   43.,   46.,   49.,   52.,   26.,   28.,   30.,   32.,   34.,   36.,   38.,   40.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,  103.,  106.,  109.,  112.,  115.,  118.,  121.,  124.,  127.,  130.,  133.,  136.,   82.,   84.,   86.,   88.,   90.,   92.,   94.,   96.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,   57.,   58.,   59.,   60.,   61.,   62.,   63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  146.,  148.,  150.,  152.,  154.,  156.,  158.,  160.,  162.,  164.,  166.,  168.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,   85.,   86.,   87.,   88.,   89.,   90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  202.,  204.,  206.,  208.,  210.,  212.,  214.,  216.,  218.,  220.,  222.,  224.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  148.,  152.,  156.,  160.,  164.,  168.,  172.,  176.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  302.,  308.,  314.,  320.,  326.,  332.,  338.,  344.,  350.,  356.,  362.,  368.,  374.,  380.,  386.,  392.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  228.,  232.,  236.,  240.,  244.,  248.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,  284.,  288.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  470.,  476.,  482.,  488.,  494.,  500.,  506.,  512.,  518.,  524.,  530.,  536.,  542.,  548.,  554.,  560.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  340.,  344.,  348.,  352.,  356.,  360.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,  396.,  400.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080.,  638.,  644.,  650.,  656.,  662.,  668.,  674.,  680.,  686.,  692.,  698.,  704.,  710.,  716.,  722.,  728.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  279.,  282.,  285.,  288.,  291.,  294.,  297.,  300.,  643.,  650.,  657.,  664.,  671.,  678.,  685.,  692.,  699.,  706.,  713.,  720.,  388.,  392.,  396.,  400.,  404.,  408.,  412.,  416.,  420.,  424.,  428.,  432.,  436.,  440.,  444.,  448.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  339.,  342.,  345.,  348.,  351.,  354.,  357.,  360.,  363.,  366.,  369.,  372.,  375.,  378.,  381.,  384.,  839.,  846.,  853.,  860.,  867.,  874.,  881.,  888.,  895.,  902.,  909.,  916.,  500.,  504.,  508.,  512.,  516.,  520.,  524.,  528.,  532.,  536.,  540.,  544.,  548.,  552.,  556.,  560.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  423.,  426.,  429.,  432.,  435.,  438.,  441.,  444.,  447.,  450.,  453.,  456.,  459.,  462.,  465.,  468., 1035., 1042., 1049., 1056., 1063., 1070., 1077., 1084., 1091., 1098., 1105., 1112.,  612.,  616.,  620.,  624.,  628.,  632.,  636.,  640.,  644.,  648.,  652.,  656.,  660.,  664.,  668.,  672.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  507.,  510.,  513.,  516.,  519.,  522.,  525.,  528.,  531.,  534.,  537.,  540.,  543.,  546.,  549.,  552., 1231., 1238., 1245., 1252., 1259., 1266., 1273., 1280., 1287., 1294., 1301., 1308.,  724.,  728.,  732.,  736.,  740.,  744.,  748.,  752.,  756.,  760.,  764.,  768.,  772.,  776.,  780.,  784.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 11, 14, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x14x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  389.,   395.,   401.,   407.,   413.,   419.,   425.,   431.,  1232.,  1252.,  1272.,  1292.,  1312.,  1332.,  1352.,  1372.,  1392.,  1412.,  1432.,  1452.,   963.,   977.,   991.,  1005.,  2268.,  2304.,  2340.,  2376.,  2412.,  2448.,  2484.,  2520.,  2556.,  2592.,  2628.,  2664.,  1513.,  1535.,  1557.,  1579.,  3304.,  3356.,  3408.,  3460.,  3512.,  3564.,  3616.,  3668.,  3720.,  3772.,  3824.,  3876.,  2063.,  2093.,  2123.,  2153.,   557.,   563.,   569.,   575.,   581.,   587.,   593.,   599.,  1792.,  1812.,  1832.,  1852.,  1872.,  1892.,  1912.,  1932.,  1952.,  1972.,  1992.,  2012.,  1355.,  1369.,  1383.,  1397.,  3276.,  3312.,  3348.,  3384.,  3420.,  3456.,  3492.,  3528.,  3564.,  3600.,  3636.,  3672.,  2129.,  2151.,  2173.,  2195.,  4760.,  4812.,  4864.,  4916.,  4968.,  5020.,  5072.,  5124.,  5176.,  5228.,  5280.,  5332.,  2903.,  2933.,  2963.,  2993.,  1058.,  1102.,  1146.,  1190.,  1234.,  1278.,  1322.,  1366.,  2256.,  2360.,  2464.,  2568.,  2672.,  2776.,  2880.,  2984.,  3088.,  3192.,  3296.,  3400.,  2334.,  2394.,  2454.,  2514.,  3304.,  3440.,  3576.,  3712.,  3848.,  3984.,  4120.,  4256.,  4392.,  4528.,  4664.,  4800.,  3434.,  3510.,  3586.,  3662.,  4352.,  4520.,  4688.,  4856.,  5024.,  5192.,  5360.,  5528.,  5696.,  5864.,  6032.,  6200.,  4534.,  4626.,  4718.,  4810.,  1522.,  1566.,  1610.,  1654.,  1698.,  1742.,  1786.,  1830.,  3376.,  3480.,  3584.,  3688.,  3792.,  3896.,  4000.,  4104.,  4208.,  4312.,  4416.,  4520.,  2222.,  2282.,  2342.,  2402.,  4296.,  4432.,  4568.,  4704.,  4840.,  4976.,  5112.,  5248.,  5384.,  5520.,  5656.,  5792.,  2746.,  2822.,  2898.,  2974.,  5216.,  5384.,  5552.,  5720.,  5888.,  6056.,  6224.,  6392.,  6560.,  6728.,  6896.,  7064.,  3270.,  3362.,  3454.,  3546.,  2754.,  2798.,  2842.,  2886.,  2930.,  2974.,  3018.,  3062.,  6288.,  6392.,  6496.,  6600.,  6704.,  6808.,  6912.,  7016.,  7120.,  7224.,  7328.,  7432.,  3902.,  3962.,  4022.,  4082.,  8104.,  8240.,  8376.,  8512.,  8648.,  8784.,  8920.,  9056.,  9192.,  9328.,  9464.,  9600.,  4874.,  4950.,  5026.,  5102.,  9920., 10088., 10256., 10424., 10592., 10760., 10928., 11096., 11264., 11432., 11600., 11768.,  5846.,  5938.,  6030.,  6122.,  3525.,  3563.,  3601.,  3639.,  3677.,  3715.,  3753.,  3791.,  7728.,  7812.,  7896.,  7980.,  8064.,  8148.,  8232.,  8316.,  8400.,  8484.,  8568.,  8652.,  4451.,  4497.,  4543.,  4589.,  9212.,  9312.,  9412.,  9512.,  9612.,  9712.,  9812.,  9912., 10012., 10112., 10212., 10312.,  5225.,  5279.,  5333.,  5387., 10696., 10812., 10928., 11044., 11160., 11276., 11392., 11508., 11624., 11740., 11856., 11972.,  5999.,  6061.,  6123.,  6185.,  5202.,  5310.,  5418.,  5526.,  5634.,  5742.,  5850.,  5958.,  6448.,  6680.,  6912.,  7144.,  7376.,  7608.,  7840.,  8072.,  8304.,  8536.,  8768.,  9000.,  6734.,  6858.,  6982.,  7106.,  7496.,  7760.,  8024.,  8288.,  8552.,  8816.,  9080.,  9344.,  9608.,  9872., 10136., 10400.,  7834.,  7974.,  8114.,  8254.,  8544.,  8840.,  9136.,  9432.,  9728., 10024., 10320., 10616., 10912., 11208., 11504., 11800.,  8934.,  9090.,  9246.,  9402.,  3362.,  3470.,  3578.,  3686.,  3794.,  3902.,  4010.,  4118.,  7056.,  7288.,  7520.,  7752.,  7984.,  8216.,  8448.,  8680.,  8912.,  9144.,  9376.,  9608.,  4318.,  4442.,  4566.,  4690.,  7976.,  8240.,  8504.,  8768.,  9032.,  9296.,  9560.,  9824., 10088., 10352., 10616., 10880.,  4842.,  4982.,  5122.,  5262.,  8896.,  9192.,  9488.,  9784., 10080., 10376., 10672., 10968., 11264., 11560., 11856., 12152.,  5366.,  5522.,  5678.,  5834.,  6386.,  6494.,  6602.,  6710.,  6818.,  6926.,  7034.,  7142., 13552., 13784., 14016., 14248., 14480., 14712., 14944., 15176., 15408., 15640., 15872., 16104.,  7790.,  7914.,  8038.,  8162., 15368., 15632., 15896., 16160., 16424., 16688., 16952., 17216., 17480., 17744., 18008., 18272.,  8762.,  8902.,  9042.,  9182., 17184., 17480., 17776., 18072., 18368., 18664., 18960., 19256., 19552., 19848., 20144., 20440.,  9734.,  9890., 10046., 10202.,  6493.,  6563.,  6633.,  6703.,  6773.,  6843.,  6913.,  6983., 13664., 13812., 13960., 14108., 14256., 14404., 14552., 14700., 14848., 14996., 15144., 15292.,  7547.,  7625.,  7703.,  7781., 15148., 15312., 15476., 15640., 15804., 15968., 16132., 16296., 16460., 16624., 16788., 16952.,  8321.,  8407.,  8493.,  8579., 16632., 16812., 16992., 17172., 17352., 17532., 17712., 17892., 18072., 18252., 18432., 18612.,  9095.,  9189.,  9283.,  9377.,  8453.,  8523.,  8593.,  8663.,  8733.,  8803.,  8873.,  8943.,  8848.,  8996.,  9144.,  9292.,  9440.,  9588.,  9736.,  9884., 10032., 10180., 10328., 10476.,  9731.,  9809.,  9887.,  9965.,  9756.,  9920., 10084., 10248., 10412., 10576., 10740., 10904., 11068., 11232., 11396., 11560., 10729., 10815., 10901., 10987., 10664., 10844., 11024., 11204., 11384., 11564., 11744., 11924., 12104., 12284., 12464., 12644., 11727., 11821., 11915., 12009.};
  const std::array<int, 4> in_shape = {{ 1, 11, 14, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x14x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   29.,   35.,   41.,   47.,   53.,   59.,   65.,   71.,   77.,   83.,   89.,   95.,  112.,  132.,  152.,  172.,  192.,  212.,  232.,  252.,  272.,  292.,  312.,  332.,  179.,  193.,  207.,  221.,  235.,  249.,  263.,  277.,  291.,  305.,  319.,  333.,  347.,  361.,  375.,  389.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  173.,  179.,  185.,  191.,  197.,  203.,  209.,  215.,  221.,  227.,  233.,  239.,  245.,  251.,  257.,  263.,  672.,  692.,  712.,  732.,  752.,  772.,  792.,  812.,  832.,  852.,  872.,  892.,  571.,  585.,  599.,  613.,  627.,  641.,  655.,  669.,  683.,  697.,  711.,  725.,  739.,  753.,  767.,  781.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  341.,  347.,  353.,  359.,  365.,  371.,  377.,  383.,  389.,  395.,  401.,  407.,  413.,  419.,  425.,  431., 1232., 1252., 1272., 1292., 1312., 1332., 1352., 1372., 1392., 1412., 1432., 1452.,  963.,  977.,  991., 1005., 1019., 1033., 1047., 1061., 1075., 1089., 1103., 1117., 1131., 1145., 1159., 1173.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  509.,  515.,  521.,  527.,  533.,  539.,  545.,  551.,  557.,  563.,  569.,  575.,  581.,  587.,  593.,  599., 1792., 1812., 1832., 1852., 1872., 1892., 1912., 1932., 1952., 1972., 1992., 2012., 1355., 1369., 1383., 1397., 1411., 1425., 1439., 1453., 1467., 1481., 1495., 1509., 1523., 1537., 1551., 1565.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  694.,  722.,  750.,  778.,  806.,  834.,  862.,  890.,  918.,  946.,  974., 1002., 1030., 1058., 1086., 1114., 2744., 2816., 2888., 2960., 3032., 3104., 3176., 3248., 3320., 3392., 3464., 3536., 2130., 2174., 2218., 2262., 2306., 2350., 2394., 2438., 2482., 2526., 2570., 2614., 2658., 2702., 2746., 2790.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1478., 1506., 1534., 1562., 1590., 1618., 1646., 1674., 1702., 1730., 1758., 1786., 1814., 1842., 1870., 1898., 4760., 4832., 4904., 4976., 5048., 5120., 5192., 5264., 5336., 5408., 5480., 5552., 3362., 3406., 3450., 3494., 3538., 3582., 3626., 3670., 3714., 3758., 3802., 3846., 3890., 3934., 3978., 4022.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 2262., 2290., 2318., 2346., 2374., 2402., 2430., 2458., 2486., 2514., 2542., 2570., 2598., 2626., 2654., 2682., 6776., 6848., 6920., 6992., 7064., 7136., 7208., 7280., 7352., 7424., 7496., 7568., 4594., 4638., 4682., 4726., 4770., 4814., 4858., 4902., 4946., 4990., 5034., 5078., 5122., 5166., 5210., 5254.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1865., 1887., 1909., 1931., 1953., 1975., 1997., 2019., 2041., 2063., 2085., 2107., 2129., 2151., 2173., 2195., 4760., 4812., 4864., 4916., 4968., 5020., 5072., 5124., 5176., 5228., 5280., 5332., 2903., 2933., 2963., 2993., 3023., 3053., 3083., 3113., 3143., 3173., 3203., 3233., 3263., 3293., 3323., 3353.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 2481., 2503., 2525., 2547., 2569., 2591., 2613., 2635., 2657., 2679., 2701., 2723., 2745., 2767., 2789., 2811., 6216., 6268., 6320., 6372., 6424., 6476., 6528., 6580., 6632., 6684., 6736., 6788., 3743., 3773., 3803., 3833., 3863., 3893., 3923., 3953., 3983., 4013., 4043., 4073., 4103., 4133., 4163., 4193.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 3097., 3119., 3141., 3163., 3185., 3207., 3229., 3251., 3273., 3295., 3317., 3339., 3361., 3383., 3405., 3427., 7672., 7724., 7776., 7828., 7880., 7932., 7984., 8036., 8088., 8140., 8192., 8244., 4583., 4613., 4643., 4673., 4703., 4733., 4763., 4793., 4823., 4853., 4883., 4913., 4943., 4973., 5003., 5033.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 3713., 3735., 3757., 3779., 3801., 3823., 3845., 3867., 3889., 3911., 3933., 3955., 3977., 3999., 4021., 4043., 9128., 9180., 9232., 9284., 9336., 9388., 9440., 9492., 9544., 9596., 9648., 9700., 5423., 5453., 5483., 5513., 5543., 5573., 5603., 5633., 5663., 5693., 5723., 5753., 5783., 5813., 5843., 5873.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 11, 14, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x11x14x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.};
  const std::array<int, 4> in_shape = {{ 1, 11, 14, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x11x14x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   350.,   390.,   430.,   470.,   510.,   550.,   590.,   630.,   740.,   884.,  1028.,  1172.,  1316.,  1460.,  1604.,  1748.,  1892.,  2036.,  2180.,  2324.,  1318.,  1422.,  1526.,  1630.,  1734.,  1838.,  1942.,  2046.,  2150.,  2254.,  2358.,  2462.,  2566.,  2670.,  2774.,  2878.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  1470.,  1510.,  1550.,  1590.,  1630.,  1670.,  1710.,  1750.,  4772.,  4916.,  5060.,  5204.,  5348.,  5492.,  5636.,  5780.,  5924.,  6068.,  6212.,  6356.,  4230.,  4334.,  4438.,  4542.,  4646.,  4750.,  4854.,  4958.,  5062.,  5166.,  5270.,  5374.,  5478.,  5582.,  5686.,  5790.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  2270.,  2310.,  2350.,  2390.,  2430.,  2470.,  2510.,  2550.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,  6244.,  6388.,  6532.,  6676.,  6820.,  6964.,  7108.,  7252.,   740.,   884.,  1028.,  1172.,   486.,   590.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,  1526.,  1630.,  1734.,  1838.,  1942.,  2046.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   830.,   870.,   910.,   950.,   990.,  1030.,  1070.,  1110.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  3620.,  3764.,  3908.,  4052.,  4196.,  4340.,  4484.,  4628.,  4772.,  4916.,  5060.,  5204.,  3398.,  3502.,  3606.,  3710.,  3814.,  3918.,  4022.,  4126.,  4230.,  4334.,  4438.,  4542.,  4646.,  4750.,  4854.,  4958.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  2060.,  2268.,  2476.,  2684.,  2892.,  3100.,  3308.,  3516.,  3724.,  3932.,  4140.,  4348.,  4556.,  4764.,  4972.,  5180.,  8040.,  8584.,  9128.,  9672., 10216., 10760., 11304., 11848., 12392., 12936., 13480., 14024.,  9244.,  9580.,  9916., 10252.,  3932.,  4268.,  4604.,  4940.,  5276.,  5612.,  5948.,  6284.,  6620.,  6956.,  7292.,  7628.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  5324.,  5532.,  5740.,  5948.,  6156.,  6364.,  6572.,  6780.,  6988.,  7196.,  7404.,  7612.,  7820.,  8028.,  8236.,  8444., 16616., 17160., 17704., 18248., 18792., 19336., 19880., 20424., 20968., 21512., 22056., 22600., 11996., 12332., 12668., 13004., 13340., 13676., 14012., 14348., 14684., 15020., 15356., 15692., 16028., 16364., 16700., 17036.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0., 11148., 11356., 11564., 11772., 11980., 12188., 12396., 12604.,  2060.,  2268.,  2476.,  2684.,  2892.,  3100.,  3308.,  3516., 21096., 21640., 22184., 22728., 23272., 23816., 24360., 24904.,  8040.,  8584.,  9128.,  9672.,  6556.,  6892.,  7228.,  7564.,  7900.,  8236.,  8572.,  8908.,  9244.,  9580.,  9916., 10252.,  3932.,  4268.,  4604.,  4940.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  4814.,  4982.,  5150.,  5318.,  5486.,  5654.,  5822.,  5990., 10948., 11348., 11748., 12148., 12548., 12948., 13348., 13748., 14148., 14548., 14948., 15348.,  7574.,  7806.,  8038.,  8270.,  8502.,  8734.,  8966.,  9198.,  9430.,  9662.,  9894., 10126., 10358., 10590., 10822., 11054.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  8174.,  8342.,  8510.,  8678.,  8846.,  9014.,  9182.,  9350.,  9518.,  9686.,  9854., 10022., 10190., 10358., 10526., 10694., 11396., 11796., 12196., 12596., 12996., 13396., 13796., 14196., 14596., 14996., 15396., 15796., 14070., 14302., 14534., 14766.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,  2006.,  2238.,  2470.,  2702.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  2126.,  2294.,  2462.,  2630.,  2798.,  2966.,  3134.,  3302.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  7748.,  8148.,  8548.,  8948.,  9348.,  9748., 10148., 10548., 10948., 11348., 11748., 12148.,  5718.,  5950.,  6182.,  6414.,  6646.,  6878.,  7110.,  7342.,  7574.,  7806.,  8038.,  8270.,  8502.,  8734.,  8966.,  9198.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  6830.,  6998.,  7166.,  7334.,  7502.,  7670.,  7838.,  8006.,  8174.,  8342.,  8510.,  8678.,  8846.,  9014.,  9182.,  9350., 18948., 19348., 19748., 20148., 20548., 20948., 21348., 21748., 11396., 11796., 12196., 12596., 12214., 12446., 12678., 12910., 13142., 13374., 13606., 13838., 14070., 14302., 14534., 14766.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 1, 11, 14, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x11x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 10.,  11.,  28.,  31.,  34.,  22.,  48.,  53.,  58.,  33.,  36.,  17.,  18.,  49.,  52.,  55.,  36.,  83.,  88.,  93.,  54.,  57.,  24.,  25.,  70.,  73.,  76.,  50., 118., 123., 128.,  75.,  78.,  43.,  48., 116., 128., 140.,  84., 184., 200., 216., 120., 129.,  78.,  83., 200., 212., 224., 133., 296., 312., 328., 183., 192., 113., 118., 284., 296., 308., 182., 408., 424., 440., 246., 255.,  96., 100., 214., 223., 232., 125., 262., 273., 284., 150., 156., 145., 156., 320., 344., 368., 192., 388., 416., 444., 228., 243., 222., 233., 488., 512., 536., 283., 584., 612., 640., 333., 348., 299., 310., 656., 680., 704., 374., 780., 808., 836., 438., 453., 168., 175., 358., 373., 388., 200., 406., 423., 440., 225., 234., 217., 224., 463., 478., 493., 256., 525., 542., 559., 288., 297.};
  const std::array<int, 4> in_shape = {{ 1, 12, 11, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x11x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  1.,   2.,   3.,   4.,   7.,  10.,  13.,   8.,  10.,  12.,  14.,   8.,   9.,  10.,  11.,  28.,  31.,  34.,  22.,  24.,  26.,  28.,  15.,  16.,  17.,  18.,  49.,  52.,  55.,  36.,  38.,  40.,  42.,  22.,  23.,  24.,  25.,  70.,  73.,  76.,  50.,  52.,  54.,  56.,  32.,  36.,  40.,  44., 110., 120., 130.,  80.,  86.,  92.,  98.,  60.,  64.,  68.,  72., 180., 190., 200., 122., 128., 134., 140.,  88.,  92.,  96., 100., 250., 260., 270., 164., 170., 176., 182.,  66.,  69.,  72.,  75., 166., 173., 180., 100., 104., 108., 112.,  87.,  90.,  93.,  96., 215., 222., 229., 128., 132., 136., 140., 108., 111., 114., 117., 264., 271., 278., 156., 160., 164., 168., 129., 132., 135., 138., 313., 320., 327., 184., 188., 192., 196.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 11, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x11x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  59.,   65.,  180.,  200.,  220.,  151.,  336.,  372.,  408.,  237.,  259.,  101.,  107.,  320.,  340.,  360.,  249.,  588.,  624.,  660.,  391.,  413.,  143.,  149.,  460.,  480.,  500.,  347.,  840.,  876.,  912.,  545.,  567.,  268.,  304.,  772.,  860.,  948.,  588., 1308., 1428., 1548.,  872.,  940.,  520.,  556., 1388., 1476., 1564.,  952., 2148., 2268., 2388., 1348., 1416.,  772.,  808., 2004., 2092., 2180., 1316., 2988., 3108., 3228., 1824., 1892.,  713.,  743., 1600., 1668., 1736.,  941., 1980., 2064., 2148., 1139., 1185., 1072., 1156., 2380., 2564., 2748., 1440., 2916., 3132., 3348., 1724., 1840., 1660., 1744., 3668., 3852., 4036., 2140., 4428., 4644., 4860., 2536., 2652., 2248., 2332., 4956., 5140., 5324., 2840., 5940., 6156., 6372., 3348., 3464., 1283., 1337., 2740., 2856., 2972., 1535., 3120., 3252., 3384., 1733., 1803., 1661., 1715., 3552., 3668., 3784., 1969., 4044., 4176., 4308., 2223., 2293.};
  const std::array<int, 4> in_shape = {{ 1, 12, 11, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x11x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   40.,   60.,   80.,   53.,   67.,   81.,   95.,   47.,   53.,   59.,   65.,  180.,  200.,  220.,  151.,  165.,  179.,  193.,   89.,   95.,  101.,  107.,  320.,  340.,  360.,  249.,  263.,  277.,  291.,  131.,  137.,  143.,  149.,  460.,  480.,  500.,  347.,  361.,  375.,  389.,  190.,  218.,  246.,  274.,  728.,  800.,  872.,  558.,  602.,  646.,  690.,  386.,  414.,  442.,  470., 1232., 1304., 1376.,  866.,  910.,  954.,  998.,  582.,  610.,  638.,  666., 1736., 1808., 1880., 1174., 1218., 1262., 1306.,  479.,  501.,  523.,  545., 1220., 1272., 1324.,  743.,  773.,  803.,  833.,  633.,  655.,  677.,  699., 1584., 1636., 1688.,  953.,  983., 1013., 1043.,  787.,  809.,  831.,  853., 1948., 2000., 2052., 1163., 1193., 1223., 1253.,  941.,  963.,  985., 1007., 2312., 2364., 2416., 1373., 1403., 1433., 1463.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 11, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x11x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  390.,   430.,  1268.,  1412.,  1556.,  1110.,  2500.,  2772.,  3044.,  1790.,  1958.,   670.,   710.,  2276.,  2420.,  2564.,  1838.,  4404.,  4676.,  4948.,  2966.,  3134.,   950.,   990.,  3284.,  3428.,  3572.,  2566.,  6308.,  6580.,  6852.,  4142.,  4310.,  1844.,  2116.,  4280.,  4952.,  5624.,  4372.,  6488.,  7416.,  8344.,  6628.,  1780.,  2468.,  2740.,  5656.,  6328.,  7000.,  3844.,  7608.,  8536.,  9464.,  4948.,  5476.,  4372.,  4644., 10360., 11032., 11704.,  6644., 14104., 15032., 15960.,  8644.,  9172.,  5486.,  5718., 12356., 12884., 13412.,  7294., 15380., 16036., 16692.,  8870.,  9230.,  8228.,  8884., 10904., 12344., 13784., 11140., 13112., 14808., 16504., 13396.,  2788.,  5396.,  6052., 11512., 12952., 14392.,  7156., 13464., 15160., 16856.,  8260.,  9172.,  9988., 10644., 21592., 23032., 24472., 12644., 25336., 27032., 28728., 14644., 15556., 10022., 10446., 21428., 22340., 23252., 12022., 24452., 25492., 26532., 13598., 14150., 12990., 13414., 14244., 15156., 16068., 15438., 16116., 17156., 18196., 17462.,   350.};
  const std::array<int, 4> in_shape = {{ 1, 12, 11, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 128.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x11x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   260.,   404.,   548.,   382.,   486.,   590.,   694.,   310.,   350.,   390.,   430.,  1268.,  1412.,  1556.,  1110.,  1214.,  1318.,  1422.,   590.,   630.,   670.,   710.,  2276.,  2420.,  2564.,  1838.,  1942.,  2046.,  2150.,   870.,   910.,   950.,   990.,  3284.,  3428.,  3572.,  2566.,  2670.,  2774.,  2878.,  1260.,  1468.,  1676.,  1884.,  5224.,  5768.,  6312.,  4140.,  4476.,  4812.,  5148.,  2716.,  2924.,  3132.,  3340.,  9032.,  9576., 10120.,  6492.,  6828.,  7164.,  7500.,  4172.,  4380.,  4588.,  4796., 12840., 13384., 13928.,  8844.,  9180.,  9516.,  9852.,  3638.,  3806.,  3974.,  4142.,  9332.,  9732., 10132.,  5718.,  5950.,  6182.,  6414.,  4814.,  4982.,  5150.,  5318., 12132., 12532., 12932.,  7342.,  7574.,  7806.,  8038.,  5990.,  6158.,  6326.,  6494., 14932., 15332., 15732.,  8966.,  9198.,  9430.,  9662.,  7166.,  7334.,  7502.,  7670., 17732., 18132., 18532., 10590., 10822., 11054., 11286.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 11, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x11x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  19.,   20.,   21.,   22.,   53.,   56.,   59.,   62.,   65.,   68.,   42.,   44.,   91.,   96.,  101.,  106.,  111.,  116.,   63.,   66.,   69.,   72.,   33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,  161.,  166.,  171.,  176.,  181.,  186.,  105.,  108.,  111.,  114.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  231.,  236.,  241.,  246.,  251.,  256.,  147.,  150.,  153.,  156.,   81.,   86.,   91.,   96.,  220.,  232.,  244.,  256.,  268.,  280.,  161.,  168.,  352.,  368.,  384.,  400.,  416.,  432.,  231.,  240.,  249.,  258.,  151.,  156.,  161.,  166.,  388.,  400.,  412.,  424.,  436.,  448.,  259.,  266.,  576.,  592.,  608.,  624.,  640.,  656.,  357.,  366.,  375.,  384.,  221.,  226.,  231.,  236.,  556.,  568.,  580.,  592.,  604.,  616.,  357.,  364.,  800.,  816.,  832.,  848.,  864.,  880.,  483.,  492.,  501.,  510.,  188.,  192.,  196.,  200.,  419.,  428.,  437.,  446.,  455.,  464.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  306.,  312.,  279.,  290.,  301.,  312.,  616.,  640.,  664.,  688.,  712.,  736.,  371.,  384.,  748.,  776.,  804.,  832.,  860.,  888.,  441.,  456.,  471.,  486.,  433.,  444.,  455.,  466.,  952.,  976., 1000., 1024., 1048., 1072.,  553.,  566., 1140., 1168., 1196., 1224., 1252., 1280.,  651.,  666.,  681.,  696.,  587.,  598.,  609.,  620., 1288., 1312., 1336., 1360., 1384., 1408.,  735.,  748., 1532., 1560., 1588., 1616., 1644., 1672.,  861.,  876.,  891.,  906.,  329.,  336.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  795.,  812.,  829.,  846.,  863.,  880.,  441.,  450.,  459.,  468.,  427.,  434.,  441.,  448.,  911.,  926.,  941.,  956.,  971.,  986.,  504.,  512., 1033., 1050., 1067., 1084., 1101., 1118.,  567.,  576.,  585.,  594.};
  const std::array<int, 4> in_shape = {{ 1, 12, 11, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x11x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,  11.,  14.,  17.,  20.,  23.,  26.,  14.,  16.,  18.,  20.,  22.,  24.,  26.,  28.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  53.,  56.,  59.,  62.,  65.,  68.,  42.,  44.,  46.,  48.,  50.,  52.,  54.,  56.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,  95.,  98., 101., 104., 107., 110.,  70.,  72.,  74.,  76.,  78.,  80.,  82.,  84.,  43.,  44.,  45.,  46.,  47.,  48.,  49.,  50., 137., 140., 143., 146., 149., 152.,  98., 100., 102., 104., 106., 108., 110., 112.,  60.,  64.,  68.,  72.,  76.,  80.,  84.,  88., 210., 220., 230., 240., 250., 260., 154., 160., 166., 172., 178., 184., 190., 196., 116., 120., 124., 128., 132., 136., 140., 144., 350., 360., 370., 380., 390., 400., 238., 244., 250., 256., 262., 268., 274., 280., 172., 176., 180., 184., 188., 192., 196., 200., 490., 500., 510., 520., 530., 540., 322., 328., 334., 340., 346., 352., 358., 364., 129., 132., 135., 138., 141., 144., 147., 150., 325., 332., 339., 346., 353., 360., 196., 200., 204., 208., 212., 216., 220., 224., 171., 174., 177., 180., 183., 186., 189., 192., 423., 430., 437., 444., 451., 458., 252., 256., 260., 264., 268., 272., 276., 280., 213., 216., 219., 222., 225., 228., 231., 234., 521., 528., 535., 542., 549., 556., 308., 312., 316., 320., 324., 328., 332., 336., 255., 258., 261., 264., 267., 270., 273., 276., 619., 626., 633., 640., 647., 654., 364., 368., 372., 376., 380., 384., 388., 392.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 11, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x11x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  113.,   119.,   125.,   131.,   344.,   364.,   384.,   404.,   424.,   444.,   291.,   305.,   644.,   680.,   716.,   752.,   788.,   824.,   457.,   479.,   501.,   523.,   197.,   203.,   209.,   215.,   624.,   644.,   664.,   684.,   704.,   724.,   487.,   501.,  1148.,  1184.,  1220.,  1256.,  1292.,  1328.,   765.,   787.,   809.,   831.,   281.,   287.,   293.,   299.,   904.,   924.,   944.,   964.,   984.,  1004.,   683.,   697.,  1652.,  1688.,  1724.,  1760.,  1796.,  1832.,  1073.,  1095.,  1117.,  1139.,   508.,   544.,   580.,   616.,  1476.,  1564.,  1652.,  1740.,  1828.,  1916.,  1136.,  1188.,  2524.,  2644.,  2764.,  2884.,  3004.,  3124.,  1692.,  1760.,  1828.,  1896.,  1012.,  1048.,  1084.,  1120.,  2708.,  2796.,  2884.,  2972.,  3060.,  3148.,  1864.,  1916.,  4204.,  4324.,  4444.,  4564.,  4684.,  4804.,  2644.,  2712.,  2780.,  2848.,  1516.,  1552.,  1588.,  1624.,  3940.,  4028.,  4116.,  4204.,  4292.,  4380.,  2592.,  2644.,  5884.,  6004.,  6124.,  6244.,  6364.,  6484.,  3596.,  3664.,  3732.,  3800.,  1403.,  1433.,  1463.,  1493.,  3148.,  3216.,  3284.,  3352.,  3420.,  3488.,  1853.,  1891.,  3896.,  3980.,  4064.,  4148.,  4232.,  4316.,  2243.,  2289.,  2335.,  2381.,  2080.,  2164.,  2248.,  2332.,  4620.,  4804.,  4988.,  5172.,  5356.,  5540.,  2804.,  2904.,  5668.,  5884.,  6100.,  6316.,  6532.,  6748.,  3360.,  3476.,  3592.,  3708.,  3256.,  3340.,  3424.,  3508.,  7196.,  7380.,  7564.,  7748.,  7932.,  8116.,  4204.,  4304.,  8692.,  8908.,  9124.,  9340.,  9556.,  9772.,  4984.,  5100.,  5216.,  5332.,  4432.,  4516.,  4600.,  4684.,  9772.,  9956., 10140., 10324., 10508., 10692.,  5604.,  5704., 11716., 11932., 12148., 12364., 12580., 12796.,  6608.,  6724.,  6840.,  6956.,  2525.,  2579.,  2633.,  2687.,  5392.,  5508.,  5624.,  5740.,  5856.,  5972.,  3023.,  3085.,  6140.,  6272.,  6404.,  6536.,  6668.,  6800.,  3413.,  3483.,  3553.,  3623.,  3281.,  3335.,  3389.,  3443.,  7016.,  7132.,  7248.,  7364.,  7480.,  7596.,  3891.,  3953.,  7988.,  8120.,  8252.,  8384.,  8516.,  8648.,  4393.,  4463.,  4533.,  4603.};
  const std::array<int, 4> in_shape = {{ 1, 12, 11, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x11x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   29.,   35.,   41.,   47.,   64.,   84.,  104.,  124.,  144.,  164.,   95.,  109.,  123.,  137.,  151.,  165.,  179.,  193.,   89.,   95.,  101.,  107.,  113.,  119.,  125.,  131.,  344.,  364.,  384.,  404.,  424.,  444.,  291.,  305.,  319.,  333.,  347.,  361.,  375.,  389.,  173.,  179.,  185.,  191.,  197.,  203.,  209.,  215.,  624.,  644.,  664.,  684.,  704.,  724.,  487.,  501.,  515.,  529.,  543.,  557.,  571.,  585.,  257.,  263.,  269.,  275.,  281.,  287.,  293.,  299.,  904.,  924.,  944.,  964.,  984., 1004.,  683.,  697.,  711.,  725.,  739.,  753.,  767.,  781.,  358.,  386.,  414.,  442.,  470.,  498.,  526.,  554., 1400., 1472., 1544., 1616., 1688., 1760., 1082., 1126., 1170., 1214., 1258., 1302., 1346., 1390.,  750.,  778.,  806.,  834.,  862.,  890.,  918.,  946., 2408., 2480., 2552., 2624., 2696., 2768., 1698., 1742., 1786., 1830., 1874., 1918., 1962., 2006., 1142., 1170., 1198., 1226., 1254., 1282., 1310., 1338., 3416., 3488., 3560., 3632., 3704., 3776., 2314., 2358., 2402., 2446., 2490., 2534., 2578., 2622.,  941.,  963.,  985., 1007., 1029., 1051., 1073., 1095., 2400., 2452., 2504., 2556., 2608., 2660., 1463., 1493., 1523., 1553., 1583., 1613., 1643., 1673., 1249., 1271., 1293., 1315., 1337., 1359., 1381., 1403., 3128., 3180., 3232., 3284., 3336., 3388., 1883., 1913., 1943., 1973., 2003., 2033., 2063., 2093., 1557., 1579., 1601., 1623., 1645., 1667., 1689., 1711., 3856., 3908., 3960., 4012., 4064., 4116., 2303., 2333., 2363., 2393., 2423., 2453., 2483., 2513., 1865., 1887., 1909., 1931., 1953., 1975., 1997., 2019., 4584., 4636., 4688., 4740., 4792., 4844., 2723., 2753., 2783., 2813., 2843., 2873., 2903., 2933.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 11, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x11x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  110.,   150.,   190.,   230.,  1796.,  1940.,   420.,   564.,   708.,   852.,   486.,   590.,  3156.,  3428.,  1012.,  1284.,  1556.,  1828.,   782.,   950.,  1118.,  1286.,    30.,    70.,   110.,   150.,  1508.,  1652.,  1796.,  1940.,   420.,   564.,   278.,   382.,  2612.,  2884.,  3156.,  3428.,  1012.,  1284.,   446.,   614.,   782.,   950.,   590.,   630.,    30.,    70.,  1220.,  1364.,  1508.,  1652.,  1796.,  1940.,    70.,   174.,  2068.,  2340.,  2612.,  2884.,  3156.,  3428.,   110.,   278.,   446.,   614.,  1588.,  1860.,  2132.,  2404.,  3128.,  3800.,  4472.,  5144.,  5816.,  6488.,  3492.,  3892.,  4312.,  5240.,  6168.,  7096.,  8024.,  8952.,  4852.,  5380.,  3220.,  3748.,  1044.,  1316.,  1588.,  1860.,  7160.,  7832.,  3128.,  3800.,  4472.,  5144.,  2692.,  3092.,  9880., 10808.,  4312.,  5240.,  6168.,  7096.,  3796.,  4324.,  4852.,  5380.,   500.,   772.,  1044.,  1316.,  5816.,  6488.,  7160.,  7832.,  3128.,  3800.,  1892.,  2292.,  8024.,  8952.,  9880., 10808.,  4312.,  5240.,  2740.,  3268.,  3796.,  4324.,  3398.,  3630.,   150.,   382.,  3764.,  4292.,  4820.,  5348.,  5876.,  6404.,   190.,   486.,  4612.,  5268.,  5924.,  6580.,  7236.,  7892.,   230.,   590.,   950.,  1310.,  4900.,  5556.,  6212.,  6868.,  6680.,  8120.,  9560., 11000., 12440., 13880.,  7572.,  8356.,  7864.,  9560., 11256., 12952., 14648., 16344.,  8932.,  9844.,  4996.,  5908.,  3588.,  4244.,  4900.,  5556., 15320., 16760.,  6680.,  8120.,  9560., 11000.,  6004.,  6788., 18040., 19736.,  7864.,  9560., 11256., 12952.,  7108.,  8020.,  8932.,  9844.,  2276.,  2932.,  3588.,  4244., 12440., 13880., 15320., 16760.,  6680.,  8120.,  4436.,  5220., 14648., 16344., 18040., 19736.,  7864.,  9560.,  5284.,  6196.,  7108.,  8020.,  6206.,  6630.,   270.,   694.,  6308.,  7220.,  8132.,  9044.,  9956., 10868.,   310.,   798.,  7156.,  8196.,  9236., 10276., 11316., 12356.,   350.,   902.,  1454.,  2006.,  5358.,  5782.,  6206.,  6630.,  4484.,  5396.,  6308.,  7220.,  8132.,  9044.,  7142.,  7630.,  5076.,  6116.,  7156.,  8196.,  9236., 10276.,  8078.,  8630.,   350.,   902.};
  const std::array<int, 4> in_shape = {{ 1, 12, 11, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x11x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   420.,   564.,   708.,   852.,   996.,  1140.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,   590.,   630.,   670.,   710.,   750.,   790.,   830.,   870.,  2436.,  2580.,  2724.,  2868.,  3012.,  3156.,  2150.,  2254.,  2358.,  2462.,  2566.,  2670.,  2774.,  2878.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  4452.,  4596.,  4740.,  4884.,  5028.,  5172.,  3606.,  3710.,  3814.,  3918.,  4022.,  4126.,  4230.,  4334.,  1710.,  1750.,  1790.,  1830.,  1870.,  1910.,  1950.,  1990.,  6468.,  6612.,  6756.,  6900.,  7044.,  7188.,  5062.,  5166.,  5270.,  5374.,  5478.,  5582.,  5686.,  5790.,  2380.,  2588.,  2796.,  3004.,  3212.,  3420.,  3628.,  3836.,  7528.,  8072.,  8616.,  9160.,  9704., 10248.,  8060.,  8396.,  2076.,  2412.,  2748.,  3084.,  3420.,  3756.,  2732.,  2940.,  3148.,  3356.,  3564.,  3772.,  3980.,  4188.,  8488.,  9032.,  9576., 10120., 10664., 11208.,  6108.,  6444.,  6780.,  7116.,  7452.,  7788.,  8124.,  8460.,  5644.,  5852.,  6060.,  6268.,  6476.,  6684.,  6892.,  7100., 16104., 16648., 17192., 17736., 18280., 18824., 10812., 11148., 11484., 11820., 12156., 12492., 12828., 13164.,  7166.,  7334.,  7502.,  7670.,  7838.,  8006.,  8174.,  8342., 18404., 18804., 19204., 19604., 20004., 20404., 11286., 11518., 11750., 11982., 12214., 12446., 12678., 12910.,  9518.,  9686.,  9854., 10022., 10190., 10358., 10526., 10694., 13252., 13652., 14052., 14452., 14852., 15252., 14534., 14766.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  4004.,  4404.,  4804.,  5204.,  5604.,  6004.,  2934.,  3166.,  3398.,  3630.,  3862.,  4094.,  4326.,  4558.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  9604., 10004., 10404., 10804., 11204., 11604.,  6182.,  6414.,  6646.,  6878.,  7110.,  7342.,  7574.,  7806.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 11, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x11x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,  103.,  106.,  109.,  112.,  115.,  118.,  121.,  124.,  127.,  130.,  133.,  136.,   82.,   84.,   86.,   88.,  177.,  182.,  187.,  192.,  197.,  202.,  207.,  212.,  217.,  222.,  227.,  232.,  123.,  126.,  129.,  132.,  135.,  138.,  141.,  144.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  317.,  322.,  327.,  332.,  337.,  342.,  347.,  352.,  357.,  362.,  367.,  372.,  207.,  210.,  213.,  216.,  219.,  222.,  225.,  228.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  457.,  462.,  467.,  472.,  477.,  482.,  487.,  492.,  497.,  502.,  507.,  512.,  291.,  294.,  297.,  300.,  303.,  306.,  309.,  312.,  157.,  162.,  167.,  172.,  177.,  182.,  187.,  192.,  428.,  440.,  452.,  464.,  476.,  488.,  500.,  512.,  524.,  536.,  548.,  560.,  315.,  322.,  329.,  336.,  688.,  704.,  720.,  736.,  752.,  768.,  784.,  800.,  816.,  832.,  848.,  864.,  453.,  462.,  471.,  480.,  489.,  498.,  507.,  516.,  297.,  302.,  307.,  312.,  317.,  322.,  327.,  332.,  764.,  776.,  788.,  800.,  812.,  824.,  836.,  848.,  860.,  872.,  884.,  896.,  511.,  518.,  525.,  532., 1136., 1152., 1168., 1184., 1200., 1216., 1232., 1248., 1264., 1280., 1296., 1312.,  705.,  714.,  723.,  732.,  741.,  750.,  759.,  768.,  437.,  442.,  447.,  452.,  457.,  462.,  467.,  472., 1100., 1112., 1124., 1136., 1148., 1160., 1172., 1184., 1196., 1208., 1220., 1232.,  707.,  714.,  721.,  728., 1584., 1600., 1616., 1632., 1648., 1664., 1680., 1696., 1712., 1728., 1744., 1760.,  957.,  966.,  975.,  984.,  993., 1002., 1011., 1020.,  372.,  376.,  380.,  384.,  388.,  392.,  396.,  400.,  829.,  838.,  847.,  856.,  865.,  874.,  883.,  892.,  901.,  910.,  919.,  928.,  485.,  490.,  495.,  500., 1015., 1026., 1037., 1048., 1059., 1070., 1081., 1092., 1103., 1114., 1125., 1136.,  582.,  588.,  594.,  600.,  606.,  612.,  618.,  624.,  547.,  558.,  569.,  580.,  591.,  602.,  613.,  624., 1208., 1232., 1256., 1280., 1304., 1328., 1352., 1376., 1400., 1424., 1448., 1472.,  729.,  742.,  755.,  768., 1468., 1496., 1524., 1552., 1580., 1608., 1636., 1664., 1692., 1720., 1748., 1776.,  867.,  882.,  897.,  912.,  927.,  942.,  957.,  972.,  855.,  866.,  877.,  888.,  899.,  910.,  921.,  932., 1880., 1904., 1928., 1952., 1976., 2000., 2024., 2048., 2072., 2096., 2120., 2144., 1093., 1106., 1119., 1132., 2252., 2280., 2308., 2336., 2364., 2392., 2420., 2448., 2476., 2504., 2532., 2560., 1287., 1302., 1317., 1332., 1347., 1362., 1377., 1392., 1163., 1174., 1185., 1196., 1207., 1218., 1229., 1240., 2552., 2576., 2600., 2624., 2648., 2672., 2696., 2720., 2744., 2768., 2792., 2816., 1457., 1470., 1483., 1496., 3036., 3064., 3092., 3120., 3148., 3176., 3204., 3232., 3260., 3288., 3316., 3344., 1707., 1722., 1737., 1752., 1767., 1782., 1797., 1812.,  651.,  658.,  665.,  672.,  679.,  686.,  693.,  700., 1387., 1402., 1417., 1432., 1447., 1462., 1477., 1492., 1507., 1522., 1537., 1552.,  776.,  784.,  792.,  800., 1573., 1590., 1607., 1624., 1641., 1658., 1675., 1692., 1709., 1726., 1743., 1760.,  873.,  882.,  891.,  900.,  909.,  918.,  927.,  936.,  847.,  854.,  861.,  868.,  875.,  882.,  889.,  896., 1807., 1822., 1837., 1852., 1867., 1882., 1897., 1912., 1927., 1942., 1957., 1972., 1000., 1008., 1016., 1024., 2049., 2066., 2083., 2100., 2117., 2134., 2151., 2168., 2185., 2202., 2219., 2236., 1125., 1134., 1143., 1152., 1161., 1170., 1179., 1188.};
  const std::array<int, 4> in_shape = {{ 1, 12, 11, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x11x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,    9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   19.,   22.,   25.,   28.,   31.,   34.,   37.,   40.,   43.,   46.,   49.,   52.,   26.,   28.,   30.,   32.,   34.,   36.,   38.,   40.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,  103.,  106.,  109.,  112.,  115.,  118.,  121.,  124.,  127.,  130.,  133.,  136.,   82.,   84.,   86.,   88.,   90.,   92.,   94.,   96.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,   57.,   58.,   59.,   60.,   61.,   62.,   63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  146.,  148.,  150.,  152.,  154.,  156.,  158.,  160.,  162.,  164.,  166.,  168.,   85.,   86.,   87.,   88.,   89.,   90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  202.,  204.,  206.,  208.,  210.,  212.,  214.,  216.,  218.,  220.,  222.,  224.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  148.,  152.,  156.,  160.,  164.,  168.,  172.,  176.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  302.,  308.,  314.,  320.,  326.,  332.,  338.,  344.,  350.,  356.,  362.,  368.,  374.,  380.,  386.,  392.,  228.,  232.,  236.,  240.,  244.,  248.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,  284.,  288.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  470.,  476.,  482.,  488.,  494.,  500.,  506.,  512.,  518.,  524.,  530.,  536.,  542.,  548.,  554.,  560.,  340.,  344.,  348.,  352.,  356.,  360.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,  396.,  400.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080.,  638.,  644.,  650.,  656.,  662.,  668.,  674.,  680.,  686.,  692.,  698.,  704.,  710.,  716.,  722.,  728.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  279.,  282.,  285.,  288.,  291.,  294.,  297.,  300.,  643.,  650.,  657.,  664.,  671.,  678.,  685.,  692.,  699.,  706.,  713.,  720.,  388.,  392.,  396.,  400.,  404.,  408.,  412.,  416.,  420.,  424.,  428.,  432.,  436.,  440.,  444.,  448.,  339.,  342.,  345.,  348.,  351.,  354.,  357.,  360.,  363.,  366.,  369.,  372.,  375.,  378.,  381.,  384.,  839.,  846.,  853.,  860.,  867.,  874.,  881.,  888.,  895.,  902.,  909.,  916.,  500.,  504.,  508.,  512.,  516.,  520.,  524.,  528.,  532.,  536.,  540.,  544.,  548.,  552.,  556.,  560.,  423.,  426.,  429.,  432.,  435.,  438.,  441.,  444.,  447.,  450.,  453.,  456.,  459.,  462.,  465.,  468., 1035., 1042., 1049., 1056., 1063., 1070., 1077., 1084., 1091., 1098., 1105., 1112.,  612.,  616.,  620.,  624.,  628.,  632.,  636.,  640.,  644.,  648.,  652.,  656.,  660.,  664.,  668.,  672.,  507.,  510.,  513.,  516.,  519.,  522.,  525.,  528.,  531.,  534.,  537.,  540.,  543.,  546.,  549.,  552., 1231., 1238., 1245., 1252., 1259., 1266., 1273., 1280., 1287., 1294., 1301., 1308.,  724.,  728.,  732.,  736.,  740.,  744.,  748.,  752.,  756.,  760.,  764.,  768.,  772.,  776.,  780.,  784.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 11, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x11x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  221.,   227.,   233.,   239.,   245.,   251.,   257.,   263.,   672.,   692.,   712.,   732.,   752.,   772.,   792.,   812.,   832.,   852.,   872.,   892.,   571.,   585.,   599.,   613.,  1260.,  1296.,  1332.,  1368.,  1404.,  1440.,  1476.,  1512.,  1548.,  1584.,  1620.,  1656.,   897.,   919.,   941.,   963.,   985.,  1007.,  1029.,  1051.,   389.,   395.,   401.,   407.,   413.,   419.,   425.,   431.,  1232.,  1252.,  1272.,  1292.,  1312.,  1332.,  1352.,  1372.,  1392.,  1412.,  1432.,  1452.,   963.,   977.,   991.,  1005.,  2268.,  2304.,  2340.,  2376.,  2412.,  2448.,  2484.,  2520.,  2556.,  2592.,  2628.,  2664.,  1513.,  1535.,  1557.,  1579.,  1601.,  1623.,  1645.,  1667.,   557.,   563.,   569.,   575.,   581.,   587.,   593.,   599.,  1792.,  1812.,  1832.,  1852.,  1872.,  1892.,  1912.,  1932.,  1952.,  1972.,  1992.,  2012.,  1355.,  1369.,  1383.,  1397.,  3276.,  3312.,  3348.,  3384.,  3420.,  3456.,  3492.,  3528.,  3564.,  3600.,  3636.,  3672.,  2129.,  2151.,  2173.,  2195.,  2217.,  2239.,  2261.,  2283.,   988.,  1024.,  1060.,  1096.,  1132.,  1168.,  1204.,  1240.,  2884.,  2972.,  3060.,  3148.,  3236.,  3324.,  3412.,  3500.,  3588.,  3676.,  3764.,  3852.,  2232.,  2284.,  2336.,  2388.,  4956.,  5076.,  5196.,  5316.,  5436.,  5556.,  5676.,  5796.,  5916.,  6036.,  6156.,  6276.,  3332.,  3400.,  3468.,  3536.,  3604.,  3672.,  3740.,  3808.,  1996.,  2032.,  2068.,  2104.,  2140.,  2176.,  2212.,  2248.,  5348.,  5436.,  5524.,  5612.,  5700.,  5788.,  5876.,  5964.,  6052.,  6140.,  6228.,  6316.,  3688.,  3740.,  3792.,  3844.,  8316.,  8436.,  8556.,  8676.,  8796.,  8916.,  9036.,  9156.,  9276.,  9396.,  9516.,  9636.,  5236.,  5304.,  5372.,  5440.,  5508.,  5576.,  5644.,  5712.,  3004.,  3040.,  3076.,  3112.,  3148.,  3184.,  3220.,  3256.,  7812.,  7900.,  7988.,  8076.,  8164.,  8252.,  8340.,  8428.,  8516.,  8604.,  8692.,  8780.,  5144.,  5196.,  5248.,  5300., 11676., 11796., 11916., 12036., 12156., 12276., 12396., 12516., 12636., 12756., 12876., 12996.,  7140.,  7208.,  7276.,  7344.,  7412.,  7480.,  7548.,  7616.,  2783.,  2813.,  2843.,  2873.,  2903.,  2933.,  2963.,  2993.,  6244.,  6312.,  6380.,  6448.,  6516.,  6584.,  6652.,  6720.,  6788.,  6856.,  6924.,  6992.,  3677.,  3715.,  3753.,  3791.,  7728.,  7812.,  7896.,  7980.,  8064.,  8148.,  8232.,  8316.,  8400.,  8484.,  8568.,  8652.,  4451.,  4497.,  4543.,  4589.,  4635.,  4681.,  4727.,  4773.,  4096.,  4180.,  4264.,  4348.,  4432.,  4516.,  4600.,  4684.,  9100.,  9284.,  9468.,  9652.,  9836., 10020., 10204., 10388., 10572., 10756., 10940., 11124.,  5532.,  5632.,  5732.,  5832., 11172., 11388., 11604., 11820., 12036., 12252., 12468., 12684., 12900., 13116., 13332., 13548.,  6632.,  6748.,  6864.,  6980.,  7096.,  7212.,  7328.,  7444.,  6448.,  6532.,  6616.,  6700.,  6784.,  6868.,  6952.,  7036., 14252., 14436., 14620., 14804., 14988., 15172., 15356., 15540., 15724., 15908., 16092., 16276.,  8332.,  8432.,  8532.,  8632., 17220., 17436., 17652., 17868., 18084., 18300., 18516., 18732., 18948., 19164., 19380., 19596.,  9880.,  9996., 10112., 10228., 10344., 10460., 10576., 10692.,  8800.,  8884.,  8968.,  9052.,  9136.,  9220.,  9304.,  9388., 19404., 19588., 19772., 19956., 20140., 20324., 20508., 20692., 20876., 21060., 21244., 21428., 11132., 11232., 11332., 11432., 23268., 23484., 23700., 23916., 24132., 24348., 24564., 24780., 24996., 25212., 25428., 25644., 13128., 13244., 13360., 13476., 13592., 13708., 13824., 13940.,  5009.,  5063.,  5117.,  5171.,  5225.,  5279.,  5333.,  5387., 10696., 10812., 10928., 11044., 11160., 11276., 11392., 11508., 11624., 11740., 11856., 11972.,  5999.,  6061.,  6123.,  6185., 12180., 12312., 12444., 12576., 12708., 12840., 12972., 13104., 13236., 13368., 13500., 13632.,  6773.,  6843.,  6913.,  6983.,  7053.,  7123.,  7193.,  7263.,  6521.,  6575.,  6629.,  6683.,  6737.,  6791.,  6845.,  6899., 13944., 14060., 14176., 14292., 14408., 14524., 14640., 14756., 14872., 14988., 15104., 15220.,  7735.,  7797.,  7859.,  7921., 15876., 16008., 16140., 16272., 16404., 16536., 16668., 16800., 16932., 17064., 17196., 17328.,  8733.,  8803.,  8873.,  8943.,  9013.,  9083.,  9153.,  9223.};
  const std::array<int, 4> in_shape = {{ 1, 12, 11, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x11x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   29.,   35.,   41.,   47.,   53.,   59.,   65.,   71.,   77.,   83.,   89.,   95.,  112.,  132.,  152.,  172.,  192.,  212.,  232.,  252.,  272.,  292.,  312.,  332.,  179.,  193.,  207.,  221.,  235.,  249.,  263.,  277.,  291.,  305.,  319.,  333.,  347.,  361.,  375.,  389.,  173.,  179.,  185.,  191.,  197.,  203.,  209.,  215.,  221.,  227.,  233.,  239.,  245.,  251.,  257.,  263.,  672.,  692.,  712.,  732.,  752.,  772.,  792.,  812.,  832.,  852.,  872.,  892.,  571.,  585.,  599.,  613.,  627.,  641.,  655.,  669.,  683.,  697.,  711.,  725.,  739.,  753.,  767.,  781.,  341.,  347.,  353.,  359.,  365.,  371.,  377.,  383.,  389.,  395.,  401.,  407.,  413.,  419.,  425.,  431., 1232., 1252., 1272., 1292., 1312., 1332., 1352., 1372., 1392., 1412., 1432., 1452.,  963.,  977.,  991., 1005., 1019., 1033., 1047., 1061., 1075., 1089., 1103., 1117., 1131., 1145., 1159., 1173.,  509.,  515.,  521.,  527.,  533.,  539.,  545.,  551.,  557.,  563.,  569.,  575.,  581.,  587.,  593.,  599., 1792., 1812., 1832., 1852., 1872., 1892., 1912., 1932., 1952., 1972., 1992., 2012., 1355., 1369., 1383., 1397., 1411., 1425., 1439., 1453., 1467., 1481., 1495., 1509., 1523., 1537., 1551., 1565.,  694.,  722.,  750.,  778.,  806.,  834.,  862.,  890.,  918.,  946.,  974., 1002., 1030., 1058., 1086., 1114., 2744., 2816., 2888., 2960., 3032., 3104., 3176., 3248., 3320., 3392., 3464., 3536., 2130., 2174., 2218., 2262., 2306., 2350., 2394., 2438., 2482., 2526., 2570., 2614., 2658., 2702., 2746., 2790., 1478., 1506., 1534., 1562., 1590., 1618., 1646., 1674., 1702., 1730., 1758., 1786., 1814., 1842., 1870., 1898., 4760., 4832., 4904., 4976., 5048., 5120., 5192., 5264., 5336., 5408., 5480., 5552., 3362., 3406., 3450., 3494., 3538., 3582., 3626., 3670., 3714., 3758., 3802., 3846., 3890., 3934., 3978., 4022., 2262., 2290., 2318., 2346., 2374., 2402., 2430., 2458., 2486., 2514., 2542., 2570., 2598., 2626., 2654., 2682., 6776., 6848., 6920., 6992., 7064., 7136., 7208., 7280., 7352., 7424., 7496., 7568., 4594., 4638., 4682., 4726., 4770., 4814., 4858., 4902., 4946., 4990., 5034., 5078., 5122., 5166., 5210., 5254., 1865., 1887., 1909., 1931., 1953., 1975., 1997., 2019., 2041., 2063., 2085., 2107., 2129., 2151., 2173., 2195., 4760., 4812., 4864., 4916., 4968., 5020., 5072., 5124., 5176., 5228., 5280., 5332., 2903., 2933., 2963., 2993., 3023., 3053., 3083., 3113., 3143., 3173., 3203., 3233., 3263., 3293., 3323., 3353., 2481., 2503., 2525., 2547., 2569., 2591., 2613., 2635., 2657., 2679., 2701., 2723., 2745., 2767., 2789., 2811., 6216., 6268., 6320., 6372., 6424., 6476., 6528., 6580., 6632., 6684., 6736., 6788., 3743., 3773., 3803., 3833., 3863., 3893., 3923., 3953., 3983., 4013., 4043., 4073., 4103., 4133., 4163., 4193., 3097., 3119., 3141., 3163., 3185., 3207., 3229., 3251., 3273., 3295., 3317., 3339., 3361., 3383., 3405., 3427., 7672., 7724., 7776., 7828., 7880., 7932., 7984., 8036., 8088., 8140., 8192., 8244., 4583., 4613., 4643., 4673., 4703., 4733., 4763., 4793., 4823., 4853., 4883., 4913., 4943., 4973., 5003., 5033., 3713., 3735., 3757., 3779., 3801., 3823., 3845., 3867., 3889., 3911., 3933., 3955., 3977., 3999., 4021., 4043., 9128., 9180., 9232., 9284., 9336., 9388., 9440., 9492., 9544., 9596., 9648., 9700., 5423., 5453., 5483., 5513., 5543., 5573., 5603., 5633., 5663., 5693., 5723., 5753., 5783., 5813., 5843., 5873.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 11, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x11x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  190.,   230.,   270.,   310.,   350.,   390.,   430.,   470.,  1828.,  1972.,  2116.,  2260.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   902.,  1006.,  1110.,  1214.,  3444.,  3716.,  3988.,  4260.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  2462.,  2630.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,  1252.,  1396.,  1540.,  1684.,  1828.,  1972.,  2116.,  2260.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,  2356.,  2628.,  2900.,  3172.,  3444.,  3716.,  3988.,  4260.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,   510.,   550.,   590.,   630.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,  1252.,  1396.,  1540.,  1684.,  1828.,  1972.,  2116.,  2260.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,  2356.,  2628.,  2900.,  3172.,  3444.,  3716.,  3988.,  4260.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,  2356.,  2628.,  2900.,  3172.,  3444.,  3716.,  3988.,  4260.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,  5816.,  6488.,  7160.,  7832.,  5060.,  5460.,  5860.,  6260.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,  8024.,  8952.,  9880., 10808.,  6676.,  7204.,  7732.,  8260.,   340.,   868.,  1396.,  1924.,  1268.,  1540.,  1812.,  2084.,  2356.,  2628.,  2900.,  3172.,  8504.,  9176.,  9848., 10520.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,  3460.,  3860.,  4260.,  4660., 11736., 12664., 13592., 14520.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,  4564.,  5092.,  5620.,  6148.,  6676.,  7204.,  7732.,  8260.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,  5816.,  6488.,  7160.,  7832.,  8504.,  9176.,  9848., 10520.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,  8024.,  8952.,  9880., 10808., 11736., 12664., 13592., 14520.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,  4564.,  5092.,  5620.,  6148.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,  4564.,  5092.,  5620.,  6148.,  6676.,  7204.,  7732.,  8260.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,  5668.,  6324.,  6980.,  7636.,  8292.,  8948.,  9604., 10260.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,  5668.,  6324.,  6980.,  7636.,  8292.,  8948.,  9604., 10260.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000., 12440., 13880., 15320., 16760.,  9908., 10692., 11476., 12260.,  1080.,  2776.,  4472.,  6168.,  7864.,  9560., 11256., 12952., 14648., 16344., 18040., 19736., 11524., 12436., 13348., 14260.,   580.,  1492.,  2404.,  3316.,  3044.,  3700.,  4356.,  5012.,  5668.,  6324.,  6980.,  7636., 18200., 19640., 21080., 22520.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,  6772.,  7556.,  8340.,  9124., 21432., 23128., 24824., 26520.,  1080.,  2776.,  4472.,  6168.,  7864.,  9560., 11256., 12952.,  7876.,  8788.,  9700., 10612., 11524., 12436., 13348., 14260.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012., 12440., 13880., 15320., 16760., 18200., 19640., 21080., 22520.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988., 14648., 16344., 18040., 19736., 21432., 23128., 24824., 26520.,  1080.,  2776.,  4472.,  6168.,  4228.,  5140.,  6052.,  6964.,  7876.,  8788.,  9700., 10612.,  5358.,  5782.,  6206.,  6630.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,  7876.,  8788.,  9700., 10612., 11524., 12436., 13348., 14260.,   310.,   798.,  1286.,  1774.,  4820.,  5860.,  6900.,  7940.,  8980., 10020., 11060., 12100., 13140., 14180., 15220., 16260.,   350.,   902.,  1454.,  2006.,  2558.,  3110.,  3662.,  4214.,  3662.,  4086.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,  7876.,  8788.,  9700., 10612.,  6166.,  6654.,  7142.,  7630.,   660.,  1700.,  2740.,  3780.,  4820.,  5860.,  6900.,  7940.,  8980., 10020., 11060., 12100.,  6974.,  7526.,  8078.,  8630.,   350.,   902.,  1454.,  2006.};
  const std::array<int, 4> in_shape = {{ 1, 12, 11, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x11x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   350.,   390.,   430.,   470.,   510.,   550.,   590.,   630.,   740.,   884.,  1028.,  1172.,  1316.,  1460.,  1604.,  1748.,  1892.,  2036.,  2180.,  2324.,  1318.,  1422.,  1526.,  1630.,  1734.,  1838.,  1942.,  2046.,  2150.,  2254.,  2358.,  2462.,  2566.,  2670.,  2774.,  2878.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  1470.,  1510.,  1550.,  1590.,  1630.,  1670.,  1710.,  1750.,  4772.,  4916.,  5060.,  5204.,  5348.,  5492.,  5636.,  5780.,  5924.,  6068.,  6212.,  6356.,  4230.,  4334.,  4438.,  4542.,  4646.,  4750.,  4854.,  4958.,  5062.,  5166.,  5270.,  5374.,  5478.,  5582.,  5686.,  5790.,  2270.,  2310.,  2350.,  2390.,  2430.,  2470.,  2510.,  2550.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,  6244.,  6388.,  6532.,  6676.,  6820.,  6964.,  7108.,  7252.,   740.,   884.,  1028.,  1172.,   486.,   590.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,  1526.,  1630.,  1734.,  1838.,  1942.,  2046.,   830.,   870.,   910.,   950.,   990.,  1030.,  1070.,  1110.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  3620.,  3764.,  3908.,  4052.,  4196.,  4340.,  4484.,  4628.,  4772.,  4916.,  5060.,  5204.,  3398.,  3502.,  3606.,  3710.,  3814.,  3918.,  4022.,  4126.,  4230.,  4334.,  4438.,  4542.,  4646.,  4750.,  4854.,  4958.,  2060.,  2268.,  2476.,  2684.,  2892.,  3100.,  3308.,  3516.,  3724.,  3932.,  4140.,  4348.,  4556.,  4764.,  4972.,  5180.,  8040.,  8584.,  9128.,  9672., 10216., 10760., 11304., 11848., 12392., 12936., 13480., 14024.,  9244.,  9580.,  9916., 10252.,  3932.,  4268.,  4604.,  4940.,  5276.,  5612.,  5948.,  6284.,  6620.,  6956.,  7292.,  7628.,  5324.,  5532.,  5740.,  5948.,  6156.,  6364.,  6572.,  6780.,  6988.,  7196.,  7404.,  7612.,  7820.,  8028.,  8236.,  8444., 16616., 17160., 17704., 18248., 18792., 19336., 19880., 20424., 20968., 21512., 22056., 22600., 11996., 12332., 12668., 13004., 13340., 13676., 14012., 14348., 14684., 15020., 15356., 15692., 16028., 16364., 16700., 17036., 11148., 11356., 11564., 11772., 11980., 12188., 12396., 12604.,  2060.,  2268.,  2476.,  2684.,  2892.,  3100.,  3308.,  3516., 21096., 21640., 22184., 22728., 23272., 23816., 24360., 24904.,  8040.,  8584.,  9128.,  9672.,  6556.,  6892.,  7228.,  7564.,  7900.,  8236.,  8572.,  8908.,  9244.,  9580.,  9916., 10252.,  3932.,  4268.,  4604.,  4940.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  4814.,  4982.,  5150.,  5318.,  5486.,  5654.,  5822.,  5990., 10948., 11348., 11748., 12148., 12548., 12948., 13348., 13748., 14148., 14548., 14948., 15348.,  7574.,  7806.,  8038.,  8270.,  8502.,  8734.,  8966.,  9198.,  9430.,  9662.,  9894., 10126., 10358., 10590., 10822., 11054.,  8174.,  8342.,  8510.,  8678.,  8846.,  9014.,  9182.,  9350.,  9518.,  9686.,  9854., 10022., 10190., 10358., 10526., 10694., 11396., 11796., 12196., 12596., 12996., 13396., 13796., 14196., 14596., 14996., 15396., 15796., 14070., 14302., 14534., 14766.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,  2006.,  2238.,  2470.,  2702.,  2126.,  2294.,  2462.,  2630.,  2798.,  2966.,  3134.,  3302.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  7748.,  8148.,  8548.,  8948.,  9348.,  9748., 10148., 10548., 10948., 11348., 11748., 12148.,  5718.,  5950.,  6182.,  6414.,  6646.,  6878.,  7110.,  7342.,  7574.,  7806.,  8038.,  8270.,  8502.,  8734.,  8966.,  9198.,  6830.,  6998.,  7166.,  7334.,  7502.,  7670.,  7838.,  8006.,  8174.,  8342.,  8510.,  8678.,  8846.,  9014.,  9182.,  9350., 18948., 19348., 19748., 20148., 20548., 20948., 21348., 21748., 11396., 11796., 12196., 12596., 12214., 12446., 12678., 12910., 13142., 13374., 13606., 13838., 14070., 14302., 14534., 14766.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 11, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x12x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  9.,  10.,  11.,  28.,  31.,  34.,  22.,  48.,  53.,  58.,  33.,  36.,  16.,  17.,  18.,  49.,  52.,  55.,  36.,  83.,  88.,  93.,  54.,  57.,  23.,  24.,  25.,  70.,  73.,  76.,  50., 118., 123., 128.,  75.,  78.,  38.,  43.,  48., 116., 128., 140.,  84., 184., 200., 216., 120., 129.,  73.,  78.,  83., 200., 212., 224., 133., 296., 312., 328., 183., 192., 108., 113., 118., 284., 296., 308., 182., 408., 424., 440., 246., 255.,  92.,  96., 100., 214., 223., 232., 125., 262., 273., 284., 150., 156., 134., 145., 156., 320., 344., 368., 192., 388., 416., 444., 228., 243., 211., 222., 233., 488., 512., 536., 283., 584., 612., 640., 333., 348., 288., 299., 310., 656., 680., 704., 374., 780., 808., 836., 438., 453., 161., 168., 175., 358., 373., 388., 200., 406., 423., 440., 225., 234., 210., 217., 224., 463., 478., 493., 256., 525., 542., 559., 288., 297.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x12x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  1.,   2.,   3.,   4.,   7.,  10.,  13.,   8.,  10.,  12.,  14.,   0.,   8.,   9.,  10.,  11.,  28.,  31.,  34.,  22.,  24.,  26.,  28.,   0.,  15.,  16.,  17.,  18.,  49.,  52.,  55.,  36.,  38.,  40.,  42.,   0.,  22.,  23.,  24.,  25.,  70.,  73.,  76.,  50.,  52.,  54.,  56.,   0.,  32.,  36.,  40.,  44., 110., 120., 130.,  80.,  86.,  92.,  98.,   0.,  60.,  64.,  68.,  72., 180., 190., 200., 122., 128., 134., 140.,   0.,  88.,  92.,  96., 100., 250., 260., 270., 164., 170., 176., 182.,   0.,  66.,  69.,  72.,  75., 166., 173., 180., 100., 104., 108., 112.,   0.,  87.,  90.,  93.,  96., 215., 222., 229., 128., 132., 136., 140.,   0., 108., 111., 114., 117., 264., 271., 278., 156., 160., 164., 168.,   0., 129., 132., 135., 138., 313., 320., 327., 184., 188., 192., 196.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x12x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  53.,   59.,   65.,  180.,  200.,  220.,  151.,  336.,  372.,  408.,  237.,  259.,   95.,  101.,  107.,  320.,  340.,  360.,  249.,  588.,  624.,  660.,  391.,  413.,  137.,  143.,  149.,  460.,  480.,  500.,  347.,  840.,  876.,  912.,  545.,  567.,  232.,  268.,  304.,  772.,  860.,  948.,  588., 1308., 1428., 1548.,  872.,  940.,  484.,  520.,  556., 1388., 1476., 1564.,  952., 2148., 2268., 2388., 1348., 1416.,  736.,  772.,  808., 2004., 2092., 2180., 1316., 2988., 3108., 3228., 1824., 1892.,  683.,  713.,  743., 1600., 1668., 1736.,  941., 1980., 2064., 2148., 1139., 1185.,  988., 1072., 1156., 2380., 2564., 2748., 1440., 2916., 3132., 3348., 1724., 1840., 1576., 1660., 1744., 3668., 3852., 4036., 2140., 4428., 4644., 4860., 2536., 2652., 2164., 2248., 2332., 4956., 5140., 5324., 2840., 5940., 6156., 6372., 3348., 3464., 1229., 1283., 1337., 2740., 2856., 2972., 1535., 3120., 3252., 3384., 1733., 1803., 1607., 1661., 1715., 3552., 3668., 3784., 1969., 4044., 4176., 4308., 2223., 2293.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x12x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   40.,   60.,   80.,   53.,   67.,   81.,   95.,    0.,   47.,   53.,   59.,   65.,  180.,  200.,  220.,  151.,  165.,  179.,  193.,    0.,   89.,   95.,  101.,  107.,  320.,  340.,  360.,  249.,  263.,  277.,  291.,    0.,  131.,  137.,  143.,  149.,  460.,  480.,  500.,  347.,  361.,  375.,  389.,    0.,  190.,  218.,  246.,  274.,  728.,  800.,  872.,  558.,  602.,  646.,  690.,    0.,  386.,  414.,  442.,  470., 1232., 1304., 1376.,  866.,  910.,  954.,  998.,    0.,  582.,  610.,  638.,  666., 1736., 1808., 1880., 1174., 1218., 1262., 1306.,    0.,  479.,  501.,  523.,  545., 1220., 1272., 1324.,  743.,  773.,  803.,  833.,    0.,  633.,  655.,  677.,  699., 1584., 1636., 1688.,  953.,  983., 1013., 1043.,    0.,  787.,  809.,  831.,  853., 1948., 2000., 2052., 1163., 1193., 1223., 1253.,    0.,  941.,  963.,  985., 1007., 2312., 2364., 2416., 1373., 1403., 1433., 1463.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x12x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  350.,   390.,   430.,  1268.,  1412.,  1556.,  1110.,  2500.,  2772.,  3044.,  1790.,  1958.,   630.,   670.,   710.,  2276.,  2420.,  2564.,  1838.,  4404.,  4676.,  4948.,  2966.,  3134.,   910.,   950.,   990.,  3284.,  3428.,  3572.,  2566.,  6308.,  6580.,  6852.,  4142.,  4310.,  1572.,  1844.,  2116.,  4280.,  4952.,  5624.,  4372.,  6488.,  7416.,  8344.,  6628.,  1780.,  2196.,  2468.,  2740.,  5656.,  6328.,  7000.,  3844.,  7608.,  8536.,  9464.,  4948.,  5476.,  4100.,  4372.,  4644., 10360., 11032., 11704.,  6644., 14104., 15032., 15960.,  8644.,  9172.,  5254.,  5486.,  5718., 12356., 12884., 13412.,  7294., 15380., 16036., 16692.,  8870.,  9230.,  7572.,  8228.,  8884., 10904., 12344., 13784., 11140., 13112., 14808., 16504., 13396.,  2788.,  4740.,  5396.,  6052., 11512., 12952., 14392.,  7156., 13464., 15160., 16856.,  8260.,  9172.,  9332.,  9988., 10644., 21592., 23032., 24472., 12644., 25336., 27032., 28728., 14644., 15556.,  9598., 10022., 10446., 21428., 22340., 23252., 12022., 24452., 25492., 26532., 13598., 14150., 12566., 12990., 13414., 14244., 15156., 16068., 15438., 16116., 17156., 18196., 17462.,   350.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 128.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x12x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   260.,   404.,   548.,   382.,   486.,   590.,   694.,     0.,   310.,   350.,   390.,   430.,  1268.,  1412.,  1556.,  1110.,  1214.,  1318.,  1422.,     0.,   590.,   630.,   670.,   710.,  2276.,  2420.,  2564.,  1838.,  1942.,  2046.,  2150.,     0.,   870.,   910.,   950.,   990.,  3284.,  3428.,  3572.,  2566.,  2670.,  2774.,  2878.,     0.,  1260.,  1468.,  1676.,  1884.,  5224.,  5768.,  6312.,  4140.,  4476.,  4812.,  5148.,     0.,  2716.,  2924.,  3132.,  3340.,  9032.,  9576., 10120.,  6492.,  6828.,  7164.,  7500.,     0.,  4172.,  4380.,  4588.,  4796., 12840., 13384., 13928.,  8844.,  9180.,  9516.,  9852.,     0.,  3638.,  3806.,  3974.,  4142.,  9332.,  9732., 10132.,  5718.,  5950.,  6182.,  6414.,     0.,  4814.,  4982.,  5150.,  5318., 12132., 12532., 12932.,  7342.,  7574.,  7806.,  8038.,     0.,  5990.,  6158.,  6326.,  6494., 14932., 15332., 15732.,  8966.,  9198.,  9430.,  9662.,     0.,  7166.,  7334.,  7502.,  7670., 17732., 18132., 18532., 10590., 10822., 11054., 11286.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x12x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  17.,   18.,   19.,   20.,   21.,   22.,   53.,   56.,   59.,   62.,   65.,   68.,   42.,   44.,   91.,   96.,  101.,  106.,  111.,  116.,   63.,   66.,   69.,   72.,   31.,   32.,   33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,  161.,  166.,  171.,  176.,  181.,  186.,  105.,  108.,  111.,  114.,   45.,   46.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  231.,  236.,  241.,  246.,  251.,  256.,  147.,  150.,  153.,  156.,   71.,   76.,   81.,   86.,   91.,   96.,  220.,  232.,  244.,  256.,  268.,  280.,  161.,  168.,  352.,  368.,  384.,  400.,  416.,  432.,  231.,  240.,  249.,  258.,  141.,  146.,  151.,  156.,  161.,  166.,  388.,  400.,  412.,  424.,  436.,  448.,  259.,  266.,  576.,  592.,  608.,  624.,  640.,  656.,  357.,  366.,  375.,  384.,  211.,  216.,  221.,  226.,  231.,  236.,  556.,  568.,  580.,  592.,  604.,  616.,  357.,  364.,  800.,  816.,  832.,  848.,  864.,  880.,  483.,  492.,  501.,  510.,  180.,  184.,  188.,  192.,  196.,  200.,  419.,  428.,  437.,  446.,  455.,  464.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  306.,  312.,  257.,  268.,  279.,  290.,  301.,  312.,  616.,  640.,  664.,  688.,  712.,  736.,  371.,  384.,  748.,  776.,  804.,  832.,  860.,  888.,  441.,  456.,  471.,  486.,  411.,  422.,  433.,  444.,  455.,  466.,  952.,  976., 1000., 1024., 1048., 1072.,  553.,  566., 1140., 1168., 1196., 1224., 1252., 1280.,  651.,  666.,  681.,  696.,  565.,  576.,  587.,  598.,  609.,  620., 1288., 1312., 1336., 1360., 1384., 1408.,  735.,  748., 1532., 1560., 1588., 1616., 1644., 1672.,  861.,  876.,  891.,  906.,  315.,  322.,  329.,  336.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  795.,  812.,  829.,  846.,  863.,  880.,  441.,  450.,  459.,  468.,  413.,  420.,  427.,  434.,  441.,  448.,  911.,  926.,  941.,  956.,  971.,  986.,  504.,  512., 1033., 1050., 1067., 1084., 1101., 1118.,  567.,  576.,  585.,  594.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x12x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,  11.,  14.,  17.,  20.,  23.,  26.,  14.,  16.,  18.,  20.,  22.,  24.,  26.,  28.,   0.,   0.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  53.,  56.,  59.,  62.,  65.,  68.,  42.,  44.,  46.,  48.,  50.,  52.,  54.,  56.,   0.,   0.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,  95.,  98., 101., 104., 107., 110.,  70.,  72.,  74.,  76.,  78.,  80.,  82.,  84.,   0.,   0.,  43.,  44.,  45.,  46.,  47.,  48.,  49.,  50., 137., 140., 143., 146., 149., 152.,  98., 100., 102., 104., 106., 108., 110., 112.,   0.,   0.,  60.,  64.,  68.,  72.,  76.,  80.,  84.,  88., 210., 220., 230., 240., 250., 260., 154., 160., 166., 172., 178., 184., 190., 196.,   0.,   0., 116., 120., 124., 128., 132., 136., 140., 144., 350., 360., 370., 380., 390., 400., 238., 244., 250., 256., 262., 268., 274., 280.,   0.,   0., 172., 176., 180., 184., 188., 192., 196., 200., 490., 500., 510., 520., 530., 540., 322., 328., 334., 340., 346., 352., 358., 364.,   0.,   0., 129., 132., 135., 138., 141., 144., 147., 150., 325., 332., 339., 346., 353., 360., 196., 200., 204., 208., 212., 216., 220., 224.,   0.,   0., 171., 174., 177., 180., 183., 186., 189., 192., 423., 430., 437., 444., 451., 458., 252., 256., 260., 264., 268., 272., 276., 280.,   0.,   0., 213., 216., 219., 222., 225., 228., 231., 234., 521., 528., 535., 542., 549., 556., 308., 312., 316., 320., 324., 328., 332., 336.,   0.,   0., 255., 258., 261., 264., 267., 270., 273., 276., 619., 626., 633., 640., 647., 654., 364., 368., 372., 376., 380., 384., 388., 392.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x12x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  101.,   107.,   113.,   119.,   125.,   131.,   344.,   364.,   384.,   404.,   424.,   444.,   291.,   305.,   644.,   680.,   716.,   752.,   788.,   824.,   457.,   479.,   501.,   523.,   185.,   191.,   197.,   203.,   209.,   215.,   624.,   644.,   664.,   684.,   704.,   724.,   487.,   501.,  1148.,  1184.,  1220.,  1256.,  1292.,  1328.,   765.,   787.,   809.,   831.,   269.,   275.,   281.,   287.,   293.,   299.,   904.,   924.,   944.,   964.,   984.,  1004.,   683.,   697.,  1652.,  1688.,  1724.,  1760.,  1796.,  1832.,  1073.,  1095.,  1117.,  1139.,   436.,   472.,   508.,   544.,   580.,   616.,  1476.,  1564.,  1652.,  1740.,  1828.,  1916.,  1136.,  1188.,  2524.,  2644.,  2764.,  2884.,  3004.,  3124.,  1692.,  1760.,  1828.,  1896.,   940.,   976.,  1012.,  1048.,  1084.,  1120.,  2708.,  2796.,  2884.,  2972.,  3060.,  3148.,  1864.,  1916.,  4204.,  4324.,  4444.,  4564.,  4684.,  4804.,  2644.,  2712.,  2780.,  2848.,  1444.,  1480.,  1516.,  1552.,  1588.,  1624.,  3940.,  4028.,  4116.,  4204.,  4292.,  4380.,  2592.,  2644.,  5884.,  6004.,  6124.,  6244.,  6364.,  6484.,  3596.,  3664.,  3732.,  3800.,  1343.,  1373.,  1403.,  1433.,  1463.,  1493.,  3148.,  3216.,  3284.,  3352.,  3420.,  3488.,  1853.,  1891.,  3896.,  3980.,  4064.,  4148.,  4232.,  4316.,  2243.,  2289.,  2335.,  2381.,  1912.,  1996.,  2080.,  2164.,  2248.,  2332.,  4620.,  4804.,  4988.,  5172.,  5356.,  5540.,  2804.,  2904.,  5668.,  5884.,  6100.,  6316.,  6532.,  6748.,  3360.,  3476.,  3592.,  3708.,  3088.,  3172.,  3256.,  3340.,  3424.,  3508.,  7196.,  7380.,  7564.,  7748.,  7932.,  8116.,  4204.,  4304.,  8692.,  8908.,  9124.,  9340.,  9556.,  9772.,  4984.,  5100.,  5216.,  5332.,  4264.,  4348.,  4432.,  4516.,  4600.,  4684.,  9772.,  9956., 10140., 10324., 10508., 10692.,  5604.,  5704., 11716., 11932., 12148., 12364., 12580., 12796.,  6608.,  6724.,  6840.,  6956.,  2417.,  2471.,  2525.,  2579.,  2633.,  2687.,  5392.,  5508.,  5624.,  5740.,  5856.,  5972.,  3023.,  3085.,  6140.,  6272.,  6404.,  6536.,  6668.,  6800.,  3413.,  3483.,  3553.,  3623.,  3173.,  3227.,  3281.,  3335.,  3389.,  3443.,  7016.,  7132.,  7248.,  7364.,  7480.,  7596.,  3891.,  3953.,  7988.,  8120.,  8252.,  8384.,  8516.,  8648.,  4393.,  4463.,  4533.,  4603.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x12x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   29.,   35.,   41.,   47.,   64.,   84.,  104.,  124.,  144.,  164.,   95.,  109.,  123.,  137.,  151.,  165.,  179.,  193.,    0.,    0.,   89.,   95.,  101.,  107.,  113.,  119.,  125.,  131.,  344.,  364.,  384.,  404.,  424.,  444.,  291.,  305.,  319.,  333.,  347.,  361.,  375.,  389.,    0.,    0.,  173.,  179.,  185.,  191.,  197.,  203.,  209.,  215.,  624.,  644.,  664.,  684.,  704.,  724.,  487.,  501.,  515.,  529.,  543.,  557.,  571.,  585.,    0.,    0.,  257.,  263.,  269.,  275.,  281.,  287.,  293.,  299.,  904.,  924.,  944.,  964.,  984., 1004.,  683.,  697.,  711.,  725.,  739.,  753.,  767.,  781.,    0.,    0.,  358.,  386.,  414.,  442.,  470.,  498.,  526.,  554., 1400., 1472., 1544., 1616., 1688., 1760., 1082., 1126., 1170., 1214., 1258., 1302., 1346., 1390.,    0.,    0.,  750.,  778.,  806.,  834.,  862.,  890.,  918.,  946., 2408., 2480., 2552., 2624., 2696., 2768., 1698., 1742., 1786., 1830., 1874., 1918., 1962., 2006.,    0.,    0., 1142., 1170., 1198., 1226., 1254., 1282., 1310., 1338., 3416., 3488., 3560., 3632., 3704., 3776., 2314., 2358., 2402., 2446., 2490., 2534., 2578., 2622.,    0.,    0.,  941.,  963.,  985., 1007., 1029., 1051., 1073., 1095., 2400., 2452., 2504., 2556., 2608., 2660., 1463., 1493., 1523., 1553., 1583., 1613., 1643., 1673.,    0.,    0., 1249., 1271., 1293., 1315., 1337., 1359., 1381., 1403., 3128., 3180., 3232., 3284., 3336., 3388., 1883., 1913., 1943., 1973., 2003., 2033., 2063., 2093.,    0.,    0., 1557., 1579., 1601., 1623., 1645., 1667., 1689., 1711., 3856., 3908., 3960., 4012., 4064., 4116., 2303., 2333., 2363., 2393., 2423., 2453., 2483., 2513.,    0.,    0., 1865., 1887., 1909., 1931., 1953., 1975., 1997., 2019., 4584., 4636., 4688., 4740., 4792., 4844., 2723., 2753., 2783., 2813., 2843., 2873., 2903., 2933.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x12x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,  1796.,  1940.,   420.,   564.,   708.,   852.,   486.,   590.,  3156.,  3428.,  1012.,  1284.,  1556.,  1828.,   782.,   950.,  1118.,  1286.,   590.,   630.,    30.,    70.,   110.,   150.,  1508.,  1652.,  1796.,  1940.,   420.,   564.,   278.,   382.,  2612.,  2884.,  3156.,  3428.,  1012.,  1284.,   446.,   614.,   782.,   950.,   510.,   550.,   590.,   630.,    30.,    70.,  1220.,  1364.,  1508.,  1652.,  1796.,  1940.,    70.,   174.,  2068.,  2340.,  2612.,  2884.,  3156.,  3428.,   110.,   278.,   446.,   614.,  1044.,  1316.,  1588.,  1860.,  2132.,  2404.,  3128.,  3800.,  4472.,  5144.,  5816.,  6488.,  3492.,  3892.,  4312.,  5240.,  6168.,  7096.,  8024.,  8952.,  4852.,  5380.,  3220.,  3748.,   500.,   772.,  1044.,  1316.,  1588.,  1860.,  7160.,  7832.,  3128.,  3800.,  4472.,  5144.,  2692.,  3092.,  9880., 10808.,  4312.,  5240.,  6168.,  7096.,  3796.,  4324.,  4852.,  5380.,  3668.,  3940.,   500.,   772.,  1044.,  1316.,  5816.,  6488.,  7160.,  7832.,  3128.,  3800.,  1892.,  2292.,  8024.,  8952.,  9880., 10808.,  4312.,  5240.,  2740.,  3268.,  3796.,  4324.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,  3764.,  4292.,  4820.,  5348.,  5876.,  6404.,   190.,   486.,  4612.,  5268.,  5924.,  6580.,  7236.,  7892.,   230.,   590.,   950.,  1310.,  3588.,  4244.,  4900.,  5556.,  6212.,  6868.,  6680.,  8120.,  9560., 11000., 12440., 13880.,  7572.,  8356.,  7864.,  9560., 11256., 12952., 14648., 16344.,  8932.,  9844.,  4996.,  5908.,  2276.,  2932.,  3588.,  4244.,  4900.,  5556., 15320., 16760.,  6680.,  8120.,  9560., 11000.,  6004.,  6788., 18040., 19736.,  7864.,  9560., 11256., 12952.,  7108.,  8020.,  8932.,  9844.,  7748.,  8404.,  2276.,  2932.,  3588.,  4244., 12440., 13880., 15320., 16760.,  6680.,  8120.,  4436.,  5220., 14648., 16344., 18040., 19736.,  7864.,  9560.,  5284.,  6196.,  7108.,  8020.,  5358.,  5782.,  6206.,  6630.,   270.,   694.,  6308.,  7220.,  8132.,  9044.,  9956., 10868.,   310.,   798.,  7156.,  8196.,  9236., 10276., 11316., 12356.,   350.,   902.,  1454.,  2006.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,  4484.,  5396.,  6308.,  7220.,  8132.,  9044.,  7142.,  7630.,  5076.,  6116.,  7156.,  8196.,  9236., 10276.,  8078.,  8630.,   350.,   902.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x12x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   420.,   564.,   708.,   852.,   996.,  1140.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,     0.,     0.,   590.,   630.,   670.,   710.,   750.,   790.,   830.,   870.,  2436.,  2580.,  2724.,  2868.,  3012.,  3156.,  2150.,  2254.,  2358.,  2462.,  2566.,  2670.,  2774.,  2878.,     0.,     0.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  4452.,  4596.,  4740.,  4884.,  5028.,  5172.,  3606.,  3710.,  3814.,  3918.,  4022.,  4126.,  4230.,  4334.,     0.,     0.,  1710.,  1750.,  1790.,  1830.,  1870.,  1910.,  1950.,  1990.,  6468.,  6612.,  6756.,  6900.,  7044.,  7188.,  5062.,  5166.,  5270.,  5374.,  5478.,  5582.,  5686.,  5790.,     0.,     0.,  2380.,  2588.,  2796.,  3004.,  3212.,  3420.,  3628.,  3836.,  7528.,  8072.,  8616.,  9160.,  9704., 10248.,  8060.,  8396.,  2076.,  2412.,  2748.,  3084.,  3420.,  3756.,     0.,     0.,  2732.,  2940.,  3148.,  3356.,  3564.,  3772.,  3980.,  4188.,  8488.,  9032.,  9576., 10120., 10664., 11208.,  6108.,  6444.,  6780.,  7116.,  7452.,  7788.,  8124.,  8460.,     0.,     0.,  5644.,  5852.,  6060.,  6268.,  6476.,  6684.,  6892.,  7100., 16104., 16648., 17192., 17736., 18280., 18824., 10812., 11148., 11484., 11820., 12156., 12492., 12828., 13164.,     0.,     0.,  7166.,  7334.,  7502.,  7670.,  7838.,  8006.,  8174.,  8342., 18404., 18804., 19204., 19604., 20004., 20404., 11286., 11518., 11750., 11982., 12214., 12446., 12678., 12910.,     0.,     0.,  9518.,  9686.,  9854., 10022., 10190., 10358., 10526., 10694., 13252., 13652., 14052., 14452., 14852., 15252., 14534., 14766.,   150.,   382.,   614.,   846.,  1078.,  1310.,     0.,     0.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  4004.,  4404.,  4804.,  5204.,  5604.,  6004.,  2934.,  3166.,  3398.,  3630.,  3862.,  4094.,  4326.,  4558.,     0.,     0.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  9604., 10004., 10404., 10804., 11204., 11604.,  6182.,  6414.,  6646.,  6878.,  7110.,  7342.,  7574.,  7806.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x12x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  33.,   34.,   35.,   36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,  103.,  106.,  109.,  112.,  115.,  118.,  121.,  124.,  127.,  130.,  133.,  136.,   82.,   84.,   86.,   88.,  177.,  182.,  187.,  192.,  197.,  202.,  207.,  212.,  217.,  222.,  227.,  232.,  123.,  126.,  129.,  132.,  135.,  138.,  141.,  144.,   61.,   62.,   63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  317.,  322.,  327.,  332.,  337.,  342.,  347.,  352.,  357.,  362.,  367.,  372.,  207.,  210.,  213.,  216.,  219.,  222.,  225.,  228.,   89.,   90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  457.,  462.,  467.,  472.,  477.,  482.,  487.,  492.,  497.,  502.,  507.,  512.,  291.,  294.,  297.,  300.,  303.,  306.,  309.,  312.,  137.,  142.,  147.,  152.,  157.,  162.,  167.,  172.,  177.,  182.,  187.,  192.,  428.,  440.,  452.,  464.,  476.,  488.,  500.,  512.,  524.,  536.,  548.,  560.,  315.,  322.,  329.,  336.,  688.,  704.,  720.,  736.,  752.,  768.,  784.,  800.,  816.,  832.,  848.,  864.,  453.,  462.,  471.,  480.,  489.,  498.,  507.,  516.,  277.,  282.,  287.,  292.,  297.,  302.,  307.,  312.,  317.,  322.,  327.,  332.,  764.,  776.,  788.,  800.,  812.,  824.,  836.,  848.,  860.,  872.,  884.,  896.,  511.,  518.,  525.,  532., 1136., 1152., 1168., 1184., 1200., 1216., 1232., 1248., 1264., 1280., 1296., 1312.,  705.,  714.,  723.,  732.,  741.,  750.,  759.,  768.,  417.,  422.,  427.,  432.,  437.,  442.,  447.,  452.,  457.,  462.,  467.,  472., 1100., 1112., 1124., 1136., 1148., 1160., 1172., 1184., 1196., 1208., 1220., 1232.,  707.,  714.,  721.,  728., 1584., 1600., 1616., 1632., 1648., 1664., 1680., 1696., 1712., 1728., 1744., 1760.,  957.,  966.,  975.,  984.,  993., 1002., 1011., 1020.,  356.,  360.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,  396.,  400.,  829.,  838.,  847.,  856.,  865.,  874.,  883.,  892.,  901.,  910.,  919.,  928.,  485.,  490.,  495.,  500., 1015., 1026., 1037., 1048., 1059., 1070., 1081., 1092., 1103., 1114., 1125., 1136.,  582.,  588.,  594.,  600.,  606.,  612.,  618.,  624.,  503.,  514.,  525.,  536.,  547.,  558.,  569.,  580.,  591.,  602.,  613.,  624., 1208., 1232., 1256., 1280., 1304., 1328., 1352., 1376., 1400., 1424., 1448., 1472.,  729.,  742.,  755.,  768., 1468., 1496., 1524., 1552., 1580., 1608., 1636., 1664., 1692., 1720., 1748., 1776.,  867.,  882.,  897.,  912.,  927.,  942.,  957.,  972.,  811.,  822.,  833.,  844.,  855.,  866.,  877.,  888.,  899.,  910.,  921.,  932., 1880., 1904., 1928., 1952., 1976., 2000., 2024., 2048., 2072., 2096., 2120., 2144., 1093., 1106., 1119., 1132., 2252., 2280., 2308., 2336., 2364., 2392., 2420., 2448., 2476., 2504., 2532., 2560., 1287., 1302., 1317., 1332., 1347., 1362., 1377., 1392., 1119., 1130., 1141., 1152., 1163., 1174., 1185., 1196., 1207., 1218., 1229., 1240., 2552., 2576., 2600., 2624., 2648., 2672., 2696., 2720., 2744., 2768., 2792., 2816., 1457., 1470., 1483., 1496., 3036., 3064., 3092., 3120., 3148., 3176., 3204., 3232., 3260., 3288., 3316., 3344., 1707., 1722., 1737., 1752., 1767., 1782., 1797., 1812.,  623.,  630.,  637.,  644.,  651.,  658.,  665.,  672.,  679.,  686.,  693.,  700., 1387., 1402., 1417., 1432., 1447., 1462., 1477., 1492., 1507., 1522., 1537., 1552.,  776.,  784.,  792.,  800., 1573., 1590., 1607., 1624., 1641., 1658., 1675., 1692., 1709., 1726., 1743., 1760.,  873.,  882.,  891.,  900.,  909.,  918.,  927.,  936.,  819.,  826.,  833.,  840.,  847.,  854.,  861.,  868.,  875.,  882.,  889.,  896., 1807., 1822., 1837., 1852., 1867., 1882., 1897., 1912., 1927., 1942., 1957., 1972., 1000., 1008., 1016., 1024., 2049., 2066., 2083., 2100., 2117., 2134., 2151., 2168., 2185., 2202., 2219., 2236., 1125., 1134., 1143., 1152., 1161., 1170., 1179., 1188.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x12x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,    9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   19.,   22.,   25.,   28.,   31.,   34.,   37.,   40.,   43.,   46.,   49.,   52.,   26.,   28.,   30.,   32.,   34.,   36.,   38.,   40.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,    0.,    0.,    0.,    0.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,  103.,  106.,  109.,  112.,  115.,  118.,  121.,  124.,  127.,  130.,  133.,  136.,   82.,   84.,   86.,   88.,   90.,   92.,   94.,   96.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,    0.,    0.,    0.,    0.,   57.,   58.,   59.,   60.,   61.,   62.,   63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  146.,  148.,  150.,  152.,  154.,  156.,  158.,  160.,  162.,  164.,  166.,  168.,    0.,    0.,    0.,    0.,   85.,   86.,   87.,   88.,   89.,   90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  202.,  204.,  206.,  208.,  210.,  212.,  214.,  216.,  218.,  220.,  222.,  224.,    0.,    0.,    0.,    0.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  148.,  152.,  156.,  160.,  164.,  168.,  172.,  176.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  302.,  308.,  314.,  320.,  326.,  332.,  338.,  344.,  350.,  356.,  362.,  368.,  374.,  380.,  386.,  392.,    0.,    0.,    0.,    0.,  228.,  232.,  236.,  240.,  244.,  248.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,  284.,  288.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  470.,  476.,  482.,  488.,  494.,  500.,  506.,  512.,  518.,  524.,  530.,  536.,  542.,  548.,  554.,  560.,    0.,    0.,    0.,    0.,  340.,  344.,  348.,  352.,  356.,  360.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,  396.,  400.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080.,  638.,  644.,  650.,  656.,  662.,  668.,  674.,  680.,  686.,  692.,  698.,  704.,  710.,  716.,  722.,  728.,    0.,    0.,    0.,    0.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  279.,  282.,  285.,  288.,  291.,  294.,  297.,  300.,  643.,  650.,  657.,  664.,  671.,  678.,  685.,  692.,  699.,  706.,  713.,  720.,  388.,  392.,  396.,  400.,  404.,  408.,  412.,  416.,  420.,  424.,  428.,  432.,  436.,  440.,  444.,  448.,    0.,    0.,    0.,    0.,  339.,  342.,  345.,  348.,  351.,  354.,  357.,  360.,  363.,  366.,  369.,  372.,  375.,  378.,  381.,  384.,  839.,  846.,  853.,  860.,  867.,  874.,  881.,  888.,  895.,  902.,  909.,  916.,  500.,  504.,  508.,  512.,  516.,  520.,  524.,  528.,  532.,  536.,  540.,  544.,  548.,  552.,  556.,  560.,    0.,    0.,    0.,    0.,  423.,  426.,  429.,  432.,  435.,  438.,  441.,  444.,  447.,  450.,  453.,  456.,  459.,  462.,  465.,  468., 1035., 1042., 1049., 1056., 1063., 1070., 1077., 1084., 1091., 1098., 1105., 1112.,  612.,  616.,  620.,  624.,  628.,  632.,  636.,  640.,  644.,  648.,  652.,  656.,  660.,  664.,  668.,  672.,    0.,    0.,    0.,    0.,  507.,  510.,  513.,  516.,  519.,  522.,  525.,  528.,  531.,  534.,  537.,  540.,  543.,  546.,  549.,  552., 1231., 1238., 1245., 1252., 1259., 1266., 1273., 1280., 1287., 1294., 1301., 1308.,  724.,  728.,  732.,  736.,  740.,  744.,  748.,  752.,  756.,  760.,  764.,  768.,  772.,  776.,  780.,  784.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x12x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  197.,   203.,   209.,   215.,   221.,   227.,   233.,   239.,   245.,   251.,   257.,   263.,   672.,   692.,   712.,   732.,   752.,   772.,   792.,   812.,   832.,   852.,   872.,   892.,   571.,   585.,   599.,   613.,  1260.,  1296.,  1332.,  1368.,  1404.,  1440.,  1476.,  1512.,  1548.,  1584.,  1620.,  1656.,   897.,   919.,   941.,   963.,   985.,  1007.,  1029.,  1051.,   365.,   371.,   377.,   383.,   389.,   395.,   401.,   407.,   413.,   419.,   425.,   431.,  1232.,  1252.,  1272.,  1292.,  1312.,  1332.,  1352.,  1372.,  1392.,  1412.,  1432.,  1452.,   963.,   977.,   991.,  1005.,  2268.,  2304.,  2340.,  2376.,  2412.,  2448.,  2484.,  2520.,  2556.,  2592.,  2628.,  2664.,  1513.,  1535.,  1557.,  1579.,  1601.,  1623.,  1645.,  1667.,   533.,   539.,   545.,   551.,   557.,   563.,   569.,   575.,   581.,   587.,   593.,   599.,  1792.,  1812.,  1832.,  1852.,  1872.,  1892.,  1912.,  1932.,  1952.,  1972.,  1992.,  2012.,  1355.,  1369.,  1383.,  1397.,  3276.,  3312.,  3348.,  3384.,  3420.,  3456.,  3492.,  3528.,  3564.,  3600.,  3636.,  3672.,  2129.,  2151.,  2173.,  2195.,  2217.,  2239.,  2261.,  2283.,   844.,   880.,   916.,   952.,   988.,  1024.,  1060.,  1096.,  1132.,  1168.,  1204.,  1240.,  2884.,  2972.,  3060.,  3148.,  3236.,  3324.,  3412.,  3500.,  3588.,  3676.,  3764.,  3852.,  2232.,  2284.,  2336.,  2388.,  4956.,  5076.,  5196.,  5316.,  5436.,  5556.,  5676.,  5796.,  5916.,  6036.,  6156.,  6276.,  3332.,  3400.,  3468.,  3536.,  3604.,  3672.,  3740.,  3808.,  1852.,  1888.,  1924.,  1960.,  1996.,  2032.,  2068.,  2104.,  2140.,  2176.,  2212.,  2248.,  5348.,  5436.,  5524.,  5612.,  5700.,  5788.,  5876.,  5964.,  6052.,  6140.,  6228.,  6316.,  3688.,  3740.,  3792.,  3844.,  8316.,  8436.,  8556.,  8676.,  8796.,  8916.,  9036.,  9156.,  9276.,  9396.,  9516.,  9636.,  5236.,  5304.,  5372.,  5440.,  5508.,  5576.,  5644.,  5712.,  2860.,  2896.,  2932.,  2968.,  3004.,  3040.,  3076.,  3112.,  3148.,  3184.,  3220.,  3256.,  7812.,  7900.,  7988.,  8076.,  8164.,  8252.,  8340.,  8428.,  8516.,  8604.,  8692.,  8780.,  5144.,  5196.,  5248.,  5300., 11676., 11796., 11916., 12036., 12156., 12276., 12396., 12516., 12636., 12756., 12876., 12996.,  7140.,  7208.,  7276.,  7344.,  7412.,  7480.,  7548.,  7616.,  2663.,  2693.,  2723.,  2753.,  2783.,  2813.,  2843.,  2873.,  2903.,  2933.,  2963.,  2993.,  6244.,  6312.,  6380.,  6448.,  6516.,  6584.,  6652.,  6720.,  6788.,  6856.,  6924.,  6992.,  3677.,  3715.,  3753.,  3791.,  7728.,  7812.,  7896.,  7980.,  8064.,  8148.,  8232.,  8316.,  8400.,  8484.,  8568.,  8652.,  4451.,  4497.,  4543.,  4589.,  4635.,  4681.,  4727.,  4773.,  3760.,  3844.,  3928.,  4012.,  4096.,  4180.,  4264.,  4348.,  4432.,  4516.,  4600.,  4684.,  9100.,  9284.,  9468.,  9652.,  9836., 10020., 10204., 10388., 10572., 10756., 10940., 11124.,  5532.,  5632.,  5732.,  5832., 11172., 11388., 11604., 11820., 12036., 12252., 12468., 12684., 12900., 13116., 13332., 13548.,  6632.,  6748.,  6864.,  6980.,  7096.,  7212.,  7328.,  7444.,  6112.,  6196.,  6280.,  6364.,  6448.,  6532.,  6616.,  6700.,  6784.,  6868.,  6952.,  7036., 14252., 14436., 14620., 14804., 14988., 15172., 15356., 15540., 15724., 15908., 16092., 16276.,  8332.,  8432.,  8532.,  8632., 17220., 17436., 17652., 17868., 18084., 18300., 18516., 18732., 18948., 19164., 19380., 19596.,  9880.,  9996., 10112., 10228., 10344., 10460., 10576., 10692.,  8464.,  8548.,  8632.,  8716.,  8800.,  8884.,  8968.,  9052.,  9136.,  9220.,  9304.,  9388., 19404., 19588., 19772., 19956., 20140., 20324., 20508., 20692., 20876., 21060., 21244., 21428., 11132., 11232., 11332., 11432., 23268., 23484., 23700., 23916., 24132., 24348., 24564., 24780., 24996., 25212., 25428., 25644., 13128., 13244., 13360., 13476., 13592., 13708., 13824., 13940.,  4793.,  4847.,  4901.,  4955.,  5009.,  5063.,  5117.,  5171.,  5225.,  5279.,  5333.,  5387., 10696., 10812., 10928., 11044., 11160., 11276., 11392., 11508., 11624., 11740., 11856., 11972.,  5999.,  6061.,  6123.,  6185., 12180., 12312., 12444., 12576., 12708., 12840., 12972., 13104., 13236., 13368., 13500., 13632.,  6773.,  6843.,  6913.,  6983.,  7053.,  7123.,  7193.,  7263.,  6305.,  6359.,  6413.,  6467.,  6521.,  6575.,  6629.,  6683.,  6737.,  6791.,  6845.,  6899., 13944., 14060., 14176., 14292., 14408., 14524., 14640., 14756., 14872., 14988., 15104., 15220.,  7735.,  7797.,  7859.,  7921., 15876., 16008., 16140., 16272., 16404., 16536., 16668., 16800., 16932., 17064., 17196., 17328.,  8733.,  8803.,  8873.,  8943.,  9013.,  9083.,  9153.,  9223.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x12x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   29.,   35.,   41.,   47.,   53.,   59.,   65.,   71.,   77.,   83.,   89.,   95.,  112.,  132.,  152.,  172.,  192.,  212.,  232.,  252.,  272.,  292.,  312.,  332.,  179.,  193.,  207.,  221.,  235.,  249.,  263.,  277.,  291.,  305.,  319.,  333.,  347.,  361.,  375.,  389.,    0.,    0.,    0.,    0.,  173.,  179.,  185.,  191.,  197.,  203.,  209.,  215.,  221.,  227.,  233.,  239.,  245.,  251.,  257.,  263.,  672.,  692.,  712.,  732.,  752.,  772.,  792.,  812.,  832.,  852.,  872.,  892.,  571.,  585.,  599.,  613.,  627.,  641.,  655.,  669.,  683.,  697.,  711.,  725.,  739.,  753.,  767.,  781.,    0.,    0.,    0.,    0.,  341.,  347.,  353.,  359.,  365.,  371.,  377.,  383.,  389.,  395.,  401.,  407.,  413.,  419.,  425.,  431., 1232., 1252., 1272., 1292., 1312., 1332., 1352., 1372., 1392., 1412., 1432., 1452.,  963.,  977.,  991., 1005., 1019., 1033., 1047., 1061., 1075., 1089., 1103., 1117., 1131., 1145., 1159., 1173.,    0.,    0.,    0.,    0.,  509.,  515.,  521.,  527.,  533.,  539.,  545.,  551.,  557.,  563.,  569.,  575.,  581.,  587.,  593.,  599., 1792., 1812., 1832., 1852., 1872., 1892., 1912., 1932., 1952., 1972., 1992., 2012., 1355., 1369., 1383., 1397., 1411., 1425., 1439., 1453., 1467., 1481., 1495., 1509., 1523., 1537., 1551., 1565.,    0.,    0.,    0.,    0.,  694.,  722.,  750.,  778.,  806.,  834.,  862.,  890.,  918.,  946.,  974., 1002., 1030., 1058., 1086., 1114., 2744., 2816., 2888., 2960., 3032., 3104., 3176., 3248., 3320., 3392., 3464., 3536., 2130., 2174., 2218., 2262., 2306., 2350., 2394., 2438., 2482., 2526., 2570., 2614., 2658., 2702., 2746., 2790.,    0.,    0.,    0.,    0., 1478., 1506., 1534., 1562., 1590., 1618., 1646., 1674., 1702., 1730., 1758., 1786., 1814., 1842., 1870., 1898., 4760., 4832., 4904., 4976., 5048., 5120., 5192., 5264., 5336., 5408., 5480., 5552., 3362., 3406., 3450., 3494., 3538., 3582., 3626., 3670., 3714., 3758., 3802., 3846., 3890., 3934., 3978., 4022.,    0.,    0.,    0.,    0., 2262., 2290., 2318., 2346., 2374., 2402., 2430., 2458., 2486., 2514., 2542., 2570., 2598., 2626., 2654., 2682., 6776., 6848., 6920., 6992., 7064., 7136., 7208., 7280., 7352., 7424., 7496., 7568., 4594., 4638., 4682., 4726., 4770., 4814., 4858., 4902., 4946., 4990., 5034., 5078., 5122., 5166., 5210., 5254.,    0.,    0.,    0.,    0., 1865., 1887., 1909., 1931., 1953., 1975., 1997., 2019., 2041., 2063., 2085., 2107., 2129., 2151., 2173., 2195., 4760., 4812., 4864., 4916., 4968., 5020., 5072., 5124., 5176., 5228., 5280., 5332., 2903., 2933., 2963., 2993., 3023., 3053., 3083., 3113., 3143., 3173., 3203., 3233., 3263., 3293., 3323., 3353.,    0.,    0.,    0.,    0., 2481., 2503., 2525., 2547., 2569., 2591., 2613., 2635., 2657., 2679., 2701., 2723., 2745., 2767., 2789., 2811., 6216., 6268., 6320., 6372., 6424., 6476., 6528., 6580., 6632., 6684., 6736., 6788., 3743., 3773., 3803., 3833., 3863., 3893., 3923., 3953., 3983., 4013., 4043., 4073., 4103., 4133., 4163., 4193.,    0.,    0.,    0.,    0., 3097., 3119., 3141., 3163., 3185., 3207., 3229., 3251., 3273., 3295., 3317., 3339., 3361., 3383., 3405., 3427., 7672., 7724., 7776., 7828., 7880., 7932., 7984., 8036., 8088., 8140., 8192., 8244., 4583., 4613., 4643., 4673., 4703., 4733., 4763., 4793., 4823., 4853., 4883., 4913., 4943., 4973., 5003., 5033.,    0.,    0.,    0.,    0., 3713., 3735., 3757., 3779., 3801., 3823., 3845., 3867., 3889., 3911., 3933., 3955., 3977., 3999., 4021., 4043., 9128., 9180., 9232., 9284., 9336., 9388., 9440., 9492., 9544., 9596., 9648., 9700., 5423., 5453., 5483., 5513., 5543., 5573., 5603., 5633., 5663., 5693., 5723., 5753., 5783., 5813., 5843., 5873.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x12x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   350.,   390.,   430.,   470.,  1828.,  1972.,  2116.,  2260.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   902.,  1006.,  1110.,  1214.,  3444.,  3716.,  3988.,  4260.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  2462.,  2630.,   510.,   550.,   590.,   630.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,  1252.,  1396.,  1540.,  1684.,  1828.,  1972.,  2116.,  2260.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,  2356.,  2628.,  2900.,  3172.,  3444.,  3716.,  3988.,  4260.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,   350.,   390.,   430.,   470.,   510.,   550.,   590.,   630.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,  1252.,  1396.,  1540.,  1684.,  1828.,  1972.,  2116.,  2260.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,  2356.,  2628.,  2900.,  3172.,  3444.,  3716.,  3988.,  4260.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,  1268.,  1540.,  1812.,  2084.,  2356.,  2628.,  2900.,  3172.,  3444.,  3716.,  3988.,  4260.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,  5816.,  6488.,  7160.,  7832.,  5060.,  5460.,  5860.,  6260.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,  8024.,  8952.,  9880., 10808.,  6676.,  7204.,  7732.,  8260.,   340.,   868.,  1396.,  1924.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,  2356.,  2628.,  2900.,  3172.,  8504.,  9176.,  9848., 10520.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,  3460.,  3860.,  4260.,  4660., 11736., 12664., 13592., 14520.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,  4564.,  5092.,  5620.,  6148.,  6676.,  7204.,  7732.,  8260.,  3444.,  3716.,  3988.,  4260.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,  5816.,  6488.,  7160.,  7832.,  8504.,  9176.,  9848., 10520.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,  8024.,  8952.,  9880., 10808., 11736., 12664., 13592., 14520.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,  4564.,  5092.,  5620.,  6148.,  2006.,  2238.,  2470.,  2702.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,  4564.,  5092.,  5620.,  6148.,  6676.,  7204.,  7732.,  8260.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,  5668.,  6324.,  6980.,  7636.,  8292.,  8948.,  9604., 10260.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,  3044.,  3700.,  4356.,  5012.,  5668.,  6324.,  6980.,  7636.,  8292.,  8948.,  9604., 10260.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000., 12440., 13880., 15320., 16760.,  9908., 10692., 11476., 12260.,  1080.,  2776.,  4472.,  6168.,  7864.,  9560., 11256., 12952., 14648., 16344., 18040., 19736., 11524., 12436., 13348., 14260.,   580.,  1492.,  2404.,  3316.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,  5668.,  6324.,  6980.,  7636., 18200., 19640., 21080., 22520.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,  6772.,  7556.,  8340.,  9124., 21432., 23128., 24824., 26520.,  1080.,  2776.,  4472.,  6168.,  7864.,  9560., 11256., 12952.,  7876.,  8788.,  9700., 10612., 11524., 12436., 13348., 14260.,  8292.,  8948.,  9604., 10260.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012., 12440., 13880., 15320., 16760., 18200., 19640., 21080., 22520.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988., 14648., 16344., 18040., 19736., 21432., 23128., 24824., 26520.,  1080.,  2776.,  4472.,  6168.,  4228.,  5140.,  6052.,  6964.,  7876.,  8788.,  9700., 10612.,  3662.,  4086.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,  7876.,  8788.,  9700., 10612., 11524., 12436., 13348., 14260.,   310.,   798.,  1286.,  1774.,  4820.,  5860.,  6900.,  7940.,  8980., 10020., 11060., 12100., 13140., 14180., 15220., 16260.,   350.,   902.,  1454.,  2006.,  2558.,  3110.,  3662.,  4214.,  1966.,  2390.,  2814.,  3238.,  3662.,  4086.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,  7876.,  8788.,  9700., 10612.,  6166.,  6654.,  7142.,  7630.,   660.,  1700.,  2740.,  3780.,  4820.,  5860.,  6900.,  7940.,  8980., 10020., 11060., 12100.,  6974.,  7526.,  8078.,  8630.,   350.,   902.,  1454.,  2006.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x12x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   350.,   390.,   430.,   470.,   510.,   550.,   590.,   630.,   740.,   884.,  1028.,  1172.,  1316.,  1460.,  1604.,  1748.,  1892.,  2036.,  2180.,  2324.,  1318.,  1422.,  1526.,  1630.,  1734.,  1838.,  1942.,  2046.,  2150.,  2254.,  2358.,  2462.,  2566.,  2670.,  2774.,  2878.,     0.,     0.,     0.,     0.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  1470.,  1510.,  1550.,  1590.,  1630.,  1670.,  1710.,  1750.,  4772.,  4916.,  5060.,  5204.,  5348.,  5492.,  5636.,  5780.,  5924.,  6068.,  6212.,  6356.,  4230.,  4334.,  4438.,  4542.,  4646.,  4750.,  4854.,  4958.,  5062.,  5166.,  5270.,  5374.,  5478.,  5582.,  5686.,  5790.,     0.,     0.,     0.,     0.,  2270.,  2310.,  2350.,  2390.,  2430.,  2470.,  2510.,  2550.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,  6244.,  6388.,  6532.,  6676.,  6820.,  6964.,  7108.,  7252.,   740.,   884.,  1028.,  1172.,   486.,   590.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,  1526.,  1630.,  1734.,  1838.,  1942.,  2046.,     0.,     0.,     0.,     0.,   830.,   870.,   910.,   950.,   990.,  1030.,  1070.,  1110.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  3620.,  3764.,  3908.,  4052.,  4196.,  4340.,  4484.,  4628.,  4772.,  4916.,  5060.,  5204.,  3398.,  3502.,  3606.,  3710.,  3814.,  3918.,  4022.,  4126.,  4230.,  4334.,  4438.,  4542.,  4646.,  4750.,  4854.,  4958.,     0.,     0.,     0.,     0.,  2060.,  2268.,  2476.,  2684.,  2892.,  3100.,  3308.,  3516.,  3724.,  3932.,  4140.,  4348.,  4556.,  4764.,  4972.,  5180.,  8040.,  8584.,  9128.,  9672., 10216., 10760., 11304., 11848., 12392., 12936., 13480., 14024.,  9244.,  9580.,  9916., 10252.,  3932.,  4268.,  4604.,  4940.,  5276.,  5612.,  5948.,  6284.,  6620.,  6956.,  7292.,  7628.,     0.,     0.,     0.,     0.,  5324.,  5532.,  5740.,  5948.,  6156.,  6364.,  6572.,  6780.,  6988.,  7196.,  7404.,  7612.,  7820.,  8028.,  8236.,  8444., 16616., 17160., 17704., 18248., 18792., 19336., 19880., 20424., 20968., 21512., 22056., 22600., 11996., 12332., 12668., 13004., 13340., 13676., 14012., 14348., 14684., 15020., 15356., 15692., 16028., 16364., 16700., 17036.,     0.,     0.,     0.,     0., 11148., 11356., 11564., 11772., 11980., 12188., 12396., 12604.,  2060.,  2268.,  2476.,  2684.,  2892.,  3100.,  3308.,  3516., 21096., 21640., 22184., 22728., 23272., 23816., 24360., 24904.,  8040.,  8584.,  9128.,  9672.,  6556.,  6892.,  7228.,  7564.,  7900.,  8236.,  8572.,  8908.,  9244.,  9580.,  9916., 10252.,  3932.,  4268.,  4604.,  4940.,     0.,     0.,     0.,     0.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  4814.,  4982.,  5150.,  5318.,  5486.,  5654.,  5822.,  5990., 10948., 11348., 11748., 12148., 12548., 12948., 13348., 13748., 14148., 14548., 14948., 15348.,  7574.,  7806.,  8038.,  8270.,  8502.,  8734.,  8966.,  9198.,  9430.,  9662.,  9894., 10126., 10358., 10590., 10822., 11054.,     0.,     0.,     0.,     0.,  8174.,  8342.,  8510.,  8678.,  8846.,  9014.,  9182.,  9350.,  9518.,  9686.,  9854., 10022., 10190., 10358., 10526., 10694., 11396., 11796., 12196., 12596., 12996., 13396., 13796., 14196., 14596., 14996., 15396., 15796., 14070., 14302., 14534., 14766.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,  2006.,  2238.,  2470.,  2702.,     0.,     0.,     0.,     0.,  2126.,  2294.,  2462.,  2630.,  2798.,  2966.,  3134.,  3302.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  7748.,  8148.,  8548.,  8948.,  9348.,  9748., 10148., 10548., 10948., 11348., 11748., 12148.,  5718.,  5950.,  6182.,  6414.,  6646.,  6878.,  7110.,  7342.,  7574.,  7806.,  8038.,  8270.,  8502.,  8734.,  8966.,  9198.,     0.,     0.,     0.,     0.,  6830.,  6998.,  7166.,  7334.,  7502.,  7670.,  7838.,  8006.,  8174.,  8342.,  8510.,  8678.,  8846.,  9014.,  9182.,  9350., 18948., 19348., 19748., 20148., 20548., 20948., 21348., 21748., 11396., 11796., 12196., 12596., 12214., 12446., 12678., 12910., 13142., 13374., 13606., 13838., 14070., 14302., 14534., 14766.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 12, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x14x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  10.,   11.,   28.,   31.,   34.,   22.,   48.,   53.,   58.,   33.,   68.,   75.,   82.,   44.,   17.,   18.,   49.,   52.,   55.,   36.,   83.,   88.,   93.,   54.,  117.,  124.,  131.,   72.,   24.,   25.,   70.,   73.,   76.,   50.,  118.,  123.,  128.,   75.,  166.,  173.,  180.,  100.,   46.,   52.,  122.,  136.,  150.,   88.,  190.,  208.,  226.,  124.,  258.,  280.,  302.,  160.,   88.,   94.,  220.,  234.,  248.,  144.,  316.,  334.,  352.,  194.,  412.,  434.,  456.,  244.,  130.,  136.,  318.,  332.,  346.,  200.,  442.,  460.,  478.,  264.,  566.,  588.,  610.,  328.,  120.,  125.,  262.,  273.,  284.,  150.,  310.,  323.,  336.,  175.,  358.,  373.,  388.,  200.,  182.,  196.,  394.,  424.,  454.,  232.,  462.,  496.,  530.,  268.,  530.,  568.,  606.,  304.,  280.,  294.,  604.,  634.,  664.,  344.,  700.,  734.,  768.,  394.,  796.,  834.,  872.,  444.,  378.,  392.,  814.,  844.,  874.,  456.,  938.,  972., 1006.,  520., 1062., 1100., 1138.,  584.,  216.,  225.,  454.,  473.,  492.,  250.,  502.,  523.,  544.,  275.,  550.,  573.,  596.,  300.,  279.,  288.,  587.,  606.,  625.,  320.,  649.,  670.,  691.,  352.,  711.,  734.,  757.,  384.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x14x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  1.,   2.,   3.,   4.,   7.,  10.,  13.,   8.,  10.,  12.,  14.,   0.,   0.,   0.,   8.,   9.,  10.,  11.,  28.,  31.,  34.,  22.,  24.,  26.,  28.,   0.,   0.,   0.,  15.,  16.,  17.,  18.,  49.,  52.,  55.,  36.,  38.,  40.,  42.,   0.,   0.,   0.,  22.,  23.,  24.,  25.,  70.,  73.,  76.,  50.,  52.,  54.,  56.,   0.,   0.,   0.,  32.,  36.,  40.,  44., 110., 120., 130.,  80.,  86.,  92.,  98.,   0.,   0.,   0.,  60.,  64.,  68.,  72., 180., 190., 200., 122., 128., 134., 140.,   0.,   0.,   0.,  88.,  92.,  96., 100., 250., 260., 270., 164., 170., 176., 182.,   0.,   0.,   0.,  66.,  69.,  72.,  75., 166., 173., 180., 100., 104., 108., 112.,   0.,   0.,   0.,  87.,  90.,  93.,  96., 215., 222., 229., 128., 132., 136., 140.,   0.,   0.,   0., 108., 111., 114., 117., 264., 271., 278., 156., 160., 164., 168.,   0.,   0.,   0., 129., 132., 135., 138., 313., 320., 327., 184., 188., 192., 196.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x14x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  59.,   65.,  180.,  200.,  220.,  151.,  336.,  372.,  408.,  237.,  492.,  544.,  596.,  323.,  101.,  107.,  320.,  340.,  360.,  249.,  588.,  624.,  660.,  391.,  856.,  908.,  960.,  533.,  143.,  149.,  460.,  480.,  500.,  347.,  840.,  876.,  912.,  545., 1220., 1272., 1324.,  743.,  290.,  334.,  816.,  920., 1024.,  618., 1352., 1488., 1624.,  902., 1888., 2056., 2224., 1186.,  598.,  642., 1544., 1648., 1752., 1038., 2304., 2440., 2576., 1434., 3064., 3232., 3400., 1830.,  906.,  950., 2272., 2376., 2480., 1458., 3256., 3392., 3528., 1966., 4240., 4408., 4576., 2474.,  903.,  941., 1980., 2064., 2148., 1139., 2360., 2460., 2560., 1337., 2740., 2856., 2972., 1535., 1362., 1470., 2960., 3192., 3424., 1754., 3496., 3760., 4024., 2038., 4032., 4328., 4624., 2322., 2118., 2226., 4584., 4816., 5048., 2622., 5344., 5608., 5872., 3018., 6104., 6400., 6696., 3414., 2874., 2982., 6208., 6440., 6672., 3490., 7192., 7456., 7720., 3998., 8176., 8472., 8768., 4506., 1663., 1733., 3500., 3648., 3796., 1931., 3880., 4044., 4208., 2129., 4260., 4440., 4620., 2327., 2153., 2223., 4536., 4684., 4832., 2477., 5028., 5192., 5356., 2731., 5520., 5700., 5880., 2985.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x14x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   40.,   60.,   80.,   53.,   67.,   81.,   95.,    0.,    0.,    0.,   47.,   53.,   59.,   65.,  180.,  200.,  220.,  151.,  165.,  179.,  193.,    0.,    0.,    0.,   89.,   95.,  101.,  107.,  320.,  340.,  360.,  249.,  263.,  277.,  291.,    0.,    0.,    0.,  131.,  137.,  143.,  149.,  460.,  480.,  500.,  347.,  361.,  375.,  389.,    0.,    0.,    0.,  190.,  218.,  246.,  274.,  728.,  800.,  872.,  558.,  602.,  646.,  690.,    0.,    0.,    0.,  386.,  414.,  442.,  470., 1232., 1304., 1376.,  866.,  910.,  954.,  998.,    0.,    0.,    0.,  582.,  610.,  638.,  666., 1736., 1808., 1880., 1174., 1218., 1262., 1306.,    0.,    0.,    0.,  479.,  501.,  523.,  545., 1220., 1272., 1324.,  743.,  773.,  803.,  833.,    0.,    0.,    0.,  633.,  655.,  677.,  699., 1584., 1636., 1688.,  953.,  983., 1013., 1043.,    0.,    0.,    0.,  787.,  809.,  831.,  853., 1948., 2000., 2052., 1163., 1193., 1223., 1253.,    0.,    0.,    0.,  941.,  963.,  985., 1007., 2312., 2364., 2416., 1373., 1403., 1433., 1463.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x14x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  390.,   430.,  1268.,  1412.,  1556.,  1110.,  2500.,  2772.,  3044.,  1790.,  3732.,  4132.,  4532.,  2470.,    30.,    70.,  1636.,  1780.,   260.,   174.,  2740.,  3012.,   596.,   278.,  3844.,  4244.,   932.,   382.,   310.,   350.,   980.,  1124.,  1268.,   902.,  1956.,  2228.,  2500.,  1454.,  2932.,  3332.,  3732.,  2006.,  1372.,  1708.,  2952.,  3752.,  4552.,  2940.,  4136.,  5192.,  6248.,  4172.,  5320.,  6632.,  7944.,  5404.,  3084.,  3420.,  6888.,  7688.,  8488.,  4524.,  8840.,  9896., 10952.,  5628., 10792., 12104., 13416.,  6732.,   700.,  1036.,  7752.,  8552.,  2952.,  2012., 10472., 11528.,  4136.,  2988., 13192., 14504.,  5320.,  3964.,  2262.,  2558.,  4884.,  5540.,  6196.,  3110.,  5860.,  6644.,  7428.,  3662.,  6836.,  7748.,  8660.,  4214.,  5788.,  6636.,  7688.,  9512., 11336.,  7868.,  8872., 10952., 13032.,  9100., 10056., 12392., 14728., 10332.,  6988.,  7836., 14696., 16520., 18344.,  8940., 16648., 18728., 20808., 10044., 18600., 20936., 23272., 11148.,  4092.,  4940., 18632., 20456.,  7688.,  5916., 21352., 23432.,  8872.,  6892., 24072., 26408., 10056.,  7868.,  4214.,  4766.,  8788.,  9956., 11124.,  5318.,  9764., 11060., 12356.,  5870., 10740., 12164., 13588.,  6422.,  8078.,  8630.,  8132.,  9300., 10468.,  9630.,  8980., 10276., 11572., 10630.,  9828., 11252., 12676., 11630.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x14x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   260.,   404.,   548.,   382.,   486.,   590.,   694.,     0.,     0.,     0.,   310.,   350.,   390.,   430.,  1268.,  1412.,  1556.,  1110.,  1214.,  1318.,  1422.,     0.,     0.,     0.,   590.,   630.,   670.,   710.,  2276.,  2420.,  2564.,  1838.,  1942.,  2046.,  2150.,     0.,     0.,     0.,   870.,   910.,   950.,   990.,  3284.,  3428.,  3572.,  2566.,  2670.,  2774.,  2878.,     0.,     0.,     0.,  1260.,  1468.,  1676.,  1884.,  5224.,  5768.,  6312.,  4140.,  4476.,  4812.,  5148.,     0.,     0.,     0.,  2716.,  2924.,  3132.,  3340.,  9032.,  9576., 10120.,  6492.,  6828.,  7164.,  7500.,     0.,     0.,     0.,  4172.,  4380.,  4588.,  4796., 12840., 13384., 13928.,  8844.,  9180.,  9516.,  9852.,     0.,     0.,     0.,  3638.,  3806.,  3974.,  4142.,  9332.,  9732., 10132.,  5718.,  5950.,  6182.,  6414.,     0.,     0.,     0.,  4814.,  4982.,  5150.,  5318., 12132., 12532., 12932.,  7342.,  7574.,  7806.,  8038.,     0.,     0.,     0.,  5990.,  6158.,  6326.,  6494., 14932., 15332., 15732.,  8966.,  9198.,  9430.,  9662.,     0.,     0.,     0.,  7166.,  7334.,  7502.,  7670., 17732., 18132., 18532., 10590., 10822., 11054., 11286.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x14x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  19.,   20.,   21.,   22.,   53.,   56.,   59.,   62.,   65.,   68.,   42.,   44.,   91.,   96.,  101.,  106.,  111.,  116.,   63.,   66.,  129.,  136.,  143.,  150.,  157.,  164.,   84.,   88.,   33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,  161.,  166.,  171.,  176.,  181.,  186.,  105.,  108.,  227.,  234.,  241.,  248.,  255.,  262.,  140.,  144.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  231.,  236.,  241.,  246.,  251.,  256.,  147.,  150.,  325.,  332.,  339.,  346.,  353.,  360.,  196.,  200.,   86.,   92.,   98.,  104.,  230.,  244.,  258.,  272.,  286.,  300.,  168.,  176.,  362.,  380.,  398.,  416.,  434.,  452.,  238.,  248.,  494.,  516.,  538.,  560.,  582.,  604.,  308.,  320.,  170.,  176.,  182.,  188.,  426.,  440.,  454.,  468.,  482.,  496.,  280.,  288.,  614.,  632.,  650.,  668.,  686.,  704.,  378.,  388.,  802.,  824.,  846.,  868.,  890.,  912.,  476.,  488.,  254.,  260.,  266.,  272.,  622.,  636.,  650.,  664.,  678.,  692.,  392.,  400.,  866.,  884.,  902.,  920.,  938.,  956.,  518.,  528., 1110., 1132., 1154., 1176., 1198., 1220.,  644.,  656.,  235.,  240.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  607.,  620.,  633.,  646.,  659.,  672.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  350.,  364.,  378.,  392.,  758.,  788.,  818.,  848.,  878.,  908.,  448.,  464.,  890.,  924.,  958.,  992., 1026., 1060.,  518.,  536., 1022., 1060., 1098., 1136., 1174., 1212.,  588.,  608.,  546.,  560.,  574.,  588., 1178., 1208., 1238., 1268., 1298., 1328.,  672.,  688., 1366., 1400., 1434., 1468., 1502., 1536.,  770.,  788., 1554., 1592., 1630., 1668., 1706., 1744.,  868.,  888.,  742.,  756.,  770.,  784., 1598., 1628., 1658., 1688., 1718., 1748.,  896.,  912., 1842., 1876., 1910., 1944., 1978., 2012., 1022., 1040., 2086., 2124., 2162., 2200., 2238., 2276., 1148., 1168.,  423.,  432.,  441.,  450.,  889.,  908.,  927.,  946.,  965.,  984.,  490.,  500.,  983., 1004., 1025., 1046., 1067., 1088.,  539.,  550., 1077., 1100., 1123., 1146., 1169., 1192.,  588.,  600.,  549.,  558.,  567.,  576., 1155., 1174., 1193., 1212., 1231., 1250.,  630.,  640., 1277., 1298., 1319., 1340., 1361., 1382.,  693.,  704., 1399., 1422., 1445., 1468., 1491., 1514.,  756.,  768.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x14x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,  11.,  14.,  17.,  20.,  23.,  26.,  14.,  16.,  18.,  20.,  22.,  24.,  26.,  28.,   0.,   0.,   0.,   0.,   0.,   0.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  53.,  56.,  59.,  62.,  65.,  68.,  42.,  44.,  46.,  48.,  50.,  52.,  54.,  56.,   0.,   0.,   0.,   0.,   0.,   0.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,  95.,  98., 101., 104., 107., 110.,  70.,  72.,  74.,  76.,  78.,  80.,  82.,  84.,   0.,   0.,   0.,   0.,   0.,   0.,  43.,  44.,  45.,  46.,  47.,  48.,  49.,  50., 137., 140., 143., 146., 149., 152.,  98., 100., 102., 104., 106., 108., 110., 112.,   0.,   0.,   0.,   0.,   0.,   0.,  60.,  64.,  68.,  72.,  76.,  80.,  84.,  88., 210., 220., 230., 240., 250., 260., 154., 160., 166., 172., 178., 184., 190., 196.,   0.,   0.,   0.,   0.,   0.,   0., 116., 120., 124., 128., 132., 136., 140., 144., 350., 360., 370., 380., 390., 400., 238., 244., 250., 256., 262., 268., 274., 280.,   0.,   0.,   0.,   0.,   0.,   0., 172., 176., 180., 184., 188., 192., 196., 200., 490., 500., 510., 520., 530., 540., 322., 328., 334., 340., 346., 352., 358., 364.,   0.,   0.,   0.,   0.,   0.,   0., 129., 132., 135., 138., 141., 144., 147., 150., 325., 332., 339., 346., 353., 360., 196., 200., 204., 208., 212., 216., 220., 224.,   0.,   0.,   0.,   0.,   0.,   0., 171., 174., 177., 180., 183., 186., 189., 192., 423., 430., 437., 444., 451., 458., 252., 256., 260., 264., 268., 272., 276., 280.,   0.,   0.,   0.,   0.,   0.,   0., 213., 216., 219., 222., 225., 228., 231., 234., 521., 528., 535., 542., 549., 556., 308., 312., 316., 320., 324., 328., 332., 336.,   0.,   0.,   0.,   0.,   0.,   0., 255., 258., 261., 264., 267., 270., 273., 276., 619., 626., 633., 640., 647., 654., 364., 368., 372., 376., 380., 384., 388., 392.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x14x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  113.,   119.,   125.,   131.,   344.,   364.,   384.,   404.,   424.,   444.,   291.,   305.,   644.,   680.,   716.,   752.,   788.,   824.,   457.,   479.,   944.,   996.,  1048.,  1100.,  1152.,  1204.,   623.,   653.,   197.,   203.,   209.,   215.,   624.,   644.,   664.,   684.,   704.,   724.,   487.,   501.,  1148.,  1184.,  1220.,  1256.,  1292.,  1328.,   765.,   787.,  1672.,  1724.,  1776.,  1828.,  1880.,  1932.,  1043.,  1073.,   281.,   287.,   293.,   299.,   904.,   924.,   944.,   964.,   984.,  1004.,   683.,   697.,  1652.,  1688.,  1724.,  1760.,  1796.,  1832.,  1073.,  1095.,  2400.,  2452.,  2504.,  2556.,  2608.,  2660.,  1463.,  1493.,   546.,   590.,   634.,   678.,  1552.,  1656.,  1760.,  1864.,  1968.,  2072.,  1190.,  1250.,  2600.,  2736.,  2872.,  3008.,  3144.,  3280.,  1746.,  1822.,  3648.,  3816.,  3984.,  4152.,  4320.,  4488.,  2302.,  2394.,  1162.,  1206.,  1250.,  1294.,  3008.,  3112.,  3216.,  3320.,  3424.,  3528.,  2030.,  2090.,  4504.,  4640.,  4776.,  4912.,  5048.,  5184.,  2810.,  2886.,  6000.,  6168.,  6336.,  6504.,  6672.,  6840.,  3590.,  3682.,  1778.,  1822.,  1866.,  1910.,  4464.,  4568.,  4672.,  4776.,  4880.,  4984.,  2870.,  2930.,  6408.,  6544.,  6680.,  6816.,  6952.,  7088.,  3874.,  3950.,  8352.,  8520.,  8688.,  8856.,  9024.,  9192.,  4878.,  4970.,  1777.,  1815.,  1853.,  1891.,  3896.,  3980.,  4064.,  4148.,  4232.,  4316.,  2243.,  2289.,  4644.,  4744.,  4844.,  4944.,  5044.,  5144.,  2633.,  2687.,  5392.,  5508.,  5624.,  5740.,  5856.,  5972.,  3023.,  3085.,  2642.,  2750.,  2858.,  2966.,  5744.,  5976.,  6208.,  6440.,  6672.,  6904.,  3414.,  3538.,  6792.,  7056.,  7320.,  7584.,  7848.,  8112.,  3970.,  4110.,  7840.,  8136.,  8432.,  8728.,  9024.,  9320.,  4526.,  4682.,  4154.,  4262.,  4370.,  4478.,  8992.,  9224.,  9456.,  9688.,  9920., 10152.,  5150.,  5274., 10488., 10752., 11016., 11280., 11544., 11808.,  5930.,  6070., 11984., 12280., 12576., 12872., 13168., 13464.,  6710.,  6866.,  5666.,  5774.,  5882.,  5990., 12240., 12472., 12704., 12936., 13168., 13400.,  6886.,  7010., 14184., 14448., 14712., 14976., 15240., 15504.,  7890.,  8030., 16128., 16424., 16720., 17016., 17312., 17608.,  8894.,  9050.,  3273.,  3343.,  3413.,  3483.,  6888.,  7036.,  7184.,  7332.,  7480.,  7628.,  3803.,  3881.,  7636.,  7800.,  7964.,  8128.,  8292.,  8456.,  4193.,  4279.,  8384.,  8564.,  8744.,  8924.,  9104.,  9284.,  4583.,  4677.,  4253.,  4323.,  4393.,  4463.,  8960.,  9108.,  9256.,  9404.,  9552.,  9700.,  4895.,  4973.,  9932., 10096., 10260., 10424., 10588., 10752.,  5397.,  5483., 10904., 11084., 11264., 11444., 11624., 11804.,  5899.,  5993.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x14x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   29.,   35.,   41.,   47.,   64.,   84.,  104.,  124.,  144.,  164.,   95.,  109.,  123.,  137.,  151.,  165.,  179.,  193.,    0.,    0.,    0.,    0.,    0.,    0.,   89.,   95.,  101.,  107.,  113.,  119.,  125.,  131.,  344.,  364.,  384.,  404.,  424.,  444.,  291.,  305.,  319.,  333.,  347.,  361.,  375.,  389.,    0.,    0.,    0.,    0.,    0.,    0.,  173.,  179.,  185.,  191.,  197.,  203.,  209.,  215.,  624.,  644.,  664.,  684.,  704.,  724.,  487.,  501.,  515.,  529.,  543.,  557.,  571.,  585.,    0.,    0.,    0.,    0.,    0.,    0.,  257.,  263.,  269.,  275.,  281.,  287.,  293.,  299.,  904.,  924.,  944.,  964.,  984., 1004.,  683.,  697.,  711.,  725.,  739.,  753.,  767.,  781.,    0.,    0.,    0.,    0.,    0.,    0.,  358.,  386.,  414.,  442.,  470.,  498.,  526.,  554., 1400., 1472., 1544., 1616., 1688., 1760., 1082., 1126., 1170., 1214., 1258., 1302., 1346., 1390.,    0.,    0.,    0.,    0.,    0.,    0.,  750.,  778.,  806.,  834.,  862.,  890.,  918.,  946., 2408., 2480., 2552., 2624., 2696., 2768., 1698., 1742., 1786., 1830., 1874., 1918., 1962., 2006.,    0.,    0.,    0.,    0.,    0.,    0., 1142., 1170., 1198., 1226., 1254., 1282., 1310., 1338., 3416., 3488., 3560., 3632., 3704., 3776., 2314., 2358., 2402., 2446., 2490., 2534., 2578., 2622.,    0.,    0.,    0.,    0.,    0.,    0.,  941.,  963.,  985., 1007., 1029., 1051., 1073., 1095., 2400., 2452., 2504., 2556., 2608., 2660., 1463., 1493., 1523., 1553., 1583., 1613., 1643., 1673.,    0.,    0.,    0.,    0.,    0.,    0., 1249., 1271., 1293., 1315., 1337., 1359., 1381., 1403., 3128., 3180., 3232., 3284., 3336., 3388., 1883., 1913., 1943., 1973., 2003., 2033., 2063., 2093.,    0.,    0.,    0.,    0.,    0.,    0., 1557., 1579., 1601., 1623., 1645., 1667., 1689., 1711., 3856., 3908., 3960., 4012., 4064., 4116., 2303., 2333., 2363., 2393., 2423., 2453., 2483., 2513.,    0.,    0.,    0.,    0.,    0.,    0., 1865., 1887., 1909., 1931., 1953., 1975., 1997., 2019., 4584., 4636., 4688., 4740., 4792., 4844., 2723., 2753., 2783., 2813., 2843., 2873., 2903., 2933.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x14x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  110.,   150.,   190.,   230.,  1796.,  1940.,   420.,   564.,   708.,   852.,   486.,   590.,  3156.,  3428.,  1012.,  1284.,  1556.,  1828.,   782.,   950.,  4516.,  4916.,  1604.,  2004.,  2404.,  2804.,  1078.,  1310.,    30.,    70.,   110.,   150.,  1508.,  1652.,  1796.,  1940.,   420.,   564.,   278.,   382.,  2612.,  2884.,  3156.,  3428.,  1012.,  1284.,   446.,   614.,  3716.,  4116.,  4516.,  4916.,  1604.,  2004.,   614.,   846.,   590.,   630.,    30.,    70.,  1220.,  1364.,  1508.,  1652.,  1796.,  1940.,    70.,   174.,  2068.,  2340.,  2612.,  2884.,  3156.,  3428.,   110.,   278.,  2916.,  3316.,  3716.,  4116.,  4516.,  4916.,   150.,   382.,  1884.,  2220.,  2556.,  2892.,  3720.,  4520.,  5320.,  6120.,  6920.,  7720.,  3916.,  4380.,  4904.,  5960.,  7016.,  8072.,  9128., 10184.,  5276.,  5868.,  6088.,  7400.,  8712., 10024., 11336., 12648.,  6636.,  7356.,  1212.,  1548.,  1884.,  2220.,  8520.,  9320.,  3720.,  4520.,  5320.,  6120.,  2988.,  3452., 11240., 12296.,  4904.,  5960.,  7016.,  8072.,  4092.,  4684., 13960., 15272.,  6088.,  7400.,  8712., 10024.,  5196.,  5916.,   540.,   876.,  1212.,  1548.,  6920.,  7720.,  8520.,  9320.,  3720.,  4520.,  2060.,  2524.,  9128., 10184., 11240., 12296.,  4904.,  5960.,  2908.,  3500., 11336., 12648., 13960., 15272.,  6088.,  7400.,  3756.,  4476.,  4334.,  4630.,   190.,   486.,  4612.,  5268.,  5924.,  6580.,  7236.,  7892.,   230.,   590.,  5460.,  6244.,  7028.,  7812.,  8596.,  9380.,   270.,   694.,  6308.,  7220.,  8132.,  9044.,  9956., 10868.,   310.,   798.,  6300.,  7148.,  7996.,  8844.,  8456., 10280., 12104., 13928., 15752., 17576.,  9356., 10332.,  9640., 11720., 13800., 15880., 17960., 20040., 10716., 11820., 10824., 13160., 15496., 17832., 20168., 22504., 12076., 13308.,  4604.,  5452.,  6300.,  7148., 19400., 21224.,  8456., 10280., 12104., 13928.,  7404.,  8380., 22120., 24200.,  9640., 11720., 13800., 15880.,  8508.,  9612., 24840., 27176., 10824., 13160., 15496., 17832.,  9612., 10844.,  2908.,  3756.,  4604.,  5452., 15752., 17576., 19400., 21224.,  8456., 10280.,  5452.,  6428., 17960., 20040., 22120., 24200.,  9640., 11720.,  6300.,  7404., 20168., 22504., 24840., 27176., 10824., 13160.,  7148.,  8380.,  8078.,  8630.,   350.,   902.,  8004.,  9172., 10340., 11508., 12676., 13844.,   390.,  1006.,  8852., 10148., 11444., 12740., 14036., 15332.,   430.,  1110.,  9700., 11124., 12548., 13972., 15396., 16820.,   470.,  1214.,  6974.,  7526.,  8078.,  8630.,  5668.,  6836.,  8004.,  9172., 10340., 11508.,  9014.,  9630.,  6260.,  7556.,  8852., 10148., 11444., 12740.,  9950., 10630.,  6852.,  8276.,  9700., 11124., 12548., 13972., 10886., 11630.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x14x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   420.,   564.,   708.,   852.,   996.,  1140.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,     0.,     0.,     0.,     0.,     0.,     0.,   590.,   630.,   670.,   710.,   750.,   790.,   830.,   870.,  2436.,  2580.,  2724.,  2868.,  3012.,  3156.,  2150.,  2254.,  2358.,  2462.,  2566.,  2670.,  2774.,  2878.,     0.,     0.,     0.,     0.,     0.,     0.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  4452.,  4596.,  4740.,  4884.,  5028.,  5172.,  3606.,  3710.,  3814.,  3918.,  4022.,  4126.,  4230.,  4334.,     0.,     0.,     0.,     0.,     0.,     0.,  1710.,  1750.,  1790.,  1830.,  1870.,  1910.,  1950.,  1990.,  6468.,  6612.,  6756.,  6900.,  7044.,  7188.,  5062.,  5166.,  5270.,  5374.,  5478.,  5582.,  5686.,  5790.,     0.,     0.,     0.,     0.,     0.,     0.,  2380.,  2588.,  2796.,  3004.,  3212.,  3420.,  3628.,  3836.,  7528.,  8072.,  8616.,  9160.,  9704., 10248.,  8060.,  8396.,  2076.,  2412.,  2748.,  3084.,  3420.,  3756.,     0.,     0.,     0.,     0.,     0.,     0.,  2732.,  2940.,  3148.,  3356.,  3564.,  3772.,  3980.,  4188.,  8488.,  9032.,  9576., 10120., 10664., 11208.,  6108.,  6444.,  6780.,  7116.,  7452.,  7788.,  8124.,  8460.,     0.,     0.,     0.,     0.,     0.,     0.,  5644.,  5852.,  6060.,  6268.,  6476.,  6684.,  6892.,  7100., 16104., 16648., 17192., 17736., 18280., 18824., 10812., 11148., 11484., 11820., 12156., 12492., 12828., 13164.,     0.,     0.,     0.,     0.,     0.,     0.,  7166.,  7334.,  7502.,  7670.,  7838.,  8006.,  8174.,  8342., 18404., 18804., 19204., 19604., 20004., 20404., 11286., 11518., 11750., 11982., 12214., 12446., 12678., 12910.,     0.,     0.,     0.,     0.,     0.,     0.,  9518.,  9686.,  9854., 10022., 10190., 10358., 10526., 10694., 13252., 13652., 14052., 14452., 14852., 15252., 14534., 14766.,   150.,   382.,   614.,   846.,  1078.,  1310.,     0.,     0.,     0.,     0.,     0.,     0.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  4004.,  4404.,  4804.,  5204.,  5604.,  6004.,  2934.,  3166.,  3398.,  3630.,  3862.,  4094.,  4326.,  4558.,     0.,     0.,     0.,     0.,     0.,     0.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  9604., 10004., 10404., 10804., 11204., 11604.,  6182.,  6414.,  6646.,  6878.,  7110.,  7342.,  7574.,  7806.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x14x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,  103.,  106.,  109.,  112.,  115.,  118.,  121.,  124.,  127.,  130.,  133.,  136.,   82.,   84.,   86.,   88.,  177.,  182.,  187.,  192.,  197.,  202.,  207.,  212.,  217.,  222.,  227.,  232.,  123.,  126.,  129.,  132.,  251.,  258.,  265.,  272.,  279.,  286.,  293.,  300.,  307.,  314.,  321.,  328.,  164.,  168.,  172.,  176.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  317.,  322.,  327.,  332.,  337.,  342.,  347.,  352.,  357.,  362.,  367.,  372.,  207.,  210.,  213.,  216.,  447.,  454.,  461.,  468.,  475.,  482.,  489.,  496.,  503.,  510.,  517.,  524.,  276.,  280.,  284.,  288.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  457.,  462.,  467.,  472.,  477.,  482.,  487.,  492.,  497.,  502.,  507.,  512.,  291.,  294.,  297.,  300.,  643.,  650.,  657.,  664.,  671.,  678.,  685.,  692.,  699.,  706.,  713.,  720.,  388.,  392.,  396.,  400.,  166.,  172.,  178.,  184.,  190.,  196.,  202.,  208.,  446.,  460.,  474.,  488.,  502.,  516.,  530.,  544.,  558.,  572.,  586.,  600.,  328.,  336.,  344.,  352.,  706.,  724.,  742.,  760.,  778.,  796.,  814.,  832.,  850.,  868.,  886.,  904.,  466.,  476.,  486.,  496.,  966.,  988., 1010., 1032., 1054., 1076., 1098., 1120., 1142., 1164., 1186., 1208.,  604.,  616.,  628.,  640.,  334.,  340.,  346.,  352.,  358.,  364.,  370.,  376.,  838.,  852.,  866.,  880.,  894.,  908.,  922.,  936.,  950.,  964.,  978.,  992.,  552.,  560.,  568.,  576., 1210., 1228., 1246., 1264., 1282., 1300., 1318., 1336., 1354., 1372., 1390., 1408.,  746.,  756.,  766.,  776., 1582., 1604., 1626., 1648., 1670., 1692., 1714., 1736., 1758., 1780., 1802., 1824.,  940.,  952.,  964.,  976.,  502.,  508.,  514.,  520.,  526.,  532.,  538.,  544., 1230., 1244., 1258., 1272., 1286., 1300., 1314., 1328., 1342., 1356., 1370., 1384.,  776.,  784.,  792.,  800., 1714., 1732., 1750., 1768., 1786., 1804., 1822., 1840., 1858., 1876., 1894., 1912., 1026., 1036., 1046., 1056., 2198., 2220., 2242., 2264., 2286., 2308., 2330., 2352., 2374., 2396., 2418., 2440., 1276., 1288., 1300., 1312.,  465.,  470.,  475.,  480.,  485.,  490.,  495.,  500., 1015., 1026., 1037., 1048., 1059., 1070., 1081., 1092., 1103., 1114., 1125., 1136.,  582.,  588.,  594.,  600., 1201., 1214., 1227., 1240., 1253., 1266., 1279., 1292., 1305., 1318., 1331., 1344.,  679.,  686.,  693.,  700., 1387., 1402., 1417., 1432., 1447., 1462., 1477., 1492., 1507., 1522., 1537., 1552.,  776.,  784.,  792.,  800.,  686.,  700.,  714.,  728.,  742.,  756.,  770.,  784., 1486., 1516., 1546., 1576., 1606., 1636., 1666., 1696., 1726., 1756., 1786., 1816.,  880.,  896.,  912.,  928., 1746., 1780., 1814., 1848., 1882., 1916., 1950., 1984., 2018., 2052., 2086., 2120., 1018., 1036., 1054., 1072., 2006., 2044., 2082., 2120., 2158., 2196., 2234., 2272., 2310., 2348., 2386., 2424., 1156., 1176., 1196., 1216., 1078., 1092., 1106., 1120., 1134., 1148., 1162., 1176., 2326., 2356., 2386., 2416., 2446., 2476., 2506., 2536., 2566., 2596., 2626., 2656., 1328., 1344., 1360., 1376., 2698., 2732., 2766., 2800., 2834., 2868., 2902., 2936., 2970., 3004., 3038., 3072., 1522., 1540., 1558., 1576., 3070., 3108., 3146., 3184., 3222., 3260., 3298., 3336., 3374., 3412., 3450., 3488., 1716., 1736., 1756., 1776., 1470., 1484., 1498., 1512., 1526., 1540., 1554., 1568., 3166., 3196., 3226., 3256., 3286., 3316., 3346., 3376., 3406., 3436., 3466., 3496., 1776., 1792., 1808., 1824., 3650., 3684., 3718., 3752., 3786., 3820., 3854., 3888., 3922., 3956., 3990., 4024., 2026., 2044., 2062., 2080., 4134., 4172., 4210., 4248., 4286., 4324., 4362., 4400., 4438., 4476., 4514., 4552., 2276., 2296., 2316., 2336.,  837.,  846.,  855.,  864.,  873.,  882.,  891.,  900., 1759., 1778., 1797., 1816., 1835., 1854., 1873., 1892., 1911., 1930., 1949., 1968.,  970.,  980.,  990., 1000., 1945., 1966., 1987., 2008., 2029., 2050., 2071., 2092., 2113., 2134., 2155., 2176., 1067., 1078., 1089., 1100., 2131., 2154., 2177., 2200., 2223., 2246., 2269., 2292., 2315., 2338., 2361., 2384., 1164., 1176., 1188., 1200., 1089., 1098., 1107., 1116., 1125., 1134., 1143., 1152., 2291., 2310., 2329., 2348., 2367., 2386., 2405., 2424., 2443., 2462., 2481., 2500., 1250., 1260., 1270., 1280., 2533., 2554., 2575., 2596., 2617., 2638., 2659., 2680., 2701., 2722., 2743., 2764., 1375., 1386., 1397., 1408., 2775., 2798., 2821., 2844., 2867., 2890., 2913., 2936., 2959., 2982., 3005., 3028., 1500., 1512., 1524., 1536.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x14x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,    9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   19.,   22.,   25.,   28.,   31.,   34.,   37.,   40.,   43.,   46.,   49.,   52.,   26.,   28.,   30.,   32.,   34.,   36.,   38.,   40.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,  103.,  106.,  109.,  112.,  115.,  118.,  121.,  124.,  127.,  130.,  133.,  136.,   82.,   84.,   86.,   88.,   90.,   92.,   94.,   96.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,   57.,   58.,   59.,   60.,   61.,   62.,   63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  146.,  148.,  150.,  152.,  154.,  156.,  158.,  160.,  162.,  164.,  166.,  168.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,   85.,   86.,   87.,   88.,   89.,   90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  202.,  204.,  206.,  208.,  210.,  212.,  214.,  216.,  218.,  220.,  222.,  224.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  148.,  152.,  156.,  160.,  164.,  168.,  172.,  176.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  302.,  308.,  314.,  320.,  326.,  332.,  338.,  344.,  350.,  356.,  362.,  368.,  374.,  380.,  386.,  392.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  228.,  232.,  236.,  240.,  244.,  248.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,  284.,  288.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  470.,  476.,  482.,  488.,  494.,  500.,  506.,  512.,  518.,  524.,  530.,  536.,  542.,  548.,  554.,  560.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  340.,  344.,  348.,  352.,  356.,  360.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,  396.,  400.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080.,  638.,  644.,  650.,  656.,  662.,  668.,  674.,  680.,  686.,  692.,  698.,  704.,  710.,  716.,  722.,  728.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  279.,  282.,  285.,  288.,  291.,  294.,  297.,  300.,  643.,  650.,  657.,  664.,  671.,  678.,  685.,  692.,  699.,  706.,  713.,  720.,  388.,  392.,  396.,  400.,  404.,  408.,  412.,  416.,  420.,  424.,  428.,  432.,  436.,  440.,  444.,  448.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  339.,  342.,  345.,  348.,  351.,  354.,  357.,  360.,  363.,  366.,  369.,  372.,  375.,  378.,  381.,  384.,  839.,  846.,  853.,  860.,  867.,  874.,  881.,  888.,  895.,  902.,  909.,  916.,  500.,  504.,  508.,  512.,  516.,  520.,  524.,  528.,  532.,  536.,  540.,  544.,  548.,  552.,  556.,  560.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  423.,  426.,  429.,  432.,  435.,  438.,  441.,  444.,  447.,  450.,  453.,  456.,  459.,  462.,  465.,  468., 1035., 1042., 1049., 1056., 1063., 1070., 1077., 1084., 1091., 1098., 1105., 1112.,  612.,  616.,  620.,  624.,  628.,  632.,  636.,  640.,  644.,  648.,  652.,  656.,  660.,  664.,  668.,  672.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  507.,  510.,  513.,  516.,  519.,  522.,  525.,  528.,  531.,  534.,  537.,  540.,  543.,  546.,  549.,  552., 1231., 1238., 1245., 1252., 1259., 1266., 1273., 1280., 1287., 1294., 1301., 1308.,  724.,  728.,  732.,  736.,  740.,  744.,  748.,  752.,  756.,  760.,  764.,  768.,  772.,  776.,  780.,  784.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x14x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  221.,   227.,   233.,   239.,   245.,   251.,   257.,   263.,   672.,   692.,   712.,   732.,   752.,   772.,   792.,   812.,   832.,   852.,   872.,   892.,   571.,   585.,   599.,   613.,  1260.,  1296.,  1332.,  1368.,  1404.,  1440.,  1476.,  1512.,  1548.,  1584.,  1620.,  1656.,   897.,   919.,   941.,   963.,  1848.,  1900.,  1952.,  2004.,  2056.,  2108.,  2160.,  2212.,  2264.,  2316.,  2368.,  2420.,  1223.,  1253.,  1283.,  1313.,   389.,   395.,   401.,   407.,   413.,   419.,   425.,   431.,  1232.,  1252.,  1272.,  1292.,  1312.,  1332.,  1352.,  1372.,  1392.,  1412.,  1432.,  1452.,   963.,   977.,   991.,  1005.,  2268.,  2304.,  2340.,  2376.,  2412.,  2448.,  2484.,  2520.,  2556.,  2592.,  2628.,  2664.,  1513.,  1535.,  1557.,  1579.,  3304.,  3356.,  3408.,  3460.,  3512.,  3564.,  3616.,  3668.,  3720.,  3772.,  3824.,  3876.,  2063.,  2093.,  2123.,  2153.,   557.,   563.,   569.,   575.,   581.,   587.,   593.,   599.,  1792.,  1812.,  1832.,  1852.,  1872.,  1892.,  1912.,  1932.,  1952.,  1972.,  1992.,  2012.,  1355.,  1369.,  1383.,  1397.,  3276.,  3312.,  3348.,  3384.,  3420.,  3456.,  3492.,  3528.,  3564.,  3600.,  3636.,  3672.,  2129.,  2151.,  2173.,  2195.,  4760.,  4812.,  4864.,  4916.,  4968.,  5020.,  5072.,  5124.,  5176.,  5228.,  5280.,  5332.,  2903.,  2933.,  2963.,  2993.,  1058.,  1102.,  1146.,  1190.,  1234.,  1278.,  1322.,  1366.,  2256.,  2360.,  2464.,  2568.,  2672.,  2776.,  2880.,  2984.,  3088.,  3192.,  3296.,  3400.,  2334.,  2394.,  2454.,  2514.,  3304.,  3440.,  3576.,  3712.,  3848.,  3984.,  4120.,  4256.,  4392.,  4528.,  4664.,  4800.,  3434.,  3510.,  3586.,  3662.,  4352.,  4520.,  4688.,  4856.,  5024.,  5192.,  5360.,  5528.,  5696.,  5864.,  6032.,  6200.,  4534.,  4626.,  4718.,  4810.,  1522.,  1566.,  1610.,  1654.,  1698.,  1742.,  1786.,  1830.,  3376.,  3480.,  3584.,  3688.,  3792.,  3896.,  4000.,  4104.,  4208.,  4312.,  4416.,  4520.,  2222.,  2282.,  2342.,  2402.,  4296.,  4432.,  4568.,  4704.,  4840.,  4976.,  5112.,  5248.,  5384.,  5520.,  5656.,  5792.,  2746.,  2822.,  2898.,  2974.,  5216.,  5384.,  5552.,  5720.,  5888.,  6056.,  6224.,  6392.,  6560.,  6728.,  6896.,  7064.,  3270.,  3362.,  3454.,  3546.,  2754.,  2798.,  2842.,  2886.,  2930.,  2974.,  3018.,  3062.,  6288.,  6392.,  6496.,  6600.,  6704.,  6808.,  6912.,  7016.,  7120.,  7224.,  7328.,  7432.,  3902.,  3962.,  4022.,  4082.,  8104.,  8240.,  8376.,  8512.,  8648.,  8784.,  8920.,  9056.,  9192.,  9328.,  9464.,  9600.,  4874.,  4950.,  5026.,  5102.,  9920., 10088., 10256., 10424., 10592., 10760., 10928., 11096., 11264., 11432., 11600., 11768.,  5846.,  5938.,  6030.,  6122.,  3525.,  3563.,  3601.,  3639.,  3677.,  3715.,  3753.,  3791.,  7728.,  7812.,  7896.,  7980.,  8064.,  8148.,  8232.,  8316.,  8400.,  8484.,  8568.,  8652.,  4451.,  4497.,  4543.,  4589.,  9212.,  9312.,  9412.,  9512.,  9612.,  9712.,  9812.,  9912., 10012., 10112., 10212., 10312.,  5225.,  5279.,  5333.,  5387., 10696., 10812., 10928., 11044., 11160., 11276., 11392., 11508., 11624., 11740., 11856., 11972.,  5999.,  6061.,  6123.,  6185.,  5202.,  5310.,  5418.,  5526.,  5634.,  5742.,  5850.,  5958.,  6448.,  6680.,  6912.,  7144.,  7376.,  7608.,  7840.,  8072.,  8304.,  8536.,  8768.,  9000.,  6734.,  6858.,  6982.,  7106.,  7496.,  7760.,  8024.,  8288.,  8552.,  8816.,  9080.,  9344.,  9608.,  9872., 10136., 10400.,  7834.,  7974.,  8114.,  8254.,  8544.,  8840.,  9136.,  9432.,  9728., 10024., 10320., 10616., 10912., 11208., 11504., 11800.,  8934.,  9090.,  9246.,  9402.,  3362.,  3470.,  3578.,  3686.,  3794.,  3902.,  4010.,  4118.,  7056.,  7288.,  7520.,  7752.,  7984.,  8216.,  8448.,  8680.,  8912.,  9144.,  9376.,  9608.,  4318.,  4442.,  4566.,  4690.,  7976.,  8240.,  8504.,  8768.,  9032.,  9296.,  9560.,  9824., 10088., 10352., 10616., 10880.,  4842.,  4982.,  5122.,  5262.,  8896.,  9192.,  9488.,  9784., 10080., 10376., 10672., 10968., 11264., 11560., 11856., 12152.,  5366.,  5522.,  5678.,  5834.,  6386.,  6494.,  6602.,  6710.,  6818.,  6926.,  7034.,  7142., 13552., 13784., 14016., 14248., 14480., 14712., 14944., 15176., 15408., 15640., 15872., 16104.,  7790.,  7914.,  8038.,  8162., 15368., 15632., 15896., 16160., 16424., 16688., 16952., 17216., 17480., 17744., 18008., 18272.,  8762.,  8902.,  9042.,  9182., 17184., 17480., 17776., 18072., 18368., 18664., 18960., 19256., 19552., 19848., 20144., 20440.,  9734.,  9890., 10046., 10202.,  6493.,  6563.,  6633.,  6703.,  6773.,  6843.,  6913.,  6983., 13664., 13812., 13960., 14108., 14256., 14404., 14552., 14700., 14848., 14996., 15144., 15292.,  7547.,  7625.,  7703.,  7781., 15148., 15312., 15476., 15640., 15804., 15968., 16132., 16296., 16460., 16624., 16788., 16952.,  8321.,  8407.,  8493.,  8579., 16632., 16812., 16992., 17172., 17352., 17532., 17712., 17892., 18072., 18252., 18432., 18612.,  9095.,  9189.,  9283.,  9377.,  8453.,  8523.,  8593.,  8663.,  8733.,  8803.,  8873.,  8943.,  8848.,  8996.,  9144.,  9292.,  9440.,  9588.,  9736.,  9884., 10032., 10180., 10328., 10476.,  9731.,  9809.,  9887.,  9965.,  9756.,  9920., 10084., 10248., 10412., 10576., 10740., 10904., 11068., 11232., 11396., 11560., 10729., 10815., 10901., 10987., 10664., 10844., 11024., 11204., 11384., 11564., 11744., 11924., 12104., 12284., 12464., 12644., 11727., 11821., 11915., 12009.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x14x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   29.,   35.,   41.,   47.,   53.,   59.,   65.,   71.,   77.,   83.,   89.,   95.,  112.,  132.,  152.,  172.,  192.,  212.,  232.,  252.,  272.,  292.,  312.,  332.,  179.,  193.,  207.,  221.,  235.,  249.,  263.,  277.,  291.,  305.,  319.,  333.,  347.,  361.,  375.,  389.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  173.,  179.,  185.,  191.,  197.,  203.,  209.,  215.,  221.,  227.,  233.,  239.,  245.,  251.,  257.,  263.,  672.,  692.,  712.,  732.,  752.,  772.,  792.,  812.,  832.,  852.,  872.,  892.,  571.,  585.,  599.,  613.,  627.,  641.,  655.,  669.,  683.,  697.,  711.,  725.,  739.,  753.,  767.,  781.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  341.,  347.,  353.,  359.,  365.,  371.,  377.,  383.,  389.,  395.,  401.,  407.,  413.,  419.,  425.,  431., 1232., 1252., 1272., 1292., 1312., 1332., 1352., 1372., 1392., 1412., 1432., 1452.,  963.,  977.,  991., 1005., 1019., 1033., 1047., 1061., 1075., 1089., 1103., 1117., 1131., 1145., 1159., 1173.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  509.,  515.,  521.,  527.,  533.,  539.,  545.,  551.,  557.,  563.,  569.,  575.,  581.,  587.,  593.,  599., 1792., 1812., 1832., 1852., 1872., 1892., 1912., 1932., 1952., 1972., 1992., 2012., 1355., 1369., 1383., 1397., 1411., 1425., 1439., 1453., 1467., 1481., 1495., 1509., 1523., 1537., 1551., 1565.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  694.,  722.,  750.,  778.,  806.,  834.,  862.,  890.,  918.,  946.,  974., 1002., 1030., 1058., 1086., 1114., 2744., 2816., 2888., 2960., 3032., 3104., 3176., 3248., 3320., 3392., 3464., 3536., 2130., 2174., 2218., 2262., 2306., 2350., 2394., 2438., 2482., 2526., 2570., 2614., 2658., 2702., 2746., 2790.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1478., 1506., 1534., 1562., 1590., 1618., 1646., 1674., 1702., 1730., 1758., 1786., 1814., 1842., 1870., 1898., 4760., 4832., 4904., 4976., 5048., 5120., 5192., 5264., 5336., 5408., 5480., 5552., 3362., 3406., 3450., 3494., 3538., 3582., 3626., 3670., 3714., 3758., 3802., 3846., 3890., 3934., 3978., 4022.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 2262., 2290., 2318., 2346., 2374., 2402., 2430., 2458., 2486., 2514., 2542., 2570., 2598., 2626., 2654., 2682., 6776., 6848., 6920., 6992., 7064., 7136., 7208., 7280., 7352., 7424., 7496., 7568., 4594., 4638., 4682., 4726., 4770., 4814., 4858., 4902., 4946., 4990., 5034., 5078., 5122., 5166., 5210., 5254.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1865., 1887., 1909., 1931., 1953., 1975., 1997., 2019., 2041., 2063., 2085., 2107., 2129., 2151., 2173., 2195., 4760., 4812., 4864., 4916., 4968., 5020., 5072., 5124., 5176., 5228., 5280., 5332., 2903., 2933., 2963., 2993., 3023., 3053., 3083., 3113., 3143., 3173., 3203., 3233., 3263., 3293., 3323., 3353.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 2481., 2503., 2525., 2547., 2569., 2591., 2613., 2635., 2657., 2679., 2701., 2723., 2745., 2767., 2789., 2811., 6216., 6268., 6320., 6372., 6424., 6476., 6528., 6580., 6632., 6684., 6736., 6788., 3743., 3773., 3803., 3833., 3863., 3893., 3923., 3953., 3983., 4013., 4043., 4073., 4103., 4133., 4163., 4193.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 3097., 3119., 3141., 3163., 3185., 3207., 3229., 3251., 3273., 3295., 3317., 3339., 3361., 3383., 3405., 3427., 7672., 7724., 7776., 7828., 7880., 7932., 7984., 8036., 8088., 8140., 8192., 8244., 4583., 4613., 4643., 4673., 4703., 4733., 4763., 4793., 4823., 4853., 4883., 4913., 4943., 4973., 5003., 5033.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 3713., 3735., 3757., 3779., 3801., 3823., 3845., 3867., 3889., 3911., 3933., 3955., 3977., 3999., 4021., 4043., 9128., 9180., 9232., 9284., 9336., 9388., 9440., 9492., 9544., 9596., 9648., 9700., 5423., 5453., 5483., 5513., 5543., 5573., 5603., 5633., 5663., 5693., 5723., 5753., 5783., 5813., 5843., 5873.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x12x14x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x12x14x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   350.,   390.,   430.,   470.,   510.,   550.,   590.,   630.,   740.,   884.,  1028.,  1172.,  1316.,  1460.,  1604.,  1748.,  1892.,  2036.,  2180.,  2324.,  1318.,  1422.,  1526.,  1630.,  1734.,  1838.,  1942.,  2046.,  2150.,  2254.,  2358.,  2462.,  2566.,  2670.,  2774.,  2878.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  1470.,  1510.,  1550.,  1590.,  1630.,  1670.,  1710.,  1750.,  4772.,  4916.,  5060.,  5204.,  5348.,  5492.,  5636.,  5780.,  5924.,  6068.,  6212.,  6356.,  4230.,  4334.,  4438.,  4542.,  4646.,  4750.,  4854.,  4958.,  5062.,  5166.,  5270.,  5374.,  5478.,  5582.,  5686.,  5790.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  2270.,  2310.,  2350.,  2390.,  2430.,  2470.,  2510.,  2550.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,  6244.,  6388.,  6532.,  6676.,  6820.,  6964.,  7108.,  7252.,   740.,   884.,  1028.,  1172.,   486.,   590.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,  1526.,  1630.,  1734.,  1838.,  1942.,  2046.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   830.,   870.,   910.,   950.,   990.,  1030.,  1070.,  1110.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  3620.,  3764.,  3908.,  4052.,  4196.,  4340.,  4484.,  4628.,  4772.,  4916.,  5060.,  5204.,  3398.,  3502.,  3606.,  3710.,  3814.,  3918.,  4022.,  4126.,  4230.,  4334.,  4438.,  4542.,  4646.,  4750.,  4854.,  4958.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  2060.,  2268.,  2476.,  2684.,  2892.,  3100.,  3308.,  3516.,  3724.,  3932.,  4140.,  4348.,  4556.,  4764.,  4972.,  5180.,  8040.,  8584.,  9128.,  9672., 10216., 10760., 11304., 11848., 12392., 12936., 13480., 14024.,  9244.,  9580.,  9916., 10252.,  3932.,  4268.,  4604.,  4940.,  5276.,  5612.,  5948.,  6284.,  6620.,  6956.,  7292.,  7628.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  5324.,  5532.,  5740.,  5948.,  6156.,  6364.,  6572.,  6780.,  6988.,  7196.,  7404.,  7612.,  7820.,  8028.,  8236.,  8444., 16616., 17160., 17704., 18248., 18792., 19336., 19880., 20424., 20968., 21512., 22056., 22600., 11996., 12332., 12668., 13004., 13340., 13676., 14012., 14348., 14684., 15020., 15356., 15692., 16028., 16364., 16700., 17036.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0., 11148., 11356., 11564., 11772., 11980., 12188., 12396., 12604.,  2060.,  2268.,  2476.,  2684.,  2892.,  3100.,  3308.,  3516., 21096., 21640., 22184., 22728., 23272., 23816., 24360., 24904.,  8040.,  8584.,  9128.,  9672.,  6556.,  6892.,  7228.,  7564.,  7900.,  8236.,  8572.,  8908.,  9244.,  9580.,  9916., 10252.,  3932.,  4268.,  4604.,  4940.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  4814.,  4982.,  5150.,  5318.,  5486.,  5654.,  5822.,  5990., 10948., 11348., 11748., 12148., 12548., 12948., 13348., 13748., 14148., 14548., 14948., 15348.,  7574.,  7806.,  8038.,  8270.,  8502.,  8734.,  8966.,  9198.,  9430.,  9662.,  9894., 10126., 10358., 10590., 10822., 11054.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  8174.,  8342.,  8510.,  8678.,  8846.,  9014.,  9182.,  9350.,  9518.,  9686.,  9854., 10022., 10190., 10358., 10526., 10694., 11396., 11796., 12196., 12596., 12996., 13396., 13796., 14196., 14596., 14996., 15396., 15796., 14070., 14302., 14534., 14766.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,  2006.,  2238.,  2470.,  2702.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  2126.,  2294.,  2462.,  2630.,  2798.,  2966.,  3134.,  3302.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  7748.,  8148.,  8548.,  8948.,  9348.,  9748., 10148., 10548., 10948., 11348., 11748., 12148.,  5718.,  5950.,  6182.,  6414.,  6646.,  6878.,  7110.,  7342.,  7574.,  7806.,  8038.,  8270.,  8502.,  8734.,  8966.,  9198.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  6830.,  6998.,  7166.,  7334.,  7502.,  7670.,  7838.,  8006.,  8174.,  8342.,  8510.,  8678.,  8846.,  9014.,  9182.,  9350., 18948., 19348., 19748., 20148., 20548., 20948., 21348., 21748., 11396., 11796., 12196., 12596., 12214., 12446., 12678., 12910., 13142., 13374., 13606., 13838., 14070., 14302., 14534., 14766.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 1, 12, 14, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x11x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  17.,   18.,   49.,   52.,   55.,   36.,   83.,   88.,   93.,   54.,   57.,   24.,   25.,   70.,   73.,   76.,   50.,  118.,  123.,  128.,   75.,   78.,   43.,   48.,  116.,  128.,  140.,   84.,  184.,  200.,  216.,  120.,  129.,   78.,   83.,  200.,  212.,  224.,  133.,  296.,  312.,  328.,  183.,  192.,  113.,  118.,  284.,  296.,  308.,  182.,  408.,  424.,  440.,  246.,  255.,   96.,  100.,  214.,  223.,  232.,  125.,  262.,  273.,  284.,  150.,  156.,  145.,  156.,  320.,  344.,  368.,  192.,  388.,  416.,  444.,  228.,  243.,  222.,  233.,  488.,  512.,  536.,  283.,  584.,  612.,  640.,  333.,  348.,  299.,  310.,  656.,  680.,  704.,  374.,  780.,  808.,  836.,  438.,  453.,  168.,  175.,  358.,  373.,  388.,  200.,  406.,  423.,  440.,  225.,  234.,  247.,  264.,  524.,  560.,  596.,  300.,  592.,  632.,  672.,  336.,  357.,  366.,  383.,  776.,  812.,  848.,  433.,  872.,  912.,  952.,  483.,  504.,  485.,  502., 1028., 1064., 1100.,  566., 1152., 1192., 1232.,  630.,  651.,  240.,  250.,  502.,  523.,  544.,  275.,  550.,  573.,  596.,  300.,  312.};
  const std::array<int, 4> in_shape = {{ 1, 14, 11, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x11x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  1.,   2.,   3.,   4.,   7.,  10.,  13.,   8.,  10.,  12.,  14.,   8.,   9.,  10.,  11.,  28.,  31.,  34.,  22.,  24.,  26.,  28.,  15.,  16.,  17.,  18.,  49.,  52.,  55.,  36.,  38.,  40.,  42.,  22.,  23.,  24.,  25.,  70.,  73.,  76.,  50.,  52.,  54.,  56.,  32.,  36.,  40.,  44., 110., 120., 130.,  80.,  86.,  92.,  98.,  60.,  64.,  68.,  72., 180., 190., 200., 122., 128., 134., 140.,  88.,  92.,  96., 100., 250., 260., 270., 164., 170., 176., 182.,  66.,  69.,  72.,  75., 166., 173., 180., 100., 104., 108., 112.,  87.,  90.,  93.,  96., 215., 222., 229., 128., 132., 136., 140., 108., 111., 114., 117., 264., 271., 278., 156., 160., 164., 168., 129., 132., 135., 138., 313., 320., 327., 184., 188., 192., 196.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 11, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x11x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 101.,  107.,  320.,  340.,  360.,  249.,  588.,  624.,  660.,  391.,  413.,  143.,  149.,  460.,  480.,  500.,  347.,  840.,  876.,  912.,  545.,  567.,  268.,  304.,  772.,  860.,  948.,  588., 1308., 1428., 1548.,  872.,  940.,  520.,  556., 1388., 1476., 1564.,  952., 2148., 2268., 2388., 1348., 1416.,  772.,  808., 2004., 2092., 2180., 1316., 2988., 3108., 3228., 1824., 1892.,  713.,  743., 1600., 1668., 1736.,  941., 1980., 2064., 2148., 1139., 1185., 1072., 1156., 2380., 2564., 2748., 1440., 2916., 3132., 3348., 1724., 1840., 1660., 1744., 3668., 3852., 4036., 2140., 4428., 4644., 4860., 2536., 2652., 2248., 2332., 4956., 5140., 5324., 2840., 5940., 6156., 6372., 3348., 3464., 1283., 1337., 2740., 2856., 2972., 1535., 3120., 3252., 3384., 1733., 1803., 1876., 2008., 3988., 4268., 4548., 2292., 4524., 4836., 5148., 2576., 2740., 2800., 2932., 5948., 6228., 6508., 3328., 6708., 7020., 7332., 3724., 3888., 3724., 3856., 7908., 8188., 8468., 4364., 8892., 9204., 9516., 4872., 5036., 1853., 1931., 3880., 4044., 4208., 2129., 4260., 4440., 4620., 2327., 2421.};
  const std::array<int, 4> in_shape = {{ 1, 14, 11, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x11x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   40.,   60.,   80.,   53.,   67.,   81.,   95.,   47.,   53.,   59.,   65.,  180.,  200.,  220.,  151.,  165.,  179.,  193.,   89.,   95.,  101.,  107.,  320.,  340.,  360.,  249.,  263.,  277.,  291.,  131.,  137.,  143.,  149.,  460.,  480.,  500.,  347.,  361.,  375.,  389.,  190.,  218.,  246.,  274.,  728.,  800.,  872.,  558.,  602.,  646.,  690.,  386.,  414.,  442.,  470., 1232., 1304., 1376.,  866.,  910.,  954.,  998.,  582.,  610.,  638.,  666., 1736., 1808., 1880., 1174., 1218., 1262., 1306.,  479.,  501.,  523.,  545., 1220., 1272., 1324.,  743.,  773.,  803.,  833.,  633.,  655.,  677.,  699., 1584., 1636., 1688.,  953.,  983., 1013., 1043.,  787.,  809.,  831.,  853., 1948., 2000., 2052., 1163., 1193., 1223., 1253.,  941.,  963.,  985., 1007., 2312., 2364., 2416., 1373., 1403., 1433., 1463.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 11, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x11x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,  1636.,  1780.,   260.,   174.,  2740.,  3012.,   596.,   278.,   446.,   310.,   350.,   980.,  1124.,  1268.,   902.,  1956.,  2228.,  2500.,  1454.,  1622.,  1204.,  1476.,  2616.,  3288.,  3960.,  2708.,  3800.,  4728.,  5656.,  3940.,  1780.,  2468.,  2740.,  5656.,  6328.,  7000.,  3844.,  7608.,  8536.,  9464.,  4948.,  5476.,   660.,   932.,  6648.,  7320.,  2616.,  1908.,  9368., 10296.,  3800.,  2884.,  3412.,  1774.,  2006.,  3908.,  4436.,  4964.,  2558.,  4884.,  5540.,  6196.,  3110.,  3470.,  4516.,  5172.,  6168.,  7608.,  9048.,  6404.,  7352.,  9048., 10744.,  7636.,  2788.,  5396.,  6052., 11512., 12952., 14392.,  7156., 13464., 15160., 16856.,  8260.,  9172.,  3204.,  3860., 14808., 16248.,  6168.,  4836., 17528., 19224.,  7352.,  5812.,  6724.,  3238.,  3662.,  6836.,  7748.,  8660.,  4214.,  7812.,  8852.,  9892.,  4766.,  5318.,  7828.,  8868.,  9720., 11928., 14136., 10100., 10904., 13368., 15832., 11332.,  3796.,  8324.,  9364., 17368., 19576., 21784., 10468., 19320., 21784., 24248., 11572., 12868.,  5748.,  6788., 22968., 25176.,  9720.,  7764., 25688., 28152., 10904.,  8740., 10036.,  4702.,  5318.,  9764., 11060., 12356.,  5870., 10740., 12164., 13588.,  6422.,  7166.};
  const std::array<int, 4> in_shape = {{ 1, 14, 11, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x11x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   260.,   404.,   548.,   382.,   486.,   590.,   694.,   310.,   350.,   390.,   430.,  1268.,  1412.,  1556.,  1110.,  1214.,  1318.,  1422.,   590.,   630.,   670.,   710.,  2276.,  2420.,  2564.,  1838.,  1942.,  2046.,  2150.,   870.,   910.,   950.,   990.,  3284.,  3428.,  3572.,  2566.,  2670.,  2774.,  2878.,  1260.,  1468.,  1676.,  1884.,  5224.,  5768.,  6312.,  4140.,  4476.,  4812.,  5148.,  2716.,  2924.,  3132.,  3340.,  9032.,  9576., 10120.,  6492.,  6828.,  7164.,  7500.,  4172.,  4380.,  4588.,  4796., 12840., 13384., 13928.,  8844.,  9180.,  9516.,  9852.,  3638.,  3806.,  3974.,  4142.,  9332.,  9732., 10132.,  5718.,  5950.,  6182.,  6414.,  4814.,  4982.,  5150.,  5318., 12132., 12532., 12932.,  7342.,  7574.,  7806.,  8038.,  5990.,  6158.,  6326.,  6494., 14932., 15332., 15732.,  8966.,  9198.,  9430.,  9662.,  7166.,  7334.,  7502.,  7670., 17732., 18132., 18532., 10590., 10822., 11054., 11286.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 11, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x11x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,  161.,  166.,  171.,  176.,  181.,  186.,  105.,  108.,  111.,  114.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  231.,  236.,  241.,  246.,  251.,  256.,  147.,  150.,  153.,  156.,   81.,   86.,   91.,   96.,  220.,  232.,  244.,  256.,  268.,  280.,  161.,  168.,  352.,  368.,  384.,  400.,  416.,  432.,  231.,  240.,  249.,  258.,  151.,  156.,  161.,  166.,  388.,  400.,  412.,  424.,  436.,  448.,  259.,  266.,  576.,  592.,  608.,  624.,  640.,  656.,  357.,  366.,  375.,  384.,  221.,  226.,  231.,  236.,  556.,  568.,  580.,  592.,  604.,  616.,  357.,  364.,  800.,  816.,  832.,  848.,  864.,  880.,  483.,  492.,  501.,  510.,  188.,  192.,  196.,  200.,  419.,  428.,  437.,  446.,  455.,  464.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  306.,  312.,  279.,  290.,  301.,  312.,  616.,  640.,  664.,  688.,  712.,  736.,  371.,  384.,  748.,  776.,  804.,  832.,  860.,  888.,  441.,  456.,  471.,  486.,  433.,  444.,  455.,  466.,  952.,  976., 1000., 1024., 1048., 1072.,  553.,  566., 1140., 1168., 1196., 1224., 1252., 1280.,  651.,  666.,  681.,  696.,  587.,  598.,  609.,  620., 1288., 1312., 1336., 1360., 1384., 1408.,  735.,  748., 1532., 1560., 1588., 1616., 1644., 1672.,  861.,  876.,  891.,  906.,  329.,  336.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  795.,  812.,  829.,  846.,  863.,  880.,  441.,  450.,  459.,  468.,  477.,  494.,  511.,  528., 1012., 1048., 1084., 1120., 1156., 1192.,  581.,  600., 1144., 1184., 1224., 1264., 1304., 1344.,  651.,  672.,  693.,  714.,  715.,  732.,  749.,  766., 1516., 1552., 1588., 1624., 1660., 1696.,  847.,  866., 1704., 1744., 1784., 1824., 1864., 1904.,  945.,  966.,  987., 1008.,  953.,  970.,  987., 1004., 2020., 2056., 2092., 2128., 2164., 2200., 1113., 1132., 2264., 2304., 2344., 2384., 2424., 2464., 1239., 1260., 1281., 1302.,  470.,  480.,  490.,  500.,  983., 1004., 1025., 1046., 1067., 1088.,  539.,  550., 1077., 1100., 1123., 1146., 1169., 1192.,  588.,  600.,  612.,  624.};
  const std::array<int, 4> in_shape = {{ 1, 14, 11, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x11x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,  11.,  14.,  17.,  20.,  23.,  26.,  14.,  16.,  18.,  20.,  22.,  24.,  26.,  28.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  53.,  56.,  59.,  62.,  65.,  68.,  42.,  44.,  46.,  48.,  50.,  52.,  54.,  56.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,  95.,  98., 101., 104., 107., 110.,  70.,  72.,  74.,  76.,  78.,  80.,  82.,  84.,  43.,  44.,  45.,  46.,  47.,  48.,  49.,  50., 137., 140., 143., 146., 149., 152.,  98., 100., 102., 104., 106., 108., 110., 112.,  60.,  64.,  68.,  72.,  76.,  80.,  84.,  88., 210., 220., 230., 240., 250., 260., 154., 160., 166., 172., 178., 184., 190., 196., 116., 120., 124., 128., 132., 136., 140., 144., 350., 360., 370., 380., 390., 400., 238., 244., 250., 256., 262., 268., 274., 280., 172., 176., 180., 184., 188., 192., 196., 200., 490., 500., 510., 520., 530., 540., 322., 328., 334., 340., 346., 352., 358., 364., 129., 132., 135., 138., 141., 144., 147., 150., 325., 332., 339., 346., 353., 360., 196., 200., 204., 208., 212., 216., 220., 224., 171., 174., 177., 180., 183., 186., 189., 192., 423., 430., 437., 444., 451., 458., 252., 256., 260., 264., 268., 272., 276., 280., 213., 216., 219., 222., 225., 228., 231., 234., 521., 528., 535., 542., 549., 556., 308., 312., 316., 320., 324., 328., 332., 336., 255., 258., 261., 264., 267., 270., 273., 276., 619., 626., 633., 640., 647., 654., 364., 368., 372., 376., 380., 384., 388., 392.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 11, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x11x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  197.,   203.,   209.,   215.,   624.,   644.,   664.,   684.,   704.,   724.,   487.,   501.,  1148.,  1184.,  1220.,  1256.,  1292.,  1328.,   765.,   787.,   809.,   831.,   281.,   287.,   293.,   299.,   904.,   924.,   944.,   964.,   984.,  1004.,   683.,   697.,  1652.,  1688.,  1724.,  1760.,  1796.,  1832.,  1073.,  1095.,  1117.,  1139.,   508.,   544.,   580.,   616.,  1476.,  1564.,  1652.,  1740.,  1828.,  1916.,  1136.,  1188.,  2524.,  2644.,  2764.,  2884.,  3004.,  3124.,  1692.,  1760.,  1828.,  1896.,  1012.,  1048.,  1084.,  1120.,  2708.,  2796.,  2884.,  2972.,  3060.,  3148.,  1864.,  1916.,  4204.,  4324.,  4444.,  4564.,  4684.,  4804.,  2644.,  2712.,  2780.,  2848.,  1516.,  1552.,  1588.,  1624.,  3940.,  4028.,  4116.,  4204.,  4292.,  4380.,  2592.,  2644.,  5884.,  6004.,  6124.,  6244.,  6364.,  6484.,  3596.,  3664.,  3732.,  3800.,  1403.,  1433.,  1463.,  1493.,  3148.,  3216.,  3284.,  3352.,  3420.,  3488.,  1853.,  1891.,  3896.,  3980.,  4064.,  4148.,  4232.,  4316.,  2243.,  2289.,  2335.,  2381.,  2080.,  2164.,  2248.,  2332.,  4620.,  4804.,  4988.,  5172.,  5356.,  5540.,  2804.,  2904.,  5668.,  5884.,  6100.,  6316.,  6532.,  6748.,  3360.,  3476.,  3592.,  3708.,  3256.,  3340.,  3424.,  3508.,  7196.,  7380.,  7564.,  7748.,  7932.,  8116.,  4204.,  4304.,  8692.,  8908.,  9124.,  9340.,  9556.,  9772.,  4984.,  5100.,  5216.,  5332.,  4432.,  4516.,  4600.,  4684.,  9772.,  9956., 10140., 10324., 10508., 10692.,  5604.,  5704., 11716., 11932., 12148., 12364., 12580., 12796.,  6608.,  6724.,  6840.,  6956.,  2525.,  2579.,  2633.,  2687.,  5392.,  5508.,  5624.,  5740.,  5856.,  5972.,  3023.,  3085.,  6140.,  6272.,  6404.,  6536.,  6668.,  6800.,  3413.,  3483.,  3553.,  3623.,  3652.,  3784.,  3916.,  4048.,  7764.,  8044.,  8324.,  8604.,  8884.,  9164.,  4472.,  4620.,  8812.,  9124.,  9436.,  9748., 10060., 10372.,  5028.,  5192.,  5356.,  5520.,  5500.,  5632.,  5764.,  5896., 11684., 11964., 12244., 12524., 12804., 13084.,  6544.,  6692., 13180., 13492., 13804., 14116., 14428., 14740.,  7324.,  7488.,  7652.,  7816.,  7348.,  7480.,  7612.,  7744., 15604., 15884., 16164., 16444., 16724., 17004.,  8616.,  8764., 17548., 17860., 18172., 18484., 18796., 19108.,  9620.,  9784.,  9948., 10112.,  3647.,  3725.,  3803.,  3881.,  7636.,  7800.,  7964.,  8128.,  8292.,  8456.,  4193.,  4279.,  8384.,  8564.,  8744.,  8924.,  9104.,  9284.,  4583.,  4677.,  4771.,  4865.};
  const std::array<int, 4> in_shape = {{ 1, 14, 11, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x11x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   29.,   35.,   41.,   47.,   64.,   84.,  104.,  124.,  144.,  164.,   95.,  109.,  123.,  137.,  151.,  165.,  179.,  193.,   89.,   95.,  101.,  107.,  113.,  119.,  125.,  131.,  344.,  364.,  384.,  404.,  424.,  444.,  291.,  305.,  319.,  333.,  347.,  361.,  375.,  389.,  173.,  179.,  185.,  191.,  197.,  203.,  209.,  215.,  624.,  644.,  664.,  684.,  704.,  724.,  487.,  501.,  515.,  529.,  543.,  557.,  571.,  585.,  257.,  263.,  269.,  275.,  281.,  287.,  293.,  299.,  904.,  924.,  944.,  964.,  984., 1004.,  683.,  697.,  711.,  725.,  739.,  753.,  767.,  781.,  358.,  386.,  414.,  442.,  470.,  498.,  526.,  554., 1400., 1472., 1544., 1616., 1688., 1760., 1082., 1126., 1170., 1214., 1258., 1302., 1346., 1390.,  750.,  778.,  806.,  834.,  862.,  890.,  918.,  946., 2408., 2480., 2552., 2624., 2696., 2768., 1698., 1742., 1786., 1830., 1874., 1918., 1962., 2006., 1142., 1170., 1198., 1226., 1254., 1282., 1310., 1338., 3416., 3488., 3560., 3632., 3704., 3776., 2314., 2358., 2402., 2446., 2490., 2534., 2578., 2622.,  941.,  963.,  985., 1007., 1029., 1051., 1073., 1095., 2400., 2452., 2504., 2556., 2608., 2660., 1463., 1493., 1523., 1553., 1583., 1613., 1643., 1673., 1249., 1271., 1293., 1315., 1337., 1359., 1381., 1403., 3128., 3180., 3232., 3284., 3336., 3388., 1883., 1913., 1943., 1973., 2003., 2033., 2063., 2093., 1557., 1579., 1601., 1623., 1645., 1667., 1689., 1711., 3856., 3908., 3960., 4012., 4064., 4116., 2303., 2333., 2363., 2393., 2423., 2453., 2483., 2513., 1865., 1887., 1909., 1931., 1953., 1975., 1997., 2019., 4584., 4636., 4688., 4740., 4792., 4844., 2723., 2753., 2783., 2813., 2843., 2873., 2903., 2933.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 11, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x11x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,  1508.,  1652.,  1796.,  1940.,   420.,   564.,   278.,   382.,  2612.,  2884.,  3156.,  3428.,  1012.,  1284.,   446.,   614.,   782.,   950.,   590.,   630.,    30.,    70.,  1220.,  1364.,  1508.,  1652.,  1796.,  1940.,    70.,   174.,  2068.,  2340.,  2612.,  2884.,  3156.,  3428.,   110.,   278.,   446.,   614.,  1588.,  1860.,  2132.,  2404.,  3128.,  3800.,  4472.,  5144.,  5816.,  6488.,  3492.,  3892.,  4312.,  5240.,  6168.,  7096.,  8024.,  8952.,  4852.,  5380.,  3220.,  3748.,  1044.,  1316.,  1588.,  1860.,  7160.,  7832.,  3128.,  3800.,  4472.,  5144.,  2692.,  3092.,  9880., 10808.,  4312.,  5240.,  6168.,  7096.,  3796.,  4324.,  4852.,  5380.,   500.,   772.,  1044.,  1316.,  5816.,  6488.,  7160.,  7832.,  3128.,  3800.,  1892.,  2292.,  8024.,  8952.,  9880., 10808.,  4312.,  5240.,  2740.,  3268.,  3796.,  4324.,  3398.,  3630.,   150.,   382.,  3764.,  4292.,  4820.,  5348.,  5876.,  6404.,   190.,   486.,  4612.,  5268.,  5924.,  6580.,  7236.,  7892.,   230.,   590.,   950.,  1310.,  4900.,  5556.,  6212.,  6868.,  6680.,  8120.,  9560., 11000., 12440., 13880.,  7572.,  8356.,  7864.,  9560., 11256., 12952., 14648., 16344.,  8932.,  9844.,  4996.,  5908.,  3588.,  4244.,  4900.,  5556., 15320., 16760.,  6680.,  8120.,  9560., 11000.,  6004.,  6788., 18040., 19736.,  7864.,  9560., 11256., 12952.,  7108.,  8020.,  8932.,  9844.,  2276.,  2932.,  3588.,  4244., 12440., 13880., 15320., 16760.,  6680.,  8120.,  4436.,  5220., 14648., 16344., 18040., 19736.,  7864.,  9560.,  5284.,  6196.,  7108.,  8020.,  6206.,  6630.,   270.,   694.,  6308.,  7220.,  8132.,  9044.,  9956., 10868.,   310.,   798.,  7156.,  8196.,  9236., 10276., 11316., 12356.,   350.,   902.,  1454.,  2006.,  8212.,  9252., 10292., 11332., 10232., 12440., 14648., 16856., 19064., 21272., 11652., 12820., 11416., 13880., 16344., 18808., 21272., 23736., 13012., 14308.,  6772.,  8068.,  6132.,  7172.,  8212.,  9252., 23480., 25688., 10232., 12440., 14648., 16856.,  9316., 10484., 26200., 28664., 11416., 13880., 16344., 18808., 10420., 11716., 13012., 14308.,  4052.,  5092.,  6132.,  7172., 19064., 21272., 23480., 25688., 10232., 12440.,  6980.,  8148., 21272., 23736., 26200., 28664., 11416., 13880.,  7828.,  9124., 10420., 11716.,  9014.,  9630.,   390.,  1006.,  8852., 10148., 11444., 12740., 14036., 15332.,   430.,  1110.,  9700., 11124., 12548., 13972., 15396., 16820.,   470.,  1214.,  1958.,  2702.};
  const std::array<int, 4> in_shape = {{ 1, 14, 11, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x11x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   420.,   564.,   708.,   852.,   996.,  1140.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,   590.,   630.,   670.,   710.,   750.,   790.,   830.,   870.,  2436.,  2580.,  2724.,  2868.,  3012.,  3156.,  2150.,  2254.,  2358.,  2462.,  2566.,  2670.,  2774.,  2878.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  4452.,  4596.,  4740.,  4884.,  5028.,  5172.,  3606.,  3710.,  3814.,  3918.,  4022.,  4126.,  4230.,  4334.,  1710.,  1750.,  1790.,  1830.,  1870.,  1910.,  1950.,  1990.,  6468.,  6612.,  6756.,  6900.,  7044.,  7188.,  5062.,  5166.,  5270.,  5374.,  5478.,  5582.,  5686.,  5790.,  2380.,  2588.,  2796.,  3004.,  3212.,  3420.,  3628.,  3836.,  7528.,  8072.,  8616.,  9160.,  9704., 10248.,  8060.,  8396.,  2076.,  2412.,  2748.,  3084.,  3420.,  3756.,  2732.,  2940.,  3148.,  3356.,  3564.,  3772.,  3980.,  4188.,  8488.,  9032.,  9576., 10120., 10664., 11208.,  6108.,  6444.,  6780.,  7116.,  7452.,  7788.,  8124.,  8460.,  5644.,  5852.,  6060.,  6268.,  6476.,  6684.,  6892.,  7100., 16104., 16648., 17192., 17736., 18280., 18824., 10812., 11148., 11484., 11820., 12156., 12492., 12828., 13164.,  7166.,  7334.,  7502.,  7670.,  7838.,  8006.,  8174.,  8342., 18404., 18804., 19204., 19604., 20004., 20404., 11286., 11518., 11750., 11982., 12214., 12446., 12678., 12910.,  9518.,  9686.,  9854., 10022., 10190., 10358., 10526., 10694., 13252., 13652., 14052., 14452., 14852., 15252., 14534., 14766.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  4004.,  4404.,  4804.,  5204.,  5604.,  6004.,  2934.,  3166.,  3398.,  3630.,  3862.,  4094.,  4326.,  4558.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  9604., 10004., 10404., 10804., 11204., 11604.,  6182.,  6414.,  6646.,  6878.,  7110.,  7342.,  7574.,  7806.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 11, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x11x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  317.,  322.,  327.,  332.,  337.,  342.,  347.,  352.,  357.,  362.,  367.,  372.,  207.,  210.,  213.,  216.,  219.,  222.,  225.,  228.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  457.,  462.,  467.,  472.,  477.,  482.,  487.,  492.,  497.,  502.,  507.,  512.,  291.,  294.,  297.,  300.,  303.,  306.,  309.,  312.,  157.,  162.,  167.,  172.,  177.,  182.,  187.,  192.,  428.,  440.,  452.,  464.,  476.,  488.,  500.,  512.,  524.,  536.,  548.,  560.,  315.,  322.,  329.,  336.,  688.,  704.,  720.,  736.,  752.,  768.,  784.,  800.,  816.,  832.,  848.,  864.,  453.,  462.,  471.,  480.,  489.,  498.,  507.,  516.,  297.,  302.,  307.,  312.,  317.,  322.,  327.,  332.,  764.,  776.,  788.,  800.,  812.,  824.,  836.,  848.,  860.,  872.,  884.,  896.,  511.,  518.,  525.,  532., 1136., 1152., 1168., 1184., 1200., 1216., 1232., 1248., 1264., 1280., 1296., 1312.,  705.,  714.,  723.,  732.,  741.,  750.,  759.,  768.,  437.,  442.,  447.,  452.,  457.,  462.,  467.,  472., 1100., 1112., 1124., 1136., 1148., 1160., 1172., 1184., 1196., 1208., 1220., 1232.,  707.,  714.,  721.,  728., 1584., 1600., 1616., 1632., 1648., 1664., 1680., 1696., 1712., 1728., 1744., 1760.,  957.,  966.,  975.,  984.,  993., 1002., 1011., 1020.,  372.,  376.,  380.,  384.,  388.,  392.,  396.,  400.,  829.,  838.,  847.,  856.,  865.,  874.,  883.,  892.,  901.,  910.,  919.,  928.,  485.,  490.,  495.,  500., 1015., 1026., 1037., 1048., 1059., 1070., 1081., 1092., 1103., 1114., 1125., 1136.,  582.,  588.,  594.,  600.,  606.,  612.,  618.,  624.,  547.,  558.,  569.,  580.,  591.,  602.,  613.,  624., 1208., 1232., 1256., 1280., 1304., 1328., 1352., 1376., 1400., 1424., 1448., 1472.,  729.,  742.,  755.,  768., 1468., 1496., 1524., 1552., 1580., 1608., 1636., 1664., 1692., 1720., 1748., 1776.,  867.,  882.,  897.,  912.,  927.,  942.,  957.,  972.,  855.,  866.,  877.,  888.,  899.,  910.,  921.,  932., 1880., 1904., 1928., 1952., 1976., 2000., 2024., 2048., 2072., 2096., 2120., 2144., 1093., 1106., 1119., 1132., 2252., 2280., 2308., 2336., 2364., 2392., 2420., 2448., 2476., 2504., 2532., 2560., 1287., 1302., 1317., 1332., 1347., 1362., 1377., 1392., 1163., 1174., 1185., 1196., 1207., 1218., 1229., 1240., 2552., 2576., 2600., 2624., 2648., 2672., 2696., 2720., 2744., 2768., 2792., 2816., 1457., 1470., 1483., 1496., 3036., 3064., 3092., 3120., 3148., 3176., 3204., 3232., 3260., 3288., 3316., 3344., 1707., 1722., 1737., 1752., 1767., 1782., 1797., 1812.,  651.,  658.,  665.,  672.,  679.,  686.,  693.,  700., 1387., 1402., 1417., 1432., 1447., 1462., 1477., 1492., 1507., 1522., 1537., 1552.,  776.,  784.,  792.,  800., 1573., 1590., 1607., 1624., 1641., 1658., 1675., 1692., 1709., 1726., 1743., 1760.,  873.,  882.,  891.,  900.,  909.,  918.,  927.,  936.,  937.,  954.,  971.,  988., 1005., 1022., 1039., 1056., 1988., 2024., 2060., 2096., 2132., 2168., 2204., 2240., 2276., 2312., 2348., 2384., 1143., 1162., 1181., 1200., 2248., 2288., 2328., 2368., 2408., 2448., 2488., 2528., 2568., 2608., 2648., 2688., 1281., 1302., 1323., 1344., 1365., 1386., 1407., 1428., 1413., 1430., 1447., 1464., 1481., 1498., 1515., 1532., 2996., 3032., 3068., 3104., 3140., 3176., 3212., 3248., 3284., 3320., 3356., 3392., 1675., 1694., 1713., 1732., 3368., 3408., 3448., 3488., 3528., 3568., 3608., 3648., 3688., 3728., 3768., 3808., 1869., 1890., 1911., 1932., 1953., 1974., 1995., 2016., 1889., 1906., 1923., 1940., 1957., 1974., 1991., 2008., 4004., 4040., 4076., 4112., 4148., 4184., 4220., 4256., 4292., 4328., 4364., 4400., 2207., 2226., 2245., 2264., 4488., 4528., 4568., 4608., 4648., 4688., 4728., 4768., 4808., 4848., 4888., 4928., 2457., 2478., 2499., 2520., 2541., 2562., 2583., 2604.,  930.,  940.,  950.,  960.,  970.,  980.,  990., 1000., 1945., 1966., 1987., 2008., 2029., 2050., 2071., 2092., 2113., 2134., 2155., 2176., 1067., 1078., 1089., 1100., 2131., 2154., 2177., 2200., 2223., 2246., 2269., 2292., 2315., 2338., 2361., 2384., 1164., 1176., 1188., 1200., 1212., 1224., 1236., 1248.};
  const std::array<int, 4> in_shape = {{ 1, 14, 11, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x11x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,    9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   19.,   22.,   25.,   28.,   31.,   34.,   37.,   40.,   43.,   46.,   49.,   52.,   26.,   28.,   30.,   32.,   34.,   36.,   38.,   40.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,  103.,  106.,  109.,  112.,  115.,  118.,  121.,  124.,  127.,  130.,  133.,  136.,   82.,   84.,   86.,   88.,   90.,   92.,   94.,   96.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,   57.,   58.,   59.,   60.,   61.,   62.,   63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  146.,  148.,  150.,  152.,  154.,  156.,  158.,  160.,  162.,  164.,  166.,  168.,   85.,   86.,   87.,   88.,   89.,   90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  202.,  204.,  206.,  208.,  210.,  212.,  214.,  216.,  218.,  220.,  222.,  224.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  148.,  152.,  156.,  160.,  164.,  168.,  172.,  176.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  302.,  308.,  314.,  320.,  326.,  332.,  338.,  344.,  350.,  356.,  362.,  368.,  374.,  380.,  386.,  392.,  228.,  232.,  236.,  240.,  244.,  248.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,  284.,  288.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  470.,  476.,  482.,  488.,  494.,  500.,  506.,  512.,  518.,  524.,  530.,  536.,  542.,  548.,  554.,  560.,  340.,  344.,  348.,  352.,  356.,  360.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,  396.,  400.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080.,  638.,  644.,  650.,  656.,  662.,  668.,  674.,  680.,  686.,  692.,  698.,  704.,  710.,  716.,  722.,  728.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  279.,  282.,  285.,  288.,  291.,  294.,  297.,  300.,  643.,  650.,  657.,  664.,  671.,  678.,  685.,  692.,  699.,  706.,  713.,  720.,  388.,  392.,  396.,  400.,  404.,  408.,  412.,  416.,  420.,  424.,  428.,  432.,  436.,  440.,  444.,  448.,  339.,  342.,  345.,  348.,  351.,  354.,  357.,  360.,  363.,  366.,  369.,  372.,  375.,  378.,  381.,  384.,  839.,  846.,  853.,  860.,  867.,  874.,  881.,  888.,  895.,  902.,  909.,  916.,  500.,  504.,  508.,  512.,  516.,  520.,  524.,  528.,  532.,  536.,  540.,  544.,  548.,  552.,  556.,  560.,  423.,  426.,  429.,  432.,  435.,  438.,  441.,  444.,  447.,  450.,  453.,  456.,  459.,  462.,  465.,  468., 1035., 1042., 1049., 1056., 1063., 1070., 1077., 1084., 1091., 1098., 1105., 1112.,  612.,  616.,  620.,  624.,  628.,  632.,  636.,  640.,  644.,  648.,  652.,  656.,  660.,  664.,  668.,  672.,  507.,  510.,  513.,  516.,  519.,  522.,  525.,  528.,  531.,  534.,  537.,  540.,  543.,  546.,  549.,  552., 1231., 1238., 1245., 1252., 1259., 1266., 1273., 1280., 1287., 1294., 1301., 1308.,  724.,  728.,  732.,  736.,  740.,  744.,  748.,  752.,  756.,  760.,  764.,  768.,  772.,  776.,  780.,  784.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 11, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x11x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  389.,   395.,   401.,   407.,   413.,   419.,   425.,   431.,  1232.,  1252.,  1272.,  1292.,  1312.,  1332.,  1352.,  1372.,  1392.,  1412.,  1432.,  1452.,   963.,   977.,   991.,  1005.,  2268.,  2304.,  2340.,  2376.,  2412.,  2448.,  2484.,  2520.,  2556.,  2592.,  2628.,  2664.,  1513.,  1535.,  1557.,  1579.,  1601.,  1623.,  1645.,  1667.,   557.,   563.,   569.,   575.,   581.,   587.,   593.,   599.,  1792.,  1812.,  1832.,  1852.,  1872.,  1892.,  1912.,  1932.,  1952.,  1972.,  1992.,  2012.,  1355.,  1369.,  1383.,  1397.,  3276.,  3312.,  3348.,  3384.,  3420.,  3456.,  3492.,  3528.,  3564.,  3600.,  3636.,  3672.,  2129.,  2151.,  2173.,  2195.,  2217.,  2239.,  2261.,  2283.,   988.,  1024.,  1060.,  1096.,  1132.,  1168.,  1204.,  1240.,  2116.,  2204.,  2292.,  2380.,  2468.,  2556.,  2644.,  2732.,  2820.,  2908.,  2996.,  3084.,  2232.,  2284.,  2336.,  2388.,  3164.,  3284.,  3404.,  3524.,  3644.,  3764.,  3884.,  4004.,  4124.,  4244.,  4364.,  4484.,  3332.,  3400.,  3468.,  3536.,   788.,   856.,   924.,   992.,  1228.,  1264.,  1300.,  1336.,  1372.,  1408.,  1444.,  1480.,  2788.,  2876.,  2964.,  3052.,  3140.,  3228.,  3316.,  3404.,  3492.,  3580.,  3668.,  3756.,  1896.,  1948.,  2000.,  2052.,  3708.,  3828.,  3948.,  4068.,  4188.,  4308.,  4428.,  4548.,  4668.,  4788.,  4908.,  5028.,  2420.,  2488.,  2556.,  2624.,  2692.,  2760.,  2828.,  2896.,  2236.,  2272.,  2308.,  2344.,  2380.,  2416.,  2452.,  2488.,  5252.,  5340.,  5428.,  5516.,  5604.,  5692.,  5780.,  5868.,  5956.,  6044.,  6132.,  6220.,  3352.,  3404.,  3456.,  3508.,  7068.,  7188.,  7308.,  7428.,  7548.,  7668.,  7788.,  7908.,  8028.,  8148.,  8268.,  8388.,  4324.,  4392.,  4460.,  4528.,  4596.,  4664.,  4732.,  4800.,  2783.,  2813.,  2843.,  2873.,  2903.,  2933.,  2963.,  2993.,  6244.,  6312.,  6380.,  6448.,  6516.,  6584.,  6652.,  6720.,  6788.,  6856.,  6924.,  6992.,  3677.,  3715.,  3753.,  3791.,  7728.,  7812.,  7896.,  7980.,  8064.,  8148.,  8232.,  8316.,  8400.,  8484.,  8568.,  8652.,  4451.,  4497.,  4543.,  4589.,  4635.,  4681.,  4727.,  4773.,  4096.,  4180.,  4264.,  4348.,  4432.,  4516.,  4600.,  4684.,  5260.,  5444.,  5628.,  5812.,  5996.,  6180.,  6364.,  6548.,  6732.,  6916.,  7100.,  7284.,  5532.,  5632.,  5732.,  5832.,  6308.,  6524.,  6740.,  6956.,  7172.,  7388.,  7604.,  7820.,  8036.,  8252.,  8468.,  8684.,  6632.,  6748.,  6864.,  6980.,  1208.,  1324.,  1440.,  1556.,  2608.,  2692.,  2776.,  2860.,  2944.,  3028.,  3112.,  3196.,  5548.,  5732.,  5916.,  6100.,  6284.,  6468.,  6652.,  6836.,  7020.,  7204.,  7388.,  7572.,  3468.,  3568.,  3668.,  3768.,  6468.,  6684.,  6900.,  7116.,  7332.,  7548.,  7764.,  7980.,  8196.,  8412.,  8628.,  8844.,  3992.,  4108.,  4224.,  4340.,  4456.,  4572.,  4688.,  4804.,  4960.,  5044.,  5128.,  5212.,  5296.,  5380.,  5464.,  5548., 10700., 10884., 11068., 11252., 11436., 11620., 11804., 11988., 12172., 12356., 12540., 12724.,  6268.,  6368.,  6468.,  6568., 12516., 12732., 12948., 13164., 13380., 13596., 13812., 14028., 14244., 14460., 14676., 14892.,  7240.,  7356.,  7472.,  7588.,  7704.,  7820.,  7936.,  8052.,  5009.,  5063.,  5117.,  5171.,  5225.,  5279.,  5333.,  5387., 10696., 10812., 10928., 11044., 11160., 11276., 11392., 11508., 11624., 11740., 11856., 11972.,  5999.,  6061.,  6123.,  6185., 12180., 12312., 12444., 12576., 12708., 12840., 12972., 13104., 13236., 13368., 13500., 13632.,  6773.,  6843.,  6913.,  6983.,  7053.,  7123.,  7193.,  7263.,  7204.,  7336.,  7468.,  7600.,  7732.,  7864.,  7996.,  8128.,  8404.,  8684.,  8964.,  9244.,  9524.,  9804., 10084., 10364., 10644., 10924., 11204., 11484.,  8832.,  8980.,  9128.,  9276.,  9452.,  9764., 10076., 10388., 10700., 11012., 11324., 11636., 11948., 12260., 12572., 12884.,  9932., 10096., 10260., 10424.,  1628.,  1792.,  1956.,  2120.,  3988.,  4120.,  4252.,  4384.,  4516.,  4648.,  4780.,  4912.,  8308.,  8588.,  8868.,  9148.,  9428.,  9708.,  9988., 10268., 10548., 10828., 11108., 11388.,  5040.,  5188.,  5336.,  5484.,  9228.,  9540.,  9852., 10164., 10476., 10788., 11100., 11412., 11724., 12036., 12348., 12660.,  5564.,  5728.,  5892.,  6056.,  6220.,  6384.,  6548.,  6712.,  7684.,  7816.,  7948.,  8080.,  8212.,  8344.,  8476.,  8608., 16148., 16428., 16708., 16988., 17268., 17548., 17828., 18108., 18388., 18668., 18948., 19228.,  9184.,  9332.,  9480.,  9628., 17964., 18276., 18588., 18900., 19212., 19524., 19836., 20148., 20460., 20772., 21084., 21396., 10156., 10320., 10484., 10648., 10812., 10976., 11140., 11304.,  7235.,  7313.,  7391.,  7469.,  7547.,  7625.,  7703.,  7781., 15148., 15312., 15476., 15640., 15804., 15968., 16132., 16296., 16460., 16624., 16788., 16952.,  8321.,  8407.,  8493.,  8579., 16632., 16812., 16992., 17172., 17352., 17532., 17712., 17892., 18072., 18252., 18432., 18612.,  9095.,  9189.,  9283.,  9377.,  9471.,  9565.,  9659.,  9753.};
  const std::array<int, 4> in_shape = {{ 1, 14, 11, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x11x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   29.,   35.,   41.,   47.,   53.,   59.,   65.,   71.,   77.,   83.,   89.,   95.,  112.,  132.,  152.,  172.,  192.,  212.,  232.,  252.,  272.,  292.,  312.,  332.,  179.,  193.,  207.,  221.,  235.,  249.,  263.,  277.,  291.,  305.,  319.,  333.,  347.,  361.,  375.,  389.,  173.,  179.,  185.,  191.,  197.,  203.,  209.,  215.,  221.,  227.,  233.,  239.,  245.,  251.,  257.,  263.,  672.,  692.,  712.,  732.,  752.,  772.,  792.,  812.,  832.,  852.,  872.,  892.,  571.,  585.,  599.,  613.,  627.,  641.,  655.,  669.,  683.,  697.,  711.,  725.,  739.,  753.,  767.,  781.,  341.,  347.,  353.,  359.,  365.,  371.,  377.,  383.,  389.,  395.,  401.,  407.,  413.,  419.,  425.,  431., 1232., 1252., 1272., 1292., 1312., 1332., 1352., 1372., 1392., 1412., 1432., 1452.,  963.,  977.,  991., 1005., 1019., 1033., 1047., 1061., 1075., 1089., 1103., 1117., 1131., 1145., 1159., 1173.,  509.,  515.,  521.,  527.,  533.,  539.,  545.,  551.,  557.,  563.,  569.,  575.,  581.,  587.,  593.,  599., 1792., 1812., 1832., 1852., 1872., 1892., 1912., 1932., 1952., 1972., 1992., 2012., 1355., 1369., 1383., 1397., 1411., 1425., 1439., 1453., 1467., 1481., 1495., 1509., 1523., 1537., 1551., 1565.,  694.,  722.,  750.,  778.,  806.,  834.,  862.,  890.,  918.,  946.,  974., 1002., 1030., 1058., 1086., 1114., 2744., 2816., 2888., 2960., 3032., 3104., 3176., 3248., 3320., 3392., 3464., 3536., 2130., 2174., 2218., 2262., 2306., 2350., 2394., 2438., 2482., 2526., 2570., 2614., 2658., 2702., 2746., 2790., 1478., 1506., 1534., 1562., 1590., 1618., 1646., 1674., 1702., 1730., 1758., 1786., 1814., 1842., 1870., 1898., 4760., 4832., 4904., 4976., 5048., 5120., 5192., 5264., 5336., 5408., 5480., 5552., 3362., 3406., 3450., 3494., 3538., 3582., 3626., 3670., 3714., 3758., 3802., 3846., 3890., 3934., 3978., 4022., 2262., 2290., 2318., 2346., 2374., 2402., 2430., 2458., 2486., 2514., 2542., 2570., 2598., 2626., 2654., 2682., 6776., 6848., 6920., 6992., 7064., 7136., 7208., 7280., 7352., 7424., 7496., 7568., 4594., 4638., 4682., 4726., 4770., 4814., 4858., 4902., 4946., 4990., 5034., 5078., 5122., 5166., 5210., 5254., 1865., 1887., 1909., 1931., 1953., 1975., 1997., 2019., 2041., 2063., 2085., 2107., 2129., 2151., 2173., 2195., 4760., 4812., 4864., 4916., 4968., 5020., 5072., 5124., 5176., 5228., 5280., 5332., 2903., 2933., 2963., 2993., 3023., 3053., 3083., 3113., 3143., 3173., 3203., 3233., 3263., 3293., 3323., 3353., 2481., 2503., 2525., 2547., 2569., 2591., 2613., 2635., 2657., 2679., 2701., 2723., 2745., 2767., 2789., 2811., 6216., 6268., 6320., 6372., 6424., 6476., 6528., 6580., 6632., 6684., 6736., 6788., 3743., 3773., 3803., 3833., 3863., 3893., 3923., 3953., 3983., 4013., 4043., 4073., 4103., 4133., 4163., 4193., 3097., 3119., 3141., 3163., 3185., 3207., 3229., 3251., 3273., 3295., 3317., 3339., 3361., 3383., 3405., 3427., 7672., 7724., 7776., 7828., 7880., 7932., 7984., 8036., 8088., 8140., 8192., 8244., 4583., 4613., 4643., 4673., 4703., 4733., 4763., 4793., 4823., 4853., 4883., 4913., 4943., 4973., 5003., 5033., 3713., 3735., 3757., 3779., 3801., 3823., 3845., 3867., 3889., 3911., 3933., 3955., 3977., 3999., 4021., 4043., 9128., 9180., 9232., 9284., 9336., 9388., 9440., 9492., 9544., 9596., 9648., 9700., 5423., 5453., 5483., 5513., 5543., 5573., 5603., 5633., 5663., 5693., 5723., 5753., 5783., 5813., 5843., 5873.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 11, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x11x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   500.,  1284.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   420.,  1076.,  1732.,  2388.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.};
  const std::array<int, 4> in_shape = {{ 1, 14, 11, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x11x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   350.,   390.,   430.,   470.,   510.,   550.,   590.,   630.,   740.,   884.,  1028.,  1172.,  1316.,  1460.,  1604.,  1748.,  1892.,  2036.,  2180.,  2324.,  1318.,  1422.,  1526.,  1630.,  1734.,  1838.,  1942.,  2046.,  2150.,  2254.,  2358.,  2462.,  2566.,  2670.,  2774.,  2878.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  1470.,  1510.,  1550.,  1590.,  1630.,  1670.,  1710.,  1750.,  4772.,  4916.,  5060.,  5204.,  5348.,  5492.,  5636.,  5780.,  5924.,  6068.,  6212.,  6356.,  4230.,  4334.,  4438.,  4542.,  4646.,  4750.,  4854.,  4958.,  5062.,  5166.,  5270.,  5374.,  5478.,  5582.,  5686.,  5790.,  2270.,  2310.,  2350.,  2390.,  2430.,  2470.,  2510.,  2550.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,  6244.,  6388.,  6532.,  6676.,  6820.,  6964.,  7108.,  7252.,   740.,   884.,  1028.,  1172.,   486.,   590.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,  1526.,  1630.,  1734.,  1838.,  1942.,  2046.,   830.,   870.,   910.,   950.,   990.,  1030.,  1070.,  1110.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  3620.,  3764.,  3908.,  4052.,  4196.,  4340.,  4484.,  4628.,  4772.,  4916.,  5060.,  5204.,  3398.,  3502.,  3606.,  3710.,  3814.,  3918.,  4022.,  4126.,  4230.,  4334.,  4438.,  4542.,  4646.,  4750.,  4854.,  4958.,  2060.,  2268.,  2476.,  2684.,  2892.,  3100.,  3308.,  3516.,  3724.,  3932.,  4140.,  4348.,  4556.,  4764.,  4972.,  5180.,  8040.,  8584.,  9128.,  9672., 10216., 10760., 11304., 11848., 12392., 12936., 13480., 14024.,  9244.,  9580.,  9916., 10252.,  3932.,  4268.,  4604.,  4940.,  5276.,  5612.,  5948.,  6284.,  6620.,  6956.,  7292.,  7628.,  5324.,  5532.,  5740.,  5948.,  6156.,  6364.,  6572.,  6780.,  6988.,  7196.,  7404.,  7612.,  7820.,  8028.,  8236.,  8444., 16616., 17160., 17704., 18248., 18792., 19336., 19880., 20424., 20968., 21512., 22056., 22600., 11996., 12332., 12668., 13004., 13340., 13676., 14012., 14348., 14684., 15020., 15356., 15692., 16028., 16364., 16700., 17036., 11148., 11356., 11564., 11772., 11980., 12188., 12396., 12604.,  2060.,  2268.,  2476.,  2684.,  2892.,  3100.,  3308.,  3516., 21096., 21640., 22184., 22728., 23272., 23816., 24360., 24904.,  8040.,  8584.,  9128.,  9672.,  6556.,  6892.,  7228.,  7564.,  7900.,  8236.,  8572.,  8908.,  9244.,  9580.,  9916., 10252.,  3932.,  4268.,  4604.,  4940.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  4814.,  4982.,  5150.,  5318.,  5486.,  5654.,  5822.,  5990., 10948., 11348., 11748., 12148., 12548., 12948., 13348., 13748., 14148., 14548., 14948., 15348.,  7574.,  7806.,  8038.,  8270.,  8502.,  8734.,  8966.,  9198.,  9430.,  9662.,  9894., 10126., 10358., 10590., 10822., 11054.,  8174.,  8342.,  8510.,  8678.,  8846.,  9014.,  9182.,  9350.,  9518.,  9686.,  9854., 10022., 10190., 10358., 10526., 10694., 11396., 11796., 12196., 12596., 12996., 13396., 13796., 14196., 14596., 14996., 15396., 15796., 14070., 14302., 14534., 14766.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,  2006.,  2238.,  2470.,  2702.,  2126.,  2294.,  2462.,  2630.,  2798.,  2966.,  3134.,  3302.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  7748.,  8148.,  8548.,  8948.,  9348.,  9748., 10148., 10548., 10948., 11348., 11748., 12148.,  5718.,  5950.,  6182.,  6414.,  6646.,  6878.,  7110.,  7342.,  7574.,  7806.,  8038.,  8270.,  8502.,  8734.,  8966.,  9198.,  6830.,  6998.,  7166.,  7334.,  7502.,  7670.,  7838.,  8006.,  8174.,  8342.,  8510.,  8678.,  8846.,  9014.,  9182.,  9350., 18948., 19348., 19748., 20148., 20548., 20948., 21348., 21748., 11396., 11796., 12196., 12596., 12214., 12446., 12678., 12910., 13142., 13374., 13606., 13838., 14070., 14302., 14534., 14766.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 11, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x12x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  16.,   17.,   18.,   49.,   52.,   55.,   36.,   83.,   88.,   93.,   54.,   57.,   23.,   24.,   25.,   70.,   73.,   76.,   50.,  118.,  123.,  128.,   75.,   78.,   38.,   43.,   48.,  116.,  128.,  140.,   84.,  184.,  200.,  216.,  120.,  129.,   73.,   78.,   83.,  200.,  212.,  224.,  133.,  296.,  312.,  328.,  183.,  192.,  108.,  113.,  118.,  284.,  296.,  308.,  182.,  408.,  424.,  440.,  246.,  255.,   92.,   96.,  100.,  214.,  223.,  232.,  125.,  262.,  273.,  284.,  150.,  156.,  134.,  145.,  156.,  320.,  344.,  368.,  192.,  388.,  416.,  444.,  228.,  243.,  211.,  222.,  233.,  488.,  512.,  536.,  283.,  584.,  612.,  640.,  333.,  348.,  288.,  299.,  310.,  656.,  680.,  704.,  374.,  780.,  808.,  836.,  438.,  453.,  161.,  168.,  175.,  358.,  373.,  388.,  200.,  406.,  423.,  440.,  225.,  234.,  230.,  247.,  264.,  524.,  560.,  596.,  300.,  592.,  632.,  672.,  336.,  357.,  349.,  366.,  383.,  776.,  812.,  848.,  433.,  872.,  912.,  952.,  483.,  504.,  468.,  485.,  502., 1028., 1064., 1100.,  566., 1152., 1192., 1232.,  630.,  651.,  230.,  240.,  250.,  502.,  523.,  544.,  275.,  550.,  573.,  596.,  300.,  312.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x12x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  1.,   2.,   3.,   4.,   7.,  10.,  13.,   8.,  10.,  12.,  14.,   0.,   8.,   9.,  10.,  11.,  28.,  31.,  34.,  22.,  24.,  26.,  28.,   0.,  15.,  16.,  17.,  18.,  49.,  52.,  55.,  36.,  38.,  40.,  42.,   0.,  22.,  23.,  24.,  25.,  70.,  73.,  76.,  50.,  52.,  54.,  56.,   0.,  32.,  36.,  40.,  44., 110., 120., 130.,  80.,  86.,  92.,  98.,   0.,  60.,  64.,  68.,  72., 180., 190., 200., 122., 128., 134., 140.,   0.,  88.,  92.,  96., 100., 250., 260., 270., 164., 170., 176., 182.,   0.,  66.,  69.,  72.,  75., 166., 173., 180., 100., 104., 108., 112.,   0.,  87.,  90.,  93.,  96., 215., 222., 229., 128., 132., 136., 140.,   0., 108., 111., 114., 117., 264., 271., 278., 156., 160., 164., 168.,   0., 129., 132., 135., 138., 313., 320., 327., 184., 188., 192., 196.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x12x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  95.,  101.,  107.,  320.,  340.,  360.,  249.,  588.,  624.,  660.,  391.,  413.,  137.,  143.,  149.,  460.,  480.,  500.,  347.,  840.,  876.,  912.,  545.,  567.,  232.,  268.,  304.,  772.,  860.,  948.,  588., 1308., 1428., 1548.,  872.,  940.,  484.,  520.,  556., 1388., 1476., 1564.,  952., 2148., 2268., 2388., 1348., 1416.,  736.,  772.,  808., 2004., 2092., 2180., 1316., 2988., 3108., 3228., 1824., 1892.,  683.,  713.,  743., 1600., 1668., 1736.,  941., 1980., 2064., 2148., 1139., 1185.,  988., 1072., 1156., 2380., 2564., 2748., 1440., 2916., 3132., 3348., 1724., 1840., 1576., 1660., 1744., 3668., 3852., 4036., 2140., 4428., 4644., 4860., 2536., 2652., 2164., 2248., 2332., 4956., 5140., 5324., 2840., 5940., 6156., 6372., 3348., 3464., 1229., 1283., 1337., 2740., 2856., 2972., 1535., 3120., 3252., 3384., 1733., 1803., 1744., 1876., 2008., 3988., 4268., 4548., 2292., 4524., 4836., 5148., 2576., 2740., 2668., 2800., 2932., 5948., 6228., 6508., 3328., 6708., 7020., 7332., 3724., 3888., 3592., 3724., 3856., 7908., 8188., 8468., 4364., 8892., 9204., 9516., 4872., 5036., 1775., 1853., 1931., 3880., 4044., 4208., 2129., 4260., 4440., 4620., 2327., 2421.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x12x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   40.,   60.,   80.,   53.,   67.,   81.,   95.,    0.,   47.,   53.,   59.,   65.,  180.,  200.,  220.,  151.,  165.,  179.,  193.,    0.,   89.,   95.,  101.,  107.,  320.,  340.,  360.,  249.,  263.,  277.,  291.,    0.,  131.,  137.,  143.,  149.,  460.,  480.,  500.,  347.,  361.,  375.,  389.,    0.,  190.,  218.,  246.,  274.,  728.,  800.,  872.,  558.,  602.,  646.,  690.,    0.,  386.,  414.,  442.,  470., 1232., 1304., 1376.,  866.,  910.,  954.,  998.,    0.,  582.,  610.,  638.,  666., 1736., 1808., 1880., 1174., 1218., 1262., 1306.,    0.,  479.,  501.,  523.,  545., 1220., 1272., 1324.,  743.,  773.,  803.,  833.,    0.,  633.,  655.,  677.,  699., 1584., 1636., 1688.,  953.,  983., 1013., 1043.,    0.,  787.,  809.,  831.,  853., 1948., 2000., 2052., 1163., 1193., 1223., 1253.,    0.,  941.,  963.,  985., 1007., 2312., 2364., 2416., 1373., 1403., 1433., 1463.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x12x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  630.,    30.,    70.,  1636.,  1780.,   260.,   174.,  2740.,  3012.,   596.,   278.,   446.,   270.,   310.,   350.,   980.,  1124.,  1268.,   902.,  1956.,  2228.,  2500.,  1454.,  1622.,   932.,  1204.,  1476.,  2616.,  3288.,  3960.,  2708.,  3800.,  4728.,  5656.,  3940.,  1780.,  2196.,  2468.,  2740.,  5656.,  6328.,  7000.,  3844.,  7608.,  8536.,  9464.,  4948.,  5476.,  4100.,   660.,   932.,  6648.,  7320.,  2616.,  1908.,  9368., 10296.,  3800.,  2884.,  3412.,  1542.,  1774.,  2006.,  3908.,  4436.,  4964.,  2558.,  4884.,  5540.,  6196.,  3110.,  3470.,  3860.,  4516.,  5172.,  6168.,  7608.,  9048.,  6404.,  7352.,  9048., 10744.,  7636.,  2788.,  4740.,  5396.,  6052., 11512., 12952., 14392.,  7156., 13464., 15160., 16856.,  8260.,  9172.,  9332.,  3204.,  3860., 14808., 16248.,  6168.,  4836., 17528., 19224.,  7352.,  5812.,  6724.,  2814.,  3238.,  3662.,  6836.,  7748.,  8660.,  4214.,  7812.,  8852.,  9892.,  4766.,  5318.,  6788.,  7828.,  8868.,  9720., 11928., 14136., 10100., 10904., 13368., 15832., 11332.,  3796.,  7284.,  8324.,  9364., 17368., 19576., 21784., 10468., 19320., 21784., 24248., 11572., 12868., 14564.,  5748.,  6788., 22968., 25176.,  9720.,  7764., 25688., 28152., 10904.,  8740., 10036.,  4086.,  4702.,  5318.,  9764., 11060., 12356.,  5870., 10740., 12164., 13588.,  6422.,  7166.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x12x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   260.,   404.,   548.,   382.,   486.,   590.,   694.,     0.,   310.,   350.,   390.,   430.,  1268.,  1412.,  1556.,  1110.,  1214.,  1318.,  1422.,     0.,   590.,   630.,   670.,   710.,  2276.,  2420.,  2564.,  1838.,  1942.,  2046.,  2150.,     0.,   870.,   910.,   950.,   990.,  3284.,  3428.,  3572.,  2566.,  2670.,  2774.,  2878.,     0.,  1260.,  1468.,  1676.,  1884.,  5224.,  5768.,  6312.,  4140.,  4476.,  4812.,  5148.,     0.,  2716.,  2924.,  3132.,  3340.,  9032.,  9576., 10120.,  6492.,  6828.,  7164.,  7500.,     0.,  4172.,  4380.,  4588.,  4796., 12840., 13384., 13928.,  8844.,  9180.,  9516.,  9852.,     0.,  3638.,  3806.,  3974.,  4142.,  9332.,  9732., 10132.,  5718.,  5950.,  6182.,  6414.,     0.,  4814.,  4982.,  5150.,  5318., 12132., 12532., 12932.,  7342.,  7574.,  7806.,  8038.,     0.,  5990.,  6158.,  6326.,  6494., 14932., 15332., 15732.,  8966.,  9198.,  9430.,  9662.,     0.,  7166.,  7334.,  7502.,  7670., 17732., 18132., 18532., 10590., 10822., 11054., 11286.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x12x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  31.,   32.,   33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,  161.,  166.,  171.,  176.,  181.,  186.,  105.,  108.,  111.,  114.,   45.,   46.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  231.,  236.,  241.,  246.,  251.,  256.,  147.,  150.,  153.,  156.,   71.,   76.,   81.,   86.,   91.,   96.,  220.,  232.,  244.,  256.,  268.,  280.,  161.,  168.,  352.,  368.,  384.,  400.,  416.,  432.,  231.,  240.,  249.,  258.,  141.,  146.,  151.,  156.,  161.,  166.,  388.,  400.,  412.,  424.,  436.,  448.,  259.,  266.,  576.,  592.,  608.,  624.,  640.,  656.,  357.,  366.,  375.,  384.,  211.,  216.,  221.,  226.,  231.,  236.,  556.,  568.,  580.,  592.,  604.,  616.,  357.,  364.,  800.,  816.,  832.,  848.,  864.,  880.,  483.,  492.,  501.,  510.,  180.,  184.,  188.,  192.,  196.,  200.,  419.,  428.,  437.,  446.,  455.,  464.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  306.,  312.,  257.,  268.,  279.,  290.,  301.,  312.,  616.,  640.,  664.,  688.,  712.,  736.,  371.,  384.,  748.,  776.,  804.,  832.,  860.,  888.,  441.,  456.,  471.,  486.,  411.,  422.,  433.,  444.,  455.,  466.,  952.,  976., 1000., 1024., 1048., 1072.,  553.,  566., 1140., 1168., 1196., 1224., 1252., 1280.,  651.,  666.,  681.,  696.,  565.,  576.,  587.,  598.,  609.,  620., 1288., 1312., 1336., 1360., 1384., 1408.,  735.,  748., 1532., 1560., 1588., 1616., 1644., 1672.,  861.,  876.,  891.,  906.,  315.,  322.,  329.,  336.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  795.,  812.,  829.,  846.,  863.,  880.,  441.,  450.,  459.,  468.,  443.,  460.,  477.,  494.,  511.,  528., 1012., 1048., 1084., 1120., 1156., 1192.,  581.,  600., 1144., 1184., 1224., 1264., 1304., 1344.,  651.,  672.,  693.,  714.,  681.,  698.,  715.,  732.,  749.,  766., 1516., 1552., 1588., 1624., 1660., 1696.,  847.,  866., 1704., 1744., 1784., 1824., 1864., 1904.,  945.,  966.,  987., 1008.,  919.,  936.,  953.,  970.,  987., 1004., 2020., 2056., 2092., 2128., 2164., 2200., 1113., 1132., 2264., 2304., 2344., 2384., 2424., 2464., 1239., 1260., 1281., 1302.,  450.,  460.,  470.,  480.,  490.,  500.,  983., 1004., 1025., 1046., 1067., 1088.,  539.,  550., 1077., 1100., 1123., 1146., 1169., 1192.,  588.,  600.,  612.,  624.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x12x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,  11.,  14.,  17.,  20.,  23.,  26.,  14.,  16.,  18.,  20.,  22.,  24.,  26.,  28.,   0.,   0.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  53.,  56.,  59.,  62.,  65.,  68.,  42.,  44.,  46.,  48.,  50.,  52.,  54.,  56.,   0.,   0.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,  95.,  98., 101., 104., 107., 110.,  70.,  72.,  74.,  76.,  78.,  80.,  82.,  84.,   0.,   0.,  43.,  44.,  45.,  46.,  47.,  48.,  49.,  50., 137., 140., 143., 146., 149., 152.,  98., 100., 102., 104., 106., 108., 110., 112.,   0.,   0.,  60.,  64.,  68.,  72.,  76.,  80.,  84.,  88., 210., 220., 230., 240., 250., 260., 154., 160., 166., 172., 178., 184., 190., 196.,   0.,   0., 116., 120., 124., 128., 132., 136., 140., 144., 350., 360., 370., 380., 390., 400., 238., 244., 250., 256., 262., 268., 274., 280.,   0.,   0., 172., 176., 180., 184., 188., 192., 196., 200., 490., 500., 510., 520., 530., 540., 322., 328., 334., 340., 346., 352., 358., 364.,   0.,   0., 129., 132., 135., 138., 141., 144., 147., 150., 325., 332., 339., 346., 353., 360., 196., 200., 204., 208., 212., 216., 220., 224.,   0.,   0., 171., 174., 177., 180., 183., 186., 189., 192., 423., 430., 437., 444., 451., 458., 252., 256., 260., 264., 268., 272., 276., 280.,   0.,   0., 213., 216., 219., 222., 225., 228., 231., 234., 521., 528., 535., 542., 549., 556., 308., 312., 316., 320., 324., 328., 332., 336.,   0.,   0., 255., 258., 261., 264., 267., 270., 273., 276., 619., 626., 633., 640., 647., 654., 364., 368., 372., 376., 380., 384., 388., 392.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x12x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  185.,   191.,   197.,   203.,   209.,   215.,   624.,   644.,   664.,   684.,   704.,   724.,   487.,   501.,  1148.,  1184.,  1220.,  1256.,  1292.,  1328.,   765.,   787.,   809.,   831.,   269.,   275.,   281.,   287.,   293.,   299.,   904.,   924.,   944.,   964.,   984.,  1004.,   683.,   697.,  1652.,  1688.,  1724.,  1760.,  1796.,  1832.,  1073.,  1095.,  1117.,  1139.,   436.,   472.,   508.,   544.,   580.,   616.,  1476.,  1564.,  1652.,  1740.,  1828.,  1916.,  1136.,  1188.,  2524.,  2644.,  2764.,  2884.,  3004.,  3124.,  1692.,  1760.,  1828.,  1896.,   940.,   976.,  1012.,  1048.,  1084.,  1120.,  2708.,  2796.,  2884.,  2972.,  3060.,  3148.,  1864.,  1916.,  4204.,  4324.,  4444.,  4564.,  4684.,  4804.,  2644.,  2712.,  2780.,  2848.,  1444.,  1480.,  1516.,  1552.,  1588.,  1624.,  3940.,  4028.,  4116.,  4204.,  4292.,  4380.,  2592.,  2644.,  5884.,  6004.,  6124.,  6244.,  6364.,  6484.,  3596.,  3664.,  3732.,  3800.,  1343.,  1373.,  1403.,  1433.,  1463.,  1493.,  3148.,  3216.,  3284.,  3352.,  3420.,  3488.,  1853.,  1891.,  3896.,  3980.,  4064.,  4148.,  4232.,  4316.,  2243.,  2289.,  2335.,  2381.,  1912.,  1996.,  2080.,  2164.,  2248.,  2332.,  4620.,  4804.,  4988.,  5172.,  5356.,  5540.,  2804.,  2904.,  5668.,  5884.,  6100.,  6316.,  6532.,  6748.,  3360.,  3476.,  3592.,  3708.,  3088.,  3172.,  3256.,  3340.,  3424.,  3508.,  7196.,  7380.,  7564.,  7748.,  7932.,  8116.,  4204.,  4304.,  8692.,  8908.,  9124.,  9340.,  9556.,  9772.,  4984.,  5100.,  5216.,  5332.,  4264.,  4348.,  4432.,  4516.,  4600.,  4684.,  9772.,  9956., 10140., 10324., 10508., 10692.,  5604.,  5704., 11716., 11932., 12148., 12364., 12580., 12796.,  6608.,  6724.,  6840.,  6956.,  2417.,  2471.,  2525.,  2579.,  2633.,  2687.,  5392.,  5508.,  5624.,  5740.,  5856.,  5972.,  3023.,  3085.,  6140.,  6272.,  6404.,  6536.,  6668.,  6800.,  3413.,  3483.,  3553.,  3623.,  3388.,  3520.,  3652.,  3784.,  3916.,  4048.,  7764.,  8044.,  8324.,  8604.,  8884.,  9164.,  4472.,  4620.,  8812.,  9124.,  9436.,  9748., 10060., 10372.,  5028.,  5192.,  5356.,  5520.,  5236.,  5368.,  5500.,  5632.,  5764.,  5896., 11684., 11964., 12244., 12524., 12804., 13084.,  6544.,  6692., 13180., 13492., 13804., 14116., 14428., 14740.,  7324.,  7488.,  7652.,  7816.,  7084.,  7216.,  7348.,  7480.,  7612.,  7744., 15604., 15884., 16164., 16444., 16724., 17004.,  8616.,  8764., 17548., 17860., 18172., 18484., 18796., 19108.,  9620.,  9784.,  9948., 10112.,  3491.,  3569.,  3647.,  3725.,  3803.,  3881.,  7636.,  7800.,  7964.,  8128.,  8292.,  8456.,  4193.,  4279.,  8384.,  8564.,  8744.,  8924.,  9104.,  9284.,  4583.,  4677.,  4771.,  4865.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x12x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   29.,   35.,   41.,   47.,   64.,   84.,  104.,  124.,  144.,  164.,   95.,  109.,  123.,  137.,  151.,  165.,  179.,  193.,    0.,    0.,   89.,   95.,  101.,  107.,  113.,  119.,  125.,  131.,  344.,  364.,  384.,  404.,  424.,  444.,  291.,  305.,  319.,  333.,  347.,  361.,  375.,  389.,    0.,    0.,  173.,  179.,  185.,  191.,  197.,  203.,  209.,  215.,  624.,  644.,  664.,  684.,  704.,  724.,  487.,  501.,  515.,  529.,  543.,  557.,  571.,  585.,    0.,    0.,  257.,  263.,  269.,  275.,  281.,  287.,  293.,  299.,  904.,  924.,  944.,  964.,  984., 1004.,  683.,  697.,  711.,  725.,  739.,  753.,  767.,  781.,    0.,    0.,  358.,  386.,  414.,  442.,  470.,  498.,  526.,  554., 1400., 1472., 1544., 1616., 1688., 1760., 1082., 1126., 1170., 1214., 1258., 1302., 1346., 1390.,    0.,    0.,  750.,  778.,  806.,  834.,  862.,  890.,  918.,  946., 2408., 2480., 2552., 2624., 2696., 2768., 1698., 1742., 1786., 1830., 1874., 1918., 1962., 2006.,    0.,    0., 1142., 1170., 1198., 1226., 1254., 1282., 1310., 1338., 3416., 3488., 3560., 3632., 3704., 3776., 2314., 2358., 2402., 2446., 2490., 2534., 2578., 2622.,    0.,    0.,  941.,  963.,  985., 1007., 1029., 1051., 1073., 1095., 2400., 2452., 2504., 2556., 2608., 2660., 1463., 1493., 1523., 1553., 1583., 1613., 1643., 1673.,    0.,    0., 1249., 1271., 1293., 1315., 1337., 1359., 1381., 1403., 3128., 3180., 3232., 3284., 3336., 3388., 1883., 1913., 1943., 1973., 2003., 2033., 2063., 2093.,    0.,    0., 1557., 1579., 1601., 1623., 1645., 1667., 1689., 1711., 3856., 3908., 3960., 4012., 4064., 4116., 2303., 2333., 2363., 2393., 2423., 2453., 2483., 2513.,    0.,    0., 1865., 1887., 1909., 1931., 1953., 1975., 1997., 2019., 4584., 4636., 4688., 4740., 4792., 4844., 2723., 2753., 2783., 2813., 2843., 2873., 2903., 2933.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x12x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  590.,   630.,    30.,    70.,   110.,   150.,  1508.,  1652.,  1796.,  1940.,   420.,   564.,   278.,   382.,  2612.,  2884.,  3156.,  3428.,  1012.,  1284.,   446.,   614.,   782.,   950.,   510.,   550.,   590.,   630.,    30.,    70.,  1220.,  1364.,  1508.,  1652.,  1796.,  1940.,    70.,   174.,  2068.,  2340.,  2612.,  2884.,  3156.,  3428.,   110.,   278.,   446.,   614.,  1044.,  1316.,  1588.,  1860.,  2132.,  2404.,  3128.,  3800.,  4472.,  5144.,  5816.,  6488.,  3492.,  3892.,  4312.,  5240.,  6168.,  7096.,  8024.,  8952.,  4852.,  5380.,  3220.,  3748.,   500.,   772.,  1044.,  1316.,  1588.,  1860.,  7160.,  7832.,  3128.,  3800.,  4472.,  5144.,  2692.,  3092.,  9880., 10808.,  4312.,  5240.,  6168.,  7096.,  3796.,  4324.,  4852.,  5380.,  3668.,  3940.,   500.,   772.,  1044.,  1316.,  5816.,  6488.,  7160.,  7832.,  3128.,  3800.,  1892.,  2292.,  8024.,  8952.,  9880., 10808.,  4312.,  5240.,  2740.,  3268.,  3796.,  4324.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,  3764.,  4292.,  4820.,  5348.,  5876.,  6404.,   190.,   486.,  4612.,  5268.,  5924.,  6580.,  7236.,  7892.,   230.,   590.,   950.,  1310.,  3588.,  4244.,  4900.,  5556.,  6212.,  6868.,  6680.,  8120.,  9560., 11000., 12440., 13880.,  7572.,  8356.,  7864.,  9560., 11256., 12952., 14648., 16344.,  8932.,  9844.,  4996.,  5908.,  2276.,  2932.,  3588.,  4244.,  4900.,  5556., 15320., 16760.,  6680.,  8120.,  9560., 11000.,  6004.,  6788., 18040., 19736.,  7864.,  9560., 11256., 12952.,  7108.,  8020.,  8932.,  9844.,  7748.,  8404.,  2276.,  2932.,  3588.,  4244., 12440., 13880., 15320., 16760.,  6680.,  8120.,  4436.,  5220., 14648., 16344., 18040., 19736.,  7864.,  9560.,  5284.,  6196.,  7108.,  8020.,  5358.,  5782.,  6206.,  6630.,   270.,   694.,  6308.,  7220.,  8132.,  9044.,  9956., 10868.,   310.,   798.,  7156.,  8196.,  9236., 10276., 11316., 12356.,   350.,   902.,  1454.,  2006.,  6132.,  7172.,  8212.,  9252., 10292., 11332., 10232., 12440., 14648., 16856., 19064., 21272., 11652., 12820., 11416., 13880., 16344., 18808., 21272., 23736., 13012., 14308.,  6772.,  8068.,  4052.,  5092.,  6132.,  7172.,  8212.,  9252., 23480., 25688., 10232., 12440., 14648., 16856.,  9316., 10484., 26200., 28664., 11416., 13880., 16344., 18808., 10420., 11716., 13012., 14308., 11828., 12868.,  4052.,  5092.,  6132.,  7172., 19064., 21272., 23480., 25688., 10232., 12440.,  6980.,  8148., 21272., 23736., 26200., 28664., 11416., 13880.,  7828.,  9124., 10420., 11716.,  7782.,  8398.,  9014.,  9630.,   390.,  1006.,  8852., 10148., 11444., 12740., 14036., 15332.,   430.,  1110.,  9700., 11124., 12548., 13972., 15396., 16820.,   470.,  1214.,  1958.,  2702.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x12x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   420.,   564.,   708.,   852.,   996.,  1140.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,     0.,     0.,   590.,   630.,   670.,   710.,   750.,   790.,   830.,   870.,  2436.,  2580.,  2724.,  2868.,  3012.,  3156.,  2150.,  2254.,  2358.,  2462.,  2566.,  2670.,  2774.,  2878.,     0.,     0.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  4452.,  4596.,  4740.,  4884.,  5028.,  5172.,  3606.,  3710.,  3814.,  3918.,  4022.,  4126.,  4230.,  4334.,     0.,     0.,  1710.,  1750.,  1790.,  1830.,  1870.,  1910.,  1950.,  1990.,  6468.,  6612.,  6756.,  6900.,  7044.,  7188.,  5062.,  5166.,  5270.,  5374.,  5478.,  5582.,  5686.,  5790.,     0.,     0.,  2380.,  2588.,  2796.,  3004.,  3212.,  3420.,  3628.,  3836.,  7528.,  8072.,  8616.,  9160.,  9704., 10248.,  8060.,  8396.,  2076.,  2412.,  2748.,  3084.,  3420.,  3756.,     0.,     0.,  2732.,  2940.,  3148.,  3356.,  3564.,  3772.,  3980.,  4188.,  8488.,  9032.,  9576., 10120., 10664., 11208.,  6108.,  6444.,  6780.,  7116.,  7452.,  7788.,  8124.,  8460.,     0.,     0.,  5644.,  5852.,  6060.,  6268.,  6476.,  6684.,  6892.,  7100., 16104., 16648., 17192., 17736., 18280., 18824., 10812., 11148., 11484., 11820., 12156., 12492., 12828., 13164.,     0.,     0.,  7166.,  7334.,  7502.,  7670.,  7838.,  8006.,  8174.,  8342., 18404., 18804., 19204., 19604., 20004., 20404., 11286., 11518., 11750., 11982., 12214., 12446., 12678., 12910.,     0.,     0.,  9518.,  9686.,  9854., 10022., 10190., 10358., 10526., 10694., 13252., 13652., 14052., 14452., 14852., 15252., 14534., 14766.,   150.,   382.,   614.,   846.,  1078.,  1310.,     0.,     0.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  4004.,  4404.,  4804.,  5204.,  5604.,  6004.,  2934.,  3166.,  3398.,  3630.,  3862.,  4094.,  4326.,  4558.,     0.,     0.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  9604., 10004., 10404., 10804., 11204., 11604.,  6182.,  6414.,  6646.,  6878.,  7110.,  7342.,  7574.,  7806.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x12x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  61.,   62.,   63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  317.,  322.,  327.,  332.,  337.,  342.,  347.,  352.,  357.,  362.,  367.,  372.,  207.,  210.,  213.,  216.,  219.,  222.,  225.,  228.,   89.,   90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  457.,  462.,  467.,  472.,  477.,  482.,  487.,  492.,  497.,  502.,  507.,  512.,  291.,  294.,  297.,  300.,  303.,  306.,  309.,  312.,  137.,  142.,  147.,  152.,  157.,  162.,  167.,  172.,  177.,  182.,  187.,  192.,  428.,  440.,  452.,  464.,  476.,  488.,  500.,  512.,  524.,  536.,  548.,  560.,  315.,  322.,  329.,  336.,  688.,  704.,  720.,  736.,  752.,  768.,  784.,  800.,  816.,  832.,  848.,  864.,  453.,  462.,  471.,  480.,  489.,  498.,  507.,  516.,  277.,  282.,  287.,  292.,  297.,  302.,  307.,  312.,  317.,  322.,  327.,  332.,  764.,  776.,  788.,  800.,  812.,  824.,  836.,  848.,  860.,  872.,  884.,  896.,  511.,  518.,  525.,  532., 1136., 1152., 1168., 1184., 1200., 1216., 1232., 1248., 1264., 1280., 1296., 1312.,  705.,  714.,  723.,  732.,  741.,  750.,  759.,  768.,  417.,  422.,  427.,  432.,  437.,  442.,  447.,  452.,  457.,  462.,  467.,  472., 1100., 1112., 1124., 1136., 1148., 1160., 1172., 1184., 1196., 1208., 1220., 1232.,  707.,  714.,  721.,  728., 1584., 1600., 1616., 1632., 1648., 1664., 1680., 1696., 1712., 1728., 1744., 1760.,  957.,  966.,  975.,  984.,  993., 1002., 1011., 1020.,  356.,  360.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,  396.,  400.,  829.,  838.,  847.,  856.,  865.,  874.,  883.,  892.,  901.,  910.,  919.,  928.,  485.,  490.,  495.,  500., 1015., 1026., 1037., 1048., 1059., 1070., 1081., 1092., 1103., 1114., 1125., 1136.,  582.,  588.,  594.,  600.,  606.,  612.,  618.,  624.,  503.,  514.,  525.,  536.,  547.,  558.,  569.,  580.,  591.,  602.,  613.,  624., 1208., 1232., 1256., 1280., 1304., 1328., 1352., 1376., 1400., 1424., 1448., 1472.,  729.,  742.,  755.,  768., 1468., 1496., 1524., 1552., 1580., 1608., 1636., 1664., 1692., 1720., 1748., 1776.,  867.,  882.,  897.,  912.,  927.,  942.,  957.,  972.,  811.,  822.,  833.,  844.,  855.,  866.,  877.,  888.,  899.,  910.,  921.,  932., 1880., 1904., 1928., 1952., 1976., 2000., 2024., 2048., 2072., 2096., 2120., 2144., 1093., 1106., 1119., 1132., 2252., 2280., 2308., 2336., 2364., 2392., 2420., 2448., 2476., 2504., 2532., 2560., 1287., 1302., 1317., 1332., 1347., 1362., 1377., 1392., 1119., 1130., 1141., 1152., 1163., 1174., 1185., 1196., 1207., 1218., 1229., 1240., 2552., 2576., 2600., 2624., 2648., 2672., 2696., 2720., 2744., 2768., 2792., 2816., 1457., 1470., 1483., 1496., 3036., 3064., 3092., 3120., 3148., 3176., 3204., 3232., 3260., 3288., 3316., 3344., 1707., 1722., 1737., 1752., 1767., 1782., 1797., 1812.,  623.,  630.,  637.,  644.,  651.,  658.,  665.,  672.,  679.,  686.,  693.,  700., 1387., 1402., 1417., 1432., 1447., 1462., 1477., 1492., 1507., 1522., 1537., 1552.,  776.,  784.,  792.,  800., 1573., 1590., 1607., 1624., 1641., 1658., 1675., 1692., 1709., 1726., 1743., 1760.,  873.,  882.,  891.,  900.,  909.,  918.,  927.,  936.,  869.,  886.,  903.,  920.,  937.,  954.,  971.,  988., 1005., 1022., 1039., 1056., 1988., 2024., 2060., 2096., 2132., 2168., 2204., 2240., 2276., 2312., 2348., 2384., 1143., 1162., 1181., 1200., 2248., 2288., 2328., 2368., 2408., 2448., 2488., 2528., 2568., 2608., 2648., 2688., 1281., 1302., 1323., 1344., 1365., 1386., 1407., 1428., 1345., 1362., 1379., 1396., 1413., 1430., 1447., 1464., 1481., 1498., 1515., 1532., 2996., 3032., 3068., 3104., 3140., 3176., 3212., 3248., 3284., 3320., 3356., 3392., 1675., 1694., 1713., 1732., 3368., 3408., 3448., 3488., 3528., 3568., 3608., 3648., 3688., 3728., 3768., 3808., 1869., 1890., 1911., 1932., 1953., 1974., 1995., 2016., 1821., 1838., 1855., 1872., 1889., 1906., 1923., 1940., 1957., 1974., 1991., 2008., 4004., 4040., 4076., 4112., 4148., 4184., 4220., 4256., 4292., 4328., 4364., 4400., 2207., 2226., 2245., 2264., 4488., 4528., 4568., 4608., 4648., 4688., 4728., 4768., 4808., 4848., 4888., 4928., 2457., 2478., 2499., 2520., 2541., 2562., 2583., 2604.,  890.,  900.,  910.,  920.,  930.,  940.,  950.,  960.,  970.,  980.,  990., 1000., 1945., 1966., 1987., 2008., 2029., 2050., 2071., 2092., 2113., 2134., 2155., 2176., 1067., 1078., 1089., 1100., 2131., 2154., 2177., 2200., 2223., 2246., 2269., 2292., 2315., 2338., 2361., 2384., 1164., 1176., 1188., 1200., 1212., 1224., 1236., 1248.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x12x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,    9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   19.,   22.,   25.,   28.,   31.,   34.,   37.,   40.,   43.,   46.,   49.,   52.,   26.,   28.,   30.,   32.,   34.,   36.,   38.,   40.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,    0.,    0.,    0.,    0.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,  103.,  106.,  109.,  112.,  115.,  118.,  121.,  124.,  127.,  130.,  133.,  136.,   82.,   84.,   86.,   88.,   90.,   92.,   94.,   96.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,    0.,    0.,    0.,    0.,   57.,   58.,   59.,   60.,   61.,   62.,   63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  146.,  148.,  150.,  152.,  154.,  156.,  158.,  160.,  162.,  164.,  166.,  168.,    0.,    0.,    0.,    0.,   85.,   86.,   87.,   88.,   89.,   90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  202.,  204.,  206.,  208.,  210.,  212.,  214.,  216.,  218.,  220.,  222.,  224.,    0.,    0.,    0.,    0.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  148.,  152.,  156.,  160.,  164.,  168.,  172.,  176.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  302.,  308.,  314.,  320.,  326.,  332.,  338.,  344.,  350.,  356.,  362.,  368.,  374.,  380.,  386.,  392.,    0.,    0.,    0.,    0.,  228.,  232.,  236.,  240.,  244.,  248.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,  284.,  288.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  470.,  476.,  482.,  488.,  494.,  500.,  506.,  512.,  518.,  524.,  530.,  536.,  542.,  548.,  554.,  560.,    0.,    0.,    0.,    0.,  340.,  344.,  348.,  352.,  356.,  360.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,  396.,  400.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080.,  638.,  644.,  650.,  656.,  662.,  668.,  674.,  680.,  686.,  692.,  698.,  704.,  710.,  716.,  722.,  728.,    0.,    0.,    0.,    0.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  279.,  282.,  285.,  288.,  291.,  294.,  297.,  300.,  643.,  650.,  657.,  664.,  671.,  678.,  685.,  692.,  699.,  706.,  713.,  720.,  388.,  392.,  396.,  400.,  404.,  408.,  412.,  416.,  420.,  424.,  428.,  432.,  436.,  440.,  444.,  448.,    0.,    0.,    0.,    0.,  339.,  342.,  345.,  348.,  351.,  354.,  357.,  360.,  363.,  366.,  369.,  372.,  375.,  378.,  381.,  384.,  839.,  846.,  853.,  860.,  867.,  874.,  881.,  888.,  895.,  902.,  909.,  916.,  500.,  504.,  508.,  512.,  516.,  520.,  524.,  528.,  532.,  536.,  540.,  544.,  548.,  552.,  556.,  560.,    0.,    0.,    0.,    0.,  423.,  426.,  429.,  432.,  435.,  438.,  441.,  444.,  447.,  450.,  453.,  456.,  459.,  462.,  465.,  468., 1035., 1042., 1049., 1056., 1063., 1070., 1077., 1084., 1091., 1098., 1105., 1112.,  612.,  616.,  620.,  624.,  628.,  632.,  636.,  640.,  644.,  648.,  652.,  656.,  660.,  664.,  668.,  672.,    0.,    0.,    0.,    0.,  507.,  510.,  513.,  516.,  519.,  522.,  525.,  528.,  531.,  534.,  537.,  540.,  543.,  546.,  549.,  552., 1231., 1238., 1245., 1252., 1259., 1266., 1273., 1280., 1287., 1294., 1301., 1308.,  724.,  728.,  732.,  736.,  740.,  744.,  748.,  752.,  756.,  760.,  764.,  768.,  772.,  776.,  780.,  784.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x12x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  365.,   371.,   377.,   383.,   389.,   395.,   401.,   407.,   413.,   419.,   425.,   431.,  1232.,  1252.,  1272.,  1292.,  1312.,  1332.,  1352.,  1372.,  1392.,  1412.,  1432.,  1452.,   963.,   977.,   991.,  1005.,  2268.,  2304.,  2340.,  2376.,  2412.,  2448.,  2484.,  2520.,  2556.,  2592.,  2628.,  2664.,  1513.,  1535.,  1557.,  1579.,  1601.,  1623.,  1645.,  1667.,   533.,   539.,   545.,   551.,   557.,   563.,   569.,   575.,   581.,   587.,   593.,   599.,  1792.,  1812.,  1832.,  1852.,  1872.,  1892.,  1912.,  1932.,  1952.,  1972.,  1992.,  2012.,  1355.,  1369.,  1383.,  1397.,  3276.,  3312.,  3348.,  3384.,  3420.,  3456.,  3492.,  3528.,  3564.,  3600.,  3636.,  3672.,  2129.,  2151.,  2173.,  2195.,  2217.,  2239.,  2261.,  2283.,   844.,   880.,   916.,   952.,   988.,  1024.,  1060.,  1096.,  1132.,  1168.,  1204.,  1240.,  2116.,  2204.,  2292.,  2380.,  2468.,  2556.,  2644.,  2732.,  2820.,  2908.,  2996.,  3084.,  2232.,  2284.,  2336.,  2388.,  3164.,  3284.,  3404.,  3524.,  3644.,  3764.,  3884.,  4004.,  4124.,  4244.,  4364.,  4484.,  3332.,  3400.,  3468.,  3536.,   788.,   856.,   924.,   992.,  1084.,  1120.,  1156.,  1192.,  1228.,  1264.,  1300.,  1336.,  1372.,  1408.,  1444.,  1480.,  2788.,  2876.,  2964.,  3052.,  3140.,  3228.,  3316.,  3404.,  3492.,  3580.,  3668.,  3756.,  1896.,  1948.,  2000.,  2052.,  3708.,  3828.,  3948.,  4068.,  4188.,  4308.,  4428.,  4548.,  4668.,  4788.,  4908.,  5028.,  2420.,  2488.,  2556.,  2624.,  2692.,  2760.,  2828.,  2896.,  2092.,  2128.,  2164.,  2200.,  2236.,  2272.,  2308.,  2344.,  2380.,  2416.,  2452.,  2488.,  5252.,  5340.,  5428.,  5516.,  5604.,  5692.,  5780.,  5868.,  5956.,  6044.,  6132.,  6220.,  3352.,  3404.,  3456.,  3508.,  7068.,  7188.,  7308.,  7428.,  7548.,  7668.,  7788.,  7908.,  8028.,  8148.,  8268.,  8388.,  4324.,  4392.,  4460.,  4528.,  4596.,  4664.,  4732.,  4800.,  2663.,  2693.,  2723.,  2753.,  2783.,  2813.,  2843.,  2873.,  2903.,  2933.,  2963.,  2993.,  6244.,  6312.,  6380.,  6448.,  6516.,  6584.,  6652.,  6720.,  6788.,  6856.,  6924.,  6992.,  3677.,  3715.,  3753.,  3791.,  7728.,  7812.,  7896.,  7980.,  8064.,  8148.,  8232.,  8316.,  8400.,  8484.,  8568.,  8652.,  4451.,  4497.,  4543.,  4589.,  4635.,  4681.,  4727.,  4773.,  3760.,  3844.,  3928.,  4012.,  4096.,  4180.,  4264.,  4348.,  4432.,  4516.,  4600.,  4684.,  5260.,  5444.,  5628.,  5812.,  5996.,  6180.,  6364.,  6548.,  6732.,  6916.,  7100.,  7284.,  5532.,  5632.,  5732.,  5832.,  6308.,  6524.,  6740.,  6956.,  7172.,  7388.,  7604.,  7820.,  8036.,  8252.,  8468.,  8684.,  6632.,  6748.,  6864.,  6980.,  1208.,  1324.,  1440.,  1556.,  2272.,  2356.,  2440.,  2524.,  2608.,  2692.,  2776.,  2860.,  2944.,  3028.,  3112.,  3196.,  5548.,  5732.,  5916.,  6100.,  6284.,  6468.,  6652.,  6836.,  7020.,  7204.,  7388.,  7572.,  3468.,  3568.,  3668.,  3768.,  6468.,  6684.,  6900.,  7116.,  7332.,  7548.,  7764.,  7980.,  8196.,  8412.,  8628.,  8844.,  3992.,  4108.,  4224.,  4340.,  4456.,  4572.,  4688.,  4804.,  4624.,  4708.,  4792.,  4876.,  4960.,  5044.,  5128.,  5212.,  5296.,  5380.,  5464.,  5548., 10700., 10884., 11068., 11252., 11436., 11620., 11804., 11988., 12172., 12356., 12540., 12724.,  6268.,  6368.,  6468.,  6568., 12516., 12732., 12948., 13164., 13380., 13596., 13812., 14028., 14244., 14460., 14676., 14892.,  7240.,  7356.,  7472.,  7588.,  7704.,  7820.,  7936.,  8052.,  4793.,  4847.,  4901.,  4955.,  5009.,  5063.,  5117.,  5171.,  5225.,  5279.,  5333.,  5387., 10696., 10812., 10928., 11044., 11160., 11276., 11392., 11508., 11624., 11740., 11856., 11972.,  5999.,  6061.,  6123.,  6185., 12180., 12312., 12444., 12576., 12708., 12840., 12972., 13104., 13236., 13368., 13500., 13632.,  6773.,  6843.,  6913.,  6983.,  7053.,  7123.,  7193.,  7263.,  6676.,  6808.,  6940.,  7072.,  7204.,  7336.,  7468.,  7600.,  7732.,  7864.,  7996.,  8128.,  8404.,  8684.,  8964.,  9244.,  9524.,  9804., 10084., 10364., 10644., 10924., 11204., 11484.,  8832.,  8980.,  9128.,  9276.,  9452.,  9764., 10076., 10388., 10700., 11012., 11324., 11636., 11948., 12260., 12572., 12884.,  9932., 10096., 10260., 10424.,  1628.,  1792.,  1956.,  2120.,  3460.,  3592.,  3724.,  3856.,  3988.,  4120.,  4252.,  4384.,  4516.,  4648.,  4780.,  4912.,  8308.,  8588.,  8868.,  9148.,  9428.,  9708.,  9988., 10268., 10548., 10828., 11108., 11388.,  5040.,  5188.,  5336.,  5484.,  9228.,  9540.,  9852., 10164., 10476., 10788., 11100., 11412., 11724., 12036., 12348., 12660.,  5564.,  5728.,  5892.,  6056.,  6220.,  6384.,  6548.,  6712.,  7156.,  7288.,  7420.,  7552.,  7684.,  7816.,  7948.,  8080.,  8212.,  8344.,  8476.,  8608., 16148., 16428., 16708., 16988., 17268., 17548., 17828., 18108., 18388., 18668., 18948., 19228.,  9184.,  9332.,  9480.,  9628., 17964., 18276., 18588., 18900., 19212., 19524., 19836., 20148., 20460., 20772., 21084., 21396., 10156., 10320., 10484., 10648., 10812., 10976., 11140., 11304.,  6923.,  7001.,  7079.,  7157.,  7235.,  7313.,  7391.,  7469.,  7547.,  7625.,  7703.,  7781., 15148., 15312., 15476., 15640., 15804., 15968., 16132., 16296., 16460., 16624., 16788., 16952.,  8321.,  8407.,  8493.,  8579., 16632., 16812., 16992., 17172., 17352., 17532., 17712., 17892., 18072., 18252., 18432., 18612.,  9095.,  9189.,  9283.,  9377.,  9471.,  9565.,  9659.,  9753.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x12x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   29.,   35.,   41.,   47.,   53.,   59.,   65.,   71.,   77.,   83.,   89.,   95.,  112.,  132.,  152.,  172.,  192.,  212.,  232.,  252.,  272.,  292.,  312.,  332.,  179.,  193.,  207.,  221.,  235.,  249.,  263.,  277.,  291.,  305.,  319.,  333.,  347.,  361.,  375.,  389.,    0.,    0.,    0.,    0.,  173.,  179.,  185.,  191.,  197.,  203.,  209.,  215.,  221.,  227.,  233.,  239.,  245.,  251.,  257.,  263.,  672.,  692.,  712.,  732.,  752.,  772.,  792.,  812.,  832.,  852.,  872.,  892.,  571.,  585.,  599.,  613.,  627.,  641.,  655.,  669.,  683.,  697.,  711.,  725.,  739.,  753.,  767.,  781.,    0.,    0.,    0.,    0.,  341.,  347.,  353.,  359.,  365.,  371.,  377.,  383.,  389.,  395.,  401.,  407.,  413.,  419.,  425.,  431., 1232., 1252., 1272., 1292., 1312., 1332., 1352., 1372., 1392., 1412., 1432., 1452.,  963.,  977.,  991., 1005., 1019., 1033., 1047., 1061., 1075., 1089., 1103., 1117., 1131., 1145., 1159., 1173.,    0.,    0.,    0.,    0.,  509.,  515.,  521.,  527.,  533.,  539.,  545.,  551.,  557.,  563.,  569.,  575.,  581.,  587.,  593.,  599., 1792., 1812., 1832., 1852., 1872., 1892., 1912., 1932., 1952., 1972., 1992., 2012., 1355., 1369., 1383., 1397., 1411., 1425., 1439., 1453., 1467., 1481., 1495., 1509., 1523., 1537., 1551., 1565.,    0.,    0.,    0.,    0.,  694.,  722.,  750.,  778.,  806.,  834.,  862.,  890.,  918.,  946.,  974., 1002., 1030., 1058., 1086., 1114., 2744., 2816., 2888., 2960., 3032., 3104., 3176., 3248., 3320., 3392., 3464., 3536., 2130., 2174., 2218., 2262., 2306., 2350., 2394., 2438., 2482., 2526., 2570., 2614., 2658., 2702., 2746., 2790.,    0.,    0.,    0.,    0., 1478., 1506., 1534., 1562., 1590., 1618., 1646., 1674., 1702., 1730., 1758., 1786., 1814., 1842., 1870., 1898., 4760., 4832., 4904., 4976., 5048., 5120., 5192., 5264., 5336., 5408., 5480., 5552., 3362., 3406., 3450., 3494., 3538., 3582., 3626., 3670., 3714., 3758., 3802., 3846., 3890., 3934., 3978., 4022.,    0.,    0.,    0.,    0., 2262., 2290., 2318., 2346., 2374., 2402., 2430., 2458., 2486., 2514., 2542., 2570., 2598., 2626., 2654., 2682., 6776., 6848., 6920., 6992., 7064., 7136., 7208., 7280., 7352., 7424., 7496., 7568., 4594., 4638., 4682., 4726., 4770., 4814., 4858., 4902., 4946., 4990., 5034., 5078., 5122., 5166., 5210., 5254.,    0.,    0.,    0.,    0., 1865., 1887., 1909., 1931., 1953., 1975., 1997., 2019., 2041., 2063., 2085., 2107., 2129., 2151., 2173., 2195., 4760., 4812., 4864., 4916., 4968., 5020., 5072., 5124., 5176., 5228., 5280., 5332., 2903., 2933., 2963., 2993., 3023., 3053., 3083., 3113., 3143., 3173., 3203., 3233., 3263., 3293., 3323., 3353.,    0.,    0.,    0.,    0., 2481., 2503., 2525., 2547., 2569., 2591., 2613., 2635., 2657., 2679., 2701., 2723., 2745., 2767., 2789., 2811., 6216., 6268., 6320., 6372., 6424., 6476., 6528., 6580., 6632., 6684., 6736., 6788., 3743., 3773., 3803., 3833., 3863., 3893., 3923., 3953., 3983., 4013., 4043., 4073., 4103., 4133., 4163., 4193.,    0.,    0.,    0.,    0., 3097., 3119., 3141., 3163., 3185., 3207., 3229., 3251., 3273., 3295., 3317., 3339., 3361., 3383., 3405., 3427., 7672., 7724., 7776., 7828., 7880., 7932., 7984., 8036., 8088., 8140., 8192., 8244., 4583., 4613., 4643., 4673., 4703., 4733., 4763., 4793., 4823., 4853., 4883., 4913., 4943., 4973., 5003., 5033.,    0.,    0.,    0.,    0., 3713., 3735., 3757., 3779., 3801., 3823., 3845., 3867., 3889., 3911., 3933., 3955., 3977., 3999., 4021., 4043., 9128., 9180., 9232., 9284., 9336., 9388., 9440., 9492., 9544., 9596., 9648., 9700., 5423., 5453., 5483., 5513., 5543., 5573., 5603., 5633., 5663., 5693., 5723., 5753., 5783., 5813., 5843., 5873.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x12x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   500.,  1284.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   420.,  1076.,  1732.,  2388.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x12x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   350.,   390.,   430.,   470.,   510.,   550.,   590.,   630.,   740.,   884.,  1028.,  1172.,  1316.,  1460.,  1604.,  1748.,  1892.,  2036.,  2180.,  2324.,  1318.,  1422.,  1526.,  1630.,  1734.,  1838.,  1942.,  2046.,  2150.,  2254.,  2358.,  2462.,  2566.,  2670.,  2774.,  2878.,     0.,     0.,     0.,     0.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  1470.,  1510.,  1550.,  1590.,  1630.,  1670.,  1710.,  1750.,  4772.,  4916.,  5060.,  5204.,  5348.,  5492.,  5636.,  5780.,  5924.,  6068.,  6212.,  6356.,  4230.,  4334.,  4438.,  4542.,  4646.,  4750.,  4854.,  4958.,  5062.,  5166.,  5270.,  5374.,  5478.,  5582.,  5686.,  5790.,     0.,     0.,     0.,     0.,  2270.,  2310.,  2350.,  2390.,  2430.,  2470.,  2510.,  2550.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,  6244.,  6388.,  6532.,  6676.,  6820.,  6964.,  7108.,  7252.,   740.,   884.,  1028.,  1172.,   486.,   590.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,  1526.,  1630.,  1734.,  1838.,  1942.,  2046.,     0.,     0.,     0.,     0.,   830.,   870.,   910.,   950.,   990.,  1030.,  1070.,  1110.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  3620.,  3764.,  3908.,  4052.,  4196.,  4340.,  4484.,  4628.,  4772.,  4916.,  5060.,  5204.,  3398.,  3502.,  3606.,  3710.,  3814.,  3918.,  4022.,  4126.,  4230.,  4334.,  4438.,  4542.,  4646.,  4750.,  4854.,  4958.,     0.,     0.,     0.,     0.,  2060.,  2268.,  2476.,  2684.,  2892.,  3100.,  3308.,  3516.,  3724.,  3932.,  4140.,  4348.,  4556.,  4764.,  4972.,  5180.,  8040.,  8584.,  9128.,  9672., 10216., 10760., 11304., 11848., 12392., 12936., 13480., 14024.,  9244.,  9580.,  9916., 10252.,  3932.,  4268.,  4604.,  4940.,  5276.,  5612.,  5948.,  6284.,  6620.,  6956.,  7292.,  7628.,     0.,     0.,     0.,     0.,  5324.,  5532.,  5740.,  5948.,  6156.,  6364.,  6572.,  6780.,  6988.,  7196.,  7404.,  7612.,  7820.,  8028.,  8236.,  8444., 16616., 17160., 17704., 18248., 18792., 19336., 19880., 20424., 20968., 21512., 22056., 22600., 11996., 12332., 12668., 13004., 13340., 13676., 14012., 14348., 14684., 15020., 15356., 15692., 16028., 16364., 16700., 17036.,     0.,     0.,     0.,     0., 11148., 11356., 11564., 11772., 11980., 12188., 12396., 12604.,  2060.,  2268.,  2476.,  2684.,  2892.,  3100.,  3308.,  3516., 21096., 21640., 22184., 22728., 23272., 23816., 24360., 24904.,  8040.,  8584.,  9128.,  9672.,  6556.,  6892.,  7228.,  7564.,  7900.,  8236.,  8572.,  8908.,  9244.,  9580.,  9916., 10252.,  3932.,  4268.,  4604.,  4940.,     0.,     0.,     0.,     0.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  4814.,  4982.,  5150.,  5318.,  5486.,  5654.,  5822.,  5990., 10948., 11348., 11748., 12148., 12548., 12948., 13348., 13748., 14148., 14548., 14948., 15348.,  7574.,  7806.,  8038.,  8270.,  8502.,  8734.,  8966.,  9198.,  9430.,  9662.,  9894., 10126., 10358., 10590., 10822., 11054.,     0.,     0.,     0.,     0.,  8174.,  8342.,  8510.,  8678.,  8846.,  9014.,  9182.,  9350.,  9518.,  9686.,  9854., 10022., 10190., 10358., 10526., 10694., 11396., 11796., 12196., 12596., 12996., 13396., 13796., 14196., 14596., 14996., 15396., 15796., 14070., 14302., 14534., 14766.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,  2006.,  2238.,  2470.,  2702.,     0.,     0.,     0.,     0.,  2126.,  2294.,  2462.,  2630.,  2798.,  2966.,  3134.,  3302.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  7748.,  8148.,  8548.,  8948.,  9348.,  9748., 10148., 10548., 10948., 11348., 11748., 12148.,  5718.,  5950.,  6182.,  6414.,  6646.,  6878.,  7110.,  7342.,  7574.,  7806.,  8038.,  8270.,  8502.,  8734.,  8966.,  9198.,     0.,     0.,     0.,     0.,  6830.,  6998.,  7166.,  7334.,  7502.,  7670.,  7838.,  8006.,  8174.,  8342.,  8510.,  8678.,  8846.,  9014.,  9182.,  9350., 18948., 19348., 19748., 20148., 20548., 20948., 21348., 21748., 11396., 11796., 12196., 12596., 12214., 12446., 12678., 12910., 13142., 13374., 13606., 13838., 14070., 14302., 14534., 14766.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 12, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x14x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  17.,   18.,   49.,   52.,   55.,   36.,   83.,   88.,   93.,   54.,  117.,  124.,  131.,   72.,   24.,   25.,   70.,   73.,   76.,   50.,  118.,  123.,  128.,   75.,  166.,  173.,  180.,  100.,   46.,   52.,  122.,  136.,  150.,   88.,  190.,  208.,  226.,  124.,  258.,  280.,  302.,  160.,   88.,   94.,  220.,  234.,  248.,  144.,  316.,  334.,  352.,  194.,  412.,  434.,  456.,  244.,  130.,  136.,  318.,  332.,  346.,  200.,  442.,  460.,  478.,  264.,  566.,  588.,  610.,  328.,  120.,  125.,  262.,  273.,  284.,  150.,  310.,  323.,  336.,  175.,  358.,  373.,  388.,  200.,  182.,  196.,  394.,  424.,  454.,  232.,  462.,  496.,  530.,  268.,  530.,  568.,  606.,  304.,  280.,  294.,  604.,  634.,  664.,  344.,  700.,  734.,  768.,  394.,  796.,  834.,  872.,  444.,  378.,  392.,  814.,  844.,  874.,  456.,  938.,  972., 1006.,  520., 1062., 1100., 1138.,  584.,  216.,  225.,  454.,  473.,  492.,  250.,  502.,  523.,  544.,  275.,  550.,  573.,  596.,  300.,  318.,  340.,  666.,  712.,  758.,  376.,  734.,  784.,  834.,  412.,  802.,  856.,  910.,  448.,  472.,  494.,  988., 1034., 1080.,  544., 1084., 1134., 1184.,  594., 1180., 1234., 1288.,  644.,  626.,  648., 1310., 1356., 1402.,  712., 1434., 1484., 1534.,  776., 1558., 1612., 1666.,  840.,  312.,  325.,  646.,  673.,  700.,  350.,  694.,  723.,  752.,  375.,  742.,  773.,  804.,  400.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x14x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  1.,   2.,   3.,   4.,   7.,  10.,  13.,   8.,  10.,  12.,  14.,   0.,   0.,   0.,   8.,   9.,  10.,  11.,  28.,  31.,  34.,  22.,  24.,  26.,  28.,   0.,   0.,   0.,  15.,  16.,  17.,  18.,  49.,  52.,  55.,  36.,  38.,  40.,  42.,   0.,   0.,   0.,  22.,  23.,  24.,  25.,  70.,  73.,  76.,  50.,  52.,  54.,  56.,   0.,   0.,   0.,  32.,  36.,  40.,  44., 110., 120., 130.,  80.,  86.,  92.,  98.,   0.,   0.,   0.,  60.,  64.,  68.,  72., 180., 190., 200., 122., 128., 134., 140.,   0.,   0.,   0.,  88.,  92.,  96., 100., 250., 260., 270., 164., 170., 176., 182.,   0.,   0.,   0.,  66.,  69.,  72.,  75., 166., 173., 180., 100., 104., 108., 112.,   0.,   0.,   0.,  87.,  90.,  93.,  96., 215., 222., 229., 128., 132., 136., 140.,   0.,   0.,   0., 108., 111., 114., 117., 264., 271., 278., 156., 160., 164., 168.,   0.,   0.,   0., 129., 132., 135., 138., 313., 320., 327., 184., 188., 192., 196.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x14x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  101.,   107.,   320.,   340.,   360.,   249.,   588.,   624.,   660.,   391.,   856.,   908.,   960.,   533.,   143.,   149.,   460.,   480.,   500.,   347.,   840.,   876.,   912.,   545.,  1220.,  1272.,  1324.,   743.,   290.,   334.,   816.,   920.,  1024.,   618.,  1352.,  1488.,  1624.,   902.,  1888.,  2056.,  2224.,  1186.,   598.,   642.,  1544.,  1648.,  1752.,  1038.,  2304.,  2440.,  2576.,  1434.,  3064.,  3232.,  3400.,  1830.,   906.,   950.,  2272.,  2376.,  2480.,  1458.,  3256.,  3392.,  3528.,  1966.,  4240.,  4408.,  4576.,  2474.,   903.,   941.,  1980.,  2064.,  2148.,  1139.,  2360.,  2460.,  2560.,  1337.,  2740.,  2856.,  2972.,  1535.,  1362.,  1470.,  2960.,  3192.,  3424.,  1754.,  3496.,  3760.,  4024.,  2038.,  4032.,  4328.,  4624.,  2322.,  2118.,  2226.,  4584.,  4816.,  5048.,  2622.,  5344.,  5608.,  5872.,  3018.,  6104.,  6400.,  6696.,  3414.,  2874.,  2982.,  6208.,  6440.,  6672.,  3490.,  7192.,  7456.,  7720.,  3998.,  8176.,  8472.,  8768.,  4506.,  1663.,  1733.,  3500.,  3648.,  3796.,  1931.,  3880.,  4044.,  4208.,  2129.,  4260.,  4440.,  4620.,  2327.,  2434.,  2606.,  5104.,  5464.,  5824.,  2890.,  5640.,  6032.,  6424.,  3174.,  6176.,  6600.,  7024.,  3458.,  3638.,  3810.,  7624.,  7984.,  8344.,  4206.,  8384.,  8776.,  9168.,  4602.,  9144.,  9568.,  9992.,  4998.,  4842.,  5014., 10144., 10504., 10864.,  5522., 11128., 11520., 11912.,  6030., 12112., 12536., 12960.,  6538.,  2423.,  2525.,  5020.,  5232.,  5444.,  2723.,  5400.,  5628.,  5856.,  2921.,  5780.,  6024.,  6268.,  3119.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x14x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   40.,   60.,   80.,   53.,   67.,   81.,   95.,    0.,    0.,    0.,   47.,   53.,   59.,   65.,  180.,  200.,  220.,  151.,  165.,  179.,  193.,    0.,    0.,    0.,   89.,   95.,  101.,  107.,  320.,  340.,  360.,  249.,  263.,  277.,  291.,    0.,    0.,    0.,  131.,  137.,  143.,  149.,  460.,  480.,  500.,  347.,  361.,  375.,  389.,    0.,    0.,    0.,  190.,  218.,  246.,  274.,  728.,  800.,  872.,  558.,  602.,  646.,  690.,    0.,    0.,    0.,  386.,  414.,  442.,  470., 1232., 1304., 1376.,  866.,  910.,  954.,  998.,    0.,    0.,    0.,  582.,  610.,  638.,  666., 1736., 1808., 1880., 1174., 1218., 1262., 1306.,    0.,    0.,    0.,  479.,  501.,  523.,  545., 1220., 1272., 1324.,  743.,  773.,  803.,  833.,    0.,    0.,    0.,  633.,  655.,  677.,  699., 1584., 1636., 1688.,  953.,  983., 1013., 1043.,    0.,    0.,    0.,  787.,  809.,  831.,  853., 1948., 2000., 2052., 1163., 1193., 1223., 1253.,    0.,    0.,    0.,  941.,  963.,  985., 1007., 2312., 2364., 2416., 1373., 1403., 1433., 1463.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x14x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  30.,   70.,  804.,  948.,  260.,  174., 1396., 1668.,  596.,  278., 1988., 2388.,  932.,  382.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150., 1052., 1388., 2120., 2920., 3720., 2108., 2792., 3848., 4904., 2828., 3464., 4776., 6088., 3548.,  716., 1052., 4520., 2120., 2920., 1644., 5960., 2792., 3848., 2236., 7400., 3464., 4776., 2828.,  380.,  716., 3720., 4520., 2120., 1180., 4904., 5960., 2792., 1644., 6088., 7400., 3464., 2108., 2262.,  190., 2516., 3172., 3828.,  230., 2980., 3764., 4548.,  270., 3444., 4356., 5268.,  310., 2076., 2412., 2120., 2920., 3720., 3132., 2792., 3848., 4904., 3852., 3464., 4776., 6088., 4572., 1740., 2076., 4520., 2120., 2920., 2668., 5960., 2792., 3848., 3260., 7400., 3464., 4776., 3852., 1404., 1740., 3720., 4520., 2120., 2204., 4904., 5960., 2792., 2668., 6088., 7400., 3464., 3132.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150., 1052., 1388., 2120., 2920., 3720., 2108., 2792., 3848., 4904., 2828., 3464., 4776., 6088., 3548.,  716., 1052., 4520., 2120., 2920., 1644., 5960., 2792., 3848., 2236., 7400., 3464., 4776., 2828.,  380.,  716., 3720., 4520., 2120., 1180., 4904., 5960., 2792., 1644., 6088., 7400., 3464., 2108., 2262.,  190., 2516., 3172., 3828.,  230., 2980., 3764., 4548.,  270., 3444., 4356., 5268.,  310.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x14x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   260.,   404.,   548.,   382.,   486.,   590.,   694.,     0.,     0.,     0.,   310.,   350.,   390.,   430.,  1268.,  1412.,  1556.,  1110.,  1214.,  1318.,  1422.,     0.,     0.,     0.,   590.,   630.,   670.,   710.,  2276.,  2420.,  2564.,  1838.,  1942.,  2046.,  2150.,     0.,     0.,     0.,   870.,   910.,   950.,   990.,  3284.,  3428.,  3572.,  2566.,  2670.,  2774.,  2878.,     0.,     0.,     0.,  1260.,  1468.,  1676.,  1884.,  5224.,  5768.,  6312.,  4140.,  4476.,  4812.,  5148.,     0.,     0.,     0.,  2716.,  2924.,  3132.,  3340.,  9032.,  9576., 10120.,  6492.,  6828.,  7164.,  7500.,     0.,     0.,     0.,  4172.,  4380.,  4588.,  4796., 12840., 13384., 13928.,  8844.,  9180.,  9516.,  9852.,     0.,     0.,     0.,  3638.,  3806.,  3974.,  4142.,  9332.,  9732., 10132.,  5718.,  5950.,  6182.,  6414.,     0.,     0.,     0.,  4814.,  4982.,  5150.,  5318., 12132., 12532., 12932.,  7342.,  7574.,  7806.,  8038.,     0.,     0.,     0.,  5990.,  6158.,  6326.,  6494., 14932., 15332., 15732.,  8966.,  9198.,  9430.,  9662.,     0.,     0.,     0.,  7166.,  7334.,  7502.,  7670., 17732., 18132., 18532., 10590., 10822., 11054., 11286.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x14x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,  161.,  166.,  171.,  176.,  181.,  186.,  105.,  108.,  227.,  234.,  241.,  248.,  255.,  262.,  140.,  144.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  231.,  236.,  241.,  246.,  251.,  256.,  147.,  150.,  325.,  332.,  339.,  346.,  353.,  360.,  196.,  200.,   86.,   92.,   98.,  104.,  230.,  244.,  258.,  272.,  286.,  300.,  168.,  176.,  362.,  380.,  398.,  416.,  434.,  452.,  238.,  248.,  494.,  516.,  538.,  560.,  582.,  604.,  308.,  320.,  170.,  176.,  182.,  188.,  426.,  440.,  454.,  468.,  482.,  496.,  280.,  288.,  614.,  632.,  650.,  668.,  686.,  704.,  378.,  388.,  802.,  824.,  846.,  868.,  890.,  912.,  476.,  488.,  254.,  260.,  266.,  272.,  622.,  636.,  650.,  664.,  678.,  692.,  392.,  400.,  866.,  884.,  902.,  920.,  938.,  956.,  518.,  528., 1110., 1132., 1154., 1176., 1198., 1220.,  644.,  656.,  235.,  240.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  607.,  620.,  633.,  646.,  659.,  672.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  350.,  364.,  378.,  392.,  758.,  788.,  818.,  848.,  878.,  908.,  448.,  464.,  890.,  924.,  958.,  992., 1026., 1060.,  518.,  536., 1022., 1060., 1098., 1136., 1174., 1212.,  588.,  608.,  546.,  560.,  574.,  588., 1178., 1208., 1238., 1268., 1298., 1328.,  672.,  688., 1366., 1400., 1434., 1468., 1502., 1536.,  770.,  788., 1554., 1592., 1630., 1668., 1706., 1744.,  868.,  888.,  742.,  756.,  770.,  784., 1598., 1628., 1658., 1688., 1718., 1748.,  896.,  912., 1842., 1876., 1910., 1944., 1978., 2012., 1022., 1040., 2086., 2124., 2162., 2200., 2238., 2276., 1148., 1168.,  423.,  432.,  441.,  450.,  889.,  908.,  927.,  946.,  965.,  984.,  490.,  500.,  983., 1004., 1025., 1046., 1067., 1088.,  539.,  550., 1077., 1100., 1123., 1146., 1169., 1192.,  588.,  600.,  614.,  636.,  658.,  680., 1286., 1332., 1378., 1424., 1470., 1516.,  728.,  752., 1418., 1468., 1518., 1568., 1618., 1668.,  798.,  824., 1550., 1604., 1658., 1712., 1766., 1820.,  868.,  896.,  922.,  944.,  966.,  988., 1930., 1976., 2022., 2068., 2114., 2160., 1064., 1088., 2118., 2168., 2218., 2268., 2318., 2368., 1162., 1188., 2306., 2360., 2414., 2468., 2522., 2576., 1260., 1288., 1230., 1252., 1274., 1296., 2574., 2620., 2666., 2712., 2758., 2804., 1400., 1424., 2818., 2868., 2918., 2968., 3018., 3068., 1526., 1552., 3062., 3116., 3170., 3224., 3278., 3332., 1652., 1680.,  611.,  624.,  637.,  650., 1265., 1292., 1319., 1346., 1373., 1400.,  686.,  700., 1359., 1388., 1417., 1446., 1475., 1504.,  735.,  750., 1453., 1484., 1515., 1546., 1577., 1608.,  784.,  800.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x14x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,  11.,  14.,  17.,  20.,  23.,  26.,  14.,  16.,  18.,  20.,  22.,  24.,  26.,  28.,   0.,   0.,   0.,   0.,   0.,   0.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  53.,  56.,  59.,  62.,  65.,  68.,  42.,  44.,  46.,  48.,  50.,  52.,  54.,  56.,   0.,   0.,   0.,   0.,   0.,   0.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,  95.,  98., 101., 104., 107., 110.,  70.,  72.,  74.,  76.,  78.,  80.,  82.,  84.,   0.,   0.,   0.,   0.,   0.,   0.,  43.,  44.,  45.,  46.,  47.,  48.,  49.,  50., 137., 140., 143., 146., 149., 152.,  98., 100., 102., 104., 106., 108., 110., 112.,   0.,   0.,   0.,   0.,   0.,   0.,  60.,  64.,  68.,  72.,  76.,  80.,  84.,  88., 210., 220., 230., 240., 250., 260., 154., 160., 166., 172., 178., 184., 190., 196.,   0.,   0.,   0.,   0.,   0.,   0., 116., 120., 124., 128., 132., 136., 140., 144., 350., 360., 370., 380., 390., 400., 238., 244., 250., 256., 262., 268., 274., 280.,   0.,   0.,   0.,   0.,   0.,   0., 172., 176., 180., 184., 188., 192., 196., 200., 490., 500., 510., 520., 530., 540., 322., 328., 334., 340., 346., 352., 358., 364.,   0.,   0.,   0.,   0.,   0.,   0., 129., 132., 135., 138., 141., 144., 147., 150., 325., 332., 339., 346., 353., 360., 196., 200., 204., 208., 212., 216., 220., 224.,   0.,   0.,   0.,   0.,   0.,   0., 171., 174., 177., 180., 183., 186., 189., 192., 423., 430., 437., 444., 451., 458., 252., 256., 260., 264., 268., 272., 276., 280.,   0.,   0.,   0.,   0.,   0.,   0., 213., 216., 219., 222., 225., 228., 231., 234., 521., 528., 535., 542., 549., 556., 308., 312., 316., 320., 324., 328., 332., 336.,   0.,   0.,   0.,   0.,   0.,   0., 255., 258., 261., 264., 267., 270., 273., 276., 619., 626., 633., 640., 647., 654., 364., 368., 372., 376., 380., 384., 388., 392.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x14x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  197.,   203.,   209.,   215.,   624.,   644.,   664.,   684.,   704.,   724.,   487.,   501.,  1148.,  1184.,  1220.,  1256.,  1292.,  1328.,   765.,   787.,  1672.,  1724.,  1776.,  1828.,  1880.,  1932.,  1043.,  1073.,   281.,   287.,   293.,   299.,   904.,   924.,   944.,   964.,   984.,  1004.,   683.,   697.,  1652.,  1688.,  1724.,  1760.,  1796.,  1832.,  1073.,  1095.,  2400.,  2452.,  2504.,  2556.,  2608.,  2660.,  1463.,  1493.,   546.,   590.,   634.,   678.,  1552.,  1656.,  1760.,  1864.,  1968.,  2072.,  1190.,  1250.,  2600.,  2736.,  2872.,  3008.,  3144.,  3280.,  1746.,  1822.,  3648.,  3816.,  3984.,  4152.,  4320.,  4488.,  2302.,  2394.,  1162.,  1206.,  1250.,  1294.,  3008.,  3112.,  3216.,  3320.,  3424.,  3528.,  2030.,  2090.,  4504.,  4640.,  4776.,  4912.,  5048.,  5184.,  2810.,  2886.,  6000.,  6168.,  6336.,  6504.,  6672.,  6840.,  3590.,  3682.,  1778.,  1822.,  1866.,  1910.,  4464.,  4568.,  4672.,  4776.,  4880.,  4984.,  2870.,  2930.,  6408.,  6544.,  6680.,  6816.,  6952.,  7088.,  3874.,  3950.,  8352.,  8520.,  8688.,  8856.,  9024.,  9192.,  4878.,  4970.,  1777.,  1815.,  1853.,  1891.,  3896.,  3980.,  4064.,  4148.,  4232.,  4316.,  2243.,  2289.,  4644.,  4744.,  4844.,  4944.,  5044.,  5144.,  2633.,  2687.,  5392.,  5508.,  5624.,  5740.,  5856.,  5972.,  3023.,  3085.,  2642.,  2750.,  2858.,  2966.,  5744.,  5976.,  6208.,  6440.,  6672.,  6904.,  3414.,  3538.,  6792.,  7056.,  7320.,  7584.,  7848.,  8112.,  3970.,  4110.,  7840.,  8136.,  8432.,  8728.,  9024.,  9320.,  4526.,  4682.,  4154.,  4262.,  4370.,  4478.,  8992.,  9224.,  9456.,  9688.,  9920., 10152.,  5150.,  5274., 10488., 10752., 11016., 11280., 11544., 11808.,  5930.,  6070., 11984., 12280., 12576., 12872., 13168., 13464.,  6710.,  6866.,  5666.,  5774.,  5882.,  5990., 12240., 12472., 12704., 12936., 13168., 13400.,  6886.,  7010., 14184., 14448., 14712., 14976., 15240., 15504.,  7890.,  8030., 16128., 16424., 16720., 17016., 17312., 17608.,  8894.,  9050.,  3273.,  3343.,  3413.,  3483.,  6888.,  7036.,  7184.,  7332.,  7480.,  7628.,  3803.,  3881.,  7636.,  7800.,  7964.,  8128.,  8292.,  8456.,  4193.,  4279.,  8384.,  8564.,  8744.,  8924.,  9104.,  9284.,  4583.,  4677.,  4738.,  4910.,  5082.,  5254.,  9936., 10296., 10656., 11016., 11376., 11736.,  5638.,  5826., 10984., 11376., 11768., 12160., 12552., 12944.,  6194.,  6398., 12032., 12456., 12880., 13304., 13728., 14152.,  6750.,  6970.,  7146.,  7318.,  7490.,  7662., 14976., 15336., 15696., 16056., 16416., 16776.,  8270.,  8458., 16472., 16864., 17256., 17648., 18040., 18432.,  9050.,  9254., 17968., 18392., 18816., 19240., 19664., 20088.,  9830., 10050.,  9554.,  9726.,  9898., 10070., 20016., 20376., 20736., 21096., 21456., 21816., 10902., 11090., 21960., 22352., 22744., 23136., 23528., 23920., 11906., 12110., 23904., 24328., 24752., 25176., 25600., 26024., 12910., 13130.,  4769.,  4871.,  4973.,  5075.,  9880., 10092., 10304., 10516., 10728., 10940.,  5363.,  5473., 10628., 10856., 11084., 11312., 11540., 11768.,  5753.,  5871., 11376., 11620., 11864., 12108., 12352., 12596.,  6143.,  6269.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x14x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   29.,   35.,   41.,   47.,   64.,   84.,  104.,  124.,  144.,  164.,   95.,  109.,  123.,  137.,  151.,  165.,  179.,  193.,    0.,    0.,    0.,    0.,    0.,    0.,   89.,   95.,  101.,  107.,  113.,  119.,  125.,  131.,  344.,  364.,  384.,  404.,  424.,  444.,  291.,  305.,  319.,  333.,  347.,  361.,  375.,  389.,    0.,    0.,    0.,    0.,    0.,    0.,  173.,  179.,  185.,  191.,  197.,  203.,  209.,  215.,  624.,  644.,  664.,  684.,  704.,  724.,  487.,  501.,  515.,  529.,  543.,  557.,  571.,  585.,    0.,    0.,    0.,    0.,    0.,    0.,  257.,  263.,  269.,  275.,  281.,  287.,  293.,  299.,  904.,  924.,  944.,  964.,  984., 1004.,  683.,  697.,  711.,  725.,  739.,  753.,  767.,  781.,    0.,    0.,    0.,    0.,    0.,    0.,  358.,  386.,  414.,  442.,  470.,  498.,  526.,  554., 1400., 1472., 1544., 1616., 1688., 1760., 1082., 1126., 1170., 1214., 1258., 1302., 1346., 1390.,    0.,    0.,    0.,    0.,    0.,    0.,  750.,  778.,  806.,  834.,  862.,  890.,  918.,  946., 2408., 2480., 2552., 2624., 2696., 2768., 1698., 1742., 1786., 1830., 1874., 1918., 1962., 2006.,    0.,    0.,    0.,    0.,    0.,    0., 1142., 1170., 1198., 1226., 1254., 1282., 1310., 1338., 3416., 3488., 3560., 3632., 3704., 3776., 2314., 2358., 2402., 2446., 2490., 2534., 2578., 2622.,    0.,    0.,    0.,    0.,    0.,    0.,  941.,  963.,  985., 1007., 1029., 1051., 1073., 1095., 2400., 2452., 2504., 2556., 2608., 2660., 1463., 1493., 1523., 1553., 1583., 1613., 1643., 1673.,    0.,    0.,    0.,    0.,    0.,    0., 1249., 1271., 1293., 1315., 1337., 1359., 1381., 1403., 3128., 3180., 3232., 3284., 3336., 3388., 1883., 1913., 1943., 1973., 2003., 2033., 2063., 2093.,    0.,    0.,    0.,    0.,    0.,    0., 1557., 1579., 1601., 1623., 1645., 1667., 1689., 1711., 3856., 3908., 3960., 4012., 4064., 4116., 2303., 2333., 2363., 2393., 2423., 2453., 2483., 2513.,    0.,    0.,    0.,    0.,    0.,    0., 1865., 1887., 1909., 1931., 1953., 1975., 1997., 2019., 4584., 4636., 4688., 4740., 4792., 4844., 2723., 2753., 2783., 2813., 2843., 2873., 2903., 2933.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x14x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,   614.,   846.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  4780.,  5500.,   892.,  1228.,  1564.,  1900.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  1900.,  2620.,  1966.,  2262.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  4780.,  5500.,   892.,  1228.,  1564.,  1900.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  1900.,  2620.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  4780.,  5500.,   892.,  1228.,  1564.,  1900.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  1900.,  2620.,  1966.,  2262.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x14x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   420.,   564.,   708.,   852.,   996.,  1140.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,     0.,     0.,     0.,     0.,     0.,     0.,   590.,   630.,   670.,   710.,   750.,   790.,   830.,   870.,  2436.,  2580.,  2724.,  2868.,  3012.,  3156.,  2150.,  2254.,  2358.,  2462.,  2566.,  2670.,  2774.,  2878.,     0.,     0.,     0.,     0.,     0.,     0.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  4452.,  4596.,  4740.,  4884.,  5028.,  5172.,  3606.,  3710.,  3814.,  3918.,  4022.,  4126.,  4230.,  4334.,     0.,     0.,     0.,     0.,     0.,     0.,  1710.,  1750.,  1790.,  1830.,  1870.,  1910.,  1950.,  1990.,  6468.,  6612.,  6756.,  6900.,  7044.,  7188.,  5062.,  5166.,  5270.,  5374.,  5478.,  5582.,  5686.,  5790.,     0.,     0.,     0.,     0.,     0.,     0.,  2380.,  2588.,  2796.,  3004.,  3212.,  3420.,  3628.,  3836.,  7528.,  8072.,  8616.,  9160.,  9704., 10248.,  8060.,  8396.,  2076.,  2412.,  2748.,  3084.,  3420.,  3756.,     0.,     0.,     0.,     0.,     0.,     0.,  2732.,  2940.,  3148.,  3356.,  3564.,  3772.,  3980.,  4188.,  8488.,  9032.,  9576., 10120., 10664., 11208.,  6108.,  6444.,  6780.,  7116.,  7452.,  7788.,  8124.,  8460.,     0.,     0.,     0.,     0.,     0.,     0.,  5644.,  5852.,  6060.,  6268.,  6476.,  6684.,  6892.,  7100., 16104., 16648., 17192., 17736., 18280., 18824., 10812., 11148., 11484., 11820., 12156., 12492., 12828., 13164.,     0.,     0.,     0.,     0.,     0.,     0.,  7166.,  7334.,  7502.,  7670.,  7838.,  8006.,  8174.,  8342., 18404., 18804., 19204., 19604., 20004., 20404., 11286., 11518., 11750., 11982., 12214., 12446., 12678., 12910.,     0.,     0.,     0.,     0.,     0.,     0.,  9518.,  9686.,  9854., 10022., 10190., 10358., 10526., 10694., 13252., 13652., 14052., 14452., 14852., 15252., 14534., 14766.,   150.,   382.,   614.,   846.,  1078.,  1310.,     0.,     0.,     0.,     0.,     0.,     0.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  4004.,  4404.,  4804.,  5204.,  5604.,  6004.,  2934.,  3166.,  3398.,  3630.,  3862.,  4094.,  4326.,  4558.,     0.,     0.,     0.,     0.,     0.,     0.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  9604., 10004., 10404., 10804., 11204., 11604.,  6182.,  6414.,  6646.,  6878.,  7110.,  7342.,  7574.,  7806.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x14x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  317.,  322.,  327.,  332.,  337.,  342.,  347.,  352.,  357.,  362.,  367.,  372.,  207.,  210.,  213.,  216.,  447.,  454.,  461.,  468.,  475.,  482.,  489.,  496.,  503.,  510.,  517.,  524.,  276.,  280.,  284.,  288.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  457.,  462.,  467.,  472.,  477.,  482.,  487.,  492.,  497.,  502.,  507.,  512.,  291.,  294.,  297.,  300.,  643.,  650.,  657.,  664.,  671.,  678.,  685.,  692.,  699.,  706.,  713.,  720.,  388.,  392.,  396.,  400.,  166.,  172.,  178.,  184.,  190.,  196.,  202.,  208.,  446.,  460.,  474.,  488.,  502.,  516.,  530.,  544.,  558.,  572.,  586.,  600.,  328.,  336.,  344.,  352.,  706.,  724.,  742.,  760.,  778.,  796.,  814.,  832.,  850.,  868.,  886.,  904.,  466.,  476.,  486.,  496.,  966.,  988., 1010., 1032., 1054., 1076., 1098., 1120., 1142., 1164., 1186., 1208.,  604.,  616.,  628.,  640.,  334.,  340.,  346.,  352.,  358.,  364.,  370.,  376.,  838.,  852.,  866.,  880.,  894.,  908.,  922.,  936.,  950.,  964.,  978.,  992.,  552.,  560.,  568.,  576., 1210., 1228., 1246., 1264., 1282., 1300., 1318., 1336., 1354., 1372., 1390., 1408.,  746.,  756.,  766.,  776., 1582., 1604., 1626., 1648., 1670., 1692., 1714., 1736., 1758., 1780., 1802., 1824.,  940.,  952.,  964.,  976.,  502.,  508.,  514.,  520.,  526.,  532.,  538.,  544., 1230., 1244., 1258., 1272., 1286., 1300., 1314., 1328., 1342., 1356., 1370., 1384.,  776.,  784.,  792.,  800., 1714., 1732., 1750., 1768., 1786., 1804., 1822., 1840., 1858., 1876., 1894., 1912., 1026., 1036., 1046., 1056., 2198., 2220., 2242., 2264., 2286., 2308., 2330., 2352., 2374., 2396., 2418., 2440., 1276., 1288., 1300., 1312.,  465.,  470.,  475.,  480.,  485.,  490.,  495.,  500., 1015., 1026., 1037., 1048., 1059., 1070., 1081., 1092., 1103., 1114., 1125., 1136.,  582.,  588.,  594.,  600., 1201., 1214., 1227., 1240., 1253., 1266., 1279., 1292., 1305., 1318., 1331., 1344.,  679.,  686.,  693.,  700., 1387., 1402., 1417., 1432., 1447., 1462., 1477., 1492., 1507., 1522., 1537., 1552.,  776.,  784.,  792.,  800.,  686.,  700.,  714.,  728.,  742.,  756.,  770.,  784., 1486., 1516., 1546., 1576., 1606., 1636., 1666., 1696., 1726., 1756., 1786., 1816.,  880.,  896.,  912.,  928., 1746., 1780., 1814., 1848., 1882., 1916., 1950., 1984., 2018., 2052., 2086., 2120., 1018., 1036., 1054., 1072., 2006., 2044., 2082., 2120., 2158., 2196., 2234., 2272., 2310., 2348., 2386., 2424., 1156., 1176., 1196., 1216., 1078., 1092., 1106., 1120., 1134., 1148., 1162., 1176., 2326., 2356., 2386., 2416., 2446., 2476., 2506., 2536., 2566., 2596., 2626., 2656., 1328., 1344., 1360., 1376., 2698., 2732., 2766., 2800., 2834., 2868., 2902., 2936., 2970., 3004., 3038., 3072., 1522., 1540., 1558., 1576., 3070., 3108., 3146., 3184., 3222., 3260., 3298., 3336., 3374., 3412., 3450., 3488., 1716., 1736., 1756., 1776., 1470., 1484., 1498., 1512., 1526., 1540., 1554., 1568., 3166., 3196., 3226., 3256., 3286., 3316., 3346., 3376., 3406., 3436., 3466., 3496., 1776., 1792., 1808., 1824., 3650., 3684., 3718., 3752., 3786., 3820., 3854., 3888., 3922., 3956., 3990., 4024., 2026., 2044., 2062., 2080., 4134., 4172., 4210., 4248., 4286., 4324., 4362., 4400., 4438., 4476., 4514., 4552., 2276., 2296., 2316., 2336.,  837.,  846.,  855.,  864.,  873.,  882.,  891.,  900., 1759., 1778., 1797., 1816., 1835., 1854., 1873., 1892., 1911., 1930., 1949., 1968.,  970.,  980.,  990., 1000., 1945., 1966., 1987., 2008., 2029., 2050., 2071., 2092., 2113., 2134., 2155., 2176., 1067., 1078., 1089., 1100., 2131., 2154., 2177., 2200., 2223., 2246., 2269., 2292., 2315., 2338., 2361., 2384., 1164., 1176., 1188., 1200., 1206., 1228., 1250., 1272., 1294., 1316., 1338., 1360., 2526., 2572., 2618., 2664., 2710., 2756., 2802., 2848., 2894., 2940., 2986., 3032., 1432., 1456., 1480., 1504., 2786., 2836., 2886., 2936., 2986., 3036., 3086., 3136., 3186., 3236., 3286., 3336., 1570., 1596., 1622., 1648., 3046., 3100., 3154., 3208., 3262., 3316., 3370., 3424., 3478., 3532., 3586., 3640., 1708., 1736., 1764., 1792., 1822., 1844., 1866., 1888., 1910., 1932., 1954., 1976., 3814., 3860., 3906., 3952., 3998., 4044., 4090., 4136., 4182., 4228., 4274., 4320., 2104., 2128., 2152., 2176., 4186., 4236., 4286., 4336., 4386., 4436., 4486., 4536., 4586., 4636., 4686., 4736., 2298., 2324., 2350., 2376., 4558., 4612., 4666., 4720., 4774., 4828., 4882., 4936., 4990., 5044., 5098., 5152., 2492., 2520., 2548., 2576., 2438., 2460., 2482., 2504., 2526., 2548., 2570., 2592., 5102., 5148., 5194., 5240., 5286., 5332., 5378., 5424., 5470., 5516., 5562., 5608., 2776., 2800., 2824., 2848., 5586., 5636., 5686., 5736., 5786., 5836., 5886., 5936., 5986., 6036., 6086., 6136., 3026., 3052., 3078., 3104., 6070., 6124., 6178., 6232., 6286., 6340., 6394., 6448., 6502., 6556., 6610., 6664., 3276., 3304., 3332., 3360., 1209., 1222., 1235., 1248., 1261., 1274., 1287., 1300., 2503., 2530., 2557., 2584., 2611., 2638., 2665., 2692., 2719., 2746., 2773., 2800., 1358., 1372., 1386., 1400., 2689., 2718., 2747., 2776., 2805., 2834., 2863., 2892., 2921., 2950., 2979., 3008., 1455., 1470., 1485., 1500., 2875., 2906., 2937., 2968., 2999., 3030., 3061., 3092., 3123., 3154., 3185., 3216., 1552., 1568., 1584., 1600.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x14x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,    9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   19.,   22.,   25.,   28.,   31.,   34.,   37.,   40.,   43.,   46.,   49.,   52.,   26.,   28.,   30.,   32.,   34.,   36.,   38.,   40.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,  103.,  106.,  109.,  112.,  115.,  118.,  121.,  124.,  127.,  130.,  133.,  136.,   82.,   84.,   86.,   88.,   90.,   92.,   94.,   96.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,   57.,   58.,   59.,   60.,   61.,   62.,   63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  146.,  148.,  150.,  152.,  154.,  156.,  158.,  160.,  162.,  164.,  166.,  168.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,   85.,   86.,   87.,   88.,   89.,   90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  202.,  204.,  206.,  208.,  210.,  212.,  214.,  216.,  218.,  220.,  222.,  224.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  148.,  152.,  156.,  160.,  164.,  168.,  172.,  176.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  302.,  308.,  314.,  320.,  326.,  332.,  338.,  344.,  350.,  356.,  362.,  368.,  374.,  380.,  386.,  392.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  228.,  232.,  236.,  240.,  244.,  248.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,  284.,  288.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  470.,  476.,  482.,  488.,  494.,  500.,  506.,  512.,  518.,  524.,  530.,  536.,  542.,  548.,  554.,  560.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  340.,  344.,  348.,  352.,  356.,  360.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,  396.,  400.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080.,  638.,  644.,  650.,  656.,  662.,  668.,  674.,  680.,  686.,  692.,  698.,  704.,  710.,  716.,  722.,  728.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  279.,  282.,  285.,  288.,  291.,  294.,  297.,  300.,  643.,  650.,  657.,  664.,  671.,  678.,  685.,  692.,  699.,  706.,  713.,  720.,  388.,  392.,  396.,  400.,  404.,  408.,  412.,  416.,  420.,  424.,  428.,  432.,  436.,  440.,  444.,  448.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  339.,  342.,  345.,  348.,  351.,  354.,  357.,  360.,  363.,  366.,  369.,  372.,  375.,  378.,  381.,  384.,  839.,  846.,  853.,  860.,  867.,  874.,  881.,  888.,  895.,  902.,  909.,  916.,  500.,  504.,  508.,  512.,  516.,  520.,  524.,  528.,  532.,  536.,  540.,  544.,  548.,  552.,  556.,  560.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  423.,  426.,  429.,  432.,  435.,  438.,  441.,  444.,  447.,  450.,  453.,  456.,  459.,  462.,  465.,  468., 1035., 1042., 1049., 1056., 1063., 1070., 1077., 1084., 1091., 1098., 1105., 1112.,  612.,  616.,  620.,  624.,  628.,  632.,  636.,  640.,  644.,  648.,  652.,  656.,  660.,  664.,  668.,  672.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  507.,  510.,  513.,  516.,  519.,  522.,  525.,  528.,  531.,  534.,  537.,  540.,  543.,  546.,  549.,  552., 1231., 1238., 1245., 1252., 1259., 1266., 1273., 1280., 1287., 1294., 1301., 1308.,  724.,  728.,  732.,  736.,  740.,  744.,  748.,  752.,  756.,  760.,  764.,  768.,  772.,  776.,  780.,  784.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x14x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  389.,   395.,   401.,   407.,   413.,   419.,   425.,   431.,  1232.,  1252.,  1272.,  1292.,  1312.,  1332.,  1352.,  1372.,  1392.,  1412.,  1432.,  1452.,   963.,   977.,   991.,  1005.,  2268.,  2304.,  2340.,  2376.,  2412.,  2448.,  2484.,  2520.,  2556.,  2592.,  2628.,  2664.,  1513.,  1535.,  1557.,  1579.,  3304.,  3356.,  3408.,  3460.,  3512.,  3564.,  3616.,  3668.,  3720.,  3772.,  3824.,  3876.,  2063.,  2093.,  2123.,  2153.,   557.,   563.,   569.,   575.,   581.,   587.,   593.,   599.,  1792.,  1812.,  1832.,  1852.,  1872.,  1892.,  1912.,  1932.,  1952.,  1972.,  1992.,  2012.,  1355.,  1369.,  1383.,  1397.,  3276.,  3312.,  3348.,  3384.,  3420.,  3456.,  3492.,  3528.,  3564.,  3600.,  3636.,  3672.,  2129.,  2151.,  2173.,  2195.,  4760.,  4812.,  4864.,  4916.,  4968.,  5020.,  5072.,  5124.,  5176.,  5228.,  5280.,  5332.,  2903.,  2933.,  2963.,  2993.,  1058.,  1102.,  1146.,  1190.,  1234.,  1278.,  1322.,  1366.,  2256.,  2360.,  2464.,  2568.,  2672.,  2776.,  2880.,  2984.,  3088.,  3192.,  3296.,  3400.,  2334.,  2394.,  2454.,  2514.,  3304.,  3440.,  3576.,  3712.,  3848.,  3984.,  4120.,  4256.,  4392.,  4528.,  4664.,  4800.,  3434.,  3510.,  3586.,  3662.,  4352.,  4520.,  4688.,  4856.,  5024.,  5192.,  5360.,  5528.,  5696.,  5864.,  6032.,  6200.,  4534.,  4626.,  4718.,  4810.,  1522.,  1566.,  1610.,  1654.,  1698.,  1742.,  1786.,  1830.,  3376.,  3480.,  3584.,  3688.,  3792.,  3896.,  4000.,  4104.,  4208.,  4312.,  4416.,  4520.,  2222.,  2282.,  2342.,  2402.,  4296.,  4432.,  4568.,  4704.,  4840.,  4976.,  5112.,  5248.,  5384.,  5520.,  5656.,  5792.,  2746.,  2822.,  2898.,  2974.,  5216.,  5384.,  5552.,  5720.,  5888.,  6056.,  6224.,  6392.,  6560.,  6728.,  6896.,  7064.,  3270.,  3362.,  3454.,  3546.,  2754.,  2798.,  2842.,  2886.,  2930.,  2974.,  3018.,  3062.,  6288.,  6392.,  6496.,  6600.,  6704.,  6808.,  6912.,  7016.,  7120.,  7224.,  7328.,  7432.,  3902.,  3962.,  4022.,  4082.,  8104.,  8240.,  8376.,  8512.,  8648.,  8784.,  8920.,  9056.,  9192.,  9328.,  9464.,  9600.,  4874.,  4950.,  5026.,  5102.,  9920., 10088., 10256., 10424., 10592., 10760., 10928., 11096., 11264., 11432., 11600., 11768.,  5846.,  5938.,  6030.,  6122.,  3525.,  3563.,  3601.,  3639.,  3677.,  3715.,  3753.,  3791.,  7728.,  7812.,  7896.,  7980.,  8064.,  8148.,  8232.,  8316.,  8400.,  8484.,  8568.,  8652.,  4451.,  4497.,  4543.,  4589.,  9212.,  9312.,  9412.,  9512.,  9612.,  9712.,  9812.,  9912., 10012., 10112., 10212., 10312.,  5225.,  5279.,  5333.,  5387., 10696., 10812., 10928., 11044., 11160., 11276., 11392., 11508., 11624., 11740., 11856., 11972.,  5999.,  6061.,  6123.,  6185.,  5202.,  5310.,  5418.,  5526.,  5634.,  5742.,  5850.,  5958.,  6448.,  6680.,  6912.,  7144.,  7376.,  7608.,  7840.,  8072.,  8304.,  8536.,  8768.,  9000.,  6734.,  6858.,  6982.,  7106.,  7496.,  7760.,  8024.,  8288.,  8552.,  8816.,  9080.,  9344.,  9608.,  9872., 10136., 10400.,  7834.,  7974.,  8114.,  8254.,  8544.,  8840.,  9136.,  9432.,  9728., 10024., 10320., 10616., 10912., 11208., 11504., 11800.,  8934.,  9090.,  9246.,  9402.,  3362.,  3470.,  3578.,  3686.,  3794.,  3902.,  4010.,  4118.,  7056.,  7288.,  7520.,  7752.,  7984.,  8216.,  8448.,  8680.,  8912.,  9144.,  9376.,  9608.,  4318.,  4442.,  4566.,  4690.,  7976.,  8240.,  8504.,  8768.,  9032.,  9296.,  9560.,  9824., 10088., 10352., 10616., 10880.,  4842.,  4982.,  5122.,  5262.,  8896.,  9192.,  9488.,  9784., 10080., 10376., 10672., 10968., 11264., 11560., 11856., 12152.,  5366.,  5522.,  5678.,  5834.,  6386.,  6494.,  6602.,  6710.,  6818.,  6926.,  7034.,  7142., 13552., 13784., 14016., 14248., 14480., 14712., 14944., 15176., 15408., 15640., 15872., 16104.,  7790.,  7914.,  8038.,  8162., 15368., 15632., 15896., 16160., 16424., 16688., 16952., 17216., 17480., 17744., 18008., 18272.,  8762.,  8902.,  9042.,  9182., 17184., 17480., 17776., 18072., 18368., 18664., 18960., 19256., 19552., 19848., 20144., 20440.,  9734.,  9890., 10046., 10202.,  6493.,  6563.,  6633.,  6703.,  6773.,  6843.,  6913.,  6983., 13664., 13812., 13960., 14108., 14256., 14404., 14552., 14700., 14848., 14996., 15144., 15292.,  7547.,  7625.,  7703.,  7781., 15148., 15312., 15476., 15640., 15804., 15968., 16132., 16296., 16460., 16624., 16788., 16952.,  8321.,  8407.,  8493.,  8579., 16632., 16812., 16992., 17172., 17352., 17532., 17712., 17892., 18072., 18252., 18432., 18612.,  9095.,  9189.,  9283.,  9377.,  9346.,  9518.,  9690.,  9862., 10034., 10206., 10378., 10550., 10640., 11000., 11360., 11720., 12080., 12440., 12800., 13160., 13520., 13880., 14240., 14600., 11134., 11322., 11510., 11698., 11688., 12080., 12472., 12864., 13256., 13648., 14040., 14432., 14824., 15216., 15608., 16000., 12234., 12438., 12642., 12846., 12736., 13160., 13584., 14008., 14432., 14856., 15280., 15704., 16128., 16552., 16976., 17400., 13334., 13554., 13774., 13994.,  5202.,  5374.,  5546.,  5718.,  5890.,  6062.,  6234.,  6406., 10736., 11096., 11456., 11816., 12176., 12536., 12896., 13256., 13616., 13976., 14336., 14696.,  6414.,  6602.,  6790.,  6978., 11656., 12048., 12440., 12832., 13224., 13616., 14008., 14400., 14792., 15184., 15576., 15968.,  6938.,  7142.,  7346.,  7550., 12576., 13000., 13424., 13848., 14272., 14696., 15120., 15544., 15968., 16392., 16816., 17240.,  7462.,  7682.,  7902.,  8122., 10018., 10190., 10362., 10534., 10706., 10878., 11050., 11222., 20816., 21176., 21536., 21896., 22256., 22616., 22976., 23336., 23696., 24056., 24416., 24776., 11678., 11866., 12054., 12242., 22632., 23024., 23416., 23808., 24200., 24592., 24984., 25376., 25768., 26160., 26552., 26944., 12650., 12854., 13058., 13262., 24448., 24872., 25296., 25720., 26144., 26568., 26992., 27416., 27840., 28264., 28688., 29112., 13622., 13842., 14062., 14282.,  9461.,  9563.,  9665.,  9767.,  9869.,  9971., 10073., 10175., 19600., 19812., 20024., 20236., 20448., 20660., 20872., 21084., 21296., 21508., 21720., 21932., 10643., 10753., 10863., 10973., 21084., 21312., 21540., 21768., 21996., 22224., 22452., 22680., 22908., 23136., 23364., 23592., 11417., 11535., 11653., 11771., 22568., 22812., 23056., 23300., 23544., 23788., 24032., 24276., 24520., 24764., 25008., 25252., 12191., 12317., 12443., 12569.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x14x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   5.,   11.,   17.,   23.,   29.,   35.,   41.,   47.,   53.,   59.,   65.,   71.,   77.,   83.,   89.,   95.,  112.,  132.,  152.,  172.,  192.,  212.,  232.,  252.,  272.,  292.,  312.,  332.,  179.,  193.,  207.,  221.,  235.,  249.,  263.,  277.,  291.,  305.,  319.,  333.,  347.,  361.,  375.,  389.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  173.,  179.,  185.,  191.,  197.,  203.,  209.,  215.,  221.,  227.,  233.,  239.,  245.,  251.,  257.,  263.,  672.,  692.,  712.,  732.,  752.,  772.,  792.,  812.,  832.,  852.,  872.,  892.,  571.,  585.,  599.,  613.,  627.,  641.,  655.,  669.,  683.,  697.,  711.,  725.,  739.,  753.,  767.,  781.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  341.,  347.,  353.,  359.,  365.,  371.,  377.,  383.,  389.,  395.,  401.,  407.,  413.,  419.,  425.,  431., 1232., 1252., 1272., 1292., 1312., 1332., 1352., 1372., 1392., 1412., 1432., 1452.,  963.,  977.,  991., 1005., 1019., 1033., 1047., 1061., 1075., 1089., 1103., 1117., 1131., 1145., 1159., 1173.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  509.,  515.,  521.,  527.,  533.,  539.,  545.,  551.,  557.,  563.,  569.,  575.,  581.,  587.,  593.,  599., 1792., 1812., 1832., 1852., 1872., 1892., 1912., 1932., 1952., 1972., 1992., 2012., 1355., 1369., 1383., 1397., 1411., 1425., 1439., 1453., 1467., 1481., 1495., 1509., 1523., 1537., 1551., 1565.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  694.,  722.,  750.,  778.,  806.,  834.,  862.,  890.,  918.,  946.,  974., 1002., 1030., 1058., 1086., 1114., 2744., 2816., 2888., 2960., 3032., 3104., 3176., 3248., 3320., 3392., 3464., 3536., 2130., 2174., 2218., 2262., 2306., 2350., 2394., 2438., 2482., 2526., 2570., 2614., 2658., 2702., 2746., 2790.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1478., 1506., 1534., 1562., 1590., 1618., 1646., 1674., 1702., 1730., 1758., 1786., 1814., 1842., 1870., 1898., 4760., 4832., 4904., 4976., 5048., 5120., 5192., 5264., 5336., 5408., 5480., 5552., 3362., 3406., 3450., 3494., 3538., 3582., 3626., 3670., 3714., 3758., 3802., 3846., 3890., 3934., 3978., 4022.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 2262., 2290., 2318., 2346., 2374., 2402., 2430., 2458., 2486., 2514., 2542., 2570., 2598., 2626., 2654., 2682., 6776., 6848., 6920., 6992., 7064., 7136., 7208., 7280., 7352., 7424., 7496., 7568., 4594., 4638., 4682., 4726., 4770., 4814., 4858., 4902., 4946., 4990., 5034., 5078., 5122., 5166., 5210., 5254.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1865., 1887., 1909., 1931., 1953., 1975., 1997., 2019., 2041., 2063., 2085., 2107., 2129., 2151., 2173., 2195., 4760., 4812., 4864., 4916., 4968., 5020., 5072., 5124., 5176., 5228., 5280., 5332., 2903., 2933., 2963., 2993., 3023., 3053., 3083., 3113., 3143., 3173., 3203., 3233., 3263., 3293., 3323., 3353.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 2481., 2503., 2525., 2547., 2569., 2591., 2613., 2635., 2657., 2679., 2701., 2723., 2745., 2767., 2789., 2811., 6216., 6268., 6320., 6372., 6424., 6476., 6528., 6580., 6632., 6684., 6736., 6788., 3743., 3773., 3803., 3833., 3863., 3893., 3923., 3953., 3983., 4013., 4043., 4073., 4103., 4133., 4163., 4193.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 3097., 3119., 3141., 3163., 3185., 3207., 3229., 3251., 3273., 3295., 3317., 3339., 3361., 3383., 3405., 3427., 7672., 7724., 7776., 7828., 7880., 7932., 7984., 8036., 8088., 8140., 8192., 8244., 4583., 4613., 4643., 4673., 4703., 4733., 4763., 4793., 4823., 4853., 4883., 4913., 4943., 4973., 5003., 5033.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 3713., 3735., 3757., 3779., 3801., 3823., 3845., 3867., 3889., 3911., 3933., 3955., 3977., 3999., 4021., 4043., 9128., 9180., 9232., 9284., 9336., 9388., 9440., 9492., 9544., 9596., 9648., 9700., 5423., 5453., 5483., 5513., 5543., 5573., 5603., 5633., 5663., 5693., 5723., 5753., 5783., 5813., 5843., 5873.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME1x14x14x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID1x14x14x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   350.,   390.,   430.,   470.,   510.,   550.,   590.,   630.,   740.,   884.,  1028.,  1172.,  1316.,  1460.,  1604.,  1748.,  1892.,  2036.,  2180.,  2324.,  1318.,  1422.,  1526.,  1630.,  1734.,  1838.,  1942.,  2046.,  2150.,  2254.,  2358.,  2462.,  2566.,  2670.,  2774.,  2878.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  1470.,  1510.,  1550.,  1590.,  1630.,  1670.,  1710.,  1750.,  4772.,  4916.,  5060.,  5204.,  5348.,  5492.,  5636.,  5780.,  5924.,  6068.,  6212.,  6356.,  4230.,  4334.,  4438.,  4542.,  4646.,  4750.,  4854.,  4958.,  5062.,  5166.,  5270.,  5374.,  5478.,  5582.,  5686.,  5790.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  2270.,  2310.,  2350.,  2390.,  2430.,  2470.,  2510.,  2550.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,  6244.,  6388.,  6532.,  6676.,  6820.,  6964.,  7108.,  7252.,   740.,   884.,  1028.,  1172.,   486.,   590.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,  1526.,  1630.,  1734.,  1838.,  1942.,  2046.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   830.,   870.,   910.,   950.,   990.,  1030.,  1070.,  1110.,  1150.,  1190.,  1230.,  1270.,  1310.,  1350.,  1390.,  1430.,  3620.,  3764.,  3908.,  4052.,  4196.,  4340.,  4484.,  4628.,  4772.,  4916.,  5060.,  5204.,  3398.,  3502.,  3606.,  3710.,  3814.,  3918.,  4022.,  4126.,  4230.,  4334.,  4438.,  4542.,  4646.,  4750.,  4854.,  4958.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  2060.,  2268.,  2476.,  2684.,  2892.,  3100.,  3308.,  3516.,  3724.,  3932.,  4140.,  4348.,  4556.,  4764.,  4972.,  5180.,  8040.,  8584.,  9128.,  9672., 10216., 10760., 11304., 11848., 12392., 12936., 13480., 14024.,  9244.,  9580.,  9916., 10252.,  3932.,  4268.,  4604.,  4940.,  5276.,  5612.,  5948.,  6284.,  6620.,  6956.,  7292.,  7628.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  5324.,  5532.,  5740.,  5948.,  6156.,  6364.,  6572.,  6780.,  6988.,  7196.,  7404.,  7612.,  7820.,  8028.,  8236.,  8444., 16616., 17160., 17704., 18248., 18792., 19336., 19880., 20424., 20968., 21512., 22056., 22600., 11996., 12332., 12668., 13004., 13340., 13676., 14012., 14348., 14684., 15020., 15356., 15692., 16028., 16364., 16700., 17036.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0., 11148., 11356., 11564., 11772., 11980., 12188., 12396., 12604.,  2060.,  2268.,  2476.,  2684.,  2892.,  3100.,  3308.,  3516., 21096., 21640., 22184., 22728., 23272., 23816., 24360., 24904.,  8040.,  8584.,  9128.,  9672.,  6556.,  6892.,  7228.,  7564.,  7900.,  8236.,  8572.,  8908.,  9244.,  9580.,  9916., 10252.,  3932.,  4268.,  4604.,  4940.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  4814.,  4982.,  5150.,  5318.,  5486.,  5654.,  5822.,  5990., 10948., 11348., 11748., 12148., 12548., 12948., 13348., 13748., 14148., 14548., 14948., 15348.,  7574.,  7806.,  8038.,  8270.,  8502.,  8734.,  8966.,  9198.,  9430.,  9662.,  9894., 10126., 10358., 10590., 10822., 11054.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  8174.,  8342.,  8510.,  8678.,  8846.,  9014.,  9182.,  9350.,  9518.,  9686.,  9854., 10022., 10190., 10358., 10526., 10694., 11396., 11796., 12196., 12596., 12996., 13396., 13796., 14196., 14596., 14996., 15396., 15796., 14070., 14302., 14534., 14766.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,  2006.,  2238.,  2470.,  2702.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  2126.,  2294.,  2462.,  2630.,  2798.,  2966.,  3134.,  3302.,  3470.,  3638.,  3806.,  3974.,  4142.,  4310.,  4478.,  4646.,  7748.,  8148.,  8548.,  8948.,  9348.,  9748., 10148., 10548., 10948., 11348., 11748., 12148.,  5718.,  5950.,  6182.,  6414.,  6646.,  6878.,  7110.,  7342.,  7574.,  7806.,  8038.,  8270.,  8502.,  8734.,  8966.,  9198.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  6830.,  6998.,  7166.,  7334.,  7502.,  7670.,  7838.,  8006.,  8174.,  8342.,  8510.,  8678.,  8846.,  9014.,  9182.,  9350., 18948., 19348., 19748., 20148., 20548., 20948., 21348., 21748., 11396., 11796., 12196., 12596., 12214., 12446., 12678., 12910., 13142., 13374., 13606., 13838., 14070., 14302., 14534., 14766.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 1, 14, 14, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x11x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  17.,   18.,   49.,   52.,   55.,   36.,   83.,   88.,   93.,   54.,   57.,   24.,   25.,   70.,   73.,   76.,   50.,  118.,  123.,  128.,   75.,   78.,   43.,   48.,  116.,  128.,  140.,   84.,  184.,  200.,  216.,  120.,  129.,   78.,   83.,  200.,  212.,  224.,  133.,  296.,  312.,  328.,  183.,  192.,  113.,  118.,  284.,  296.,  308.,  182.,  408.,  424.,  440.,  246.,  255.,   96.,  100.,  214.,  223.,  232.,  125.,  262.,  273.,  284.,  150.,  156.,  145.,  156.,  320.,  344.,  368.,  192.,  388.,  416.,  444.,  228.,  243.,  222.,  233.,  488.,  512.,  536.,  283.,  584.,  612.,  640.,  333.,  348.,  299.,  310.,  656.,  680.,  704.,  374.,  780.,  808.,  836.,  438.,  453.,  168.,  175.,  358.,  373.,  388.,  200.,  406.,  423.,  440.,  225.,  234.,  217.,  224.,  463.,  478.,  493.,  256.,  525.,  542.,  559.,  288.,  297.,  170.,  180.,  355.,  376.,  397.,  198.,  389.,  412.,  435.,  216.,  228.,  240.,  250.,  502.,  523.,  544.,  275.,  550.,  573.,  596.,  300.,  312.,  349.,  372.,  728.,  776.,  824.,  408.,  796.,  848.,  900.,  444.,  471.,  510.,  533., 1064., 1112., 1160.,  583., 1160., 1212., 1264.,  633.,  660.,  671.,  694., 1400., 1448., 1496.,  758., 1524., 1576., 1628.,  822.,  849.,  312.,  325.,  646.,  673.,  700.,  350.,  694.,  723.,  752.,  375.,  390.,  451.,  480.,  932.,  992., 1052.,  516., 1000., 1064., 1128.,  552.,  585.,  654.,  683., 1352., 1412., 1472.,  733., 1448., 1512., 1576.,  783.,  816.,  857.,  886., 1772., 1832., 1892.,  950., 1896., 1960., 2024., 1014., 1047.,  384.,  400.,  790.,  823.,  856.,  425.,  838.,  873.,  908.,  450.,  468.,  496.,  512., 1021., 1054., 1087.,  544., 1083., 1118., 1153.,  576.,  594.,  323.,  342.,  661.,  700.,  739.,  360.,  695.,  736.,  777.,  378.,  399.,  456.,  475.,  934.,  973., 1012.,  500.,  982., 1023., 1064.,  525.,  546.,  655.,  696., 1340., 1424., 1508.,  732., 1408., 1496., 1584.,  768.,  813.,  942.,  983., 1928., 2012., 2096., 1033., 2024., 2112., 2200., 1083., 1128., 1229., 1270., 2516., 2600., 2684., 1334., 2640., 2728., 2816., 1398., 1443.,  528.,  550., 1078., 1123., 1168.,  575., 1126., 1173., 1220.,  600.,  624.,  757.,  804., 1544., 1640., 1736.,  840., 1612., 1712., 1812.,  876.,  927., 1086., 1133., 2216., 2312., 2408., 1183., 2312., 2412., 2512., 1233., 1284., 1415., 1462., 2888., 2984., 3080., 1526., 3012., 3112., 3212., 1590., 1641.,  600.,  625., 1222., 1273., 1324.,  650., 1270., 1323., 1376.,  675.,  702.,  775.,  800., 1579., 1630., 1681.,  832., 1641., 1694., 1747.,  864.,  891.};
  const std::array<int, 4> in_shape = {{ 3, 11, 11, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x11x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    7.,   10.,   13.,    8.,   10.,   12.,   14.,    8.,    9.,   10.,   11.,   28.,   31.,   34.,   22.,   24.,   26.,   28.,   15.,   16.,   17.,   18.,   49.,   52.,   55.,   36.,   38.,   40.,   42.,   22.,   23.,   24.,   25.,   70.,   73.,   76.,   50.,   52.,   54.,   56.,   32.,   36.,   40.,   44.,  110.,  120.,  130.,   80.,   86.,   92.,   98.,   60.,   64.,   68.,   72.,  180.,  190.,  200.,  122.,  128.,  134.,  140.,   88.,   92.,   96.,  100.,  250.,  260.,  270.,  164.,  170.,  176.,  182.,   66.,   69.,   72.,   75.,  166.,  173.,  180.,  100.,  104.,  108.,  112.,   87.,   90.,   93.,   96.,  215.,  222.,  229.,  128.,  132.,  136.,  140.,  108.,  111.,  114.,  117.,  264.,  271.,  278.,  156.,  160.,  164.,  168.,  129.,  132.,  135.,  138.,  313.,  320.,  327.,  184.,  188.,  192.,  196.,    5.,   10.,   15.,   20.,   31.,   42.,   53.,   24.,   30.,   36.,   42.,   40.,   45.,   50.,   55.,  108.,  119.,  130.,   66.,   72.,   78.,   84.,   75.,   80.,   85.,   90.,  185.,  196.,  207.,  108.,  114.,  120.,  126.,  110.,  115.,  120.,  125.,  262.,  273.,  284.,  150.,  156.,  162.,  168.,  152.,  164.,  176.,  188.,  382.,  408.,  434.,  224.,  238.,  252.,  266.,  236.,  248.,  260.,  272.,  564.,  590.,  616.,  322.,  336.,  350.,  364.,  320.,  332.,  344.,  356.,  746.,  772.,  798.,  420.,  434.,  448.,  462.,  154.,  161.,  168.,  175.,  358.,  373.,  388.,  200.,  208.,  216.,  224.,  203.,  210.,  217.,  224.,  463.,  478.,  493.,  256.,  264.,  272.,  280.,  252.,  259.,  266.,  273.,  568.,  583.,  598.,  312.,  320.,  328.,  336.,  301.,  308.,  315.,  322.,  673.,  688.,  703.,  368.,  376.,  384.,  392.,    9.,   18.,   27.,   36.,   55.,   74.,   93.,   40.,   50.,   60.,   70.,   72.,   81.,   90.,   99.,  188.,  207.,  226.,  110.,  120.,  130.,  140.,  135.,  144.,  153.,  162.,  321.,  340.,  359.,  180.,  190.,  200.,  210.,  198.,  207.,  216.,  225.,  454.,  473.,  492.,  250.,  260.,  270.,  280.,  272.,  292.,  312.,  332.,  654.,  696.,  738.,  368.,  390.,  412.,  434.,  412.,  432.,  452.,  472.,  948.,  990., 1032.,  522.,  544.,  566.,  588.,  552.,  572.,  592.,  612., 1242., 1284., 1326.,  676.,  698.,  720.,  742.,  242.,  253.,  264.,  275.,  550.,  573.,  596.,  300.,  312.,  324.,  336.,  319.,  330.,  341.,  352.,  711.,  734.,  757.,  384.,  396.,  408.,  420.,  396.,  407.,  418.,  429.,  872.,  895.,  918.,  468.,  480.,  492.,  504.,  473.,  484.,  495.,  506., 1033., 1056., 1079.,  552.,  564.,  576.,  588.};
  const std::array<int, 4> in_shape = {{ 3, 11, 11, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x11x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  101.,   107.,   320.,   340.,   360.,   249.,   588.,   624.,   660.,   391.,   413.,   143.,   149.,   460.,   480.,   500.,   347.,   840.,   876.,   912.,   545.,   567.,   268.,   304.,   772.,   860.,   948.,   588.,  1308.,  1428.,  1548.,   872.,   940.,   520.,   556.,  1388.,  1476.,  1564.,   952.,  2148.,  2268.,  2388.,  1348.,  1416.,   772.,   808.,  2004.,  2092.,  2180.,  1316.,  2988.,  3108.,  3228.,  1824.,  1892.,   713.,   743.,  1600.,  1668.,  1736.,   941.,  1980.,  2064.,  2148.,  1139.,  1185.,  1072.,  1156.,  2380.,  2564.,  2748.,  1440.,  2916.,  3132.,  3348.,  1724.,  1840.,  1660.,  1744.,  3668.,  3852.,  4036.,  2140.,  4428.,  4644.,  4860.,  2536.,  2652.,  2248.,  2332.,  4956.,  5140.,  5324.,  2840.,  5940.,  6156.,  6372.,  3348.,  3464.,  1283.,  1337.,  2740.,  2856.,  2972.,  1535.,  3120.,  3252.,  3384.,  1733.,  1803.,  1661.,  1715.,  3552.,  3668.,  3784.,  1969.,  4044.,  4176.,  4308.,  2223.,  2293.,  1307.,  1385.,  2732.,  2896.,  3060.,  1527.,  3000.,  3180.,  3360.,  1669.,  1763.,  1853.,  1931.,  3880.,  4044.,  4208.,  2129.,  4260.,  4440.,  4620.,  2327.,  2421.,  2680.,  2860.,  5596.,  5972.,  6348.,  3144.,  6132.,  6540.,  6948.,  3428.,  3640.,  3940.,  4120.,  8228.,  8604.,  8980.,  4516.,  8988.,  9396.,  9804.,  4912.,  5124.,  5200.,  5380., 10860., 11236., 11612.,  5888., 11844., 12252., 12660.,  6396.,  6608.,  2423.,  2525.,  5020.,  5232.,  5444.,  2723.,  5400.,  5628.,  5856.,  2921.,  3039.,  3484.,  3712.,  7204.,  7676.,  8148.,  3996.,  7740.,  8244.,  8748.,  4280.,  4540.,  5080.,  5308., 10508., 10980., 11452.,  5704., 11268., 11772., 12276.,  6100.,  6360.,  6676.,  6904., 13812., 14284., 14756.,  7412., 14796., 15300., 15804.,  7920.,  8180.,  2993.,  3119.,  6160.,  6420.,  6680.,  3317.,  6540.,  6816.,  7092.,  3515.,  3657.,  3875.,  4001.,  7980.,  8240.,  8500.,  4255.,  8472.,  8748.,  9024.,  4509.,  4651.,  2513.,  2663.,  5144.,  5452.,  5760.,  2805.,  5412.,  5736.,  6060.,  2947.,  3113.,  3563.,  3713.,  7300.,  7608.,  7916.,  3911.,  7680.,  8004.,  8328.,  4109.,  4275.,  5092.,  5416., 10420., 11084., 11748.,  5700., 10956., 11652., 12348.,  5984.,  6340.,  7360.,  7684., 15068., 15732., 16396.,  8080., 15828., 16524., 17220.,  8476.,  8832.,  9628.,  9952., 19716., 20380., 21044., 10460., 20700., 21396., 22092., 10968., 11324.,  4133.,  4307.,  8440.,  8796.,  9152.,  4505.,  8820.,  9192.,  9564.,  4703.,  4893.,  5896.,  6268., 12028., 12788., 13548.,  6552., 12564., 13356., 14148.,  6836.,  7240.,  8500.,  8872., 17348., 18108., 18868.,  9268., 18108., 18900., 19692.,  9664., 10068., 11104., 11476., 22668., 23428., 24188., 11984., 23652., 24444., 25236., 12492., 12896.,  4703.,  4901.,  9580.,  9984., 10388.,  5099.,  9960., 10380., 10800.,  5297.,  5511.,  6089.,  6287., 12408., 12812., 13216.,  6541., 12900., 13320., 13740.,  6795.,  7009.};
  const std::array<int, 4> in_shape = {{ 3, 11, 11, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x11x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    40.,    60.,    80.,    53.,    67.,    81.,    95.,    47.,    53.,    59.,    65.,   180.,   200.,   220.,   151.,   165.,   179.,   193.,    89.,    95.,   101.,   107.,   320.,   340.,   360.,   249.,   263.,   277.,   291.,   131.,   137.,   143.,   149.,   460.,   480.,   500.,   347.,   361.,   375.,   389.,   190.,   218.,   246.,   274.,   728.,   800.,   872.,   558.,   602.,   646.,   690.,   386.,   414.,   442.,   470.,  1232.,  1304.,  1376.,   866.,   910.,   954.,   998.,   582.,   610.,   638.,   666.,  1736.,  1808.,  1880.,  1174.,  1218.,  1262.,  1306.,   479.,   501.,   523.,   545.,  1220.,  1272.,  1324.,   743.,   773.,   803.,   833.,   633.,   655.,   677.,   699.,  1584.,  1636.,  1688.,   953.,   983.,  1013.,  1043.,   787.,   809.,   831.,   853.,  1948.,  2000.,  2052.,  1163.,  1193.,  1223.,  1253.,   941.,   963.,   985.,  1007.,  2312.,  2364.,  2416.,  1373.,  1403.,  1433.,  1463.,    29.,    67.,   105.,   143.,   216.,   300.,   384.,   173.,   219.,   265.,   311.,   295.,   333.,   371.,   409.,   804.,   888.,   972.,   495.,   541.,   587.,   633.,   561.,   599.,   637.,   675.,  1392.,  1476.,  1560.,   817.,   863.,   909.,   955.,   827.,   865.,   903.,   941.,  1980.,  2064.,  2148.,  1139.,  1185.,  1231.,  1277.,  1134.,  1226.,  1318.,  1410.,  2872.,  3072.,  3272.,  1694.,  1802.,  1910.,  2018.,  1778.,  1870.,  1962.,  2054.,  4272.,  4472.,  4672.,  2450.,  2558.,  2666.,  2774.,  2422.,  2514.,  2606.,  2698.,  5672.,  5872.,  6072.,  3206.,  3314.,  3422.,  3530.,  1175.,  1229.,  1283.,  1337.,  2740.,  2856.,  2972.,  1535.,  1597.,  1659.,  1721.,  1553.,  1607.,  1661.,  1715.,  3552.,  3668.,  3784.,  1969.,  2031.,  2093.,  2155.,  1931.,  1985.,  2039.,  2093.,  4364.,  4480.,  4596.,  2403.,  2465.,  2527.,  2589.,  2309.,  2363.,  2417.,  2471.,  5176.,  5292.,  5408.,  2837.,  2899.,  2961.,  3023.,    53.,   123.,   193.,   263.,   392.,   540.,   688.,   293.,   371.,   449.,   527.,   543.,   613.,   683.,   753.,  1428.,  1576.,  1724.,   839.,   917.,   995.,  1073.,  1033.,  1103.,  1173.,  1243.,  2464.,  2612.,  2760.,  1385.,  1463.,  1541.,  1619.,  1523.,  1593.,  1663.,  1733.,  3500.,  3648.,  3796.,  1931.,  2009.,  2087.,  2165.,  2078.,  2234.,  2390.,  2546.,  5016.,  5344.,  5672.,  2830.,  3002.,  3174.,  3346.,  3170.,  3326.,  3482.,  3638.,  7312.,  7640.,  7968.,  4034.,  4206.,  4378.,  4550.,  4262.,  4418.,  4574.,  4730.,  9608.,  9936., 10264.,  5238.,  5410.,  5582.,  5754.,  1871.,  1957.,  2043.,  2129.,  4260.,  4440.,  4620.,  2327.,  2421.,  2515.,  2609.,  2473.,  2559.,  2645.,  2731.,  5520.,  5700.,  5880.,  2985.,  3079.,  3173.,  3267.,  3075.,  3161.,  3247.,  3333.,  6780.,  6960.,  7140.,  3643.,  3737.,  3831.,  3925.,  3677.,  3763.,  3849.,  3935.,  8040.,  8220.,  8400.,  4301.,  4395.,  4489.,  4583.};
  const std::array<int, 4> in_shape = {{ 3, 11, 11, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x11x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  30.,   70.,  804.,  948.,  260.,  174., 1396., 1668.,  596.,  278.,  446.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110.,  278.,  884., 1156., 1784., 2456., 3128., 1876., 2456., 3384., 4312., 2596., 1780.,  612.,  884., 3800., 1784., 2456., 1476., 5240., 2456., 3384., 2068., 2596.,  340.,  612., 3128., 3800., 1784., 1076., 4312., 5240., 2456., 1540., 2068., 1774.,  150., 2052., 2580., 3108.,  190., 2516., 3172., 3828.,  230.,  590., 2660., 3316., 3800., 5240., 6680., 4036., 4152., 5336., 6520., 2900.,  420., 2004., 2660., 8120., 3800., 5240., 3252., 5656., 4152., 5336., 2500., 2900., 1348., 2004., 6680., 8120., 3800., 2468., 4472., 5656., 4152., 2100., 2500., 3238.,  270., 3444., 4356., 5268.,  310., 1028., 1556., 2084.,   30.,   70., 2814., 3238., 2532., 3444., 4356., 3726.,  500., 1028., 1556.,  310.,   30.,   70.,  174., 1396., 1668.,  596.,  278., 1988., 2388.,  932.,  382.,  614.,  798.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150.,  382., 1476., 1876., 2456., 3384., 4312., 2596., 3128., 4312., 5496., 3316., 2116., 1076., 1476., 5240., 2456., 3384., 2068., 6680., 3128., 4312., 2660., 3316.,  676., 1076., 4312., 5240., 2456., 1540., 5496., 6680., 3128., 2004., 2660., 2262.,  190., 2516., 3172., 3828.,  230., 2980., 3764., 4548.,  270.,  694., 3252., 4036., 4152., 5336., 6520., 2900., 2456., 3384., 4312., 3620.,  756., 2468., 3252., 5656., 4152., 5336., 2500., 5240., 2456., 3384., 3092., 3620., 1684., 2468., 4472., 5656., 4152., 2100., 4312., 5240., 2456., 2564., 3092., 3726.,  310., 1028., 1556., 2084.,   30.,  660.,  804.,  948.,   70.,  174., 3238., 3726.,  500., 1028., 1556.,  310.,  516.,  660.,  804.,  798.,   70.,  110.,  278., 1988., 2388.,  932.,  382., 2580., 3108., 1268.,  486.,  782., 1286.,  110., 1588., 1988., 2388.,  150., 2052., 2580., 3108.,  190.,  486., 2068., 2596., 3128., 4312., 5496., 3316., 3800., 5240., 6680., 4036., 2452., 1540., 2068., 6680., 3128., 4312., 2660., 8120., 3800., 5240., 3252., 4036., 1012., 1540., 5496., 6680., 3128., 2004., 6680., 8120., 3800., 2468., 3252., 2750.,  230., 2980., 3764., 4548.,  270., 3444., 4356., 5268.,  310.,  798., 2500., 2900., 2456., 3384., 4312., 3620., 3128., 4312., 5496., 4340., 1092., 2100., 2500., 5240., 2456., 3384., 3092., 6680., 3128., 4312., 3684., 4340., 1700., 2100., 4312., 5240., 2456., 2564., 5496., 6680., 3128., 3028., 3684.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110.,  278.,  270.,  310.,  516.,  660.,  804.,  798.,  852., 1124., 1396., 1286.,  110.};
  const std::array<int, 4> in_shape = {{ 3, 11, 11, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x11x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   260.,   404.,   548.,   382.,   486.,   590.,   694.,   310.,   350.,   390.,   430.,  1268.,  1412.,  1556.,  1110.,  1214.,  1318.,  1422.,   590.,   630.,    30.,    70.,  1636.,  1780.,   260.,   174.,   278.,   382.,   486.,   230.,   270.,   310.,   350.,   980.,  1124.,  1268.,   902.,  1006.,  1110.,  1214.,   620.,   828.,  1036.,  1244.,  2280.,  2824.,  3368.,  2476.,  1148.,  1484.,  1820.,  1436.,  1644.,  1852.,  2060.,  4424.,  4968.,  5512.,  3164.,  3500.,  3836.,  4172.,  2892.,  3100.,   620.,   828.,  5544.,  6088.,  2280.,  1804.,  2140.,  2476.,  1148.,   950.,  1118.,  1286.,  1454.,  2932.,  3332.,  3732.,  2006.,  2238.,  2470.,  2702.,  2126.,  2294.,  2462.,  2630.,  3044.,  3444.,  3844.,  3630.,   150.,   382.,   614.,   614.,   782.,   950.,  1118.,  2132.,  2532.,  2932.,  1542.,  1774.,  2006.,  2238.,  1790.,  1958.,  2126.,  2294.,  4932.,  5332.,  3044.,  3166.,  3398.,  3630.,   150.,   190.,   486.,   782.,  1078.,  1604.,  2260.,  2916.,  1310.,  1670.,  2030.,  2390.,  2262.,  2558.,  2854.,  3150.,  6196.,  6852.,  7508.,  3830.,  4190.,  4550.,  4910.,  4334.,  4630.,   190.,   486.,  6052.,  6708.,  1604.,   590.,   950.,  1310.,  1670.,  1670.,  1966.,  2262.,  2558.,  4884.,  5540.,  6196.,  3110.,  3470.,  3830.,  4190.,  4012.,  4732.,  5452.,  6172.,  7016.,  8584., 10152.,  7404.,  2492.,  3340.,  4188.,  4316.,  5036.,  5756.,  6476., 12232., 13800., 15368.,  7580.,  8428.,  9276., 10124.,  9356., 10076.,  4012.,  4732., 16424., 17992.,  7016.,  5708.,  6556.,  7404.,  2492.,  2390.,  2814.,  3238.,  3662.,  6836.,  7748.,  8660.,  4214.,  4702.,  5190.,  5678.,  5358.,  5782.,  6206.,  6630.,  6436.,  7348.,  8260.,  7630.,   310.,   798.,  1286.,  1542.,  1966.,  2390.,  2814.,  5012.,  5924.,  6836.,  3238.,  3726.,  4214.,  4702.,  4510.,  4934.,  5358.,  5782., 11396., 12308.,  6436.,  6654.,  7142.,  7630.,   310.,   350.,   902.,  1454.,  2006.,  2948.,  4116.,  5284.,  2238.,  2854.,  3470.,  4086.,  4214.,  4766.,  5318.,  5870., 11124., 12292., 13460.,  6550.,  7166.,  7782.,  8398.,  8078.,  8630.,   350.,   902., 10468., 11636.,  2948.,  1006.,  1622.,  2238.,  2854.,  3110.,  3662.,  4214.,  4766.,  8788.,  9956., 11124.,  5318.,  5934.,  6550.,  7166.,  7404.,  8636.,  9868., 11100., 11752., 14344., 16936., 12332.,  3836.,  5196.,  6556.,  7196.,  8428.,  9660., 10892., 20040., 22632., 25224., 11996., 13356., 14716., 16076., 15820., 17052.,  7404.,  8636., 27304., 29896., 11752.,  9612., 10972., 12332.,  3836.,  3830.,  4510.,  5190.,  5870., 10740., 12164., 13588.,  6422.,  7166.,  7910.,  8654.,  8590.,  9270.,  9950., 10630.,  9828., 11252., 12676., 11630.,   470.,  1214.,  1958.,  2470.,  3150.,  3830.,  4510.,  7892.,  9316., 10740.,  4934.,  5678.,  6422.,  7166.,  7230.,  7910.,  8590.,  9270., 17860., 19284.,  9828., 10142., 10886., 11630.,   470.};
  const std::array<int, 4> in_shape = {{ 3, 11, 11, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x11x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,  161.,  166.,  171.,  176.,  181.,  186.,  105.,  108.,  111.,  114.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  231.,  236.,  241.,  246.,  251.,  256.,  147.,  150.,  153.,  156.,   81.,   86.,   91.,   96.,  220.,  232.,  244.,  256.,  268.,  280.,  161.,  168.,  352.,  368.,  384.,  400.,  416.,  432.,  231.,  240.,  249.,  258.,  151.,  156.,  161.,  166.,  388.,  400.,  412.,  424.,  436.,  448.,  259.,  266.,  576.,  592.,  608.,  624.,  640.,  656.,  357.,  366.,  375.,  384.,  221.,  226.,  231.,  236.,  556.,  568.,  580.,  592.,  604.,  616.,  357.,  364.,  800.,  816.,  832.,  848.,  864.,  880.,  483.,  492.,  501.,  510.,  188.,  192.,  196.,  200.,  419.,  428.,  437.,  446.,  455.,  464.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  306.,  312.,  279.,  290.,  301.,  312.,  616.,  640.,  664.,  688.,  712.,  736.,  371.,  384.,  748.,  776.,  804.,  832.,  860.,  888.,  441.,  456.,  471.,  486.,  433.,  444.,  455.,  466.,  952.,  976., 1000., 1024., 1048., 1072.,  553.,  566., 1140., 1168., 1196., 1224., 1252., 1280.,  651.,  666.,  681.,  696.,  587.,  598.,  609.,  620., 1288., 1312., 1336., 1360., 1384., 1408.,  735.,  748., 1532., 1560., 1588., 1616., 1644., 1672.,  861.,  876.,  891.,  906.,  329.,  336.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  795.,  812.,  829.,  846.,  863.,  880.,  441.,  450.,  459.,  468.,  427.,  434.,  441.,  448.,  911.,  926.,  941.,  956.,  971.,  986.,  504.,  512., 1033., 1050., 1067., 1084., 1101., 1118.,  567.,  576.,  585.,  594.,  330.,  340.,  350.,  360.,  689.,  710.,  731.,  752.,  773.,  794.,  385.,  396.,  755.,  778.,  801.,  824.,  847.,  870.,  420.,  432.,  444.,  456.,  470.,  480.,  490.,  500.,  983., 1004., 1025., 1046., 1067., 1088.,  539.,  550., 1077., 1100., 1123., 1146., 1169., 1192.,  588.,  600.,  612.,  624.,  675.,  698.,  721.,  744., 1408., 1456., 1504., 1552., 1600., 1648.,  791.,  816., 1540., 1592., 1644., 1696., 1748., 1800.,  861.,  888.,  915.,  942.,  997., 1020., 1043., 1066., 2080., 2128., 2176., 2224., 2272., 2320., 1141., 1166., 2268., 2320., 2372., 2424., 2476., 2528., 1239., 1266., 1293., 1320., 1319., 1342., 1365., 1388., 2752., 2800., 2848., 2896., 2944., 2992., 1491., 1516., 2996., 3048., 3100., 3152., 3204., 3256., 1617., 1644., 1671., 1698.,  611.,  624.,  637.,  650., 1265., 1292., 1319., 1346., 1373., 1400.,  686.,  700., 1359., 1388., 1417., 1446., 1475., 1504.,  735.,  750.,  765.,  780.,  873.,  902.,  931.,  960., 1804., 1864., 1924., 1984., 2044., 2104., 1001., 1032., 1936., 2000., 2064., 2128., 2192., 2256., 1071., 1104., 1137., 1170., 1279., 1308., 1337., 1366., 2644., 2704., 2764., 2824., 2884., 2944., 1435., 1466., 2832., 2896., 2960., 3024., 3088., 3152., 1533., 1566., 1599., 1632., 1685., 1714., 1743., 1772., 3484., 3544., 3604., 3664., 3724., 3784., 1869., 1900., 3728., 3792., 3856., 3920., 3984., 4048., 1995., 2028., 2061., 2094.,  752.,  768.,  784.,  800., 1547., 1580., 1613., 1646., 1679., 1712.,  833.,  850., 1641., 1676., 1711., 1746., 1781., 1816.,  882.,  900.,  918.,  936.,  976.,  992., 1008., 1024., 2009., 2042., 2075., 2108., 2141., 2174., 1071., 1088., 2131., 2166., 2201., 2236., 2271., 2306., 1134., 1152., 1170., 1188.,  627.,  646.,  665.,  684., 1283., 1322., 1361., 1400., 1439., 1478.,  700.,  720., 1349., 1390., 1431., 1472., 1513., 1554.,  735.,  756.,  777.,  798.,  893.,  912.,  931.,  950., 1829., 1868., 1907., 1946., 1985., 2024.,  980., 1000., 1923., 1964., 2005., 2046., 2087., 2128., 1029., 1050., 1071., 1092., 1269., 1310., 1351., 1392., 2596., 2680., 2764., 2848., 2932., 3016., 1421., 1464., 2728., 2816., 2904., 2992., 3080., 3168., 1491., 1536., 1581., 1626., 1843., 1884., 1925., 1966., 3772., 3856., 3940., 4024., 4108., 4192., 2023., 2066., 3960., 4048., 4136., 4224., 4312., 4400., 2121., 2166., 2211., 2256., 2417., 2458., 2499., 2540., 4948., 5032., 5116., 5200., 5284., 5368., 2625., 2668., 5192., 5280., 5368., 5456., 5544., 5632., 2751., 2796., 2841., 2886., 1034., 1056., 1078., 1100., 2111., 2156., 2201., 2246., 2291., 2336., 1127., 1150., 2205., 2252., 2299., 2346., 2393., 2440., 1176., 1200., 1224., 1248., 1467., 1514., 1561., 1608., 2992., 3088., 3184., 3280., 3376., 3472., 1631., 1680., 3124., 3224., 3324., 3424., 3524., 3624., 1701., 1752., 1803., 1854., 2125., 2172., 2219., 2266., 4336., 4432., 4528., 4624., 4720., 4816., 2317., 2366., 4524., 4624., 4724., 4824., 4924., 5024., 2415., 2466., 2517., 2568., 2783., 2830., 2877., 2924., 5680., 5776., 5872., 5968., 6064., 6160., 3003., 3052., 5924., 6024., 6124., 6224., 6324., 6424., 3129., 3180., 3231., 3282., 1175., 1200., 1225., 1250., 2393., 2444., 2495., 2546., 2597., 2648., 1274., 1300., 2487., 2540., 2593., 2646., 2699., 2752., 1323., 1350., 1377., 1404., 1525., 1550., 1575., 1600., 3107., 3158., 3209., 3260., 3311., 3362., 1638., 1664., 3229., 3282., 3335., 3388., 3441., 3494., 1701., 1728., 1755., 1782.};
  const std::array<int, 4> in_shape = {{ 3, 11, 11, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x11x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,   11.,   14.,   17.,   20.,   23.,   26.,   14.,   16.,   18.,   20.,   22.,   24.,   26.,   28.,   15.,   16.,   17.,   18.,   19.,   20.,   21.,   22.,   53.,   56.,   59.,   62.,   65.,   68.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,   74.,   76.,   78.,   80.,   82.,   84.,   43.,   44.,   45.,   46.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,   60.,   64.,   68.,   72.,   76.,   80.,   84.,   88.,  210.,  220.,  230.,  240.,  250.,  260.,  154.,  160.,  166.,  172.,  178.,  184.,  190.,  196.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  350.,  360.,  370.,  380.,  390.,  400.,  238.,  244.,  250.,  256.,  262.,  268.,  274.,  280.,  172.,  176.,  180.,  184.,  188.,  192.,  196.,  200.,  490.,  500.,  510.,  520.,  530.,  540.,  322.,  328.,  334.,  340.,  346.,  352.,  358.,  364.,  129.,  132.,  135.,  138.,  141.,  144.,  147.,  150.,  325.,  332.,  339.,  346.,  353.,  360.,  196.,  200.,  204.,  208.,  212.,  216.,  220.,  224.,  171.,  174.,  177.,  180.,  183.,  186.,  189.,  192.,  423.,  430.,  437.,  444.,  451.,  458.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,  213.,  216.,  219.,  222.,  225.,  228.,  231.,  234.,  521.,  528.,  535.,  542.,  549.,  556.,  308.,  312.,  316.,  320.,  324.,  328.,  332.,  336.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  619.,  626.,  633.,  640.,  647.,  654.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,    5.,   10.,   15.,   20.,   25.,   30.,   35.,   40.,   51.,   62.,   73.,   84.,   95.,  106.,   42.,   48.,   54.,   60.,   66.,   72.,   78.,   84.,   75.,   80.,   85.,   90.,   95.,  100.,  105.,  110.,  205.,  216.,  227.,  238.,  249.,  260.,  126.,  132.,  138.,  144.,  150.,  156.,  162.,  168.,  145.,  150.,  155.,  160.,  165.,  170.,  175.,  180.,  359.,  370.,  381.,  392.,  403.,  414.,  210.,  216.,  222.,  228.,  234.,  240.,  246.,  252.,  215.,  220.,  225.,  230.,  235.,  240.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  306.,  312.,  318.,  324.,  330.,  336.,  292.,  304.,  316.,  328.,  340.,  352.,  364.,  376.,  738.,  764.,  790.,  816.,  842.,  868.,  434.,  448.,  462.,  476.,  490.,  504.,  518.,  532.,  460.,  472.,  484.,  496.,  508.,  520.,  532.,  544., 1102., 1128., 1154., 1180., 1206., 1232.,  630.,  644.,  658.,  672.,  686.,  700.,  714.,  728.,  628.,  640.,  652.,  664.,  676.,  688.,  700.,  712., 1466., 1492., 1518., 1544., 1570., 1596.,  826.,  840.,  854.,  868.,  882.,  896.,  910.,  924.,  301.,  308.,  315.,  322.,  329.,  336.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  408.,  416.,  424.,  432.,  440.,  448.,  399.,  406.,  413.,  420.,  427.,  434.,  441.,  448.,  911.,  926.,  941.,  956.,  971.,  986.,  504.,  512.,  520.,  528.,  536.,  544.,  552.,  560.,  497.,  504.,  511.,  518.,  525.,  532.,  539.,  546., 1121., 1136., 1151., 1166., 1181., 1196.,  616.,  624.,  632.,  640.,  648.,  656.,  664.,  672.,  595.,  602.,  609.,  616.,  623.,  630.,  637.,  644., 1331., 1346., 1361., 1376., 1391., 1406.,  728.,  736.,  744.,  752.,  760.,  768.,  776.,  784.,    9.,   18.,   27.,   36.,   45.,   54.,   63.,   72.,   91.,  110.,  129.,  148.,  167.,  186.,   70.,   80.,   90.,  100.,  110.,  120.,  130.,  140.,  135.,  144.,  153.,  162.,  171.,  180.,  189.,  198.,  357.,  376.,  395.,  414.,  433.,  452.,  210.,  220.,  230.,  240.,  250.,  260.,  270.,  280.,  261.,  270.,  279.,  288.,  297.,  306.,  315.,  324.,  623.,  642.,  661.,  680.,  699.,  718.,  350.,  360.,  370.,  380.,  390.,  400.,  410.,  420.,  387.,  396.,  405.,  414.,  423.,  432.,  441.,  450.,  889.,  908.,  927.,  946.,  965.,  984.,  490.,  500.,  510.,  520.,  530.,  540.,  550.,  560.,  524.,  544.,  564.,  584.,  604.,  624.,  644.,  664., 1266., 1308., 1350., 1392., 1434., 1476.,  714.,  736.,  758.,  780.,  802.,  824.,  846.,  868.,  804.,  824.,  844.,  864.,  884.,  904.,  924.,  944., 1854., 1896., 1938., 1980., 2022., 2064., 1022., 1044., 1066., 1088., 1110., 1132., 1154., 1176., 1084., 1104., 1124., 1144., 1164., 1184., 1204., 1224., 2442., 2484., 2526., 2568., 2610., 2652., 1330., 1352., 1374., 1396., 1418., 1440., 1462., 1484.,  473.,  484.,  495.,  506.,  517.,  528.,  539.,  550., 1077., 1100., 1123., 1146., 1169., 1192.,  588.,  600.,  612.,  624.,  636.,  648.,  660.,  672.,  627.,  638.,  649.,  660.,  671.,  682.,  693.,  704., 1399., 1422., 1445., 1468., 1491., 1514.,  756.,  768.,  780.,  792.,  804.,  816.,  828.,  840.,  781.,  792.,  803.,  814.,  825.,  836.,  847.,  858., 1721., 1744., 1767., 1790., 1813., 1836.,  924.,  936.,  948.,  960.,  972.,  984.,  996., 1008.,  935.,  946.,  957.,  968.,  979.,  990., 1001., 1012., 2043., 2066., 2089., 2112., 2135., 2158., 1092., 1104., 1116., 1128., 1140., 1152., 1164., 1176.};
  const std::array<int, 4> in_shape = {{ 3, 11, 11, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x11x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  197.,   203.,   209.,   215.,   624.,   644.,   664.,   684.,   704.,   724.,   487.,   501.,  1148.,  1184.,  1220.,  1256.,  1292.,  1328.,   765.,   787.,   809.,   831.,   281.,   287.,   293.,   299.,   904.,   924.,   944.,   964.,   984.,  1004.,   683.,   697.,  1652.,  1688.,  1724.,  1760.,  1796.,  1832.,  1073.,  1095.,  1117.,  1139.,   508.,   544.,   580.,   616.,  1092.,  1180.,  1268.,  1356.,  1444.,  1532.,  1136.,  1188.,  1628.,  1748.,  1868.,  1988.,  2108.,  2228.,  1692.,  1760.,   420.,   488.,   628.,   664.,   700.,   736.,  1428.,  1516.,  1604.,  1692.,  1780.,  1868.,   968.,  1020.,  1900.,  2020.,  2140.,  2260.,  2380.,  2500.,  1236.,  1304.,  1372.,  1440.,  1132.,  1168.,  1204.,  1240.,  2660.,  2748.,  2836.,  2924.,  3012.,  3100.,  1696.,  1748.,  3580.,  3700.,  3820.,  3940.,  4060.,  4180.,  2188.,  2256.,  2324.,  2392.,  1403.,  1433.,  1463.,  1493.,  3148.,  3216.,  3284.,  3352.,  3420.,  3488.,  1853.,  1891.,  3896.,  3980.,  4064.,  4148.,  4232.,  4316.,  2243.,  2289.,  2335.,  2381.,  2080.,  2164.,  2248.,  2332.,  2700.,  2884.,  3068.,  3252.,  3436.,  3620.,  2804.,  2904.,  3236.,  3452.,  3668.,  3884.,  4100.,  4316.,  3360.,  3476.,   648.,   764.,  1336.,  1420.,  1504.,  1588.,  2844.,  3028.,  3212.,  3396.,  3580.,  3764.,  1772.,  1872.,  3316.,  3532.,  3748.,  3964.,  4180.,  4396.,  2040.,  2156.,  2272.,  2388.,  2512.,  2596.,  2680.,  2764.,  5420.,  5604.,  5788.,  5972.,  6156.,  6340.,  3172.,  3272.,  6340.,  6556.,  6772.,  6988.,  7204.,  7420.,  3664.,  3780.,  3896.,  4012.,  2525.,  2579.,  2633.,  2687.,  5392.,  5508.,  5624.,  5740.,  5856.,  5972.,  3023.,  3085.,  6140.,  6272.,  6404.,  6536.,  6668.,  6800.,  3413.,  3483.,  3553.,  3623.,  3281.,  3335.,  3389.,  3443.,  3560.,  3676.,  3792.,  3908.,  4024.,  4140.,  3891.,  3953.,  4020.,  4152.,  4284.,  4416.,  4548.,  4680.,  4393.,  4463.,    53.,   123.,  2555.,  2633.,  2711.,  2789.,  5340.,  5504.,  5668.,  5832.,  5996.,  6160.,  2989.,  3075.,  5864.,  6044.,  6224.,  6404.,  6584.,  6764.,  3267.,  3361.,  3455.,  3549.,  3647.,  3725.,  3803.,  3881.,  7636.,  7800.,  7964.,  8128.,  8292.,  8456.,  4193.,  4279.,  8384.,  8564.,  8744.,  8924.,  9104.,  9284.,  4583.,  4677.,  4771.,  4865.,  5224.,  5404.,  5584.,  5764.,  5916.,  6292.,  6668.,  7044.,  7420.,  7796.,  6140.,  6336.,  6452.,  6860.,  7268.,  7676.,  8084.,  8492.,  6696.,  6908.,  1104.,  1316.,  2752.,  2932.,  3112.,  3292.,  5676.,  6052.,  6428.,  6804.,  7180.,  7556.,  3380.,  3576.,  6148.,  6556.,  6964.,  7372.,  7780.,  8188.,  3648.,  3860.,  4072.,  4284.,  5272.,  5452.,  5632.,  5812., 10940., 11316., 11692., 12068., 12444., 12820.,  6124.,  6320., 11860., 12268., 12676., 13084., 13492., 13900.,  6616.,  6828.,  7040.,  7252.,  4769.,  4871.,  4973.,  5075.,  9880., 10092., 10304., 10516., 10728., 10940.,  5363.,  5473., 10628., 10856., 11084., 11312., 11540., 11768.,  5753.,  5871.,  5989.,  6107.,  6796.,  7024.,  7252.,  7480.,  7524.,  7996.,  8468.,  8940.,  9412.,  9884.,  7808.,  8052.,  8060.,  8564.,  9068.,  9572., 10076., 10580.,  8364.,  8624.,  1332.,  1592.,  3460.,  3688.,  3916.,  4144.,  7092.,  7564.,  8036.,  8508.,  8980.,  9452.,  4184.,  4428.,  7564.,  8068.,  8572.,  9076.,  9580., 10084.,  4452.,  4712.,  4972.,  5232.,  6652.,  6880.,  7108.,  7336., 13700., 14172., 14644., 15116., 15588., 16060.,  7600.,  7844., 14620., 15124., 15628., 16132., 16636., 17140.,  8092.,  8352.,  8612.,  8872.,  5891.,  6017.,  6143.,  6269., 12124., 12384., 12644., 12904., 13164., 13424.,  6533.,  6667., 12872., 13148., 13424., 13700., 13976., 14252.,  6923.,  7065.,  7207.,  7349.,  7655.,  7781.,  7907.,  8033.,  7700.,  7960.,  8220.,  8480.,  8740.,  9000.,  8409.,  8543.,  8160.,  8436.,  8712.,  8988.,  9264.,  9540.,  8911.,  9053.,   107.,   249.,  4913.,  5063.,  5213.,  5363., 10056., 10364., 10672., 10980., 11288., 11596.,  5491.,  5649., 10580., 10904., 11228., 11552., 11876., 12200.,  5769.,  5935.,  6101.,  6267.,  7013.,  7163.,  7313.,  7463., 14368., 14676., 14984., 15292., 15600., 15908.,  7703.,  7861., 15116., 15440., 15764., 16088., 16412., 16736.,  8093.,  8259.,  8425.,  8591.,  9940., 10264., 10588., 10912., 10740., 11404., 12068., 12732., 13396., 14060., 11144., 11484., 11276., 11972., 12668., 13364., 14060., 14756., 11700., 12056.,  1788.,  2144.,  4876.,  5200.,  5524.,  5848.,  9924., 10588., 11252., 11916., 12580., 13244.,  5792.,  6132., 10396., 11092., 11788., 12484., 13180., 13876.,  6060.,  6416.,  6772.,  7128.,  9412.,  9736., 10060., 10384., 19220., 19884., 20548., 21212., 21876., 22540., 10552., 10892., 20140., 20836., 21532., 22228., 22924., 23620., 11044., 11400., 11756., 12112.,  8135.,  8309.,  8483.,  8657., 16612., 16968., 17324., 17680., 18036., 18392.,  8873.,  9055., 17360., 17732., 18104., 18476., 18848., 19220.,  9263.,  9453.,  9643.,  9833., 11512., 11884., 12256., 12628., 12348., 13108., 13868., 14628., 15388., 16148., 12812., 13200., 12884., 13676., 14468., 15260., 16052., 16844., 13368., 13772.,  2016.,  2420.,  5584.,  5956.,  6328.,  6700., 11340., 12100., 12860., 13620., 14380., 15140.,  6596.,  6984., 11812., 12604., 13396., 14188., 14980., 15772.,  6864.,  7268.,  7672.,  8076., 10792., 11164., 11536., 11908., 21980., 22740., 23500., 24260., 25020., 25780., 12028., 12416., 22900., 23692., 24484., 25276., 26068., 26860., 12520., 12924., 13328., 13732.,  9257.,  9455.,  9653.,  9851., 18856., 19260., 19664., 20068., 20472., 20876., 10043., 10249., 19604., 20024., 20444., 20864., 21284., 21704., 10433., 10647., 10861., 11075., 12029., 12227., 12425., 12623., 11840., 12244., 12648., 13052., 13456., 13860., 12927., 13133., 12300., 12720., 13140., 13560., 13980., 14400., 13429., 13643.,   161.,   375.};
  const std::array<int, 4> in_shape = {{ 3, 11, 11, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 128.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x11x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,    64.,    84.,   104.,   124.,   144.,   164.,    95.,   109.,   123.,   137.,   151.,   165.,   179.,   193.,    89.,    95.,   101.,   107.,   113.,   119.,   125.,   131.,   344.,   364.,   384.,   404.,   424.,   444.,   291.,   305.,   319.,   333.,   347.,   361.,   375.,   389.,   173.,   179.,   185.,   191.,   197.,   203.,   209.,   215.,   624.,   644.,   664.,   684.,   704.,   724.,   487.,   501.,   515.,   529.,   543.,   557.,   571.,   585.,   257.,   263.,   269.,   275.,   281.,   287.,   293.,   299.,   904.,   924.,   944.,   964.,   984.,  1004.,   683.,   697.,   711.,   725.,   739.,   753.,   767.,   781.,   358.,   386.,   414.,   442.,   470.,   498.,   526.,   554.,  1400.,  1472.,  1544.,  1616.,  1688.,  1760.,  1082.,  1126.,  1170.,  1214.,  1258.,  1302.,  1346.,  1390.,   750.,   778.,   806.,   834.,   862.,   890.,   918.,   946.,  2408.,  2480.,  2552.,  2624.,  2696.,  2768.,  1698.,  1742.,  1786.,  1830.,  1874.,  1918.,  1962.,  2006.,  1142.,  1170.,  1198.,  1226.,  1254.,  1282.,  1310.,  1338.,  3416.,  3488.,  3560.,  3632.,  3704.,  3776.,  2314.,  2358.,  2402.,  2446.,  2490.,  2534.,  2578.,  2622.,   941.,   963.,   985.,  1007.,  1029.,  1051.,  1073.,  1095.,  2400.,  2452.,  2504.,  2556.,  2608.,  2660.,  1463.,  1493.,  1523.,  1553.,  1583.,  1613.,  1643.,  1673.,  1249.,  1271.,  1293.,  1315.,  1337.,  1359.,  1381.,  1403.,  3128.,  3180.,  3232.,  3284.,  3336.,  3388.,  1883.,  1913.,  1943.,  1973.,  2003.,  2033.,  2063.,  2093.,  1557.,  1579.,  1601.,  1623.,  1645.,  1667.,  1689.,  1711.,  3856.,  3908.,  3960.,  4012.,  4064.,  4116.,  2303.,  2333.,  2363.,  2393.,  2423.,  2453.,  2483.,  2513.,  1865.,  1887.,  1909.,  1931.,  1953.,  1975.,  1997.,  2019.,  4584.,  4636.,  4688.,  4740.,  4792.,  4844.,  2723.,  2753.,  2783.,  2813.,  2843.,  2873.,  2903.,  2933.,    29.,    67.,   105.,   143.,   181.,   219.,   257.,   295.,   368.,   452.,   536.,   620.,   704.,   788.,   311.,   357.,   403.,   449.,   495.,   541.,   587.,   633.,   561.,   599.,   637.,   675.,   713.,   751.,   789.,   827.,  1544.,  1628.,  1712.,  1796.,  1880.,  1964.,   955.,  1001.,  1047.,  1093.,  1139.,  1185.,  1231.,  1277.,  1093.,  1131.,  1169.,  1207.,  1245.,  1283.,  1321.,  1359.,  2720.,  2804.,  2888.,  2972.,  3056.,  3140.,  1599.,  1645.,  1691.,  1737.,  1783.,  1829.,  1875.,  1921.,  1625.,  1663.,  1701.,  1739.,  1777.,  1815.,  1853.,  1891.,  3896.,  3980.,  4064.,  4148.,  4232.,  4316.,  2243.,  2289.,  2335.,  2381.,  2427.,  2473.,  2519.,  2565.,  2198.,  2290.,  2382.,  2474.,  2566.,  2658.,  2750.,  2842.,  5592.,  5792.,  5992.,  6192.,  6392.,  6592.,  3306.,  3414.,  3522.,  3630.,  3738.,  3846.,  3954.,  4062.,  3486.,  3578.,  3670.,  3762.,  3854.,  3946.,  4038.,  4130.,  8392.,  8592.,  8792.,  8992.,  9192.,  9392.,  4818.,  4926.,  5034.,  5142.,  5250.,  5358.,  5466.,  5574.,  4774.,  4866.,  4958.,  5050.,  5142.,  5234.,  5326.,  5418., 11192., 11392., 11592., 11792., 11992., 12192.,  6330.,  6438.,  6546.,  6654.,  6762.,  6870.,  6978.,  7086.,  2309.,  2363.,  2417.,  2471.,  2525.,  2579.,  2633.,  2687.,  5392.,  5508.,  5624.,  5740.,  5856.,  5972.,  3023.,  3085.,  3147.,  3209.,  3271.,  3333.,  3395.,  3457.,  3065.,  3119.,  3173.,  3227.,  3281.,  3335.,  3389.,  3443.,  7016.,  7132.,  7248.,  7364.,  7480.,  7596.,  3891.,  3953.,  4015.,  4077.,  4139.,  4201.,  4263.,  4325.,  3821.,  3875.,  3929.,  3983.,  4037.,  4091.,  4145.,  4199.,  8640.,  8756.,  8872.,  8988.,  9104.,  9220.,  4759.,  4821.,  4883.,  4945.,  5007.,  5069.,  5131.,  5193.,  4577.,  4631.,  4685.,  4739.,  4793.,  4847.,  4901.,  4955., 10264., 10380., 10496., 10612., 10728., 10844.,  5627.,  5689.,  5751.,  5813.,  5875.,  5937.,  5999.,  6061.,    53.,   123.,   193.,   263.,   333.,   403.,   473.,   543.,   672.,   820.,   968.,  1116.,  1264.,  1412.,   527.,   605.,   683.,   761.,   839.,   917.,   995.,  1073.,  1033.,  1103.,  1173.,  1243.,  1313.,  1383.,  1453.,  1523.,  2744.,  2892.,  3040.,  3188.,  3336.,  3484.,  1619.,  1697.,  1775.,  1853.,  1931.,  2009.,  2087.,  2165.,  2013.,  2083.,  2153.,  2223.,  2293.,  2363.,  2433.,  2503.,  4816.,  4964.,  5112.,  5260.,  5408.,  5556.,  2711.,  2789.,  2867.,  2945.,  3023.,  3101.,  3179.,  3257.,  2993.,  3063.,  3133.,  3203.,  3273.,  3343.,  3413.,  3483.,  6888.,  7036.,  7184.,  7332.,  7480.,  7628.,  3803.,  3881.,  3959.,  4037.,  4115.,  4193.,  4271.,  4349.,  4038.,  4194.,  4350.,  4506.,  4662.,  4818.,  4974.,  5130.,  9784., 10112., 10440., 10768., 11096., 11424.,  5530.,  5702.,  5874.,  6046.,  6218.,  6390.,  6562.,  6734.,  6222.,  6378.,  6534.,  6690.,  6846.,  7002.,  7158.,  7314., 14376., 14704., 15032., 15360., 15688., 16016.,  7938.,  8110.,  8282.,  8454.,  8626.,  8798.,  8970.,  9142.,  8406.,  8562.,  8718.,  8874.,  9030.,  9186.,  9342.,  9498., 18968., 19296., 19624., 19952., 20280., 20608., 10346., 10518., 10690., 10862., 11034., 11206., 11378., 11550.,  3677.,  3763.,  3849.,  3935.,  4021.,  4107.,  4193.,  4279.,  8384.,  8564.,  8744.,  8924.,  9104.,  9284.,  4583.,  4677.,  4771.,  4865.,  4959.,  5053.,  5147.,  5241.,  4881.,  4967.,  5053.,  5139.,  5225.,  5311.,  5397.,  5483., 10904., 11084., 11264., 11444., 11624., 11804.,  5899.,  5993.,  6087.,  6181.,  6275.,  6369.,  6463.,  6557.,  6085.,  6171.,  6257.,  6343.,  6429.,  6515.,  6601.,  6687., 13424., 13604., 13784., 13964., 14144., 14324.,  7215.,  7309.,  7403.,  7497.,  7591.,  7685.,  7779.,  7873.,  7289.,  7375.,  7461.,  7547.,  7633.,  7719.,  7805.,  7891., 15944., 16124., 16304., 16484., 16664., 16844.,  8531.,  8625.,  8719.,  8813.,  8907.,  9001.,  9095.,  9189.};
  const std::array<int, 4> in_shape = {{ 3, 11, 11, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x11x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   446.,   614.,   782.,   950.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  3508.,  4036.,   340.,   868.,   724.,   996.,  1268.,  1540.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   180.,   452.,   724.,   996.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  1396.,  1924.,  2452.,  2980.,  1542.,  1774.,   150.,   382.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  2660.,  3060.,   260.,   660.,  1732.,  2388.,  3044.,  3700.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   420.,  1076.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1060.,  1460.,  1860.,  2260.,  2814.,  3238.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   110.,   150.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  3238.,  3726.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,   270.,   310.,    30.,    70.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,   614.,   846.,  1078.,  1310.,   694.,   798.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  4356.,  5012.,   420.,  1076.,  1060.,  1460.,  1860.,  2260.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1732.,  2388.,  3044.,  3700.,  1966.,  2262.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  3508.,  4036.,   340.,   868.,  2068.,  2852.,  3636.,  4420.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   500.,  1284.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  1396.,  1924.,  2452.,  2980.,  3238.,  3726.,   310.,   798.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  2262.,  2750.,  3238.,  3726.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   694.,   798.,    70.,   174.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,   782.,  1078.,  1374.,  1670.,  1118.,  1286.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,   782.,  1078.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  5204.,  5988.,   500.,  1284.,  1396.,  1924.,  2452.,  2980.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  2068.,  2852.,  3636.,  4420.,  2390.,  2750.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  4356.,  5012.,   420.,  1076.,  1060.,  1460.,  1860.,  2260.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1732.,  2388.,  3044.,  3700.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1118.,  1286.,   110.,   278.};
  const std::array<int, 4> in_shape = {{ 3, 11, 11, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x11x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   420.,   564.,   708.,   852.,   996.,  1140.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,   590.,   630.,    30.,    70.,   110.,   150.,   190.,   230.,  1796.,  1940.,   420.,   564.,   708.,   852.,   486.,   590.,   694.,   798.,   902.,  1006.,  1110.,  1214.,   510.,   550.,   590.,   630.,    30.,    70.,   110.,   150.,  1508.,  1652.,  1796.,  1940.,   420.,   564.,   278.,   382.,   486.,   590.,   694.,   798.,   902.,  1006.,   430.,   470.,   510.,   550.,   590.,   630.,    30.,    70.,  1220.,  1364.,  1508.,  1652.,  1796.,  1940.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,   460.,   668.,   876.,  1084.,  1292.,  1500.,  1708.,  1916.,  2536.,  3080.,  3624.,  4168.,  4712.,  5256.,  3068.,  3404.,  2076.,  2412.,  2748.,  3084.,  3420.,  3756.,  2732.,  2940.,   460.,   668.,   876.,  1084.,  1292.,  1500.,  5800.,  6344.,  2536.,  3080.,  3624.,  4168.,  2396.,  2732.,  3068.,  3404.,  2076.,  2412.,  2748.,  3084.,  2316.,  2524.,  2732.,  2940.,   460.,   668.,   876.,  1084.,  4712.,  5256.,  5800.,  6344.,  2536.,  3080.,  1724.,  2060.,  2396.,  2732.,  3068.,  3404.,  2076.,  2412.,  1790.,  1958.,  2126.,  2294.,  2462.,  2630.,   110.,   278.,  2916.,  3316.,  3716.,  4116.,  4516.,  4916.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  2462.,  2630.,  2116.,  2516.,  2916.,  3316.,  3716.,  4116.,  3398.,  3630.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  4004.,  4404.,  2116.,  2516.,  2916.,  3316.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,   614.,   846.,   782.,   950.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  3204.,  3604.,  4004.,  4404.,  2116.,  2516.,  2470.,  2702.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,  2788.,  3444.,  4100.,  4756.,  5412.,  6068.,  2390.,  2750.,  3110.,  3470.,  3830.,  4190.,  4550.,  4910.,  4334.,  4630.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  7236.,  7892.,  2788.,  3444.,  4100.,  4756.,  1670.,  2030.,  2390.,  2750.,  3110.,  3470.,  3830.,  4190.,  3742.,  4038.,  4334.,  4630.,   190.,   486.,   782.,  1078.,  5924.,  6580.,  7236.,  7892.,  2788.,  3444.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,  3110.,  3470.,  3150.,  3446.,  3742.,  4038.,  4334.,  4630.,   190.,   486.,  4612.,  5268.,  5924.,  6580.,  7236.,  7892.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,  2828.,  3548.,  4268.,  4988.,  5708.,  6428.,  7148.,  7868.,  7272.,  8840., 10408., 11976., 13544., 15112.,  8508.,  9356.,  4444.,  5292.,  6140.,  6988.,  7836.,  8684.,  8172.,  8892.,  2828.,  3548.,  4268.,  4988.,  5708.,  6428., 16680., 18248.,  7272.,  8840., 10408., 11976.,  6812.,  7660.,  8508.,  9356.,  4444.,  5292.,  6140.,  6988.,  6732.,  7452.,  8172.,  8892.,  2828.,  3548.,  4268.,  4988., 13544., 15112., 16680., 18248.,  7272.,  8840.,  5116.,  5964.,  6812.,  7660.,  8508.,  9356.,  4444.,  5292.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,   270.,   694.,  6308.,  7220.,  8132.,  9044.,  9956., 10868.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,  3662.,  4086.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,  4484.,  5396.,  6308.,  7220.,  8132.,  9044.,  7142.,  7630.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  2814.,  3238.,  3662.,  4086.,  4510.,  4934.,  5358.,  5782.,  9444., 10356.,  4484.,  5396.,  6308.,  7220.,  6166.,  6654.,  7142.,  7630.,   310.,   798.,  1286.,  1774.,  1966.,  2390.,  2814.,  3238.,  3662.,  4086.,  4510.,  4934.,  7620.,  8532.,  9444., 10356.,  4484.,  5396.,  5190.,  5678.,  6166.,  6654.,  7142.,  7630.,   310.,   798.,   350.,   902.,  1454.,  2006.,  2558.,  3110.,  3662.,  4214.,  5156.,  6324.,  7492.,  8660.,  9828., 10996.,  4086.,  4702.,  5318.,  5934.,  6550.,  7166.,  7782.,  8398.,  8078.,  8630.,   350.,   902.,  1454.,  2006.,  2558.,  3110., 12676., 13844.,  5156.,  6324.,  7492.,  8660.,  2854.,  3470.,  4086.,  4702.,  5318.,  5934.,  6550.,  7166.,  6974.,  7526.,  8078.,  8630.,   350.,   902.,  1454.,  2006., 10340., 11508., 12676., 13844.,  5156.,  6324.,  1622.,  2238.,  2854.,  3470.,  4086.,  4702.,  5318.,  5934.,  5870.,  6422.,  6974.,  7526.,  8078.,  8630.,   350.,   902.,  8004.,  9172., 10340., 11508., 12676., 13844.,   390.,  1006.,  1622.,  2238.,  2854.,  3470.,  4086.,  4702.,  5196.,  6428.,  7660.,  8892., 10124., 11356., 12588., 13820., 12008., 14600., 17192., 19784., 22376., 24968., 13948., 15308.,  6812.,  8172.,  9532., 10892., 12252., 13612., 13612., 14844.,  5196.,  6428.,  7660.,  8892., 10124., 11356., 27560., 30152., 12008., 14600., 17192., 19784., 11228., 12588., 13948., 15308.,  6812.,  8172.,  9532., 10892., 11148., 12380., 13612., 14844.,  5196.,  6428.,  7660.,  8892., 22376., 24968., 27560., 30152., 12008., 14600.,  8508.,  9868., 11228., 12588., 13948., 15308.,  6812.,  8172.,  7230.,  7910.,  8590.,  9270.,  9950., 10630.,   430.,  1110.,  9700., 11124., 12548., 13972., 15396., 16820.,   470.,  1214.,  1958.,  2702.,  3446.,  4190.,  4934.,  5678.,  5870.,  6550.,  7230.,  7910.,  8590.,  9270.,  9950., 10630.,  6852.,  8276.,  9700., 11124., 12548., 13972., 10886., 11630.,   470.,  1214.,  1958.,  2702.,  3446.,  4190.,  4510.,  5190.,  5870.,  6550.,  7230.,  7910.,  8590.,  9270., 14884., 16308.,  6852.,  8276.,  9700., 11124.,  9398., 10142., 10886., 11630.,   470.,  1214.,  1958.,  2702.,  3150.,  3830.,  4510.,  5190.,  5870.,  6550.,  7230.,  7910., 12036., 13460., 14884., 16308.,  6852.,  8276.,  7910.,  8654.,  9398., 10142., 10886., 11630.,   470.,  1214.};
  const std::array<int, 4> in_shape = {{ 3, 11, 11, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x11x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   65.,    66.,    67.,    68.,    69.,    70.,    71.,    72.,   187.,   190.,   193.,   196.,   199.,   202.,   205.,   208.,   211.,   214.,   217.,   220.,   138.,   140.,   142.,   144.,   317.,   322.,   327.,   332.,   337.,   342.,   347.,   352.,   357.,   362.,   367.,   372.,   207.,   210.,   213.,   216.,   219.,   222.,   225.,   228.,    93.,    94.,    95.,    96.,    97.,    98.,    99.,   100.,   271.,   274.,   277.,   280.,   283.,   286.,   289.,   292.,   295.,   298.,   301.,   304.,   194.,   196.,   198.,   200.,   457.,   462.,   467.,   472.,   477.,   482.,   487.,   492.,   497.,   502.,   507.,   512.,   291.,   294.,   297.,   300.,   303.,   306.,   309.,   312.,   157.,   162.,   167.,   172.,   177.,   182.,   187.,   192.,   428.,   440.,   452.,   464.,   476.,   488.,   500.,   512.,   524.,   536.,   548.,   560.,   315.,   322.,   329.,   336.,   688.,   704.,   720.,   736.,   752.,   768.,   784.,   800.,   816.,   832.,   848.,   864.,   453.,   462.,   471.,   480.,   489.,   498.,   507.,   516.,   297.,   302.,   307.,   312.,   317.,   322.,   327.,   332.,   764.,   776.,   788.,   800.,   812.,   824.,   836.,   848.,   860.,   872.,   884.,   896.,   511.,   518.,   525.,   532.,  1136.,  1152.,  1168.,  1184.,  1200.,  1216.,  1232.,  1248.,  1264.,  1280.,  1296.,  1312.,   705.,   714.,   723.,   732.,   741.,   750.,   759.,   768.,   437.,   442.,   447.,   452.,   457.,   462.,   467.,   472.,  1100.,  1112.,  1124.,  1136.,  1148.,  1160.,  1172.,  1184.,  1196.,  1208.,  1220.,  1232.,   707.,   714.,   721.,   728.,  1584.,  1600.,  1616.,  1632.,  1648.,  1664.,  1680.,  1696.,  1712.,  1728.,  1744.,  1760.,   957.,   966.,   975.,   984.,   993.,  1002.,  1011.,  1020.,   372.,   376.,   380.,   384.,   388.,   392.,   396.,   400.,   829.,   838.,   847.,   856.,   865.,   874.,   883.,   892.,   901.,   910.,   919.,   928.,   485.,   490.,   495.,   500.,  1015.,  1026.,  1037.,  1048.,  1059.,  1070.,  1081.,  1092.,  1103.,  1114.,  1125.,  1136.,   582.,   588.,   594.,   600.,   606.,   612.,   618.,   624.,   547.,   558.,   569.,   580.,   591.,   602.,   613.,   624.,  1208.,  1232.,  1256.,  1280.,  1304.,  1328.,  1352.,  1376.,  1400.,  1424.,  1448.,  1472.,   729.,   742.,   755.,   768.,  1468.,  1496.,  1524.,  1552.,  1580.,  1608.,  1636.,  1664.,  1692.,  1720.,  1748.,  1776.,   867.,   882.,   897.,   912.,   927.,   942.,   957.,   972.,   855.,   866.,   877.,   888.,   899.,   910.,   921.,   932.,  1880.,  1904.,  1928.,  1952.,  1976.,  2000.,  2024.,  2048.,  2072.,  2096.,  2120.,  2144.,  1093.,  1106.,  1119.,  1132.,  2252.,  2280.,  2308.,  2336.,  2364.,  2392.,  2420.,  2448.,  2476.,  2504.,  2532.,  2560.,  1287.,  1302.,  1317.,  1332.,  1347.,  1362.,  1377.,  1392.,  1163.,  1174.,  1185.,  1196.,  1207.,  1218.,  1229.,  1240.,  2552.,  2576.,  2600.,  2624.,  2648.,  2672.,  2696.,  2720.,  2744.,  2768.,  2792.,  2816.,  1457.,  1470.,  1483.,  1496.,  3036.,  3064.,  3092.,  3120.,  3148.,  3176.,  3204.,  3232.,  3260.,  3288.,  3316.,  3344.,  1707.,  1722.,  1737.,  1752.,  1767.,  1782.,  1797.,  1812.,   651.,   658.,   665.,   672.,   679.,   686.,   693.,   700.,  1387.,  1402.,  1417.,  1432.,  1447.,  1462.,  1477.,  1492.,  1507.,  1522.,  1537.,  1552.,   776.,   784.,   792.,   800.,  1573.,  1590.,  1607.,  1624.,  1641.,  1658.,  1675.,  1692.,  1709.,  1726.,  1743.,  1760.,   873.,   882.,   891.,   900.,   909.,   918.,   927.,   936.,   847.,   854.,   861.,   868.,   875.,   882.,   889.,   896.,  1807.,  1822.,  1837.,  1852.,  1867.,  1882.,  1897.,  1912.,  1927.,  1942.,  1957.,  1972.,  1000.,  1008.,  1016.,  1024.,  2049.,  2066.,  2083.,  2100.,  2117.,  2134.,  2151.,  2168.,  2185.,  2202.,  2219.,  2236.,  1125.,  1134.,  1143.,  1152.,  1161.,  1170.,  1179.,  1188.,   650.,   660.,   670.,   680.,   690.,   700.,   710.,   720.,  1357.,  1378.,  1399.,  1420.,  1441.,  1462.,  1483.,  1504.,  1525.,  1546.,  1567.,  1588.,   759.,   770.,   781.,   792.,  1487.,  1510.,  1533.,  1556.,  1579.,  1602.,  1625.,  1648.,  1671.,  1694.,  1717.,  1740.,   828.,   840.,   852.,   864.,   876.,   888.,   900.,   912.,   930.,   940.,   950.,   960.,   970.,   980.,   990.,  1000.,  1945.,  1966.,  1987.,  2008.,  2029.,  2050.,  2071.,  2092.,  2113.,  2134.,  2155.,  2176.,  1067.,  1078.,  1089.,  1100.,  2131.,  2154.,  2177.,  2200.,  2223.,  2246.,  2269.,  2292.,  2315.,  2338.,  2361.,  2384.,  1164.,  1176.,  1188.,  1200.,  1212.,  1224.,  1236.,  1248.,  1327.,  1350.,  1373.,  1396.,  1419.,  1442.,  1465.,  1488.,  2768.,  2816.,  2864.,  2912.,  2960.,  3008.,  3056.,  3104.,  3152.,  3200.,  3248.,  3296.,  1557.,  1582.,  1607.,  1632.,  3028.,  3080.,  3132.,  3184.,  3236.,  3288.,  3340.,  3392.,  3444.,  3496.,  3548.,  3600.,  1695.,  1722.,  1749.,  1776.,  1803.,  1830.,  1857.,  1884.,  1971.,  1994.,  2017.,  2040.,  2063.,  2086.,  2109.,  2132.,  4112.,  4160.,  4208.,  4256.,  4304.,  4352.,  4400.,  4448.,  4496.,  4544.,  4592.,  4640.,  2257.,  2282.,  2307.,  2332.,  4484.,  4536.,  4588.,  4640.,  4692.,  4744.,  4796.,  4848.,  4900.,  4952.,  5004.,  5056.,  2451.,  2478.,  2505.,  2532.,  2559.,  2586.,  2613.,  2640.,  2615.,  2638.,  2661.,  2684.,  2707.,  2730.,  2753.,  2776.,  5456.,  5504.,  5552.,  5600.,  5648.,  5696.,  5744.,  5792.,  5840.,  5888.,  5936.,  5984.,  2957.,  2982.,  3007.,  3032.,  5940.,  5992.,  6044.,  6096.,  6148.,  6200.,  6252.,  6304.,  6356.,  6408.,  6460.,  6512.,  3207.,  3234.,  3261.,  3288.,  3315.,  3342.,  3369.,  3396.,  1209.,  1222.,  1235.,  1248.,  1261.,  1274.,  1287.,  1300.,  2503.,  2530.,  2557.,  2584.,  2611.,  2638.,  2665.,  2692.,  2719.,  2746.,  2773.,  2800.,  1358.,  1372.,  1386.,  1400.,  2689.,  2718.,  2747.,  2776.,  2805.,  2834.,  2863.,  2892.,  2921.,  2950.,  2979.,  3008.,  1455.,  1470.,  1485.,  1500.,  1515.,  1530.,  1545.,  1560.,  1717.,  1746.,  1775.,  1804.,  1833.,  1862.,  1891.,  1920.,  3548.,  3608.,  3668.,  3728.,  3788.,  3848.,  3908.,  3968.,  4028.,  4088.,  4148.,  4208.,  1971.,  2002.,  2033.,  2064.,  3808.,  3872.,  3936.,  4000.,  4064.,  4128.,  4192.,  4256.,  4320.,  4384.,  4448.,  4512.,  2109.,  2142.,  2175.,  2208.,  2241.,  2274.,  2307.,  2340.,  2529.,  2558.,  2587.,  2616.,  2645.,  2674.,  2703.,  2732.,  5228.,  5288.,  5348.,  5408.,  5468.,  5528.,  5588.,  5648.,  5708.,  5768.,  5828.,  5888.,  2839.,  2870.,  2901.,  2932.,  5600.,  5664.,  5728.,  5792.,  5856.,  5920.,  5984.,  6048.,  6112.,  6176.,  6240.,  6304.,  3033.,  3066.,  3099.,  3132.,  3165.,  3198.,  3231.,  3264.,  3341.,  3370.,  3399.,  3428.,  3457.,  3486.,  3515.,  3544.,  6908.,  6968.,  7028.,  7088.,  7148.,  7208.,  7268.,  7328.,  7388.,  7448.,  7508.,  7568.,  3707.,  3738.,  3769.,  3800.,  7392.,  7456.,  7520.,  7584.,  7648.,  7712.,  7776.,  7840.,  7904.,  7968.,  8032.,  8096.,  3957.,  3990.,  4023.,  4056.,  4089.,  4122.,  4155.,  4188.,  1488.,  1504.,  1520.,  1536.,  1552.,  1568.,  1584.,  1600.,  3061.,  3094.,  3127.,  3160.,  3193.,  3226.,  3259.,  3292.,  3325.,  3358.,  3391.,  3424.,  1649.,  1666.,  1683.,  1700.,  3247.,  3282.,  3317.,  3352.,  3387.,  3422.,  3457.,  3492.,  3527.,  3562.,  3597.,  3632.,  1746.,  1764.,  1782.,  1800.,  1818.,  1836.,  1854.,  1872.,  1936.,  1952.,  1968.,  1984.,  2000.,  2016.,  2032.,  2048.,  3985.,  4018.,  4051.,  4084.,  4117.,  4150.,  4183.,  4216.,  4249.,  4282.,  4315.,  4348.,  2125.,  2142.,  2159.,  2176.,  4227.,  4262.,  4297.,  4332.,  4367.,  4402.,  4437.,  4472.,  4507.,  4542.,  4577.,  4612.,  2250.,  2268.,  2286.,  2304.,  2322.,  2340.,  2358.,  2376.,  1235.,  1254.,  1273.,  1292.,  1311.,  1330.,  1349.,  1368.,  2527.,  2566.,  2605.,  2644.,  2683.,  2722.,  2761.,  2800.,  2839.,  2878.,  2917.,  2956.,  1380.,  1400.,  1420.,  1440.,  2657.,  2698.,  2739.,  2780.,  2821.,  2862.,  2903.,  2944.,  2985.,  3026.,  3067.,  3108.,  1449.,  1470.,  1491.,  1512.,  1533.,  1554.,  1575.,  1596.,  1767.,  1786.,  1805.,  1824.,  1843.,  1862.,  1881.,  1900.,  3619.,  3658.,  3697.,  3736.,  3775.,  3814.,  3853.,  3892.,  3931.,  3970.,  4009.,  4048.,  1940.,  1960.,  1980.,  2000.,  3805.,  3846.,  3887.,  3928.,  3969.,  4010.,  4051.,  4092.,  4133.,  4174.,  4215.,  4256.,  2037.,  2058.,  2079.,  2100.,  2121.,  2142.,  2163.,  2184.,  2497.,  2538.,  2579.,  2620.,  2661.,  2702.,  2743.,  2784.,  5108.,  5192.,  5276.,  5360.,  5444.,  5528.,  5612.,  5696.,  5780.,  5864.,  5948.,  6032.,  2799.,  2842.,  2885.,  2928.,  5368.,  5456.,  5544.,  5632.,  5720.,  5808.,  5896.,  5984.,  6072.,  6160.,  6248.,  6336.,  2937.,  2982.,  3027.,  3072.,  3117.,  3162.,  3207.,  3252.,  3645.,  3686.,  3727.,  3768.,  3809.,  3850.,  3891.,  3932.,  7460.,  7544.,  7628.,  7712.,  7796.,  7880.,  7964.,  8048.,  8132.,  8216.,  8300.,  8384.,  4003.,  4046.,  4089.,  4132.,  7832.,  7920.,  8008.,  8096.,  8184.,  8272.,  8360.,  8448.,  8536.,  8624.,  8712.,  8800.,  4197.,  4242.,  4287.,  4332.,  4377.,  4422.,  4467.,  4512.,  4793.,  4834.,  4875.,  4916.,  4957.,  4998.,  5039.,  5080.,  9812.,  9896.,  9980., 10064., 10148., 10232., 10316., 10400., 10484., 10568., 10652., 10736.,  5207.,  5250.,  5293.,  5336., 10296., 10384., 10472., 10560., 10648., 10736., 10824., 10912., 11000., 11088., 11176., 11264.,  5457.,  5502.,  5547.,  5592.,  5637.,  5682.,  5727.,  5772.,  2046.,  2068.,  2090.,  2112.,  2134.,  2156.,  2178.,  2200.,  4177.,  4222.,  4267.,  4312.,  4357.,  4402.,  4447.,  4492.,  4537.,  4582.,  4627.,  4672.,  2231.,  2254.,  2277.,  2300.,  4363.,  4410.,  4457.,  4504.,  4551.,  4598.,  4645.,  4692.,  4739.,  4786.,  4833.,  4880.,  2328.,  2352.,  2376.,  2400.,  2424.,  2448.,  2472.,  2496.,  2887.,  2934.,  2981.,  3028.,  3075.,  3122.,  3169.,  3216.,  5888.,  5984.,  6080.,  6176.,  6272.,  6368.,  6464.,  6560.,  6656.,  6752.,  6848.,  6944.,  3213.,  3262.,  3311.,  3360.,  6148.,  6248.,  6348.,  6448.,  6548.,  6648.,  6748.,  6848.,  6948.,  7048.,  7148.,  7248.,  3351.,  3402.,  3453.,  3504.,  3555.,  3606.,  3657.,  3708.,  4203.,  4250.,  4297.,  4344.,  4391.,  4438.,  4485.,  4532.,  8576.,  8672.,  8768.,  8864.,  8960.,  9056.,  9152.,  9248.,  9344.,  9440.,  9536.,  9632.,  4585.,  4634.,  4683.,  4732.,  8948.,  9048.,  9148.,  9248.,  9348.,  9448.,  9548.,  9648.,  9748.,  9848.,  9948., 10048.,  4779.,  4830.,  4881.,  4932.,  4983.,  5034.,  5085.,  5136.,  5519.,  5566.,  5613.,  5660.,  5707.,  5754.,  5801.,  5848., 11264., 11360., 11456., 11552., 11648., 11744., 11840., 11936., 12032., 12128., 12224., 12320.,  5957.,  6006.,  6055.,  6104., 11748., 11848., 11948., 12048., 12148., 12248., 12348., 12448., 12548., 12648., 12748., 12848.,  6207.,  6258.,  6309.,  6360.,  6411.,  6462.,  6513.,  6564.,  2325.,  2350.,  2375.,  2400.,  2425.,  2450.,  2475.,  2500.,  4735.,  4786.,  4837.,  4888.,  4939.,  4990.,  5041.,  5092.,  5143.,  5194.,  5245.,  5296.,  2522.,  2548.,  2574.,  2600.,  4921.,  4974.,  5027.,  5080.,  5133.,  5186.,  5239.,  5292.,  5345.,  5398.,  5451.,  5504.,  2619.,  2646.,  2673.,  2700.,  2727.,  2754.,  2781.,  2808.,  3025.,  3050.,  3075.,  3100.,  3125.,  3150.,  3175.,  3200.,  6163.,  6214.,  6265.,  6316.,  6367.,  6418.,  6469.,  6520.,  6571.,  6622.,  6673.,  6724.,  3250.,  3276.,  3302.,  3328.,  6405.,  6458.,  6511.,  6564.,  6617.,  6670.,  6723.,  6776.,  6829.,  6882.,  6935.,  6988.,  3375.,  3402.,  3429.,  3456.,  3483.,  3510.,  3537.,  3564.};
  const std::array<int, 4> in_shape = {{ 3, 11, 11, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x11x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,    9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   19.,   22.,   25.,   28.,   31.,   34.,   37.,   40.,   43.,   46.,   49.,   52.,   26.,   28.,   30.,   32.,   34.,   36.,   38.,   40.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,  103.,  106.,  109.,  112.,  115.,  118.,  121.,  124.,  127.,  130.,  133.,  136.,   82.,   84.,   86.,   88.,   90.,   92.,   94.,   96.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,   57.,   58.,   59.,   60.,   61.,   62.,   63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  146.,  148.,  150.,  152.,  154.,  156.,  158.,  160.,  162.,  164.,  166.,  168.,   85.,   86.,   87.,   88.,   89.,   90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  202.,  204.,  206.,  208.,  210.,  212.,  214.,  216.,  218.,  220.,  222.,  224.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  148.,  152.,  156.,  160.,  164.,  168.,  172.,  176.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  302.,  308.,  314.,  320.,  326.,  332.,  338.,  344.,  350.,  356.,  362.,  368.,  374.,  380.,  386.,  392.,  228.,  232.,  236.,  240.,  244.,  248.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,  284.,  288.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  470.,  476.,  482.,  488.,  494.,  500.,  506.,  512.,  518.,  524.,  530.,  536.,  542.,  548.,  554.,  560.,  340.,  344.,  348.,  352.,  356.,  360.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,  396.,  400.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080.,  638.,  644.,  650.,  656.,  662.,  668.,  674.,  680.,  686.,  692.,  698.,  704.,  710.,  716.,  722.,  728.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  279.,  282.,  285.,  288.,  291.,  294.,  297.,  300.,  643.,  650.,  657.,  664.,  671.,  678.,  685.,  692.,  699.,  706.,  713.,  720.,  388.,  392.,  396.,  400.,  404.,  408.,  412.,  416.,  420.,  424.,  428.,  432.,  436.,  440.,  444.,  448.,  339.,  342.,  345.,  348.,  351.,  354.,  357.,  360.,  363.,  366.,  369.,  372.,  375.,  378.,  381.,  384.,  839.,  846.,  853.,  860.,  867.,  874.,  881.,  888.,  895.,  902.,  909.,  916.,  500.,  504.,  508.,  512.,  516.,  520.,  524.,  528.,  532.,  536.,  540.,  544.,  548.,  552.,  556.,  560.,  423.,  426.,  429.,  432.,  435.,  438.,  441.,  444.,  447.,  450.,  453.,  456.,  459.,  462.,  465.,  468., 1035., 1042., 1049., 1056., 1063., 1070., 1077., 1084., 1091., 1098., 1105., 1112.,  612.,  616.,  620.,  624.,  628.,  632.,  636.,  640.,  644.,  648.,  652.,  656.,  660.,  664.,  668.,  672.,  507.,  510.,  513.,  516.,  519.,  522.,  525.,  528.,  531.,  534.,  537.,  540.,  543.,  546.,  549.,  552., 1231., 1238., 1245., 1252., 1259., 1266., 1273., 1280., 1287., 1294., 1301., 1308.,  724.,  728.,  732.,  736.,  740.,  744.,  748.,  752.,  756.,  760.,  764.,  768.,  772.,  776.,  780.,  784.,    5.,   10.,   15.,   20.,   25.,   30.,   35.,   40.,   45.,   50.,   55.,   60.,   65.,   70.,   75.,   80.,   91.,  102.,  113.,  124.,  135.,  146.,  157.,  168.,  179.,  190.,  201.,  212.,   78.,   84.,   90.,   96.,  102.,  108.,  114.,  120.,  126.,  132.,  138.,  144.,  150.,  156.,  162.,  168.,  145.,  150.,  155.,  160.,  165.,  170.,  175.,  180.,  185.,  190.,  195.,  200.,  205.,  210.,  215.,  220.,  399.,  410.,  421.,  432.,  443.,  454.,  465.,  476.,  487.,  498.,  509.,  520.,  246.,  252.,  258.,  264.,  270.,  276.,  282.,  288.,  294.,  300.,  306.,  312.,  318.,  324.,  330.,  336.,  285.,  290.,  295.,  300.,  305.,  310.,  315.,  320.,  325.,  330.,  335.,  340.,  345.,  350.,  355.,  360.,  707.,  718.,  729.,  740.,  751.,  762.,  773.,  784.,  795.,  806.,  817.,  828.,  414.,  420.,  426.,  432.,  438.,  444.,  450.,  456.,  462.,  468.,  474.,  480.,  486.,  492.,  498.,  504.,  425.,  430.,  435.,  440.,  445.,  450.,  455.,  460.,  465.,  470.,  475.,  480.,  485.,  490.,  495.,  500., 1015., 1026., 1037., 1048., 1059., 1070., 1081., 1092., 1103., 1114., 1125., 1136.,  582.,  588.,  594.,  600.,  606.,  612.,  618.,  624.,  630.,  636.,  642.,  648.,  654.,  660.,  666.,  672.,  572.,  584.,  596.,  608.,  620.,  632.,  644.,  656.,  668.,  680.,  692.,  704.,  716.,  728.,  740.,  752., 1450., 1476., 1502., 1528., 1554., 1580., 1606., 1632., 1658., 1684., 1710., 1736.,  854.,  868.,  882.,  896.,  910.,  924.,  938.,  952.,  966.,  980.,  994., 1008., 1022., 1036., 1050., 1064.,  908.,  920.,  932.,  944.,  956.,  968.,  980.,  992., 1004., 1016., 1028., 1040., 1052., 1064., 1076., 1088., 2178., 2204., 2230., 2256., 2282., 2308., 2334., 2360., 2386., 2412., 2438., 2464., 1246., 1260., 1274., 1288., 1302., 1316., 1330., 1344., 1358., 1372., 1386., 1400., 1414., 1428., 1442., 1456., 1244., 1256., 1268., 1280., 1292., 1304., 1316., 1328., 1340., 1352., 1364., 1376., 1388., 1400., 1412., 1424., 2906., 2932., 2958., 2984., 3010., 3036., 3062., 3088., 3114., 3140., 3166., 3192., 1638., 1652., 1666., 1680., 1694., 1708., 1722., 1736., 1750., 1764., 1778., 1792., 1806., 1820., 1834., 1848.,  595.,  602.,  609.,  616.,  623.,  630.,  637.,  644.,  651.,  658.,  665.,  672.,  679.,  686.,  693.,  700., 1387., 1402., 1417., 1432., 1447., 1462., 1477., 1492., 1507., 1522., 1537., 1552.,  776.,  784.,  792.,  800.,  808.,  816.,  824.,  832.,  840.,  848.,  856.,  864.,  872.,  880.,  888.,  896.,  791.,  798.,  805.,  812.,  819.,  826.,  833.,  840.,  847.,  854.,  861.,  868.,  875.,  882.,  889.,  896., 1807., 1822., 1837., 1852., 1867., 1882., 1897., 1912., 1927., 1942., 1957., 1972., 1000., 1008., 1016., 1024., 1032., 1040., 1048., 1056., 1064., 1072., 1080., 1088., 1096., 1104., 1112., 1120.,  987.,  994., 1001., 1008., 1015., 1022., 1029., 1036., 1043., 1050., 1057., 1064., 1071., 1078., 1085., 1092., 2227., 2242., 2257., 2272., 2287., 2302., 2317., 2332., 2347., 2362., 2377., 2392., 1224., 1232., 1240., 1248., 1256., 1264., 1272., 1280., 1288., 1296., 1304., 1312., 1320., 1328., 1336., 1344., 1183., 1190., 1197., 1204., 1211., 1218., 1225., 1232., 1239., 1246., 1253., 1260., 1267., 1274., 1281., 1288., 2647., 2662., 2677., 2692., 2707., 2722., 2737., 2752., 2767., 2782., 2797., 2812., 1448., 1456., 1464., 1472., 1480., 1488., 1496., 1504., 1512., 1520., 1528., 1536., 1544., 1552., 1560., 1568.,    9.,   18.,   27.,   36.,   45.,   54.,   63.,   72.,   81.,   90.,   99.,  108.,  117.,  126.,  135.,  144.,  163.,  182.,  201.,  220.,  239.,  258.,  277.,  296.,  315.,  334.,  353.,  372.,  130.,  140.,  150.,  160.,  170.,  180.,  190.,  200.,  210.,  220.,  230.,  240.,  250.,  260.,  270.,  280.,  261.,  270.,  279.,  288.,  297.,  306.,  315.,  324.,  333.,  342.,  351.,  360.,  369.,  378.,  387.,  396.,  695.,  714.,  733.,  752.,  771.,  790.,  809.,  828.,  847.,  866.,  885.,  904.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  530.,  540.,  550.,  560.,  513.,  522.,  531.,  540.,  549.,  558.,  567.,  576.,  585.,  594.,  603.,  612.,  621.,  630.,  639.,  648., 1227., 1246., 1265., 1284., 1303., 1322., 1341., 1360., 1379., 1398., 1417., 1436.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  810.,  820.,  830.,  840.,  765.,  774.,  783.,  792.,  801.,  810.,  819.,  828.,  837.,  846.,  855.,  864.,  873.,  882.,  891.,  900., 1759., 1778., 1797., 1816., 1835., 1854., 1873., 1892., 1911., 1930., 1949., 1968.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080., 1090., 1100., 1110., 1120., 1028., 1048., 1068., 1088., 1108., 1128., 1148., 1168., 1188., 1208., 1228., 1248., 1268., 1288., 1308., 1328., 2490., 2532., 2574., 2616., 2658., 2700., 2742., 2784., 2826., 2868., 2910., 2952., 1406., 1428., 1450., 1472., 1494., 1516., 1538., 1560., 1582., 1604., 1626., 1648., 1670., 1692., 1714., 1736., 1588., 1608., 1628., 1648., 1668., 1688., 1708., 1728., 1748., 1768., 1788., 1808., 1828., 1848., 1868., 1888., 3666., 3708., 3750., 3792., 3834., 3876., 3918., 3960., 4002., 4044., 4086., 4128., 2022., 2044., 2066., 2088., 2110., 2132., 2154., 2176., 2198., 2220., 2242., 2264., 2286., 2308., 2330., 2352., 2148., 2168., 2188., 2208., 2228., 2248., 2268., 2288., 2308., 2328., 2348., 2368., 2388., 2408., 2428., 2448., 4842., 4884., 4926., 4968., 5010., 5052., 5094., 5136., 5178., 5220., 5262., 5304., 2638., 2660., 2682., 2704., 2726., 2748., 2770., 2792., 2814., 2836., 2858., 2880., 2902., 2924., 2946., 2968.,  935.,  946.,  957.,  968.,  979.,  990., 1001., 1012., 1023., 1034., 1045., 1056., 1067., 1078., 1089., 1100., 2131., 2154., 2177., 2200., 2223., 2246., 2269., 2292., 2315., 2338., 2361., 2384., 1164., 1176., 1188., 1200., 1212., 1224., 1236., 1248., 1260., 1272., 1284., 1296., 1308., 1320., 1332., 1344., 1243., 1254., 1265., 1276., 1287., 1298., 1309., 1320., 1331., 1342., 1353., 1364., 1375., 1386., 1397., 1408., 2775., 2798., 2821., 2844., 2867., 2890., 2913., 2936., 2959., 2982., 3005., 3028., 1500., 1512., 1524., 1536., 1548., 1560., 1572., 1584., 1596., 1608., 1620., 1632., 1644., 1656., 1668., 1680., 1551., 1562., 1573., 1584., 1595., 1606., 1617., 1628., 1639., 1650., 1661., 1672., 1683., 1694., 1705., 1716., 3419., 3442., 3465., 3488., 3511., 3534., 3557., 3580., 3603., 3626., 3649., 3672., 1836., 1848., 1860., 1872., 1884., 1896., 1908., 1920., 1932., 1944., 1956., 1968., 1980., 1992., 2004., 2016., 1859., 1870., 1881., 1892., 1903., 1914., 1925., 1936., 1947., 1958., 1969., 1980., 1991., 2002., 2013., 2024., 4063., 4086., 4109., 4132., 4155., 4178., 4201., 4224., 4247., 4270., 4293., 4316., 2172., 2184., 2196., 2208., 2220., 2232., 2244., 2256., 2268., 2280., 2292., 2304., 2316., 2328., 2340., 2352.};
  const std::array<int, 4> in_shape = {{ 3, 11, 11, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x11x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,   400.,   420.,   440.,   460.,   480.,   500.,   520.,   540.,   112.,   132.,   152.,   172.,    67.,    81.,    95.,   109.,   668.,   704.,   740.,   776.,   812.,   848.,   884.,   920.,   252.,   288.,   324.,   360.,   105.,   127.,   149.,   171.,   193.,   215.,   237.,   259.,   173.,   179.,   185.,   191.,     5.,    11.,    17.,    23.,   320.,   340.,   360.,   380.,   400.,   420.,   440.,   460.,   480.,   500.,   520.,   540.,    11.,    25.,    39.,    53.,   524.,   560.,   596.,   632.,   668.,   704.,   740.,   776.,   812.,   848.,   884.,   920.,    17.,    39.,    61.,    83.,   105.,   127.,   149.,   171.,   412.,   448.,   484.,   520.,   556.,   592.,   628.,   664.,   772.,   860.,   948.,  1036.,  1124.,  1212.,  1300.,  1388.,  1476.,  1564.,  1652.,  1740.,   888.,   940.,   992.,  1044.,  1052.,  1172.,  1292.,  1412.,  1532.,  1652.,  1772.,  1892.,  2012.,  2132.,  2252.,  2372.,  1220.,  1288.,  1356.,  1424.,   788.,   856.,   924.,   992.,   268.,   304.,   340.,   376.,   412.,   448.,   484.,   520.,  1828.,  1916.,  2004.,  2092.,   772.,   860.,   948.,  1036.,  1124.,  1212.,  1300.,  1388.,   680.,   732.,   784.,   836.,  2492.,  2612.,  2732.,  2852.,  1052.,  1172.,  1292.,  1412.,  1532.,  1652.,  1772.,  1892.,   948.,  1016.,  1084.,  1152.,  1220.,  1288.,  1356.,  1424.,   124.,   160.,   196.,   232.,   268.,   304.,   340.,   376.,  1476.,  1564.,  1652.,  1740.,  1828.,  1916.,  2004.,  2092.,   772.,   860.,   948.,  1036.,   472.,   524.,   576.,   628.,  2012.,  2132.,  2252.,  2372.,  2492.,  2612.,  2732.,  2852.,  1052.,  1172.,  1292.,  1412.,   676.,   744.,   812.,   880.,   948.,  1016.,  1084.,  1152.,   863.,   893.,   923.,   953.,    23.,    53.,    83.,   113.,   932.,  1000.,  1068.,  1136.,  1204.,  1272.,  1340.,  1408.,  1476.,  1544.,  1612.,  1680.,    29.,    67.,   105.,   143.,  1136.,  1220.,  1304.,  1388.,  1472.,  1556.,  1640.,  1724.,  1808.,  1892.,  1976.,  2060.,    35.,    81.,   127.,   173.,   219.,   265.,   311.,   357.,  1216.,  1300.,  1384.,  1468.,  1552.,  1636.,  1720.,  1804.,  1612.,  1796.,  1980.,  2164.,  2348.,  2532.,  2716.,  2900.,  3084.,  3268.,  3452.,  3636.,  1884.,  1984.,  2084.,  2184.,  1892.,  2108.,  2324.,  2540.,  2756.,  2972.,  3188.,  3404.,  3620.,  3836.,  4052.,  4268.,  2216.,  2332.,  2448.,  2564.,  1208.,  1324.,  1440.,  1556.,   880.,   964.,  1048.,  1132.,  1216.,  1300.,  1384.,  1468.,  3820.,  4004.,  4188.,  4372.,  1612.,  1796.,  1980.,  2164.,  2348.,  2532.,  2716.,  2900.,  1484.,  1584.,  1684.,  1784.,  4484.,  4700.,  4916.,  5132.,  1892.,  2108.,  2324.,  2540.,  2756.,  2972.,  3188.,  3404.,  1752.,  1868.,  1984.,  2100.,  2216.,  2332.,  2448.,  2564.,   544.,   628.,   712.,   796.,   880.,   964.,  1048.,  1132.,  3084.,  3268.,  3452.,  3636.,  3820.,  4004.,  4188.,  4372.,  1612.,  1796.,  1980.,  2164.,  1084.,  1184.,  1284.,  1384.,  3620.,  3836.,  4052.,  4268.,  4484.,  4700.,  4916.,  5132.,  1892.,  2108.,  2324.,  2540.,  1288.,  1404.,  1520.,  1636.,  1752.,  1868.,  1984.,  2100.,  1553.,  1607.,  1661.,  1715.,    41.,    95.,   149.,   203.,  1544.,  1660.,  1776.,  1892.,  2008.,  2124.,  2240.,  2356.,  2472.,  2588.,  2704.,  2820.,    47.,   109.,   171.,   233.,  1748.,  1880.,  2012.,  2144.,  2276.,  2408.,  2540.,  2672.,  2804.,  2936.,  3068.,  3200.,    53.,   123.,   193.,   263.,   333.,   403.,   473.,   543.,  1337.,  1391.,  1445.,  1499.,  1553.,  1607.,  1661.,  1715.,  1080.,  1196.,  1312.,  1428.,  1544.,  1660.,  1776.,  1892.,  2008.,  2124.,  2240.,  2356.,  1783.,  1845.,  1907.,  1969.,  1220.,  1352.,  1484.,  1616.,  1748.,  1880.,  2012.,  2144.,  2276.,  2408.,  2540.,  2672.,  2013.,  2083.,  2153.,  2223.,    53.,   123.,   193.,   263.,    59.,   137.,   215.,   293.,   371.,   449.,   527.,   605.,  2812.,  2976.,  3140.,  3304.,  3468.,  3632.,  3796.,  3960.,  1372.,  1536.,  1700.,  1864.,   409.,   495.,   581.,   667.,  3080.,  3260.,  3440.,  3620.,  3800.,  3980.,  4160.,  4340.,  1512.,  1692.,  1872.,  2052.,   447.,   541.,   635.,   729.,   823.,   917.,  1011.,  1105.,  2243.,  2321.,  2399.,  2477.,    59.,   137.,   215.,   293.,  2156.,  2320.,  2484.,  2648.,  2812.,  2976.,  3140.,  3304.,  3468.,  3632.,  3796.,  3960.,    65.,   151.,   237.,   323.,  2360.,  2540.,  2720.,  2900.,  3080.,  3260.,  3440.,  3620.,  3800.,  3980.,  4160.,  4340.,    71.,   165.,   259.,   353.,   447.,   541.,   635.,   729.,  2824.,  3004.,  3184.,  3364.,  3544.,  3724.,  3904.,  4084.,  3292.,  3668.,  4044.,  4420.,  4796.,  5172.,  5548.,  5924.,  6300.,  6676.,  7052.,  7428.,  3876.,  4072.,  4268.,  4464.,  3572.,  3980.,  4388.,  4796.,  5204.,  5612.,  6020.,  6428.,  6836.,  7244.,  7652.,  8060.,  4208.,  4420.,  4632.,  4844.,  2048.,  2260.,  2472.,  2684.,  2104.,  2284.,  2464.,  2644.,  2824.,  3004.,  3184.,  3364.,  7804.,  8180.,  8556.,  8932.,  3292.,  3668.,  4044.,  4420.,  4796.,  5172.,  5548.,  5924.,  3092.,  3288.,  3484.,  3680.,  8468.,  8876.,  9284.,  9692.,  3572.,  3980.,  4388.,  4796.,  5204.,  5612.,  6020.,  6428.,  3360.,  3572.,  3784.,  3996.,  4208.,  4420.,  4632.,  4844.,  1384.,  1564.,  1744.,  1924.,  2104.,  2284.,  2464.,  2644.,  6300.,  6676.,  7052.,  7428.,  7804.,  8180.,  8556.,  8932.,  3292.,  3668.,  4044.,  4420.,  2308.,  2504.,  2700.,  2896.,  6836.,  7244.,  7652.,  8060.,  8468.,  8876.,  9284.,  9692.,  3572.,  3980.,  4388.,  4796.,  2512.,  2724.,  2936.,  3148.,  3360.,  3572.,  3784.,  3996.,  2933.,  3035.,  3137.,  3239.,    77.,   179.,   281.,   383.,  2768.,  2980.,  3192.,  3404.,  3616.,  3828.,  4040.,  4252.,  4464.,  4676.,  4888.,  5100.,    83.,   193.,   303.,   413.,  2972.,  3200.,  3428.,  3656.,  3884.,  4112.,  4340.,  4568.,  4796.,  5024.,  5252.,  5480.,    89.,   207.,   325.,   443.,   561.,   679.,   797.,   915.,  3628.,  3856.,  4084.,  4312.,  4540.,  4768.,  4996.,  5224.,  4132.,  4604.,  5076.,  5548.,  6020.,  6492.,  6964.,  7436.,  7908.,  8380.,  8852.,  9324.,  4872.,  5116.,  5360.,  5604.,  4412.,  4916.,  5420.,  5924.,  6428.,  6932.,  7436.,  7940.,  8444.,  8948.,  9452.,  9956.,  5204.,  5464.,  5724.,  5984.,  2468.,  2728.,  2988.,  3248.,  2716.,  2944.,  3172.,  3400.,  3628.,  3856.,  4084.,  4312.,  9796., 10268., 10740., 11212.,  4132.,  4604.,  5076.,  5548.,  6020.,  6492.,  6964.,  7436.,  3896.,  4140.,  4384.,  4628., 10460., 10964., 11468., 11972.,  4412.,  4916.,  5420.,  5924.,  6428.,  6932.,  7436.,  7940.,  4164.,  4424.,  4684.,  4944.,  5204.,  5464.,  5724.,  5984.,  1804.,  2032.,  2260.,  2488.,  2716.,  2944.,  3172.,  3400.,  7908.,  8380.,  8852.,  9324.,  9796., 10268., 10740., 11212.,  4132.,  4604.,  5076.,  5548.,  2920.,  3164.,  3408.,  3652.,  8444.,  8948.,  9452.,  9956., 10460., 10964., 11468., 11972.,  4412.,  4916.,  5420.,  5924.,  3124.,  3384.,  3644.,  3904.,  4164.,  4424.,  4684.,  4944.,  3623.,  3749.,  3875.,  4001.,    95.,   221.,   347.,   473.,  3380.,  3640.,  3900.,  4160.,  4420.,  4680.,  4940.,  5200.,  5460.,  5720.,  5980.,  6240.,   101.,   235.,   369.,   503.,  3584.,  3860.,  4136.,  4412.,  4688.,  4964.,  5240.,  5516.,  5792.,  6068.,  6344.,  6620.,   107.,   249.,   391.,   533.,   675.,   817.,   959.,  1101.,  3119.,  3245.,  3371.,  3497.,  3623.,  3749.,  3875.,  4001.,  2340.,  2600.,  2860.,  3120.,  3380.,  3640.,  3900.,  4160.,  4420.,  4680.,  4940.,  5200.,  3853.,  3987.,  4121.,  4255.,  2480.,  2756.,  3032.,  3308.,  3584.,  3860.,  4136.,  4412.,  4688.,  4964.,  5240.,  5516.,  4083.,  4225.,  4367.,  4509.,   107.,   249.,   391.,   533.,   113.,   263.,   413.,   563.,   713.,   863.,  1013.,  1163.,  5224.,  5532.,  5840.,  6148.,  6456.,  6764.,  7072.,  7380.,  2632.,  2940.,  3248.,  3556.,   751.,   909.,  1067.,  1225.,  5492.,  5816.,  6140.,  6464.,  6788.,  7112.,  7436.,  7760.,  2772.,  3096.,  3420.,  3744.,   789.,   955.,  1121.,  1287.,  1453.,  1619.,  1785.,  1951.,  4313.,  4463.,  4613.,  4763.,   113.,   263.,   413.,   563.,  3992.,  4300.,  4608.,  4916.,  5224.,  5532.,  5840.,  6148.,  6456.,  6764.,  7072.,  7380.,   119.,   277.,   435.,   593.,  4196.,  4520.,  4844.,  5168.,  5492.,  5816.,  6140.,  6464.,  6788.,  7112.,  7436.,  7760.,   125.,   291.,   457.,   623.,   789.,   955.,  1121.,  1287.,  5236.,  5560.,  5884.,  6208.,  6532.,  6856.,  7180.,  7504.,  5812.,  6476.,  7140.,  7804.,  8468.,  9132.,  9796., 10460., 11124., 11788., 12452., 13116.,  6864.,  7204.,  7544.,  7884.,  6092.,  6788.,  7484.,  8180.,  8876.,  9572., 10268., 10964., 11660., 12356., 13052., 13748.,  7196.,  7552.,  7908.,  8264.,  3308.,  3664.,  4020.,  4376.,  3940.,  4264.,  4588.,  4912.,  5236.,  5560.,  5884.,  6208., 13780., 14444., 15108., 15772.,  5812.,  6476.,  7140.,  7804.,  8468.,  9132.,  9796., 10460.,  5504.,  5844.,  6184.,  6524., 14444., 15140., 15836., 16532.,  6092.,  6788.,  7484.,  8180.,  8876.,  9572., 10268., 10964.,  5772.,  6128.,  6484.,  6840.,  7196.,  7552.,  7908.,  8264.,  2644.,  2968.,  3292.,  3616.,  3940.,  4264.,  4588.,  4912., 11124., 11788., 12452., 13116., 13780., 14444., 15108., 15772.,  5812.,  6476.,  7140.,  7804.,  4144.,  4484.,  4824.,  5164., 11660., 12356., 13052., 13748., 14444., 15140., 15836., 16532.,  6092.,  6788.,  7484.,  8180.,  4348.,  4704.,  5060.,  5416.,  5772.,  6128.,  6484.,  6840.,  5003.,  5177.,  5351.,  5525.,   131.,   305.,   479.,   653.,  4604.,  4960.,  5316.,  5672.,  6028.,  6384.,  6740.,  7096.,  7452.,  7808.,  8164.,  8520.,   137.,   319.,   501.,   683.,  4808.,  5180.,  5552.,  5924.,  6296.,  6668.,  7040.,  7412.,  7784.,  8156.,  8528.,  8900.,   143.,   333.,   523.,   713.,   903.,  1093.,  1283.,  1473.,  6040.,  6412.,  6784.,  7156.,  7528.,  7900.,  8272.,  8644.,  6652.,  7412.,  8172.,  8932.,  9692., 10452., 11212., 11972., 12732., 13492., 14252., 15012.,  7860.,  8248.,  8636.,  9024.,  6932.,  7724.,  8516.,  9308., 10100., 10892., 11684., 12476., 13268., 14060., 14852., 15644.,  8192.,  8596.,  9000.,  9404.,  3728.,  4132.,  4536.,  4940.,  4552.,  4924.,  5296.,  5668.,  6040.,  6412.,  6784.,  7156., 15772., 16532., 17292., 18052.,  6652.,  7412.,  8172.,  8932.,  9692., 10452., 11212., 11972.,  6308.,  6696.,  7084.,  7472., 16436., 17228., 18020., 18812.,  6932.,  7724.,  8516.,  9308., 10100., 10892., 11684., 12476.,  6576.,  6980.,  7384.,  7788.,  8192.,  8596.,  9000.,  9404.,  3064.,  3436.,  3808.,  4180.,  4552.,  4924.,  5296.,  5668., 12732., 13492., 14252., 15012., 15772., 16532., 17292., 18052.,  6652.,  7412.,  8172.,  8932.,  4756.,  5144.,  5532.,  5920., 13268., 14060., 14852., 15644., 16436., 17228., 18020., 18812.,  6932.,  7724.,  8516.,  9308.,  4960.,  5364.,  5768.,  6172.,  6576.,  6980.,  7384.,  7788.,  5693.,  5891.,  6089.,  6287.,   149.,   347.,   545.,   743.,  5216.,  5620.,  6024.,  6428.,  6832.,  7236.,  7640.,  8044.,  8448.,  8852.,  9256.,  9660.,   155.,   361.,   567.,   773.,  5420.,  5840.,  6260.,  6680.,  7100.,  7520.,  7940.,  8360.,  8780.,  9200.,  9620., 10040.,   161.,   375.,   589.,   803.,  1017.,  1231.,  1445.,  1659.,  4901.,  5099.,  5297.,  5495.,  5693.,  5891.,  6089.,  6287.,  3600.,  4004.,  4408.,  4812.,  5216.,  5620.,  6024.,  6428.,  6832.,  7236.,  7640.,  8044.,  5923.,  6129.,  6335.,  6541.,  3740.,  4160.,  4580.,  5000.,  5420.,  5840.,  6260.,  6680.,  7100.,  7520.,  7940.,  8360.,  6153.,  6367.,  6581.,  6795.,   161.,   375.,   589.,   803.};
  const std::array<int, 4> in_shape = {{ 3, 11, 11, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x11x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,    53.,    59.,    65.,    71.,    77.,    83.,    89.,    95.,   112.,   132.,   152.,   172.,   192.,   212.,   232.,   252.,   272.,   292.,   312.,   332.,   179.,   193.,   207.,   221.,   235.,   249.,   263.,   277.,   291.,   305.,   319.,   333.,   347.,   361.,   375.,   389.,   173.,   179.,   185.,   191.,   197.,   203.,   209.,   215.,   221.,   227.,   233.,   239.,   245.,   251.,   257.,   263.,   672.,   692.,   712.,   732.,   752.,   772.,   792.,   812.,   832.,   852.,   872.,   892.,   571.,   585.,   599.,   613.,   627.,   641.,   655.,   669.,   683.,   697.,   711.,   725.,   739.,   753.,   767.,   781.,   341.,   347.,   353.,   359.,   365.,   371.,   377.,   383.,   389.,   395.,   401.,   407.,   413.,   419.,   425.,   431.,  1232.,  1252.,  1272.,  1292.,  1312.,  1332.,  1352.,  1372.,  1392.,  1412.,  1432.,  1452.,   963.,   977.,   991.,  1005.,  1019.,  1033.,  1047.,  1061.,  1075.,  1089.,  1103.,  1117.,  1131.,  1145.,  1159.,  1173.,   509.,   515.,   521.,   527.,   533.,   539.,   545.,   551.,   557.,   563.,   569.,   575.,   581.,   587.,   593.,   599.,  1792.,  1812.,  1832.,  1852.,  1872.,  1892.,  1912.,  1932.,  1952.,  1972.,  1992.,  2012.,  1355.,  1369.,  1383.,  1397.,  1411.,  1425.,  1439.,  1453.,  1467.,  1481.,  1495.,  1509.,  1523.,  1537.,  1551.,  1565.,   694.,   722.,   750.,   778.,   806.,   834.,   862.,   890.,   918.,   946.,   974.,  1002.,  1030.,  1058.,  1086.,  1114.,  1976.,  2048.,  2120.,  2192.,  2264.,  2336.,  2408.,  2480.,  2552.,  2624.,  2696.,  2768.,  2130.,  2174.,  2218.,  2262.,   514.,   558.,   602.,   646.,   690.,   734.,   778.,   822.,   866.,   910.,   954.,   998.,   710.,   738.,   766.,   794.,   822.,   850.,   878.,   906.,   934.,   962.,   990.,  1018.,  1046.,  1074.,  1102.,  1130.,  2200.,  2272.,  2344.,  2416.,  2488.,  2560.,  2632.,  2704.,  2776.,  2848.,  2920.,  2992.,  1570.,  1614.,  1658.,  1702.,  1746.,  1790.,  1834.,  1878.,  1922.,  1966.,  2010.,  2054.,  2098.,  2142.,  2186.,  2230.,  1494.,  1522.,  1550.,  1578.,  1606.,  1634.,  1662.,  1690.,  1718.,  1746.,  1774.,  1802.,  1830.,  1858.,  1886.,  1914.,  4216.,  4288.,  4360.,  4432.,  4504.,  4576.,  4648.,  4720.,  4792.,  4864.,  4936.,  5008.,  2802.,  2846.,  2890.,  2934.,  2978.,  3022.,  3066.,  3110.,  3154.,  3198.,  3242.,  3286.,  3330.,  3374.,  3418.,  3462.,  1865.,  1887.,  1909.,  1931.,  1953.,  1975.,  1997.,  2019.,  2041.,  2063.,  2085.,  2107.,  2129.,  2151.,  2173.,  2195.,  4760.,  4812.,  4864.,  4916.,  4968.,  5020.,  5072.,  5124.,  5176.,  5228.,  5280.,  5332.,  2903.,  2933.,  2963.,  2993.,  3023.,  3053.,  3083.,  3113.,  3143.,  3173.,  3203.,  3233.,  3263.,  3293.,  3323.,  3353.,  2481.,  2503.,  2525.,  2547.,  2569.,  2591.,  2613.,  2635.,  2657.,  2679.,  2701.,  2723.,  2745.,  2767.,  2789.,  2811.,  3400.,  3452.,  3504.,  3556.,  3608.,  3660.,  3712.,  3764.,  3816.,  3868.,  3920.,  3972.,  3743.,  3773.,  3803.,  3833.,    23.,    53.,    83.,   113.,   143.,   173.,   203.,   233.,   263.,   293.,   323.,   353.,   281.,   303.,   325.,   347.,   369.,   391.,   413.,   435.,   457.,   479.,   501.,   523.,   545.,   567.,   589.,   611.,  1016.,  1068.,  1120.,  1172.,  1224.,  1276.,  1328.,  1380.,  1432.,  1484.,  1536.,  1588.,   743.,   773.,   803.,   833.,   863.,   893.,   923.,   953.,   983.,  1013.,  1043.,  1073.,  1103.,  1133.,  1163.,  1193.,   897.,   919.,   941.,   963.,   985.,  1007.,  1029.,  1051.,  1073.,  1095.,  1117.,  1139.,  1161.,  1183.,  1205.,  1227.,  2472.,  2524.,  2576.,  2628.,  2680.,  2732.,  2784.,  2836.,  2888.,  2940.,  2992.,  3044.,  1583.,  1613.,  1643.,  1673.,  1703.,  1733.,  1763.,  1793.,  1823.,  1853.,  1883.,  1913.,  1943.,  1973.,  2003.,  2033.,    29.,    67.,   105.,   143.,   181.,   219.,   257.,   295.,   333.,   371.,   409.,   447.,   485.,   523.,   561.,   599.,   672.,   756.,   840.,   924.,  1008.,  1092.,  1176.,  1260.,  1344.,  1428.,  1512.,  1596.,   587.,   633.,   679.,   725.,   771.,   817.,   863.,   909.,   955.,  1001.,  1047.,  1093.,  1139.,  1185.,  1231.,  1277.,  1093.,  1131.,  1169.,  1207.,  1245.,  1283.,  1321.,  1359.,  1397.,  1435.,  1473.,  1511.,  1549.,  1587.,  1625.,  1663.,  3024.,  3108.,  3192.,  3276.,  3360.,  3444.,  3528.,  3612.,  3696.,  3780.,  3864.,  3948.,  1875.,  1921.,  1967.,  2013.,  2059.,  2105.,  2151.,  2197.,  2243.,  2289.,  2335.,  2381.,  2427.,  2473.,  2519.,  2565.,  2157.,  2195.,  2233.,  2271.,  2309.,  2347.,  2385.,  2423.,  2461.,  2499.,  2537.,  2575.,  2613.,  2651.,  2689.,  2727.,  5376.,  5460.,  5544.,  5628.,  5712.,  5796.,  5880.,  5964.,  6048.,  6132.,  6216.,  6300.,  3163.,  3209.,  3255.,  3301.,  3347.,  3393.,  3439.,  3485.,  3531.,  3577.,  3623.,  3669.,  3715.,  3761.,  3807.,  3853.,  3221.,  3259.,  3297.,  3335.,  3373.,  3411.,  3449.,  3487.,  3525.,  3563.,  3601.,  3639.,  3677.,  3715.,  3753.,  3791.,  7728.,  7812.,  7896.,  7980.,  8064.,  8148.,  8232.,  8316.,  8400.,  8484.,  8568.,  8652.,  4451.,  4497.,  4543.,  4589.,  4635.,  4681.,  4727.,  4773.,  4819.,  4865.,  4911.,  4957.,  5003.,  5049.,  5095.,  5141.,  4326.,  4418.,  4510.,  4602.,  4694.,  4786.,  4878.,  4970.,  5062.,  5154.,  5246.,  5338.,  5430.,  5522.,  5614.,  5706.,  6168.,  6368.,  6568.,  6768.,  6968.,  7168.,  7368.,  7568.,  7768.,  7968.,  8168.,  8368.,  6530.,  6638.,  6746.,  6854.,  1074.,  1182.,  1290.,  1398.,  1506.,  1614.,  1722.,  1830.,  1938.,  2046.,  2154.,  2262.,  2038.,  2130.,  2222.,  2314.,  2406.,  2498.,  2590.,  2682.,  2774.,  2866.,  2958.,  3050.,  3142.,  3234.,  3326.,  3418.,  5880.,  6080.,  6280.,  6480.,  6680.,  6880.,  7080.,  7280.,  7480.,  7680.,  7880.,  8080.,  3666.,  3774.,  3882.,  3990.,  4098.,  4206.,  4314.,  4422.,  4530.,  4638.,  4746.,  4854.,  4962.,  5070.,  5178.,  5286.,  4614.,  4706.,  4798.,  4890.,  4982.,  5074.,  5166.,  5258.,  5350.,  5442.,  5534.,  5626.,  5718.,  5810.,  5902.,  5994., 11480., 11680., 11880., 12080., 12280., 12480., 12680., 12880., 13080., 13280., 13480., 13680.,  6690.,  6798.,  6906.,  7014.,  7122.,  7230.,  7338.,  7446.,  7554.,  7662.,  7770.,  7878.,  7986.,  8094.,  8202.,  8310.,  4577.,  4631.,  4685.,  4739.,  4793.,  4847.,  4901.,  4955.,  5009.,  5063.,  5117.,  5171.,  5225.,  5279.,  5333.,  5387., 10696., 10812., 10928., 11044., 11160., 11276., 11392., 11508., 11624., 11740., 11856., 11972.,  5999.,  6061.,  6123.,  6185.,  6247.,  6309.,  6371.,  6433.,  6495.,  6557.,  6619.,  6681.,  6743.,  6805.,  6867.,  6929.,  6089.,  6143.,  6197.,  6251.,  6305.,  6359.,  6413.,  6467.,  6521.,  6575.,  6629.,  6683.,  6737.,  6791.,  6845.,  6899.,  7032.,  7148.,  7264.,  7380.,  7496.,  7612.,  7728.,  7844.,  7960.,  8076.,  8192.,  8308.,  7735.,  7797.,  7859.,  7921.,    47.,   109.,   171.,   233.,   295.,   357.,   419.,   481.,   543.,   605.,   667.,   729.,   689.,   743.,   797.,   851.,   905.,   959.,  1013.,  1067.,  1121.,  1175.,  1229.,  1283.,  1337.,  1391.,  1445.,  1499.,  2344.,  2460.,  2576.,  2692.,  2808.,  2924.,  3040.,  3156.,  3272.,  3388.,  3504.,  3620.,  1535.,  1597.,  1659.,  1721.,  1783.,  1845.,  1907.,  1969.,  2031.,  2093.,  2155.,  2217.,  2279.,  2341.,  2403.,  2465.,  2201.,  2255.,  2309.,  2363.,  2417.,  2471.,  2525.,  2579.,  2633.,  2687.,  2741.,  2795.,  2849.,  2903.,  2957.,  3011.,  5592.,  5708.,  5824.,  5940.,  6056.,  6172.,  6288.,  6404.,  6520.,  6636.,  6752.,  6868.,  3271.,  3333.,  3395.,  3457.,  3519.,  3581.,  3643.,  3705.,  3767.,  3829.,  3891.,  3953.,  4015.,  4077.,  4139.,  4201.,    53.,   123.,   193.,   263.,   333.,   403.,   473.,   543.,   613.,   683.,   753.,   823.,   893.,   963.,  1033.,  1103.,  1232.,  1380.,  1528.,  1676.,  1824.,  1972.,  2120.,  2268.,  2416.,  2564.,  2712.,  2860.,   995.,  1073.,  1151.,  1229.,  1307.,  1385.,  1463.,  1541.,  1619.,  1697.,  1775.,  1853.,  1931.,  2009.,  2087.,  2165.,  2013.,  2083.,  2153.,  2223.,  2293.,  2363.,  2433.,  2503.,  2573.,  2643.,  2713.,  2783.,  2853.,  2923.,  2993.,  3063.,  5376.,  5524.,  5672.,  5820.,  5968.,  6116.,  6264.,  6412.,  6560.,  6708.,  6856.,  7004.,  3179.,  3257.,  3335.,  3413.,  3491.,  3569.,  3647.,  3725.,  3803.,  3881.,  3959.,  4037.,  4115.,  4193.,  4271.,  4349.,  3973.,  4043.,  4113.,  4183.,  4253.,  4323.,  4393.,  4463.,  4533.,  4603.,  4673.,  4743.,  4813.,  4883.,  4953.,  5023.,  9520.,  9668.,  9816.,  9964., 10112., 10260., 10408., 10556., 10704., 10852., 11000., 11148.,  5363.,  5441.,  5519.,  5597.,  5675.,  5753.,  5831.,  5909.,  5987.,  6065.,  6143.,  6221.,  6299.,  6377.,  6455.,  6533.,  5933.,  6003.,  6073.,  6143.,  6213.,  6283.,  6353.,  6423.,  6493.,  6563.,  6633.,  6703.,  6773.,  6843.,  6913.,  6983., 13664., 13812., 13960., 14108., 14256., 14404., 14552., 14700., 14848., 14996., 15144., 15292.,  7547.,  7625.,  7703.,  7781.,  7859.,  7937.,  8015.,  8093.,  8171.,  8249.,  8327.,  8405.,  8483.,  8561.,  8639.,  8717.,  7958.,  8114.,  8270.,  8426.,  8582.,  8738.,  8894.,  9050.,  9206.,  9362.,  9518.,  9674.,  9830.,  9986., 10142., 10298., 10360., 10688., 11016., 11344., 11672., 12000., 12328., 12656., 12984., 13312., 13640., 13968., 10930., 11102., 11274., 11446.,  1634.,  1806.,  1978.,  2150.,  2322.,  2494.,  2666.,  2838.,  3010.,  3182.,  3354.,  3526.,  3366.,  3522.,  3678.,  3834.,  3990.,  4146.,  4302.,  4458.,  4614.,  4770.,  4926.,  5082.,  5238.,  5394.,  5550.,  5706.,  9560.,  9888., 10216., 10544., 10872., 11200., 11528., 11856., 12184., 12512., 12840., 13168.,  5762.,  5934.,  6106.,  6278.,  6450.,  6622.,  6794.,  6966.,  7138.,  7310.,  7482.,  7654.,  7826.,  7998.,  8170.,  8342.,  7734.,  7890.,  8046.,  8202.,  8358.,  8514.,  8670.,  8826.,  8982.,  9138.,  9294.,  9450.,  9606.,  9762.,  9918., 10074., 18744., 19072., 19400., 19728., 20056., 20384., 20712., 21040., 21368., 21696., 22024., 22352., 10578., 10750., 10922., 11094., 11266., 11438., 11610., 11782., 11954., 12126., 12298., 12470., 12642., 12814., 12986., 13158.,  7289.,  7375.,  7461.,  7547.,  7633.,  7719.,  7805.,  7891.,  7977.,  8063.,  8149.,  8235.,  8321.,  8407.,  8493.,  8579., 16632., 16812., 16992., 17172., 17352., 17532., 17712., 17892., 18072., 18252., 18432., 18612.,  9095.,  9189.,  9283.,  9377.,  9471.,  9565.,  9659.,  9753.,  9847.,  9941., 10035., 10129., 10223., 10317., 10411., 10505.,  9697.,  9783.,  9869.,  9955., 10041., 10127., 10213., 10299., 10385., 10471., 10557., 10643., 10729., 10815., 10901., 10987., 10664., 10844., 11024., 11204., 11384., 11564., 11744., 11924., 12104., 12284., 12464., 12644., 11727., 11821., 11915., 12009.,    71.,   165.,   259.,   353.,   447.,   541.,   635.,   729.,   823.,   917.,  1011.,  1105.,  1097.,  1183.,  1269.,  1355.,  1441.,  1527.,  1613.,  1699.,  1785.,  1871.,  1957.,  2043.,  2129.,  2215.,  2301.,  2387.,  3672.,  3852.,  4032.,  4212.,  4392.,  4572.,  4752.,  4932.,  5112.,  5292.,  5472.,  5652.,  2327.,  2421.,  2515.,  2609.,  2703.,  2797.,  2891.,  2985.,  3079.,  3173.,  3267.,  3361.,  3455.,  3549.,  3643.,  3737.,  3505.,  3591.,  3677.,  3763.,  3849.,  3935.,  4021.,  4107.,  4193.,  4279.,  4365.,  4451.,  4537.,  4623.,  4709.,  4795.,  8712.,  8892.,  9072.,  9252.,  9432.,  9612.,  9792.,  9972., 10152., 10332., 10512., 10692.,  4959.,  5053.,  5147.,  5241.,  5335.,  5429.,  5523.,  5617.,  5711.,  5805.,  5899.,  5993.,  6087.,  6181.,  6275.,  6369.};
  const std::array<int, 4> in_shape = {{ 3, 11, 11, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x11x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   500.,  1284.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   420.,  1076.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.};
  const std::array<int, 4> in_shape = {{ 3, 11, 11, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x11x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.};
  const std::array<int, 4> in_shape = {{ 3, 11, 11, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x12x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  16.,   17.,   18.,   49.,   52.,   55.,   36.,   83.,   88.,   93.,   54.,   57.,   23.,   24.,   25.,   70.,   73.,   76.,   50.,  118.,  123.,  128.,   75.,   78.,   38.,   43.,   48.,  116.,  128.,  140.,   84.,  184.,  200.,  216.,  120.,  129.,   73.,   78.,   83.,  200.,  212.,  224.,  133.,  296.,  312.,  328.,  183.,  192.,  108.,  113.,  118.,  284.,  296.,  308.,  182.,  408.,  424.,  440.,  246.,  255.,   92.,   96.,  100.,  214.,  223.,  232.,  125.,  262.,  273.,  284.,  150.,  156.,  134.,  145.,  156.,  320.,  344.,  368.,  192.,  388.,  416.,  444.,  228.,  243.,  211.,  222.,  233.,  488.,  512.,  536.,  283.,  584.,  612.,  640.,  333.,  348.,  288.,  299.,  310.,  656.,  680.,  704.,  374.,  780.,  808.,  836.,  438.,  453.,  161.,  168.,  175.,  358.,  373.,  388.,  200.,  406.,  423.,  440.,  225.,  234.,  210.,  217.,  224.,  463.,  478.,  493.,  256.,  525.,  542.,  559.,  288.,  297.,  160.,  170.,  180.,  355.,  376.,  397.,  198.,  389.,  412.,  435.,  216.,  228.,  230.,  240.,  250.,  502.,  523.,  544.,  275.,  550.,  573.,  596.,  300.,  312.,  326.,  349.,  372.,  728.,  776.,  824.,  408.,  796.,  848.,  900.,  444.,  471.,  487.,  510.,  533., 1064., 1112., 1160.,  583., 1160., 1212., 1264.,  633.,  660.,  648.,  671.,  694., 1400., 1448., 1496.,  758., 1524., 1576., 1628.,  822.,  849.,  299.,  312.,  325.,  646.,  673.,  700.,  350.,  694.,  723.,  752.,  375.,  390.,  422.,  451.,  480.,  932.,  992., 1052.,  516., 1000., 1064., 1128.,  552.,  585.,  625.,  654.,  683., 1352., 1412., 1472.,  733., 1448., 1512., 1576.,  783.,  816.,  828.,  857.,  886., 1772., 1832., 1892.,  950., 1896., 1960., 2024., 1014., 1047.,  368.,  384.,  400.,  790.,  823.,  856.,  425.,  838.,  873.,  908.,  450.,  468.,  480.,  496.,  512., 1021., 1054., 1087.,  544., 1083., 1118., 1153.,  576.,  594.,  304.,  323.,  342.,  661.,  700.,  739.,  360.,  695.,  736.,  777.,  378.,  399.,  437.,  456.,  475.,  934.,  973., 1012.,  500.,  982., 1023., 1064.,  525.,  546.,  614.,  655.,  696., 1340., 1424., 1508.,  732., 1408., 1496., 1584.,  768.,  813.,  901.,  942.,  983., 1928., 2012., 2096., 1033., 2024., 2112., 2200., 1083., 1128., 1188., 1229., 1270., 2516., 2600., 2684., 1334., 2640., 2728., 2816., 1398., 1443.,  506.,  528.,  550., 1078., 1123., 1168.,  575., 1126., 1173., 1220.,  600.,  624.,  710.,  757.,  804., 1544., 1640., 1736.,  840., 1612., 1712., 1812.,  876.,  927., 1039., 1086., 1133., 2216., 2312., 2408., 1183., 2312., 2412., 2512., 1233., 1284., 1368., 1415., 1462., 2888., 2984., 3080., 1526., 3012., 3112., 3212., 1590., 1641.,  575.,  600.,  625., 1222., 1273., 1324.,  650., 1270., 1323., 1376.,  675.,  702.,  750.,  775.,  800., 1579., 1630., 1681.,  832., 1641., 1694., 1747.,  864.,  891.};
  const std::array<int, 4> in_shape = {{ 3, 11, 12, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x12x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    7.,   10.,   13.,    8.,   10.,   12.,   14.,    0.,    8.,    9.,   10.,   11.,   28.,   31.,   34.,   22.,   24.,   26.,   28.,    0.,   15.,   16.,   17.,   18.,   49.,   52.,   55.,   36.,   38.,   40.,   42.,    0.,   22.,   23.,   24.,   25.,   70.,   73.,   76.,   50.,   52.,   54.,   56.,    0.,   32.,   36.,   40.,   44.,  110.,  120.,  130.,   80.,   86.,   92.,   98.,    0.,   60.,   64.,   68.,   72.,  180.,  190.,  200.,  122.,  128.,  134.,  140.,    0.,   88.,   92.,   96.,  100.,  250.,  260.,  270.,  164.,  170.,  176.,  182.,    0.,   66.,   69.,   72.,   75.,  166.,  173.,  180.,  100.,  104.,  108.,  112.,    0.,   87.,   90.,   93.,   96.,  215.,  222.,  229.,  128.,  132.,  136.,  140.,    0.,  108.,  111.,  114.,  117.,  264.,  271.,  278.,  156.,  160.,  164.,  168.,    0.,  129.,  132.,  135.,  138.,  313.,  320.,  327.,  184.,  188.,  192.,  196.,    0.,    5.,   10.,   15.,   20.,   31.,   42.,   53.,   24.,   30.,   36.,   42.,    0.,   40.,   45.,   50.,   55.,  108.,  119.,  130.,   66.,   72.,   78.,   84.,    0.,   75.,   80.,   85.,   90.,  185.,  196.,  207.,  108.,  114.,  120.,  126.,    0.,  110.,  115.,  120.,  125.,  262.,  273.,  284.,  150.,  156.,  162.,  168.,    0.,  152.,  164.,  176.,  188.,  382.,  408.,  434.,  224.,  238.,  252.,  266.,    0.,  236.,  248.,  260.,  272.,  564.,  590.,  616.,  322.,  336.,  350.,  364.,    0.,  320.,  332.,  344.,  356.,  746.,  772.,  798.,  420.,  434.,  448.,  462.,    0.,  154.,  161.,  168.,  175.,  358.,  373.,  388.,  200.,  208.,  216.,  224.,    0.,  203.,  210.,  217.,  224.,  463.,  478.,  493.,  256.,  264.,  272.,  280.,    0.,  252.,  259.,  266.,  273.,  568.,  583.,  598.,  312.,  320.,  328.,  336.,    0.,  301.,  308.,  315.,  322.,  673.,  688.,  703.,  368.,  376.,  384.,  392.,    0.,    9.,   18.,   27.,   36.,   55.,   74.,   93.,   40.,   50.,   60.,   70.,    0.,   72.,   81.,   90.,   99.,  188.,  207.,  226.,  110.,  120.,  130.,  140.,    0.,  135.,  144.,  153.,  162.,  321.,  340.,  359.,  180.,  190.,  200.,  210.,    0.,  198.,  207.,  216.,  225.,  454.,  473.,  492.,  250.,  260.,  270.,  280.,    0.,  272.,  292.,  312.,  332.,  654.,  696.,  738.,  368.,  390.,  412.,  434.,    0.,  412.,  432.,  452.,  472.,  948.,  990., 1032.,  522.,  544.,  566.,  588.,    0.,  552.,  572.,  592.,  612., 1242., 1284., 1326.,  676.,  698.,  720.,  742.,    0.,  242.,  253.,  264.,  275.,  550.,  573.,  596.,  300.,  312.,  324.,  336.,    0.,  319.,  330.,  341.,  352.,  711.,  734.,  757.,  384.,  396.,  408.,  420.,    0.,  396.,  407.,  418.,  429.,  872.,  895.,  918.,  468.,  480.,  492.,  504.,    0.,  473.,  484.,  495.,  506., 1033., 1056., 1079.,  552.,  564.,  576.,  588.,    0.};
  const std::array<int, 4> in_shape = {{ 3, 11, 12, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x12x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   95.,   101.,   107.,   320.,   340.,   360.,   249.,   588.,   624.,   660.,   391.,   413.,   137.,   143.,   149.,   460.,   480.,   500.,   347.,   840.,   876.,   912.,   545.,   567.,   232.,   268.,   304.,   772.,   860.,   948.,   588.,  1308.,  1428.,  1548.,   872.,   940.,   484.,   520.,   556.,  1388.,  1476.,  1564.,   952.,  2148.,  2268.,  2388.,  1348.,  1416.,   736.,   772.,   808.,  2004.,  2092.,  2180.,  1316.,  2988.,  3108.,  3228.,  1824.,  1892.,   683.,   713.,   743.,  1600.,  1668.,  1736.,   941.,  1980.,  2064.,  2148.,  1139.,  1185.,   988.,  1072.,  1156.,  2380.,  2564.,  2748.,  1440.,  2916.,  3132.,  3348.,  1724.,  1840.,  1576.,  1660.,  1744.,  3668.,  3852.,  4036.,  2140.,  4428.,  4644.,  4860.,  2536.,  2652.,  2164.,  2248.,  2332.,  4956.,  5140.,  5324.,  2840.,  5940.,  6156.,  6372.,  3348.,  3464.,  1229.,  1283.,  1337.,  2740.,  2856.,  2972.,  1535.,  3120.,  3252.,  3384.,  1733.,  1803.,  1607.,  1661.,  1715.,  3552.,  3668.,  3784.,  1969.,  4044.,  4176.,  4308.,  2223.,  2293.,  1229.,  1307.,  1385.,  2732.,  2896.,  3060.,  1527.,  3000.,  3180.,  3360.,  1669.,  1763.,  1775.,  1853.,  1931.,  3880.,  4044.,  4208.,  2129.,  4260.,  4440.,  4620.,  2327.,  2421.,  2500.,  2680.,  2860.,  5596.,  5972.,  6348.,  3144.,  6132.,  6540.,  6948.,  3428.,  3640.,  3760.,  3940.,  4120.,  8228.,  8604.,  8980.,  4516.,  8988.,  9396.,  9804.,  4912.,  5124.,  5020.,  5200.,  5380., 10860., 11236., 11612.,  5888., 11844., 12252., 12660.,  6396.,  6608.,  2321.,  2423.,  2525.,  5020.,  5232.,  5444.,  2723.,  5400.,  5628.,  5856.,  2921.,  3039.,  3256.,  3484.,  3712.,  7204.,  7676.,  8148.,  3996.,  7740.,  8244.,  8748.,  4280.,  4540.,  4852.,  5080.,  5308., 10508., 10980., 11452.,  5704., 11268., 11772., 12276.,  6100.,  6360.,  6448.,  6676.,  6904., 13812., 14284., 14756.,  7412., 14796., 15300., 15804.,  7920.,  8180.,  2867.,  2993.,  3119.,  6160.,  6420.,  6680.,  3317.,  6540.,  6816.,  7092.,  3515.,  3657.,  3749.,  3875.,  4001.,  7980.,  8240.,  8500.,  4255.,  8472.,  8748.,  9024.,  4509.,  4651.,  2363.,  2513.,  2663.,  5144.,  5452.,  5760.,  2805.,  5412.,  5736.,  6060.,  2947.,  3113.,  3413.,  3563.,  3713.,  7300.,  7608.,  7916.,  3911.,  7680.,  8004.,  8328.,  4109.,  4275.,  4768.,  5092.,  5416., 10420., 11084., 11748.,  5700., 10956., 11652., 12348.,  5984.,  6340.,  7036.,  7360.,  7684., 15068., 15732., 16396.,  8080., 15828., 16524., 17220.,  8476.,  8832.,  9304.,  9628.,  9952., 19716., 20380., 21044., 10460., 20700., 21396., 22092., 10968., 11324.,  3959.,  4133.,  4307.,  8440.,  8796.,  9152.,  4505.,  8820.,  9192.,  9564.,  4703.,  4893.,  5524.,  5896.,  6268., 12028., 12788., 13548.,  6552., 12564., 13356., 14148.,  6836.,  7240.,  8128.,  8500.,  8872., 17348., 18108., 18868.,  9268., 18108., 18900., 19692.,  9664., 10068., 10732., 11104., 11476., 22668., 23428., 24188., 11984., 23652., 24444., 25236., 12492., 12896.,  4505.,  4703.,  4901.,  9580.,  9984., 10388.,  5099.,  9960., 10380., 10800.,  5297.,  5511.,  5891.,  6089.,  6287., 12408., 12812., 13216.,  6541., 12900., 13320., 13740.,  6795.,  7009.};
  const std::array<int, 4> in_shape = {{ 3, 11, 12, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x12x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    40.,    60.,    80.,    53.,    67.,    81.,    95.,     0.,    47.,    53.,    59.,    65.,   180.,   200.,   220.,   151.,   165.,   179.,   193.,     0.,    89.,    95.,   101.,   107.,   320.,   340.,   360.,   249.,   263.,   277.,   291.,     0.,   131.,   137.,   143.,   149.,   460.,   480.,   500.,   347.,   361.,   375.,   389.,     0.,   190.,   218.,   246.,   274.,   728.,   800.,   872.,   558.,   602.,   646.,   690.,     0.,   386.,   414.,   442.,   470.,  1232.,  1304.,  1376.,   866.,   910.,   954.,   998.,     0.,   582.,   610.,   638.,   666.,  1736.,  1808.,  1880.,  1174.,  1218.,  1262.,  1306.,     0.,   479.,   501.,   523.,   545.,  1220.,  1272.,  1324.,   743.,   773.,   803.,   833.,     0.,   633.,   655.,   677.,   699.,  1584.,  1636.,  1688.,   953.,   983.,  1013.,  1043.,     0.,   787.,   809.,   831.,   853.,  1948.,  2000.,  2052.,  1163.,  1193.,  1223.,  1253.,     0.,   941.,   963.,   985.,  1007.,  2312.,  2364.,  2416.,  1373.,  1403.,  1433.,  1463.,     0.,    29.,    67.,   105.,   143.,   216.,   300.,   384.,   173.,   219.,   265.,   311.,     0.,   295.,   333.,   371.,   409.,   804.,   888.,   972.,   495.,   541.,   587.,   633.,     0.,   561.,   599.,   637.,   675.,  1392.,  1476.,  1560.,   817.,   863.,   909.,   955.,     0.,   827.,   865.,   903.,   941.,  1980.,  2064.,  2148.,  1139.,  1185.,  1231.,  1277.,     0.,  1134.,  1226.,  1318.,  1410.,  2872.,  3072.,  3272.,  1694.,  1802.,  1910.,  2018.,     0.,  1778.,  1870.,  1962.,  2054.,  4272.,  4472.,  4672.,  2450.,  2558.,  2666.,  2774.,     0.,  2422.,  2514.,  2606.,  2698.,  5672.,  5872.,  6072.,  3206.,  3314.,  3422.,  3530.,     0.,  1175.,  1229.,  1283.,  1337.,  2740.,  2856.,  2972.,  1535.,  1597.,  1659.,  1721.,     0.,  1553.,  1607.,  1661.,  1715.,  3552.,  3668.,  3784.,  1969.,  2031.,  2093.,  2155.,     0.,  1931.,  1985.,  2039.,  2093.,  4364.,  4480.,  4596.,  2403.,  2465.,  2527.,  2589.,     0.,  2309.,  2363.,  2417.,  2471.,  5176.,  5292.,  5408.,  2837.,  2899.,  2961.,  3023.,     0.,    53.,   123.,   193.,   263.,   392.,   540.,   688.,   293.,   371.,   449.,   527.,     0.,   543.,   613.,   683.,   753.,  1428.,  1576.,  1724.,   839.,   917.,   995.,  1073.,     0.,  1033.,  1103.,  1173.,  1243.,  2464.,  2612.,  2760.,  1385.,  1463.,  1541.,  1619.,     0.,  1523.,  1593.,  1663.,  1733.,  3500.,  3648.,  3796.,  1931.,  2009.,  2087.,  2165.,     0.,  2078.,  2234.,  2390.,  2546.,  5016.,  5344.,  5672.,  2830.,  3002.,  3174.,  3346.,     0.,  3170.,  3326.,  3482.,  3638.,  7312.,  7640.,  7968.,  4034.,  4206.,  4378.,  4550.,     0.,  4262.,  4418.,  4574.,  4730.,  9608.,  9936., 10264.,  5238.,  5410.,  5582.,  5754.,     0.,  1871.,  1957.,  2043.,  2129.,  4260.,  4440.,  4620.,  2327.,  2421.,  2515.,  2609.,     0.,  2473.,  2559.,  2645.,  2731.,  5520.,  5700.,  5880.,  2985.,  3079.,  3173.,  3267.,     0.,  3075.,  3161.,  3247.,  3333.,  6780.,  6960.,  7140.,  3643.,  3737.,  3831.,  3925.,     0.,  3677.,  3763.,  3849.,  3935.,  8040.,  8220.,  8400.,  4301.,  4395.,  4489.,  4583.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 11, 12, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x12x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 310.,   30.,   70.,  804.,  948.,  260.,  174., 1396., 1668.,  596.,  278.,  446.,  270.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110.,  278.,  612.,  884., 1156., 1784., 2456., 3128., 1876., 2456., 3384., 4312., 2596., 1780.,  340.,  612.,  884., 3800., 1784., 2456., 1476., 5240., 2456., 3384., 2068., 2596., 1924.,  340.,  612., 3128., 3800., 1784., 1076., 4312., 5240., 2456., 1540., 2068., 1542., 1774.,  150., 2052., 2580., 3108.,  190., 2516., 3172., 3828.,  230.,  590., 2004., 2660., 3316., 3800., 5240., 6680., 4036., 4152., 5336., 6520., 2900.,  420., 1348., 2004., 2660., 8120., 3800., 5240., 3252., 5656., 4152., 5336., 2500., 2900., 4084., 1348., 2004., 6680., 8120., 3800., 2468., 4472., 5656., 4152., 2100., 2500., 2814., 3238.,  270., 3444., 4356., 5268.,  310., 1028., 1556., 2084.,   30.,   70., 2390., 2814., 3238., 2532., 3444., 4356., 3726.,  500., 1028., 1556.,  310.,   30.,  798.,   70.,  174., 1396., 1668.,  596.,  278., 1988., 2388.,  932.,  382.,  614.,  694.,  798.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150.,  382., 1076., 1476., 1876., 2456., 3384., 4312., 2596., 3128., 4312., 5496., 3316., 2116.,  676., 1076., 1476., 5240., 2456., 3384., 2068., 6680., 3128., 4312., 2660., 3316., 2644.,  676., 1076., 4312., 5240., 2456., 1540., 5496., 6680., 3128., 2004., 2660., 1966., 2262.,  190., 2516., 3172., 3828.,  230., 2980., 3764., 4548.,  270.,  694., 2468., 3252., 4036., 4152., 5336., 6520., 2900., 2456., 3384., 4312., 3620.,  756., 1684., 2468., 3252., 5656., 4152., 5336., 2500., 5240., 2456., 3384., 3092., 3620., 4804., 1684., 2468., 4472., 5656., 4152., 2100., 4312., 5240., 2456., 2564., 3092., 3238., 3726.,  310., 1028., 1556., 2084.,   30.,  660.,  804.,  948.,   70.,  174., 2750., 3238., 3726.,  500., 1028., 1556.,  310.,  516.,  660.,  804.,  798.,   70., 1286.,  110.,  278., 1988., 2388.,  932.,  382., 2580., 3108., 1268.,  486.,  782., 1118., 1286.,  110., 1588., 1988., 2388.,  150., 2052., 2580., 3108.,  190.,  486., 1540., 2068., 2596., 3128., 4312., 5496., 3316., 3800., 5240., 6680., 4036., 2452., 1012., 1540., 2068., 6680., 3128., 4312., 2660., 8120., 3800., 5240., 3252., 4036., 3364., 1012., 1540., 5496., 6680., 3128., 2004., 6680., 8120., 3800., 2468., 3252., 2390., 2750.,  230., 2980., 3764., 4548.,  270., 3444., 4356., 5268.,  310.,  798., 2100., 2500., 2900., 2456., 3384., 4312., 3620., 3128., 4312., 5496., 4340., 1092., 1700., 2100., 2500., 5240., 2456., 3384., 3092., 6680., 3128., 4312., 3684., 4340., 1620., 1700., 2100., 4312., 5240., 2456., 2564., 5496., 6680., 3128., 3028., 3684.,  270.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110.,  278.,  230.,  270.,  310.,  516.,  660.,  804.,  798.,  852., 1124., 1396., 1286.,  110.};
  const std::array<int, 4> in_shape = {{ 3, 11, 12, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x12x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   260.,   404.,   548.,   382.,   486.,   590.,   694.,     0.,   310.,   350.,   390.,   430.,  1268.,  1412.,  1556.,  1110.,  1214.,  1318.,  1422.,     0.,   590.,   630.,    30.,    70.,  1636.,  1780.,   260.,   174.,   278.,   382.,   486.,     0.,   230.,   270.,   310.,   350.,   980.,  1124.,  1268.,   902.,  1006.,  1110.,  1214.,     0.,   620.,   828.,  1036.,  1244.,  2280.,  2824.,  3368.,  2476.,  1148.,  1484.,  1820.,     0.,  1436.,  1644.,  1852.,  2060.,  4424.,  4968.,  5512.,  3164.,  3500.,  3836.,  4172.,     0.,  2892.,  3100.,   620.,   828.,  5544.,  6088.,  2280.,  1804.,  2140.,  2476.,  1148.,     0.,   950.,  1118.,  1286.,  1454.,  2932.,  3332.,  3732.,  2006.,  2238.,  2470.,  2702.,     0.,  2126.,  2294.,  2462.,  2630.,  3044.,  3444.,  3844.,  3630.,   150.,   382.,   614.,     0.,   614.,   782.,   950.,  1118.,  2132.,  2532.,  2932.,  1542.,  1774.,  2006.,  2238.,     0.,  1790.,  1958.,  2126.,  2294.,  4932.,  5332.,  3044.,  3166.,  3398.,  3630.,   150.,     0.,   190.,   486.,   782.,  1078.,  1604.,  2260.,  2916.,  1310.,  1670.,  2030.,  2390.,     0.,  2262.,  2558.,  2854.,  3150.,  6196.,  6852.,  7508.,  3830.,  4190.,  4550.,  4910.,     0.,  4334.,  4630.,   190.,   486.,  6052.,  6708.,  1604.,   590.,   950.,  1310.,  1670.,     0.,  1670.,  1966.,  2262.,  2558.,  4884.,  5540.,  6196.,  3110.,  3470.,  3830.,  4190.,     0.,  4012.,  4732.,  5452.,  6172.,  7016.,  8584., 10152.,  7404.,  2492.,  3340.,  4188.,     0.,  4316.,  5036.,  5756.,  6476., 12232., 13800., 15368.,  7580.,  8428.,  9276., 10124.,     0.,  9356., 10076.,  4012.,  4732., 16424., 17992.,  7016.,  5708.,  6556.,  7404.,  2492.,     0.,  2390.,  2814.,  3238.,  3662.,  6836.,  7748.,  8660.,  4214.,  4702.,  5190.,  5678.,     0.,  5358.,  5782.,  6206.,  6630.,  6436.,  7348.,  8260.,  7630.,   310.,   798.,  1286.,     0.,  1542.,  1966.,  2390.,  2814.,  5012.,  5924.,  6836.,  3238.,  3726.,  4214.,  4702.,     0.,  4510.,  4934.,  5358.,  5782., 11396., 12308.,  6436.,  6654.,  7142.,  7630.,   310.,     0.,   350.,   902.,  1454.,  2006.,  2948.,  4116.,  5284.,  2238.,  2854.,  3470.,  4086.,     0.,  4214.,  4766.,  5318.,  5870., 11124., 12292., 13460.,  6550.,  7166.,  7782.,  8398.,     0.,  8078.,  8630.,   350.,   902., 10468., 11636.,  2948.,  1006.,  1622.,  2238.,  2854.,     0.,  3110.,  3662.,  4214.,  4766.,  8788.,  9956., 11124.,  5318.,  5934.,  6550.,  7166.,     0.,  7404.,  8636.,  9868., 11100., 11752., 14344., 16936., 12332.,  3836.,  5196.,  6556.,     0.,  7196.,  8428.,  9660., 10892., 20040., 22632., 25224., 11996., 13356., 14716., 16076.,     0., 15820., 17052.,  7404.,  8636., 27304., 29896., 11752.,  9612., 10972., 12332.,  3836.,     0.,  3830.,  4510.,  5190.,  5870., 10740., 12164., 13588.,  6422.,  7166.,  7910.,  8654.,     0.,  8590.,  9270.,  9950., 10630.,  9828., 11252., 12676., 11630.,   470.,  1214.,  1958.,     0.,  2470.,  3150.,  3830.,  4510.,  7892.,  9316., 10740.,  4934.,  5678.,  6422.,  7166.,     0.,  7230.,  7910.,  8590.,  9270., 17860., 19284.,  9828., 10142., 10886., 11630.,   470.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 11, 12, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x12x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  31.,   32.,   33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,  161.,  166.,  171.,  176.,  181.,  186.,  105.,  108.,  111.,  114.,   45.,   46.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  231.,  236.,  241.,  246.,  251.,  256.,  147.,  150.,  153.,  156.,   71.,   76.,   81.,   86.,   91.,   96.,  220.,  232.,  244.,  256.,  268.,  280.,  161.,  168.,  352.,  368.,  384.,  400.,  416.,  432.,  231.,  240.,  249.,  258.,  141.,  146.,  151.,  156.,  161.,  166.,  388.,  400.,  412.,  424.,  436.,  448.,  259.,  266.,  576.,  592.,  608.,  624.,  640.,  656.,  357.,  366.,  375.,  384.,  211.,  216.,  221.,  226.,  231.,  236.,  556.,  568.,  580.,  592.,  604.,  616.,  357.,  364.,  800.,  816.,  832.,  848.,  864.,  880.,  483.,  492.,  501.,  510.,  180.,  184.,  188.,  192.,  196.,  200.,  419.,  428.,  437.,  446.,  455.,  464.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  306.,  312.,  257.,  268.,  279.,  290.,  301.,  312.,  616.,  640.,  664.,  688.,  712.,  736.,  371.,  384.,  748.,  776.,  804.,  832.,  860.,  888.,  441.,  456.,  471.,  486.,  411.,  422.,  433.,  444.,  455.,  466.,  952.,  976., 1000., 1024., 1048., 1072.,  553.,  566., 1140., 1168., 1196., 1224., 1252., 1280.,  651.,  666.,  681.,  696.,  565.,  576.,  587.,  598.,  609.,  620., 1288., 1312., 1336., 1360., 1384., 1408.,  735.,  748., 1532., 1560., 1588., 1616., 1644., 1672.,  861.,  876.,  891.,  906.,  315.,  322.,  329.,  336.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  795.,  812.,  829.,  846.,  863.,  880.,  441.,  450.,  459.,  468.,  413.,  420.,  427.,  434.,  441.,  448.,  911.,  926.,  941.,  956.,  971.,  986.,  504.,  512., 1033., 1050., 1067., 1084., 1101., 1118.,  567.,  576.,  585.,  594.,  310.,  320.,  330.,  340.,  350.,  360.,  689.,  710.,  731.,  752.,  773.,  794.,  385.,  396.,  755.,  778.,  801.,  824.,  847.,  870.,  420.,  432.,  444.,  456.,  450.,  460.,  470.,  480.,  490.,  500.,  983., 1004., 1025., 1046., 1067., 1088.,  539.,  550., 1077., 1100., 1123., 1146., 1169., 1192.,  588.,  600.,  612.,  624.,  629.,  652.,  675.,  698.,  721.,  744., 1408., 1456., 1504., 1552., 1600., 1648.,  791.,  816., 1540., 1592., 1644., 1696., 1748., 1800.,  861.,  888.,  915.,  942.,  951.,  974.,  997., 1020., 1043., 1066., 2080., 2128., 2176., 2224., 2272., 2320., 1141., 1166., 2268., 2320., 2372., 2424., 2476., 2528., 1239., 1266., 1293., 1320., 1273., 1296., 1319., 1342., 1365., 1388., 2752., 2800., 2848., 2896., 2944., 2992., 1491., 1516., 2996., 3048., 3100., 3152., 3204., 3256., 1617., 1644., 1671., 1698.,  585.,  598.,  611.,  624.,  637.,  650., 1265., 1292., 1319., 1346., 1373., 1400.,  686.,  700., 1359., 1388., 1417., 1446., 1475., 1504.,  735.,  750.,  765.,  780.,  815.,  844.,  873.,  902.,  931.,  960., 1804., 1864., 1924., 1984., 2044., 2104., 1001., 1032., 1936., 2000., 2064., 2128., 2192., 2256., 1071., 1104., 1137., 1170., 1221., 1250., 1279., 1308., 1337., 1366., 2644., 2704., 2764., 2824., 2884., 2944., 1435., 1466., 2832., 2896., 2960., 3024., 3088., 3152., 1533., 1566., 1599., 1632., 1627., 1656., 1685., 1714., 1743., 1772., 3484., 3544., 3604., 3664., 3724., 3784., 1869., 1900., 3728., 3792., 3856., 3920., 3984., 4048., 1995., 2028., 2061., 2094.,  720.,  736.,  752.,  768.,  784.,  800., 1547., 1580., 1613., 1646., 1679., 1712.,  833.,  850., 1641., 1676., 1711., 1746., 1781., 1816.,  882.,  900.,  918.,  936.,  944.,  960.,  976.,  992., 1008., 1024., 2009., 2042., 2075., 2108., 2141., 2174., 1071., 1088., 2131., 2166., 2201., 2236., 2271., 2306., 1134., 1152., 1170., 1188.,  589.,  608.,  627.,  646.,  665.,  684., 1283., 1322., 1361., 1400., 1439., 1478.,  700.,  720., 1349., 1390., 1431., 1472., 1513., 1554.,  735.,  756.,  777.,  798.,  855.,  874.,  893.,  912.,  931.,  950., 1829., 1868., 1907., 1946., 1985., 2024.,  980., 1000., 1923., 1964., 2005., 2046., 2087., 2128., 1029., 1050., 1071., 1092., 1187., 1228., 1269., 1310., 1351., 1392., 2596., 2680., 2764., 2848., 2932., 3016., 1421., 1464., 2728., 2816., 2904., 2992., 3080., 3168., 1491., 1536., 1581., 1626., 1761., 1802., 1843., 1884., 1925., 1966., 3772., 3856., 3940., 4024., 4108., 4192., 2023., 2066., 3960., 4048., 4136., 4224., 4312., 4400., 2121., 2166., 2211., 2256., 2335., 2376., 2417., 2458., 2499., 2540., 4948., 5032., 5116., 5200., 5284., 5368., 2625., 2668., 5192., 5280., 5368., 5456., 5544., 5632., 2751., 2796., 2841., 2886.,  990., 1012., 1034., 1056., 1078., 1100., 2111., 2156., 2201., 2246., 2291., 2336., 1127., 1150., 2205., 2252., 2299., 2346., 2393., 2440., 1176., 1200., 1224., 1248., 1373., 1420., 1467., 1514., 1561., 1608., 2992., 3088., 3184., 3280., 3376., 3472., 1631., 1680., 3124., 3224., 3324., 3424., 3524., 3624., 1701., 1752., 1803., 1854., 2031., 2078., 2125., 2172., 2219., 2266., 4336., 4432., 4528., 4624., 4720., 4816., 2317., 2366., 4524., 4624., 4724., 4824., 4924., 5024., 2415., 2466., 2517., 2568., 2689., 2736., 2783., 2830., 2877., 2924., 5680., 5776., 5872., 5968., 6064., 6160., 3003., 3052., 5924., 6024., 6124., 6224., 6324., 6424., 3129., 3180., 3231., 3282., 1125., 1150., 1175., 1200., 1225., 1250., 2393., 2444., 2495., 2546., 2597., 2648., 1274., 1300., 2487., 2540., 2593., 2646., 2699., 2752., 1323., 1350., 1377., 1404., 1475., 1500., 1525., 1550., 1575., 1600., 3107., 3158., 3209., 3260., 3311., 3362., 1638., 1664., 3229., 3282., 3335., 3388., 3441., 3494., 1701., 1728., 1755., 1782.};
  const std::array<int, 4> in_shape = {{ 3, 11, 12, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x12x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,   11.,   14.,   17.,   20.,   23.,   26.,   14.,   16.,   18.,   20.,   22.,   24.,   26.,   28.,    0.,    0.,   15.,   16.,   17.,   18.,   19.,   20.,   21.,   22.,   53.,   56.,   59.,   62.,   65.,   68.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,    0.,    0.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,   74.,   76.,   78.,   80.,   82.,   84.,    0.,    0.,   43.,   44.,   45.,   46.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,    0.,    0.,   60.,   64.,   68.,   72.,   76.,   80.,   84.,   88.,  210.,  220.,  230.,  240.,  250.,  260.,  154.,  160.,  166.,  172.,  178.,  184.,  190.,  196.,    0.,    0.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  350.,  360.,  370.,  380.,  390.,  400.,  238.,  244.,  250.,  256.,  262.,  268.,  274.,  280.,    0.,    0.,  172.,  176.,  180.,  184.,  188.,  192.,  196.,  200.,  490.,  500.,  510.,  520.,  530.,  540.,  322.,  328.,  334.,  340.,  346.,  352.,  358.,  364.,    0.,    0.,  129.,  132.,  135.,  138.,  141.,  144.,  147.,  150.,  325.,  332.,  339.,  346.,  353.,  360.,  196.,  200.,  204.,  208.,  212.,  216.,  220.,  224.,    0.,    0.,  171.,  174.,  177.,  180.,  183.,  186.,  189.,  192.,  423.,  430.,  437.,  444.,  451.,  458.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,    0.,    0.,  213.,  216.,  219.,  222.,  225.,  228.,  231.,  234.,  521.,  528.,  535.,  542.,  549.,  556.,  308.,  312.,  316.,  320.,  324.,  328.,  332.,  336.,    0.,    0.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  619.,  626.,  633.,  640.,  647.,  654.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,    0.,    0.,    5.,   10.,   15.,   20.,   25.,   30.,   35.,   40.,   51.,   62.,   73.,   84.,   95.,  106.,   42.,   48.,   54.,   60.,   66.,   72.,   78.,   84.,    0.,    0.,   75.,   80.,   85.,   90.,   95.,  100.,  105.,  110.,  205.,  216.,  227.,  238.,  249.,  260.,  126.,  132.,  138.,  144.,  150.,  156.,  162.,  168.,    0.,    0.,  145.,  150.,  155.,  160.,  165.,  170.,  175.,  180.,  359.,  370.,  381.,  392.,  403.,  414.,  210.,  216.,  222.,  228.,  234.,  240.,  246.,  252.,    0.,    0.,  215.,  220.,  225.,  230.,  235.,  240.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  306.,  312.,  318.,  324.,  330.,  336.,    0.,    0.,  292.,  304.,  316.,  328.,  340.,  352.,  364.,  376.,  738.,  764.,  790.,  816.,  842.,  868.,  434.,  448.,  462.,  476.,  490.,  504.,  518.,  532.,    0.,    0.,  460.,  472.,  484.,  496.,  508.,  520.,  532.,  544., 1102., 1128., 1154., 1180., 1206., 1232.,  630.,  644.,  658.,  672.,  686.,  700.,  714.,  728.,    0.,    0.,  628.,  640.,  652.,  664.,  676.,  688.,  700.,  712., 1466., 1492., 1518., 1544., 1570., 1596.,  826.,  840.,  854.,  868.,  882.,  896.,  910.,  924.,    0.,    0.,  301.,  308.,  315.,  322.,  329.,  336.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  408.,  416.,  424.,  432.,  440.,  448.,    0.,    0.,  399.,  406.,  413.,  420.,  427.,  434.,  441.,  448.,  911.,  926.,  941.,  956.,  971.,  986.,  504.,  512.,  520.,  528.,  536.,  544.,  552.,  560.,    0.,    0.,  497.,  504.,  511.,  518.,  525.,  532.,  539.,  546., 1121., 1136., 1151., 1166., 1181., 1196.,  616.,  624.,  632.,  640.,  648.,  656.,  664.,  672.,    0.,    0.,  595.,  602.,  609.,  616.,  623.,  630.,  637.,  644., 1331., 1346., 1361., 1376., 1391., 1406.,  728.,  736.,  744.,  752.,  760.,  768.,  776.,  784.,    0.,    0.,    9.,   18.,   27.,   36.,   45.,   54.,   63.,   72.,   91.,  110.,  129.,  148.,  167.,  186.,   70.,   80.,   90.,  100.,  110.,  120.,  130.,  140.,    0.,    0.,  135.,  144.,  153.,  162.,  171.,  180.,  189.,  198.,  357.,  376.,  395.,  414.,  433.,  452.,  210.,  220.,  230.,  240.,  250.,  260.,  270.,  280.,    0.,    0.,  261.,  270.,  279.,  288.,  297.,  306.,  315.,  324.,  623.,  642.,  661.,  680.,  699.,  718.,  350.,  360.,  370.,  380.,  390.,  400.,  410.,  420.,    0.,    0.,  387.,  396.,  405.,  414.,  423.,  432.,  441.,  450.,  889.,  908.,  927.,  946.,  965.,  984.,  490.,  500.,  510.,  520.,  530.,  540.,  550.,  560.,    0.,    0.,  524.,  544.,  564.,  584.,  604.,  624.,  644.,  664., 1266., 1308., 1350., 1392., 1434., 1476.,  714.,  736.,  758.,  780.,  802.,  824.,  846.,  868.,    0.,    0.,  804.,  824.,  844.,  864.,  884.,  904.,  924.,  944., 1854., 1896., 1938., 1980., 2022., 2064., 1022., 1044., 1066., 1088., 1110., 1132., 1154., 1176.,    0.,    0., 1084., 1104., 1124., 1144., 1164., 1184., 1204., 1224., 2442., 2484., 2526., 2568., 2610., 2652., 1330., 1352., 1374., 1396., 1418., 1440., 1462., 1484.,    0.,    0.,  473.,  484.,  495.,  506.,  517.,  528.,  539.,  550., 1077., 1100., 1123., 1146., 1169., 1192.,  588.,  600.,  612.,  624.,  636.,  648.,  660.,  672.,    0.,    0.,  627.,  638.,  649.,  660.,  671.,  682.,  693.,  704., 1399., 1422., 1445., 1468., 1491., 1514.,  756.,  768.,  780.,  792.,  804.,  816.,  828.,  840.,    0.,    0.,  781.,  792.,  803.,  814.,  825.,  836.,  847.,  858., 1721., 1744., 1767., 1790., 1813., 1836.,  924.,  936.,  948.,  960.,  972.,  984.,  996., 1008.,    0.,    0.,  935.,  946.,  957.,  968.,  979.,  990., 1001., 1012., 2043., 2066., 2089., 2112., 2135., 2158., 1092., 1104., 1116., 1128., 1140., 1152., 1164., 1176.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 3, 11, 12, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x12x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  185.,   191.,   197.,   203.,   209.,   215.,   624.,   644.,   664.,   684.,   704.,   724.,   487.,   501.,  1148.,  1184.,  1220.,  1256.,  1292.,  1328.,   765.,   787.,   809.,   831.,   269.,   275.,   281.,   287.,   293.,   299.,   904.,   924.,   944.,   964.,   984.,  1004.,   683.,   697.,  1652.,  1688.,  1724.,  1760.,  1796.,  1832.,  1073.,  1095.,  1117.,  1139.,   436.,   472.,   508.,   544.,   580.,   616.,  1092.,  1180.,  1268.,  1356.,  1444.,  1532.,  1136.,  1188.,  1628.,  1748.,  1868.,  1988.,  2108.,  2228.,  1692.,  1760.,   420.,   488.,   556.,   592.,   628.,   664.,   700.,   736.,  1428.,  1516.,  1604.,  1692.,  1780.,  1868.,   968.,  1020.,  1900.,  2020.,  2140.,  2260.,  2380.,  2500.,  1236.,  1304.,  1372.,  1440.,  1060.,  1096.,  1132.,  1168.,  1204.,  1240.,  2660.,  2748.,  2836.,  2924.,  3012.,  3100.,  1696.,  1748.,  3580.,  3700.,  3820.,  3940.,  4060.,  4180.,  2188.,  2256.,  2324.,  2392.,  1343.,  1373.,  1403.,  1433.,  1463.,  1493.,  3148.,  3216.,  3284.,  3352.,  3420.,  3488.,  1853.,  1891.,  3896.,  3980.,  4064.,  4148.,  4232.,  4316.,  2243.,  2289.,  2335.,  2381.,  1912.,  1996.,  2080.,  2164.,  2248.,  2332.,  2700.,  2884.,  3068.,  3252.,  3436.,  3620.,  2804.,  2904.,  3236.,  3452.,  3668.,  3884.,  4100.,  4316.,  3360.,  3476.,   648.,   764.,  1168.,  1252.,  1336.,  1420.,  1504.,  1588.,  2844.,  3028.,  3212.,  3396.,  3580.,  3764.,  1772.,  1872.,  3316.,  3532.,  3748.,  3964.,  4180.,  4396.,  2040.,  2156.,  2272.,  2388.,  2344.,  2428.,  2512.,  2596.,  2680.,  2764.,  5420.,  5604.,  5788.,  5972.,  6156.,  6340.,  3172.,  3272.,  6340.,  6556.,  6772.,  6988.,  7204.,  7420.,  3664.,  3780.,  3896.,  4012.,  2417.,  2471.,  2525.,  2579.,  2633.,  2687.,  5392.,  5508.,  5624.,  5740.,  5856.,  5972.,  3023.,  3085.,  6140.,  6272.,  6404.,  6536.,  6668.,  6800.,  3413.,  3483.,  3553.,  3623.,  3173.,  3227.,  3281.,  3335.,  3389.,  3443.,  3560.,  3676.,  3792.,  3908.,  4024.,  4140.,  3891.,  3953.,  4020.,  4152.,  4284.,  4416.,  4548.,  4680.,  4393.,  4463.,    53.,   123.,  2399.,  2477.,  2555.,  2633.,  2711.,  2789.,  5340.,  5504.,  5668.,  5832.,  5996.,  6160.,  2989.,  3075.,  5864.,  6044.,  6224.,  6404.,  6584.,  6764.,  3267.,  3361.,  3455.,  3549.,  3491.,  3569.,  3647.,  3725.,  3803.,  3881.,  7636.,  7800.,  7964.,  8128.,  8292.,  8456.,  4193.,  4279.,  8384.,  8564.,  8744.,  8924.,  9104.,  9284.,  4583.,  4677.,  4771.,  4865.,  4864.,  5044.,  5224.,  5404.,  5584.,  5764.,  5916.,  6292.,  6668.,  7044.,  7420.,  7796.,  6140.,  6336.,  6452.,  6860.,  7268.,  7676.,  8084.,  8492.,  6696.,  6908.,  1104.,  1316.,  2392.,  2572.,  2752.,  2932.,  3112.,  3292.,  5676.,  6052.,  6428.,  6804.,  7180.,  7556.,  3380.,  3576.,  6148.,  6556.,  6964.,  7372.,  7780.,  8188.,  3648.,  3860.,  4072.,  4284.,  4912.,  5092.,  5272.,  5452.,  5632.,  5812., 10940., 11316., 11692., 12068., 12444., 12820.,  6124.,  6320., 11860., 12268., 12676., 13084., 13492., 13900.,  6616.,  6828.,  7040.,  7252.,  4565.,  4667.,  4769.,  4871.,  4973.,  5075.,  9880., 10092., 10304., 10516., 10728., 10940.,  5363.,  5473., 10628., 10856., 11084., 11312., 11540., 11768.,  5753.,  5871.,  5989.,  6107.,  6340.,  6568.,  6796.,  7024.,  7252.,  7480.,  7524.,  7996.,  8468.,  8940.,  9412.,  9884.,  7808.,  8052.,  8060.,  8564.,  9068.,  9572., 10076., 10580.,  8364.,  8624.,  1332.,  1592.,  3004.,  3232.,  3460.,  3688.,  3916.,  4144.,  7092.,  7564.,  8036.,  8508.,  8980.,  9452.,  4184.,  4428.,  7564.,  8068.,  8572.,  9076.,  9580., 10084.,  4452.,  4712.,  4972.,  5232.,  6196.,  6424.,  6652.,  6880.,  7108.,  7336., 13700., 14172., 14644., 15116., 15588., 16060.,  7600.,  7844., 14620., 15124., 15628., 16132., 16636., 17140.,  8092.,  8352.,  8612.,  8872.,  5639.,  5765.,  5891.,  6017.,  6143.,  6269., 12124., 12384., 12644., 12904., 13164., 13424.,  6533.,  6667., 12872., 13148., 13424., 13700., 13976., 14252.,  6923.,  7065.,  7207.,  7349.,  7403.,  7529.,  7655.,  7781.,  7907.,  8033.,  7700.,  7960.,  8220.,  8480.,  8740.,  9000.,  8409.,  8543.,  8160.,  8436.,  8712.,  8988.,  9264.,  9540.,  8911.,  9053.,   107.,   249.,  4613.,  4763.,  4913.,  5063.,  5213.,  5363., 10056., 10364., 10672., 10980., 11288., 11596.,  5491.,  5649., 10580., 10904., 11228., 11552., 11876., 12200.,  5769.,  5935.,  6101.,  6267.,  6713.,  6863.,  7013.,  7163.,  7313.,  7463., 14368., 14676., 14984., 15292., 15600., 15908.,  7703.,  7861., 15116., 15440., 15764., 16088., 16412., 16736.,  8093.,  8259.,  8425.,  8591.,  9292.,  9616.,  9940., 10264., 10588., 10912., 10740., 11404., 12068., 12732., 13396., 14060., 11144., 11484., 11276., 11972., 12668., 13364., 14060., 14756., 11700., 12056.,  1788.,  2144.,  4228.,  4552.,  4876.,  5200.,  5524.,  5848.,  9924., 10588., 11252., 11916., 12580., 13244.,  5792.,  6132., 10396., 11092., 11788., 12484., 13180., 13876.,  6060.,  6416.,  6772.,  7128.,  8764.,  9088.,  9412.,  9736., 10060., 10384., 19220., 19884., 20548., 21212., 21876., 22540., 10552., 10892., 20140., 20836., 21532., 22228., 22924., 23620., 11044., 11400., 11756., 12112.,  7787.,  7961.,  8135.,  8309.,  8483.,  8657., 16612., 16968., 17324., 17680., 18036., 18392.,  8873.,  9055., 17360., 17732., 18104., 18476., 18848., 19220.,  9263.,  9453.,  9643.,  9833., 10768., 11140., 11512., 11884., 12256., 12628., 12348., 13108., 13868., 14628., 15388., 16148., 12812., 13200., 12884., 13676., 14468., 15260., 16052., 16844., 13368., 13772.,  2016.,  2420.,  4840.,  5212.,  5584.,  5956.,  6328.,  6700., 11340., 12100., 12860., 13620., 14380., 15140.,  6596.,  6984., 11812., 12604., 13396., 14188., 14980., 15772.,  6864.,  7268.,  7672.,  8076., 10048., 10420., 10792., 11164., 11536., 11908., 21980., 22740., 23500., 24260., 25020., 25780., 12028., 12416., 22900., 23692., 24484., 25276., 26068., 26860., 12520., 12924., 13328., 13732.,  8861.,  9059.,  9257.,  9455.,  9653.,  9851., 18856., 19260., 19664., 20068., 20472., 20876., 10043., 10249., 19604., 20024., 20444., 20864., 21284., 21704., 10433., 10647., 10861., 11075., 11633., 11831., 12029., 12227., 12425., 12623., 11840., 12244., 12648., 13052., 13456., 13860., 12927., 13133., 12300., 12720., 13140., 13560., 13980., 14400., 13429., 13643.,   161.,   375.};
  const std::array<int, 4> in_shape = {{ 3, 11, 12, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 128.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x12x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,    64.,    84.,   104.,   124.,   144.,   164.,    95.,   109.,   123.,   137.,   151.,   165.,   179.,   193.,     0.,     0.,    89.,    95.,   101.,   107.,   113.,   119.,   125.,   131.,   344.,   364.,   384.,   404.,   424.,   444.,   291.,   305.,   319.,   333.,   347.,   361.,   375.,   389.,     0.,     0.,   173.,   179.,   185.,   191.,   197.,   203.,   209.,   215.,   624.,   644.,   664.,   684.,   704.,   724.,   487.,   501.,   515.,   529.,   543.,   557.,   571.,   585.,     0.,     0.,   257.,   263.,   269.,   275.,   281.,   287.,   293.,   299.,   904.,   924.,   944.,   964.,   984.,  1004.,   683.,   697.,   711.,   725.,   739.,   753.,   767.,   781.,     0.,     0.,   358.,   386.,   414.,   442.,   470.,   498.,   526.,   554.,  1400.,  1472.,  1544.,  1616.,  1688.,  1760.,  1082.,  1126.,  1170.,  1214.,  1258.,  1302.,  1346.,  1390.,     0.,     0.,   750.,   778.,   806.,   834.,   862.,   890.,   918.,   946.,  2408.,  2480.,  2552.,  2624.,  2696.,  2768.,  1698.,  1742.,  1786.,  1830.,  1874.,  1918.,  1962.,  2006.,     0.,     0.,  1142.,  1170.,  1198.,  1226.,  1254.,  1282.,  1310.,  1338.,  3416.,  3488.,  3560.,  3632.,  3704.,  3776.,  2314.,  2358.,  2402.,  2446.,  2490.,  2534.,  2578.,  2622.,     0.,     0.,   941.,   963.,   985.,  1007.,  1029.,  1051.,  1073.,  1095.,  2400.,  2452.,  2504.,  2556.,  2608.,  2660.,  1463.,  1493.,  1523.,  1553.,  1583.,  1613.,  1643.,  1673.,     0.,     0.,  1249.,  1271.,  1293.,  1315.,  1337.,  1359.,  1381.,  1403.,  3128.,  3180.,  3232.,  3284.,  3336.,  3388.,  1883.,  1913.,  1943.,  1973.,  2003.,  2033.,  2063.,  2093.,     0.,     0.,  1557.,  1579.,  1601.,  1623.,  1645.,  1667.,  1689.,  1711.,  3856.,  3908.,  3960.,  4012.,  4064.,  4116.,  2303.,  2333.,  2363.,  2393.,  2423.,  2453.,  2483.,  2513.,     0.,     0.,  1865.,  1887.,  1909.,  1931.,  1953.,  1975.,  1997.,  2019.,  4584.,  4636.,  4688.,  4740.,  4792.,  4844.,  2723.,  2753.,  2783.,  2813.,  2843.,  2873.,  2903.,  2933.,     0.,     0.,    29.,    67.,   105.,   143.,   181.,   219.,   257.,   295.,   368.,   452.,   536.,   620.,   704.,   788.,   311.,   357.,   403.,   449.,   495.,   541.,   587.,   633.,     0.,     0.,   561.,   599.,   637.,   675.,   713.,   751.,   789.,   827.,  1544.,  1628.,  1712.,  1796.,  1880.,  1964.,   955.,  1001.,  1047.,  1093.,  1139.,  1185.,  1231.,  1277.,     0.,     0.,  1093.,  1131.,  1169.,  1207.,  1245.,  1283.,  1321.,  1359.,  2720.,  2804.,  2888.,  2972.,  3056.,  3140.,  1599.,  1645.,  1691.,  1737.,  1783.,  1829.,  1875.,  1921.,     0.,     0.,  1625.,  1663.,  1701.,  1739.,  1777.,  1815.,  1853.,  1891.,  3896.,  3980.,  4064.,  4148.,  4232.,  4316.,  2243.,  2289.,  2335.,  2381.,  2427.,  2473.,  2519.,  2565.,     0.,     0.,  2198.,  2290.,  2382.,  2474.,  2566.,  2658.,  2750.,  2842.,  5592.,  5792.,  5992.,  6192.,  6392.,  6592.,  3306.,  3414.,  3522.,  3630.,  3738.,  3846.,  3954.,  4062.,     0.,     0.,  3486.,  3578.,  3670.,  3762.,  3854.,  3946.,  4038.,  4130.,  8392.,  8592.,  8792.,  8992.,  9192.,  9392.,  4818.,  4926.,  5034.,  5142.,  5250.,  5358.,  5466.,  5574.,     0.,     0.,  4774.,  4866.,  4958.,  5050.,  5142.,  5234.,  5326.,  5418., 11192., 11392., 11592., 11792., 11992., 12192.,  6330.,  6438.,  6546.,  6654.,  6762.,  6870.,  6978.,  7086.,     0.,     0.,  2309.,  2363.,  2417.,  2471.,  2525.,  2579.,  2633.,  2687.,  5392.,  5508.,  5624.,  5740.,  5856.,  5972.,  3023.,  3085.,  3147.,  3209.,  3271.,  3333.,  3395.,  3457.,     0.,     0.,  3065.,  3119.,  3173.,  3227.,  3281.,  3335.,  3389.,  3443.,  7016.,  7132.,  7248.,  7364.,  7480.,  7596.,  3891.,  3953.,  4015.,  4077.,  4139.,  4201.,  4263.,  4325.,     0.,     0.,  3821.,  3875.,  3929.,  3983.,  4037.,  4091.,  4145.,  4199.,  8640.,  8756.,  8872.,  8988.,  9104.,  9220.,  4759.,  4821.,  4883.,  4945.,  5007.,  5069.,  5131.,  5193.,     0.,     0.,  4577.,  4631.,  4685.,  4739.,  4793.,  4847.,  4901.,  4955., 10264., 10380., 10496., 10612., 10728., 10844.,  5627.,  5689.,  5751.,  5813.,  5875.,  5937.,  5999.,  6061.,     0.,     0.,    53.,   123.,   193.,   263.,   333.,   403.,   473.,   543.,   672.,   820.,   968.,  1116.,  1264.,  1412.,   527.,   605.,   683.,   761.,   839.,   917.,   995.,  1073.,     0.,     0.,  1033.,  1103.,  1173.,  1243.,  1313.,  1383.,  1453.,  1523.,  2744.,  2892.,  3040.,  3188.,  3336.,  3484.,  1619.,  1697.,  1775.,  1853.,  1931.,  2009.,  2087.,  2165.,     0.,     0.,  2013.,  2083.,  2153.,  2223.,  2293.,  2363.,  2433.,  2503.,  4816.,  4964.,  5112.,  5260.,  5408.,  5556.,  2711.,  2789.,  2867.,  2945.,  3023.,  3101.,  3179.,  3257.,     0.,     0.,  2993.,  3063.,  3133.,  3203.,  3273.,  3343.,  3413.,  3483.,  6888.,  7036.,  7184.,  7332.,  7480.,  7628.,  3803.,  3881.,  3959.,  4037.,  4115.,  4193.,  4271.,  4349.,     0.,     0.,  4038.,  4194.,  4350.,  4506.,  4662.,  4818.,  4974.,  5130.,  9784., 10112., 10440., 10768., 11096., 11424.,  5530.,  5702.,  5874.,  6046.,  6218.,  6390.,  6562.,  6734.,     0.,     0.,  6222.,  6378.,  6534.,  6690.,  6846.,  7002.,  7158.,  7314., 14376., 14704., 15032., 15360., 15688., 16016.,  7938.,  8110.,  8282.,  8454.,  8626.,  8798.,  8970.,  9142.,     0.,     0.,  8406.,  8562.,  8718.,  8874.,  9030.,  9186.,  9342.,  9498., 18968., 19296., 19624., 19952., 20280., 20608., 10346., 10518., 10690., 10862., 11034., 11206., 11378., 11550.,     0.,     0.,  3677.,  3763.,  3849.,  3935.,  4021.,  4107.,  4193.,  4279.,  8384.,  8564.,  8744.,  8924.,  9104.,  9284.,  4583.,  4677.,  4771.,  4865.,  4959.,  5053.,  5147.,  5241.,     0.,     0.,  4881.,  4967.,  5053.,  5139.,  5225.,  5311.,  5397.,  5483., 10904., 11084., 11264., 11444., 11624., 11804.,  5899.,  5993.,  6087.,  6181.,  6275.,  6369.,  6463.,  6557.,     0.,     0.,  6085.,  6171.,  6257.,  6343.,  6429.,  6515.,  6601.,  6687., 13424., 13604., 13784., 13964., 14144., 14324.,  7215.,  7309.,  7403.,  7497.,  7591.,  7685.,  7779.,  7873.,     0.,     0.,  7289.,  7375.,  7461.,  7547.,  7633.,  7719.,  7805.,  7891., 15944., 16124., 16304., 16484., 16664., 16844.,  8531.,  8625.,  8719.,  8813.,  8907.,  9001.,  9095.,  9189.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 11, 12, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x12x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   446.,   614.,   782.,   950.,   190.,   230.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  3508.,  4036.,   340.,   868.,   180.,   452.,   724.,   996.,  1268.,  1540.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,  1812.,  2084.,   180.,   452.,   724.,   996.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  1396.,  1924.,  2452.,  2980.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  2660.,  3060.,   260.,   660.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1060.,  1460.,  1860.,  2260.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   110.,   150.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  3238.,  3726.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,   270.,   310.,    30.,    70.,   694.,   798.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,   614.,   846.,  1078.,  1310.,   486.,   590.,   694.,   798.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  4356.,  5012.,   420.,  1076.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1732.,  2388.,  3044.,  3700.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  3508.,  4036.,   340.,   868.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  1396.,  1924.,  2452.,  2980.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   694.,   798.,    70.,   174.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,   782.,  1078.,  1374.,  1670.,   782.,   950.,  1118.,  1286.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,   782.,  1078.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  5204.,  5988.,   500.,  1284.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  2068.,  2852.,  3636.,  4420.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  4356.,  5012.,   420.,  1076.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1732.,  2388.,  3044.,  3700.,   190.,   230.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1118.,  1286.,   110.,   278.};
  const std::array<int, 4> in_shape = {{ 3, 11, 12, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x12x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   420.,   564.,   708.,   852.,   996.,  1140.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,     0.,     0.,   590.,   630.,    30.,    70.,   110.,   150.,   190.,   230.,  1796.,  1940.,   420.,   564.,   708.,   852.,   486.,   590.,   694.,   798.,   902.,  1006.,  1110.,  1214.,     0.,     0.,   510.,   550.,   590.,   630.,    30.,    70.,   110.,   150.,  1508.,  1652.,  1796.,  1940.,   420.,   564.,   278.,   382.,   486.,   590.,   694.,   798.,   902.,  1006.,     0.,     0.,   430.,   470.,   510.,   550.,   590.,   630.,    30.,    70.,  1220.,  1364.,  1508.,  1652.,  1796.,  1940.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,   460.,   668.,   876.,  1084.,  1292.,  1500.,  1708.,  1916.,  2536.,  3080.,  3624.,  4168.,  4712.,  5256.,  3068.,  3404.,  2076.,  2412.,  2748.,  3084.,  3420.,  3756.,     0.,     0.,  2732.,  2940.,   460.,   668.,   876.,  1084.,  1292.,  1500.,  5800.,  6344.,  2536.,  3080.,  3624.,  4168.,  2396.,  2732.,  3068.,  3404.,  2076.,  2412.,  2748.,  3084.,     0.,     0.,  2316.,  2524.,  2732.,  2940.,   460.,   668.,   876.,  1084.,  4712.,  5256.,  5800.,  6344.,  2536.,  3080.,  1724.,  2060.,  2396.,  2732.,  3068.,  3404.,  2076.,  2412.,     0.,     0.,  1790.,  1958.,  2126.,  2294.,  2462.,  2630.,   110.,   278.,  2916.,  3316.,  3716.,  4116.,  4516.,  4916.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  2462.,  2630.,  2116.,  2516.,  2916.,  3316.,  3716.,  4116.,  3398.,  3630.,   150.,   382.,   614.,   846.,  1078.,  1310.,     0.,     0.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  4004.,  4404.,  2116.,  2516.,  2916.,  3316.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,   614.,   846.,     0.,     0.,   782.,   950.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  3204.,  3604.,  4004.,  4404.,  2116.,  2516.,  2470.,  2702.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,     0.,     0.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,  2788.,  3444.,  4100.,  4756.,  5412.,  6068.,  2390.,  2750.,  3110.,  3470.,  3830.,  4190.,  4550.,  4910.,     0.,     0.,  4334.,  4630.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  7236.,  7892.,  2788.,  3444.,  4100.,  4756.,  1670.,  2030.,  2390.,  2750.,  3110.,  3470.,  3830.,  4190.,     0.,     0.,  3742.,  4038.,  4334.,  4630.,   190.,   486.,   782.,  1078.,  5924.,  6580.,  7236.,  7892.,  2788.,  3444.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,  3110.,  3470.,     0.,     0.,  3150.,  3446.,  3742.,  4038.,  4334.,  4630.,   190.,   486.,  4612.,  5268.,  5924.,  6580.,  7236.,  7892.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,     0.,     0.,  2828.,  3548.,  4268.,  4988.,  5708.,  6428.,  7148.,  7868.,  7272.,  8840., 10408., 11976., 13544., 15112.,  8508.,  9356.,  4444.,  5292.,  6140.,  6988.,  7836.,  8684.,     0.,     0.,  8172.,  8892.,  2828.,  3548.,  4268.,  4988.,  5708.,  6428., 16680., 18248.,  7272.,  8840., 10408., 11976.,  6812.,  7660.,  8508.,  9356.,  4444.,  5292.,  6140.,  6988.,     0.,     0.,  6732.,  7452.,  8172.,  8892.,  2828.,  3548.,  4268.,  4988., 13544., 15112., 16680., 18248.,  7272.,  8840.,  5116.,  5964.,  6812.,  7660.,  8508.,  9356.,  4444.,  5292.,     0.,     0.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,   270.,   694.,  6308.,  7220.,  8132.,  9044.,  9956., 10868.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,     0.,     0.,  3662.,  4086.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,  4484.,  5396.,  6308.,  7220.,  8132.,  9044.,  7142.,  7630.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,     0.,     0.,  2814.,  3238.,  3662.,  4086.,  4510.,  4934.,  5358.,  5782.,  9444., 10356.,  4484.,  5396.,  6308.,  7220.,  6166.,  6654.,  7142.,  7630.,   310.,   798.,  1286.,  1774.,     0.,     0.,  1966.,  2390.,  2814.,  3238.,  3662.,  4086.,  4510.,  4934.,  7620.,  8532.,  9444., 10356.,  4484.,  5396.,  5190.,  5678.,  6166.,  6654.,  7142.,  7630.,   310.,   798.,     0.,     0.,   350.,   902.,  1454.,  2006.,  2558.,  3110.,  3662.,  4214.,  5156.,  6324.,  7492.,  8660.,  9828., 10996.,  4086.,  4702.,  5318.,  5934.,  6550.,  7166.,  7782.,  8398.,     0.,     0.,  8078.,  8630.,   350.,   902.,  1454.,  2006.,  2558.,  3110., 12676., 13844.,  5156.,  6324.,  7492.,  8660.,  2854.,  3470.,  4086.,  4702.,  5318.,  5934.,  6550.,  7166.,     0.,     0.,  6974.,  7526.,  8078.,  8630.,   350.,   902.,  1454.,  2006., 10340., 11508., 12676., 13844.,  5156.,  6324.,  1622.,  2238.,  2854.,  3470.,  4086.,  4702.,  5318.,  5934.,     0.,     0.,  5870.,  6422.,  6974.,  7526.,  8078.,  8630.,   350.,   902.,  8004.,  9172., 10340., 11508., 12676., 13844.,   390.,  1006.,  1622.,  2238.,  2854.,  3470.,  4086.,  4702.,     0.,     0.,  5196.,  6428.,  7660.,  8892., 10124., 11356., 12588., 13820., 12008., 14600., 17192., 19784., 22376., 24968., 13948., 15308.,  6812.,  8172.,  9532., 10892., 12252., 13612.,     0.,     0., 13612., 14844.,  5196.,  6428.,  7660.,  8892., 10124., 11356., 27560., 30152., 12008., 14600., 17192., 19784., 11228., 12588., 13948., 15308.,  6812.,  8172.,  9532., 10892.,     0.,     0., 11148., 12380., 13612., 14844.,  5196.,  6428.,  7660.,  8892., 22376., 24968., 27560., 30152., 12008., 14600.,  8508.,  9868., 11228., 12588., 13948., 15308.,  6812.,  8172.,     0.,     0.,  7230.,  7910.,  8590.,  9270.,  9950., 10630.,   430.,  1110.,  9700., 11124., 12548., 13972., 15396., 16820.,   470.,  1214.,  1958.,  2702.,  3446.,  4190.,  4934.,  5678.,     0.,     0.,  5870.,  6550.,  7230.,  7910.,  8590.,  9270.,  9950., 10630.,  6852.,  8276.,  9700., 11124., 12548., 13972., 10886., 11630.,   470.,  1214.,  1958.,  2702.,  3446.,  4190.,     0.,     0.,  4510.,  5190.,  5870.,  6550.,  7230.,  7910.,  8590.,  9270., 14884., 16308.,  6852.,  8276.,  9700., 11124.,  9398., 10142., 10886., 11630.,   470.,  1214.,  1958.,  2702.,     0.,     0.,  3150.,  3830.,  4510.,  5190.,  5870.,  6550.,  7230.,  7910., 12036., 13460., 14884., 16308.,  6852.,  8276.,  7910.,  8654.,  9398., 10142., 10886., 11630.,   470.,  1214.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 11, 12, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x12x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   61.,    62.,    63.,    64.,    65.,    66.,    67.,    68.,    69.,    70.,    71.,    72.,   187.,   190.,   193.,   196.,   199.,   202.,   205.,   208.,   211.,   214.,   217.,   220.,   138.,   140.,   142.,   144.,   317.,   322.,   327.,   332.,   337.,   342.,   347.,   352.,   357.,   362.,   367.,   372.,   207.,   210.,   213.,   216.,   219.,   222.,   225.,   228.,    89.,    90.,    91.,    92.,    93.,    94.,    95.,    96.,    97.,    98.,    99.,   100.,   271.,   274.,   277.,   280.,   283.,   286.,   289.,   292.,   295.,   298.,   301.,   304.,   194.,   196.,   198.,   200.,   457.,   462.,   467.,   472.,   477.,   482.,   487.,   492.,   497.,   502.,   507.,   512.,   291.,   294.,   297.,   300.,   303.,   306.,   309.,   312.,   137.,   142.,   147.,   152.,   157.,   162.,   167.,   172.,   177.,   182.,   187.,   192.,   428.,   440.,   452.,   464.,   476.,   488.,   500.,   512.,   524.,   536.,   548.,   560.,   315.,   322.,   329.,   336.,   688.,   704.,   720.,   736.,   752.,   768.,   784.,   800.,   816.,   832.,   848.,   864.,   453.,   462.,   471.,   480.,   489.,   498.,   507.,   516.,   277.,   282.,   287.,   292.,   297.,   302.,   307.,   312.,   317.,   322.,   327.,   332.,   764.,   776.,   788.,   800.,   812.,   824.,   836.,   848.,   860.,   872.,   884.,   896.,   511.,   518.,   525.,   532.,  1136.,  1152.,  1168.,  1184.,  1200.,  1216.,  1232.,  1248.,  1264.,  1280.,  1296.,  1312.,   705.,   714.,   723.,   732.,   741.,   750.,   759.,   768.,   417.,   422.,   427.,   432.,   437.,   442.,   447.,   452.,   457.,   462.,   467.,   472.,  1100.,  1112.,  1124.,  1136.,  1148.,  1160.,  1172.,  1184.,  1196.,  1208.,  1220.,  1232.,   707.,   714.,   721.,   728.,  1584.,  1600.,  1616.,  1632.,  1648.,  1664.,  1680.,  1696.,  1712.,  1728.,  1744.,  1760.,   957.,   966.,   975.,   984.,   993.,  1002.,  1011.,  1020.,   356.,   360.,   364.,   368.,   372.,   376.,   380.,   384.,   388.,   392.,   396.,   400.,   829.,   838.,   847.,   856.,   865.,   874.,   883.,   892.,   901.,   910.,   919.,   928.,   485.,   490.,   495.,   500.,  1015.,  1026.,  1037.,  1048.,  1059.,  1070.,  1081.,  1092.,  1103.,  1114.,  1125.,  1136.,   582.,   588.,   594.,   600.,   606.,   612.,   618.,   624.,   503.,   514.,   525.,   536.,   547.,   558.,   569.,   580.,   591.,   602.,   613.,   624.,  1208.,  1232.,  1256.,  1280.,  1304.,  1328.,  1352.,  1376.,  1400.,  1424.,  1448.,  1472.,   729.,   742.,   755.,   768.,  1468.,  1496.,  1524.,  1552.,  1580.,  1608.,  1636.,  1664.,  1692.,  1720.,  1748.,  1776.,   867.,   882.,   897.,   912.,   927.,   942.,   957.,   972.,   811.,   822.,   833.,   844.,   855.,   866.,   877.,   888.,   899.,   910.,   921.,   932.,  1880.,  1904.,  1928.,  1952.,  1976.,  2000.,  2024.,  2048.,  2072.,  2096.,  2120.,  2144.,  1093.,  1106.,  1119.,  1132.,  2252.,  2280.,  2308.,  2336.,  2364.,  2392.,  2420.,  2448.,  2476.,  2504.,  2532.,  2560.,  1287.,  1302.,  1317.,  1332.,  1347.,  1362.,  1377.,  1392.,  1119.,  1130.,  1141.,  1152.,  1163.,  1174.,  1185.,  1196.,  1207.,  1218.,  1229.,  1240.,  2552.,  2576.,  2600.,  2624.,  2648.,  2672.,  2696.,  2720.,  2744.,  2768.,  2792.,  2816.,  1457.,  1470.,  1483.,  1496.,  3036.,  3064.,  3092.,  3120.,  3148.,  3176.,  3204.,  3232.,  3260.,  3288.,  3316.,  3344.,  1707.,  1722.,  1737.,  1752.,  1767.,  1782.,  1797.,  1812.,   623.,   630.,   637.,   644.,   651.,   658.,   665.,   672.,   679.,   686.,   693.,   700.,  1387.,  1402.,  1417.,  1432.,  1447.,  1462.,  1477.,  1492.,  1507.,  1522.,  1537.,  1552.,   776.,   784.,   792.,   800.,  1573.,  1590.,  1607.,  1624.,  1641.,  1658.,  1675.,  1692.,  1709.,  1726.,  1743.,  1760.,   873.,   882.,   891.,   900.,   909.,   918.,   927.,   936.,   819.,   826.,   833.,   840.,   847.,   854.,   861.,   868.,   875.,   882.,   889.,   896.,  1807.,  1822.,  1837.,  1852.,  1867.,  1882.,  1897.,  1912.,  1927.,  1942.,  1957.,  1972.,  1000.,  1008.,  1016.,  1024.,  2049.,  2066.,  2083.,  2100.,  2117.,  2134.,  2151.,  2168.,  2185.,  2202.,  2219.,  2236.,  1125.,  1134.,  1143.,  1152.,  1161.,  1170.,  1179.,  1188.,   610.,   620.,   630.,   640.,   650.,   660.,   670.,   680.,   690.,   700.,   710.,   720.,  1357.,  1378.,  1399.,  1420.,  1441.,  1462.,  1483.,  1504.,  1525.,  1546.,  1567.,  1588.,   759.,   770.,   781.,   792.,  1487.,  1510.,  1533.,  1556.,  1579.,  1602.,  1625.,  1648.,  1671.,  1694.,  1717.,  1740.,   828.,   840.,   852.,   864.,   876.,   888.,   900.,   912.,   890.,   900.,   910.,   920.,   930.,   940.,   950.,   960.,   970.,   980.,   990.,  1000.,  1945.,  1966.,  1987.,  2008.,  2029.,  2050.,  2071.,  2092.,  2113.,  2134.,  2155.,  2176.,  1067.,  1078.,  1089.,  1100.,  2131.,  2154.,  2177.,  2200.,  2223.,  2246.,  2269.,  2292.,  2315.,  2338.,  2361.,  2384.,  1164.,  1176.,  1188.,  1200.,  1212.,  1224.,  1236.,  1248.,  1235.,  1258.,  1281.,  1304.,  1327.,  1350.,  1373.,  1396.,  1419.,  1442.,  1465.,  1488.,  2768.,  2816.,  2864.,  2912.,  2960.,  3008.,  3056.,  3104.,  3152.,  3200.,  3248.,  3296.,  1557.,  1582.,  1607.,  1632.,  3028.,  3080.,  3132.,  3184.,  3236.,  3288.,  3340.,  3392.,  3444.,  3496.,  3548.,  3600.,  1695.,  1722.,  1749.,  1776.,  1803.,  1830.,  1857.,  1884.,  1879.,  1902.,  1925.,  1948.,  1971.,  1994.,  2017.,  2040.,  2063.,  2086.,  2109.,  2132.,  4112.,  4160.,  4208.,  4256.,  4304.,  4352.,  4400.,  4448.,  4496.,  4544.,  4592.,  4640.,  2257.,  2282.,  2307.,  2332.,  4484.,  4536.,  4588.,  4640.,  4692.,  4744.,  4796.,  4848.,  4900.,  4952.,  5004.,  5056.,  2451.,  2478.,  2505.,  2532.,  2559.,  2586.,  2613.,  2640.,  2523.,  2546.,  2569.,  2592.,  2615.,  2638.,  2661.,  2684.,  2707.,  2730.,  2753.,  2776.,  5456.,  5504.,  5552.,  5600.,  5648.,  5696.,  5744.,  5792.,  5840.,  5888.,  5936.,  5984.,  2957.,  2982.,  3007.,  3032.,  5940.,  5992.,  6044.,  6096.,  6148.,  6200.,  6252.,  6304.,  6356.,  6408.,  6460.,  6512.,  3207.,  3234.,  3261.,  3288.,  3315.,  3342.,  3369.,  3396.,  1157.,  1170.,  1183.,  1196.,  1209.,  1222.,  1235.,  1248.,  1261.,  1274.,  1287.,  1300.,  2503.,  2530.,  2557.,  2584.,  2611.,  2638.,  2665.,  2692.,  2719.,  2746.,  2773.,  2800.,  1358.,  1372.,  1386.,  1400.,  2689.,  2718.,  2747.,  2776.,  2805.,  2834.,  2863.,  2892.,  2921.,  2950.,  2979.,  3008.,  1455.,  1470.,  1485.,  1500.,  1515.,  1530.,  1545.,  1560.,  1601.,  1630.,  1659.,  1688.,  1717.,  1746.,  1775.,  1804.,  1833.,  1862.,  1891.,  1920.,  3548.,  3608.,  3668.,  3728.,  3788.,  3848.,  3908.,  3968.,  4028.,  4088.,  4148.,  4208.,  1971.,  2002.,  2033.,  2064.,  3808.,  3872.,  3936.,  4000.,  4064.,  4128.,  4192.,  4256.,  4320.,  4384.,  4448.,  4512.,  2109.,  2142.,  2175.,  2208.,  2241.,  2274.,  2307.,  2340.,  2413.,  2442.,  2471.,  2500.,  2529.,  2558.,  2587.,  2616.,  2645.,  2674.,  2703.,  2732.,  5228.,  5288.,  5348.,  5408.,  5468.,  5528.,  5588.,  5648.,  5708.,  5768.,  5828.,  5888.,  2839.,  2870.,  2901.,  2932.,  5600.,  5664.,  5728.,  5792.,  5856.,  5920.,  5984.,  6048.,  6112.,  6176.,  6240.,  6304.,  3033.,  3066.,  3099.,  3132.,  3165.,  3198.,  3231.,  3264.,  3225.,  3254.,  3283.,  3312.,  3341.,  3370.,  3399.,  3428.,  3457.,  3486.,  3515.,  3544.,  6908.,  6968.,  7028.,  7088.,  7148.,  7208.,  7268.,  7328.,  7388.,  7448.,  7508.,  7568.,  3707.,  3738.,  3769.,  3800.,  7392.,  7456.,  7520.,  7584.,  7648.,  7712.,  7776.,  7840.,  7904.,  7968.,  8032.,  8096.,  3957.,  3990.,  4023.,  4056.,  4089.,  4122.,  4155.,  4188.,  1424.,  1440.,  1456.,  1472.,  1488.,  1504.,  1520.,  1536.,  1552.,  1568.,  1584.,  1600.,  3061.,  3094.,  3127.,  3160.,  3193.,  3226.,  3259.,  3292.,  3325.,  3358.,  3391.,  3424.,  1649.,  1666.,  1683.,  1700.,  3247.,  3282.,  3317.,  3352.,  3387.,  3422.,  3457.,  3492.,  3527.,  3562.,  3597.,  3632.,  1746.,  1764.,  1782.,  1800.,  1818.,  1836.,  1854.,  1872.,  1872.,  1888.,  1904.,  1920.,  1936.,  1952.,  1968.,  1984.,  2000.,  2016.,  2032.,  2048.,  3985.,  4018.,  4051.,  4084.,  4117.,  4150.,  4183.,  4216.,  4249.,  4282.,  4315.,  4348.,  2125.,  2142.,  2159.,  2176.,  4227.,  4262.,  4297.,  4332.,  4367.,  4402.,  4437.,  4472.,  4507.,  4542.,  4577.,  4612.,  2250.,  2268.,  2286.,  2304.,  2322.,  2340.,  2358.,  2376.,  1159.,  1178.,  1197.,  1216.,  1235.,  1254.,  1273.,  1292.,  1311.,  1330.,  1349.,  1368.,  2527.,  2566.,  2605.,  2644.,  2683.,  2722.,  2761.,  2800.,  2839.,  2878.,  2917.,  2956.,  1380.,  1400.,  1420.,  1440.,  2657.,  2698.,  2739.,  2780.,  2821.,  2862.,  2903.,  2944.,  2985.,  3026.,  3067.,  3108.,  1449.,  1470.,  1491.,  1512.,  1533.,  1554.,  1575.,  1596.,  1691.,  1710.,  1729.,  1748.,  1767.,  1786.,  1805.,  1824.,  1843.,  1862.,  1881.,  1900.,  3619.,  3658.,  3697.,  3736.,  3775.,  3814.,  3853.,  3892.,  3931.,  3970.,  4009.,  4048.,  1940.,  1960.,  1980.,  2000.,  3805.,  3846.,  3887.,  3928.,  3969.,  4010.,  4051.,  4092.,  4133.,  4174.,  4215.,  4256.,  2037.,  2058.,  2079.,  2100.,  2121.,  2142.,  2163.,  2184.,  2333.,  2374.,  2415.,  2456.,  2497.,  2538.,  2579.,  2620.,  2661.,  2702.,  2743.,  2784.,  5108.,  5192.,  5276.,  5360.,  5444.,  5528.,  5612.,  5696.,  5780.,  5864.,  5948.,  6032.,  2799.,  2842.,  2885.,  2928.,  5368.,  5456.,  5544.,  5632.,  5720.,  5808.,  5896.,  5984.,  6072.,  6160.,  6248.,  6336.,  2937.,  2982.,  3027.,  3072.,  3117.,  3162.,  3207.,  3252.,  3481.,  3522.,  3563.,  3604.,  3645.,  3686.,  3727.,  3768.,  3809.,  3850.,  3891.,  3932.,  7460.,  7544.,  7628.,  7712.,  7796.,  7880.,  7964.,  8048.,  8132.,  8216.,  8300.,  8384.,  4003.,  4046.,  4089.,  4132.,  7832.,  7920.,  8008.,  8096.,  8184.,  8272.,  8360.,  8448.,  8536.,  8624.,  8712.,  8800.,  4197.,  4242.,  4287.,  4332.,  4377.,  4422.,  4467.,  4512.,  4629.,  4670.,  4711.,  4752.,  4793.,  4834.,  4875.,  4916.,  4957.,  4998.,  5039.,  5080.,  9812.,  9896.,  9980., 10064., 10148., 10232., 10316., 10400., 10484., 10568., 10652., 10736.,  5207.,  5250.,  5293.,  5336., 10296., 10384., 10472., 10560., 10648., 10736., 10824., 10912., 11000., 11088., 11176., 11264.,  5457.,  5502.,  5547.,  5592.,  5637.,  5682.,  5727.,  5772.,  1958.,  1980.,  2002.,  2024.,  2046.,  2068.,  2090.,  2112.,  2134.,  2156.,  2178.,  2200.,  4177.,  4222.,  4267.,  4312.,  4357.,  4402.,  4447.,  4492.,  4537.,  4582.,  4627.,  4672.,  2231.,  2254.,  2277.,  2300.,  4363.,  4410.,  4457.,  4504.,  4551.,  4598.,  4645.,  4692.,  4739.,  4786.,  4833.,  4880.,  2328.,  2352.,  2376.,  2400.,  2424.,  2448.,  2472.,  2496.,  2699.,  2746.,  2793.,  2840.,  2887.,  2934.,  2981.,  3028.,  3075.,  3122.,  3169.,  3216.,  5888.,  5984.,  6080.,  6176.,  6272.,  6368.,  6464.,  6560.,  6656.,  6752.,  6848.,  6944.,  3213.,  3262.,  3311.,  3360.,  6148.,  6248.,  6348.,  6448.,  6548.,  6648.,  6748.,  6848.,  6948.,  7048.,  7148.,  7248.,  3351.,  3402.,  3453.,  3504.,  3555.,  3606.,  3657.,  3708.,  4015.,  4062.,  4109.,  4156.,  4203.,  4250.,  4297.,  4344.,  4391.,  4438.,  4485.,  4532.,  8576.,  8672.,  8768.,  8864.,  8960.,  9056.,  9152.,  9248.,  9344.,  9440.,  9536.,  9632.,  4585.,  4634.,  4683.,  4732.,  8948.,  9048.,  9148.,  9248.,  9348.,  9448.,  9548.,  9648.,  9748.,  9848.,  9948., 10048.,  4779.,  4830.,  4881.,  4932.,  4983.,  5034.,  5085.,  5136.,  5331.,  5378.,  5425.,  5472.,  5519.,  5566.,  5613.,  5660.,  5707.,  5754.,  5801.,  5848., 11264., 11360., 11456., 11552., 11648., 11744., 11840., 11936., 12032., 12128., 12224., 12320.,  5957.,  6006.,  6055.,  6104., 11748., 11848., 11948., 12048., 12148., 12248., 12348., 12448., 12548., 12648., 12748., 12848.,  6207.,  6258.,  6309.,  6360.,  6411.,  6462.,  6513.,  6564.,  2225.,  2250.,  2275.,  2300.,  2325.,  2350.,  2375.,  2400.,  2425.,  2450.,  2475.,  2500.,  4735.,  4786.,  4837.,  4888.,  4939.,  4990.,  5041.,  5092.,  5143.,  5194.,  5245.,  5296.,  2522.,  2548.,  2574.,  2600.,  4921.,  4974.,  5027.,  5080.,  5133.,  5186.,  5239.,  5292.,  5345.,  5398.,  5451.,  5504.,  2619.,  2646.,  2673.,  2700.,  2727.,  2754.,  2781.,  2808.,  2925.,  2950.,  2975.,  3000.,  3025.,  3050.,  3075.,  3100.,  3125.,  3150.,  3175.,  3200.,  6163.,  6214.,  6265.,  6316.,  6367.,  6418.,  6469.,  6520.,  6571.,  6622.,  6673.,  6724.,  3250.,  3276.,  3302.,  3328.,  6405.,  6458.,  6511.,  6564.,  6617.,  6670.,  6723.,  6776.,  6829.,  6882.,  6935.,  6988.,  3375.,  3402.,  3429.,  3456.,  3483.,  3510.,  3537.,  3564.};
  const std::array<int, 4> in_shape = {{ 3, 11, 12, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x12x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,    9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   19.,   22.,   25.,   28.,   31.,   34.,   37.,   40.,   43.,   46.,   49.,   52.,   26.,   28.,   30.,   32.,   34.,   36.,   38.,   40.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,    0.,    0.,    0.,    0.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,  103.,  106.,  109.,  112.,  115.,  118.,  121.,  124.,  127.,  130.,  133.,  136.,   82.,   84.,   86.,   88.,   90.,   92.,   94.,   96.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,    0.,    0.,    0.,    0.,   57.,   58.,   59.,   60.,   61.,   62.,   63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  146.,  148.,  150.,  152.,  154.,  156.,  158.,  160.,  162.,  164.,  166.,  168.,    0.,    0.,    0.,    0.,   85.,   86.,   87.,   88.,   89.,   90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  202.,  204.,  206.,  208.,  210.,  212.,  214.,  216.,  218.,  220.,  222.,  224.,    0.,    0.,    0.,    0.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  148.,  152.,  156.,  160.,  164.,  168.,  172.,  176.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  302.,  308.,  314.,  320.,  326.,  332.,  338.,  344.,  350.,  356.,  362.,  368.,  374.,  380.,  386.,  392.,    0.,    0.,    0.,    0.,  228.,  232.,  236.,  240.,  244.,  248.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,  284.,  288.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  470.,  476.,  482.,  488.,  494.,  500.,  506.,  512.,  518.,  524.,  530.,  536.,  542.,  548.,  554.,  560.,    0.,    0.,    0.,    0.,  340.,  344.,  348.,  352.,  356.,  360.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,  396.,  400.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080.,  638.,  644.,  650.,  656.,  662.,  668.,  674.,  680.,  686.,  692.,  698.,  704.,  710.,  716.,  722.,  728.,    0.,    0.,    0.,    0.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  279.,  282.,  285.,  288.,  291.,  294.,  297.,  300.,  643.,  650.,  657.,  664.,  671.,  678.,  685.,  692.,  699.,  706.,  713.,  720.,  388.,  392.,  396.,  400.,  404.,  408.,  412.,  416.,  420.,  424.,  428.,  432.,  436.,  440.,  444.,  448.,    0.,    0.,    0.,    0.,  339.,  342.,  345.,  348.,  351.,  354.,  357.,  360.,  363.,  366.,  369.,  372.,  375.,  378.,  381.,  384.,  839.,  846.,  853.,  860.,  867.,  874.,  881.,  888.,  895.,  902.,  909.,  916.,  500.,  504.,  508.,  512.,  516.,  520.,  524.,  528.,  532.,  536.,  540.,  544.,  548.,  552.,  556.,  560.,    0.,    0.,    0.,    0.,  423.,  426.,  429.,  432.,  435.,  438.,  441.,  444.,  447.,  450.,  453.,  456.,  459.,  462.,  465.,  468., 1035., 1042., 1049., 1056., 1063., 1070., 1077., 1084., 1091., 1098., 1105., 1112.,  612.,  616.,  620.,  624.,  628.,  632.,  636.,  640.,  644.,  648.,  652.,  656.,  660.,  664.,  668.,  672.,    0.,    0.,    0.,    0.,  507.,  510.,  513.,  516.,  519.,  522.,  525.,  528.,  531.,  534.,  537.,  540.,  543.,  546.,  549.,  552., 1231., 1238., 1245., 1252., 1259., 1266., 1273., 1280., 1287., 1294., 1301., 1308.,  724.,  728.,  732.,  736.,  740.,  744.,  748.,  752.,  756.,  760.,  764.,  768.,  772.,  776.,  780.,  784.,    0.,    0.,    0.,    0.,    5.,   10.,   15.,   20.,   25.,   30.,   35.,   40.,   45.,   50.,   55.,   60.,   65.,   70.,   75.,   80.,   91.,  102.,  113.,  124.,  135.,  146.,  157.,  168.,  179.,  190.,  201.,  212.,   78.,   84.,   90.,   96.,  102.,  108.,  114.,  120.,  126.,  132.,  138.,  144.,  150.,  156.,  162.,  168.,    0.,    0.,    0.,    0.,  145.,  150.,  155.,  160.,  165.,  170.,  175.,  180.,  185.,  190.,  195.,  200.,  205.,  210.,  215.,  220.,  399.,  410.,  421.,  432.,  443.,  454.,  465.,  476.,  487.,  498.,  509.,  520.,  246.,  252.,  258.,  264.,  270.,  276.,  282.,  288.,  294.,  300.,  306.,  312.,  318.,  324.,  330.,  336.,    0.,    0.,    0.,    0.,  285.,  290.,  295.,  300.,  305.,  310.,  315.,  320.,  325.,  330.,  335.,  340.,  345.,  350.,  355.,  360.,  707.,  718.,  729.,  740.,  751.,  762.,  773.,  784.,  795.,  806.,  817.,  828.,  414.,  420.,  426.,  432.,  438.,  444.,  450.,  456.,  462.,  468.,  474.,  480.,  486.,  492.,  498.,  504.,    0.,    0.,    0.,    0.,  425.,  430.,  435.,  440.,  445.,  450.,  455.,  460.,  465.,  470.,  475.,  480.,  485.,  490.,  495.,  500., 1015., 1026., 1037., 1048., 1059., 1070., 1081., 1092., 1103., 1114., 1125., 1136.,  582.,  588.,  594.,  600.,  606.,  612.,  618.,  624.,  630.,  636.,  642.,  648.,  654.,  660.,  666.,  672.,    0.,    0.,    0.,    0.,  572.,  584.,  596.,  608.,  620.,  632.,  644.,  656.,  668.,  680.,  692.,  704.,  716.,  728.,  740.,  752., 1450., 1476., 1502., 1528., 1554., 1580., 1606., 1632., 1658., 1684., 1710., 1736.,  854.,  868.,  882.,  896.,  910.,  924.,  938.,  952.,  966.,  980.,  994., 1008., 1022., 1036., 1050., 1064.,    0.,    0.,    0.,    0.,  908.,  920.,  932.,  944.,  956.,  968.,  980.,  992., 1004., 1016., 1028., 1040., 1052., 1064., 1076., 1088., 2178., 2204., 2230., 2256., 2282., 2308., 2334., 2360., 2386., 2412., 2438., 2464., 1246., 1260., 1274., 1288., 1302., 1316., 1330., 1344., 1358., 1372., 1386., 1400., 1414., 1428., 1442., 1456.,    0.,    0.,    0.,    0., 1244., 1256., 1268., 1280., 1292., 1304., 1316., 1328., 1340., 1352., 1364., 1376., 1388., 1400., 1412., 1424., 2906., 2932., 2958., 2984., 3010., 3036., 3062., 3088., 3114., 3140., 3166., 3192., 1638., 1652., 1666., 1680., 1694., 1708., 1722., 1736., 1750., 1764., 1778., 1792., 1806., 1820., 1834., 1848.,    0.,    0.,    0.,    0.,  595.,  602.,  609.,  616.,  623.,  630.,  637.,  644.,  651.,  658.,  665.,  672.,  679.,  686.,  693.,  700., 1387., 1402., 1417., 1432., 1447., 1462., 1477., 1492., 1507., 1522., 1537., 1552.,  776.,  784.,  792.,  800.,  808.,  816.,  824.,  832.,  840.,  848.,  856.,  864.,  872.,  880.,  888.,  896.,    0.,    0.,    0.,    0.,  791.,  798.,  805.,  812.,  819.,  826.,  833.,  840.,  847.,  854.,  861.,  868.,  875.,  882.,  889.,  896., 1807., 1822., 1837., 1852., 1867., 1882., 1897., 1912., 1927., 1942., 1957., 1972., 1000., 1008., 1016., 1024., 1032., 1040., 1048., 1056., 1064., 1072., 1080., 1088., 1096., 1104., 1112., 1120.,    0.,    0.,    0.,    0.,  987.,  994., 1001., 1008., 1015., 1022., 1029., 1036., 1043., 1050., 1057., 1064., 1071., 1078., 1085., 1092., 2227., 2242., 2257., 2272., 2287., 2302., 2317., 2332., 2347., 2362., 2377., 2392., 1224., 1232., 1240., 1248., 1256., 1264., 1272., 1280., 1288., 1296., 1304., 1312., 1320., 1328., 1336., 1344.,    0.,    0.,    0.,    0., 1183., 1190., 1197., 1204., 1211., 1218., 1225., 1232., 1239., 1246., 1253., 1260., 1267., 1274., 1281., 1288., 2647., 2662., 2677., 2692., 2707., 2722., 2737., 2752., 2767., 2782., 2797., 2812., 1448., 1456., 1464., 1472., 1480., 1488., 1496., 1504., 1512., 1520., 1528., 1536., 1544., 1552., 1560., 1568.,    0.,    0.,    0.,    0.,    9.,   18.,   27.,   36.,   45.,   54.,   63.,   72.,   81.,   90.,   99.,  108.,  117.,  126.,  135.,  144.,  163.,  182.,  201.,  220.,  239.,  258.,  277.,  296.,  315.,  334.,  353.,  372.,  130.,  140.,  150.,  160.,  170.,  180.,  190.,  200.,  210.,  220.,  230.,  240.,  250.,  260.,  270.,  280.,    0.,    0.,    0.,    0.,  261.,  270.,  279.,  288.,  297.,  306.,  315.,  324.,  333.,  342.,  351.,  360.,  369.,  378.,  387.,  396.,  695.,  714.,  733.,  752.,  771.,  790.,  809.,  828.,  847.,  866.,  885.,  904.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  530.,  540.,  550.,  560.,    0.,    0.,    0.,    0.,  513.,  522.,  531.,  540.,  549.,  558.,  567.,  576.,  585.,  594.,  603.,  612.,  621.,  630.,  639.,  648., 1227., 1246., 1265., 1284., 1303., 1322., 1341., 1360., 1379., 1398., 1417., 1436.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  810.,  820.,  830.,  840.,    0.,    0.,    0.,    0.,  765.,  774.,  783.,  792.,  801.,  810.,  819.,  828.,  837.,  846.,  855.,  864.,  873.,  882.,  891.,  900., 1759., 1778., 1797., 1816., 1835., 1854., 1873., 1892., 1911., 1930., 1949., 1968.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080., 1090., 1100., 1110., 1120.,    0.,    0.,    0.,    0., 1028., 1048., 1068., 1088., 1108., 1128., 1148., 1168., 1188., 1208., 1228., 1248., 1268., 1288., 1308., 1328., 2490., 2532., 2574., 2616., 2658., 2700., 2742., 2784., 2826., 2868., 2910., 2952., 1406., 1428., 1450., 1472., 1494., 1516., 1538., 1560., 1582., 1604., 1626., 1648., 1670., 1692., 1714., 1736.,    0.,    0.,    0.,    0., 1588., 1608., 1628., 1648., 1668., 1688., 1708., 1728., 1748., 1768., 1788., 1808., 1828., 1848., 1868., 1888., 3666., 3708., 3750., 3792., 3834., 3876., 3918., 3960., 4002., 4044., 4086., 4128., 2022., 2044., 2066., 2088., 2110., 2132., 2154., 2176., 2198., 2220., 2242., 2264., 2286., 2308., 2330., 2352.,    0.,    0.,    0.,    0., 2148., 2168., 2188., 2208., 2228., 2248., 2268., 2288., 2308., 2328., 2348., 2368., 2388., 2408., 2428., 2448., 4842., 4884., 4926., 4968., 5010., 5052., 5094., 5136., 5178., 5220., 5262., 5304., 2638., 2660., 2682., 2704., 2726., 2748., 2770., 2792., 2814., 2836., 2858., 2880., 2902., 2924., 2946., 2968.,    0.,    0.,    0.,    0.,  935.,  946.,  957.,  968.,  979.,  990., 1001., 1012., 1023., 1034., 1045., 1056., 1067., 1078., 1089., 1100., 2131., 2154., 2177., 2200., 2223., 2246., 2269., 2292., 2315., 2338., 2361., 2384., 1164., 1176., 1188., 1200., 1212., 1224., 1236., 1248., 1260., 1272., 1284., 1296., 1308., 1320., 1332., 1344.,    0.,    0.,    0.,    0., 1243., 1254., 1265., 1276., 1287., 1298., 1309., 1320., 1331., 1342., 1353., 1364., 1375., 1386., 1397., 1408., 2775., 2798., 2821., 2844., 2867., 2890., 2913., 2936., 2959., 2982., 3005., 3028., 1500., 1512., 1524., 1536., 1548., 1560., 1572., 1584., 1596., 1608., 1620., 1632., 1644., 1656., 1668., 1680.,    0.,    0.,    0.,    0., 1551., 1562., 1573., 1584., 1595., 1606., 1617., 1628., 1639., 1650., 1661., 1672., 1683., 1694., 1705., 1716., 3419., 3442., 3465., 3488., 3511., 3534., 3557., 3580., 3603., 3626., 3649., 3672., 1836., 1848., 1860., 1872., 1884., 1896., 1908., 1920., 1932., 1944., 1956., 1968., 1980., 1992., 2004., 2016.,    0.,    0.,    0.,    0., 1859., 1870., 1881., 1892., 1903., 1914., 1925., 1936., 1947., 1958., 1969., 1980., 1991., 2002., 2013., 2024., 4063., 4086., 4109., 4132., 4155., 4178., 4201., 4224., 4247., 4270., 4293., 4316., 2172., 2184., 2196., 2208., 2220., 2232., 2244., 2256., 2268., 2280., 2292., 2304., 2316., 2328., 2340., 2352.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 3, 11, 12, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x12x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  173.,   179.,   185.,   191.,     5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,   400.,   420.,   440.,   460.,   480.,   500.,   520.,   540.,   112.,   132.,   152.,   172.,    67.,    81.,    95.,   109.,   668.,   704.,   740.,   776.,   812.,   848.,   884.,   920.,   252.,   288.,   324.,   360.,   105.,   127.,   149.,   171.,   193.,   215.,   237.,   259.,   149.,   155.,   161.,   167.,   173.,   179.,   185.,   191.,     5.,    11.,    17.,    23.,   320.,   340.,   360.,   380.,   400.,   420.,   440.,   460.,   480.,   500.,   520.,   540.,    11.,    25.,    39.,    53.,   524.,   560.,   596.,   632.,   668.,   704.,   740.,   776.,   812.,   848.,   884.,   920.,    17.,    39.,    61.,    83.,   105.,   127.,   149.,   171.,   268.,   304.,   340.,   376.,   412.,   448.,   484.,   520.,   556.,   592.,   628.,   664.,   772.,   860.,   948.,  1036.,  1124.,  1212.,  1300.,  1388.,  1476.,  1564.,  1652.,  1740.,   888.,   940.,   992.,  1044.,  1052.,  1172.,  1292.,  1412.,  1532.,  1652.,  1772.,  1892.,  2012.,  2132.,  2252.,  2372.,  1220.,  1288.,  1356.,  1424.,   788.,   856.,   924.,   992.,   124.,   160.,   196.,   232.,   268.,   304.,   340.,   376.,   412.,   448.,   484.,   520.,  1828.,  1916.,  2004.,  2092.,   772.,   860.,   948.,  1036.,  1124.,  1212.,  1300.,  1388.,   680.,   732.,   784.,   836.,  2492.,  2612.,  2732.,  2852.,  1052.,  1172.,  1292.,  1412.,  1532.,  1652.,  1772.,  1892.,   948.,  1016.,  1084.,  1152.,  1220.,  1288.,  1356.,  1424.,   940.,   976.,  1012.,  1048.,   124.,   160.,   196.,   232.,   268.,   304.,   340.,   376.,  1476.,  1564.,  1652.,  1740.,  1828.,  1916.,  2004.,  2092.,   772.,   860.,   948.,  1036.,   472.,   524.,   576.,   628.,  2012.,  2132.,  2252.,  2372.,  2492.,  2612.,  2732.,  2852.,  1052.,  1172.,  1292.,  1412.,   676.,   744.,   812.,   880.,   948.,  1016.,  1084.,  1152.,   743.,   773.,   803.,   833.,   863.,   893.,   923.,   953.,    23.,    53.,    83.,   113.,   932.,  1000.,  1068.,  1136.,  1204.,  1272.,  1340.,  1408.,  1476.,  1544.,  1612.,  1680.,    29.,    67.,   105.,   143.,  1136.,  1220.,  1304.,  1388.,  1472.,  1556.,  1640.,  1724.,  1808.,  1892.,  1976.,  2060.,    35.,    81.,   127.,   173.,   219.,   265.,   311.,   357.,   880.,   964.,  1048.,  1132.,  1216.,  1300.,  1384.,  1468.,  1552.,  1636.,  1720.,  1804.,  1612.,  1796.,  1980.,  2164.,  2348.,  2532.,  2716.,  2900.,  3084.,  3268.,  3452.,  3636.,  1884.,  1984.,  2084.,  2184.,  1892.,  2108.,  2324.,  2540.,  2756.,  2972.,  3188.,  3404.,  3620.,  3836.,  4052.,  4268.,  2216.,  2332.,  2448.,  2564.,  1208.,  1324.,  1440.,  1556.,   544.,   628.,   712.,   796.,   880.,   964.,  1048.,  1132.,  1216.,  1300.,  1384.,  1468.,  3820.,  4004.,  4188.,  4372.,  1612.,  1796.,  1980.,  2164.,  2348.,  2532.,  2716.,  2900.,  1484.,  1584.,  1684.,  1784.,  4484.,  4700.,  4916.,  5132.,  1892.,  2108.,  2324.,  2540.,  2756.,  2972.,  3188.,  3404.,  1752.,  1868.,  1984.,  2100.,  2216.,  2332.,  2448.,  2564.,  1936.,  2020.,  2104.,  2188.,   544.,   628.,   712.,   796.,   880.,   964.,  1048.,  1132.,  3084.,  3268.,  3452.,  3636.,  3820.,  4004.,  4188.,  4372.,  1612.,  1796.,  1980.,  2164.,  1084.,  1184.,  1284.,  1384.,  3620.,  3836.,  4052.,  4268.,  4484.,  4700.,  4916.,  5132.,  1892.,  2108.,  2324.,  2540.,  1288.,  1404.,  1520.,  1636.,  1752.,  1868.,  1984.,  2100.,  1337.,  1391.,  1445.,  1499.,  1553.,  1607.,  1661.,  1715.,    41.,    95.,   149.,   203.,  1544.,  1660.,  1776.,  1892.,  2008.,  2124.,  2240.,  2356.,  2472.,  2588.,  2704.,  2820.,    47.,   109.,   171.,   233.,  1748.,  1880.,  2012.,  2144.,  2276.,  2408.,  2540.,  2672.,  2804.,  2936.,  3068.,  3200.,    53.,   123.,   193.,   263.,   333.,   403.,   473.,   543.,  1121.,  1175.,  1229.,  1283.,  1337.,  1391.,  1445.,  1499.,  1553.,  1607.,  1661.,  1715.,  1080.,  1196.,  1312.,  1428.,  1544.,  1660.,  1776.,  1892.,  2008.,  2124.,  2240.,  2356.,  1783.,  1845.,  1907.,  1969.,  1220.,  1352.,  1484.,  1616.,  1748.,  1880.,  2012.,  2144.,  2276.,  2408.,  2540.,  2672.,  2013.,  2083.,  2153.,  2223.,    53.,   123.,   193.,   263.,  2243.,  2321.,  2399.,  2477.,    59.,   137.,   215.,   293.,   371.,   449.,   527.,   605.,  2812.,  2976.,  3140.,  3304.,  3468.,  3632.,  3796.,  3960.,  1372.,  1536.,  1700.,  1864.,   409.,   495.,   581.,   667.,  3080.,  3260.,  3440.,  3620.,  3800.,  3980.,  4160.,  4340.,  1512.,  1692.,  1872.,  2052.,   447.,   541.,   635.,   729.,   823.,   917.,  1011.,  1105.,  1931.,  2009.,  2087.,  2165.,  2243.,  2321.,  2399.,  2477.,    59.,   137.,   215.,   293.,  2156.,  2320.,  2484.,  2648.,  2812.,  2976.,  3140.,  3304.,  3468.,  3632.,  3796.,  3960.,    65.,   151.,   237.,   323.,  2360.,  2540.,  2720.,  2900.,  3080.,  3260.,  3440.,  3620.,  3800.,  3980.,  4160.,  4340.,    71.,   165.,   259.,   353.,   447.,   541.,   635.,   729.,  2104.,  2284.,  2464.,  2644.,  2824.,  3004.,  3184.,  3364.,  3544.,  3724.,  3904.,  4084.,  3292.,  3668.,  4044.,  4420.,  4796.,  5172.,  5548.,  5924.,  6300.,  6676.,  7052.,  7428.,  3876.,  4072.,  4268.,  4464.,  3572.,  3980.,  4388.,  4796.,  5204.,  5612.,  6020.,  6428.,  6836.,  7244.,  7652.,  8060.,  4208.,  4420.,  4632.,  4844.,  2048.,  2260.,  2472.,  2684.,  1384.,  1564.,  1744.,  1924.,  2104.,  2284.,  2464.,  2644.,  2824.,  3004.,  3184.,  3364.,  7804.,  8180.,  8556.,  8932.,  3292.,  3668.,  4044.,  4420.,  4796.,  5172.,  5548.,  5924.,  3092.,  3288.,  3484.,  3680.,  8468.,  8876.,  9284.,  9692.,  3572.,  3980.,  4388.,  4796.,  5204.,  5612.,  6020.,  6428.,  3360.,  3572.,  3784.,  3996.,  4208.,  4420.,  4632.,  4844.,  3928.,  4108.,  4288.,  4468.,  1384.,  1564.,  1744.,  1924.,  2104.,  2284.,  2464.,  2644.,  6300.,  6676.,  7052.,  7428.,  7804.,  8180.,  8556.,  8932.,  3292.,  3668.,  4044.,  4420.,  2308.,  2504.,  2700.,  2896.,  6836.,  7244.,  7652.,  8060.,  8468.,  8876.,  9284.,  9692.,  3572.,  3980.,  4388.,  4796.,  2512.,  2724.,  2936.,  3148.,  3360.,  3572.,  3784.,  3996.,  2525.,  2627.,  2729.,  2831.,  2933.,  3035.,  3137.,  3239.,    77.,   179.,   281.,   383.,  2768.,  2980.,  3192.,  3404.,  3616.,  3828.,  4040.,  4252.,  4464.,  4676.,  4888.,  5100.,    83.,   193.,   303.,   413.,  2972.,  3200.,  3428.,  3656.,  3884.,  4112.,  4340.,  4568.,  4796.,  5024.,  5252.,  5480.,    89.,   207.,   325.,   443.,   561.,   679.,   797.,   915.,  2716.,  2944.,  3172.,  3400.,  3628.,  3856.,  4084.,  4312.,  4540.,  4768.,  4996.,  5224.,  4132.,  4604.,  5076.,  5548.,  6020.,  6492.,  6964.,  7436.,  7908.,  8380.,  8852.,  9324.,  4872.,  5116.,  5360.,  5604.,  4412.,  4916.,  5420.,  5924.,  6428.,  6932.,  7436.,  7940.,  8444.,  8948.,  9452.,  9956.,  5204.,  5464.,  5724.,  5984.,  2468.,  2728.,  2988.,  3248.,  1804.,  2032.,  2260.,  2488.,  2716.,  2944.,  3172.,  3400.,  3628.,  3856.,  4084.,  4312.,  9796., 10268., 10740., 11212.,  4132.,  4604.,  5076.,  5548.,  6020.,  6492.,  6964.,  7436.,  3896.,  4140.,  4384.,  4628., 10460., 10964., 11468., 11972.,  4412.,  4916.,  5420.,  5924.,  6428.,  6932.,  7436.,  7940.,  4164.,  4424.,  4684.,  4944.,  5204.,  5464.,  5724.,  5984.,  4924.,  5152.,  5380.,  5608.,  1804.,  2032.,  2260.,  2488.,  2716.,  2944.,  3172.,  3400.,  7908.,  8380.,  8852.,  9324.,  9796., 10268., 10740., 11212.,  4132.,  4604.,  5076.,  5548.,  2920.,  3164.,  3408.,  3652.,  8444.,  8948.,  9452.,  9956., 10460., 10964., 11468., 11972.,  4412.,  4916.,  5420.,  5924.,  3124.,  3384.,  3644.,  3904.,  4164.,  4424.,  4684.,  4944.,  3119.,  3245.,  3371.,  3497.,  3623.,  3749.,  3875.,  4001.,    95.,   221.,   347.,   473.,  3380.,  3640.,  3900.,  4160.,  4420.,  4680.,  4940.,  5200.,  5460.,  5720.,  5980.,  6240.,   101.,   235.,   369.,   503.,  3584.,  3860.,  4136.,  4412.,  4688.,  4964.,  5240.,  5516.,  5792.,  6068.,  6344.,  6620.,   107.,   249.,   391.,   533.,   675.,   817.,   959.,  1101.,  2615.,  2741.,  2867.,  2993.,  3119.,  3245.,  3371.,  3497.,  3623.,  3749.,  3875.,  4001.,  2340.,  2600.,  2860.,  3120.,  3380.,  3640.,  3900.,  4160.,  4420.,  4680.,  4940.,  5200.,  3853.,  3987.,  4121.,  4255.,  2480.,  2756.,  3032.,  3308.,  3584.,  3860.,  4136.,  4412.,  4688.,  4964.,  5240.,  5516.,  4083.,  4225.,  4367.,  4509.,   107.,   249.,   391.,   533.,  4313.,  4463.,  4613.,  4763.,   113.,   263.,   413.,   563.,   713.,   863.,  1013.,  1163.,  5224.,  5532.,  5840.,  6148.,  6456.,  6764.,  7072.,  7380.,  2632.,  2940.,  3248.,  3556.,   751.,   909.,  1067.,  1225.,  5492.,  5816.,  6140.,  6464.,  6788.,  7112.,  7436.,  7760.,  2772.,  3096.,  3420.,  3744.,   789.,   955.,  1121.,  1287.,  1453.,  1619.,  1785.,  1951.,  3713.,  3863.,  4013.,  4163.,  4313.,  4463.,  4613.,  4763.,   113.,   263.,   413.,   563.,  3992.,  4300.,  4608.,  4916.,  5224.,  5532.,  5840.,  6148.,  6456.,  6764.,  7072.,  7380.,   119.,   277.,   435.,   593.,  4196.,  4520.,  4844.,  5168.,  5492.,  5816.,  6140.,  6464.,  6788.,  7112.,  7436.,  7760.,   125.,   291.,   457.,   623.,   789.,   955.,  1121.,  1287.,  3940.,  4264.,  4588.,  4912.,  5236.,  5560.,  5884.,  6208.,  6532.,  6856.,  7180.,  7504.,  5812.,  6476.,  7140.,  7804.,  8468.,  9132.,  9796., 10460., 11124., 11788., 12452., 13116.,  6864.,  7204.,  7544.,  7884.,  6092.,  6788.,  7484.,  8180.,  8876.,  9572., 10268., 10964., 11660., 12356., 13052., 13748.,  7196.,  7552.,  7908.,  8264.,  3308.,  3664.,  4020.,  4376.,  2644.,  2968.,  3292.,  3616.,  3940.,  4264.,  4588.,  4912.,  5236.,  5560.,  5884.,  6208., 13780., 14444., 15108., 15772.,  5812.,  6476.,  7140.,  7804.,  8468.,  9132.,  9796., 10460.,  5504.,  5844.,  6184.,  6524., 14444., 15140., 15836., 16532.,  6092.,  6788.,  7484.,  8180.,  8876.,  9572., 10268., 10964.,  5772.,  6128.,  6484.,  6840.,  7196.,  7552.,  7908.,  8264.,  6916.,  7240.,  7564.,  7888.,  2644.,  2968.,  3292.,  3616.,  3940.,  4264.,  4588.,  4912., 11124., 11788., 12452., 13116., 13780., 14444., 15108., 15772.,  5812.,  6476.,  7140.,  7804.,  4144.,  4484.,  4824.,  5164., 11660., 12356., 13052., 13748., 14444., 15140., 15836., 16532.,  6092.,  6788.,  7484.,  8180.,  4348.,  4704.,  5060.,  5416.,  5772.,  6128.,  6484.,  6840.,  4307.,  4481.,  4655.,  4829.,  5003.,  5177.,  5351.,  5525.,   131.,   305.,   479.,   653.,  4604.,  4960.,  5316.,  5672.,  6028.,  6384.,  6740.,  7096.,  7452.,  7808.,  8164.,  8520.,   137.,   319.,   501.,   683.,  4808.,  5180.,  5552.,  5924.,  6296.,  6668.,  7040.,  7412.,  7784.,  8156.,  8528.,  8900.,   143.,   333.,   523.,   713.,   903.,  1093.,  1283.,  1473.,  4552.,  4924.,  5296.,  5668.,  6040.,  6412.,  6784.,  7156.,  7528.,  7900.,  8272.,  8644.,  6652.,  7412.,  8172.,  8932.,  9692., 10452., 11212., 11972., 12732., 13492., 14252., 15012.,  7860.,  8248.,  8636.,  9024.,  6932.,  7724.,  8516.,  9308., 10100., 10892., 11684., 12476., 13268., 14060., 14852., 15644.,  8192.,  8596.,  9000.,  9404.,  3728.,  4132.,  4536.,  4940.,  3064.,  3436.,  3808.,  4180.,  4552.,  4924.,  5296.,  5668.,  6040.,  6412.,  6784.,  7156., 15772., 16532., 17292., 18052.,  6652.,  7412.,  8172.,  8932.,  9692., 10452., 11212., 11972.,  6308.,  6696.,  7084.,  7472., 16436., 17228., 18020., 18812.,  6932.,  7724.,  8516.,  9308., 10100., 10892., 11684., 12476.,  6576.,  6980.,  7384.,  7788.,  8192.,  8596.,  9000.,  9404.,  7912.,  8284.,  8656.,  9028.,  3064.,  3436.,  3808.,  4180.,  4552.,  4924.,  5296.,  5668., 12732., 13492., 14252., 15012., 15772., 16532., 17292., 18052.,  6652.,  7412.,  8172.,  8932.,  4756.,  5144.,  5532.,  5920., 13268., 14060., 14852., 15644., 16436., 17228., 18020., 18812.,  6932.,  7724.,  8516.,  9308.,  4960.,  5364.,  5768.,  6172.,  6576.,  6980.,  7384.,  7788.,  4901.,  5099.,  5297.,  5495.,  5693.,  5891.,  6089.,  6287.,   149.,   347.,   545.,   743.,  5216.,  5620.,  6024.,  6428.,  6832.,  7236.,  7640.,  8044.,  8448.,  8852.,  9256.,  9660.,   155.,   361.,   567.,   773.,  5420.,  5840.,  6260.,  6680.,  7100.,  7520.,  7940.,  8360.,  8780.,  9200.,  9620., 10040.,   161.,   375.,   589.,   803.,  1017.,  1231.,  1445.,  1659.,  4109.,  4307.,  4505.,  4703.,  4901.,  5099.,  5297.,  5495.,  5693.,  5891.,  6089.,  6287.,  3600.,  4004.,  4408.,  4812.,  5216.,  5620.,  6024.,  6428.,  6832.,  7236.,  7640.,  8044.,  5923.,  6129.,  6335.,  6541.,  3740.,  4160.,  4580.,  5000.,  5420.,  5840.,  6260.,  6680.,  7100.,  7520.,  7940.,  8360.,  6153.,  6367.,  6581.,  6795.,   161.,   375.,   589.,   803.};
  const std::array<int, 4> in_shape = {{ 3, 11, 12, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x12x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,    53.,    59.,    65.,    71.,    77.,    83.,    89.,    95.,   112.,   132.,   152.,   172.,   192.,   212.,   232.,   252.,   272.,   292.,   312.,   332.,   179.,   193.,   207.,   221.,   235.,   249.,   263.,   277.,   291.,   305.,   319.,   333.,   347.,   361.,   375.,   389.,     0.,     0.,     0.,     0.,   173.,   179.,   185.,   191.,   197.,   203.,   209.,   215.,   221.,   227.,   233.,   239.,   245.,   251.,   257.,   263.,   672.,   692.,   712.,   732.,   752.,   772.,   792.,   812.,   832.,   852.,   872.,   892.,   571.,   585.,   599.,   613.,   627.,   641.,   655.,   669.,   683.,   697.,   711.,   725.,   739.,   753.,   767.,   781.,     0.,     0.,     0.,     0.,   341.,   347.,   353.,   359.,   365.,   371.,   377.,   383.,   389.,   395.,   401.,   407.,   413.,   419.,   425.,   431.,  1232.,  1252.,  1272.,  1292.,  1312.,  1332.,  1352.,  1372.,  1392.,  1412.,  1432.,  1452.,   963.,   977.,   991.,  1005.,  1019.,  1033.,  1047.,  1061.,  1075.,  1089.,  1103.,  1117.,  1131.,  1145.,  1159.,  1173.,     0.,     0.,     0.,     0.,   509.,   515.,   521.,   527.,   533.,   539.,   545.,   551.,   557.,   563.,   569.,   575.,   581.,   587.,   593.,   599.,  1792.,  1812.,  1832.,  1852.,  1872.,  1892.,  1912.,  1932.,  1952.,  1972.,  1992.,  2012.,  1355.,  1369.,  1383.,  1397.,  1411.,  1425.,  1439.,  1453.,  1467.,  1481.,  1495.,  1509.,  1523.,  1537.,  1551.,  1565.,     0.,     0.,     0.,     0.,   694.,   722.,   750.,   778.,   806.,   834.,   862.,   890.,   918.,   946.,   974.,  1002.,  1030.,  1058.,  1086.,  1114.,  1976.,  2048.,  2120.,  2192.,  2264.,  2336.,  2408.,  2480.,  2552.,  2624.,  2696.,  2768.,  2130.,  2174.,  2218.,  2262.,   514.,   558.,   602.,   646.,   690.,   734.,   778.,   822.,   866.,   910.,   954.,   998.,     0.,     0.,     0.,     0.,   710.,   738.,   766.,   794.,   822.,   850.,   878.,   906.,   934.,   962.,   990.,  1018.,  1046.,  1074.,  1102.,  1130.,  2200.,  2272.,  2344.,  2416.,  2488.,  2560.,  2632.,  2704.,  2776.,  2848.,  2920.,  2992.,  1570.,  1614.,  1658.,  1702.,  1746.,  1790.,  1834.,  1878.,  1922.,  1966.,  2010.,  2054.,  2098.,  2142.,  2186.,  2230.,     0.,     0.,     0.,     0.,  1494.,  1522.,  1550.,  1578.,  1606.,  1634.,  1662.,  1690.,  1718.,  1746.,  1774.,  1802.,  1830.,  1858.,  1886.,  1914.,  4216.,  4288.,  4360.,  4432.,  4504.,  4576.,  4648.,  4720.,  4792.,  4864.,  4936.,  5008.,  2802.,  2846.,  2890.,  2934.,  2978.,  3022.,  3066.,  3110.,  3154.,  3198.,  3242.,  3286.,  3330.,  3374.,  3418.,  3462.,     0.,     0.,     0.,     0.,  1865.,  1887.,  1909.,  1931.,  1953.,  1975.,  1997.,  2019.,  2041.,  2063.,  2085.,  2107.,  2129.,  2151.,  2173.,  2195.,  4760.,  4812.,  4864.,  4916.,  4968.,  5020.,  5072.,  5124.,  5176.,  5228.,  5280.,  5332.,  2903.,  2933.,  2963.,  2993.,  3023.,  3053.,  3083.,  3113.,  3143.,  3173.,  3203.,  3233.,  3263.,  3293.,  3323.,  3353.,     0.,     0.,     0.,     0.,  2481.,  2503.,  2525.,  2547.,  2569.,  2591.,  2613.,  2635.,  2657.,  2679.,  2701.,  2723.,  2745.,  2767.,  2789.,  2811.,  3400.,  3452.,  3504.,  3556.,  3608.,  3660.,  3712.,  3764.,  3816.,  3868.,  3920.,  3972.,  3743.,  3773.,  3803.,  3833.,    23.,    53.,    83.,   113.,   143.,   173.,   203.,   233.,   263.,   293.,   323.,   353.,     0.,     0.,     0.,     0.,   281.,   303.,   325.,   347.,   369.,   391.,   413.,   435.,   457.,   479.,   501.,   523.,   545.,   567.,   589.,   611.,  1016.,  1068.,  1120.,  1172.,  1224.,  1276.,  1328.,  1380.,  1432.,  1484.,  1536.,  1588.,   743.,   773.,   803.,   833.,   863.,   893.,   923.,   953.,   983.,  1013.,  1043.,  1073.,  1103.,  1133.,  1163.,  1193.,     0.,     0.,     0.,     0.,   897.,   919.,   941.,   963.,   985.,  1007.,  1029.,  1051.,  1073.,  1095.,  1117.,  1139.,  1161.,  1183.,  1205.,  1227.,  2472.,  2524.,  2576.,  2628.,  2680.,  2732.,  2784.,  2836.,  2888.,  2940.,  2992.,  3044.,  1583.,  1613.,  1643.,  1673.,  1703.,  1733.,  1763.,  1793.,  1823.,  1853.,  1883.,  1913.,  1943.,  1973.,  2003.,  2033.,     0.,     0.,     0.,     0.,    29.,    67.,   105.,   143.,   181.,   219.,   257.,   295.,   333.,   371.,   409.,   447.,   485.,   523.,   561.,   599.,   672.,   756.,   840.,   924.,  1008.,  1092.,  1176.,  1260.,  1344.,  1428.,  1512.,  1596.,   587.,   633.,   679.,   725.,   771.,   817.,   863.,   909.,   955.,  1001.,  1047.,  1093.,  1139.,  1185.,  1231.,  1277.,     0.,     0.,     0.,     0.,  1093.,  1131.,  1169.,  1207.,  1245.,  1283.,  1321.,  1359.,  1397.,  1435.,  1473.,  1511.,  1549.,  1587.,  1625.,  1663.,  3024.,  3108.,  3192.,  3276.,  3360.,  3444.,  3528.,  3612.,  3696.,  3780.,  3864.,  3948.,  1875.,  1921.,  1967.,  2013.,  2059.,  2105.,  2151.,  2197.,  2243.,  2289.,  2335.,  2381.,  2427.,  2473.,  2519.,  2565.,     0.,     0.,     0.,     0.,  2157.,  2195.,  2233.,  2271.,  2309.,  2347.,  2385.,  2423.,  2461.,  2499.,  2537.,  2575.,  2613.,  2651.,  2689.,  2727.,  5376.,  5460.,  5544.,  5628.,  5712.,  5796.,  5880.,  5964.,  6048.,  6132.,  6216.,  6300.,  3163.,  3209.,  3255.,  3301.,  3347.,  3393.,  3439.,  3485.,  3531.,  3577.,  3623.,  3669.,  3715.,  3761.,  3807.,  3853.,     0.,     0.,     0.,     0.,  3221.,  3259.,  3297.,  3335.,  3373.,  3411.,  3449.,  3487.,  3525.,  3563.,  3601.,  3639.,  3677.,  3715.,  3753.,  3791.,  7728.,  7812.,  7896.,  7980.,  8064.,  8148.,  8232.,  8316.,  8400.,  8484.,  8568.,  8652.,  4451.,  4497.,  4543.,  4589.,  4635.,  4681.,  4727.,  4773.,  4819.,  4865.,  4911.,  4957.,  5003.,  5049.,  5095.,  5141.,     0.,     0.,     0.,     0.,  4326.,  4418.,  4510.,  4602.,  4694.,  4786.,  4878.,  4970.,  5062.,  5154.,  5246.,  5338.,  5430.,  5522.,  5614.,  5706.,  6168.,  6368.,  6568.,  6768.,  6968.,  7168.,  7368.,  7568.,  7768.,  7968.,  8168.,  8368.,  6530.,  6638.,  6746.,  6854.,  1074.,  1182.,  1290.,  1398.,  1506.,  1614.,  1722.,  1830.,  1938.,  2046.,  2154.,  2262.,     0.,     0.,     0.,     0.,  2038.,  2130.,  2222.,  2314.,  2406.,  2498.,  2590.,  2682.,  2774.,  2866.,  2958.,  3050.,  3142.,  3234.,  3326.,  3418.,  5880.,  6080.,  6280.,  6480.,  6680.,  6880.,  7080.,  7280.,  7480.,  7680.,  7880.,  8080.,  3666.,  3774.,  3882.,  3990.,  4098.,  4206.,  4314.,  4422.,  4530.,  4638.,  4746.,  4854.,  4962.,  5070.,  5178.,  5286.,     0.,     0.,     0.,     0.,  4614.,  4706.,  4798.,  4890.,  4982.,  5074.,  5166.,  5258.,  5350.,  5442.,  5534.,  5626.,  5718.,  5810.,  5902.,  5994., 11480., 11680., 11880., 12080., 12280., 12480., 12680., 12880., 13080., 13280., 13480., 13680.,  6690.,  6798.,  6906.,  7014.,  7122.,  7230.,  7338.,  7446.,  7554.,  7662.,  7770.,  7878.,  7986.,  8094.,  8202.,  8310.,     0.,     0.,     0.,     0.,  4577.,  4631.,  4685.,  4739.,  4793.,  4847.,  4901.,  4955.,  5009.,  5063.,  5117.,  5171.,  5225.,  5279.,  5333.,  5387., 10696., 10812., 10928., 11044., 11160., 11276., 11392., 11508., 11624., 11740., 11856., 11972.,  5999.,  6061.,  6123.,  6185.,  6247.,  6309.,  6371.,  6433.,  6495.,  6557.,  6619.,  6681.,  6743.,  6805.,  6867.,  6929.,     0.,     0.,     0.,     0.,  6089.,  6143.,  6197.,  6251.,  6305.,  6359.,  6413.,  6467.,  6521.,  6575.,  6629.,  6683.,  6737.,  6791.,  6845.,  6899.,  7032.,  7148.,  7264.,  7380.,  7496.,  7612.,  7728.,  7844.,  7960.,  8076.,  8192.,  8308.,  7735.,  7797.,  7859.,  7921.,    47.,   109.,   171.,   233.,   295.,   357.,   419.,   481.,   543.,   605.,   667.,   729.,     0.,     0.,     0.,     0.,   689.,   743.,   797.,   851.,   905.,   959.,  1013.,  1067.,  1121.,  1175.,  1229.,  1283.,  1337.,  1391.,  1445.,  1499.,  2344.,  2460.,  2576.,  2692.,  2808.,  2924.,  3040.,  3156.,  3272.,  3388.,  3504.,  3620.,  1535.,  1597.,  1659.,  1721.,  1783.,  1845.,  1907.,  1969.,  2031.,  2093.,  2155.,  2217.,  2279.,  2341.,  2403.,  2465.,     0.,     0.,     0.,     0.,  2201.,  2255.,  2309.,  2363.,  2417.,  2471.,  2525.,  2579.,  2633.,  2687.,  2741.,  2795.,  2849.,  2903.,  2957.,  3011.,  5592.,  5708.,  5824.,  5940.,  6056.,  6172.,  6288.,  6404.,  6520.,  6636.,  6752.,  6868.,  3271.,  3333.,  3395.,  3457.,  3519.,  3581.,  3643.,  3705.,  3767.,  3829.,  3891.,  3953.,  4015.,  4077.,  4139.,  4201.,     0.,     0.,     0.,     0.,    53.,   123.,   193.,   263.,   333.,   403.,   473.,   543.,   613.,   683.,   753.,   823.,   893.,   963.,  1033.,  1103.,  1232.,  1380.,  1528.,  1676.,  1824.,  1972.,  2120.,  2268.,  2416.,  2564.,  2712.,  2860.,   995.,  1073.,  1151.,  1229.,  1307.,  1385.,  1463.,  1541.,  1619.,  1697.,  1775.,  1853.,  1931.,  2009.,  2087.,  2165.,     0.,     0.,     0.,     0.,  2013.,  2083.,  2153.,  2223.,  2293.,  2363.,  2433.,  2503.,  2573.,  2643.,  2713.,  2783.,  2853.,  2923.,  2993.,  3063.,  5376.,  5524.,  5672.,  5820.,  5968.,  6116.,  6264.,  6412.,  6560.,  6708.,  6856.,  7004.,  3179.,  3257.,  3335.,  3413.,  3491.,  3569.,  3647.,  3725.,  3803.,  3881.,  3959.,  4037.,  4115.,  4193.,  4271.,  4349.,     0.,     0.,     0.,     0.,  3973.,  4043.,  4113.,  4183.,  4253.,  4323.,  4393.,  4463.,  4533.,  4603.,  4673.,  4743.,  4813.,  4883.,  4953.,  5023.,  9520.,  9668.,  9816.,  9964., 10112., 10260., 10408., 10556., 10704., 10852., 11000., 11148.,  5363.,  5441.,  5519.,  5597.,  5675.,  5753.,  5831.,  5909.,  5987.,  6065.,  6143.,  6221.,  6299.,  6377.,  6455.,  6533.,     0.,     0.,     0.,     0.,  5933.,  6003.,  6073.,  6143.,  6213.,  6283.,  6353.,  6423.,  6493.,  6563.,  6633.,  6703.,  6773.,  6843.,  6913.,  6983., 13664., 13812., 13960., 14108., 14256., 14404., 14552., 14700., 14848., 14996., 15144., 15292.,  7547.,  7625.,  7703.,  7781.,  7859.,  7937.,  8015.,  8093.,  8171.,  8249.,  8327.,  8405.,  8483.,  8561.,  8639.,  8717.,     0.,     0.,     0.,     0.,  7958.,  8114.,  8270.,  8426.,  8582.,  8738.,  8894.,  9050.,  9206.,  9362.,  9518.,  9674.,  9830.,  9986., 10142., 10298., 10360., 10688., 11016., 11344., 11672., 12000., 12328., 12656., 12984., 13312., 13640., 13968., 10930., 11102., 11274., 11446.,  1634.,  1806.,  1978.,  2150.,  2322.,  2494.,  2666.,  2838.,  3010.,  3182.,  3354.,  3526.,     0.,     0.,     0.,     0.,  3366.,  3522.,  3678.,  3834.,  3990.,  4146.,  4302.,  4458.,  4614.,  4770.,  4926.,  5082.,  5238.,  5394.,  5550.,  5706.,  9560.,  9888., 10216., 10544., 10872., 11200., 11528., 11856., 12184., 12512., 12840., 13168.,  5762.,  5934.,  6106.,  6278.,  6450.,  6622.,  6794.,  6966.,  7138.,  7310.,  7482.,  7654.,  7826.,  7998.,  8170.,  8342.,     0.,     0.,     0.,     0.,  7734.,  7890.,  8046.,  8202.,  8358.,  8514.,  8670.,  8826.,  8982.,  9138.,  9294.,  9450.,  9606.,  9762.,  9918., 10074., 18744., 19072., 19400., 19728., 20056., 20384., 20712., 21040., 21368., 21696., 22024., 22352., 10578., 10750., 10922., 11094., 11266., 11438., 11610., 11782., 11954., 12126., 12298., 12470., 12642., 12814., 12986., 13158.,     0.,     0.,     0.,     0.,  7289.,  7375.,  7461.,  7547.,  7633.,  7719.,  7805.,  7891.,  7977.,  8063.,  8149.,  8235.,  8321.,  8407.,  8493.,  8579., 16632., 16812., 16992., 17172., 17352., 17532., 17712., 17892., 18072., 18252., 18432., 18612.,  9095.,  9189.,  9283.,  9377.,  9471.,  9565.,  9659.,  9753.,  9847.,  9941., 10035., 10129., 10223., 10317., 10411., 10505.,     0.,     0.,     0.,     0.,  9697.,  9783.,  9869.,  9955., 10041., 10127., 10213., 10299., 10385., 10471., 10557., 10643., 10729., 10815., 10901., 10987., 10664., 10844., 11024., 11204., 11384., 11564., 11744., 11924., 12104., 12284., 12464., 12644., 11727., 11821., 11915., 12009.,    71.,   165.,   259.,   353.,   447.,   541.,   635.,   729.,   823.,   917.,  1011.,  1105.,     0.,     0.,     0.,     0.,  1097.,  1183.,  1269.,  1355.,  1441.,  1527.,  1613.,  1699.,  1785.,  1871.,  1957.,  2043.,  2129.,  2215.,  2301.,  2387.,  3672.,  3852.,  4032.,  4212.,  4392.,  4572.,  4752.,  4932.,  5112.,  5292.,  5472.,  5652.,  2327.,  2421.,  2515.,  2609.,  2703.,  2797.,  2891.,  2985.,  3079.,  3173.,  3267.,  3361.,  3455.,  3549.,  3643.,  3737.,     0.,     0.,     0.,     0.,  3505.,  3591.,  3677.,  3763.,  3849.,  3935.,  4021.,  4107.,  4193.,  4279.,  4365.,  4451.,  4537.,  4623.,  4709.,  4795.,  8712.,  8892.,  9072.,  9252.,  9432.,  9612.,  9792.,  9972., 10152., 10332., 10512., 10692.,  4959.,  5053.,  5147.,  5241.,  5335.,  5429.,  5523.,  5617.,  5711.,  5805.,  5899.,  5993.,  6087.,  6181.,  6275.,  6369.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 11, 12, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x12x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   500.,  1284.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   420.,  1076.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.};
  const std::array<int, 4> in_shape = {{ 3, 11, 12, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x12x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,     0.,     0.,     0.,     0.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,     0.,     0.,     0.,     0.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,     0.,     0.,     0.,     0.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,     0.,     0.,     0.,     0.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,     0.,     0.,     0.,     0.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,     0.,     0.,     0.,     0.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,     0.,     0.,     0.,     0.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,     0.,     0.,     0.,     0.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,     0.,     0.,     0.,     0.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,     0.,     0.,     0.,     0.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,     0.,     0.,     0.,     0.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,     0.,     0.,     0.,     0.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,     0.,     0.,     0.,     0.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,     0.,     0.,     0.,     0.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,     0.,     0.,     0.,     0.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,     0.,     0.,     0.,     0.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,     0.,     0.,     0.,     0.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,     0.,     0.,     0.,     0.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 11, 12, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x14x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  17.,   18.,   49.,   52.,   55.,   36.,   83.,   88.,   93.,   54.,  117.,  124.,  131.,   72.,   24.,   25.,   70.,   73.,   76.,   50.,  118.,  123.,  128.,   75.,  166.,  173.,  180.,  100.,   46.,   52.,  122.,  136.,  150.,   88.,  190.,  208.,  226.,  124.,  258.,  280.,  302.,  160.,   88.,   94.,  220.,  234.,  248.,  144.,  316.,  334.,  352.,  194.,  412.,  434.,  456.,  244.,  130.,  136.,  318.,  332.,  346.,  200.,  442.,  460.,  478.,  264.,  566.,  588.,  610.,  328.,  120.,  125.,  262.,  273.,  284.,  150.,  310.,  323.,  336.,  175.,  358.,  373.,  388.,  200.,  182.,  196.,  394.,  424.,  454.,  232.,  462.,  496.,  530.,  268.,  530.,  568.,  606.,  304.,  280.,  294.,  604.,  634.,  664.,  344.,  700.,  734.,  768.,  394.,  796.,  834.,  872.,  444.,  378.,  392.,  814.,  844.,  874.,  456.,  938.,  972., 1006.,  520., 1062., 1100., 1138.,  584.,  216.,  225.,  454.,  473.,  492.,  250.,  502.,  523.,  544.,  275.,  550.,  573.,  596.,  300.,  279.,  288.,  587.,  606.,  625.,  320.,  649.,  670.,  691.,  352.,  711.,  734.,  757.,  384.,  221.,  234.,  457.,  484.,  511.,  252.,  491.,  520.,  549.,  270.,  525.,  556.,  587.,  288.,  312.,  325.,  646.,  673.,  700.,  350.,  694.,  723.,  752.,  375.,  742.,  773.,  804.,  400.,  454.,  484.,  938., 1000., 1062.,  520., 1006., 1072., 1138.,  556., 1074., 1144., 1214.,  592.,  664.,  694., 1372., 1434., 1496.,  744., 1468., 1534., 1600.,  794., 1564., 1634., 1704.,  844.,  874.,  904., 1806., 1868., 1930.,  968., 1930., 1996., 2062., 1032., 2054., 2124., 2194., 1096.,  408.,  425.,  838.,  873.,  908.,  450.,  886.,  923.,  960.,  475.,  934.,  973., 1012.,  500.,  590.,  628., 1210., 1288., 1366.,  664., 1278., 1360., 1442.,  700., 1346., 1432., 1518.,  736.,  856.,  894., 1756., 1834., 1912.,  944., 1852., 1934., 2016.,  994., 1948., 2034., 2120., 1044., 1122., 1160., 2302., 2380., 2458., 1224., 2426., 2508., 2590., 1288., 2550., 2636., 2722., 1352.,  504.,  525., 1030., 1073., 1116.,  550., 1078., 1123., 1168.,  575., 1126., 1173., 1220.,  600.,  651.,  672., 1331., 1374., 1417.,  704., 1393., 1438., 1483.,  736., 1455., 1502., 1549.,  768.,  425.,  450.,  865.,  916.,  967.,  468.,  899.,  952., 1005.,  486.,  933.,  988., 1043.,  504.,  600.,  625., 1222., 1273., 1324.,  650., 1270., 1323., 1376.,  675., 1318., 1373., 1428.,  700.,  862.,  916., 1754., 1864., 1974.,  952., 1822., 1936., 2050.,  988., 1890., 2008., 2126., 1024., 1240., 1294., 2524., 2634., 2744., 1344., 2620., 2734., 2848., 1394., 2716., 2834., 2952., 1444., 1618., 1672., 3294., 3404., 3514., 1736., 3418., 3532., 3646., 1800., 3542., 3660., 3778., 1864.,  696.,  725., 1414., 1473., 1532.,  750., 1462., 1523., 1584.,  775., 1510., 1573., 1636.,  800.,  998., 1060., 2026., 2152., 2278., 1096., 2094., 2224., 2354., 1132., 2162., 2296., 2430., 1168., 1432., 1494., 2908., 3034., 3160., 1544., 3004., 3134., 3264., 1594., 3100., 3234., 3368., 1644., 1866., 1928., 3790., 3916., 4042., 1992., 3914., 4044., 4174., 2056., 4038., 4172., 4306., 2120.,  792.,  825., 1606., 1673., 1740.,  850., 1654., 1723., 1792.,  875., 1702., 1773., 1844.,  900., 1023., 1056., 2075., 2142., 2209., 1088., 2137., 2206., 2275., 1120., 2199., 2270., 2341., 1152.};
  const std::array<int, 4> in_shape = {{ 3, 11, 14, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x14x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    7.,   10.,   13.,    8.,   10.,   12.,   14.,    0.,    0.,    0.,    8.,    9.,   10.,   11.,   28.,   31.,   34.,   22.,   24.,   26.,   28.,    0.,    0.,    0.,   15.,   16.,   17.,   18.,   49.,   52.,   55.,   36.,   38.,   40.,   42.,    0.,    0.,    0.,   22.,   23.,   24.,   25.,   70.,   73.,   76.,   50.,   52.,   54.,   56.,    0.,    0.,    0.,   32.,   36.,   40.,   44.,  110.,  120.,  130.,   80.,   86.,   92.,   98.,    0.,    0.,    0.,   60.,   64.,   68.,   72.,  180.,  190.,  200.,  122.,  128.,  134.,  140.,    0.,    0.,    0.,   88.,   92.,   96.,  100.,  250.,  260.,  270.,  164.,  170.,  176.,  182.,    0.,    0.,    0.,   66.,   69.,   72.,   75.,  166.,  173.,  180.,  100.,  104.,  108.,  112.,    0.,    0.,    0.,   87.,   90.,   93.,   96.,  215.,  222.,  229.,  128.,  132.,  136.,  140.,    0.,    0.,    0.,  108.,  111.,  114.,  117.,  264.,  271.,  278.,  156.,  160.,  164.,  168.,    0.,    0.,    0.,  129.,  132.,  135.,  138.,  313.,  320.,  327.,  184.,  188.,  192.,  196.,    0.,    0.,    0.,    5.,   10.,   15.,   20.,   31.,   42.,   53.,   24.,   30.,   36.,   42.,    0.,    0.,    0.,   40.,   45.,   50.,   55.,  108.,  119.,  130.,   66.,   72.,   78.,   84.,    0.,    0.,    0.,   75.,   80.,   85.,   90.,  185.,  196.,  207.,  108.,  114.,  120.,  126.,    0.,    0.,    0.,  110.,  115.,  120.,  125.,  262.,  273.,  284.,  150.,  156.,  162.,  168.,    0.,    0.,    0.,  152.,  164.,  176.,  188.,  382.,  408.,  434.,  224.,  238.,  252.,  266.,    0.,    0.,    0.,  236.,  248.,  260.,  272.,  564.,  590.,  616.,  322.,  336.,  350.,  364.,    0.,    0.,    0.,  320.,  332.,  344.,  356.,  746.,  772.,  798.,  420.,  434.,  448.,  462.,    0.,    0.,    0.,  154.,  161.,  168.,  175.,  358.,  373.,  388.,  200.,  208.,  216.,  224.,    0.,    0.,    0.,  203.,  210.,  217.,  224.,  463.,  478.,  493.,  256.,  264.,  272.,  280.,    0.,    0.,    0.,  252.,  259.,  266.,  273.,  568.,  583.,  598.,  312.,  320.,  328.,  336.,    0.,    0.,    0.,  301.,  308.,  315.,  322.,  673.,  688.,  703.,  368.,  376.,  384.,  392.,    0.,    0.,    0.,    9.,   18.,   27.,   36.,   55.,   74.,   93.,   40.,   50.,   60.,   70.,    0.,    0.,    0.,   72.,   81.,   90.,   99.,  188.,  207.,  226.,  110.,  120.,  130.,  140.,    0.,    0.,    0.,  135.,  144.,  153.,  162.,  321.,  340.,  359.,  180.,  190.,  200.,  210.,    0.,    0.,    0.,  198.,  207.,  216.,  225.,  454.,  473.,  492.,  250.,  260.,  270.,  280.,    0.,    0.,    0.,  272.,  292.,  312.,  332.,  654.,  696.,  738.,  368.,  390.,  412.,  434.,    0.,    0.,    0.,  412.,  432.,  452.,  472.,  948.,  990., 1032.,  522.,  544.,  566.,  588.,    0.,    0.,    0.,  552.,  572.,  592.,  612., 1242., 1284., 1326.,  676.,  698.,  720.,  742.,    0.,    0.,    0.,  242.,  253.,  264.,  275.,  550.,  573.,  596.,  300.,  312.,  324.,  336.,    0.,    0.,    0.,  319.,  330.,  341.,  352.,  711.,  734.,  757.,  384.,  396.,  408.,  420.,    0.,    0.,    0.,  396.,  407.,  418.,  429.,  872.,  895.,  918.,  468.,  480.,  492.,  504.,    0.,    0.,    0.,  473.,  484.,  495.,  506., 1033., 1056., 1079.,  552.,  564.,  576.,  588.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 3, 11, 14, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x14x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  101.,   107.,   320.,   340.,   360.,   249.,   588.,   624.,   660.,   391.,   856.,   908.,   960.,   533.,   143.,   149.,   460.,   480.,   500.,   347.,   840.,   876.,   912.,   545.,  1220.,  1272.,  1324.,   743.,   290.,   334.,   624.,   728.,   832.,   618.,   904.,  1040.,  1176.,   902.,  1184.,  1352.,  1520.,  1186.,   406.,   450.,   904.,  1008.,  1112.,   590.,  1152.,  1288.,  1424.,   730.,  1400.,  1568.,  1736.,   870.,   714.,   758.,  1632.,  1736.,  1840.,  1010.,  2104.,  2240.,  2376.,  1262.,  2576.,  2744.,  2912.,  1514.,   903.,   941.,  1980.,  2064.,  2148.,  1139.,  2360.,  2460.,  2560.,  1337.,  2740.,  2856.,  2972.,  1535.,  1362.,  1470.,  1744.,  1976.,  2208.,  1754.,  2024.,  2288.,  2552.,  2038.,  2304.,  2600.,  2896.,  2322.,   902.,  1010.,  1896.,  2128.,  2360.,  1150.,  2144.,  2408.,  2672.,  1290.,  2392.,  2688.,  2984.,  1430.,  1658.,  1766.,  3520.,  3752.,  3984.,  2018.,  3992.,  4256.,  4520.,  2270.,  4464.,  4760.,  5056.,  2522.,  1663.,  1733.,  3500.,  3648.,  3796.,  1931.,  3880.,  4044.,  4208.,  2129.,  4260.,  4440.,  4620.,  2327.,  2153.,  2223.,  2296.,  2444.,  2592.,  2477.,  2532.,  2696.,  2860.,  2731.,  2768.,  2948.,  3128.,  2985.,  1709.,  1811.,  3536.,  3748.,  3960.,  1953.,  3804.,  4032.,  4260.,  2095.,  4072.,  4316.,  4560.,  2237.,  2423.,  2525.,  5020.,  5232.,  5444.,  2723.,  5400.,  5628.,  5856.,  2921.,  5780.,  6024.,  6268.,  3119.,  3506.,  3742.,  3984.,  4472.,  4960.,  4026.,  4264.,  4784.,  5304.,  4310.,  4544.,  5096.,  5648.,  4594.,  1894.,  2130.,  3880.,  4368.,  4856.,  2270.,  4128.,  4648.,  5168.,  2410.,  4376.,  4928.,  5480.,  2550.,  3546.,  3782.,  7296.,  7784.,  8272.,  4034.,  7768.,  8288.,  8808.,  4286.,  8240.,  8792.,  9344.,  4538.,  3183.,  3317.,  6540.,  6816.,  7092.,  3515.,  6920.,  7212.,  7504.,  3713.,  7300.,  7608.,  7916.,  3911.,  4578.,  4878.,  5104.,  5720.,  6336.,  5162.,  5384.,  6032.,  6680.,  5446.,  5664.,  6344.,  7024.,  5730.,  2390.,  2690.,  4872.,  5488.,  6104.,  2830.,  5120.,  5768.,  6416.,  2970.,  5368.,  6048.,  6728.,  3110.,  4490.,  4790.,  9184.,  9800., 10416.,  5042.,  9656., 10304., 10952.,  5294., 10128., 10808., 11488.,  5546.,  3943.,  4109.,  8060.,  8400.,  8740.,  4307.,  8440.,  8796.,  9152.,  4505.,  8820.,  9192.,  9564.,  4703.,  5105.,  5271.,  5128.,  5468.,  5808.,  5525.,  5364.,  5720.,  6076.,  5779.,  5600.,  5972.,  6344.,  6033.,  3317.,  3515.,  6752.,  7156.,  7560.,  3657.,  7020.,  7440.,  7860.,  3799.,  7288.,  7724.,  8160.,  3941.,  4703.,  4901.,  9580.,  9984., 10388.,  5099.,  9960., 10380., 10800.,  5297., 10340., 10776., 11212.,  5495.,  6722.,  7150.,  7344.,  8216.,  9088.,  7434.,  7624.,  8528.,  9432.,  7718.,  7904.,  8840.,  9776.,  8002.,  3382.,  3810.,  6856.,  7728.,  8600.,  3950.,  7104.,  8008.,  8912.,  4090.,  7352.,  8288.,  9224.,  4230.,  6378.,  6806., 12960., 13832., 14704.,  7058., 13432., 14336., 15240.,  7310., 13904., 14840., 15776.,  7562.,  5463.,  5693., 11100., 11568., 12036.,  5891., 11480., 11964., 12448.,  6089., 11860., 12360., 12860.,  6287.,  7090.,  7326.,  7056.,  7544.,  8032.,  7610.,  7336.,  7856.,  8376.,  7894.,  7616.,  8168.,  8720.,  8178.,  1382.,  1618.,  2856.,  3344.,  3832.,  1758.,  3104.,  3624.,  4144.,  1898.,  3352.,  3904.,  4456.,  2038.,  3034.,  3270.,  6272.,  6760.,  7248.,  3522.,  6744.,  7264.,  7784.,  3774.,  7216.,  7768.,  8320.,  4026.,   143.,   149.,   460.,   480.,   500.,   347.,   840.,   876.,   912.,   545.,  1220.,  1272.,  1324.,   743.,   185.,   191.,   408.,   428.,   448.,   445.,   644.,   680.,   716.,   699.,   880.,   932.,   984.,   953.};
  const std::array<int, 4> in_shape = {{ 3, 11, 14, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x14x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    40.,    60.,    80.,    53.,    67.,    81.,    95.,     0.,     0.,     0.,    47.,    53.,    59.,    65.,   180.,   200.,   220.,   151.,   165.,   179.,   193.,     0.,     0.,     0.,    89.,    95.,   101.,   107.,   320.,   340.,   360.,   249.,   263.,   277.,   291.,     0.,     0.,     0.,   131.,   137.,   143.,   149.,   460.,   480.,   500.,   347.,   361.,   375.,   389.,     0.,     0.,     0.,   190.,   218.,   246.,   274.,   728.,   800.,   872.,   558.,   602.,   646.,   690.,     0.,     0.,     0.,   386.,   414.,   442.,   470.,  1232.,  1304.,  1376.,   866.,   910.,   954.,   998.,     0.,     0.,     0.,   582.,   610.,   638.,   666.,  1736.,  1808.,  1880.,  1174.,  1218.,  1262.,  1306.,     0.,     0.,     0.,   479.,   501.,   523.,   545.,  1220.,  1272.,  1324.,   743.,   773.,   803.,   833.,     0.,     0.,     0.,   633.,   655.,   677.,   699.,  1584.,  1636.,  1688.,   953.,   983.,  1013.,  1043.,     0.,     0.,     0.,   787.,   809.,   831.,   853.,  1948.,  2000.,  2052.,  1163.,  1193.,  1223.,  1253.,     0.,     0.,     0.,   941.,   963.,   985.,  1007.,  2312.,  2364.,  2416.,  1373.,  1403.,  1433.,  1463.,     0.,     0.,     0.,    29.,    67.,   105.,   143.,   216.,   300.,   384.,   173.,   219.,   265.,   311.,     0.,     0.,     0.,   295.,   333.,   371.,   409.,   804.,   888.,   972.,   495.,   541.,   587.,   633.,     0.,     0.,     0.,   561.,   599.,   637.,   675.,  1392.,  1476.,  1560.,   817.,   863.,   909.,   955.,     0.,     0.,     0.,   827.,   865.,   903.,   941.,  1980.,  2064.,  2148.,  1139.,  1185.,  1231.,  1277.,     0.,     0.,     0.,  1134.,  1226.,  1318.,  1410.,  2872.,  3072.,  3272.,  1694.,  1802.,  1910.,  2018.,     0.,     0.,     0.,  1778.,  1870.,  1962.,  2054.,  4272.,  4472.,  4672.,  2450.,  2558.,  2666.,  2774.,     0.,     0.,     0.,  2422.,  2514.,  2606.,  2698.,  5672.,  5872.,  6072.,  3206.,  3314.,  3422.,  3530.,     0.,     0.,     0.,  1175.,  1229.,  1283.,  1337.,  2740.,  2856.,  2972.,  1535.,  1597.,  1659.,  1721.,     0.,     0.,     0.,  1553.,  1607.,  1661.,  1715.,  3552.,  3668.,  3784.,  1969.,  2031.,  2093.,  2155.,     0.,     0.,     0.,  1931.,  1985.,  2039.,  2093.,  4364.,  4480.,  4596.,  2403.,  2465.,  2527.,  2589.,     0.,     0.,     0.,  2309.,  2363.,  2417.,  2471.,  5176.,  5292.,  5408.,  2837.,  2899.,  2961.,  3023.,     0.,     0.,     0.,    53.,   123.,   193.,   263.,   392.,   540.,   688.,   293.,   371.,   449.,   527.,     0.,     0.,     0.,   543.,   613.,   683.,   753.,  1428.,  1576.,  1724.,   839.,   917.,   995.,  1073.,     0.,     0.,     0.,  1033.,  1103.,  1173.,  1243.,  2464.,  2612.,  2760.,  1385.,  1463.,  1541.,  1619.,     0.,     0.,     0.,  1523.,  1593.,  1663.,  1733.,  3500.,  3648.,  3796.,  1931.,  2009.,  2087.,  2165.,     0.,     0.,     0.,  2078.,  2234.,  2390.,  2546.,  5016.,  5344.,  5672.,  2830.,  3002.,  3174.,  3346.,     0.,     0.,     0.,  3170.,  3326.,  3482.,  3638.,  7312.,  7640.,  7968.,  4034.,  4206.,  4378.,  4550.,     0.,     0.,     0.,  4262.,  4418.,  4574.,  4730.,  9608.,  9936., 10264.,  5238.,  5410.,  5582.,  5754.,     0.,     0.,     0.,  1871.,  1957.,  2043.,  2129.,  4260.,  4440.,  4620.,  2327.,  2421.,  2515.,  2609.,     0.,     0.,     0.,  2473.,  2559.,  2645.,  2731.,  5520.,  5700.,  5880.,  2985.,  3079.,  3173.,  3267.,     0.,     0.,     0.,  3075.,  3161.,  3247.,  3333.,  6780.,  6960.,  7140.,  3643.,  3737.,  3831.,  3925.,     0.,     0.,     0.,  3677.,  3763.,  3849.,  3935.,  8040.,  8220.,  8400.,  4301.,  4395.,  4489.,  4583.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 11, 14, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x14x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  30.,   70.,  804.,  948.,  260.,  174., 1396., 1668.,  596.,  278., 1988., 2388.,  932.,  382.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150., 1052., 1388., 2120., 2920., 3720., 2108., 2792., 3848., 4904., 2828., 3464., 4776., 6088., 3548.,  716., 1052., 4520., 2120., 2920., 1644., 5960., 2792., 3848., 2236., 7400., 3464., 4776., 2828.,  380.,  716., 3720., 4520., 2120., 1180., 4904., 5960., 2792., 1644., 6088., 7400., 3464., 2108., 2262.,  190., 2516., 3172., 3828.,  230., 2980., 3764., 4548.,  270., 3444., 4356., 5268.,  310., 2076., 2412., 2120., 2920., 3720., 3132., 2792., 3848., 4904., 3852., 3464., 4776., 6088., 4572., 1740., 2076., 4520., 2120., 2920., 2668., 5960., 2792., 3848., 3260., 7400., 3464., 4776., 3852., 1404., 1740., 3720., 4520., 2120., 2204., 4904., 5960., 2792., 2668., 6088., 7400., 3464., 3132.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150.,  270.,  310.,  516.,  660.,  804.,  798.,  852., 1124., 1396., 1286., 1188., 1588., 1988., 1774.,  190.,  486., 3172., 3828., 1604.,  590., 3764., 4548., 1940.,  694., 4356., 5268., 2276.,  798., 2262.,  190., 2516., 3172., 3828.,  230., 2980., 3764., 4548.,  270., 3444., 4356., 5268.,  310., 2076., 2412., 2120., 2920., 3720., 3132., 2792., 3848., 4904., 3852., 3464., 4776., 6088., 4572., 1740., 2076., 4520., 2120., 2920., 2668., 5960., 2792., 3848., 3260., 7400., 3464., 4776., 3852., 1404., 1740., 3720., 4520., 2120., 2204., 4904., 5960., 2792., 2668., 6088., 7400., 3464., 3132.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150., 1052., 1388., 2120., 2920., 3720., 2108., 2792., 3848., 4904., 2828., 3464., 4776., 6088., 3548.,  716., 1052., 4520., 2120., 2920., 1644., 5960., 2792., 3848., 2236., 7400., 3464., 4776., 2828.,  380.,  716., 3720., 4520., 2120., 1180., 4904., 5960., 2792., 1644., 6088., 7400., 3464., 2108., 2262.,  190., 2516., 3172., 3828.,  230., 2980., 3764., 4548.,  270., 3444., 4356., 5268.,  310., 1966., 2262., 1860., 2516., 3172., 2750., 2196., 2980., 3764., 3238., 2532., 3444., 4356., 3726.,   30.,   70.,  804.,  948.,  260.,  174., 1396., 1668.,  596.,  278., 1988., 2388.,  932.,  382.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150., 1052., 1388., 2120., 2920., 3720., 2108., 2792., 3848., 4904., 2828., 3464., 4776., 6088., 3548.,  716., 1052., 4520., 2120., 2920., 1644., 5960., 2792., 3848., 2236., 7400., 3464., 4776., 2828.,  380.,  716., 3720., 4520., 2120., 1180., 4904., 5960., 2792., 1644., 6088., 7400., 3464., 2108., 2262.,  190., 2516., 3172., 3828.,  230., 2980., 3764., 4548.,  270., 3444., 4356., 5268.,  310., 2076., 2412., 2120., 2920., 3720., 3132., 2792., 3848., 4904., 3852., 3464., 4776., 6088., 4572., 1740., 2076., 4520., 2120., 2920., 2668., 5960., 2792., 3848., 3260., 7400., 3464., 4776., 3852., 1404., 1740., 3720., 4520., 2120., 2204., 4904., 5960., 2792., 2668., 6088., 7400., 3464., 3132.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150.,  270.,  310.,  516.,  660.,  804.,  798.,  852., 1124., 1396., 1286., 1188., 1588., 1988., 1774.};
  const std::array<int, 4> in_shape = {{ 3, 11, 14, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x14x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   260.,   404.,   548.,   382.,   486.,   590.,   694.,     0.,     0.,     0.,   310.,   350.,   390.,   430.,  1268.,  1412.,  1556.,  1110.,  1214.,  1318.,  1422.,     0.,     0.,     0.,   590.,   630.,    30.,    70.,  1636.,  1780.,   260.,   174.,   278.,   382.,   486.,     0.,     0.,     0.,   230.,   270.,   310.,   350.,   980.,  1124.,  1268.,   902.,  1006.,  1110.,  1214.,     0.,     0.,     0.,   620.,   828.,  1036.,  1244.,  2280.,  2824.,  3368.,  2476.,  1148.,  1484.,  1820.,     0.,     0.,     0.,  1436.,  1644.,  1852.,  2060.,  4424.,  4968.,  5512.,  3164.,  3500.,  3836.,  4172.,     0.,     0.,     0.,  2892.,  3100.,   620.,   828.,  5544.,  6088.,  2280.,  1804.,  2140.,  2476.,  1148.,     0.,     0.,     0.,   950.,  1118.,  1286.,  1454.,  2932.,  3332.,  3732.,  2006.,  2238.,  2470.,  2702.,     0.,     0.,     0.,  2126.,  2294.,  2462.,  2630.,  3044.,  3444.,  3844.,  3630.,   150.,   382.,   614.,     0.,     0.,     0.,   614.,   782.,   950.,  1118.,  2132.,  2532.,  2932.,  1542.,  1774.,  2006.,  2238.,     0.,     0.,     0.,  1790.,  1958.,  2126.,  2294.,  4932.,  5332.,  3044.,  3166.,  3398.,  3630.,   150.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1604.,  2260.,  2916.,  1310.,  1670.,  2030.,  2390.,     0.,     0.,     0.,  2262.,  2558.,  2854.,  3150.,  6196.,  6852.,  7508.,  3830.,  4190.,  4550.,  4910.,     0.,     0.,     0.,  4334.,  4630.,   190.,   486.,  6052.,  6708.,  1604.,   590.,   950.,  1310.,  1670.,     0.,     0.,     0.,  1670.,  1966.,  2262.,  2558.,  4884.,  5540.,  6196.,  3110.,  3470.,  3830.,  4190.,     0.,     0.,     0.,  4012.,  4732.,  5452.,  6172.,  7016.,  8584., 10152.,  7404.,  2492.,  3340.,  4188.,     0.,     0.,     0.,  4316.,  5036.,  5756.,  6476., 12232., 13800., 15368.,  7580.,  8428.,  9276., 10124.,     0.,     0.,     0.,  9356., 10076.,  4012.,  4732., 16424., 17992.,  7016.,  5708.,  6556.,  7404.,  2492.,     0.,     0.,     0.,  2390.,  2814.,  3238.,  3662.,  6836.,  7748.,  8660.,  4214.,  4702.,  5190.,  5678.,     0.,     0.,     0.,  5358.,  5782.,  6206.,  6630.,  6436.,  7348.,  8260.,  7630.,   310.,   798.,  1286.,     0.,     0.,     0.,  1542.,  1966.,  2390.,  2814.,  5012.,  5924.,  6836.,  3238.,  3726.,  4214.,  4702.,     0.,     0.,     0.,  4510.,  4934.,  5358.,  5782., 11396., 12308.,  6436.,  6654.,  7142.,  7630.,   310.,     0.,     0.,     0.,   350.,   902.,  1454.,  2006.,  2948.,  4116.,  5284.,  2238.,  2854.,  3470.,  4086.,     0.,     0.,     0.,  4214.,  4766.,  5318.,  5870., 11124., 12292., 13460.,  6550.,  7166.,  7782.,  8398.,     0.,     0.,     0.,  8078.,  8630.,   350.,   902., 10468., 11636.,  2948.,  1006.,  1622.,  2238.,  2854.,     0.,     0.,     0.,  3110.,  3662.,  4214.,  4766.,  8788.,  9956., 11124.,  5318.,  5934.,  6550.,  7166.,     0.,     0.,     0.,  7404.,  8636.,  9868., 11100., 11752., 14344., 16936., 12332.,  3836.,  5196.,  6556.,     0.,     0.,     0.,  7196.,  8428.,  9660., 10892., 20040., 22632., 25224., 11996., 13356., 14716., 16076.,     0.,     0.,     0., 15820., 17052.,  7404.,  8636., 27304., 29896., 11752.,  9612., 10972., 12332.,  3836.,     0.,     0.,     0.,  3830.,  4510.,  5190.,  5870., 10740., 12164., 13588.,  6422.,  7166.,  7910.,  8654.,     0.,     0.,     0.,  8590.,  9270.,  9950., 10630.,  9828., 11252., 12676., 11630.,   470.,  1214.,  1958.,     0.,     0.,     0.,  2470.,  3150.,  3830.,  4510.,  7892.,  9316., 10740.,  4934.,  5678.,  6422.,  7166.,     0.,     0.,     0.,  7230.,  7910.,  8590.,  9270., 17860., 19284.,  9828., 10142., 10886., 11630.,   470.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 11, 14, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x14x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,  161.,  166.,  171.,  176.,  181.,  186.,  105.,  108.,  227.,  234.,  241.,  248.,  255.,  262.,  140.,  144.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  231.,  236.,  241.,  246.,  251.,  256.,  147.,  150.,  325.,  332.,  339.,  346.,  353.,  360.,  196.,  200.,   86.,   92.,   98.,  104.,  230.,  244.,  258.,  272.,  286.,  300.,  168.,  176.,  362.,  380.,  398.,  416.,  434.,  452.,  238.,  248.,  494.,  516.,  538.,  560.,  582.,  604.,  308.,  320.,  170.,  176.,  182.,  188.,  426.,  440.,  454.,  468.,  482.,  496.,  280.,  288.,  614.,  632.,  650.,  668.,  686.,  704.,  378.,  388.,  802.,  824.,  846.,  868.,  890.,  912.,  476.,  488.,  254.,  260.,  266.,  272.,  622.,  636.,  650.,  664.,  678.,  692.,  392.,  400.,  866.,  884.,  902.,  920.,  938.,  956.,  518.,  528., 1110., 1132., 1154., 1176., 1198., 1220.,  644.,  656.,  235.,  240.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  607.,  620.,  633.,  646.,  659.,  672.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  350.,  364.,  378.,  392.,  758.,  788.,  818.,  848.,  878.,  908.,  448.,  464.,  890.,  924.,  958.,  992., 1026., 1060.,  518.,  536., 1022., 1060., 1098., 1136., 1174., 1212.,  588.,  608.,  546.,  560.,  574.,  588., 1178., 1208., 1238., 1268., 1298., 1328.,  672.,  688., 1366., 1400., 1434., 1468., 1502., 1536.,  770.,  788., 1554., 1592., 1630., 1668., 1706., 1744.,  868.,  888.,  742.,  756.,  770.,  784., 1598., 1628., 1658., 1688., 1718., 1748.,  896.,  912., 1842., 1876., 1910., 1944., 1978., 2012., 1022., 1040., 2086., 2124., 2162., 2200., 2238., 2276., 1148., 1168.,  423.,  432.,  441.,  450.,  889.,  908.,  927.,  946.,  965.,  984.,  490.,  500.,  983., 1004., 1025., 1046., 1067., 1088.,  539.,  550., 1077., 1100., 1123., 1146., 1169., 1192.,  588.,  600.,  549.,  558.,  567.,  576., 1155., 1174., 1193., 1212., 1231., 1250.,  630.,  640., 1277., 1298., 1319., 1340., 1361., 1382.,  693.,  704., 1399., 1422., 1445., 1468., 1491., 1514.,  756.,  768.,  429.,  442.,  455.,  468.,  887.,  914.,  941.,  968.,  995., 1022.,  490.,  504.,  953.,  982., 1011., 1040., 1069., 1098.,  525.,  540., 1019., 1050., 1081., 1112., 1143., 1174.,  560.,  576.,  611.,  624.,  637.,  650., 1265., 1292., 1319., 1346., 1373., 1400.,  686.,  700., 1359., 1388., 1417., 1446., 1475., 1504.,  735.,  750., 1453., 1484., 1515., 1546., 1577., 1608.,  784.,  800.,  878.,  908.,  938.,  968., 1814., 1876., 1938., 2000., 2062., 2124., 1008., 1040., 1946., 2012., 2078., 2144., 2210., 2276., 1078., 1112., 2078., 2148., 2218., 2288., 2358., 2428., 1148., 1184., 1298., 1328., 1358., 1388., 2682., 2744., 2806., 2868., 2930., 2992., 1456., 1488., 2870., 2936., 3002., 3068., 3134., 3200., 1554., 1588., 3058., 3128., 3198., 3268., 3338., 3408., 1652., 1688., 1718., 1748., 1778., 1808., 3550., 3612., 3674., 3736., 3798., 3860., 1904., 1936., 3794., 3860., 3926., 3992., 4058., 4124., 2030., 2064., 4038., 4108., 4178., 4248., 4318., 4388., 2156., 2192.,  799.,  816.,  833.,  850., 1641., 1676., 1711., 1746., 1781., 1816.,  882.,  900., 1735., 1772., 1809., 1846., 1883., 1920.,  931.,  950., 1829., 1868., 1907., 1946., 1985., 2024.,  980., 1000., 1142., 1180., 1218., 1256., 2342., 2420., 2498., 2576., 2654., 2732., 1288., 1328., 2474., 2556., 2638., 2720., 2802., 2884., 1358., 1400., 2606., 2692., 2778., 2864., 2950., 3036., 1428., 1472., 1674., 1712., 1750., 1788., 3434., 3512., 3590., 3668., 3746., 3824., 1848., 1888., 3622., 3704., 3786., 3868., 3950., 4032., 1946., 1988., 3810., 3896., 3982., 4068., 4154., 4240., 2044., 2088., 2206., 2244., 2282., 2320., 4526., 4604., 4682., 4760., 4838., 4916., 2408., 2448., 4770., 4852., 4934., 5016., 5098., 5180., 2534., 2576., 5014., 5100., 5186., 5272., 5358., 5444., 2660., 2704.,  987., 1008., 1029., 1050., 2017., 2060., 2103., 2146., 2189., 2232., 1078., 1100., 2111., 2156., 2201., 2246., 2291., 2336., 1127., 1150., 2205., 2252., 2299., 2346., 2393., 2440., 1176., 1200., 1281., 1302., 1323., 1344., 2619., 2662., 2705., 2748., 2791., 2834., 1386., 1408., 2741., 2786., 2831., 2876., 2921., 2966., 1449., 1472., 2863., 2910., 2957., 3004., 3051., 3098., 1512., 1536.,  825.,  850.,  875.,  900., 1679., 1730., 1781., 1832., 1883., 1934.,  910.,  936., 1745., 1798., 1851., 1904., 1957., 2010.,  945.,  972., 1811., 1866., 1921., 1976., 2031., 2086.,  980., 1008., 1175., 1200., 1225., 1250., 2393., 2444., 2495., 2546., 2597., 2648., 1274., 1300., 2487., 2540., 2593., 2646., 2699., 2752., 1323., 1350., 2581., 2636., 2691., 2746., 2801., 2856., 1372., 1400., 1670., 1724., 1778., 1832., 3398., 3508., 3618., 3728., 3838., 3948., 1848., 1904., 3530., 3644., 3758., 3872., 3986., 4100., 1918., 1976., 3662., 3780., 3898., 4016., 4134., 4252., 1988., 2048., 2426., 2480., 2534., 2588., 4938., 5048., 5158., 5268., 5378., 5488., 2632., 2688., 5126., 5240., 5354., 5468., 5582., 5696., 2730., 2788., 5314., 5432., 5550., 5668., 5786., 5904., 2828., 2888., 3182., 3236., 3290., 3344., 6478., 6588., 6698., 6808., 6918., 7028., 3416., 3472., 6722., 6836., 6950., 7064., 7178., 7292., 3542., 3600., 6966., 7084., 7202., 7320., 7438., 7556., 3668., 3728., 1363., 1392., 1421., 1450., 2769., 2828., 2887., 2946., 3005., 3064., 1470., 1500., 2863., 2924., 2985., 3046., 3107., 3168., 1519., 1550., 2957., 3020., 3083., 3146., 3209., 3272., 1568., 1600., 1934., 1996., 2058., 2120., 3926., 4052., 4178., 4304., 4430., 4556., 2128., 2192., 4058., 4188., 4318., 4448., 4578., 4708., 2198., 2264., 4190., 4324., 4458., 4592., 4726., 4860., 2268., 2336., 2802., 2864., 2926., 2988., 5690., 5816., 5942., 6068., 6194., 6320., 3024., 3088., 5878., 6008., 6138., 6268., 6398., 6528., 3122., 3188., 6066., 6200., 6334., 6468., 6602., 6736., 3220., 3288., 3670., 3732., 3794., 3856., 7454., 7580., 7706., 7832., 7958., 8084., 3920., 3984., 7698., 7828., 7958., 8088., 8218., 8348., 4046., 4112., 7942., 8076., 8210., 8344., 8478., 8612., 4172., 4240., 1551., 1584., 1617., 1650., 3145., 3212., 3279., 3346., 3413., 3480., 1666., 1700., 3239., 3308., 3377., 3446., 3515., 3584., 1715., 1750., 3333., 3404., 3475., 3546., 3617., 3688., 1764., 1800., 2013., 2046., 2079., 2112., 4083., 4150., 4217., 4284., 4351., 4418., 2142., 2176., 4205., 4274., 4343., 4412., 4481., 4550., 2205., 2240., 4327., 4398., 4469., 4540., 4611., 4682., 2268., 2304.};
  const std::array<int, 4> in_shape = {{ 3, 11, 14, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x14x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,   11.,   14.,   17.,   20.,   23.,   26.,   14.,   16.,   18.,   20.,   22.,   24.,   26.,   28.,    0.,    0.,    0.,    0.,    0.,    0.,   15.,   16.,   17.,   18.,   19.,   20.,   21.,   22.,   53.,   56.,   59.,   62.,   65.,   68.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,    0.,    0.,    0.,    0.,    0.,    0.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,   74.,   76.,   78.,   80.,   82.,   84.,    0.,    0.,    0.,    0.,    0.,    0.,   43.,   44.,   45.,   46.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,    0.,    0.,    0.,    0.,    0.,    0.,   60.,   64.,   68.,   72.,   76.,   80.,   84.,   88.,  210.,  220.,  230.,  240.,  250.,  260.,  154.,  160.,  166.,  172.,  178.,  184.,  190.,  196.,    0.,    0.,    0.,    0.,    0.,    0.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  350.,  360.,  370.,  380.,  390.,  400.,  238.,  244.,  250.,  256.,  262.,  268.,  274.,  280.,    0.,    0.,    0.,    0.,    0.,    0.,  172.,  176.,  180.,  184.,  188.,  192.,  196.,  200.,  490.,  500.,  510.,  520.,  530.,  540.,  322.,  328.,  334.,  340.,  346.,  352.,  358.,  364.,    0.,    0.,    0.,    0.,    0.,    0.,  129.,  132.,  135.,  138.,  141.,  144.,  147.,  150.,  325.,  332.,  339.,  346.,  353.,  360.,  196.,  200.,  204.,  208.,  212.,  216.,  220.,  224.,    0.,    0.,    0.,    0.,    0.,    0.,  171.,  174.,  177.,  180.,  183.,  186.,  189.,  192.,  423.,  430.,  437.,  444.,  451.,  458.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,    0.,    0.,    0.,    0.,    0.,    0.,  213.,  216.,  219.,  222.,  225.,  228.,  231.,  234.,  521.,  528.,  535.,  542.,  549.,  556.,  308.,  312.,  316.,  320.,  324.,  328.,  332.,  336.,    0.,    0.,    0.,    0.,    0.,    0.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  619.,  626.,  633.,  640.,  647.,  654.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,    0.,    0.,    0.,    0.,    0.,    0.,    5.,   10.,   15.,   20.,   25.,   30.,   35.,   40.,   51.,   62.,   73.,   84.,   95.,  106.,   42.,   48.,   54.,   60.,   66.,   72.,   78.,   84.,    0.,    0.,    0.,    0.,    0.,    0.,   75.,   80.,   85.,   90.,   95.,  100.,  105.,  110.,  205.,  216.,  227.,  238.,  249.,  260.,  126.,  132.,  138.,  144.,  150.,  156.,  162.,  168.,    0.,    0.,    0.,    0.,    0.,    0.,  145.,  150.,  155.,  160.,  165.,  170.,  175.,  180.,  359.,  370.,  381.,  392.,  403.,  414.,  210.,  216.,  222.,  228.,  234.,  240.,  246.,  252.,    0.,    0.,    0.,    0.,    0.,    0.,  215.,  220.,  225.,  230.,  235.,  240.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  306.,  312.,  318.,  324.,  330.,  336.,    0.,    0.,    0.,    0.,    0.,    0.,  292.,  304.,  316.,  328.,  340.,  352.,  364.,  376.,  738.,  764.,  790.,  816.,  842.,  868.,  434.,  448.,  462.,  476.,  490.,  504.,  518.,  532.,    0.,    0.,    0.,    0.,    0.,    0.,  460.,  472.,  484.,  496.,  508.,  520.,  532.,  544., 1102., 1128., 1154., 1180., 1206., 1232.,  630.,  644.,  658.,  672.,  686.,  700.,  714.,  728.,    0.,    0.,    0.,    0.,    0.,    0.,  628.,  640.,  652.,  664.,  676.,  688.,  700.,  712., 1466., 1492., 1518., 1544., 1570., 1596.,  826.,  840.,  854.,  868.,  882.,  896.,  910.,  924.,    0.,    0.,    0.,    0.,    0.,    0.,  301.,  308.,  315.,  322.,  329.,  336.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  408.,  416.,  424.,  432.,  440.,  448.,    0.,    0.,    0.,    0.,    0.,    0.,  399.,  406.,  413.,  420.,  427.,  434.,  441.,  448.,  911.,  926.,  941.,  956.,  971.,  986.,  504.,  512.,  520.,  528.,  536.,  544.,  552.,  560.,    0.,    0.,    0.,    0.,    0.,    0.,  497.,  504.,  511.,  518.,  525.,  532.,  539.,  546., 1121., 1136., 1151., 1166., 1181., 1196.,  616.,  624.,  632.,  640.,  648.,  656.,  664.,  672.,    0.,    0.,    0.,    0.,    0.,    0.,  595.,  602.,  609.,  616.,  623.,  630.,  637.,  644., 1331., 1346., 1361., 1376., 1391., 1406.,  728.,  736.,  744.,  752.,  760.,  768.,  776.,  784.,    0.,    0.,    0.,    0.,    0.,    0.,    9.,   18.,   27.,   36.,   45.,   54.,   63.,   72.,   91.,  110.,  129.,  148.,  167.,  186.,   70.,   80.,   90.,  100.,  110.,  120.,  130.,  140.,    0.,    0.,    0.,    0.,    0.,    0.,  135.,  144.,  153.,  162.,  171.,  180.,  189.,  198.,  357.,  376.,  395.,  414.,  433.,  452.,  210.,  220.,  230.,  240.,  250.,  260.,  270.,  280.,    0.,    0.,    0.,    0.,    0.,    0.,  261.,  270.,  279.,  288.,  297.,  306.,  315.,  324.,  623.,  642.,  661.,  680.,  699.,  718.,  350.,  360.,  370.,  380.,  390.,  400.,  410.,  420.,    0.,    0.,    0.,    0.,    0.,    0.,  387.,  396.,  405.,  414.,  423.,  432.,  441.,  450.,  889.,  908.,  927.,  946.,  965.,  984.,  490.,  500.,  510.,  520.,  530.,  540.,  550.,  560.,    0.,    0.,    0.,    0.,    0.,    0.,  524.,  544.,  564.,  584.,  604.,  624.,  644.,  664., 1266., 1308., 1350., 1392., 1434., 1476.,  714.,  736.,  758.,  780.,  802.,  824.,  846.,  868.,    0.,    0.,    0.,    0.,    0.,    0.,  804.,  824.,  844.,  864.,  884.,  904.,  924.,  944., 1854., 1896., 1938., 1980., 2022., 2064., 1022., 1044., 1066., 1088., 1110., 1132., 1154., 1176.,    0.,    0.,    0.,    0.,    0.,    0., 1084., 1104., 1124., 1144., 1164., 1184., 1204., 1224., 2442., 2484., 2526., 2568., 2610., 2652., 1330., 1352., 1374., 1396., 1418., 1440., 1462., 1484.,    0.,    0.,    0.,    0.,    0.,    0.,  473.,  484.,  495.,  506.,  517.,  528.,  539.,  550., 1077., 1100., 1123., 1146., 1169., 1192.,  588.,  600.,  612.,  624.,  636.,  648.,  660.,  672.,    0.,    0.,    0.,    0.,    0.,    0.,  627.,  638.,  649.,  660.,  671.,  682.,  693.,  704., 1399., 1422., 1445., 1468., 1491., 1514.,  756.,  768.,  780.,  792.,  804.,  816.,  828.,  840.,    0.,    0.,    0.,    0.,    0.,    0.,  781.,  792.,  803.,  814.,  825.,  836.,  847.,  858., 1721., 1744., 1767., 1790., 1813., 1836.,  924.,  936.,  948.,  960.,  972.,  984.,  996., 1008.,    0.,    0.,    0.,    0.,    0.,    0.,  935.,  946.,  957.,  968.,  979.,  990., 1001., 1012., 2043., 2066., 2089., 2112., 2135., 2158., 1092., 1104., 1116., 1128., 1140., 1152., 1164., 1176.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 3, 11, 14, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x14x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,   432.,   452.,   472.,   492.,    64.,    84.,    39.,    53.,   700.,   736.,   772.,   808.,   140.,   176.,    61.,    83.,   968.,  1020.,  1072.,  1124.,   216.,   268.,    83.,   113.,    89.,    95.,   101.,   107.,   264.,   284.,   304.,   324.,   344.,   364.,   235.,   249.,   500.,   536.,   572.,   608.,   644.,   680.,   369.,   391.,   736.,   788.,   840.,   892.,   944.,   996.,   503.,   533.,   354.,   398.,   442.,   486.,   720.,   824.,   928.,  1032.,  1136.,  1240.,   742.,   802.,  1000.,  1136.,  1272.,  1408.,  1544.,  1680.,  1042.,  1118.,  1280.,  1448.,  1616.,  1784.,  1952.,  2120.,  1342.,  1434.,   778.,   822.,   866.,   910.,  1728.,  1832.,  1936.,  2040.,  2144.,  2248.,  1134.,  1194.,  2200.,  2336.,  2472.,  2608.,  2744.,  2880.,  1402.,  1478.,  2672.,  2840.,  3008.,  3176.,  3344.,  3512.,  1670.,  1762.,   178.,   222.,   266.,   310.,  1968.,  2072.,  2176.,  2280.,   720.,   824.,   502.,   562.,  2632.,  2768.,  2904.,  3040.,  1000.,  1136.,   738.,   814.,  3296.,  3464.,  3632.,  3800.,  1280.,  1448.,   974.,  1066.,   561.,   599.,   637.,   675.,  1208.,  1292.,  1376.,  1460.,  1544.,  1628.,   771.,   817.,  1444.,  1544.,  1644.,  1744.,  1844.,  1944.,   905.,   959.,  1680.,  1796.,  1912.,  2028.,  2144.,  2260.,  1039.,  1101.,  1426.,  1534.,  1642.,  1750.,  1840.,  2072.,  2304.,  2536.,  2768.,  3000.,  1942.,  2066.,  2120.,  2384.,  2648.,  2912.,  3176.,  3440.,  2242.,  2382.,  2400.,  2696.,  2992.,  3288.,  3584.,  3880.,  2542.,  2698.,  1722.,  1830.,  1938.,  2046.,  3616.,  3848.,  4080.,  4312.,  4544.,  4776.,  2206.,  2330.,  4088.,  4352.,  4616.,  4880.,  5144.,  5408.,  2474.,  2614.,  4560.,  4856.,  5152.,  5448.,  5744.,  6040.,  2742.,  2898.,   994.,  1102.,  1210.,  1318.,  4624.,  4856.,  5088.,  5320.,  1840.,  2072.,  1446.,  1570.,  5288.,  5552.,  5816.,  6080.,  2120.,  2384.,  1682.,  1822.,  5952.,  6248.,  6544.,  6840.,  2400.,  2696.,  1918.,  2074.,  1033.,  1103.,  1173.,  1243.,  2152.,  2300.,  2448.,  2596.,  2744.,  2892.,  1307.,  1385.,  2388.,  2552.,  2716.,  2880.,  3044.,  3208.,  1441.,  1527.,  2624.,  2804.,  2984.,  3164.,  3344.,  3524.,  1575.,  1669.,  2013.,  2083.,  2153.,  2223.,  1984.,  2132.,  2280.,  2428.,  2576.,  2724.,  2399.,  2477.,  2188.,  2352.,  2516.,  2680.,  2844.,  3008.,  2645.,  2731.,  2392.,  2572.,  2752.,  2932.,  3112.,  3292.,  2891.,  2985.,    77.,   179.,   281.,   383.,  3648.,  3860.,  4072.,  4284.,   976.,  1188.,   303.,   413.,  3916.,  4144.,  4372.,  4600.,  1052.,  1280.,   325.,   443.,  4184.,  4428.,  4672.,  4916.,  1128.,  1372.,   347.,   473.,  1505.,  1607.,  1709.,  1811.,  3096.,  3308.,  3520.,  3732.,  3944.,  4156.,  1843.,  1953.,  3332.,  3560.,  3788.,  4016.,  4244.,  4472.,  1977.,  2095.,  3568.,  3812.,  4056.,  4300.,  4544.,  4788.,  2111.,  2237.,  3570.,  3806.,  4042.,  4278.,  4080.,  4568.,  5056.,  5544.,  6032.,  6520.,  4342.,  4594.,  4360.,  4880.,  5400.,  5920.,  6440.,  6960.,  4642.,  4910.,  4640.,  5192.,  5744.,  6296.,  6848.,  7400.,  4942.,  5226.,  3610.,  3846.,  4082.,  4318.,  7392.,  7880.,  8368.,  8856.,  9344.,  9832.,  4350.,  4602.,  7864.,  8384.,  8904.,  9424.,  9944., 10464.,  4618.,  4886.,  8336.,  8888.,  9440.,  9992., 10544., 11096.,  4886.,  5170.,  2626.,  2862.,  3098.,  3334.,  9936., 10424., 10912., 11400.,  4080.,  4568.,  3334.,  3586., 10600., 11120., 11640., 12160.,  4360.,  4880.,  3570.,  3838., 11264., 11816., 12368., 12920.,  4640.,  5192.,  3806.,  4090.,  1977.,  2111.,  2245.,  2379.,  4040.,  4316.,  4592.,  4868.,  5144.,  5420.,  2379.,  2521.,  4276.,  4568.,  4860.,  5152.,  5444.,  5736.,  2513.,  2663.,  4512.,  4820.,  5128.,  5436.,  5744.,  6052.,  2647.,  2805.,  4642.,  4942.,  5242.,  5542.,  5200.,  5816.,  6432.,  7048.,  7664.,  8280.,  5542.,  5858.,  5480.,  6128.,  6776.,  7424.,  8072.,  8720.,  5842.,  6174.,  5760.,  6440.,  7120.,  7800.,  8480.,  9160.,  6142.,  6490.,  4554.,  4854.,  5154.,  5454.,  9280.,  9896., 10512., 11128., 11744., 12360.,  5422.,  5738.,  9752., 10400., 11048., 11696., 12344., 12992.,  5690.,  6022., 10224., 10904., 11584., 12264., 12944., 13624.,  5958.,  6306.,  3442.,  3742.,  4042.,  4342., 12592., 13208., 13824., 14440.,  5200.,  5816.,  4278.,  4594., 13256., 13904., 14552., 15200.,  5480.,  6128.,  4514.,  4846., 13920., 14600., 15280., 15960.,  5760.,  6440.,  4750.,  5098.,  2449.,  2615.,  2781.,  2947.,  4984.,  5324.,  5664.,  6004.,  6344.,  6684.,  2915.,  3089.,  5220.,  5576.,  5932.,  6288.,  6644.,  7000.,  3049.,  3231.,  5456.,  5828.,  6200.,  6572.,  6944.,  7316.,  3183.,  3373.,  4773.,  4939.,  5105.,  5271.,  4432.,  4772.,  5112.,  5452.,  5792.,  6132.,  5351.,  5525.,  4636.,  4992.,  5348.,  5704.,  6060.,  6416.,  5597.,  5779.,  4840.,  5212.,  5584.,  5956.,  6328.,  6700.,  5843.,  6033.,   149.,   347.,   545.,   743.,  6864.,  7268.,  7672.,  8076.,  1888.,  2292.,   567.,   773.,  7132.,  7552.,  7972.,  8392.,  1964.,  2384.,   589.,   803.,  7400.,  7836.,  8272.,  8708.,  2040.,  2476.,   611.,   833.,  2921.,  3119.,  3317.,  3515.,  5928.,  6332.,  6736.,  7140.,  7544.,  7948.,  3451.,  3657.,  6164.,  6584.,  7004.,  7424.,  7844.,  8264.,  3585.,  3799.,  6400.,  6836.,  7272.,  7708.,  8144.,  8580.,  3719.,  3941.,  6786.,  7214.,  7642.,  8070.,  7440.,  8312.,  9184., 10056., 10928., 11800.,  7942.,  8386.,  7720.,  8624.,  9528., 10432., 11336., 12240.,  8242.,  8702.,  8000.,  8936.,  9872., 10808., 11744., 12680.,  8542.,  9018.,  6442.,  6870.,  7298.,  7726., 13056., 13928., 14800., 15672., 16544., 17416.,  7566.,  8010., 13528., 14432., 15336., 16240., 17144., 18048.,  7834.,  8294., 14000., 14936., 15872., 16808., 17744., 18680.,  8102.,  8578.,  5074.,  5502.,  5930.,  6358., 17904., 18776., 19648., 20520.,  7440.,  8312.,  6166.,  6610., 18568., 19472., 20376., 21280.,  7720.,  8624.,  6402.,  6862., 19232., 20168., 21104., 22040.,  8000.,  8936.,  6638.,  7114.,  3393.,  3623.,  3853.,  4083.,  6872.,  7340.,  7808.,  8276.,  8744.,  9212.,  3987.,  4225.,  7108.,  7592.,  8076.,  8560.,  9044.,  9528.,  4121.,  4367.,  7344.,  7844.,  8344.,  8844.,  9344.,  9844.,  4255.,  4509.,  6642.,  6878.,  7114.,  7350.,  6128.,  6616.,  7104.,  7592.,  8080.,  8568.,  7414.,  7666.,  6408.,  6928.,  7448.,  7968.,  8488.,  9008.,  7714.,  7982.,  6688.,  7240.,  7792.,  8344.,  8896.,  9448.,  8014.,  8298.,  2586.,  2822.,  3058.,  3294.,  5344.,  5832.,  6320.,  6808.,  7296.,  7784.,  3326.,  3578.,  5816.,  6336.,  6856.,  7376.,  7896.,  8416.,  3594.,  3862.,  6288.,  6840.,  7392.,  7944.,  8496.,  9048.,  3862.,  4146.,  5698.,  5934.,  6170.,  6406., 11984., 12472., 12960., 13448.,  6128.,  6616.,  6406.,  6658., 12648., 13168., 13688., 14208.,  6408.,  6928.,  6642.,  6910., 13312., 13864., 14416., 14968.,  6688.,  7240.,  6878.,  7162.,    89.,    95.,   101.,   107.,   264.,   284.,   304.,   324.,   344.,   364.,   235.,   249.,   500.,   536.,   572.,   608.,   644.,   680.,   369.,   391.,   736.,   788.,   840.,   892.,   944.,   996.,   503.,   533.,   173.,   179.,   185.,   191.,   352.,   372.,   392.,   412.,   432.,   452.,   431.,   445.,   556.,   592.,   628.,   664.,   700.,   736.,   677.,   699.,   760.,   812.,   864.,   916.,   968.,  1020.,   923.,   953.};
  const std::array<int, 4> in_shape = {{ 3, 11, 14, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x14x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,    64.,    84.,   104.,   124.,   144.,   164.,    95.,   109.,   123.,   137.,   151.,   165.,   179.,   193.,     0.,     0.,     0.,     0.,     0.,     0.,    89.,    95.,   101.,   107.,   113.,   119.,   125.,   131.,   344.,   364.,   384.,   404.,   424.,   444.,   291.,   305.,   319.,   333.,   347.,   361.,   375.,   389.,     0.,     0.,     0.,     0.,     0.,     0.,   173.,   179.,   185.,   191.,   197.,   203.,   209.,   215.,   624.,   644.,   664.,   684.,   704.,   724.,   487.,   501.,   515.,   529.,   543.,   557.,   571.,   585.,     0.,     0.,     0.,     0.,     0.,     0.,   257.,   263.,   269.,   275.,   281.,   287.,   293.,   299.,   904.,   924.,   944.,   964.,   984.,  1004.,   683.,   697.,   711.,   725.,   739.,   753.,   767.,   781.,     0.,     0.,     0.,     0.,     0.,     0.,   358.,   386.,   414.,   442.,   470.,   498.,   526.,   554.,  1400.,  1472.,  1544.,  1616.,  1688.,  1760.,  1082.,  1126.,  1170.,  1214.,  1258.,  1302.,  1346.,  1390.,     0.,     0.,     0.,     0.,     0.,     0.,   750.,   778.,   806.,   834.,   862.,   890.,   918.,   946.,  2408.,  2480.,  2552.,  2624.,  2696.,  2768.,  1698.,  1742.,  1786.,  1830.,  1874.,  1918.,  1962.,  2006.,     0.,     0.,     0.,     0.,     0.,     0.,  1142.,  1170.,  1198.,  1226.,  1254.,  1282.,  1310.,  1338.,  3416.,  3488.,  3560.,  3632.,  3704.,  3776.,  2314.,  2358.,  2402.,  2446.,  2490.,  2534.,  2578.,  2622.,     0.,     0.,     0.,     0.,     0.,     0.,   941.,   963.,   985.,  1007.,  1029.,  1051.,  1073.,  1095.,  2400.,  2452.,  2504.,  2556.,  2608.,  2660.,  1463.,  1493.,  1523.,  1553.,  1583.,  1613.,  1643.,  1673.,     0.,     0.,     0.,     0.,     0.,     0.,  1249.,  1271.,  1293.,  1315.,  1337.,  1359.,  1381.,  1403.,  3128.,  3180.,  3232.,  3284.,  3336.,  3388.,  1883.,  1913.,  1943.,  1973.,  2003.,  2033.,  2063.,  2093.,     0.,     0.,     0.,     0.,     0.,     0.,  1557.,  1579.,  1601.,  1623.,  1645.,  1667.,  1689.,  1711.,  3856.,  3908.,  3960.,  4012.,  4064.,  4116.,  2303.,  2333.,  2363.,  2393.,  2423.,  2453.,  2483.,  2513.,     0.,     0.,     0.,     0.,     0.,     0.,  1865.,  1887.,  1909.,  1931.,  1953.,  1975.,  1997.,  2019.,  4584.,  4636.,  4688.,  4740.,  4792.,  4844.,  2723.,  2753.,  2783.,  2813.,  2843.,  2873.,  2903.,  2933.,     0.,     0.,     0.,     0.,     0.,     0.,    29.,    67.,   105.,   143.,   181.,   219.,   257.,   295.,   368.,   452.,   536.,   620.,   704.,   788.,   311.,   357.,   403.,   449.,   495.,   541.,   587.,   633.,     0.,     0.,     0.,     0.,     0.,     0.,   561.,   599.,   637.,   675.,   713.,   751.,   789.,   827.,  1544.,  1628.,  1712.,  1796.,  1880.,  1964.,   955.,  1001.,  1047.,  1093.,  1139.,  1185.,  1231.,  1277.,     0.,     0.,     0.,     0.,     0.,     0.,  1093.,  1131.,  1169.,  1207.,  1245.,  1283.,  1321.,  1359.,  2720.,  2804.,  2888.,  2972.,  3056.,  3140.,  1599.,  1645.,  1691.,  1737.,  1783.,  1829.,  1875.,  1921.,     0.,     0.,     0.,     0.,     0.,     0.,  1625.,  1663.,  1701.,  1739.,  1777.,  1815.,  1853.,  1891.,  3896.,  3980.,  4064.,  4148.,  4232.,  4316.,  2243.,  2289.,  2335.,  2381.,  2427.,  2473.,  2519.,  2565.,     0.,     0.,     0.,     0.,     0.,     0.,  2198.,  2290.,  2382.,  2474.,  2566.,  2658.,  2750.,  2842.,  5592.,  5792.,  5992.,  6192.,  6392.,  6592.,  3306.,  3414.,  3522.,  3630.,  3738.,  3846.,  3954.,  4062.,     0.,     0.,     0.,     0.,     0.,     0.,  3486.,  3578.,  3670.,  3762.,  3854.,  3946.,  4038.,  4130.,  8392.,  8592.,  8792.,  8992.,  9192.,  9392.,  4818.,  4926.,  5034.,  5142.,  5250.,  5358.,  5466.,  5574.,     0.,     0.,     0.,     0.,     0.,     0.,  4774.,  4866.,  4958.,  5050.,  5142.,  5234.,  5326.,  5418., 11192., 11392., 11592., 11792., 11992., 12192.,  6330.,  6438.,  6546.,  6654.,  6762.,  6870.,  6978.,  7086.,     0.,     0.,     0.,     0.,     0.,     0.,  2309.,  2363.,  2417.,  2471.,  2525.,  2579.,  2633.,  2687.,  5392.,  5508.,  5624.,  5740.,  5856.,  5972.,  3023.,  3085.,  3147.,  3209.,  3271.,  3333.,  3395.,  3457.,     0.,     0.,     0.,     0.,     0.,     0.,  3065.,  3119.,  3173.,  3227.,  3281.,  3335.,  3389.,  3443.,  7016.,  7132.,  7248.,  7364.,  7480.,  7596.,  3891.,  3953.,  4015.,  4077.,  4139.,  4201.,  4263.,  4325.,     0.,     0.,     0.,     0.,     0.,     0.,  3821.,  3875.,  3929.,  3983.,  4037.,  4091.,  4145.,  4199.,  8640.,  8756.,  8872.,  8988.,  9104.,  9220.,  4759.,  4821.,  4883.,  4945.,  5007.,  5069.,  5131.,  5193.,     0.,     0.,     0.,     0.,     0.,     0.,  4577.,  4631.,  4685.,  4739.,  4793.,  4847.,  4901.,  4955., 10264., 10380., 10496., 10612., 10728., 10844.,  5627.,  5689.,  5751.,  5813.,  5875.,  5937.,  5999.,  6061.,     0.,     0.,     0.,     0.,     0.,     0.,    53.,   123.,   193.,   263.,   333.,   403.,   473.,   543.,   672.,   820.,   968.,  1116.,  1264.,  1412.,   527.,   605.,   683.,   761.,   839.,   917.,   995.,  1073.,     0.,     0.,     0.,     0.,     0.,     0.,  1033.,  1103.,  1173.,  1243.,  1313.,  1383.,  1453.,  1523.,  2744.,  2892.,  3040.,  3188.,  3336.,  3484.,  1619.,  1697.,  1775.,  1853.,  1931.,  2009.,  2087.,  2165.,     0.,     0.,     0.,     0.,     0.,     0.,  2013.,  2083.,  2153.,  2223.,  2293.,  2363.,  2433.,  2503.,  4816.,  4964.,  5112.,  5260.,  5408.,  5556.,  2711.,  2789.,  2867.,  2945.,  3023.,  3101.,  3179.,  3257.,     0.,     0.,     0.,     0.,     0.,     0.,  2993.,  3063.,  3133.,  3203.,  3273.,  3343.,  3413.,  3483.,  6888.,  7036.,  7184.,  7332.,  7480.,  7628.,  3803.,  3881.,  3959.,  4037.,  4115.,  4193.,  4271.,  4349.,     0.,     0.,     0.,     0.,     0.,     0.,  4038.,  4194.,  4350.,  4506.,  4662.,  4818.,  4974.,  5130.,  9784., 10112., 10440., 10768., 11096., 11424.,  5530.,  5702.,  5874.,  6046.,  6218.,  6390.,  6562.,  6734.,     0.,     0.,     0.,     0.,     0.,     0.,  6222.,  6378.,  6534.,  6690.,  6846.,  7002.,  7158.,  7314., 14376., 14704., 15032., 15360., 15688., 16016.,  7938.,  8110.,  8282.,  8454.,  8626.,  8798.,  8970.,  9142.,     0.,     0.,     0.,     0.,     0.,     0.,  8406.,  8562.,  8718.,  8874.,  9030.,  9186.,  9342.,  9498., 18968., 19296., 19624., 19952., 20280., 20608., 10346., 10518., 10690., 10862., 11034., 11206., 11378., 11550.,     0.,     0.,     0.,     0.,     0.,     0.,  3677.,  3763.,  3849.,  3935.,  4021.,  4107.,  4193.,  4279.,  8384.,  8564.,  8744.,  8924.,  9104.,  9284.,  4583.,  4677.,  4771.,  4865.,  4959.,  5053.,  5147.,  5241.,     0.,     0.,     0.,     0.,     0.,     0.,  4881.,  4967.,  5053.,  5139.,  5225.,  5311.,  5397.,  5483., 10904., 11084., 11264., 11444., 11624., 11804.,  5899.,  5993.,  6087.,  6181.,  6275.,  6369.,  6463.,  6557.,     0.,     0.,     0.,     0.,     0.,     0.,  6085.,  6171.,  6257.,  6343.,  6429.,  6515.,  6601.,  6687., 13424., 13604., 13784., 13964., 14144., 14324.,  7215.,  7309.,  7403.,  7497.,  7591.,  7685.,  7779.,  7873.,     0.,     0.,     0.,     0.,     0.,     0.,  7289.,  7375.,  7461.,  7547.,  7633.,  7719.,  7805.,  7891., 15944., 16124., 16304., 16484., 16664., 16844.,  8531.,  8625.,  8719.,  8813.,  8907.,  9001.,  9095.,  9189.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 11, 14, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x14x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,   614.,   846.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  4780.,  5500.,   892.,  1228.,  1564.,  1900.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  1900.,  2620.,  1966.,  2262.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  4780.,  5500.,   892.,  1228.,  1564.,  1900.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  1900.,  2620.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  1542.,  1774.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  1286.,  1774.,  1966.,  2262.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  4780.,  5500.,   892.,  1228.,  1564.,  1900.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  1900.,  2620.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  4780.,  5500.,   892.,  1228.,  1564.,  1900.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  1900.,  2620.,  1966.,  2262.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  2390.,  2750.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  3238.,  3726.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,   614.,   846.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  4780.,  5500.,   892.,  1228.,  1564.,  1900.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  1900.,  2620.,  1966.,  2262.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  4780.,  5500.,   892.,  1228.,  1564.,  1900.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  1900.,  2620.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  1542.,  1774.};
  const std::array<int, 4> in_shape = {{ 3, 11, 14, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x14x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   420.,   564.,   708.,   852.,   996.,  1140.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,     0.,     0.,     0.,     0.,     0.,     0.,   590.,   630.,    30.,    70.,   110.,   150.,   190.,   230.,  1796.,  1940.,   420.,   564.,   708.,   852.,   486.,   590.,   694.,   798.,   902.,  1006.,  1110.,  1214.,     0.,     0.,     0.,     0.,     0.,     0.,   510.,   550.,   590.,   630.,    30.,    70.,   110.,   150.,  1508.,  1652.,  1796.,  1940.,   420.,   564.,   278.,   382.,   486.,   590.,   694.,   798.,   902.,  1006.,     0.,     0.,     0.,     0.,     0.,     0.,   430.,   470.,   510.,   550.,   590.,   630.,    30.,    70.,  1220.,  1364.,  1508.,  1652.,  1796.,  1940.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,     0.,     0.,   460.,   668.,   876.,  1084.,  1292.,  1500.,  1708.,  1916.,  2536.,  3080.,  3624.,  4168.,  4712.,  5256.,  3068.,  3404.,  2076.,  2412.,  2748.,  3084.,  3420.,  3756.,     0.,     0.,     0.,     0.,     0.,     0.,  2732.,  2940.,   460.,   668.,   876.,  1084.,  1292.,  1500.,  5800.,  6344.,  2536.,  3080.,  3624.,  4168.,  2396.,  2732.,  3068.,  3404.,  2076.,  2412.,  2748.,  3084.,     0.,     0.,     0.,     0.,     0.,     0.,  2316.,  2524.,  2732.,  2940.,   460.,   668.,   876.,  1084.,  4712.,  5256.,  5800.,  6344.,  2536.,  3080.,  1724.,  2060.,  2396.,  2732.,  3068.,  3404.,  2076.,  2412.,     0.,     0.,     0.,     0.,     0.,     0.,  1790.,  1958.,  2126.,  2294.,  2462.,  2630.,   110.,   278.,  2916.,  3316.,  3716.,  4116.,  4516.,  4916.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  2462.,  2630.,  2116.,  2516.,  2916.,  3316.,  3716.,  4116.,  3398.,  3630.,   150.,   382.,   614.,   846.,  1078.,  1310.,     0.,     0.,     0.,     0.,     0.,     0.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  4004.,  4404.,  2116.,  2516.,  2916.,  3316.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  3204.,  3604.,  4004.,  4404.,  2116.,  2516.,  2470.,  2702.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,  2788.,  3444.,  4100.,  4756.,  5412.,  6068.,  2390.,  2750.,  3110.,  3470.,  3830.,  4190.,  4550.,  4910.,     0.,     0.,     0.,     0.,     0.,     0.,  4334.,  4630.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  7236.,  7892.,  2788.,  3444.,  4100.,  4756.,  1670.,  2030.,  2390.,  2750.,  3110.,  3470.,  3830.,  4190.,     0.,     0.,     0.,     0.,     0.,     0.,  3742.,  4038.,  4334.,  4630.,   190.,   486.,   782.,  1078.,  5924.,  6580.,  7236.,  7892.,  2788.,  3444.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,  3110.,  3470.,     0.,     0.,     0.,     0.,     0.,     0.,  3150.,  3446.,  3742.,  4038.,  4334.,  4630.,   190.,   486.,  4612.,  5268.,  5924.,  6580.,  7236.,  7892.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,     0.,     0.,     0.,     0.,     0.,     0.,  2828.,  3548.,  4268.,  4988.,  5708.,  6428.,  7148.,  7868.,  7272.,  8840., 10408., 11976., 13544., 15112.,  8508.,  9356.,  4444.,  5292.,  6140.,  6988.,  7836.,  8684.,     0.,     0.,     0.,     0.,     0.,     0.,  8172.,  8892.,  2828.,  3548.,  4268.,  4988.,  5708.,  6428., 16680., 18248.,  7272.,  8840., 10408., 11976.,  6812.,  7660.,  8508.,  9356.,  4444.,  5292.,  6140.,  6988.,     0.,     0.,     0.,     0.,     0.,     0.,  6732.,  7452.,  8172.,  8892.,  2828.,  3548.,  4268.,  4988., 13544., 15112., 16680., 18248.,  7272.,  8840.,  5116.,  5964.,  6812.,  7660.,  8508.,  9356.,  4444.,  5292.,     0.,     0.,     0.,     0.,     0.,     0.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,   270.,   694.,  6308.,  7220.,  8132.,  9044.,  9956., 10868.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,     0.,     0.,     0.,     0.,     0.,     0.,  3662.,  4086.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,  4484.,  5396.,  6308.,  7220.,  8132.,  9044.,  7142.,  7630.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,     0.,     0.,     0.,     0.,     0.,     0.,  2814.,  3238.,  3662.,  4086.,  4510.,  4934.,  5358.,  5782.,  9444., 10356.,  4484.,  5396.,  6308.,  7220.,  6166.,  6654.,  7142.,  7630.,   310.,   798.,  1286.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,  1966.,  2390.,  2814.,  3238.,  3662.,  4086.,  4510.,  4934.,  7620.,  8532.,  9444., 10356.,  4484.,  5396.,  5190.,  5678.,  6166.,  6654.,  7142.,  7630.,   310.,   798.,     0.,     0.,     0.,     0.,     0.,     0.,   350.,   902.,  1454.,  2006.,  2558.,  3110.,  3662.,  4214.,  5156.,  6324.,  7492.,  8660.,  9828., 10996.,  4086.,  4702.,  5318.,  5934.,  6550.,  7166.,  7782.,  8398.,     0.,     0.,     0.,     0.,     0.,     0.,  8078.,  8630.,   350.,   902.,  1454.,  2006.,  2558.,  3110., 12676., 13844.,  5156.,  6324.,  7492.,  8660.,  2854.,  3470.,  4086.,  4702.,  5318.,  5934.,  6550.,  7166.,     0.,     0.,     0.,     0.,     0.,     0.,  6974.,  7526.,  8078.,  8630.,   350.,   902.,  1454.,  2006., 10340., 11508., 12676., 13844.,  5156.,  6324.,  1622.,  2238.,  2854.,  3470.,  4086.,  4702.,  5318.,  5934.,     0.,     0.,     0.,     0.,     0.,     0.,  5870.,  6422.,  6974.,  7526.,  8078.,  8630.,   350.,   902.,  8004.,  9172., 10340., 11508., 12676., 13844.,   390.,  1006.,  1622.,  2238.,  2854.,  3470.,  4086.,  4702.,     0.,     0.,     0.,     0.,     0.,     0.,  5196.,  6428.,  7660.,  8892., 10124., 11356., 12588., 13820., 12008., 14600., 17192., 19784., 22376., 24968., 13948., 15308.,  6812.,  8172.,  9532., 10892., 12252., 13612.,     0.,     0.,     0.,     0.,     0.,     0., 13612., 14844.,  5196.,  6428.,  7660.,  8892., 10124., 11356., 27560., 30152., 12008., 14600., 17192., 19784., 11228., 12588., 13948., 15308.,  6812.,  8172.,  9532., 10892.,     0.,     0.,     0.,     0.,     0.,     0., 11148., 12380., 13612., 14844.,  5196.,  6428.,  7660.,  8892., 22376., 24968., 27560., 30152., 12008., 14600.,  8508.,  9868., 11228., 12588., 13948., 15308.,  6812.,  8172.,     0.,     0.,     0.,     0.,     0.,     0.,  7230.,  7910.,  8590.,  9270.,  9950., 10630.,   430.,  1110.,  9700., 11124., 12548., 13972., 15396., 16820.,   470.,  1214.,  1958.,  2702.,  3446.,  4190.,  4934.,  5678.,     0.,     0.,     0.,     0.,     0.,     0.,  5870.,  6550.,  7230.,  7910.,  8590.,  9270.,  9950., 10630.,  6852.,  8276.,  9700., 11124., 12548., 13972., 10886., 11630.,   470.,  1214.,  1958.,  2702.,  3446.,  4190.,     0.,     0.,     0.,     0.,     0.,     0.,  4510.,  5190.,  5870.,  6550.,  7230.,  7910.,  8590.,  9270., 14884., 16308.,  6852.,  8276.,  9700., 11124.,  9398., 10142., 10886., 11630.,   470.,  1214.,  1958.,  2702.,     0.,     0.,     0.,     0.,     0.,     0.,  3150.,  3830.,  4510.,  5190.,  5870.,  6550.,  7230.,  7910., 12036., 13460., 14884., 16308.,  6852.,  8276.,  7910.,  8654.,  9398., 10142., 10886., 11630.,   470.,  1214.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 11, 14, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x14x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   65.,    66.,    67.,    68.,    69.,    70.,    71.,    72.,   187.,   190.,   193.,   196.,   199.,   202.,   205.,   208.,   211.,   214.,   217.,   220.,   138.,   140.,   142.,   144.,   317.,   322.,   327.,   332.,   337.,   342.,   347.,   352.,   357.,   362.,   367.,   372.,   207.,   210.,   213.,   216.,   447.,   454.,   461.,   468.,   475.,   482.,   489.,   496.,   503.,   510.,   517.,   524.,   276.,   280.,   284.,   288.,    93.,    94.,    95.,    96.,    97.,    98.,    99.,   100.,   271.,   274.,   277.,   280.,   283.,   286.,   289.,   292.,   295.,   298.,   301.,   304.,   194.,   196.,   198.,   200.,   457.,   462.,   467.,   472.,   477.,   482.,   487.,   492.,   497.,   502.,   507.,   512.,   291.,   294.,   297.,   300.,   643.,   650.,   657.,   664.,   671.,   678.,   685.,   692.,   699.,   706.,   713.,   720.,   388.,   392.,   396.,   400.,   166.,   172.,   178.,   184.,   190.,   196.,   202.,   208.,   446.,   460.,   474.,   488.,   502.,   516.,   530.,   544.,   558.,   572.,   586.,   600.,   328.,   336.,   344.,   352.,   706.,   724.,   742.,   760.,   778.,   796.,   814.,   832.,   850.,   868.,   886.,   904.,   466.,   476.,   486.,   496.,   966.,   988.,  1010.,  1032.,  1054.,  1076.,  1098.,  1120.,  1142.,  1164.,  1186.,  1208.,   604.,   616.,   628.,   640.,   334.,   340.,   346.,   352.,   358.,   364.,   370.,   376.,   838.,   852.,   866.,   880.,   894.,   908.,   922.,   936.,   950.,   964.,   978.,   992.,   552.,   560.,   568.,   576.,  1210.,  1228.,  1246.,  1264.,  1282.,  1300.,  1318.,  1336.,  1354.,  1372.,  1390.,  1408.,   746.,   756.,   766.,   776.,  1582.,  1604.,  1626.,  1648.,  1670.,  1692.,  1714.,  1736.,  1758.,  1780.,  1802.,  1824.,   940.,   952.,   964.,   976.,   502.,   508.,   514.,   520.,   526.,   532.,   538.,   544.,  1230.,  1244.,  1258.,  1272.,  1286.,  1300.,  1314.,  1328.,  1342.,  1356.,  1370.,  1384.,   776.,   784.,   792.,   800.,  1714.,  1732.,  1750.,  1768.,  1786.,  1804.,  1822.,  1840.,  1858.,  1876.,  1894.,  1912.,  1026.,  1036.,  1046.,  1056.,  2198.,  2220.,  2242.,  2264.,  2286.,  2308.,  2330.,  2352.,  2374.,  2396.,  2418.,  2440.,  1276.,  1288.,  1300.,  1312.,   465.,   470.,   475.,   480.,   485.,   490.,   495.,   500.,  1015.,  1026.,  1037.,  1048.,  1059.,  1070.,  1081.,  1092.,  1103.,  1114.,  1125.,  1136.,   582.,   588.,   594.,   600.,  1201.,  1214.,  1227.,  1240.,  1253.,  1266.,  1279.,  1292.,  1305.,  1318.,  1331.,  1344.,   679.,   686.,   693.,   700.,  1387.,  1402.,  1417.,  1432.,  1447.,  1462.,  1477.,  1492.,  1507.,  1522.,  1537.,  1552.,   776.,   784.,   792.,   800.,   686.,   700.,   714.,   728.,   742.,   756.,   770.,   784.,  1486.,  1516.,  1546.,  1576.,  1606.,  1636.,  1666.,  1696.,  1726.,  1756.,  1786.,  1816.,   880.,   896.,   912.,   928.,  1746.,  1780.,  1814.,  1848.,  1882.,  1916.,  1950.,  1984.,  2018.,  2052.,  2086.,  2120.,  1018.,  1036.,  1054.,  1072.,  2006.,  2044.,  2082.,  2120.,  2158.,  2196.,  2234.,  2272.,  2310.,  2348.,  2386.,  2424.,  1156.,  1176.,  1196.,  1216.,  1078.,  1092.,  1106.,  1120.,  1134.,  1148.,  1162.,  1176.,  2326.,  2356.,  2386.,  2416.,  2446.,  2476.,  2506.,  2536.,  2566.,  2596.,  2626.,  2656.,  1328.,  1344.,  1360.,  1376.,  2698.,  2732.,  2766.,  2800.,  2834.,  2868.,  2902.,  2936.,  2970.,  3004.,  3038.,  3072.,  1522.,  1540.,  1558.,  1576.,  3070.,  3108.,  3146.,  3184.,  3222.,  3260.,  3298.,  3336.,  3374.,  3412.,  3450.,  3488.,  1716.,  1736.,  1756.,  1776.,  1470.,  1484.,  1498.,  1512.,  1526.,  1540.,  1554.,  1568.,  3166.,  3196.,  3226.,  3256.,  3286.,  3316.,  3346.,  3376.,  3406.,  3436.,  3466.,  3496.,  1776.,  1792.,  1808.,  1824.,  3650.,  3684.,  3718.,  3752.,  3786.,  3820.,  3854.,  3888.,  3922.,  3956.,  3990.,  4024.,  2026.,  2044.,  2062.,  2080.,  4134.,  4172.,  4210.,  4248.,  4286.,  4324.,  4362.,  4400.,  4438.,  4476.,  4514.,  4552.,  2276.,  2296.,  2316.,  2336.,   837.,   846.,   855.,   864.,   873.,   882.,   891.,   900.,  1759.,  1778.,  1797.,  1816.,  1835.,  1854.,  1873.,  1892.,  1911.,  1930.,  1949.,  1968.,   970.,   980.,   990.,  1000.,  1945.,  1966.,  1987.,  2008.,  2029.,  2050.,  2071.,  2092.,  2113.,  2134.,  2155.,  2176.,  1067.,  1078.,  1089.,  1100.,  2131.,  2154.,  2177.,  2200.,  2223.,  2246.,  2269.,  2292.,  2315.,  2338.,  2361.,  2384.,  1164.,  1176.,  1188.,  1200.,  1089.,  1098.,  1107.,  1116.,  1125.,  1134.,  1143.,  1152.,  2291.,  2310.,  2329.,  2348.,  2367.,  2386.,  2405.,  2424.,  2443.,  2462.,  2481.,  2500.,  1250.,  1260.,  1270.,  1280.,  2533.,  2554.,  2575.,  2596.,  2617.,  2638.,  2659.,  2680.,  2701.,  2722.,  2743.,  2764.,  1375.,  1386.,  1397.,  1408.,  2775.,  2798.,  2821.,  2844.,  2867.,  2890.,  2913.,  2936.,  2959.,  2982.,  3005.,  3028.,  1500.,  1512.,  1524.,  1536.,   845.,   858.,   871.,   884.,   897.,   910.,   923.,   936.,  1747.,  1774.,  1801.,  1828.,  1855.,  1882.,  1909.,  1936.,  1963.,  1990.,  2017.,  2044.,   966.,   980.,   994.,  1008.,  1877.,  1906.,  1935.,  1964.,  1993.,  2022.,  2051.,  2080.,  2109.,  2138.,  2167.,  2196.,  1035.,  1050.,  1065.,  1080.,  2007.,  2038.,  2069.,  2100.,  2131.,  2162.,  2193.,  2224.,  2255.,  2286.,  2317.,  2348.,  1104.,  1120.,  1136.,  1152.,  1209.,  1222.,  1235.,  1248.,  1261.,  1274.,  1287.,  1300.,  2503.,  2530.,  2557.,  2584.,  2611.,  2638.,  2665.,  2692.,  2719.,  2746.,  2773.,  2800.,  1358.,  1372.,  1386.,  1400.,  2689.,  2718.,  2747.,  2776.,  2805.,  2834.,  2863.,  2892.,  2921.,  2950.,  2979.,  3008.,  1455.,  1470.,  1485.,  1500.,  2875.,  2906.,  2937.,  2968.,  2999.,  3030.,  3061.,  3092.,  3123.,  3154.,  3185.,  3216.,  1552.,  1568.,  1584.,  1600.,  1726.,  1756.,  1786.,  1816.,  1846.,  1876.,  1906.,  1936.,  3566.,  3628.,  3690.,  3752.,  3814.,  3876.,  3938.,  4000.,  4062.,  4124.,  4186.,  4248.,  1984.,  2016.,  2048.,  2080.,  3826.,  3892.,  3958.,  4024.,  4090.,  4156.,  4222.,  4288.,  4354.,  4420.,  4486.,  4552.,  2122.,  2156.,  2190.,  2224.,  4086.,  4156.,  4226.,  4296.,  4366.,  4436.,  4506.,  4576.,  4646.,  4716.,  4786.,  4856.,  2260.,  2296.,  2332.,  2368.,  2566.,  2596.,  2626.,  2656.,  2686.,  2716.,  2746.,  2776.,  5302.,  5364.,  5426.,  5488.,  5550.,  5612.,  5674.,  5736.,  5798.,  5860.,  5922.,  5984.,  2880.,  2912.,  2944.,  2976.,  5674.,  5740.,  5806.,  5872.,  5938.,  6004.,  6070.,  6136.,  6202.,  6268.,  6334.,  6400.,  3074.,  3108.,  3142.,  3176.,  6046.,  6116.,  6186.,  6256.,  6326.,  6396.,  6466.,  6536.,  6606.,  6676.,  6746.,  6816.,  3268.,  3304.,  3340.,  3376.,  3406.,  3436.,  3466.,  3496.,  3526.,  3556.,  3586.,  3616.,  7038.,  7100.,  7162.,  7224.,  7286.,  7348.,  7410.,  7472.,  7534.,  7596.,  7658.,  7720.,  3776.,  3808.,  3840.,  3872.,  7522.,  7588.,  7654.,  7720.,  7786.,  7852.,  7918.,  7984.,  8050.,  8116.,  8182.,  8248.,  4026.,  4060.,  4094.,  4128.,  8006.,  8076.,  8146.,  8216.,  8286.,  8356.,  8426.,  8496.,  8566.,  8636.,  8706.,  8776.,  4276.,  4312.,  4348.,  4384.,  1581.,  1598.,  1615.,  1632.,  1649.,  1666.,  1683.,  1700.,  3247.,  3282.,  3317.,  3352.,  3387.,  3422.,  3457.,  3492.,  3527.,  3562.,  3597.,  3632.,  1746.,  1764.,  1782.,  1800.,  3433.,  3470.,  3507.,  3544.,  3581.,  3618.,  3655.,  3692.,  3729.,  3766.,  3803.,  3840.,  1843.,  1862.,  1881.,  1900.,  3619.,  3658.,  3697.,  3736.,  3775.,  3814.,  3853.,  3892.,  3931.,  3970.,  4009.,  4048.,  1940.,  1960.,  1980.,  2000.,  2246.,  2284.,  2322.,  2360.,  2398.,  2436.,  2474.,  2512.,  4606.,  4684.,  4762.,  4840.,  4918.,  4996.,  5074.,  5152.,  5230.,  5308.,  5386.,  5464.,  2536.,  2576.,  2616.,  2656.,  4866.,  4948.,  5030.,  5112.,  5194.,  5276.,  5358.,  5440.,  5522.,  5604.,  5686.,  5768.,  2674.,  2716.,  2758.,  2800.,  5126.,  5212.,  5298.,  5384.,  5470.,  5556.,  5642.,  5728.,  5814.,  5900.,  5986.,  6072.,  2812.,  2856.,  2900.,  2944.,  3310.,  3348.,  3386.,  3424.,  3462.,  3500.,  3538.,  3576.,  6790.,  6868.,  6946.,  7024.,  7102.,  7180.,  7258.,  7336.,  7414.,  7492.,  7570.,  7648.,  3656.,  3696.,  3736.,  3776.,  7162.,  7244.,  7326.,  7408.,  7490.,  7572.,  7654.,  7736.,  7818.,  7900.,  7982.,  8064.,  3850.,  3892.,  3934.,  3976.,  7534.,  7620.,  7706.,  7792.,  7878.,  7964.,  8050.,  8136.,  8222.,  8308.,  8394.,  8480.,  4044.,  4088.,  4132.,  4176.,  4374.,  4412.,  4450.,  4488.,  4526.,  4564.,  4602.,  4640.,  8974.,  9052.,  9130.,  9208.,  9286.,  9364.,  9442.,  9520.,  9598.,  9676.,  9754.,  9832.,  4776.,  4816.,  4856.,  4896.,  9458.,  9540.,  9622.,  9704.,  9786.,  9868.,  9950., 10032., 10114., 10196., 10278., 10360.,  5026.,  5068.,  5110.,  5152.,  9942., 10028., 10114., 10200., 10286., 10372., 10458., 10544., 10630., 10716., 10802., 10888.,  5276.,  5320.,  5364.,  5408.,  1953.,  1974.,  1995.,  2016.,  2037.,  2058.,  2079.,  2100.,  3991.,  4034.,  4077.,  4120.,  4163.,  4206.,  4249.,  4292.,  4335.,  4378.,  4421.,  4464.,  2134.,  2156.,  2178.,  2200.,  4177.,  4222.,  4267.,  4312.,  4357.,  4402.,  4447.,  4492.,  4537.,  4582.,  4627.,  4672.,  2231.,  2254.,  2277.,  2300.,  4363.,  4410.,  4457.,  4504.,  4551.,  4598.,  4645.,  4692.,  4739.,  4786.,  4833.,  4880.,  2328.,  2352.,  2376.,  2400.,  2541.,  2562.,  2583.,  2604.,  2625.,  2646.,  2667.,  2688.,  5195.,  5238.,  5281.,  5324.,  5367.,  5410.,  5453.,  5496.,  5539.,  5582.,  5625.,  5668.,  2750.,  2772.,  2794.,  2816.,  5437.,  5482.,  5527.,  5572.,  5617.,  5662.,  5707.,  5752.,  5797.,  5842.,  5887.,  5932.,  2875.,  2898.,  2921.,  2944.,  5679.,  5726.,  5773.,  5820.,  5867.,  5914.,  5961.,  6008.,  6055.,  6102.,  6149.,  6196.,  3000.,  3024.,  3048.,  3072.,  1625.,  1650.,  1675.,  1700.,  1725.,  1750.,  1775.,  1800.,  3307.,  3358.,  3409.,  3460.,  3511.,  3562.,  3613.,  3664.,  3715.,  3766.,  3817.,  3868.,  1794.,  1820.,  1846.,  1872.,  3437.,  3490.,  3543.,  3596.,  3649.,  3702.,  3755.,  3808.,  3861.,  3914.,  3967.,  4020.,  1863.,  1890.,  1917.,  1944.,  3567.,  3622.,  3677.,  3732.,  3787.,  3842.,  3897.,  3952.,  4007.,  4062.,  4117.,  4172.,  1932.,  1960.,  1988.,  2016.,  2325.,  2350.,  2375.,  2400.,  2425.,  2450.,  2475.,  2500.,  4735.,  4786.,  4837.,  4888.,  4939.,  4990.,  5041.,  5092.,  5143.,  5194.,  5245.,  5296.,  2522.,  2548.,  2574.,  2600.,  4921.,  4974.,  5027.,  5080.,  5133.,  5186.,  5239.,  5292.,  5345.,  5398.,  5451.,  5504.,  2619.,  2646.,  2673.,  2700.,  5107.,  5162.,  5217.,  5272.,  5327.,  5382.,  5437.,  5492.,  5547.,  5602.,  5657.,  5712.,  2716.,  2744.,  2772.,  2800.,  3286.,  3340.,  3394.,  3448.,  3502.,  3556.,  3610.,  3664.,  6686.,  6796.,  6906.,  7016.,  7126.,  7236.,  7346.,  7456.,  7566.,  7676.,  7786.,  7896.,  3640.,  3696.,  3752.,  3808.,  6946.,  7060.,  7174.,  7288.,  7402.,  7516.,  7630.,  7744.,  7858.,  7972.,  8086.,  8200.,  3778.,  3836.,  3894.,  3952.,  7206.,  7324.,  7442.,  7560.,  7678.,  7796.,  7914.,  8032.,  8150.,  8268.,  8386.,  8504.,  3916.,  3976.,  4036.,  4096.,  4798.,  4852.,  4906.,  4960.,  5014.,  5068.,  5122.,  5176.,  9766.,  9876.,  9986., 10096., 10206., 10316., 10426., 10536., 10646., 10756., 10866., 10976.,  5208.,  5264.,  5320.,  5376., 10138., 10252., 10366., 10480., 10594., 10708., 10822., 10936., 11050., 11164., 11278., 11392.,  5402.,  5460.,  5518.,  5576., 10510., 10628., 10746., 10864., 10982., 11100., 11218., 11336., 11454., 11572., 11690., 11808.,  5596.,  5656.,  5716.,  5776.,  6310.,  6364.,  6418.,  6472.,  6526.,  6580.,  6634.,  6688., 12846., 12956., 13066., 13176., 13286., 13396., 13506., 13616., 13726., 13836., 13946., 14056.,  6776.,  6832.,  6888.,  6944., 13330., 13444., 13558., 13672., 13786., 13900., 14014., 14128., 14242., 14356., 14470., 14584.,  7026.,  7084.,  7142.,  7200., 13814., 13932., 14050., 14168., 14286., 14404., 14522., 14640., 14758., 14876., 14994., 15112.,  7276.,  7336.,  7396.,  7456.,  2697.,  2726.,  2755.,  2784.,  2813.,  2842.,  2871.,  2900.,  5479.,  5538.,  5597.,  5656.,  5715.,  5774.,  5833.,  5892.,  5951.,  6010.,  6069.,  6128.,  2910.,  2940.,  2970.,  3000.,  5665.,  5726.,  5787.,  5848.,  5909.,  5970.,  6031.,  6092.,  6153.,  6214.,  6275.,  6336.,  3007.,  3038.,  3069.,  3100.,  5851.,  5914.,  5977.,  6040.,  6103.,  6166.,  6229.,  6292.,  6355.,  6418.,  6481.,  6544.,  3104.,  3136.,  3168.,  3200.,  3806.,  3868.,  3930.,  3992.,  4054.,  4116.,  4178.,  4240.,  7726.,  7852.,  7978.,  8104.,  8230.,  8356.,  8482.,  8608.,  8734.,  8860.,  8986.,  9112.,  4192.,  4256.,  4320.,  4384.,  7986.,  8116.,  8246.,  8376.,  8506.,  8636.,  8766.,  8896.,  9026.,  9156.,  9286.,  9416.,  4330.,  4396.,  4462.,  4528.,  8246.,  8380.,  8514.,  8648.,  8782.,  8916.,  9050.,  9184.,  9318.,  9452.,  9586.,  9720.,  4468.,  4536.,  4604.,  4672.,  5542.,  5604.,  5666.,  5728.,  5790.,  5852.,  5914.,  5976., 11254., 11380., 11506., 11632., 11758., 11884., 12010., 12136., 12262., 12388., 12514., 12640.,  5984.,  6048.,  6112.,  6176., 11626., 11756., 11886., 12016., 12146., 12276., 12406., 12536., 12666., 12796., 12926., 13056.,  6178.,  6244.,  6310.,  6376., 11998., 12132., 12266., 12400., 12534., 12668., 12802., 12936., 13070., 13204., 13338., 13472.,  6372.,  6440.,  6508.,  6576.,  7278.,  7340.,  7402.,  7464.,  7526.,  7588.,  7650.,  7712., 14782., 14908., 15034., 15160., 15286., 15412., 15538., 15664., 15790., 15916., 16042., 16168.,  7776.,  7840.,  7904.,  7968., 15266., 15396., 15526., 15656., 15786., 15916., 16046., 16176., 16306., 16436., 16566., 16696.,  8026.,  8092.,  8158.,  8224., 15750., 15884., 16018., 16152., 16286., 16420., 16554., 16688., 16822., 16956., 17090., 17224.,  8276.,  8344.,  8412.,  8480.,  3069.,  3102.,  3135.,  3168.,  3201.,  3234.,  3267.,  3300.,  6223.,  6290.,  6357.,  6424.,  6491.,  6558.,  6625.,  6692.,  6759.,  6826.,  6893.,  6960.,  3298.,  3332.,  3366.,  3400.,  6409.,  6478.,  6547.,  6616.,  6685.,  6754.,  6823.,  6892.,  6961.,  7030.,  7099.,  7168.,  3395.,  3430.,  3465.,  3500.,  6595.,  6666.,  6737.,  6808.,  6879.,  6950.,  7021.,  7092.,  7163.,  7234.,  7305.,  7376.,  3492.,  3528.,  3564.,  3600.,  3993.,  4026.,  4059.,  4092.,  4125.,  4158.,  4191.,  4224.,  8099.,  8166.,  8233.,  8300.,  8367.,  8434.,  8501.,  8568.,  8635.,  8702.,  8769.,  8836.,  4250.,  4284.,  4318.,  4352.,  8341.,  8410.,  8479.,  8548.,  8617.,  8686.,  8755.,  8824.,  8893.,  8962.,  9031.,  9100.,  4375.,  4410.,  4445.,  4480.,  8583.,  8654.,  8725.,  8796.,  8867.,  8938.,  9009.,  9080.,  9151.,  9222.,  9293.,  9364.,  4500.,  4536.,  4572.,  4608.};
  const std::array<int, 4> in_shape = {{ 3, 11, 14, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x14x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,    9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   19.,   22.,   25.,   28.,   31.,   34.,   37.,   40.,   43.,   46.,   49.,   52.,   26.,   28.,   30.,   32.,   34.,   36.,   38.,   40.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,  103.,  106.,  109.,  112.,  115.,  118.,  121.,  124.,  127.,  130.,  133.,  136.,   82.,   84.,   86.,   88.,   90.,   92.,   94.,   96.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,   57.,   58.,   59.,   60.,   61.,   62.,   63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  146.,  148.,  150.,  152.,  154.,  156.,  158.,  160.,  162.,  164.,  166.,  168.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,   85.,   86.,   87.,   88.,   89.,   90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  202.,  204.,  206.,  208.,  210.,  212.,  214.,  216.,  218.,  220.,  222.,  224.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  148.,  152.,  156.,  160.,  164.,  168.,  172.,  176.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  302.,  308.,  314.,  320.,  326.,  332.,  338.,  344.,  350.,  356.,  362.,  368.,  374.,  380.,  386.,  392.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  228.,  232.,  236.,  240.,  244.,  248.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,  284.,  288.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  470.,  476.,  482.,  488.,  494.,  500.,  506.,  512.,  518.,  524.,  530.,  536.,  542.,  548.,  554.,  560.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  340.,  344.,  348.,  352.,  356.,  360.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,  396.,  400.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080.,  638.,  644.,  650.,  656.,  662.,  668.,  674.,  680.,  686.,  692.,  698.,  704.,  710.,  716.,  722.,  728.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  279.,  282.,  285.,  288.,  291.,  294.,  297.,  300.,  643.,  650.,  657.,  664.,  671.,  678.,  685.,  692.,  699.,  706.,  713.,  720.,  388.,  392.,  396.,  400.,  404.,  408.,  412.,  416.,  420.,  424.,  428.,  432.,  436.,  440.,  444.,  448.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  339.,  342.,  345.,  348.,  351.,  354.,  357.,  360.,  363.,  366.,  369.,  372.,  375.,  378.,  381.,  384.,  839.,  846.,  853.,  860.,  867.,  874.,  881.,  888.,  895.,  902.,  909.,  916.,  500.,  504.,  508.,  512.,  516.,  520.,  524.,  528.,  532.,  536.,  540.,  544.,  548.,  552.,  556.,  560.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  423.,  426.,  429.,  432.,  435.,  438.,  441.,  444.,  447.,  450.,  453.,  456.,  459.,  462.,  465.,  468., 1035., 1042., 1049., 1056., 1063., 1070., 1077., 1084., 1091., 1098., 1105., 1112.,  612.,  616.,  620.,  624.,  628.,  632.,  636.,  640.,  644.,  648.,  652.,  656.,  660.,  664.,  668.,  672.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  507.,  510.,  513.,  516.,  519.,  522.,  525.,  528.,  531.,  534.,  537.,  540.,  543.,  546.,  549.,  552., 1231., 1238., 1245., 1252., 1259., 1266., 1273., 1280., 1287., 1294., 1301., 1308.,  724.,  728.,  732.,  736.,  740.,  744.,  748.,  752.,  756.,  760.,  764.,  768.,  772.,  776.,  780.,  784.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    5.,   10.,   15.,   20.,   25.,   30.,   35.,   40.,   45.,   50.,   55.,   60.,   65.,   70.,   75.,   80.,   91.,  102.,  113.,  124.,  135.,  146.,  157.,  168.,  179.,  190.,  201.,  212.,   78.,   84.,   90.,   96.,  102.,  108.,  114.,  120.,  126.,  132.,  138.,  144.,  150.,  156.,  162.,  168.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  145.,  150.,  155.,  160.,  165.,  170.,  175.,  180.,  185.,  190.,  195.,  200.,  205.,  210.,  215.,  220.,  399.,  410.,  421.,  432.,  443.,  454.,  465.,  476.,  487.,  498.,  509.,  520.,  246.,  252.,  258.,  264.,  270.,  276.,  282.,  288.,  294.,  300.,  306.,  312.,  318.,  324.,  330.,  336.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  285.,  290.,  295.,  300.,  305.,  310.,  315.,  320.,  325.,  330.,  335.,  340.,  345.,  350.,  355.,  360.,  707.,  718.,  729.,  740.,  751.,  762.,  773.,  784.,  795.,  806.,  817.,  828.,  414.,  420.,  426.,  432.,  438.,  444.,  450.,  456.,  462.,  468.,  474.,  480.,  486.,  492.,  498.,  504.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  425.,  430.,  435.,  440.,  445.,  450.,  455.,  460.,  465.,  470.,  475.,  480.,  485.,  490.,  495.,  500., 1015., 1026., 1037., 1048., 1059., 1070., 1081., 1092., 1103., 1114., 1125., 1136.,  582.,  588.,  594.,  600.,  606.,  612.,  618.,  624.,  630.,  636.,  642.,  648.,  654.,  660.,  666.,  672.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  572.,  584.,  596.,  608.,  620.,  632.,  644.,  656.,  668.,  680.,  692.,  704.,  716.,  728.,  740.,  752., 1450., 1476., 1502., 1528., 1554., 1580., 1606., 1632., 1658., 1684., 1710., 1736.,  854.,  868.,  882.,  896.,  910.,  924.,  938.,  952.,  966.,  980.,  994., 1008., 1022., 1036., 1050., 1064.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  908.,  920.,  932.,  944.,  956.,  968.,  980.,  992., 1004., 1016., 1028., 1040., 1052., 1064., 1076., 1088., 2178., 2204., 2230., 2256., 2282., 2308., 2334., 2360., 2386., 2412., 2438., 2464., 1246., 1260., 1274., 1288., 1302., 1316., 1330., 1344., 1358., 1372., 1386., 1400., 1414., 1428., 1442., 1456.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1244., 1256., 1268., 1280., 1292., 1304., 1316., 1328., 1340., 1352., 1364., 1376., 1388., 1400., 1412., 1424., 2906., 2932., 2958., 2984., 3010., 3036., 3062., 3088., 3114., 3140., 3166., 3192., 1638., 1652., 1666., 1680., 1694., 1708., 1722., 1736., 1750., 1764., 1778., 1792., 1806., 1820., 1834., 1848.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  595.,  602.,  609.,  616.,  623.,  630.,  637.,  644.,  651.,  658.,  665.,  672.,  679.,  686.,  693.,  700., 1387., 1402., 1417., 1432., 1447., 1462., 1477., 1492., 1507., 1522., 1537., 1552.,  776.,  784.,  792.,  800.,  808.,  816.,  824.,  832.,  840.,  848.,  856.,  864.,  872.,  880.,  888.,  896.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  791.,  798.,  805.,  812.,  819.,  826.,  833.,  840.,  847.,  854.,  861.,  868.,  875.,  882.,  889.,  896., 1807., 1822., 1837., 1852., 1867., 1882., 1897., 1912., 1927., 1942., 1957., 1972., 1000., 1008., 1016., 1024., 1032., 1040., 1048., 1056., 1064., 1072., 1080., 1088., 1096., 1104., 1112., 1120.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  987.,  994., 1001., 1008., 1015., 1022., 1029., 1036., 1043., 1050., 1057., 1064., 1071., 1078., 1085., 1092., 2227., 2242., 2257., 2272., 2287., 2302., 2317., 2332., 2347., 2362., 2377., 2392., 1224., 1232., 1240., 1248., 1256., 1264., 1272., 1280., 1288., 1296., 1304., 1312., 1320., 1328., 1336., 1344.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1183., 1190., 1197., 1204., 1211., 1218., 1225., 1232., 1239., 1246., 1253., 1260., 1267., 1274., 1281., 1288., 2647., 2662., 2677., 2692., 2707., 2722., 2737., 2752., 2767., 2782., 2797., 2812., 1448., 1456., 1464., 1472., 1480., 1488., 1496., 1504., 1512., 1520., 1528., 1536., 1544., 1552., 1560., 1568.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    9.,   18.,   27.,   36.,   45.,   54.,   63.,   72.,   81.,   90.,   99.,  108.,  117.,  126.,  135.,  144.,  163.,  182.,  201.,  220.,  239.,  258.,  277.,  296.,  315.,  334.,  353.,  372.,  130.,  140.,  150.,  160.,  170.,  180.,  190.,  200.,  210.,  220.,  230.,  240.,  250.,  260.,  270.,  280.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  261.,  270.,  279.,  288.,  297.,  306.,  315.,  324.,  333.,  342.,  351.,  360.,  369.,  378.,  387.,  396.,  695.,  714.,  733.,  752.,  771.,  790.,  809.,  828.,  847.,  866.,  885.,  904.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  530.,  540.,  550.,  560.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  513.,  522.,  531.,  540.,  549.,  558.,  567.,  576.,  585.,  594.,  603.,  612.,  621.,  630.,  639.,  648., 1227., 1246., 1265., 1284., 1303., 1322., 1341., 1360., 1379., 1398., 1417., 1436.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  810.,  820.,  830.,  840.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  765.,  774.,  783.,  792.,  801.,  810.,  819.,  828.,  837.,  846.,  855.,  864.,  873.,  882.,  891.,  900., 1759., 1778., 1797., 1816., 1835., 1854., 1873., 1892., 1911., 1930., 1949., 1968.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080., 1090., 1100., 1110., 1120.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1028., 1048., 1068., 1088., 1108., 1128., 1148., 1168., 1188., 1208., 1228., 1248., 1268., 1288., 1308., 1328., 2490., 2532., 2574., 2616., 2658., 2700., 2742., 2784., 2826., 2868., 2910., 2952., 1406., 1428., 1450., 1472., 1494., 1516., 1538., 1560., 1582., 1604., 1626., 1648., 1670., 1692., 1714., 1736.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1588., 1608., 1628., 1648., 1668., 1688., 1708., 1728., 1748., 1768., 1788., 1808., 1828., 1848., 1868., 1888., 3666., 3708., 3750., 3792., 3834., 3876., 3918., 3960., 4002., 4044., 4086., 4128., 2022., 2044., 2066., 2088., 2110., 2132., 2154., 2176., 2198., 2220., 2242., 2264., 2286., 2308., 2330., 2352.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 2148., 2168., 2188., 2208., 2228., 2248., 2268., 2288., 2308., 2328., 2348., 2368., 2388., 2408., 2428., 2448., 4842., 4884., 4926., 4968., 5010., 5052., 5094., 5136., 5178., 5220., 5262., 5304., 2638., 2660., 2682., 2704., 2726., 2748., 2770., 2792., 2814., 2836., 2858., 2880., 2902., 2924., 2946., 2968.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  935.,  946.,  957.,  968.,  979.,  990., 1001., 1012., 1023., 1034., 1045., 1056., 1067., 1078., 1089., 1100., 2131., 2154., 2177., 2200., 2223., 2246., 2269., 2292., 2315., 2338., 2361., 2384., 1164., 1176., 1188., 1200., 1212., 1224., 1236., 1248., 1260., 1272., 1284., 1296., 1308., 1320., 1332., 1344.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1243., 1254., 1265., 1276., 1287., 1298., 1309., 1320., 1331., 1342., 1353., 1364., 1375., 1386., 1397., 1408., 2775., 2798., 2821., 2844., 2867., 2890., 2913., 2936., 2959., 2982., 3005., 3028., 1500., 1512., 1524., 1536., 1548., 1560., 1572., 1584., 1596., 1608., 1620., 1632., 1644., 1656., 1668., 1680.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1551., 1562., 1573., 1584., 1595., 1606., 1617., 1628., 1639., 1650., 1661., 1672., 1683., 1694., 1705., 1716., 3419., 3442., 3465., 3488., 3511., 3534., 3557., 3580., 3603., 3626., 3649., 3672., 1836., 1848., 1860., 1872., 1884., 1896., 1908., 1920., 1932., 1944., 1956., 1968., 1980., 1992., 2004., 2016.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1859., 1870., 1881., 1892., 1903., 1914., 1925., 1936., 1947., 1958., 1969., 1980., 1991., 2002., 2013., 2024., 4063., 4086., 4109., 4132., 4155., 4178., 4201., 4224., 4247., 4270., 4293., 4316., 2172., 2184., 2196., 2208., 2220., 2232., 2244., 2256., 2268., 2280., 2292., 2304., 2316., 2328., 2340., 2352.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 3, 11, 14, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x14x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,   400.,   420.,   440.,   460.,   480.,   500.,   520.,   540.,   112.,   132.,   152.,   172.,    67.,    81.,    95.,   109.,   668.,   704.,   740.,   776.,   812.,   848.,   884.,   920.,   252.,   288.,   324.,   360.,   105.,   127.,   149.,   171.,   936.,   988.,  1040.,  1092.,  1144.,  1196.,  1248.,  1300.,   392.,   444.,   496.,   548.,   143.,   173.,   203.,   233.,   173.,   179.,   185.,   191.,     5.,    11.,    17.,    23.,   320.,   340.,   360.,   380.,   400.,   420.,   440.,   460.,   480.,   500.,   520.,   540.,    11.,    25.,    39.,    53.,   524.,   560.,   596.,   632.,   668.,   704.,   740.,   776.,   812.,   848.,   884.,   920.,    17.,    39.,    61.,    83.,   728.,   780.,   832.,   884.,   936.,   988.,  1040.,  1092.,  1144.,  1196.,  1248.,  1300.,    23.,    53.,    83.,   113.,   482.,   526.,   570.,   614.,   658.,   702.,   746.,   790.,   912.,  1016.,  1120.,  1224.,  1328.,  1432.,  1536.,  1640.,  1744.,  1848.,  1952.,  2056.,   990.,  1050.,  1110.,  1170.,  1192.,  1328.,  1464.,  1600.,  1736.,  1872.,  2008.,  2144.,  2280.,  2416.,  2552.,  2688.,  1322.,  1398.,  1474.,  1550.,  1472.,  1640.,  1808.,  1976.,  2144.,  2312.,  2480.,  2648.,  2816.,  2984.,  3152.,  3320.,  1654.,  1746.,  1838.,  1930.,   306.,   350.,   394.,   438.,   482.,   526.,   570.,   614.,  2160.,  2264.,  2368.,  2472.,   912.,  1016.,  1120.,  1224.,  1328.,  1432.,  1536.,  1640.,   750.,   810.,   870.,   930.,  2824.,  2960.,  3096.,  3232.,  1192.,  1328.,  1464.,  1600.,  1736.,  1872.,  2008.,  2144.,  1018.,  1094.,  1170.,  1246.,  3488.,  3656.,  3824.,  3992.,  1472.,  1640.,  1808.,  1976.,  2144.,  2312.,  2480.,  2648.,  1286.,  1378.,  1470.,  1562.,   130.,   174.,   218.,   262.,   306.,   350.,   394.,   438.,  1744.,  1848.,  1952.,  2056.,  2160.,  2264.,  2368.,  2472.,   912.,  1016.,  1120.,  1224.,   510.,   570.,   630.,   690.,  2280.,  2416.,  2552.,  2688.,  2824.,  2960.,  3096.,  3232.,  1192.,  1328.,  1464.,  1600.,   714.,   790.,   866.,   942.,  2816.,  2984.,  3152.,  3320.,  3488.,  3656.,  3824.,  3992.,  1472.,  1640.,  1808.,  1976.,   918.,  1010.,  1102.,  1194.,  1093.,  1131.,  1169.,  1207.,    29.,    67.,   105.,   143.,  1136.,  1220.,  1304.,  1388.,  1472.,  1556.,  1640.,  1724.,  1808.,  1892.,  1976.,  2060.,    35.,    81.,   127.,   173.,  1340.,  1440.,  1540.,  1640.,  1740.,  1840.,  1940.,  2040.,  2140.,  2240.,  2340.,  2440.,    41.,    95.,   149.,   203.,  1544.,  1660.,  1776.,  1892.,  2008.,  2124.,  2240.,  2356.,  2472.,  2588.,  2704.,  2820.,    47.,   109.,   171.,   233.,  1554.,  1662.,  1770.,  1878.,  1986.,  2094.,  2202.,  2310.,  2032.,  2264.,  2496.,  2728.,  2960.,  3192.,  3424.,  3656.,  3888.,  4120.,  4352.,  4584.,  2318.,  2442.,  2566.,  2690.,  2312.,  2576.,  2840.,  3104.,  3368.,  3632.,  3896.,  4160.,  4424.,  4688.,  4952.,  5216.,  2650.,  2790.,  2930.,  3070.,  2592.,  2888.,  3184.,  3480.,  3776.,  4072.,  4368.,  4664.,  4960.,  5256.,  5552.,  5848.,  2982.,  3138.,  3294.,  3450.,  1122.,  1230.,  1338.,  1446.,  1554.,  1662.,  1770.,  1878.,  4816.,  5048.,  5280.,  5512.,  2032.,  2264.,  2496.,  2728.,  2960.,  3192.,  3424.,  3656.,  1822.,  1946.,  2070.,  2194.,  5480.,  5744.,  6008.,  6272.,  2312.,  2576.,  2840.,  3104.,  3368.,  3632.,  3896.,  4160.,  2090.,  2230.,  2370.,  2510.,  6144.,  6440.,  6736.,  7032.,  2592.,  2888.,  3184.,  3480.,  3776.,  4072.,  4368.,  4664.,  2358.,  2514.,  2670.,  2826.,   690.,   798.,   906.,  1014.,  1122.,  1230.,  1338.,  1446.,  3888.,  4120.,  4352.,  4584.,  4816.,  5048.,  5280.,  5512.,  2032.,  2264.,  2496.,  2728.,  1326.,  1450.,  1574.,  1698.,  4424.,  4688.,  4952.,  5216.,  5480.,  5744.,  6008.,  6272.,  2312.,  2576.,  2840.,  3104.,  1530.,  1670.,  1810.,  1950.,  4960.,  5256.,  5552.,  5848.,  6144.,  6440.,  6736.,  7032.,  2592.,  2888.,  3184.,  3480.,  1734.,  1890.,  2046.,  2202.,  2013.,  2083.,  2153.,  2223.,    53.,   123.,   193.,   263.,  1952.,  2100.,  2248.,  2396.,  2544.,  2692.,  2840.,  2988.,  3136.,  3284.,  3432.,  3580.,    59.,   137.,   215.,   293.,  2156.,  2320.,  2484.,  2648.,  2812.,  2976.,  3140.,  3304.,  3468.,  3632.,  3796.,  3960.,    65.,   151.,   237.,   323.,  2360.,  2540.,  2720.,  2900.,  3080.,  3260.,  3440.,  3620.,  3800.,  3980.,  4160.,  4340.,    71.,   165.,   259.,   353.,  1733.,  1803.,  1873.,  1943.,  2013.,  2083.,  2153.,  2223.,  1360.,  1508.,  1656.,  1804.,  1952.,  2100.,  2248.,  2396.,  2544.,  2692.,  2840.,  2988.,  2243.,  2321.,  2399.,  2477.,  1500.,  1664.,  1828.,  1992.,  2156.,  2320.,  2484.,  2648.,  2812.,  2976.,  3140.,  3304.,  2473.,  2559.,  2645.,  2731.,  1640.,  1820.,  2000.,  2180.,  2360.,  2540.,  2720.,  2900.,  3080.,  3260.,  3440.,  3620.,  2703.,  2797.,  2891.,  2985.,    77.,   179.,   281.,   383.,   485.,   587.,   689.,   791.,  3616.,  3828.,  4040.,  4252.,  4464.,  4676.,  4888.,  5100.,  1792.,  2004.,  2216.,  2428.,   523.,   633.,   743.,   853.,  3884.,  4112.,  4340.,  4568.,  4796.,  5024.,  5252.,  5480.,  1932.,  2160.,  2388.,  2616.,   561.,   679.,   797.,   915.,  4152.,  4396.,  4640.,  4884.,  5128.,  5372.,  5616.,  5860.,  2072.,  2316.,  2560.,  2804.,   599.,   725.,   851.,   977.,  2933.,  3035.,  3137.,  3239.,    77.,   179.,   281.,   383.,  2768.,  2980.,  3192.,  3404.,  3616.,  3828.,  4040.,  4252.,  4464.,  4676.,  4888.,  5100.,    83.,   193.,   303.,   413.,  2972.,  3200.,  3428.,  3656.,  3884.,  4112.,  4340.,  4568.,  4796.,  5024.,  5252.,  5480.,    89.,   207.,   325.,   443.,  3176.,  3420.,  3664.,  3908.,  4152.,  4396.,  4640.,  4884.,  5128.,  5372.,  5616.,  5860.,    95.,   221.,   347.,   473.,  3698.,  3934.,  4170.,  4406.,  4642.,  4878.,  5114.,  5350.,  4272.,  4760.,  5248.,  5736.,  6224.,  6712.,  7200.,  7688.,  8176.,  8664.,  9152.,  9640.,  4974.,  5226.,  5478.,  5730.,  4552.,  5072.,  5592.,  6112.,  6632.,  7152.,  7672.,  8192.,  8712.,  9232.,  9752., 10272.,  5306.,  5574.,  5842.,  6110.,  4832.,  5384.,  5936.,  6488.,  7040.,  7592.,  8144.,  8696.,  9248.,  9800., 10352., 10904.,  5638.,  5922.,  6206.,  6490.,  2754.,  2990.,  3226.,  3462.,  3698.,  3934.,  4170.,  4406., 10128., 10616., 11104., 11592.,  4272.,  4760.,  5248.,  5736.,  6224.,  6712.,  7200.,  7688.,  3966.,  4218.,  4470.,  4722., 10792., 11312., 11832., 12352.,  4552.,  5072.,  5592.,  6112.,  6632.,  7152.,  7672.,  8192.,  4234.,  4502.,  4770.,  5038., 11456., 12008., 12560., 13112.,  4832.,  5384.,  5936.,  6488.,  7040.,  7592.,  8144.,  8696.,  4502.,  4786.,  5070.,  5354.,  1810.,  2046.,  2282.,  2518.,  2754.,  2990.,  3226.,  3462.,  8176.,  8664.,  9152.,  9640., 10128., 10616., 11104., 11592.,  4272.,  4760.,  5248.,  5736.,  2958.,  3210.,  3462.,  3714.,  8712.,  9232.,  9752., 10272., 10792., 11312., 11832., 12352.,  4552.,  5072.,  5592.,  6112.,  3162.,  3430.,  3698.,  3966.,  9248.,  9800., 10352., 10904., 11456., 12008., 12560., 13112.,  4832.,  5384.,  5936.,  6488.,  3366.,  3650.,  3934.,  4218.,  3853.,  3987.,  4121.,  4255.,   101.,   235.,   369.,   503.,  3584.,  3860.,  4136.,  4412.,  4688.,  4964.,  5240.,  5516.,  5792.,  6068.,  6344.,  6620.,   107.,   249.,   391.,   533.,  3788.,  4080.,  4372.,  4664.,  4956.,  5248.,  5540.,  5832.,  6124.,  6416.,  6708.,  7000.,   113.,   263.,   413.,   563.,  3992.,  4300.,  4608.,  4916.,  5224.,  5532.,  5840.,  6148.,  6456.,  6764.,  7072.,  7380.,   119.,   277.,   435.,   593.,  4770.,  5070.,  5370.,  5670.,  5970.,  6270.,  6570.,  6870.,  5392.,  6008.,  6624.,  7240.,  7856.,  8472.,  9088.,  9704., 10320., 10936., 11552., 12168.,  6302.,  6618.,  6934.,  7250.,  5672.,  6320.,  6968.,  7616.,  8264.,  8912.,  9560., 10208., 10856., 11504., 12152., 12800.,  6634.,  6966.,  7298.,  7630.,  5952.,  6632.,  7312.,  7992.,  8672.,  9352., 10032., 10712., 11392., 12072., 12752., 13432.,  6966.,  7314.,  7662.,  8010.,  3570.,  3870.,  4170.,  4470.,  4770.,  5070.,  5370.,  5670., 12784., 13400., 14016., 14632.,  5392.,  6008.,  6624.,  7240.,  7856.,  8472.,  9088.,  9704.,  5038.,  5354.,  5670.,  5986., 13448., 14096., 14744., 15392.,  5672.,  6320.,  6968.,  7616.,  8264.,  8912.,  9560., 10208.,  5306.,  5638.,  5970.,  6302., 14112., 14792., 15472., 16152.,  5952.,  6632.,  7312.,  7992.,  8672.,  9352., 10032., 10712.,  5574.,  5922.,  6270.,  6618.,  2370.,  2670.,  2970.,  3270.,  3570.,  3870.,  4170.,  4470., 10320., 10936., 11552., 12168., 12784., 13400., 14016., 14632.,  5392.,  6008.,  6624.,  7240.,  3774.,  4090.,  4406.,  4722., 10856., 11504., 12152., 12800., 13448., 14096., 14744., 15392.,  5672.,  6320.,  6968.,  7616.,  3978.,  4310.,  4642.,  4974., 11392., 12072., 12752., 13432., 14112., 14792., 15472., 16152.,  5952.,  6632.,  7312.,  7992.,  4182.,  4530.,  4878.,  5226.,  4773.,  4939.,  5105.,  5271.,   125.,   291.,   457.,   623.,  4400.,  4740.,  5080.,  5420.,  5760.,  6100.,  6440.,  6780.,  7120.,  7460.,  7800.,  8140.,   131.,   305.,   479.,   653.,  4604.,  4960.,  5316.,  5672.,  6028.,  6384.,  6740.,  7096.,  7452.,  7808.,  8164.,  8520.,   137.,   319.,   501.,   683.,  4808.,  5180.,  5552.,  5924.,  6296.,  6668.,  7040.,  7412.,  7784.,  8156.,  8528.,  8900.,   143.,   333.,   523.,   713.,  4109.,  4275.,  4441.,  4607.,  4773.,  4939.,  5105.,  5271.,  3040.,  3380.,  3720.,  4060.,  4400.,  4740.,  5080.,  5420.,  5760.,  6100.,  6440.,  6780.,  5003.,  5177.,  5351.,  5525.,  3180.,  3536.,  3892.,  4248.,  4604.,  4960.,  5316.,  5672.,  6028.,  6384.,  6740.,  7096.,  5233.,  5415.,  5597.,  5779.,  3320.,  3692.,  4064.,  4436.,  4808.,  5180.,  5552.,  5924.,  6296.,  6668.,  7040.,  7412.,  5463.,  5653.,  5843.,  6033.,   149.,   347.,   545.,   743.,   941.,  1139.,  1337.,  1535.,  6832.,  7236.,  7640.,  8044.,  8448.,  8852.,  9256.,  9660.,  3472.,  3876.,  4280.,  4684.,   979.,  1185.,  1391.,  1597.,  7100.,  7520.,  7940.,  8360.,  8780.,  9200.,  9620., 10040.,  3612.,  4032.,  4452.,  4872.,  1017.,  1231.,  1445.,  1659.,  7368.,  7804.,  8240.,  8676.,  9112.,  9548.,  9984., 10420.,  3752.,  4188.,  4624.,  5060.,  1055.,  1277.,  1499.,  1721.,  5693.,  5891.,  6089.,  6287.,   149.,   347.,   545.,   743.,  5216.,  5620.,  6024.,  6428.,  6832.,  7236.,  7640.,  8044.,  8448.,  8852.,  9256.,  9660.,   155.,   361.,   567.,   773.,  5420.,  5840.,  6260.,  6680.,  7100.,  7520.,  7940.,  8360.,  8780.,  9200.,  9620., 10040.,   161.,   375.,   589.,   803.,  5624.,  6060.,  6496.,  6932.,  7368.,  7804.,  8240.,  8676.,  9112.,  9548.,  9984., 10420.,   167.,   389.,   611.,   833.,  6914.,  7342.,  7770.,  8198.,  8626.,  9054.,  9482.,  9910.,  7632.,  8504.,  9376., 10248., 11120., 11992., 12864., 13736., 14608., 15480., 16352., 17224.,  8958.,  9402.,  9846., 10290.,  7912.,  8816.,  9720., 10624., 11528., 12432., 13336., 14240., 15144., 16048., 16952., 17856.,  9290.,  9750., 10210., 10670.,  8192.,  9128., 10064., 11000., 11936., 12872., 13808., 14744., 15680., 16616., 17552., 18488.,  9622., 10098., 10574., 11050.,  5202.,  5630.,  6058.,  6486.,  6914.,  7342.,  7770.,  8198., 18096., 18968., 19840., 20712.,  7632.,  8504.,  9376., 10248., 11120., 11992., 12864., 13736.,  7182.,  7626.,  8070.,  8514., 18760., 19664., 20568., 21472.,  7912.,  8816.,  9720., 10624., 11528., 12432., 13336., 14240.,  7450.,  7910.,  8370.,  8830., 19424., 20360., 21296., 22232.,  8192.,  9128., 10064., 11000., 11936., 12872., 13808., 14744.,  7718.,  8194.,  8670.,  9146.,  3490.,  3918.,  4346.,  4774.,  5202.,  5630.,  6058.,  6486., 14608., 15480., 16352., 17224., 18096., 18968., 19840., 20712.,  7632.,  8504.,  9376., 10248.,  5406.,  5850.,  6294.,  6738., 15144., 16048., 16952., 17856., 18760., 19664., 20568., 21472.,  7912.,  8816.,  9720., 10624.,  5610.,  6070.,  6530.,  6990., 15680., 16616., 17552., 18488., 19424., 20360., 21296., 22232.,  8192.,  9128., 10064., 11000.,  5814.,  6290.,  6766.,  7242.,  6613.,  6843.,  7073.,  7303.,   173.,   403.,   633.,   863.,  6032.,  6500.,  6968.,  7436.,  7904.,  8372.,  8840.,  9308.,  9776., 10244., 10712., 11180.,   179.,   417.,   655.,   893.,  6236.,  6720.,  7204.,  7688.,  8172.,  8656.,  9140.,  9624., 10108., 10592., 11076., 11560.,   185.,   431.,   677.,   923.,  6440.,  6940.,  7440.,  7940.,  8440.,  8940.,  9440.,  9940., 10440., 10940., 11440., 11940.,   191.,   445.,   699.,   953.,  5746.,  5982.,  6218.,  6454.,  6690.,  6926.,  7162.,  7398.,  4272.,  4760.,  5248.,  5736.,  6224.,  6712.,  7200.,  7688.,  8176.,  8664.,  9152.,  9640.,  7022.,  7274.,  7526.,  7778.,  4552.,  5072.,  5592.,  6112.,  6632.,  7152.,  7672.,  8192.,  8712.,  9232.,  9752., 10272.,  7354.,  7622.,  7890.,  8158.,  4832.,  5384.,  5936.,  6488.,  7040.,  7592.,  8144.,  8696.,  9248.,  9800., 10352., 10904.,  7686.,  7970.,  8254.,  8538.,  4802.,  5038.,  5274.,  5510.,  5746.,  5982.,  6218.,  6454., 10128., 10616., 11104., 11592.,  4272.,  4760.,  5248.,  5736.,  6224.,  6712.,  7200.,  7688.,  6014.,  6266.,  6518.,  6770., 10792., 11312., 11832., 12352.,  4552.,  5072.,  5592.,  6112.,  6632.,  7152.,  7672.,  8192.,  6282.,  6550.,  6818.,  7086., 11456., 12008., 12560., 13112.,  4832.,  5384.,  5936.,  6488.,  7040.,  7592.,  8144.,  8696.,  6550.,  6834.,  7118.,  7402.,  3858.,  4094.,  4330.,  4566.,  4802.,  5038.,  5274.,  5510.,  8176.,  8664.,  9152.,  9640., 10128., 10616., 11104., 11592.,  4272.,  4760.,  5248.,  5736.,  5006.,  5258.,  5510.,  5762.,  8712.,  9232.,  9752., 10272., 10792., 11312., 11832., 12352.,  4552.,  5072.,  5592.,  6112.,  5210.,  5478.,  5746.,  6014.,  9248.,  9800., 10352., 10904., 11456., 12008., 12560., 13112.,  4832.,  5384.,  5936.,  6488.,  5414.,  5698.,  5982.,  6266.,   173.,   179.,   185.,   191.,     5.,    11.,    17.,    23.,   320.,   340.,   360.,   380.,   400.,   420.,   440.,   460.,   480.,   500.,   520.,   540.,    11.,    25.,    39.,    53.,   524.,   560.,   596.,   632.,   668.,   704.,   740.,   776.,   812.,   848.,   884.,   920.,    17.,    39.,    61.,    83.,   728.,   780.,   832.,   884.,   936.,   988.,  1040.,  1092.,  1144.,  1196.,  1248.,  1300.,    23.,    53.,    83.,   113.,   149.,   155.,   161.,   167.,   173.,   179.,   185.,   191.,   240.,   260.,   280.,   300.,   320.,   340.,   360.,   380.,   400.,   420.,   440.,   460.,   403.,   417.,   431.,   445.,   380.,   416.,   452.,   488.,   524.,   560.,   596.,   632.,   668.,   704.,   740.,   776.,   633.,   655.,   677.,   699.,   520.,   572.,   624.,   676.,   728.,   780.,   832.,   884.,   936.,   988.,  1040.,  1092.,   863.,   893.,   923.,   953.};
  const std::array<int, 4> in_shape = {{ 3, 11, 14, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x14x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,    53.,    59.,    65.,    71.,    77.,    83.,    89.,    95.,   112.,   132.,   152.,   172.,   192.,   212.,   232.,   252.,   272.,   292.,   312.,   332.,   179.,   193.,   207.,   221.,   235.,   249.,   263.,   277.,   291.,   305.,   319.,   333.,   347.,   361.,   375.,   389.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   173.,   179.,   185.,   191.,   197.,   203.,   209.,   215.,   221.,   227.,   233.,   239.,   245.,   251.,   257.,   263.,   672.,   692.,   712.,   732.,   752.,   772.,   792.,   812.,   832.,   852.,   872.,   892.,   571.,   585.,   599.,   613.,   627.,   641.,   655.,   669.,   683.,   697.,   711.,   725.,   739.,   753.,   767.,   781.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   341.,   347.,   353.,   359.,   365.,   371.,   377.,   383.,   389.,   395.,   401.,   407.,   413.,   419.,   425.,   431.,  1232.,  1252.,  1272.,  1292.,  1312.,  1332.,  1352.,  1372.,  1392.,  1412.,  1432.,  1452.,   963.,   977.,   991.,  1005.,  1019.,  1033.,  1047.,  1061.,  1075.,  1089.,  1103.,  1117.,  1131.,  1145.,  1159.,  1173.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   509.,   515.,   521.,   527.,   533.,   539.,   545.,   551.,   557.,   563.,   569.,   575.,   581.,   587.,   593.,   599.,  1792.,  1812.,  1832.,  1852.,  1872.,  1892.,  1912.,  1932.,  1952.,  1972.,  1992.,  2012.,  1355.,  1369.,  1383.,  1397.,  1411.,  1425.,  1439.,  1453.,  1467.,  1481.,  1495.,  1509.,  1523.,  1537.,  1551.,  1565.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   694.,   722.,   750.,   778.,   806.,   834.,   862.,   890.,   918.,   946.,   974.,  1002.,  1030.,  1058.,  1086.,  1114.,  1976.,  2048.,  2120.,  2192.,  2264.,  2336.,  2408.,  2480.,  2552.,  2624.,  2696.,  2768.,  2130.,  2174.,  2218.,  2262.,   514.,   558.,   602.,   646.,   690.,   734.,   778.,   822.,   866.,   910.,   954.,   998.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   710.,   738.,   766.,   794.,   822.,   850.,   878.,   906.,   934.,   962.,   990.,  1018.,  1046.,  1074.,  1102.,  1130.,  2200.,  2272.,  2344.,  2416.,  2488.,  2560.,  2632.,  2704.,  2776.,  2848.,  2920.,  2992.,  1570.,  1614.,  1658.,  1702.,  1746.,  1790.,  1834.,  1878.,  1922.,  1966.,  2010.,  2054.,  2098.,  2142.,  2186.,  2230.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1494.,  1522.,  1550.,  1578.,  1606.,  1634.,  1662.,  1690.,  1718.,  1746.,  1774.,  1802.,  1830.,  1858.,  1886.,  1914.,  4216.,  4288.,  4360.,  4432.,  4504.,  4576.,  4648.,  4720.,  4792.,  4864.,  4936.,  5008.,  2802.,  2846.,  2890.,  2934.,  2978.,  3022.,  3066.,  3110.,  3154.,  3198.,  3242.,  3286.,  3330.,  3374.,  3418.,  3462.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1865.,  1887.,  1909.,  1931.,  1953.,  1975.,  1997.,  2019.,  2041.,  2063.,  2085.,  2107.,  2129.,  2151.,  2173.,  2195.,  4760.,  4812.,  4864.,  4916.,  4968.,  5020.,  5072.,  5124.,  5176.,  5228.,  5280.,  5332.,  2903.,  2933.,  2963.,  2993.,  3023.,  3053.,  3083.,  3113.,  3143.,  3173.,  3203.,  3233.,  3263.,  3293.,  3323.,  3353.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  2481.,  2503.,  2525.,  2547.,  2569.,  2591.,  2613.,  2635.,  2657.,  2679.,  2701.,  2723.,  2745.,  2767.,  2789.,  2811.,  3400.,  3452.,  3504.,  3556.,  3608.,  3660.,  3712.,  3764.,  3816.,  3868.,  3920.,  3972.,  3743.,  3773.,  3803.,  3833.,    23.,    53.,    83.,   113.,   143.,   173.,   203.,   233.,   263.,   293.,   323.,   353.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   281.,   303.,   325.,   347.,   369.,   391.,   413.,   435.,   457.,   479.,   501.,   523.,   545.,   567.,   589.,   611.,  1016.,  1068.,  1120.,  1172.,  1224.,  1276.,  1328.,  1380.,  1432.,  1484.,  1536.,  1588.,   743.,   773.,   803.,   833.,   863.,   893.,   923.,   953.,   983.,  1013.,  1043.,  1073.,  1103.,  1133.,  1163.,  1193.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   897.,   919.,   941.,   963.,   985.,  1007.,  1029.,  1051.,  1073.,  1095.,  1117.,  1139.,  1161.,  1183.,  1205.,  1227.,  2472.,  2524.,  2576.,  2628.,  2680.,  2732.,  2784.,  2836.,  2888.,  2940.,  2992.,  3044.,  1583.,  1613.,  1643.,  1673.,  1703.,  1733.,  1763.,  1793.,  1823.,  1853.,  1883.,  1913.,  1943.,  1973.,  2003.,  2033.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    29.,    67.,   105.,   143.,   181.,   219.,   257.,   295.,   333.,   371.,   409.,   447.,   485.,   523.,   561.,   599.,   672.,   756.,   840.,   924.,  1008.,  1092.,  1176.,  1260.,  1344.,  1428.,  1512.,  1596.,   587.,   633.,   679.,   725.,   771.,   817.,   863.,   909.,   955.,  1001.,  1047.,  1093.,  1139.,  1185.,  1231.,  1277.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1093.,  1131.,  1169.,  1207.,  1245.,  1283.,  1321.,  1359.,  1397.,  1435.,  1473.,  1511.,  1549.,  1587.,  1625.,  1663.,  3024.,  3108.,  3192.,  3276.,  3360.,  3444.,  3528.,  3612.,  3696.,  3780.,  3864.,  3948.,  1875.,  1921.,  1967.,  2013.,  2059.,  2105.,  2151.,  2197.,  2243.,  2289.,  2335.,  2381.,  2427.,  2473.,  2519.,  2565.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  2157.,  2195.,  2233.,  2271.,  2309.,  2347.,  2385.,  2423.,  2461.,  2499.,  2537.,  2575.,  2613.,  2651.,  2689.,  2727.,  5376.,  5460.,  5544.,  5628.,  5712.,  5796.,  5880.,  5964.,  6048.,  6132.,  6216.,  6300.,  3163.,  3209.,  3255.,  3301.,  3347.,  3393.,  3439.,  3485.,  3531.,  3577.,  3623.,  3669.,  3715.,  3761.,  3807.,  3853.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  3221.,  3259.,  3297.,  3335.,  3373.,  3411.,  3449.,  3487.,  3525.,  3563.,  3601.,  3639.,  3677.,  3715.,  3753.,  3791.,  7728.,  7812.,  7896.,  7980.,  8064.,  8148.,  8232.,  8316.,  8400.,  8484.,  8568.,  8652.,  4451.,  4497.,  4543.,  4589.,  4635.,  4681.,  4727.,  4773.,  4819.,  4865.,  4911.,  4957.,  5003.,  5049.,  5095.,  5141.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  4326.,  4418.,  4510.,  4602.,  4694.,  4786.,  4878.,  4970.,  5062.,  5154.,  5246.,  5338.,  5430.,  5522.,  5614.,  5706.,  6168.,  6368.,  6568.,  6768.,  6968.,  7168.,  7368.,  7568.,  7768.,  7968.,  8168.,  8368.,  6530.,  6638.,  6746.,  6854.,  1074.,  1182.,  1290.,  1398.,  1506.,  1614.,  1722.,  1830.,  1938.,  2046.,  2154.,  2262.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  2038.,  2130.,  2222.,  2314.,  2406.,  2498.,  2590.,  2682.,  2774.,  2866.,  2958.,  3050.,  3142.,  3234.,  3326.,  3418.,  5880.,  6080.,  6280.,  6480.,  6680.,  6880.,  7080.,  7280.,  7480.,  7680.,  7880.,  8080.,  3666.,  3774.,  3882.,  3990.,  4098.,  4206.,  4314.,  4422.,  4530.,  4638.,  4746.,  4854.,  4962.,  5070.,  5178.,  5286.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  4614.,  4706.,  4798.,  4890.,  4982.,  5074.,  5166.,  5258.,  5350.,  5442.,  5534.,  5626.,  5718.,  5810.,  5902.,  5994., 11480., 11680., 11880., 12080., 12280., 12480., 12680., 12880., 13080., 13280., 13480., 13680.,  6690.,  6798.,  6906.,  7014.,  7122.,  7230.,  7338.,  7446.,  7554.,  7662.,  7770.,  7878.,  7986.,  8094.,  8202.,  8310.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  4577.,  4631.,  4685.,  4739.,  4793.,  4847.,  4901.,  4955.,  5009.,  5063.,  5117.,  5171.,  5225.,  5279.,  5333.,  5387., 10696., 10812., 10928., 11044., 11160., 11276., 11392., 11508., 11624., 11740., 11856., 11972.,  5999.,  6061.,  6123.,  6185.,  6247.,  6309.,  6371.,  6433.,  6495.,  6557.,  6619.,  6681.,  6743.,  6805.,  6867.,  6929.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  6089.,  6143.,  6197.,  6251.,  6305.,  6359.,  6413.,  6467.,  6521.,  6575.,  6629.,  6683.,  6737.,  6791.,  6845.,  6899.,  7032.,  7148.,  7264.,  7380.,  7496.,  7612.,  7728.,  7844.,  7960.,  8076.,  8192.,  8308.,  7735.,  7797.,  7859.,  7921.,    47.,   109.,   171.,   233.,   295.,   357.,   419.,   481.,   543.,   605.,   667.,   729.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   689.,   743.,   797.,   851.,   905.,   959.,  1013.,  1067.,  1121.,  1175.,  1229.,  1283.,  1337.,  1391.,  1445.,  1499.,  2344.,  2460.,  2576.,  2692.,  2808.,  2924.,  3040.,  3156.,  3272.,  3388.,  3504.,  3620.,  1535.,  1597.,  1659.,  1721.,  1783.,  1845.,  1907.,  1969.,  2031.,  2093.,  2155.,  2217.,  2279.,  2341.,  2403.,  2465.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  2201.,  2255.,  2309.,  2363.,  2417.,  2471.,  2525.,  2579.,  2633.,  2687.,  2741.,  2795.,  2849.,  2903.,  2957.,  3011.,  5592.,  5708.,  5824.,  5940.,  6056.,  6172.,  6288.,  6404.,  6520.,  6636.,  6752.,  6868.,  3271.,  3333.,  3395.,  3457.,  3519.,  3581.,  3643.,  3705.,  3767.,  3829.,  3891.,  3953.,  4015.,  4077.,  4139.,  4201.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    53.,   123.,   193.,   263.,   333.,   403.,   473.,   543.,   613.,   683.,   753.,   823.,   893.,   963.,  1033.,  1103.,  1232.,  1380.,  1528.,  1676.,  1824.,  1972.,  2120.,  2268.,  2416.,  2564.,  2712.,  2860.,   995.,  1073.,  1151.,  1229.,  1307.,  1385.,  1463.,  1541.,  1619.,  1697.,  1775.,  1853.,  1931.,  2009.,  2087.,  2165.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  2013.,  2083.,  2153.,  2223.,  2293.,  2363.,  2433.,  2503.,  2573.,  2643.,  2713.,  2783.,  2853.,  2923.,  2993.,  3063.,  5376.,  5524.,  5672.,  5820.,  5968.,  6116.,  6264.,  6412.,  6560.,  6708.,  6856.,  7004.,  3179.,  3257.,  3335.,  3413.,  3491.,  3569.,  3647.,  3725.,  3803.,  3881.,  3959.,  4037.,  4115.,  4193.,  4271.,  4349.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  3973.,  4043.,  4113.,  4183.,  4253.,  4323.,  4393.,  4463.,  4533.,  4603.,  4673.,  4743.,  4813.,  4883.,  4953.,  5023.,  9520.,  9668.,  9816.,  9964., 10112., 10260., 10408., 10556., 10704., 10852., 11000., 11148.,  5363.,  5441.,  5519.,  5597.,  5675.,  5753.,  5831.,  5909.,  5987.,  6065.,  6143.,  6221.,  6299.,  6377.,  6455.,  6533.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  5933.,  6003.,  6073.,  6143.,  6213.,  6283.,  6353.,  6423.,  6493.,  6563.,  6633.,  6703.,  6773.,  6843.,  6913.,  6983., 13664., 13812., 13960., 14108., 14256., 14404., 14552., 14700., 14848., 14996., 15144., 15292.,  7547.,  7625.,  7703.,  7781.,  7859.,  7937.,  8015.,  8093.,  8171.,  8249.,  8327.,  8405.,  8483.,  8561.,  8639.,  8717.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  7958.,  8114.,  8270.,  8426.,  8582.,  8738.,  8894.,  9050.,  9206.,  9362.,  9518.,  9674.,  9830.,  9986., 10142., 10298., 10360., 10688., 11016., 11344., 11672., 12000., 12328., 12656., 12984., 13312., 13640., 13968., 10930., 11102., 11274., 11446.,  1634.,  1806.,  1978.,  2150.,  2322.,  2494.,  2666.,  2838.,  3010.,  3182.,  3354.,  3526.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  3366.,  3522.,  3678.,  3834.,  3990.,  4146.,  4302.,  4458.,  4614.,  4770.,  4926.,  5082.,  5238.,  5394.,  5550.,  5706.,  9560.,  9888., 10216., 10544., 10872., 11200., 11528., 11856., 12184., 12512., 12840., 13168.,  5762.,  5934.,  6106.,  6278.,  6450.,  6622.,  6794.,  6966.,  7138.,  7310.,  7482.,  7654.,  7826.,  7998.,  8170.,  8342.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  7734.,  7890.,  8046.,  8202.,  8358.,  8514.,  8670.,  8826.,  8982.,  9138.,  9294.,  9450.,  9606.,  9762.,  9918., 10074., 18744., 19072., 19400., 19728., 20056., 20384., 20712., 21040., 21368., 21696., 22024., 22352., 10578., 10750., 10922., 11094., 11266., 11438., 11610., 11782., 11954., 12126., 12298., 12470., 12642., 12814., 12986., 13158.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  7289.,  7375.,  7461.,  7547.,  7633.,  7719.,  7805.,  7891.,  7977.,  8063.,  8149.,  8235.,  8321.,  8407.,  8493.,  8579., 16632., 16812., 16992., 17172., 17352., 17532., 17712., 17892., 18072., 18252., 18432., 18612.,  9095.,  9189.,  9283.,  9377.,  9471.,  9565.,  9659.,  9753.,  9847.,  9941., 10035., 10129., 10223., 10317., 10411., 10505.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  9697.,  9783.,  9869.,  9955., 10041., 10127., 10213., 10299., 10385., 10471., 10557., 10643., 10729., 10815., 10901., 10987., 10664., 10844., 11024., 11204., 11384., 11564., 11744., 11924., 12104., 12284., 12464., 12644., 11727., 11821., 11915., 12009.,    71.,   165.,   259.,   353.,   447.,   541.,   635.,   729.,   823.,   917.,  1011.,  1105.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1097.,  1183.,  1269.,  1355.,  1441.,  1527.,  1613.,  1699.,  1785.,  1871.,  1957.,  2043.,  2129.,  2215.,  2301.,  2387.,  3672.,  3852.,  4032.,  4212.,  4392.,  4572.,  4752.,  4932.,  5112.,  5292.,  5472.,  5652.,  2327.,  2421.,  2515.,  2609.,  2703.,  2797.,  2891.,  2985.,  3079.,  3173.,  3267.,  3361.,  3455.,  3549.,  3643.,  3737.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  3505.,  3591.,  3677.,  3763.,  3849.,  3935.,  4021.,  4107.,  4193.,  4279.,  4365.,  4451.,  4537.,  4623.,  4709.,  4795.,  8712.,  8892.,  9072.,  9252.,  9432.,  9612.,  9792.,  9972., 10152., 10332., 10512., 10692.,  4959.,  5053.,  5147.,  5241.,  5335.,  5429.,  5523.,  5617.,  5711.,  5805.,  5899.,  5993.,  6087.,  6181.,  6275.,  6369.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 11, 14, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x11x14x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  2390.,  2750.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  2390.,  2750.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.};
  const std::array<int, 4> in_shape = {{ 3, 11, 14, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x11x14x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 11, 14, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x11x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  10.,   11.,   28.,   31.,   34.,   22.,   48.,   53.,   58.,   33.,   36.,   17.,   18.,   49.,   52.,   55.,   36.,   83.,   88.,   93.,   54.,   57.,   24.,   25.,   70.,   73.,   76.,   50.,  118.,  123.,  128.,   75.,   78.,   43.,   48.,  116.,  128.,  140.,   84.,  184.,  200.,  216.,  120.,  129.,   78.,   83.,  200.,  212.,  224.,  133.,  296.,  312.,  328.,  183.,  192.,  113.,  118.,  284.,  296.,  308.,  182.,  408.,  424.,  440.,  246.,  255.,   96.,  100.,  214.,  223.,  232.,  125.,  262.,  273.,  284.,  150.,  156.,  145.,  156.,  320.,  344.,  368.,  192.,  388.,  416.,  444.,  228.,  243.,  222.,  233.,  488.,  512.,  536.,  283.,  584.,  612.,  640.,  333.,  348.,  299.,  310.,  656.,  680.,  704.,  374.,  780.,  808.,  836.,  438.,  453.,  168.,  175.,  358.,  373.,  388.,  200.,  406.,  423.,  440.,  225.,  234.,  217.,  224.,  463.,  478.,  493.,  256.,  525.,  542.,  559.,  288.,  297.,  100.,  110.,  208.,  229.,  250.,  121.,  228.,  251.,  274.,  132.,  144.,  170.,  180.,  355.,  376.,  397.,  198.,  389.,  412.,  435.,  216.,  228.,  240.,  250.,  502.,  523.,  544.,  275.,  550.,  573.,  596.,  300.,  312.,  349.,  372.,  728.,  776.,  824.,  408.,  796.,  848.,  900.,  444.,  471.,  510.,  533., 1064., 1112., 1160.,  583., 1160., 1212., 1264.,  633.,  660.,  671.,  694., 1400., 1448., 1496.,  758., 1524., 1576., 1628.,  822.,  849.,  312.,  325.,  646.,  673.,  700.,  350.,  694.,  723.,  752.,  375.,  390.,  451.,  480.,  932.,  992., 1052.,  516., 1000., 1064., 1128.,  552.,  585.,  654.,  683., 1352., 1412., 1472.,  733., 1448., 1512., 1576.,  783.,  816.,  857.,  886., 1772., 1832., 1892.,  950., 1896., 1960., 2024., 1014., 1047.,  384.,  400.,  790.,  823.,  856.,  425.,  838.,  873.,  908.,  450.,  468.,  496.,  512., 1021., 1054., 1087.,  544., 1083., 1118., 1153.,  576.,  594.,  190.,  209.,  388.,  427.,  466.,  220.,  408.,  449.,  490.,  231.,  252.,  323.,  342.,  661.,  700.,  739.,  360.,  695.,  736.,  777.,  378.,  399.,  456.,  475.,  934.,  973., 1012.,  500.,  982., 1023., 1064.,  525.,  546.,  655.,  696., 1340., 1424., 1508.,  732., 1408., 1496., 1584.,  768.,  813.,  942.,  983., 1928., 2012., 2096., 1033., 2024., 2112., 2200., 1083., 1128., 1229., 1270., 2516., 2600., 2684., 1334., 2640., 2728., 2816., 1398., 1443.,  528.,  550., 1078., 1123., 1168.,  575., 1126., 1173., 1220.,  600.,  624.,  757.,  804., 1544., 1640., 1736.,  840., 1612., 1712., 1812.,  876.,  927., 1086., 1133., 2216., 2312., 2408., 1183., 2312., 2412., 2512., 1233., 1284., 1415., 1462., 2888., 2984., 3080., 1526., 3012., 3112., 3212., 1590., 1641.,  600.,  625., 1222., 1273., 1324.,  650., 1270., 1323., 1376.,  675.,  702.,  775.,  800., 1579., 1630., 1681.,  832., 1641., 1694., 1747.,  864.,  891.};
  const std::array<int, 4> in_shape = {{ 3, 12, 11, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x11x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    7.,   10.,   13.,    8.,   10.,   12.,   14.,    8.,    9.,   10.,   11.,   28.,   31.,   34.,   22.,   24.,   26.,   28.,   15.,   16.,   17.,   18.,   49.,   52.,   55.,   36.,   38.,   40.,   42.,   22.,   23.,   24.,   25.,   70.,   73.,   76.,   50.,   52.,   54.,   56.,   32.,   36.,   40.,   44.,  110.,  120.,  130.,   80.,   86.,   92.,   98.,   60.,   64.,   68.,   72.,  180.,  190.,  200.,  122.,  128.,  134.,  140.,   88.,   92.,   96.,  100.,  250.,  260.,  270.,  164.,  170.,  176.,  182.,   66.,   69.,   72.,   75.,  166.,  173.,  180.,  100.,  104.,  108.,  112.,   87.,   90.,   93.,   96.,  215.,  222.,  229.,  128.,  132.,  136.,  140.,  108.,  111.,  114.,  117.,  264.,  271.,  278.,  156.,  160.,  164.,  168.,  129.,  132.,  135.,  138.,  313.,  320.,  327.,  184.,  188.,  192.,  196.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    5.,   10.,   15.,   20.,   31.,   42.,   53.,   24.,   30.,   36.,   42.,   40.,   45.,   50.,   55.,  108.,  119.,  130.,   66.,   72.,   78.,   84.,   75.,   80.,   85.,   90.,  185.,  196.,  207.,  108.,  114.,  120.,  126.,  110.,  115.,  120.,  125.,  262.,  273.,  284.,  150.,  156.,  162.,  168.,  152.,  164.,  176.,  188.,  382.,  408.,  434.,  224.,  238.,  252.,  266.,  236.,  248.,  260.,  272.,  564.,  590.,  616.,  322.,  336.,  350.,  364.,  320.,  332.,  344.,  356.,  746.,  772.,  798.,  420.,  434.,  448.,  462.,  154.,  161.,  168.,  175.,  358.,  373.,  388.,  200.,  208.,  216.,  224.,  203.,  210.,  217.,  224.,  463.,  478.,  493.,  256.,  264.,  272.,  280.,  252.,  259.,  266.,  273.,  568.,  583.,  598.,  312.,  320.,  328.,  336.,  301.,  308.,  315.,  322.,  673.,  688.,  703.,  368.,  376.,  384.,  392.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    9.,   18.,   27.,   36.,   55.,   74.,   93.,   40.,   50.,   60.,   70.,   72.,   81.,   90.,   99.,  188.,  207.,  226.,  110.,  120.,  130.,  140.,  135.,  144.,  153.,  162.,  321.,  340.,  359.,  180.,  190.,  200.,  210.,  198.,  207.,  216.,  225.,  454.,  473.,  492.,  250.,  260.,  270.,  280.,  272.,  292.,  312.,  332.,  654.,  696.,  738.,  368.,  390.,  412.,  434.,  412.,  432.,  452.,  472.,  948.,  990., 1032.,  522.,  544.,  566.,  588.,  552.,  572.,  592.,  612., 1242., 1284., 1326.,  676.,  698.,  720.,  742.,  242.,  253.,  264.,  275.,  550.,  573.,  596.,  300.,  312.,  324.,  336.,  319.,  330.,  341.,  352.,  711.,  734.,  757.,  384.,  396.,  408.,  420.,  396.,  407.,  418.,  429.,  872.,  895.,  918.,  468.,  480.,  492.,  504.,  473.,  484.,  495.,  506., 1033., 1056., 1079.,  552.,  564.,  576.,  588.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 11, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x11x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   59.,    65.,   180.,   200.,   220.,   151.,   336.,   372.,   408.,   237.,   259.,   101.,   107.,   320.,   340.,   360.,   249.,   588.,   624.,   660.,   391.,   413.,   143.,   149.,   460.,   480.,   500.,   347.,   840.,   876.,   912.,   545.,   567.,   268.,   304.,   772.,   860.,   948.,   588.,  1308.,  1428.,  1548.,   872.,   940.,   520.,   556.,  1388.,  1476.,  1564.,   952.,  2148.,  2268.,  2388.,  1348.,  1416.,   772.,   808.,  2004.,  2092.,  2180.,  1316.,  2988.,  3108.,  3228.,  1824.,  1892.,   713.,   743.,  1600.,  1668.,  1736.,   941.,  1980.,  2064.,  2148.,  1139.,  1185.,  1072.,  1156.,  2380.,  2564.,  2748.,  1440.,  2916.,  3132.,  3348.,  1724.,  1840.,  1660.,  1744.,  3668.,  3852.,  4036.,  2140.,  4428.,  4644.,  4860.,  2536.,  2652.,  2248.,  2332.,  4956.,  5140.,  5324.,  2840.,  5940.,  6156.,  6372.,  3348.,  3464.,  1283.,  1337.,  2740.,  2856.,  2972.,  1535.,  3120.,  3252.,  3384.,  1733.,  1803.,  1661.,  1715.,  3552.,  3668.,  3784.,  1969.,  4044.,  4176.,  4308.,  2223.,  2293.,   761.,   839.,  1584.,  1748.,  1912.,   925.,  1740.,  1920.,  2100.,  1011.,  1105.,  1307.,  1385.,  2732.,  2896.,  3060.,  1527.,  3000.,  3180.,  3360.,  1669.,  1763.,  1853.,  1931.,  3880.,  4044.,  4208.,  2129.,  4260.,  4440.,  4620.,  2327.,  2421.,  2680.,  2860.,  5596.,  5972.,  6348.,  3144.,  6132.,  6540.,  6948.,  3428.,  3640.,  3940.,  4120.,  8228.,  8604.,  8980.,  4516.,  8988.,  9396.,  9804.,  4912.,  5124.,  5200.,  5380., 10860., 11236., 11612.,  5888., 11844., 12252., 12660.,  6396.,  6608.,  2423.,  2525.,  5020.,  5232.,  5444.,  2723.,  5400.,  5628.,  5856.,  2921.,  3039.,  3484.,  3712.,  7204.,  7676.,  8148.,  3996.,  7740.,  8244.,  8748.,  4280.,  4540.,  5080.,  5308., 10508., 10980., 11452.,  5704., 11268., 11772., 12276.,  6100.,  6360.,  6676.,  6904., 13812., 14284., 14756.,  7412., 14796., 15300., 15804.,  7920.,  8180.,  2993.,  3119.,  6160.,  6420.,  6680.,  3317.,  6540.,  6816.,  7092.,  3515.,  3657.,  3875.,  4001.,  7980.,  8240.,  8500.,  4255.,  8472.,  8748.,  9024.,  4509.,  4651.,  1463.,  1613.,  2988.,  3296.,  3604.,  1699.,  3144.,  3468.,  3792.,  1785.,  1951.,  2513.,  2663.,  5144.,  5452.,  5760.,  2805.,  5412.,  5736.,  6060.,  2947.,  3113.,  3563.,  3713.,  7300.,  7608.,  7916.,  3911.,  7680.,  8004.,  8328.,  4109.,  4275.,  5092.,  5416., 10420., 11084., 11748.,  5700., 10956., 11652., 12348.,  5984.,  6340.,  7360.,  7684., 15068., 15732., 16396.,  8080., 15828., 16524., 17220.,  8476.,  8832.,  9628.,  9952., 19716., 20380., 21044., 10460., 20700., 21396., 22092., 10968., 11324.,  4133.,  4307.,  8440.,  8796.,  9152.,  4505.,  8820.,  9192.,  9564.,  4703.,  4893.,  5896.,  6268., 12028., 12788., 13548.,  6552., 12564., 13356., 14148.,  6836.,  7240.,  8500.,  8872., 17348., 18108., 18868.,  9268., 18108., 18900., 19692.,  9664., 10068., 11104., 11476., 22668., 23428., 24188., 11984., 23652., 24444., 25236., 12492., 12896.,  4703.,  4901.,  9580.,  9984., 10388.,  5099.,  9960., 10380., 10800.,  5297.,  5511.,  6089.,  6287., 12408., 12812., 13216.,  6541., 12900., 13320., 13740.,  6795.,  7009.};
  const std::array<int, 4> in_shape = {{ 3, 12, 11, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x11x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    40.,    60.,    80.,    53.,    67.,    81.,    95.,    47.,    53.,    59.,    65.,   180.,   200.,   220.,   151.,   165.,   179.,   193.,    89.,    95.,   101.,   107.,   320.,   340.,   360.,   249.,   263.,   277.,   291.,   131.,   137.,   143.,   149.,   460.,   480.,   500.,   347.,   361.,   375.,   389.,   190.,   218.,   246.,   274.,   728.,   800.,   872.,   558.,   602.,   646.,   690.,   386.,   414.,   442.,   470.,  1232.,  1304.,  1376.,   866.,   910.,   954.,   998.,   582.,   610.,   638.,   666.,  1736.,  1808.,  1880.,  1174.,  1218.,  1262.,  1306.,   479.,   501.,   523.,   545.,  1220.,  1272.,  1324.,   743.,   773.,   803.,   833.,   633.,   655.,   677.,   699.,  1584.,  1636.,  1688.,   953.,   983.,  1013.,  1043.,   787.,   809.,   831.,   853.,  1948.,  2000.,  2052.,  1163.,  1193.,  1223.,  1253.,   941.,   963.,   985.,  1007.,  2312.,  2364.,  2416.,  1373.,  1403.,  1433.,  1463.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    29.,    67.,   105.,   143.,   216.,   300.,   384.,   173.,   219.,   265.,   311.,   295.,   333.,   371.,   409.,   804.,   888.,   972.,   495.,   541.,   587.,   633.,   561.,   599.,   637.,   675.,  1392.,  1476.,  1560.,   817.,   863.,   909.,   955.,   827.,   865.,   903.,   941.,  1980.,  2064.,  2148.,  1139.,  1185.,  1231.,  1277.,  1134.,  1226.,  1318.,  1410.,  2872.,  3072.,  3272.,  1694.,  1802.,  1910.,  2018.,  1778.,  1870.,  1962.,  2054.,  4272.,  4472.,  4672.,  2450.,  2558.,  2666.,  2774.,  2422.,  2514.,  2606.,  2698.,  5672.,  5872.,  6072.,  3206.,  3314.,  3422.,  3530.,  1175.,  1229.,  1283.,  1337.,  2740.,  2856.,  2972.,  1535.,  1597.,  1659.,  1721.,  1553.,  1607.,  1661.,  1715.,  3552.,  3668.,  3784.,  1969.,  2031.,  2093.,  2155.,  1931.,  1985.,  2039.,  2093.,  4364.,  4480.,  4596.,  2403.,  2465.,  2527.,  2589.,  2309.,  2363.,  2417.,  2471.,  5176.,  5292.,  5408.,  2837.,  2899.,  2961.,  3023.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    53.,   123.,   193.,   263.,   392.,   540.,   688.,   293.,   371.,   449.,   527.,   543.,   613.,   683.,   753.,  1428.,  1576.,  1724.,   839.,   917.,   995.,  1073.,  1033.,  1103.,  1173.,  1243.,  2464.,  2612.,  2760.,  1385.,  1463.,  1541.,  1619.,  1523.,  1593.,  1663.,  1733.,  3500.,  3648.,  3796.,  1931.,  2009.,  2087.,  2165.,  2078.,  2234.,  2390.,  2546.,  5016.,  5344.,  5672.,  2830.,  3002.,  3174.,  3346.,  3170.,  3326.,  3482.,  3638.,  7312.,  7640.,  7968.,  4034.,  4206.,  4378.,  4550.,  4262.,  4418.,  4574.,  4730.,  9608.,  9936., 10264.,  5238.,  5410.,  5582.,  5754.,  1871.,  1957.,  2043.,  2129.,  4260.,  4440.,  4620.,  2327.,  2421.,  2515.,  2609.,  2473.,  2559.,  2645.,  2731.,  5520.,  5700.,  5880.,  2985.,  3079.,  3173.,  3267.,  3075.,  3161.,  3247.,  3333.,  6780.,  6960.,  7140.,  3643.,  3737.,  3831.,  3925.,  3677.,  3763.,  3849.,  3935.,  8040.,  8220.,  8400.,  4301.,  4395.,  4489.,  4583.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 11, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x11x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  70.,  110.,  948.,  260.,  404.,  278., 1668.,  596.,  868.,  446.,  614.,   30.,   70.,  804.,  948.,  260.,  174., 1396., 1668.,  596.,  278.,  446.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110.,  278.,  884., 1156., 1784., 2456., 3128., 1876., 2456., 3384., 4312., 2596., 1780.,  612.,  884., 3800., 1784., 2456., 1476., 5240., 2456., 3384., 2068., 2596.,  340.,  612., 3128., 3800., 1784., 1076., 4312., 5240., 2456., 1540., 2068., 1774.,  150., 2052., 2580., 3108.,  190., 2516., 3172., 3828.,  230.,  590., 2660., 3316., 3800., 5240., 6680., 4036., 4152., 5336., 6520., 2900.,  420., 2004., 2660., 8120., 3800., 5240., 3252., 5656., 4152., 5336., 2500., 2900., 1348., 2004., 6680., 8120., 3800., 2468., 4472., 5656., 4152., 2100., 2500., 3238.,  270., 3444., 4356., 5268.,  310., 1028., 1556., 2084.,   30.,   70., 2814., 3238., 2532., 3444., 4356., 3726.,  500., 1028., 1556.,  310.,   30.,  174.,  278., 1668.,  596.,  868.,  446., 2388.,  932., 1332.,  614.,  846.,   70.,  174., 1396., 1668.,  596.,  278., 1988., 2388.,  932.,  382.,  614.,  798.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150.,  382., 1476., 1876., 2456., 3384., 4312., 2596., 3128., 4312., 5496., 3316., 2116., 1076., 1476., 5240., 2456., 3384., 2068., 6680., 3128., 4312., 2660., 3316.,  676., 1076., 4312., 5240., 2456., 1540., 5496., 6680., 3128., 2004., 2660., 2262.,  190., 2516., 3172., 3828.,  230., 2980., 3764., 4548.,  270.,  694., 3252., 4036., 4152., 5336., 6520., 2900., 2456., 3384., 4312., 3620.,  756., 2468., 3252., 5656., 4152., 5336., 2500., 5240., 2456., 3384., 3092., 3620., 1684., 2468., 4472., 5656., 4152., 2100., 4312., 5240., 2456., 2564., 3092., 3726.,  310., 1028., 1556., 2084.,   30.,  660.,  804.,  948.,   70.,  174., 3238., 3726.,  500., 1028., 1556.,  310.,  516.,  660.,  804.,  798.,   70.,  278.,  446., 2388.,  932., 1332.,  614., 3108., 1268., 1796.,  782., 1078.,  110.,  278., 1988., 2388.,  932.,  382., 2580., 3108., 1268.,  486.,  782., 1286.,  110., 1588., 1988., 2388.,  150., 2052., 2580., 3108.,  190.,  486., 2068., 2596., 3128., 4312., 5496., 3316., 3800., 5240., 6680., 4036., 2452., 1540., 2068., 6680., 3128., 4312., 2660., 8120., 3800., 5240., 3252., 4036., 1012., 1540., 5496., 6680., 3128., 2004., 6680., 8120., 3800., 2468., 3252., 2750.,  230., 2980., 3764., 4548.,  270., 3444., 4356., 5268.,  310.,  798., 2500., 2900., 2456., 3384., 4312., 3620., 3128., 4312., 5496., 4340., 1092., 2100., 2500., 5240., 2456., 3384., 3092., 6680., 3128., 4312., 3684., 4340., 1700., 2100., 4312., 5240., 2456., 2564., 5496., 6680., 3128., 3028., 3684.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110.,  278.,  270.,  310.,  516.,  660.,  804.,  798.,  852., 1124., 1396., 1286.,  110.};
  const std::array<int, 4> in_shape = {{ 3, 12, 11, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x11x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   260.,   404.,   548.,   382.,   486.,   590.,   694.,   310.,   350.,   390.,   430.,  1268.,  1412.,  1556.,  1110.,  1214.,  1318.,  1422.,   590.,   630.,    30.,    70.,  1636.,  1780.,   260.,   174.,   278.,   382.,   486.,   230.,   270.,   310.,   350.,   980.,  1124.,  1268.,   902.,  1006.,  1110.,  1214.,   620.,   828.,  1036.,  1244.,  2280.,  2824.,  3368.,  2476.,  1148.,  1484.,  1820.,  1436.,  1644.,  1852.,  2060.,  4424.,  4968.,  5512.,  3164.,  3500.,  3836.,  4172.,  2892.,  3100.,   620.,   828.,  5544.,  6088.,  2280.,  1804.,  2140.,  2476.,  1148.,   950.,  1118.,  1286.,  1454.,  2932.,  3332.,  3732.,  2006.,  2238.,  2470.,  2702.,  2126.,  2294.,  2462.,  2630.,  3044.,  3444.,  3844.,  3630.,   150.,   382.,   614.,   614.,   782.,   950.,  1118.,  2132.,  2532.,  2932.,  1542.,  1774.,  2006.,  2238.,  1790.,  1958.,  2126.,  2294.,  4932.,  5332.,  3044.,  3166.,  3398.,  3630.,   150.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1604.,  2260.,  2916.,  1310.,  1670.,  2030.,  2390.,  2262.,  2558.,  2854.,  3150.,  6196.,  6852.,  7508.,  3830.,  4190.,  4550.,  4910.,  4334.,  4630.,   190.,   486.,  6052.,  6708.,  1604.,   590.,   950.,  1310.,  1670.,  1670.,  1966.,  2262.,  2558.,  4884.,  5540.,  6196.,  3110.,  3470.,  3830.,  4190.,  4012.,  4732.,  5452.,  6172.,  7016.,  8584., 10152.,  7404.,  2492.,  3340.,  4188.,  4316.,  5036.,  5756.,  6476., 12232., 13800., 15368.,  7580.,  8428.,  9276., 10124.,  9356., 10076.,  4012.,  4732., 16424., 17992.,  7016.,  5708.,  6556.,  7404.,  2492.,  2390.,  2814.,  3238.,  3662.,  6836.,  7748.,  8660.,  4214.,  4702.,  5190.,  5678.,  5358.,  5782.,  6206.,  6630.,  6436.,  7348.,  8260.,  7630.,   310.,   798.,  1286.,  1542.,  1966.,  2390.,  2814.,  5012.,  5924.,  6836.,  3238.,  3726.,  4214.,  4702.,  4510.,  4934.,  5358.,  5782., 11396., 12308.,  6436.,  6654.,  7142.,  7630.,   310.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   350.,   902.,  1454.,  2006.,  2948.,  4116.,  5284.,  2238.,  2854.,  3470.,  4086.,  4214.,  4766.,  5318.,  5870., 11124., 12292., 13460.,  6550.,  7166.,  7782.,  8398.,  8078.,  8630.,   350.,   902., 10468., 11636.,  2948.,  1006.,  1622.,  2238.,  2854.,  3110.,  3662.,  4214.,  4766.,  8788.,  9956., 11124.,  5318.,  5934.,  6550.,  7166.,  7404.,  8636.,  9868., 11100., 11752., 14344., 16936., 12332.,  3836.,  5196.,  6556.,  7196.,  8428.,  9660., 10892., 20040., 22632., 25224., 11996., 13356., 14716., 16076., 15820., 17052.,  7404.,  8636., 27304., 29896., 11752.,  9612., 10972., 12332.,  3836.,  3830.,  4510.,  5190.,  5870., 10740., 12164., 13588.,  6422.,  7166.,  7910.,  8654.,  8590.,  9270.,  9950., 10630.,  9828., 11252., 12676., 11630.,   470.,  1214.,  1958.,  2470.,  3150.,  3830.,  4510.,  7892.,  9316., 10740.,  4934.,  5678.,  6422.,  7166.,  7230.,  7910.,  8590.,  9270., 17860., 19284.,  9828., 10142., 10886., 11630.,   470.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 11, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x11x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  19.,   20.,   21.,   22.,   53.,   56.,   59.,   62.,   65.,   68.,   42.,   44.,   91.,   96.,  101.,  106.,  111.,  116.,   63.,   66.,   69.,   72.,   33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,  161.,  166.,  171.,  176.,  181.,  186.,  105.,  108.,  111.,  114.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  231.,  236.,  241.,  246.,  251.,  256.,  147.,  150.,  153.,  156.,   81.,   86.,   91.,   96.,  220.,  232.,  244.,  256.,  268.,  280.,  161.,  168.,  352.,  368.,  384.,  400.,  416.,  432.,  231.,  240.,  249.,  258.,  151.,  156.,  161.,  166.,  388.,  400.,  412.,  424.,  436.,  448.,  259.,  266.,  576.,  592.,  608.,  624.,  640.,  656.,  357.,  366.,  375.,  384.,  221.,  226.,  231.,  236.,  556.,  568.,  580.,  592.,  604.,  616.,  357.,  364.,  800.,  816.,  832.,  848.,  864.,  880.,  483.,  492.,  501.,  510.,  188.,  192.,  196.,  200.,  419.,  428.,  437.,  446.,  455.,  464.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  306.,  312.,  279.,  290.,  301.,  312.,  616.,  640.,  664.,  688.,  712.,  736.,  371.,  384.,  748.,  776.,  804.,  832.,  860.,  888.,  441.,  456.,  471.,  486.,  433.,  444.,  455.,  466.,  952.,  976., 1000., 1024., 1048., 1072.,  553.,  566., 1140., 1168., 1196., 1224., 1252., 1280.,  651.,  666.,  681.,  696.,  587.,  598.,  609.,  620., 1288., 1312., 1336., 1360., 1384., 1408.,  735.,  748., 1532., 1560., 1588., 1616., 1644., 1672.,  861.,  876.,  891.,  906.,  329.,  336.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  795.,  812.,  829.,  846.,  863.,  880.,  441.,  450.,  459.,  468.,  427.,  434.,  441.,  448.,  911.,  926.,  941.,  956.,  971.,  986.,  504.,  512., 1033., 1050., 1067., 1084., 1101., 1118.,  567.,  576.,  585.,  594.,  190.,  200.,  210.,  220.,  395.,  416.,  437.,  458.,  479.,  500.,  231.,  242.,  433.,  456.,  479.,  502.,  525.,  548.,  252.,  264.,  276.,  288.,  330.,  340.,  350.,  360.,  689.,  710.,  731.,  752.,  773.,  794.,  385.,  396.,  755.,  778.,  801.,  824.,  847.,  870.,  420.,  432.,  444.,  456.,  470.,  480.,  490.,  500.,  983., 1004., 1025., 1046., 1067., 1088.,  539.,  550., 1077., 1100., 1123., 1146., 1169., 1192.,  588.,  600.,  612.,  624.,  675.,  698.,  721.,  744., 1408., 1456., 1504., 1552., 1600., 1648.,  791.,  816., 1540., 1592., 1644., 1696., 1748., 1800.,  861.,  888.,  915.,  942.,  997., 1020., 1043., 1066., 2080., 2128., 2176., 2224., 2272., 2320., 1141., 1166., 2268., 2320., 2372., 2424., 2476., 2528., 1239., 1266., 1293., 1320., 1319., 1342., 1365., 1388., 2752., 2800., 2848., 2896., 2944., 2992., 1491., 1516., 2996., 3048., 3100., 3152., 3204., 3256., 1617., 1644., 1671., 1698.,  611.,  624.,  637.,  650., 1265., 1292., 1319., 1346., 1373., 1400.,  686.,  700., 1359., 1388., 1417., 1446., 1475., 1504.,  735.,  750.,  765.,  780.,  873.,  902.,  931.,  960., 1804., 1864., 1924., 1984., 2044., 2104., 1001., 1032., 1936., 2000., 2064., 2128., 2192., 2256., 1071., 1104., 1137., 1170., 1279., 1308., 1337., 1366., 2644., 2704., 2764., 2824., 2884., 2944., 1435., 1466., 2832., 2896., 2960., 3024., 3088., 3152., 1533., 1566., 1599., 1632., 1685., 1714., 1743., 1772., 3484., 3544., 3604., 3664., 3724., 3784., 1869., 1900., 3728., 3792., 3856., 3920., 3984., 4048., 1995., 2028., 2061., 2094.,  752.,  768.,  784.,  800., 1547., 1580., 1613., 1646., 1679., 1712.,  833.,  850., 1641., 1676., 1711., 1746., 1781., 1816.,  882.,  900.,  918.,  936.,  976.,  992., 1008., 1024., 2009., 2042., 2075., 2108., 2141., 2174., 1071., 1088., 2131., 2166., 2201., 2236., 2271., 2306., 1134., 1152., 1170., 1188.,  361.,  380.,  399.,  418.,  737.,  776.,  815.,  854.,  893.,  932.,  420.,  440.,  775.,  816.,  857.,  898.,  939.,  980.,  441.,  462.,  483.,  504.,  627.,  646.,  665.,  684., 1283., 1322., 1361., 1400., 1439., 1478.,  700.,  720., 1349., 1390., 1431., 1472., 1513., 1554.,  735.,  756.,  777.,  798.,  893.,  912.,  931.,  950., 1829., 1868., 1907., 1946., 1985., 2024.,  980., 1000., 1923., 1964., 2005., 2046., 2087., 2128., 1029., 1050., 1071., 1092., 1269., 1310., 1351., 1392., 2596., 2680., 2764., 2848., 2932., 3016., 1421., 1464., 2728., 2816., 2904., 2992., 3080., 3168., 1491., 1536., 1581., 1626., 1843., 1884., 1925., 1966., 3772., 3856., 3940., 4024., 4108., 4192., 2023., 2066., 3960., 4048., 4136., 4224., 4312., 4400., 2121., 2166., 2211., 2256., 2417., 2458., 2499., 2540., 4948., 5032., 5116., 5200., 5284., 5368., 2625., 2668., 5192., 5280., 5368., 5456., 5544., 5632., 2751., 2796., 2841., 2886., 1034., 1056., 1078., 1100., 2111., 2156., 2201., 2246., 2291., 2336., 1127., 1150., 2205., 2252., 2299., 2346., 2393., 2440., 1176., 1200., 1224., 1248., 1467., 1514., 1561., 1608., 2992., 3088., 3184., 3280., 3376., 3472., 1631., 1680., 3124., 3224., 3324., 3424., 3524., 3624., 1701., 1752., 1803., 1854., 2125., 2172., 2219., 2266., 4336., 4432., 4528., 4624., 4720., 4816., 2317., 2366., 4524., 4624., 4724., 4824., 4924., 5024., 2415., 2466., 2517., 2568., 2783., 2830., 2877., 2924., 5680., 5776., 5872., 5968., 6064., 6160., 3003., 3052., 5924., 6024., 6124., 6224., 6324., 6424., 3129., 3180., 3231., 3282., 1175., 1200., 1225., 1250., 2393., 2444., 2495., 2546., 2597., 2648., 1274., 1300., 2487., 2540., 2593., 2646., 2699., 2752., 1323., 1350., 1377., 1404., 1525., 1550., 1575., 1600., 3107., 3158., 3209., 3260., 3311., 3362., 1638., 1664., 3229., 3282., 3335., 3388., 3441., 3494., 1701., 1728., 1755., 1782.};
  const std::array<int, 4> in_shape = {{ 3, 12, 11, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x11x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,   11.,   14.,   17.,   20.,   23.,   26.,   14.,   16.,   18.,   20.,   22.,   24.,   26.,   28.,   15.,   16.,   17.,   18.,   19.,   20.,   21.,   22.,   53.,   56.,   59.,   62.,   65.,   68.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,   74.,   76.,   78.,   80.,   82.,   84.,   43.,   44.,   45.,   46.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,   60.,   64.,   68.,   72.,   76.,   80.,   84.,   88.,  210.,  220.,  230.,  240.,  250.,  260.,  154.,  160.,  166.,  172.,  178.,  184.,  190.,  196.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  350.,  360.,  370.,  380.,  390.,  400.,  238.,  244.,  250.,  256.,  262.,  268.,  274.,  280.,  172.,  176.,  180.,  184.,  188.,  192.,  196.,  200.,  490.,  500.,  510.,  520.,  530.,  540.,  322.,  328.,  334.,  340.,  346.,  352.,  358.,  364.,  129.,  132.,  135.,  138.,  141.,  144.,  147.,  150.,  325.,  332.,  339.,  346.,  353.,  360.,  196.,  200.,  204.,  208.,  212.,  216.,  220.,  224.,  171.,  174.,  177.,  180.,  183.,  186.,  189.,  192.,  423.,  430.,  437.,  444.,  451.,  458.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,  213.,  216.,  219.,  222.,  225.,  228.,  231.,  234.,  521.,  528.,  535.,  542.,  549.,  556.,  308.,  312.,  316.,  320.,  324.,  328.,  332.,  336.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  619.,  626.,  633.,  640.,  647.,  654.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    5.,   10.,   15.,   20.,   25.,   30.,   35.,   40.,   51.,   62.,   73.,   84.,   95.,  106.,   42.,   48.,   54.,   60.,   66.,   72.,   78.,   84.,   75.,   80.,   85.,   90.,   95.,  100.,  105.,  110.,  205.,  216.,  227.,  238.,  249.,  260.,  126.,  132.,  138.,  144.,  150.,  156.,  162.,  168.,  145.,  150.,  155.,  160.,  165.,  170.,  175.,  180.,  359.,  370.,  381.,  392.,  403.,  414.,  210.,  216.,  222.,  228.,  234.,  240.,  246.,  252.,  215.,  220.,  225.,  230.,  235.,  240.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  306.,  312.,  318.,  324.,  330.,  336.,  292.,  304.,  316.,  328.,  340.,  352.,  364.,  376.,  738.,  764.,  790.,  816.,  842.,  868.,  434.,  448.,  462.,  476.,  490.,  504.,  518.,  532.,  460.,  472.,  484.,  496.,  508.,  520.,  532.,  544., 1102., 1128., 1154., 1180., 1206., 1232.,  630.,  644.,  658.,  672.,  686.,  700.,  714.,  728.,  628.,  640.,  652.,  664.,  676.,  688.,  700.,  712., 1466., 1492., 1518., 1544., 1570., 1596.,  826.,  840.,  854.,  868.,  882.,  896.,  910.,  924.,  301.,  308.,  315.,  322.,  329.,  336.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  408.,  416.,  424.,  432.,  440.,  448.,  399.,  406.,  413.,  420.,  427.,  434.,  441.,  448.,  911.,  926.,  941.,  956.,  971.,  986.,  504.,  512.,  520.,  528.,  536.,  544.,  552.,  560.,  497.,  504.,  511.,  518.,  525.,  532.,  539.,  546., 1121., 1136., 1151., 1166., 1181., 1196.,  616.,  624.,  632.,  640.,  648.,  656.,  664.,  672.,  595.,  602.,  609.,  616.,  623.,  630.,  637.,  644., 1331., 1346., 1361., 1376., 1391., 1406.,  728.,  736.,  744.,  752.,  760.,  768.,  776.,  784.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    9.,   18.,   27.,   36.,   45.,   54.,   63.,   72.,   91.,  110.,  129.,  148.,  167.,  186.,   70.,   80.,   90.,  100.,  110.,  120.,  130.,  140.,  135.,  144.,  153.,  162.,  171.,  180.,  189.,  198.,  357.,  376.,  395.,  414.,  433.,  452.,  210.,  220.,  230.,  240.,  250.,  260.,  270.,  280.,  261.,  270.,  279.,  288.,  297.,  306.,  315.,  324.,  623.,  642.,  661.,  680.,  699.,  718.,  350.,  360.,  370.,  380.,  390.,  400.,  410.,  420.,  387.,  396.,  405.,  414.,  423.,  432.,  441.,  450.,  889.,  908.,  927.,  946.,  965.,  984.,  490.,  500.,  510.,  520.,  530.,  540.,  550.,  560.,  524.,  544.,  564.,  584.,  604.,  624.,  644.,  664., 1266., 1308., 1350., 1392., 1434., 1476.,  714.,  736.,  758.,  780.,  802.,  824.,  846.,  868.,  804.,  824.,  844.,  864.,  884.,  904.,  924.,  944., 1854., 1896., 1938., 1980., 2022., 2064., 1022., 1044., 1066., 1088., 1110., 1132., 1154., 1176., 1084., 1104., 1124., 1144., 1164., 1184., 1204., 1224., 2442., 2484., 2526., 2568., 2610., 2652., 1330., 1352., 1374., 1396., 1418., 1440., 1462., 1484.,  473.,  484.,  495.,  506.,  517.,  528.,  539.,  550., 1077., 1100., 1123., 1146., 1169., 1192.,  588.,  600.,  612.,  624.,  636.,  648.,  660.,  672.,  627.,  638.,  649.,  660.,  671.,  682.,  693.,  704., 1399., 1422., 1445., 1468., 1491., 1514.,  756.,  768.,  780.,  792.,  804.,  816.,  828.,  840.,  781.,  792.,  803.,  814.,  825.,  836.,  847.,  858., 1721., 1744., 1767., 1790., 1813., 1836.,  924.,  936.,  948.,  960.,  972.,  984.,  996., 1008.,  935.,  946.,  957.,  968.,  979.,  990., 1001., 1012., 2043., 2066., 2089., 2112., 2135., 2158., 1092., 1104., 1116., 1128., 1140., 1152., 1164., 1176.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 11, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x11x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  113.,   119.,   125.,   131.,   344.,   364.,   384.,   404.,   424.,   444.,   291.,   305.,   644.,   680.,   716.,   752.,   788.,   824.,   457.,   479.,   501.,   523.,   197.,   203.,   209.,   215.,   624.,   644.,   664.,   684.,   704.,   724.,   487.,   501.,  1148.,  1184.,  1220.,  1256.,  1292.,  1328.,   765.,   787.,   809.,   831.,   281.,   287.,   293.,   299.,   904.,   924.,   944.,   964.,   984.,  1004.,   683.,   697.,  1652.,  1688.,  1724.,  1760.,  1796.,  1832.,  1073.,  1095.,  1117.,  1139.,   508.,   544.,   580.,   616.,  1092.,  1180.,  1268.,  1356.,  1444.,  1532.,  1136.,  1188.,  1628.,  1748.,  1868.,  1988.,  2108.,  2228.,  1692.,  1760.,   420.,   488.,   628.,   664.,   700.,   736.,  1428.,  1516.,  1604.,  1692.,  1780.,  1868.,   968.,  1020.,  1900.,  2020.,  2140.,  2260.,  2380.,  2500.,  1236.,  1304.,  1372.,  1440.,  1132.,  1168.,  1204.,  1240.,  2660.,  2748.,  2836.,  2924.,  3012.,  3100.,  1696.,  1748.,  3580.,  3700.,  3820.,  3940.,  4060.,  4180.,  2188.,  2256.,  2324.,  2392.,  1403.,  1433.,  1463.,  1493.,  3148.,  3216.,  3284.,  3352.,  3420.,  3488.,  1853.,  1891.,  3896.,  3980.,  4064.,  4148.,  4232.,  4316.,  2243.,  2289.,  2335.,  2381.,  2080.,  2164.,  2248.,  2332.,  2700.,  2884.,  3068.,  3252.,  3436.,  3620.,  2804.,  2904.,  3236.,  3452.,  3668.,  3884.,  4100.,  4316.,  3360.,  3476.,   648.,   764.,  1336.,  1420.,  1504.,  1588.,  2844.,  3028.,  3212.,  3396.,  3580.,  3764.,  1772.,  1872.,  3316.,  3532.,  3748.,  3964.,  4180.,  4396.,  2040.,  2156.,  2272.,  2388.,  2512.,  2596.,  2680.,  2764.,  5420.,  5604.,  5788.,  5972.,  6156.,  6340.,  3172.,  3272.,  6340.,  6556.,  6772.,  6988.,  7204.,  7420.,  3664.,  3780.,  3896.,  4012.,  2525.,  2579.,  2633.,  2687.,  5392.,  5508.,  5624.,  5740.,  5856.,  5972.,  3023.,  3085.,  6140.,  6272.,  6404.,  6536.,  6668.,  6800.,  3413.,  3483.,  3553.,  3623.,  3281.,  3335.,  3389.,  3443.,  3560.,  3676.,  3792.,  3908.,  4024.,  4140.,  3891.,  3953.,  4020.,  4152.,  4284.,  4416.,  4548.,  4680.,  4393.,  4463.,    53.,   123.,  1463.,  1541.,  1619.,  1697.,  3044.,  3208.,  3372.,  3536.,  3700.,  3864.,  1785.,  1871.,  3344.,  3524.,  3704.,  3884.,  4064.,  4244.,  1951.,  2045.,  2139.,  2233.,  2555.,  2633.,  2711.,  2789.,  5340.,  5504.,  5668.,  5832.,  5996.,  6160.,  2989.,  3075.,  5864.,  6044.,  6224.,  6404.,  6584.,  6764.,  3267.,  3361.,  3455.,  3549.,  3647.,  3725.,  3803.,  3881.,  7636.,  7800.,  7964.,  8128.,  8292.,  8456.,  4193.,  4279.,  8384.,  8564.,  8744.,  8924.,  9104.,  9284.,  4583.,  4677.,  4771.,  4865.,  5224.,  5404.,  5584.,  5764.,  5916.,  6292.,  6668.,  7044.,  7420.,  7796.,  6140.,  6336.,  6452.,  6860.,  7268.,  7676.,  8084.,  8492.,  6696.,  6908.,  1104.,  1316.,  2752.,  2932.,  3112.,  3292.,  5676.,  6052.,  6428.,  6804.,  7180.,  7556.,  3380.,  3576.,  6148.,  6556.,  6964.,  7372.,  7780.,  8188.,  3648.,  3860.,  4072.,  4284.,  5272.,  5452.,  5632.,  5812., 10940., 11316., 11692., 12068., 12444., 12820.,  6124.,  6320., 11860., 12268., 12676., 13084., 13492., 13900.,  6616.,  6828.,  7040.,  7252.,  4769.,  4871.,  4973.,  5075.,  9880., 10092., 10304., 10516., 10728., 10940.,  5363.,  5473., 10628., 10856., 11084., 11312., 11540., 11768.,  5753.,  5871.,  5989.,  6107.,  6796.,  7024.,  7252.,  7480.,  7524.,  7996.,  8468.,  8940.,  9412.,  9884.,  7808.,  8052.,  8060.,  8564.,  9068.,  9572., 10076., 10580.,  8364.,  8624.,  1332.,  1592.,  3460.,  3688.,  3916.,  4144.,  7092.,  7564.,  8036.,  8508.,  8980.,  9452.,  4184.,  4428.,  7564.,  8068.,  8572.,  9076.,  9580., 10084.,  4452.,  4712.,  4972.,  5232.,  6652.,  6880.,  7108.,  7336., 13700., 14172., 14644., 15116., 15588., 16060.,  7600.,  7844., 14620., 15124., 15628., 16132., 16636., 17140.,  8092.,  8352.,  8612.,  8872.,  5891.,  6017.,  6143.,  6269., 12124., 12384., 12644., 12904., 13164., 13424.,  6533.,  6667., 12872., 13148., 13424., 13700., 13976., 14252.,  6923.,  7065.,  7207.,  7349.,  7655.,  7781.,  7907.,  8033.,  7700.,  7960.,  8220.,  8480.,  8740.,  9000.,  8409.,  8543.,  8160.,  8436.,  8712.,  8988.,  9264.,  9540.,  8911.,  9053.,   107.,   249.,  2813.,  2963.,  3113.,  3263.,  5744.,  6052.,  6360.,  6668.,  6976.,  7284.,  3279.,  3437.,  6044.,  6368.,  6692.,  7016.,  7340.,  7664.,  3445.,  3611.,  3777.,  3943.,  4913.,  5063.,  5213.,  5363., 10056., 10364., 10672., 10980., 11288., 11596.,  5491.,  5649., 10580., 10904., 11228., 11552., 11876., 12200.,  5769.,  5935.,  6101.,  6267.,  7013.,  7163.,  7313.,  7463., 14368., 14676., 14984., 15292., 15600., 15908.,  7703.,  7861., 15116., 15440., 15764., 16088., 16412., 16736.,  8093.,  8259.,  8425.,  8591.,  9940., 10264., 10588., 10912., 10740., 11404., 12068., 12732., 13396., 14060., 11144., 11484., 11276., 11972., 12668., 13364., 14060., 14756., 11700., 12056.,  1788.,  2144.,  4876.,  5200.,  5524.,  5848.,  9924., 10588., 11252., 11916., 12580., 13244.,  5792.,  6132., 10396., 11092., 11788., 12484., 13180., 13876.,  6060.,  6416.,  6772.,  7128.,  9412.,  9736., 10060., 10384., 19220., 19884., 20548., 21212., 21876., 22540., 10552., 10892., 20140., 20836., 21532., 22228., 22924., 23620., 11044., 11400., 11756., 12112.,  8135.,  8309.,  8483.,  8657., 16612., 16968., 17324., 17680., 18036., 18392.,  8873.,  9055., 17360., 17732., 18104., 18476., 18848., 19220.,  9263.,  9453.,  9643.,  9833., 11512., 11884., 12256., 12628., 12348., 13108., 13868., 14628., 15388., 16148., 12812., 13200., 12884., 13676., 14468., 15260., 16052., 16844., 13368., 13772.,  2016.,  2420.,  5584.,  5956.,  6328.,  6700., 11340., 12100., 12860., 13620., 14380., 15140.,  6596.,  6984., 11812., 12604., 13396., 14188., 14980., 15772.,  6864.,  7268.,  7672.,  8076., 10792., 11164., 11536., 11908., 21980., 22740., 23500., 24260., 25020., 25780., 12028., 12416., 22900., 23692., 24484., 25276., 26068., 26860., 12520., 12924., 13328., 13732.,  9257.,  9455.,  9653.,  9851., 18856., 19260., 19664., 20068., 20472., 20876., 10043., 10249., 19604., 20024., 20444., 20864., 21284., 21704., 10433., 10647., 10861., 11075., 12029., 12227., 12425., 12623., 11840., 12244., 12648., 13052., 13456., 13860., 12927., 13133., 12300., 12720., 13140., 13560., 13980., 14400., 13429., 13643.,   161.,   375.};
  const std::array<int, 4> in_shape = {{ 3, 12, 11, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 128.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x11x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,    64.,    84.,   104.,   124.,   144.,   164.,    95.,   109.,   123.,   137.,   151.,   165.,   179.,   193.,    89.,    95.,   101.,   107.,   113.,   119.,   125.,   131.,   344.,   364.,   384.,   404.,   424.,   444.,   291.,   305.,   319.,   333.,   347.,   361.,   375.,   389.,   173.,   179.,   185.,   191.,   197.,   203.,   209.,   215.,   624.,   644.,   664.,   684.,   704.,   724.,   487.,   501.,   515.,   529.,   543.,   557.,   571.,   585.,   257.,   263.,   269.,   275.,   281.,   287.,   293.,   299.,   904.,   924.,   944.,   964.,   984.,  1004.,   683.,   697.,   711.,   725.,   739.,   753.,   767.,   781.,   358.,   386.,   414.,   442.,   470.,   498.,   526.,   554.,  1400.,  1472.,  1544.,  1616.,  1688.,  1760.,  1082.,  1126.,  1170.,  1214.,  1258.,  1302.,  1346.,  1390.,   750.,   778.,   806.,   834.,   862.,   890.,   918.,   946.,  2408.,  2480.,  2552.,  2624.,  2696.,  2768.,  1698.,  1742.,  1786.,  1830.,  1874.,  1918.,  1962.,  2006.,  1142.,  1170.,  1198.,  1226.,  1254.,  1282.,  1310.,  1338.,  3416.,  3488.,  3560.,  3632.,  3704.,  3776.,  2314.,  2358.,  2402.,  2446.,  2490.,  2534.,  2578.,  2622.,   941.,   963.,   985.,  1007.,  1029.,  1051.,  1073.,  1095.,  2400.,  2452.,  2504.,  2556.,  2608.,  2660.,  1463.,  1493.,  1523.,  1553.,  1583.,  1613.,  1643.,  1673.,  1249.,  1271.,  1293.,  1315.,  1337.,  1359.,  1381.,  1403.,  3128.,  3180.,  3232.,  3284.,  3336.,  3388.,  1883.,  1913.,  1943.,  1973.,  2003.,  2033.,  2063.,  2093.,  1557.,  1579.,  1601.,  1623.,  1645.,  1667.,  1689.,  1711.,  3856.,  3908.,  3960.,  4012.,  4064.,  4116.,  2303.,  2333.,  2363.,  2393.,  2423.,  2453.,  2483.,  2513.,  1865.,  1887.,  1909.,  1931.,  1953.,  1975.,  1997.,  2019.,  4584.,  4636.,  4688.,  4740.,  4792.,  4844.,  2723.,  2753.,  2783.,  2813.,  2843.,  2873.,  2903.,  2933.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    29.,    67.,   105.,   143.,   181.,   219.,   257.,   295.,   368.,   452.,   536.,   620.,   704.,   788.,   311.,   357.,   403.,   449.,   495.,   541.,   587.,   633.,   561.,   599.,   637.,   675.,   713.,   751.,   789.,   827.,  1544.,  1628.,  1712.,  1796.,  1880.,  1964.,   955.,  1001.,  1047.,  1093.,  1139.,  1185.,  1231.,  1277.,  1093.,  1131.,  1169.,  1207.,  1245.,  1283.,  1321.,  1359.,  2720.,  2804.,  2888.,  2972.,  3056.,  3140.,  1599.,  1645.,  1691.,  1737.,  1783.,  1829.,  1875.,  1921.,  1625.,  1663.,  1701.,  1739.,  1777.,  1815.,  1853.,  1891.,  3896.,  3980.,  4064.,  4148.,  4232.,  4316.,  2243.,  2289.,  2335.,  2381.,  2427.,  2473.,  2519.,  2565.,  2198.,  2290.,  2382.,  2474.,  2566.,  2658.,  2750.,  2842.,  5592.,  5792.,  5992.,  6192.,  6392.,  6592.,  3306.,  3414.,  3522.,  3630.,  3738.,  3846.,  3954.,  4062.,  3486.,  3578.,  3670.,  3762.,  3854.,  3946.,  4038.,  4130.,  8392.,  8592.,  8792.,  8992.,  9192.,  9392.,  4818.,  4926.,  5034.,  5142.,  5250.,  5358.,  5466.,  5574.,  4774.,  4866.,  4958.,  5050.,  5142.,  5234.,  5326.,  5418., 11192., 11392., 11592., 11792., 11992., 12192.,  6330.,  6438.,  6546.,  6654.,  6762.,  6870.,  6978.,  7086.,  2309.,  2363.,  2417.,  2471.,  2525.,  2579.,  2633.,  2687.,  5392.,  5508.,  5624.,  5740.,  5856.,  5972.,  3023.,  3085.,  3147.,  3209.,  3271.,  3333.,  3395.,  3457.,  3065.,  3119.,  3173.,  3227.,  3281.,  3335.,  3389.,  3443.,  7016.,  7132.,  7248.,  7364.,  7480.,  7596.,  3891.,  3953.,  4015.,  4077.,  4139.,  4201.,  4263.,  4325.,  3821.,  3875.,  3929.,  3983.,  4037.,  4091.,  4145.,  4199.,  8640.,  8756.,  8872.,  8988.,  9104.,  9220.,  4759.,  4821.,  4883.,  4945.,  5007.,  5069.,  5131.,  5193.,  4577.,  4631.,  4685.,  4739.,  4793.,  4847.,  4901.,  4955., 10264., 10380., 10496., 10612., 10728., 10844.,  5627.,  5689.,  5751.,  5813.,  5875.,  5937.,  5999.,  6061.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    53.,   123.,   193.,   263.,   333.,   403.,   473.,   543.,   672.,   820.,   968.,  1116.,  1264.,  1412.,   527.,   605.,   683.,   761.,   839.,   917.,   995.,  1073.,  1033.,  1103.,  1173.,  1243.,  1313.,  1383.,  1453.,  1523.,  2744.,  2892.,  3040.,  3188.,  3336.,  3484.,  1619.,  1697.,  1775.,  1853.,  1931.,  2009.,  2087.,  2165.,  2013.,  2083.,  2153.,  2223.,  2293.,  2363.,  2433.,  2503.,  4816.,  4964.,  5112.,  5260.,  5408.,  5556.,  2711.,  2789.,  2867.,  2945.,  3023.,  3101.,  3179.,  3257.,  2993.,  3063.,  3133.,  3203.,  3273.,  3343.,  3413.,  3483.,  6888.,  7036.,  7184.,  7332.,  7480.,  7628.,  3803.,  3881.,  3959.,  4037.,  4115.,  4193.,  4271.,  4349.,  4038.,  4194.,  4350.,  4506.,  4662.,  4818.,  4974.,  5130.,  9784., 10112., 10440., 10768., 11096., 11424.,  5530.,  5702.,  5874.,  6046.,  6218.,  6390.,  6562.,  6734.,  6222.,  6378.,  6534.,  6690.,  6846.,  7002.,  7158.,  7314., 14376., 14704., 15032., 15360., 15688., 16016.,  7938.,  8110.,  8282.,  8454.,  8626.,  8798.,  8970.,  9142.,  8406.,  8562.,  8718.,  8874.,  9030.,  9186.,  9342.,  9498., 18968., 19296., 19624., 19952., 20280., 20608., 10346., 10518., 10690., 10862., 11034., 11206., 11378., 11550.,  3677.,  3763.,  3849.,  3935.,  4021.,  4107.,  4193.,  4279.,  8384.,  8564.,  8744.,  8924.,  9104.,  9284.,  4583.,  4677.,  4771.,  4865.,  4959.,  5053.,  5147.,  5241.,  4881.,  4967.,  5053.,  5139.,  5225.,  5311.,  5397.,  5483., 10904., 11084., 11264., 11444., 11624., 11804.,  5899.,  5993.,  6087.,  6181.,  6275.,  6369.,  6463.,  6557.,  6085.,  6171.,  6257.,  6343.,  6429.,  6515.,  6601.,  6687., 13424., 13604., 13784., 13964., 14144., 14324.,  7215.,  7309.,  7403.,  7497.,  7591.,  7685.,  7779.,  7873.,  7289.,  7375.,  7461.,  7547.,  7633.,  7719.,  7805.,  7891., 15944., 16124., 16304., 16484., 16664., 16844.,  8531.,  8625.,  8719.,  8813.,  8907.,  9001.,  9095.,  9189.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 11, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x11x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  110.,   150.,   190.,   230.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   446.,   614.,   782.,   950.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  3508.,  4036.,   340.,   868.,   724.,   996.,  1268.,  1540.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   180.,   452.,   724.,   996.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  1396.,  1924.,  2452.,  2980.,  1542.,  1774.,   150.,   382.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  2660.,  3060.,   260.,   660.,  1732.,  2388.,  3044.,  3700.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   420.,  1076.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1060.,  1460.,  1860.,  2260.,  2814.,  3238.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   110.,   150.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  3238.,  3726.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,   270.,   310.,    30.,    70.,   278.,   382.,   486.,   590.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,   614.,   846.,  1078.,  1310.,   694.,   798.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  4356.,  5012.,   420.,  1076.,  1060.,  1460.,  1860.,  2260.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1732.,  2388.,  3044.,  3700.,  1966.,  2262.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  3508.,  4036.,   340.,   868.,  2068.,  2852.,  3636.,  4420.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   500.,  1284.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  1396.,  1924.,  2452.,  2980.,  3238.,  3726.,   310.,   798.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  2262.,  2750.,  3238.,  3726.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   694.,   798.,    70.,   174.,   446.,   614.,   782.,   950.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  1374.,  1670.,  1966.,  2262.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,   782.,  1078.,  1374.,  1670.,  1118.,  1286.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,   782.,  1078.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  5204.,  5988.,   500.,  1284.,  1396.,  1924.,  2452.,  2980.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  2068.,  2852.,  3636.,  4420.,  2390.,  2750.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  4356.,  5012.,   420.,  1076.,  1060.,  1460.,  1860.,  2260.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1732.,  2388.,  3044.,  3700.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1118.,  1286.,   110.,   278.};
  const std::array<int, 4> in_shape = {{ 3, 12, 11, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x11x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   420.,   564.,   708.,   852.,   996.,  1140.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,   590.,   630.,    30.,    70.,   110.,   150.,   190.,   230.,  1796.,  1940.,   420.,   564.,   708.,   852.,   486.,   590.,   694.,   798.,   902.,  1006.,  1110.,  1214.,   510.,   550.,   590.,   630.,    30.,    70.,   110.,   150.,  1508.,  1652.,  1796.,  1940.,   420.,   564.,   278.,   382.,   486.,   590.,   694.,   798.,   902.,  1006.,   430.,   470.,   510.,   550.,   590.,   630.,    30.,    70.,  1220.,  1364.,  1508.,  1652.,  1796.,  1940.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,   460.,   668.,   876.,  1084.,  1292.,  1500.,  1708.,  1916.,  2536.,  3080.,  3624.,  4168.,  4712.,  5256.,  3068.,  3404.,  2076.,  2412.,  2748.,  3084.,  3420.,  3756.,  2732.,  2940.,   460.,   668.,   876.,  1084.,  1292.,  1500.,  5800.,  6344.,  2536.,  3080.,  3624.,  4168.,  2396.,  2732.,  3068.,  3404.,  2076.,  2412.,  2748.,  3084.,  2316.,  2524.,  2732.,  2940.,   460.,   668.,   876.,  1084.,  4712.,  5256.,  5800.,  6344.,  2536.,  3080.,  1724.,  2060.,  2396.,  2732.,  3068.,  3404.,  2076.,  2412.,  1790.,  1958.,  2126.,  2294.,  2462.,  2630.,   110.,   278.,  2916.,  3316.,  3716.,  4116.,  4516.,  4916.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  2462.,  2630.,  2116.,  2516.,  2916.,  3316.,  3716.,  4116.,  3398.,  3630.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  4004.,  4404.,  2116.,  2516.,  2916.,  3316.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,   614.,   846.,   782.,   950.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  3204.,  3604.,  4004.,  4404.,  2116.,  2516.,  2470.,  2702.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,  2788.,  3444.,  4100.,  4756.,  5412.,  6068.,  2390.,  2750.,  3110.,  3470.,  3830.,  4190.,  4550.,  4910.,  4334.,  4630.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  7236.,  7892.,  2788.,  3444.,  4100.,  4756.,  1670.,  2030.,  2390.,  2750.,  3110.,  3470.,  3830.,  4190.,  3742.,  4038.,  4334.,  4630.,   190.,   486.,   782.,  1078.,  5924.,  6580.,  7236.,  7892.,  2788.,  3444.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,  3110.,  3470.,  3150.,  3446.,  3742.,  4038.,  4334.,  4630.,   190.,   486.,  4612.,  5268.,  5924.,  6580.,  7236.,  7892.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,  2828.,  3548.,  4268.,  4988.,  5708.,  6428.,  7148.,  7868.,  7272.,  8840., 10408., 11976., 13544., 15112.,  8508.,  9356.,  4444.,  5292.,  6140.,  6988.,  7836.,  8684.,  8172.,  8892.,  2828.,  3548.,  4268.,  4988.,  5708.,  6428., 16680., 18248.,  7272.,  8840., 10408., 11976.,  6812.,  7660.,  8508.,  9356.,  4444.,  5292.,  6140.,  6988.,  6732.,  7452.,  8172.,  8892.,  2828.,  3548.,  4268.,  4988., 13544., 15112., 16680., 18248.,  7272.,  8840.,  5116.,  5964.,  6812.,  7660.,  8508.,  9356.,  4444.,  5292.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,   270.,   694.,  6308.,  7220.,  8132.,  9044.,  9956., 10868.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,  3662.,  4086.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,  4484.,  5396.,  6308.,  7220.,  8132.,  9044.,  7142.,  7630.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  2814.,  3238.,  3662.,  4086.,  4510.,  4934.,  5358.,  5782.,  9444., 10356.,  4484.,  5396.,  6308.,  7220.,  6166.,  6654.,  7142.,  7630.,   310.,   798.,  1286.,  1774.,  1966.,  2390.,  2814.,  3238.,  3662.,  4086.,  4510.,  4934.,  7620.,  8532.,  9444., 10356.,  4484.,  5396.,  5190.,  5678.,  6166.,  6654.,  7142.,  7630.,   310.,   798.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   350.,   902.,  1454.,  2006.,  2558.,  3110.,  3662.,  4214.,  5156.,  6324.,  7492.,  8660.,  9828., 10996.,  4086.,  4702.,  5318.,  5934.,  6550.,  7166.,  7782.,  8398.,  8078.,  8630.,   350.,   902.,  1454.,  2006.,  2558.,  3110., 12676., 13844.,  5156.,  6324.,  7492.,  8660.,  2854.,  3470.,  4086.,  4702.,  5318.,  5934.,  6550.,  7166.,  6974.,  7526.,  8078.,  8630.,   350.,   902.,  1454.,  2006., 10340., 11508., 12676., 13844.,  5156.,  6324.,  1622.,  2238.,  2854.,  3470.,  4086.,  4702.,  5318.,  5934.,  5870.,  6422.,  6974.,  7526.,  8078.,  8630.,   350.,   902.,  8004.,  9172., 10340., 11508., 12676., 13844.,   390.,  1006.,  1622.,  2238.,  2854.,  3470.,  4086.,  4702.,  5196.,  6428.,  7660.,  8892., 10124., 11356., 12588., 13820., 12008., 14600., 17192., 19784., 22376., 24968., 13948., 15308.,  6812.,  8172.,  9532., 10892., 12252., 13612., 13612., 14844.,  5196.,  6428.,  7660.,  8892., 10124., 11356., 27560., 30152., 12008., 14600., 17192., 19784., 11228., 12588., 13948., 15308.,  6812.,  8172.,  9532., 10892., 11148., 12380., 13612., 14844.,  5196.,  6428.,  7660.,  8892., 22376., 24968., 27560., 30152., 12008., 14600.,  8508.,  9868., 11228., 12588., 13948., 15308.,  6812.,  8172.,  7230.,  7910.,  8590.,  9270.,  9950., 10630.,   430.,  1110.,  9700., 11124., 12548., 13972., 15396., 16820.,   470.,  1214.,  1958.,  2702.,  3446.,  4190.,  4934.,  5678.,  5870.,  6550.,  7230.,  7910.,  8590.,  9270.,  9950., 10630.,  6852.,  8276.,  9700., 11124., 12548., 13972., 10886., 11630.,   470.,  1214.,  1958.,  2702.,  3446.,  4190.,  4510.,  5190.,  5870.,  6550.,  7230.,  7910.,  8590.,  9270., 14884., 16308.,  6852.,  8276.,  9700., 11124.,  9398., 10142., 10886., 11630.,   470.,  1214.,  1958.,  2702.,  3150.,  3830.,  4510.,  5190.,  5870.,  6550.,  7230.,  7910., 12036., 13460., 14884., 16308.,  6852.,  8276.,  7910.,  8654.,  9398., 10142., 10886., 11630.,   470.,  1214.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 11, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x11x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   37.,    38.,    39.,    40.,    41.,    42.,    43.,    44.,   103.,   106.,   109.,   112.,   115.,   118.,   121.,   124.,   127.,   130.,   133.,   136.,    82.,    84.,    86.,    88.,   177.,   182.,   187.,   192.,   197.,   202.,   207.,   212.,   217.,   222.,   227.,   232.,   123.,   126.,   129.,   132.,   135.,   138.,   141.,   144.,    65.,    66.,    67.,    68.,    69.,    70.,    71.,    72.,   187.,   190.,   193.,   196.,   199.,   202.,   205.,   208.,   211.,   214.,   217.,   220.,   138.,   140.,   142.,   144.,   317.,   322.,   327.,   332.,   337.,   342.,   347.,   352.,   357.,   362.,   367.,   372.,   207.,   210.,   213.,   216.,   219.,   222.,   225.,   228.,    93.,    94.,    95.,    96.,    97.,    98.,    99.,   100.,   271.,   274.,   277.,   280.,   283.,   286.,   289.,   292.,   295.,   298.,   301.,   304.,   194.,   196.,   198.,   200.,   457.,   462.,   467.,   472.,   477.,   482.,   487.,   492.,   497.,   502.,   507.,   512.,   291.,   294.,   297.,   300.,   303.,   306.,   309.,   312.,   157.,   162.,   167.,   172.,   177.,   182.,   187.,   192.,   428.,   440.,   452.,   464.,   476.,   488.,   500.,   512.,   524.,   536.,   548.,   560.,   315.,   322.,   329.,   336.,   688.,   704.,   720.,   736.,   752.,   768.,   784.,   800.,   816.,   832.,   848.,   864.,   453.,   462.,   471.,   480.,   489.,   498.,   507.,   516.,   297.,   302.,   307.,   312.,   317.,   322.,   327.,   332.,   764.,   776.,   788.,   800.,   812.,   824.,   836.,   848.,   860.,   872.,   884.,   896.,   511.,   518.,   525.,   532.,  1136.,  1152.,  1168.,  1184.,  1200.,  1216.,  1232.,  1248.,  1264.,  1280.,  1296.,  1312.,   705.,   714.,   723.,   732.,   741.,   750.,   759.,   768.,   437.,   442.,   447.,   452.,   457.,   462.,   467.,   472.,  1100.,  1112.,  1124.,  1136.,  1148.,  1160.,  1172.,  1184.,  1196.,  1208.,  1220.,  1232.,   707.,   714.,   721.,   728.,  1584.,  1600.,  1616.,  1632.,  1648.,  1664.,  1680.,  1696.,  1712.,  1728.,  1744.,  1760.,   957.,   966.,   975.,   984.,   993.,  1002.,  1011.,  1020.,   372.,   376.,   380.,   384.,   388.,   392.,   396.,   400.,   829.,   838.,   847.,   856.,   865.,   874.,   883.,   892.,   901.,   910.,   919.,   928.,   485.,   490.,   495.,   500.,  1015.,  1026.,  1037.,  1048.,  1059.,  1070.,  1081.,  1092.,  1103.,  1114.,  1125.,  1136.,   582.,   588.,   594.,   600.,   606.,   612.,   618.,   624.,   547.,   558.,   569.,   580.,   591.,   602.,   613.,   624.,  1208.,  1232.,  1256.,  1280.,  1304.,  1328.,  1352.,  1376.,  1400.,  1424.,  1448.,  1472.,   729.,   742.,   755.,   768.,  1468.,  1496.,  1524.,  1552.,  1580.,  1608.,  1636.,  1664.,  1692.,  1720.,  1748.,  1776.,   867.,   882.,   897.,   912.,   927.,   942.,   957.,   972.,   855.,   866.,   877.,   888.,   899.,   910.,   921.,   932.,  1880.,  1904.,  1928.,  1952.,  1976.,  2000.,  2024.,  2048.,  2072.,  2096.,  2120.,  2144.,  1093.,  1106.,  1119.,  1132.,  2252.,  2280.,  2308.,  2336.,  2364.,  2392.,  2420.,  2448.,  2476.,  2504.,  2532.,  2560.,  1287.,  1302.,  1317.,  1332.,  1347.,  1362.,  1377.,  1392.,  1163.,  1174.,  1185.,  1196.,  1207.,  1218.,  1229.,  1240.,  2552.,  2576.,  2600.,  2624.,  2648.,  2672.,  2696.,  2720.,  2744.,  2768.,  2792.,  2816.,  1457.,  1470.,  1483.,  1496.,  3036.,  3064.,  3092.,  3120.,  3148.,  3176.,  3204.,  3232.,  3260.,  3288.,  3316.,  3344.,  1707.,  1722.,  1737.,  1752.,  1767.,  1782.,  1797.,  1812.,   651.,   658.,   665.,   672.,   679.,   686.,   693.,   700.,  1387.,  1402.,  1417.,  1432.,  1447.,  1462.,  1477.,  1492.,  1507.,  1522.,  1537.,  1552.,   776.,   784.,   792.,   800.,  1573.,  1590.,  1607.,  1624.,  1641.,  1658.,  1675.,  1692.,  1709.,  1726.,  1743.,  1760.,   873.,   882.,   891.,   900.,   909.,   918.,   927.,   936.,   847.,   854.,   861.,   868.,   875.,   882.,   889.,   896.,  1807.,  1822.,  1837.,  1852.,  1867.,  1882.,  1897.,  1912.,  1927.,  1942.,  1957.,  1972.,  1000.,  1008.,  1016.,  1024.,  2049.,  2066.,  2083.,  2100.,  2117.,  2134.,  2151.,  2168.,  2185.,  2202.,  2219.,  2236.,  1125.,  1134.,  1143.,  1152.,  1161.,  1170.,  1179.,  1188.,   370.,   380.,   390.,   400.,   410.,   420.,   430.,   440.,   769.,   790.,   811.,   832.,   853.,   874.,   895.,   916.,   937.,   958.,   979.,  1000.,   451.,   462.,   473.,   484.,   843.,   866.,   889.,   912.,   935.,   958.,   981.,  1004.,  1027.,  1050.,  1073.,  1096.,   492.,   504.,   516.,   528.,   540.,   552.,   564.,   576.,   650.,   660.,   670.,   680.,   690.,   700.,   710.,   720.,  1357.,  1378.,  1399.,  1420.,  1441.,  1462.,  1483.,  1504.,  1525.,  1546.,  1567.,  1588.,   759.,   770.,   781.,   792.,  1487.,  1510.,  1533.,  1556.,  1579.,  1602.,  1625.,  1648.,  1671.,  1694.,  1717.,  1740.,   828.,   840.,   852.,   864.,   876.,   888.,   900.,   912.,   930.,   940.,   950.,   960.,   970.,   980.,   990.,  1000.,  1945.,  1966.,  1987.,  2008.,  2029.,  2050.,  2071.,  2092.,  2113.,  2134.,  2155.,  2176.,  1067.,  1078.,  1089.,  1100.,  2131.,  2154.,  2177.,  2200.,  2223.,  2246.,  2269.,  2292.,  2315.,  2338.,  2361.,  2384.,  1164.,  1176.,  1188.,  1200.,  1212.,  1224.,  1236.,  1248.,  1327.,  1350.,  1373.,  1396.,  1419.,  1442.,  1465.,  1488.,  2768.,  2816.,  2864.,  2912.,  2960.,  3008.,  3056.,  3104.,  3152.,  3200.,  3248.,  3296.,  1557.,  1582.,  1607.,  1632.,  3028.,  3080.,  3132.,  3184.,  3236.,  3288.,  3340.,  3392.,  3444.,  3496.,  3548.,  3600.,  1695.,  1722.,  1749.,  1776.,  1803.,  1830.,  1857.,  1884.,  1971.,  1994.,  2017.,  2040.,  2063.,  2086.,  2109.,  2132.,  4112.,  4160.,  4208.,  4256.,  4304.,  4352.,  4400.,  4448.,  4496.,  4544.,  4592.,  4640.,  2257.,  2282.,  2307.,  2332.,  4484.,  4536.,  4588.,  4640.,  4692.,  4744.,  4796.,  4848.,  4900.,  4952.,  5004.,  5056.,  2451.,  2478.,  2505.,  2532.,  2559.,  2586.,  2613.,  2640.,  2615.,  2638.,  2661.,  2684.,  2707.,  2730.,  2753.,  2776.,  5456.,  5504.,  5552.,  5600.,  5648.,  5696.,  5744.,  5792.,  5840.,  5888.,  5936.,  5984.,  2957.,  2982.,  3007.,  3032.,  5940.,  5992.,  6044.,  6096.,  6148.,  6200.,  6252.,  6304.,  6356.,  6408.,  6460.,  6512.,  3207.,  3234.,  3261.,  3288.,  3315.,  3342.,  3369.,  3396.,  1209.,  1222.,  1235.,  1248.,  1261.,  1274.,  1287.,  1300.,  2503.,  2530.,  2557.,  2584.,  2611.,  2638.,  2665.,  2692.,  2719.,  2746.,  2773.,  2800.,  1358.,  1372.,  1386.,  1400.,  2689.,  2718.,  2747.,  2776.,  2805.,  2834.,  2863.,  2892.,  2921.,  2950.,  2979.,  3008.,  1455.,  1470.,  1485.,  1500.,  1515.,  1530.,  1545.,  1560.,  1717.,  1746.,  1775.,  1804.,  1833.,  1862.,  1891.,  1920.,  3548.,  3608.,  3668.,  3728.,  3788.,  3848.,  3908.,  3968.,  4028.,  4088.,  4148.,  4208.,  1971.,  2002.,  2033.,  2064.,  3808.,  3872.,  3936.,  4000.,  4064.,  4128.,  4192.,  4256.,  4320.,  4384.,  4448.,  4512.,  2109.,  2142.,  2175.,  2208.,  2241.,  2274.,  2307.,  2340.,  2529.,  2558.,  2587.,  2616.,  2645.,  2674.,  2703.,  2732.,  5228.,  5288.,  5348.,  5408.,  5468.,  5528.,  5588.,  5648.,  5708.,  5768.,  5828.,  5888.,  2839.,  2870.,  2901.,  2932.,  5600.,  5664.,  5728.,  5792.,  5856.,  5920.,  5984.,  6048.,  6112.,  6176.,  6240.,  6304.,  3033.,  3066.,  3099.,  3132.,  3165.,  3198.,  3231.,  3264.,  3341.,  3370.,  3399.,  3428.,  3457.,  3486.,  3515.,  3544.,  6908.,  6968.,  7028.,  7088.,  7148.,  7208.,  7268.,  7328.,  7388.,  7448.,  7508.,  7568.,  3707.,  3738.,  3769.,  3800.,  7392.,  7456.,  7520.,  7584.,  7648.,  7712.,  7776.,  7840.,  7904.,  7968.,  8032.,  8096.,  3957.,  3990.,  4023.,  4056.,  4089.,  4122.,  4155.,  4188.,  1488.,  1504.,  1520.,  1536.,  1552.,  1568.,  1584.,  1600.,  3061.,  3094.,  3127.,  3160.,  3193.,  3226.,  3259.,  3292.,  3325.,  3358.,  3391.,  3424.,  1649.,  1666.,  1683.,  1700.,  3247.,  3282.,  3317.,  3352.,  3387.,  3422.,  3457.,  3492.,  3527.,  3562.,  3597.,  3632.,  1746.,  1764.,  1782.,  1800.,  1818.,  1836.,  1854.,  1872.,  1936.,  1952.,  1968.,  1984.,  2000.,  2016.,  2032.,  2048.,  3985.,  4018.,  4051.,  4084.,  4117.,  4150.,  4183.,  4216.,  4249.,  4282.,  4315.,  4348.,  2125.,  2142.,  2159.,  2176.,  4227.,  4262.,  4297.,  4332.,  4367.,  4402.,  4437.,  4472.,  4507.,  4542.,  4577.,  4612.,  2250.,  2268.,  2286.,  2304.,  2322.,  2340.,  2358.,  2376.,   703.,   722.,   741.,   760.,   779.,   798.,   817.,   836.,  1435.,  1474.,  1513.,  1552.,  1591.,  1630.,  1669.,  1708.,  1747.,  1786.,  1825.,  1864.,   820.,   840.,   860.,   880.,  1509.,  1550.,  1591.,  1632.,  1673.,  1714.,  1755.,  1796.,  1837.,  1878.,  1919.,  1960.,   861.,   882.,   903.,   924.,   945.,   966.,   987.,  1008.,  1235.,  1254.,  1273.,  1292.,  1311.,  1330.,  1349.,  1368.,  2527.,  2566.,  2605.,  2644.,  2683.,  2722.,  2761.,  2800.,  2839.,  2878.,  2917.,  2956.,  1380.,  1400.,  1420.,  1440.,  2657.,  2698.,  2739.,  2780.,  2821.,  2862.,  2903.,  2944.,  2985.,  3026.,  3067.,  3108.,  1449.,  1470.,  1491.,  1512.,  1533.,  1554.,  1575.,  1596.,  1767.,  1786.,  1805.,  1824.,  1843.,  1862.,  1881.,  1900.,  3619.,  3658.,  3697.,  3736.,  3775.,  3814.,  3853.,  3892.,  3931.,  3970.,  4009.,  4048.,  1940.,  1960.,  1980.,  2000.,  3805.,  3846.,  3887.,  3928.,  3969.,  4010.,  4051.,  4092.,  4133.,  4174.,  4215.,  4256.,  2037.,  2058.,  2079.,  2100.,  2121.,  2142.,  2163.,  2184.,  2497.,  2538.,  2579.,  2620.,  2661.,  2702.,  2743.,  2784.,  5108.,  5192.,  5276.,  5360.,  5444.,  5528.,  5612.,  5696.,  5780.,  5864.,  5948.,  6032.,  2799.,  2842.,  2885.,  2928.,  5368.,  5456.,  5544.,  5632.,  5720.,  5808.,  5896.,  5984.,  6072.,  6160.,  6248.,  6336.,  2937.,  2982.,  3027.,  3072.,  3117.,  3162.,  3207.,  3252.,  3645.,  3686.,  3727.,  3768.,  3809.,  3850.,  3891.,  3932.,  7460.,  7544.,  7628.,  7712.,  7796.,  7880.,  7964.,  8048.,  8132.,  8216.,  8300.,  8384.,  4003.,  4046.,  4089.,  4132.,  7832.,  7920.,  8008.,  8096.,  8184.,  8272.,  8360.,  8448.,  8536.,  8624.,  8712.,  8800.,  4197.,  4242.,  4287.,  4332.,  4377.,  4422.,  4467.,  4512.,  4793.,  4834.,  4875.,  4916.,  4957.,  4998.,  5039.,  5080.,  9812.,  9896.,  9980., 10064., 10148., 10232., 10316., 10400., 10484., 10568., 10652., 10736.,  5207.,  5250.,  5293.,  5336., 10296., 10384., 10472., 10560., 10648., 10736., 10824., 10912., 11000., 11088., 11176., 11264.,  5457.,  5502.,  5547.,  5592.,  5637.,  5682.,  5727.,  5772.,  2046.,  2068.,  2090.,  2112.,  2134.,  2156.,  2178.,  2200.,  4177.,  4222.,  4267.,  4312.,  4357.,  4402.,  4447.,  4492.,  4537.,  4582.,  4627.,  4672.,  2231.,  2254.,  2277.,  2300.,  4363.,  4410.,  4457.,  4504.,  4551.,  4598.,  4645.,  4692.,  4739.,  4786.,  4833.,  4880.,  2328.,  2352.,  2376.,  2400.,  2424.,  2448.,  2472.,  2496.,  2887.,  2934.,  2981.,  3028.,  3075.,  3122.,  3169.,  3216.,  5888.,  5984.,  6080.,  6176.,  6272.,  6368.,  6464.,  6560.,  6656.,  6752.,  6848.,  6944.,  3213.,  3262.,  3311.,  3360.,  6148.,  6248.,  6348.,  6448.,  6548.,  6648.,  6748.,  6848.,  6948.,  7048.,  7148.,  7248.,  3351.,  3402.,  3453.,  3504.,  3555.,  3606.,  3657.,  3708.,  4203.,  4250.,  4297.,  4344.,  4391.,  4438.,  4485.,  4532.,  8576.,  8672.,  8768.,  8864.,  8960.,  9056.,  9152.,  9248.,  9344.,  9440.,  9536.,  9632.,  4585.,  4634.,  4683.,  4732.,  8948.,  9048.,  9148.,  9248.,  9348.,  9448.,  9548.,  9648.,  9748.,  9848.,  9948., 10048.,  4779.,  4830.,  4881.,  4932.,  4983.,  5034.,  5085.,  5136.,  5519.,  5566.,  5613.,  5660.,  5707.,  5754.,  5801.,  5848., 11264., 11360., 11456., 11552., 11648., 11744., 11840., 11936., 12032., 12128., 12224., 12320.,  5957.,  6006.,  6055.,  6104., 11748., 11848., 11948., 12048., 12148., 12248., 12348., 12448., 12548., 12648., 12748., 12848.,  6207.,  6258.,  6309.,  6360.,  6411.,  6462.,  6513.,  6564.,  2325.,  2350.,  2375.,  2400.,  2425.,  2450.,  2475.,  2500.,  4735.,  4786.,  4837.,  4888.,  4939.,  4990.,  5041.,  5092.,  5143.,  5194.,  5245.,  5296.,  2522.,  2548.,  2574.,  2600.,  4921.,  4974.,  5027.,  5080.,  5133.,  5186.,  5239.,  5292.,  5345.,  5398.,  5451.,  5504.,  2619.,  2646.,  2673.,  2700.,  2727.,  2754.,  2781.,  2808.,  3025.,  3050.,  3075.,  3100.,  3125.,  3150.,  3175.,  3200.,  6163.,  6214.,  6265.,  6316.,  6367.,  6418.,  6469.,  6520.,  6571.,  6622.,  6673.,  6724.,  3250.,  3276.,  3302.,  3328.,  6405.,  6458.,  6511.,  6564.,  6617.,  6670.,  6723.,  6776.,  6829.,  6882.,  6935.,  6988.,  3375.,  3402.,  3429.,  3456.,  3483.,  3510.,  3537.,  3564.};
  const std::array<int, 4> in_shape = {{ 3, 12, 11, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x11x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,    9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   19.,   22.,   25.,   28.,   31.,   34.,   37.,   40.,   43.,   46.,   49.,   52.,   26.,   28.,   30.,   32.,   34.,   36.,   38.,   40.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,  103.,  106.,  109.,  112.,  115.,  118.,  121.,  124.,  127.,  130.,  133.,  136.,   82.,   84.,   86.,   88.,   90.,   92.,   94.,   96.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,   57.,   58.,   59.,   60.,   61.,   62.,   63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  146.,  148.,  150.,  152.,  154.,  156.,  158.,  160.,  162.,  164.,  166.,  168.,   85.,   86.,   87.,   88.,   89.,   90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  202.,  204.,  206.,  208.,  210.,  212.,  214.,  216.,  218.,  220.,  222.,  224.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  148.,  152.,  156.,  160.,  164.,  168.,  172.,  176.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  302.,  308.,  314.,  320.,  326.,  332.,  338.,  344.,  350.,  356.,  362.,  368.,  374.,  380.,  386.,  392.,  228.,  232.,  236.,  240.,  244.,  248.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,  284.,  288.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  470.,  476.,  482.,  488.,  494.,  500.,  506.,  512.,  518.,  524.,  530.,  536.,  542.,  548.,  554.,  560.,  340.,  344.,  348.,  352.,  356.,  360.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,  396.,  400.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080.,  638.,  644.,  650.,  656.,  662.,  668.,  674.,  680.,  686.,  692.,  698.,  704.,  710.,  716.,  722.,  728.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  279.,  282.,  285.,  288.,  291.,  294.,  297.,  300.,  643.,  650.,  657.,  664.,  671.,  678.,  685.,  692.,  699.,  706.,  713.,  720.,  388.,  392.,  396.,  400.,  404.,  408.,  412.,  416.,  420.,  424.,  428.,  432.,  436.,  440.,  444.,  448.,  339.,  342.,  345.,  348.,  351.,  354.,  357.,  360.,  363.,  366.,  369.,  372.,  375.,  378.,  381.,  384.,  839.,  846.,  853.,  860.,  867.,  874.,  881.,  888.,  895.,  902.,  909.,  916.,  500.,  504.,  508.,  512.,  516.,  520.,  524.,  528.,  532.,  536.,  540.,  544.,  548.,  552.,  556.,  560.,  423.,  426.,  429.,  432.,  435.,  438.,  441.,  444.,  447.,  450.,  453.,  456.,  459.,  462.,  465.,  468., 1035., 1042., 1049., 1056., 1063., 1070., 1077., 1084., 1091., 1098., 1105., 1112.,  612.,  616.,  620.,  624.,  628.,  632.,  636.,  640.,  644.,  648.,  652.,  656.,  660.,  664.,  668.,  672.,  507.,  510.,  513.,  516.,  519.,  522.,  525.,  528.,  531.,  534.,  537.,  540.,  543.,  546.,  549.,  552., 1231., 1238., 1245., 1252., 1259., 1266., 1273., 1280., 1287., 1294., 1301., 1308.,  724.,  728.,  732.,  736.,  740.,  744.,  748.,  752.,  756.,  760.,  764.,  768.,  772.,  776.,  780.,  784.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    5.,   10.,   15.,   20.,   25.,   30.,   35.,   40.,   45.,   50.,   55.,   60.,   65.,   70.,   75.,   80.,   91.,  102.,  113.,  124.,  135.,  146.,  157.,  168.,  179.,  190.,  201.,  212.,   78.,   84.,   90.,   96.,  102.,  108.,  114.,  120.,  126.,  132.,  138.,  144.,  150.,  156.,  162.,  168.,  145.,  150.,  155.,  160.,  165.,  170.,  175.,  180.,  185.,  190.,  195.,  200.,  205.,  210.,  215.,  220.,  399.,  410.,  421.,  432.,  443.,  454.,  465.,  476.,  487.,  498.,  509.,  520.,  246.,  252.,  258.,  264.,  270.,  276.,  282.,  288.,  294.,  300.,  306.,  312.,  318.,  324.,  330.,  336.,  285.,  290.,  295.,  300.,  305.,  310.,  315.,  320.,  325.,  330.,  335.,  340.,  345.,  350.,  355.,  360.,  707.,  718.,  729.,  740.,  751.,  762.,  773.,  784.,  795.,  806.,  817.,  828.,  414.,  420.,  426.,  432.,  438.,  444.,  450.,  456.,  462.,  468.,  474.,  480.,  486.,  492.,  498.,  504.,  425.,  430.,  435.,  440.,  445.,  450.,  455.,  460.,  465.,  470.,  475.,  480.,  485.,  490.,  495.,  500., 1015., 1026., 1037., 1048., 1059., 1070., 1081., 1092., 1103., 1114., 1125., 1136.,  582.,  588.,  594.,  600.,  606.,  612.,  618.,  624.,  630.,  636.,  642.,  648.,  654.,  660.,  666.,  672.,  572.,  584.,  596.,  608.,  620.,  632.,  644.,  656.,  668.,  680.,  692.,  704.,  716.,  728.,  740.,  752., 1450., 1476., 1502., 1528., 1554., 1580., 1606., 1632., 1658., 1684., 1710., 1736.,  854.,  868.,  882.,  896.,  910.,  924.,  938.,  952.,  966.,  980.,  994., 1008., 1022., 1036., 1050., 1064.,  908.,  920.,  932.,  944.,  956.,  968.,  980.,  992., 1004., 1016., 1028., 1040., 1052., 1064., 1076., 1088., 2178., 2204., 2230., 2256., 2282., 2308., 2334., 2360., 2386., 2412., 2438., 2464., 1246., 1260., 1274., 1288., 1302., 1316., 1330., 1344., 1358., 1372., 1386., 1400., 1414., 1428., 1442., 1456., 1244., 1256., 1268., 1280., 1292., 1304., 1316., 1328., 1340., 1352., 1364., 1376., 1388., 1400., 1412., 1424., 2906., 2932., 2958., 2984., 3010., 3036., 3062., 3088., 3114., 3140., 3166., 3192., 1638., 1652., 1666., 1680., 1694., 1708., 1722., 1736., 1750., 1764., 1778., 1792., 1806., 1820., 1834., 1848.,  595.,  602.,  609.,  616.,  623.,  630.,  637.,  644.,  651.,  658.,  665.,  672.,  679.,  686.,  693.,  700., 1387., 1402., 1417., 1432., 1447., 1462., 1477., 1492., 1507., 1522., 1537., 1552.,  776.,  784.,  792.,  800.,  808.,  816.,  824.,  832.,  840.,  848.,  856.,  864.,  872.,  880.,  888.,  896.,  791.,  798.,  805.,  812.,  819.,  826.,  833.,  840.,  847.,  854.,  861.,  868.,  875.,  882.,  889.,  896., 1807., 1822., 1837., 1852., 1867., 1882., 1897., 1912., 1927., 1942., 1957., 1972., 1000., 1008., 1016., 1024., 1032., 1040., 1048., 1056., 1064., 1072., 1080., 1088., 1096., 1104., 1112., 1120.,  987.,  994., 1001., 1008., 1015., 1022., 1029., 1036., 1043., 1050., 1057., 1064., 1071., 1078., 1085., 1092., 2227., 2242., 2257., 2272., 2287., 2302., 2317., 2332., 2347., 2362., 2377., 2392., 1224., 1232., 1240., 1248., 1256., 1264., 1272., 1280., 1288., 1296., 1304., 1312., 1320., 1328., 1336., 1344., 1183., 1190., 1197., 1204., 1211., 1218., 1225., 1232., 1239., 1246., 1253., 1260., 1267., 1274., 1281., 1288., 2647., 2662., 2677., 2692., 2707., 2722., 2737., 2752., 2767., 2782., 2797., 2812., 1448., 1456., 1464., 1472., 1480., 1488., 1496., 1504., 1512., 1520., 1528., 1536., 1544., 1552., 1560., 1568.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    9.,   18.,   27.,   36.,   45.,   54.,   63.,   72.,   81.,   90.,   99.,  108.,  117.,  126.,  135.,  144.,  163.,  182.,  201.,  220.,  239.,  258.,  277.,  296.,  315.,  334.,  353.,  372.,  130.,  140.,  150.,  160.,  170.,  180.,  190.,  200.,  210.,  220.,  230.,  240.,  250.,  260.,  270.,  280.,  261.,  270.,  279.,  288.,  297.,  306.,  315.,  324.,  333.,  342.,  351.,  360.,  369.,  378.,  387.,  396.,  695.,  714.,  733.,  752.,  771.,  790.,  809.,  828.,  847.,  866.,  885.,  904.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  530.,  540.,  550.,  560.,  513.,  522.,  531.,  540.,  549.,  558.,  567.,  576.,  585.,  594.,  603.,  612.,  621.,  630.,  639.,  648., 1227., 1246., 1265., 1284., 1303., 1322., 1341., 1360., 1379., 1398., 1417., 1436.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  810.,  820.,  830.,  840.,  765.,  774.,  783.,  792.,  801.,  810.,  819.,  828.,  837.,  846.,  855.,  864.,  873.,  882.,  891.,  900., 1759., 1778., 1797., 1816., 1835., 1854., 1873., 1892., 1911., 1930., 1949., 1968.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080., 1090., 1100., 1110., 1120., 1028., 1048., 1068., 1088., 1108., 1128., 1148., 1168., 1188., 1208., 1228., 1248., 1268., 1288., 1308., 1328., 2490., 2532., 2574., 2616., 2658., 2700., 2742., 2784., 2826., 2868., 2910., 2952., 1406., 1428., 1450., 1472., 1494., 1516., 1538., 1560., 1582., 1604., 1626., 1648., 1670., 1692., 1714., 1736., 1588., 1608., 1628., 1648., 1668., 1688., 1708., 1728., 1748., 1768., 1788., 1808., 1828., 1848., 1868., 1888., 3666., 3708., 3750., 3792., 3834., 3876., 3918., 3960., 4002., 4044., 4086., 4128., 2022., 2044., 2066., 2088., 2110., 2132., 2154., 2176., 2198., 2220., 2242., 2264., 2286., 2308., 2330., 2352., 2148., 2168., 2188., 2208., 2228., 2248., 2268., 2288., 2308., 2328., 2348., 2368., 2388., 2408., 2428., 2448., 4842., 4884., 4926., 4968., 5010., 5052., 5094., 5136., 5178., 5220., 5262., 5304., 2638., 2660., 2682., 2704., 2726., 2748., 2770., 2792., 2814., 2836., 2858., 2880., 2902., 2924., 2946., 2968.,  935.,  946.,  957.,  968.,  979.,  990., 1001., 1012., 1023., 1034., 1045., 1056., 1067., 1078., 1089., 1100., 2131., 2154., 2177., 2200., 2223., 2246., 2269., 2292., 2315., 2338., 2361., 2384., 1164., 1176., 1188., 1200., 1212., 1224., 1236., 1248., 1260., 1272., 1284., 1296., 1308., 1320., 1332., 1344., 1243., 1254., 1265., 1276., 1287., 1298., 1309., 1320., 1331., 1342., 1353., 1364., 1375., 1386., 1397., 1408., 2775., 2798., 2821., 2844., 2867., 2890., 2913., 2936., 2959., 2982., 3005., 3028., 1500., 1512., 1524., 1536., 1548., 1560., 1572., 1584., 1596., 1608., 1620., 1632., 1644., 1656., 1668., 1680., 1551., 1562., 1573., 1584., 1595., 1606., 1617., 1628., 1639., 1650., 1661., 1672., 1683., 1694., 1705., 1716., 3419., 3442., 3465., 3488., 3511., 3534., 3557., 3580., 3603., 3626., 3649., 3672., 1836., 1848., 1860., 1872., 1884., 1896., 1908., 1920., 1932., 1944., 1956., 1968., 1980., 1992., 2004., 2016., 1859., 1870., 1881., 1892., 1903., 1914., 1925., 1936., 1947., 1958., 1969., 1980., 1991., 2002., 2013., 2024., 4063., 4086., 4109., 4132., 4155., 4178., 4201., 4224., 4247., 4270., 4293., 4316., 2172., 2184., 2196., 2208., 2220., 2232., 2244., 2256., 2268., 2280., 2292., 2304., 2316., 2328., 2340., 2352.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 11, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x11x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   29.,    35.,    41.,    47.,    53.,    59.,    65.,    71.,   480.,   500.,   520.,   540.,   112.,   132.,   152.,   172.,   192.,   212.,   232.,   252.,   123.,   137.,   151.,   165.,   812.,   848.,   884.,   920.,   252.,   288.,   324.,   360.,   396.,   432.,   468.,   504.,   193.,   215.,   237.,   259.,   281.,   303.,   325.,   347.,     5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,   400.,   420.,   440.,   460.,   480.,   500.,   520.,   540.,   112.,   132.,   152.,   172.,    67.,    81.,    95.,   109.,   668.,   704.,   740.,   776.,   812.,   848.,   884.,   920.,   252.,   288.,   324.,   360.,   105.,   127.,   149.,   171.,   193.,   215.,   237.,   259.,   173.,   179.,   185.,   191.,     5.,    11.,    17.,    23.,   320.,   340.,   360.,   380.,   400.,   420.,   440.,   460.,   480.,   500.,   520.,   540.,    11.,    25.,    39.,    53.,   524.,   560.,   596.,   632.,   668.,   704.,   740.,   776.,   812.,   848.,   884.,   920.,    17.,    39.,    61.,    83.,   105.,   127.,   149.,   171.,   412.,   448.,   484.,   520.,   556.,   592.,   628.,   664.,   772.,   860.,   948.,  1036.,  1124.,  1212.,  1300.,  1388.,  1476.,  1564.,  1652.,  1740.,   888.,   940.,   992.,  1044.,  1052.,  1172.,  1292.,  1412.,  1532.,  1652.,  1772.,  1892.,  2012.,  2132.,  2252.,  2372.,  1220.,  1288.,  1356.,  1424.,   788.,   856.,   924.,   992.,   268.,   304.,   340.,   376.,   412.,   448.,   484.,   520.,  1828.,  1916.,  2004.,  2092.,   772.,   860.,   948.,  1036.,  1124.,  1212.,  1300.,  1388.,   680.,   732.,   784.,   836.,  2492.,  2612.,  2732.,  2852.,  1052.,  1172.,  1292.,  1412.,  1532.,  1652.,  1772.,  1892.,   948.,  1016.,  1084.,  1152.,  1220.,  1288.,  1356.,  1424.,   124.,   160.,   196.,   232.,   268.,   304.,   340.,   376.,  1476.,  1564.,  1652.,  1740.,  1828.,  1916.,  2004.,  2092.,   772.,   860.,   948.,  1036.,   472.,   524.,   576.,   628.,  2012.,  2132.,  2252.,  2372.,  2492.,  2612.,  2732.,  2852.,  1052.,  1172.,  1292.,  1412.,   676.,   744.,   812.,   880.,   948.,  1016.,  1084.,  1152.,   863.,   893.,   923.,   953.,    23.,    53.,    83.,   113.,   932.,  1000.,  1068.,  1136.,  1204.,  1272.,  1340.,  1408.,  1476.,  1544.,  1612.,  1680.,    29.,    67.,   105.,   143.,  1136.,  1220.,  1304.,  1388.,  1472.,  1556.,  1640.,  1724.,  1808.,  1892.,  1976.,  2060.,    35.,    81.,   127.,   173.,   219.,   265.,   311.,   357.,  1216.,  1300.,  1384.,  1468.,  1552.,  1636.,  1720.,  1804.,  1612.,  1796.,  1980.,  2164.,  2348.,  2532.,  2716.,  2900.,  3084.,  3268.,  3452.,  3636.,  1884.,  1984.,  2084.,  2184.,  1892.,  2108.,  2324.,  2540.,  2756.,  2972.,  3188.,  3404.,  3620.,  3836.,  4052.,  4268.,  2216.,  2332.,  2448.,  2564.,  1208.,  1324.,  1440.,  1556.,   880.,   964.,  1048.,  1132.,  1216.,  1300.,  1384.,  1468.,  3820.,  4004.,  4188.,  4372.,  1612.,  1796.,  1980.,  2164.,  2348.,  2532.,  2716.,  2900.,  1484.,  1584.,  1684.,  1784.,  4484.,  4700.,  4916.,  5132.,  1892.,  2108.,  2324.,  2540.,  2756.,  2972.,  3188.,  3404.,  1752.,  1868.,  1984.,  2100.,  2216.,  2332.,  2448.,  2564.,   544.,   628.,   712.,   796.,   880.,   964.,  1048.,  1132.,  3084.,  3268.,  3452.,  3636.,  3820.,  4004.,  4188.,  4372.,  1612.,  1796.,  1980.,  2164.,  1084.,  1184.,  1284.,  1384.,  3620.,  3836.,  4052.,  4268.,  4484.,  4700.,  4916.,  5132.,  1892.,  2108.,  2324.,  2540.,  1288.,  1404.,  1520.,  1636.,  1752.,  1868.,  1984.,  2100.,  1553.,  1607.,  1661.,  1715.,    41.,    95.,   149.,   203.,  1544.,  1660.,  1776.,  1892.,  2008.,  2124.,  2240.,  2356.,  2472.,  2588.,  2704.,  2820.,    47.,   109.,   171.,   233.,  1748.,  1880.,  2012.,  2144.,  2276.,  2408.,  2540.,  2672.,  2804.,  2936.,  3068.,  3200.,    53.,   123.,   193.,   263.,   333.,   403.,   473.,   543.,  1337.,  1391.,  1445.,  1499.,  1553.,  1607.,  1661.,  1715.,  1080.,  1196.,  1312.,  1428.,  1544.,  1660.,  1776.,  1892.,  2008.,  2124.,  2240.,  2356.,  1783.,  1845.,  1907.,  1969.,  1220.,  1352.,  1484.,  1616.,  1748.,  1880.,  2012.,  2144.,  2276.,  2408.,  2540.,  2672.,  2013.,  2083.,  2153.,  2223.,    53.,   123.,   193.,   263.,   371.,   449.,   527.,   605.,   683.,   761.,   839.,   917.,  3468.,  3632.,  3796.,  3960.,  1372.,  1536.,  1700.,  1864.,  2028.,  2192.,  2356.,  2520.,   753.,   839.,   925.,  1011.,  3800.,  3980.,  4160.,  4340.,  1512.,  1692.,  1872.,  2052.,  2232.,  2412.,  2592.,  2772.,   823.,   917.,  1011.,  1105.,  1199.,  1293.,  1387.,  1481.,    59.,   137.,   215.,   293.,   371.,   449.,   527.,   605.,  2812.,  2976.,  3140.,  3304.,  3468.,  3632.,  3796.,  3960.,  1372.,  1536.,  1700.,  1864.,   409.,   495.,   581.,   667.,  3080.,  3260.,  3440.,  3620.,  3800.,  3980.,  4160.,  4340.,  1512.,  1692.,  1872.,  2052.,   447.,   541.,   635.,   729.,   823.,   917.,  1011.,  1105.,  2243.,  2321.,  2399.,  2477.,    59.,   137.,   215.,   293.,  2156.,  2320.,  2484.,  2648.,  2812.,  2976.,  3140.,  3304.,  3468.,  3632.,  3796.,  3960.,    65.,   151.,   237.,   323.,  2360.,  2540.,  2720.,  2900.,  3080.,  3260.,  3440.,  3620.,  3800.,  3980.,  4160.,  4340.,    71.,   165.,   259.,   353.,   447.,   541.,   635.,   729.,  2824.,  3004.,  3184.,  3364.,  3544.,  3724.,  3904.,  4084.,  3292.,  3668.,  4044.,  4420.,  4796.,  5172.,  5548.,  5924.,  6300.,  6676.,  7052.,  7428.,  3876.,  4072.,  4268.,  4464.,  3572.,  3980.,  4388.,  4796.,  5204.,  5612.,  6020.,  6428.,  6836.,  7244.,  7652.,  8060.,  4208.,  4420.,  4632.,  4844.,  2048.,  2260.,  2472.,  2684.,  2104.,  2284.,  2464.,  2644.,  2824.,  3004.,  3184.,  3364.,  7804.,  8180.,  8556.,  8932.,  3292.,  3668.,  4044.,  4420.,  4796.,  5172.,  5548.,  5924.,  3092.,  3288.,  3484.,  3680.,  8468.,  8876.,  9284.,  9692.,  3572.,  3980.,  4388.,  4796.,  5204.,  5612.,  6020.,  6428.,  3360.,  3572.,  3784.,  3996.,  4208.,  4420.,  4632.,  4844.,  1384.,  1564.,  1744.,  1924.,  2104.,  2284.,  2464.,  2644.,  6300.,  6676.,  7052.,  7428.,  7804.,  8180.,  8556.,  8932.,  3292.,  3668.,  4044.,  4420.,  2308.,  2504.,  2700.,  2896.,  6836.,  7244.,  7652.,  8060.,  8468.,  8876.,  9284.,  9692.,  3572.,  3980.,  4388.,  4796.,  2512.,  2724.,  2936.,  3148.,  3360.,  3572.,  3784.,  3996.,  2933.,  3035.,  3137.,  3239.,    77.,   179.,   281.,   383.,  2768.,  2980.,  3192.,  3404.,  3616.,  3828.,  4040.,  4252.,  4464.,  4676.,  4888.,  5100.,    83.,   193.,   303.,   413.,  2972.,  3200.,  3428.,  3656.,  3884.,  4112.,  4340.,  4568.,  4796.,  5024.,  5252.,  5480.,    89.,   207.,   325.,   443.,   561.,   679.,   797.,   915.,  3628.,  3856.,  4084.,  4312.,  4540.,  4768.,  4996.,  5224.,  4132.,  4604.,  5076.,  5548.,  6020.,  6492.,  6964.,  7436.,  7908.,  8380.,  8852.,  9324.,  4872.,  5116.,  5360.,  5604.,  4412.,  4916.,  5420.,  5924.,  6428.,  6932.,  7436.,  7940.,  8444.,  8948.,  9452.,  9956.,  5204.,  5464.,  5724.,  5984.,  2468.,  2728.,  2988.,  3248.,  2716.,  2944.,  3172.,  3400.,  3628.,  3856.,  4084.,  4312.,  9796., 10268., 10740., 11212.,  4132.,  4604.,  5076.,  5548.,  6020.,  6492.,  6964.,  7436.,  3896.,  4140.,  4384.,  4628., 10460., 10964., 11468., 11972.,  4412.,  4916.,  5420.,  5924.,  6428.,  6932.,  7436.,  7940.,  4164.,  4424.,  4684.,  4944.,  5204.,  5464.,  5724.,  5984.,  1804.,  2032.,  2260.,  2488.,  2716.,  2944.,  3172.,  3400.,  7908.,  8380.,  8852.,  9324.,  9796., 10268., 10740., 11212.,  4132.,  4604.,  5076.,  5548.,  2920.,  3164.,  3408.,  3652.,  8444.,  8948.,  9452.,  9956., 10460., 10964., 11468., 11972.,  4412.,  4916.,  5420.,  5924.,  3124.,  3384.,  3644.,  3904.,  4164.,  4424.,  4684.,  4944.,  3623.,  3749.,  3875.,  4001.,    95.,   221.,   347.,   473.,  3380.,  3640.,  3900.,  4160.,  4420.,  4680.,  4940.,  5200.,  5460.,  5720.,  5980.,  6240.,   101.,   235.,   369.,   503.,  3584.,  3860.,  4136.,  4412.,  4688.,  4964.,  5240.,  5516.,  5792.,  6068.,  6344.,  6620.,   107.,   249.,   391.,   533.,   675.,   817.,   959.,  1101.,  3119.,  3245.,  3371.,  3497.,  3623.,  3749.,  3875.,  4001.,  2340.,  2600.,  2860.,  3120.,  3380.,  3640.,  3900.,  4160.,  4420.,  4680.,  4940.,  5200.,  3853.,  3987.,  4121.,  4255.,  2480.,  2756.,  3032.,  3308.,  3584.,  3860.,  4136.,  4412.,  4688.,  4964.,  5240.,  5516.,  4083.,  4225.,  4367.,  4509.,   107.,   249.,   391.,   533.,   713.,   863.,  1013.,  1163.,  1313.,  1463.,  1613.,  1763.,  6456.,  6764.,  7072.,  7380.,  2632.,  2940.,  3248.,  3556.,  3864.,  4172.,  4480.,  4788.,  1383.,  1541.,  1699.,  1857.,  6788.,  7112.,  7436.,  7760.,  2772.,  3096.,  3420.,  3744.,  4068.,  4392.,  4716.,  5040.,  1453.,  1619.,  1785.,  1951.,  2117.,  2283.,  2449.,  2615.,   113.,   263.,   413.,   563.,   713.,   863.,  1013.,  1163.,  5224.,  5532.,  5840.,  6148.,  6456.,  6764.,  7072.,  7380.,  2632.,  2940.,  3248.,  3556.,   751.,   909.,  1067.,  1225.,  5492.,  5816.,  6140.,  6464.,  6788.,  7112.,  7436.,  7760.,  2772.,  3096.,  3420.,  3744.,   789.,   955.,  1121.,  1287.,  1453.,  1619.,  1785.,  1951.,  4313.,  4463.,  4613.,  4763.,   113.,   263.,   413.,   563.,  3992.,  4300.,  4608.,  4916.,  5224.,  5532.,  5840.,  6148.,  6456.,  6764.,  7072.,  7380.,   119.,   277.,   435.,   593.,  4196.,  4520.,  4844.,  5168.,  5492.,  5816.,  6140.,  6464.,  6788.,  7112.,  7436.,  7760.,   125.,   291.,   457.,   623.,   789.,   955.,  1121.,  1287.,  5236.,  5560.,  5884.,  6208.,  6532.,  6856.,  7180.,  7504.,  5812.,  6476.,  7140.,  7804.,  8468.,  9132.,  9796., 10460., 11124., 11788., 12452., 13116.,  6864.,  7204.,  7544.,  7884.,  6092.,  6788.,  7484.,  8180.,  8876.,  9572., 10268., 10964., 11660., 12356., 13052., 13748.,  7196.,  7552.,  7908.,  8264.,  3308.,  3664.,  4020.,  4376.,  3940.,  4264.,  4588.,  4912.,  5236.,  5560.,  5884.,  6208., 13780., 14444., 15108., 15772.,  5812.,  6476.,  7140.,  7804.,  8468.,  9132.,  9796., 10460.,  5504.,  5844.,  6184.,  6524., 14444., 15140., 15836., 16532.,  6092.,  6788.,  7484.,  8180.,  8876.,  9572., 10268., 10964.,  5772.,  6128.,  6484.,  6840.,  7196.,  7552.,  7908.,  8264.,  2644.,  2968.,  3292.,  3616.,  3940.,  4264.,  4588.,  4912., 11124., 11788., 12452., 13116., 13780., 14444., 15108., 15772.,  5812.,  6476.,  7140.,  7804.,  4144.,  4484.,  4824.,  5164., 11660., 12356., 13052., 13748., 14444., 15140., 15836., 16532.,  6092.,  6788.,  7484.,  8180.,  4348.,  4704.,  5060.,  5416.,  5772.,  6128.,  6484.,  6840.,  5003.,  5177.,  5351.,  5525.,   131.,   305.,   479.,   653.,  4604.,  4960.,  5316.,  5672.,  6028.,  6384.,  6740.,  7096.,  7452.,  7808.,  8164.,  8520.,   137.,   319.,   501.,   683.,  4808.,  5180.,  5552.,  5924.,  6296.,  6668.,  7040.,  7412.,  7784.,  8156.,  8528.,  8900.,   143.,   333.,   523.,   713.,   903.,  1093.,  1283.,  1473.,  6040.,  6412.,  6784.,  7156.,  7528.,  7900.,  8272.,  8644.,  6652.,  7412.,  8172.,  8932.,  9692., 10452., 11212., 11972., 12732., 13492., 14252., 15012.,  7860.,  8248.,  8636.,  9024.,  6932.,  7724.,  8516.,  9308., 10100., 10892., 11684., 12476., 13268., 14060., 14852., 15644.,  8192.,  8596.,  9000.,  9404.,  3728.,  4132.,  4536.,  4940.,  4552.,  4924.,  5296.,  5668.,  6040.,  6412.,  6784.,  7156., 15772., 16532., 17292., 18052.,  6652.,  7412.,  8172.,  8932.,  9692., 10452., 11212., 11972.,  6308.,  6696.,  7084.,  7472., 16436., 17228., 18020., 18812.,  6932.,  7724.,  8516.,  9308., 10100., 10892., 11684., 12476.,  6576.,  6980.,  7384.,  7788.,  8192.,  8596.,  9000.,  9404.,  3064.,  3436.,  3808.,  4180.,  4552.,  4924.,  5296.,  5668., 12732., 13492., 14252., 15012., 15772., 16532., 17292., 18052.,  6652.,  7412.,  8172.,  8932.,  4756.,  5144.,  5532.,  5920., 13268., 14060., 14852., 15644., 16436., 17228., 18020., 18812.,  6932.,  7724.,  8516.,  9308.,  4960.,  5364.,  5768.,  6172.,  6576.,  6980.,  7384.,  7788.,  5693.,  5891.,  6089.,  6287.,   149.,   347.,   545.,   743.,  5216.,  5620.,  6024.,  6428.,  6832.,  7236.,  7640.,  8044.,  8448.,  8852.,  9256.,  9660.,   155.,   361.,   567.,   773.,  5420.,  5840.,  6260.,  6680.,  7100.,  7520.,  7940.,  8360.,  8780.,  9200.,  9620., 10040.,   161.,   375.,   589.,   803.,  1017.,  1231.,  1445.,  1659.,  4901.,  5099.,  5297.,  5495.,  5693.,  5891.,  6089.,  6287.,  3600.,  4004.,  4408.,  4812.,  5216.,  5620.,  6024.,  6428.,  6832.,  7236.,  7640.,  8044.,  5923.,  6129.,  6335.,  6541.,  3740.,  4160.,  4580.,  5000.,  5420.,  5840.,  6260.,  6680.,  7100.,  7520.,  7940.,  8360.,  6153.,  6367.,  6581.,  6795.,   161.,   375.,   589.,   803.};
  const std::array<int, 4> in_shape = {{ 3, 12, 11, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x11x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,    53.,    59.,    65.,    71.,    77.,    83.,    89.,    95.,   112.,   132.,   152.,   172.,   192.,   212.,   232.,   252.,   272.,   292.,   312.,   332.,   179.,   193.,   207.,   221.,   235.,   249.,   263.,   277.,   291.,   305.,   319.,   333.,   347.,   361.,   375.,   389.,   173.,   179.,   185.,   191.,   197.,   203.,   209.,   215.,   221.,   227.,   233.,   239.,   245.,   251.,   257.,   263.,   672.,   692.,   712.,   732.,   752.,   772.,   792.,   812.,   832.,   852.,   872.,   892.,   571.,   585.,   599.,   613.,   627.,   641.,   655.,   669.,   683.,   697.,   711.,   725.,   739.,   753.,   767.,   781.,   341.,   347.,   353.,   359.,   365.,   371.,   377.,   383.,   389.,   395.,   401.,   407.,   413.,   419.,   425.,   431.,  1232.,  1252.,  1272.,  1292.,  1312.,  1332.,  1352.,  1372.,  1392.,  1412.,  1432.,  1452.,   963.,   977.,   991.,  1005.,  1019.,  1033.,  1047.,  1061.,  1075.,  1089.,  1103.,  1117.,  1131.,  1145.,  1159.,  1173.,   509.,   515.,   521.,   527.,   533.,   539.,   545.,   551.,   557.,   563.,   569.,   575.,   581.,   587.,   593.,   599.,  1792.,  1812.,  1832.,  1852.,  1872.,  1892.,  1912.,  1932.,  1952.,  1972.,  1992.,  2012.,  1355.,  1369.,  1383.,  1397.,  1411.,  1425.,  1439.,  1453.,  1467.,  1481.,  1495.,  1509.,  1523.,  1537.,  1551.,  1565.,   694.,   722.,   750.,   778.,   806.,   834.,   862.,   890.,   918.,   946.,   974.,  1002.,  1030.,  1058.,  1086.,  1114.,  1976.,  2048.,  2120.,  2192.,  2264.,  2336.,  2408.,  2480.,  2552.,  2624.,  2696.,  2768.,  2130.,  2174.,  2218.,  2262.,   514.,   558.,   602.,   646.,   690.,   734.,   778.,   822.,   866.,   910.,   954.,   998.,   710.,   738.,   766.,   794.,   822.,   850.,   878.,   906.,   934.,   962.,   990.,  1018.,  1046.,  1074.,  1102.,  1130.,  2200.,  2272.,  2344.,  2416.,  2488.,  2560.,  2632.,  2704.,  2776.,  2848.,  2920.,  2992.,  1570.,  1614.,  1658.,  1702.,  1746.,  1790.,  1834.,  1878.,  1922.,  1966.,  2010.,  2054.,  2098.,  2142.,  2186.,  2230.,  1494.,  1522.,  1550.,  1578.,  1606.,  1634.,  1662.,  1690.,  1718.,  1746.,  1774.,  1802.,  1830.,  1858.,  1886.,  1914.,  4216.,  4288.,  4360.,  4432.,  4504.,  4576.,  4648.,  4720.,  4792.,  4864.,  4936.,  5008.,  2802.,  2846.,  2890.,  2934.,  2978.,  3022.,  3066.,  3110.,  3154.,  3198.,  3242.,  3286.,  3330.,  3374.,  3418.,  3462.,  1865.,  1887.,  1909.,  1931.,  1953.,  1975.,  1997.,  2019.,  2041.,  2063.,  2085.,  2107.,  2129.,  2151.,  2173.,  2195.,  4760.,  4812.,  4864.,  4916.,  4968.,  5020.,  5072.,  5124.,  5176.,  5228.,  5280.,  5332.,  2903.,  2933.,  2963.,  2993.,  3023.,  3053.,  3083.,  3113.,  3143.,  3173.,  3203.,  3233.,  3263.,  3293.,  3323.,  3353.,  2481.,  2503.,  2525.,  2547.,  2569.,  2591.,  2613.,  2635.,  2657.,  2679.,  2701.,  2723.,  2745.,  2767.,  2789.,  2811.,  3400.,  3452.,  3504.,  3556.,  3608.,  3660.,  3712.,  3764.,  3816.,  3868.,  3920.,  3972.,  3743.,  3773.,  3803.,  3833.,    23.,    53.,    83.,   113.,   143.,   173.,   203.,   233.,   263.,   293.,   323.,   353.,   281.,   303.,   325.,   347.,   369.,   391.,   413.,   435.,   457.,   479.,   501.,   523.,   545.,   567.,   589.,   611.,  1016.,  1068.,  1120.,  1172.,  1224.,  1276.,  1328.,  1380.,  1432.,  1484.,  1536.,  1588.,   743.,   773.,   803.,   833.,   863.,   893.,   923.,   953.,   983.,  1013.,  1043.,  1073.,  1103.,  1133.,  1163.,  1193.,   897.,   919.,   941.,   963.,   985.,  1007.,  1029.,  1051.,  1073.,  1095.,  1117.,  1139.,  1161.,  1183.,  1205.,  1227.,  2472.,  2524.,  2576.,  2628.,  2680.,  2732.,  2784.,  2836.,  2888.,  2940.,  2992.,  3044.,  1583.,  1613.,  1643.,  1673.,  1703.,  1733.,  1763.,  1793.,  1823.,  1853.,  1883.,  1913.,  1943.,  1973.,  2003.,  2033.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    29.,    67.,   105.,   143.,   181.,   219.,   257.,   295.,   333.,   371.,   409.,   447.,   485.,   523.,   561.,   599.,   672.,   756.,   840.,   924.,  1008.,  1092.,  1176.,  1260.,  1344.,  1428.,  1512.,  1596.,   587.,   633.,   679.,   725.,   771.,   817.,   863.,   909.,   955.,  1001.,  1047.,  1093.,  1139.,  1185.,  1231.,  1277.,  1093.,  1131.,  1169.,  1207.,  1245.,  1283.,  1321.,  1359.,  1397.,  1435.,  1473.,  1511.,  1549.,  1587.,  1625.,  1663.,  3024.,  3108.,  3192.,  3276.,  3360.,  3444.,  3528.,  3612.,  3696.,  3780.,  3864.,  3948.,  1875.,  1921.,  1967.,  2013.,  2059.,  2105.,  2151.,  2197.,  2243.,  2289.,  2335.,  2381.,  2427.,  2473.,  2519.,  2565.,  2157.,  2195.,  2233.,  2271.,  2309.,  2347.,  2385.,  2423.,  2461.,  2499.,  2537.,  2575.,  2613.,  2651.,  2689.,  2727.,  5376.,  5460.,  5544.,  5628.,  5712.,  5796.,  5880.,  5964.,  6048.,  6132.,  6216.,  6300.,  3163.,  3209.,  3255.,  3301.,  3347.,  3393.,  3439.,  3485.,  3531.,  3577.,  3623.,  3669.,  3715.,  3761.,  3807.,  3853.,  3221.,  3259.,  3297.,  3335.,  3373.,  3411.,  3449.,  3487.,  3525.,  3563.,  3601.,  3639.,  3677.,  3715.,  3753.,  3791.,  7728.,  7812.,  7896.,  7980.,  8064.,  8148.,  8232.,  8316.,  8400.,  8484.,  8568.,  8652.,  4451.,  4497.,  4543.,  4589.,  4635.,  4681.,  4727.,  4773.,  4819.,  4865.,  4911.,  4957.,  5003.,  5049.,  5095.,  5141.,  4326.,  4418.,  4510.,  4602.,  4694.,  4786.,  4878.,  4970.,  5062.,  5154.,  5246.,  5338.,  5430.,  5522.,  5614.,  5706.,  6168.,  6368.,  6568.,  6768.,  6968.,  7168.,  7368.,  7568.,  7768.,  7968.,  8168.,  8368.,  6530.,  6638.,  6746.,  6854.,  1074.,  1182.,  1290.,  1398.,  1506.,  1614.,  1722.,  1830.,  1938.,  2046.,  2154.,  2262.,  2038.,  2130.,  2222.,  2314.,  2406.,  2498.,  2590.,  2682.,  2774.,  2866.,  2958.,  3050.,  3142.,  3234.,  3326.,  3418.,  5880.,  6080.,  6280.,  6480.,  6680.,  6880.,  7080.,  7280.,  7480.,  7680.,  7880.,  8080.,  3666.,  3774.,  3882.,  3990.,  4098.,  4206.,  4314.,  4422.,  4530.,  4638.,  4746.,  4854.,  4962.,  5070.,  5178.,  5286.,  4614.,  4706.,  4798.,  4890.,  4982.,  5074.,  5166.,  5258.,  5350.,  5442.,  5534.,  5626.,  5718.,  5810.,  5902.,  5994., 11480., 11680., 11880., 12080., 12280., 12480., 12680., 12880., 13080., 13280., 13480., 13680.,  6690.,  6798.,  6906.,  7014.,  7122.,  7230.,  7338.,  7446.,  7554.,  7662.,  7770.,  7878.,  7986.,  8094.,  8202.,  8310.,  4577.,  4631.,  4685.,  4739.,  4793.,  4847.,  4901.,  4955.,  5009.,  5063.,  5117.,  5171.,  5225.,  5279.,  5333.,  5387., 10696., 10812., 10928., 11044., 11160., 11276., 11392., 11508., 11624., 11740., 11856., 11972.,  5999.,  6061.,  6123.,  6185.,  6247.,  6309.,  6371.,  6433.,  6495.,  6557.,  6619.,  6681.,  6743.,  6805.,  6867.,  6929.,  6089.,  6143.,  6197.,  6251.,  6305.,  6359.,  6413.,  6467.,  6521.,  6575.,  6629.,  6683.,  6737.,  6791.,  6845.,  6899.,  7032.,  7148.,  7264.,  7380.,  7496.,  7612.,  7728.,  7844.,  7960.,  8076.,  8192.,  8308.,  7735.,  7797.,  7859.,  7921.,    47.,   109.,   171.,   233.,   295.,   357.,   419.,   481.,   543.,   605.,   667.,   729.,   689.,   743.,   797.,   851.,   905.,   959.,  1013.,  1067.,  1121.,  1175.,  1229.,  1283.,  1337.,  1391.,  1445.,  1499.,  2344.,  2460.,  2576.,  2692.,  2808.,  2924.,  3040.,  3156.,  3272.,  3388.,  3504.,  3620.,  1535.,  1597.,  1659.,  1721.,  1783.,  1845.,  1907.,  1969.,  2031.,  2093.,  2155.,  2217.,  2279.,  2341.,  2403.,  2465.,  2201.,  2255.,  2309.,  2363.,  2417.,  2471.,  2525.,  2579.,  2633.,  2687.,  2741.,  2795.,  2849.,  2903.,  2957.,  3011.,  5592.,  5708.,  5824.,  5940.,  6056.,  6172.,  6288.,  6404.,  6520.,  6636.,  6752.,  6868.,  3271.,  3333.,  3395.,  3457.,  3519.,  3581.,  3643.,  3705.,  3767.,  3829.,  3891.,  3953.,  4015.,  4077.,  4139.,  4201.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    53.,   123.,   193.,   263.,   333.,   403.,   473.,   543.,   613.,   683.,   753.,   823.,   893.,   963.,  1033.,  1103.,  1232.,  1380.,  1528.,  1676.,  1824.,  1972.,  2120.,  2268.,  2416.,  2564.,  2712.,  2860.,   995.,  1073.,  1151.,  1229.,  1307.,  1385.,  1463.,  1541.,  1619.,  1697.,  1775.,  1853.,  1931.,  2009.,  2087.,  2165.,  2013.,  2083.,  2153.,  2223.,  2293.,  2363.,  2433.,  2503.,  2573.,  2643.,  2713.,  2783.,  2853.,  2923.,  2993.,  3063.,  5376.,  5524.,  5672.,  5820.,  5968.,  6116.,  6264.,  6412.,  6560.,  6708.,  6856.,  7004.,  3179.,  3257.,  3335.,  3413.,  3491.,  3569.,  3647.,  3725.,  3803.,  3881.,  3959.,  4037.,  4115.,  4193.,  4271.,  4349.,  3973.,  4043.,  4113.,  4183.,  4253.,  4323.,  4393.,  4463.,  4533.,  4603.,  4673.,  4743.,  4813.,  4883.,  4953.,  5023.,  9520.,  9668.,  9816.,  9964., 10112., 10260., 10408., 10556., 10704., 10852., 11000., 11148.,  5363.,  5441.,  5519.,  5597.,  5675.,  5753.,  5831.,  5909.,  5987.,  6065.,  6143.,  6221.,  6299.,  6377.,  6455.,  6533.,  5933.,  6003.,  6073.,  6143.,  6213.,  6283.,  6353.,  6423.,  6493.,  6563.,  6633.,  6703.,  6773.,  6843.,  6913.,  6983., 13664., 13812., 13960., 14108., 14256., 14404., 14552., 14700., 14848., 14996., 15144., 15292.,  7547.,  7625.,  7703.,  7781.,  7859.,  7937.,  8015.,  8093.,  8171.,  8249.,  8327.,  8405.,  8483.,  8561.,  8639.,  8717.,  7958.,  8114.,  8270.,  8426.,  8582.,  8738.,  8894.,  9050.,  9206.,  9362.,  9518.,  9674.,  9830.,  9986., 10142., 10298., 10360., 10688., 11016., 11344., 11672., 12000., 12328., 12656., 12984., 13312., 13640., 13968., 10930., 11102., 11274., 11446.,  1634.,  1806.,  1978.,  2150.,  2322.,  2494.,  2666.,  2838.,  3010.,  3182.,  3354.,  3526.,  3366.,  3522.,  3678.,  3834.,  3990.,  4146.,  4302.,  4458.,  4614.,  4770.,  4926.,  5082.,  5238.,  5394.,  5550.,  5706.,  9560.,  9888., 10216., 10544., 10872., 11200., 11528., 11856., 12184., 12512., 12840., 13168.,  5762.,  5934.,  6106.,  6278.,  6450.,  6622.,  6794.,  6966.,  7138.,  7310.,  7482.,  7654.,  7826.,  7998.,  8170.,  8342.,  7734.,  7890.,  8046.,  8202.,  8358.,  8514.,  8670.,  8826.,  8982.,  9138.,  9294.,  9450.,  9606.,  9762.,  9918., 10074., 18744., 19072., 19400., 19728., 20056., 20384., 20712., 21040., 21368., 21696., 22024., 22352., 10578., 10750., 10922., 11094., 11266., 11438., 11610., 11782., 11954., 12126., 12298., 12470., 12642., 12814., 12986., 13158.,  7289.,  7375.,  7461.,  7547.,  7633.,  7719.,  7805.,  7891.,  7977.,  8063.,  8149.,  8235.,  8321.,  8407.,  8493.,  8579., 16632., 16812., 16992., 17172., 17352., 17532., 17712., 17892., 18072., 18252., 18432., 18612.,  9095.,  9189.,  9283.,  9377.,  9471.,  9565.,  9659.,  9753.,  9847.,  9941., 10035., 10129., 10223., 10317., 10411., 10505.,  9697.,  9783.,  9869.,  9955., 10041., 10127., 10213., 10299., 10385., 10471., 10557., 10643., 10729., 10815., 10901., 10987., 10664., 10844., 11024., 11204., 11384., 11564., 11744., 11924., 12104., 12284., 12464., 12644., 11727., 11821., 11915., 12009.,    71.,   165.,   259.,   353.,   447.,   541.,   635.,   729.,   823.,   917.,  1011.,  1105.,  1097.,  1183.,  1269.,  1355.,  1441.,  1527.,  1613.,  1699.,  1785.,  1871.,  1957.,  2043.,  2129.,  2215.,  2301.,  2387.,  3672.,  3852.,  4032.,  4212.,  4392.,  4572.,  4752.,  4932.,  5112.,  5292.,  5472.,  5652.,  2327.,  2421.,  2515.,  2609.,  2703.,  2797.,  2891.,  2985.,  3079.,  3173.,  3267.,  3361.,  3455.,  3549.,  3643.,  3737.,  3505.,  3591.,  3677.,  3763.,  3849.,  3935.,  4021.,  4107.,  4193.,  4279.,  4365.,  4451.,  4537.,  4623.,  4709.,  4795.,  8712.,  8892.,  9072.,  9252.,  9432.,  9612.,  9792.,  9972., 10152., 10332., 10512., 10692.,  4959.,  5053.,  5147.,  5241.,  5335.,  5429.,  5523.,  5617.,  5711.,  5805.,  5899.,  5993.,  6087.,  6181.,  6275.,  6369.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 11, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x11x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   500.,  1284.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   420.,  1076.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.};
  const std::array<int, 4> in_shape = {{ 3, 12, 11, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x11x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 11, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x12x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   9.,   10.,   11.,   28.,   31.,   34.,   22.,   48.,   53.,   58.,   33.,   36.,   16.,   17.,   18.,   49.,   52.,   55.,   36.,   83.,   88.,   93.,   54.,   57.,   23.,   24.,   25.,   70.,   73.,   76.,   50.,  118.,  123.,  128.,   75.,   78.,   38.,   43.,   48.,  116.,  128.,  140.,   84.,  184.,  200.,  216.,  120.,  129.,   73.,   78.,   83.,  200.,  212.,  224.,  133.,  296.,  312.,  328.,  183.,  192.,  108.,  113.,  118.,  284.,  296.,  308.,  182.,  408.,  424.,  440.,  246.,  255.,   92.,   96.,  100.,  214.,  223.,  232.,  125.,  262.,  273.,  284.,  150.,  156.,  134.,  145.,  156.,  320.,  344.,  368.,  192.,  388.,  416.,  444.,  228.,  243.,  211.,  222.,  233.,  488.,  512.,  536.,  283.,  584.,  612.,  640.,  333.,  348.,  288.,  299.,  310.,  656.,  680.,  704.,  374.,  780.,  808.,  836.,  438.,  453.,  161.,  168.,  175.,  358.,  373.,  388.,  200.,  406.,  423.,  440.,  225.,  234.,  210.,  217.,  224.,  463.,  478.,  493.,  256.,  525.,  542.,  559.,  288.,  297.,   90.,  100.,  110.,  208.,  229.,  250.,  121.,  228.,  251.,  274.,  132.,  144.,  160.,  170.,  180.,  355.,  376.,  397.,  198.,  389.,  412.,  435.,  216.,  228.,  230.,  240.,  250.,  502.,  523.,  544.,  275.,  550.,  573.,  596.,  300.,  312.,  326.,  349.,  372.,  728.,  776.,  824.,  408.,  796.,  848.,  900.,  444.,  471.,  487.,  510.,  533., 1064., 1112., 1160.,  583., 1160., 1212., 1264.,  633.,  660.,  648.,  671.,  694., 1400., 1448., 1496.,  758., 1524., 1576., 1628.,  822.,  849.,  299.,  312.,  325.,  646.,  673.,  700.,  350.,  694.,  723.,  752.,  375.,  390.,  422.,  451.,  480.,  932.,  992., 1052.,  516., 1000., 1064., 1128.,  552.,  585.,  625.,  654.,  683., 1352., 1412., 1472.,  733., 1448., 1512., 1576.,  783.,  816.,  828.,  857.,  886., 1772., 1832., 1892.,  950., 1896., 1960., 2024., 1014., 1047.,  368.,  384.,  400.,  790.,  823.,  856.,  425.,  838.,  873.,  908.,  450.,  468.,  480.,  496.,  512., 1021., 1054., 1087.,  544., 1083., 1118., 1153.,  576.,  594.,  171.,  190.,  209.,  388.,  427.,  466.,  220.,  408.,  449.,  490.,  231.,  252.,  304.,  323.,  342.,  661.,  700.,  739.,  360.,  695.,  736.,  777.,  378.,  399.,  437.,  456.,  475.,  934.,  973., 1012.,  500.,  982., 1023., 1064.,  525.,  546.,  614.,  655.,  696., 1340., 1424., 1508.,  732., 1408., 1496., 1584.,  768.,  813.,  901.,  942.,  983., 1928., 2012., 2096., 1033., 2024., 2112., 2200., 1083., 1128., 1188., 1229., 1270., 2516., 2600., 2684., 1334., 2640., 2728., 2816., 1398., 1443.,  506.,  528.,  550., 1078., 1123., 1168.,  575., 1126., 1173., 1220.,  600.,  624.,  710.,  757.,  804., 1544., 1640., 1736.,  840., 1612., 1712., 1812.,  876.,  927., 1039., 1086., 1133., 2216., 2312., 2408., 1183., 2312., 2412., 2512., 1233., 1284., 1368., 1415., 1462., 2888., 2984., 3080., 1526., 3012., 3112., 3212., 1590., 1641.,  575.,  600.,  625., 1222., 1273., 1324.,  650., 1270., 1323., 1376.,  675.,  702.,  750.,  775.,  800., 1579., 1630., 1681.,  832., 1641., 1694., 1747.,  864.,  891.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x12x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    7.,   10.,   13.,    8.,   10.,   12.,   14.,    0.,    8.,    9.,   10.,   11.,   28.,   31.,   34.,   22.,   24.,   26.,   28.,    0.,   15.,   16.,   17.,   18.,   49.,   52.,   55.,   36.,   38.,   40.,   42.,    0.,   22.,   23.,   24.,   25.,   70.,   73.,   76.,   50.,   52.,   54.,   56.,    0.,   32.,   36.,   40.,   44.,  110.,  120.,  130.,   80.,   86.,   92.,   98.,    0.,   60.,   64.,   68.,   72.,  180.,  190.,  200.,  122.,  128.,  134.,  140.,    0.,   88.,   92.,   96.,  100.,  250.,  260.,  270.,  164.,  170.,  176.,  182.,    0.,   66.,   69.,   72.,   75.,  166.,  173.,  180.,  100.,  104.,  108.,  112.,    0.,   87.,   90.,   93.,   96.,  215.,  222.,  229.,  128.,  132.,  136.,  140.,    0.,  108.,  111.,  114.,  117.,  264.,  271.,  278.,  156.,  160.,  164.,  168.,    0.,  129.,  132.,  135.,  138.,  313.,  320.,  327.,  184.,  188.,  192.,  196.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    5.,   10.,   15.,   20.,   31.,   42.,   53.,   24.,   30.,   36.,   42.,    0.,   40.,   45.,   50.,   55.,  108.,  119.,  130.,   66.,   72.,   78.,   84.,    0.,   75.,   80.,   85.,   90.,  185.,  196.,  207.,  108.,  114.,  120.,  126.,    0.,  110.,  115.,  120.,  125.,  262.,  273.,  284.,  150.,  156.,  162.,  168.,    0.,  152.,  164.,  176.,  188.,  382.,  408.,  434.,  224.,  238.,  252.,  266.,    0.,  236.,  248.,  260.,  272.,  564.,  590.,  616.,  322.,  336.,  350.,  364.,    0.,  320.,  332.,  344.,  356.,  746.,  772.,  798.,  420.,  434.,  448.,  462.,    0.,  154.,  161.,  168.,  175.,  358.,  373.,  388.,  200.,  208.,  216.,  224.,    0.,  203.,  210.,  217.,  224.,  463.,  478.,  493.,  256.,  264.,  272.,  280.,    0.,  252.,  259.,  266.,  273.,  568.,  583.,  598.,  312.,  320.,  328.,  336.,    0.,  301.,  308.,  315.,  322.,  673.,  688.,  703.,  368.,  376.,  384.,  392.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    9.,   18.,   27.,   36.,   55.,   74.,   93.,   40.,   50.,   60.,   70.,    0.,   72.,   81.,   90.,   99.,  188.,  207.,  226.,  110.,  120.,  130.,  140.,    0.,  135.,  144.,  153.,  162.,  321.,  340.,  359.,  180.,  190.,  200.,  210.,    0.,  198.,  207.,  216.,  225.,  454.,  473.,  492.,  250.,  260.,  270.,  280.,    0.,  272.,  292.,  312.,  332.,  654.,  696.,  738.,  368.,  390.,  412.,  434.,    0.,  412.,  432.,  452.,  472.,  948.,  990., 1032.,  522.,  544.,  566.,  588.,    0.,  552.,  572.,  592.,  612., 1242., 1284., 1326.,  676.,  698.,  720.,  742.,    0.,  242.,  253.,  264.,  275.,  550.,  573.,  596.,  300.,  312.,  324.,  336.,    0.,  319.,  330.,  341.,  352.,  711.,  734.,  757.,  384.,  396.,  408.,  420.,    0.,  396.,  407.,  418.,  429.,  872.,  895.,  918.,  468.,  480.,  492.,  504.,    0.,  473.,  484.,  495.,  506., 1033., 1056., 1079.,  552.,  564.,  576.,  588.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x12x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   53.,    59.,    65.,   180.,   200.,   220.,   151.,   336.,   372.,   408.,   237.,   259.,    95.,   101.,   107.,   320.,   340.,   360.,   249.,   588.,   624.,   660.,   391.,   413.,   137.,   143.,   149.,   460.,   480.,   500.,   347.,   840.,   876.,   912.,   545.,   567.,   232.,   268.,   304.,   772.,   860.,   948.,   588.,  1308.,  1428.,  1548.,   872.,   940.,   484.,   520.,   556.,  1388.,  1476.,  1564.,   952.,  2148.,  2268.,  2388.,  1348.,  1416.,   736.,   772.,   808.,  2004.,  2092.,  2180.,  1316.,  2988.,  3108.,  3228.,  1824.,  1892.,   683.,   713.,   743.,  1600.,  1668.,  1736.,   941.,  1980.,  2064.,  2148.,  1139.,  1185.,   988.,  1072.,  1156.,  2380.,  2564.,  2748.,  1440.,  2916.,  3132.,  3348.,  1724.,  1840.,  1576.,  1660.,  1744.,  3668.,  3852.,  4036.,  2140.,  4428.,  4644.,  4860.,  2536.,  2652.,  2164.,  2248.,  2332.,  4956.,  5140.,  5324.,  2840.,  5940.,  6156.,  6372.,  3348.,  3464.,  1229.,  1283.,  1337.,  2740.,  2856.,  2972.,  1535.,  3120.,  3252.,  3384.,  1733.,  1803.,  1607.,  1661.,  1715.,  3552.,  3668.,  3784.,  1969.,  4044.,  4176.,  4308.,  2223.,  2293.,   683.,   761.,   839.,  1584.,  1748.,  1912.,   925.,  1740.,  1920.,  2100.,  1011.,  1105.,  1229.,  1307.,  1385.,  2732.,  2896.,  3060.,  1527.,  3000.,  3180.,  3360.,  1669.,  1763.,  1775.,  1853.,  1931.,  3880.,  4044.,  4208.,  2129.,  4260.,  4440.,  4620.,  2327.,  2421.,  2500.,  2680.,  2860.,  5596.,  5972.,  6348.,  3144.,  6132.,  6540.,  6948.,  3428.,  3640.,  3760.,  3940.,  4120.,  8228.,  8604.,  8980.,  4516.,  8988.,  9396.,  9804.,  4912.,  5124.,  5020.,  5200.,  5380., 10860., 11236., 11612.,  5888., 11844., 12252., 12660.,  6396.,  6608.,  2321.,  2423.,  2525.,  5020.,  5232.,  5444.,  2723.,  5400.,  5628.,  5856.,  2921.,  3039.,  3256.,  3484.,  3712.,  7204.,  7676.,  8148.,  3996.,  7740.,  8244.,  8748.,  4280.,  4540.,  4852.,  5080.,  5308., 10508., 10980., 11452.,  5704., 11268., 11772., 12276.,  6100.,  6360.,  6448.,  6676.,  6904., 13812., 14284., 14756.,  7412., 14796., 15300., 15804.,  7920.,  8180.,  2867.,  2993.,  3119.,  6160.,  6420.,  6680.,  3317.,  6540.,  6816.,  7092.,  3515.,  3657.,  3749.,  3875.,  4001.,  7980.,  8240.,  8500.,  4255.,  8472.,  8748.,  9024.,  4509.,  4651.,  1313.,  1463.,  1613.,  2988.,  3296.,  3604.,  1699.,  3144.,  3468.,  3792.,  1785.,  1951.,  2363.,  2513.,  2663.,  5144.,  5452.,  5760.,  2805.,  5412.,  5736.,  6060.,  2947.,  3113.,  3413.,  3563.,  3713.,  7300.,  7608.,  7916.,  3911.,  7680.,  8004.,  8328.,  4109.,  4275.,  4768.,  5092.,  5416., 10420., 11084., 11748.,  5700., 10956., 11652., 12348.,  5984.,  6340.,  7036.,  7360.,  7684., 15068., 15732., 16396.,  8080., 15828., 16524., 17220.,  8476.,  8832.,  9304.,  9628.,  9952., 19716., 20380., 21044., 10460., 20700., 21396., 22092., 10968., 11324.,  3959.,  4133.,  4307.,  8440.,  8796.,  9152.,  4505.,  8820.,  9192.,  9564.,  4703.,  4893.,  5524.,  5896.,  6268., 12028., 12788., 13548.,  6552., 12564., 13356., 14148.,  6836.,  7240.,  8128.,  8500.,  8872., 17348., 18108., 18868.,  9268., 18108., 18900., 19692.,  9664., 10068., 10732., 11104., 11476., 22668., 23428., 24188., 11984., 23652., 24444., 25236., 12492., 12896.,  4505.,  4703.,  4901.,  9580.,  9984., 10388.,  5099.,  9960., 10380., 10800.,  5297.,  5511.,  5891.,  6089.,  6287., 12408., 12812., 13216.,  6541., 12900., 13320., 13740.,  6795.,  7009.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x12x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    40.,    60.,    80.,    53.,    67.,    81.,    95.,     0.,    47.,    53.,    59.,    65.,   180.,   200.,   220.,   151.,   165.,   179.,   193.,     0.,    89.,    95.,   101.,   107.,   320.,   340.,   360.,   249.,   263.,   277.,   291.,     0.,   131.,   137.,   143.,   149.,   460.,   480.,   500.,   347.,   361.,   375.,   389.,     0.,   190.,   218.,   246.,   274.,   728.,   800.,   872.,   558.,   602.,   646.,   690.,     0.,   386.,   414.,   442.,   470.,  1232.,  1304.,  1376.,   866.,   910.,   954.,   998.,     0.,   582.,   610.,   638.,   666.,  1736.,  1808.,  1880.,  1174.,  1218.,  1262.,  1306.,     0.,   479.,   501.,   523.,   545.,  1220.,  1272.,  1324.,   743.,   773.,   803.,   833.,     0.,   633.,   655.,   677.,   699.,  1584.,  1636.,  1688.,   953.,   983.,  1013.,  1043.,     0.,   787.,   809.,   831.,   853.,  1948.,  2000.,  2052.,  1163.,  1193.,  1223.,  1253.,     0.,   941.,   963.,   985.,  1007.,  2312.,  2364.,  2416.,  1373.,  1403.,  1433.,  1463.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    29.,    67.,   105.,   143.,   216.,   300.,   384.,   173.,   219.,   265.,   311.,     0.,   295.,   333.,   371.,   409.,   804.,   888.,   972.,   495.,   541.,   587.,   633.,     0.,   561.,   599.,   637.,   675.,  1392.,  1476.,  1560.,   817.,   863.,   909.,   955.,     0.,   827.,   865.,   903.,   941.,  1980.,  2064.,  2148.,  1139.,  1185.,  1231.,  1277.,     0.,  1134.,  1226.,  1318.,  1410.,  2872.,  3072.,  3272.,  1694.,  1802.,  1910.,  2018.,     0.,  1778.,  1870.,  1962.,  2054.,  4272.,  4472.,  4672.,  2450.,  2558.,  2666.,  2774.,     0.,  2422.,  2514.,  2606.,  2698.,  5672.,  5872.,  6072.,  3206.,  3314.,  3422.,  3530.,     0.,  1175.,  1229.,  1283.,  1337.,  2740.,  2856.,  2972.,  1535.,  1597.,  1659.,  1721.,     0.,  1553.,  1607.,  1661.,  1715.,  3552.,  3668.,  3784.,  1969.,  2031.,  2093.,  2155.,     0.,  1931.,  1985.,  2039.,  2093.,  4364.,  4480.,  4596.,  2403.,  2465.,  2527.,  2589.,     0.,  2309.,  2363.,  2417.,  2471.,  5176.,  5292.,  5408.,  2837.,  2899.,  2961.,  3023.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    53.,   123.,   193.,   263.,   392.,   540.,   688.,   293.,   371.,   449.,   527.,     0.,   543.,   613.,   683.,   753.,  1428.,  1576.,  1724.,   839.,   917.,   995.,  1073.,     0.,  1033.,  1103.,  1173.,  1243.,  2464.,  2612.,  2760.,  1385.,  1463.,  1541.,  1619.,     0.,  1523.,  1593.,  1663.,  1733.,  3500.,  3648.,  3796.,  1931.,  2009.,  2087.,  2165.,     0.,  2078.,  2234.,  2390.,  2546.,  5016.,  5344.,  5672.,  2830.,  3002.,  3174.,  3346.,     0.,  3170.,  3326.,  3482.,  3638.,  7312.,  7640.,  7968.,  4034.,  4206.,  4378.,  4550.,     0.,  4262.,  4418.,  4574.,  4730.,  9608.,  9936., 10264.,  5238.,  5410.,  5582.,  5754.,     0.,  1871.,  1957.,  2043.,  2129.,  4260.,  4440.,  4620.,  2327.,  2421.,  2515.,  2609.,     0.,  2473.,  2559.,  2645.,  2731.,  5520.,  5700.,  5880.,  2985.,  3079.,  3173.,  3267.,     0.,  3075.,  3161.,  3247.,  3333.,  6780.,  6960.,  7140.,  3643.,  3737.,  3831.,  3925.,     0.,  3677.,  3763.,  3849.,  3935.,  8040.,  8220.,  8400.,  4301.,  4395.,  4489.,  4583.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x12x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  30.,   70.,  110.,  948.,  260.,  404.,  278., 1668.,  596.,  868.,  446.,  614.,  310.,   30.,   70.,  804.,  948.,  260.,  174., 1396., 1668.,  596.,  278.,  446.,  270.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110.,  278.,  612.,  884., 1156., 1784., 2456., 3128., 1876., 2456., 3384., 4312., 2596., 1780.,  340.,  612.,  884., 3800., 1784., 2456., 1476., 5240., 2456., 3384., 2068., 2596., 1924.,  340.,  612., 3128., 3800., 1784., 1076., 4312., 5240., 2456., 1540., 2068., 1542., 1774.,  150., 2052., 2580., 3108.,  190., 2516., 3172., 3828.,  230.,  590., 2004., 2660., 3316., 3800., 5240., 6680., 4036., 4152., 5336., 6520., 2900.,  420., 1348., 2004., 2660., 8120., 3800., 5240., 3252., 5656., 4152., 5336., 2500., 2900., 4084., 1348., 2004., 6680., 8120., 3800., 2468., 4472., 5656., 4152., 2100., 2500., 2814., 3238.,  270., 3444., 4356., 5268.,  310., 1028., 1556., 2084.,   30.,   70., 2390., 2814., 3238., 2532., 3444., 4356., 3726.,  500., 1028., 1556.,  310.,   30.,   70.,  174.,  278., 1668.,  596.,  868.,  446., 2388.,  932., 1332.,  614.,  846.,  798.,   70.,  174., 1396., 1668.,  596.,  278., 1988., 2388.,  932.,  382.,  614.,  694.,  798.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150.,  382., 1076., 1476., 1876., 2456., 3384., 4312., 2596., 3128., 4312., 5496., 3316., 2116.,  676., 1076., 1476., 5240., 2456., 3384., 2068., 6680., 3128., 4312., 2660., 3316., 2644.,  676., 1076., 4312., 5240., 2456., 1540., 5496., 6680., 3128., 2004., 2660., 1966., 2262.,  190., 2516., 3172., 3828.,  230., 2980., 3764., 4548.,  270.,  694., 2468., 3252., 4036., 4152., 5336., 6520., 2900., 2456., 3384., 4312., 3620.,  756., 1684., 2468., 3252., 5656., 4152., 5336., 2500., 5240., 2456., 3384., 3092., 3620., 4804., 1684., 2468., 4472., 5656., 4152., 2100., 4312., 5240., 2456., 2564., 3092., 3238., 3726.,  310., 1028., 1556., 2084.,   30.,  660.,  804.,  948.,   70.,  174., 2750., 3238., 3726.,  500., 1028., 1556.,  310.,  516.,  660.,  804.,  798.,   70.,  110.,  278.,  446., 2388.,  932., 1332.,  614., 3108., 1268., 1796.,  782., 1078., 1286.,  110.,  278., 1988., 2388.,  932.,  382., 2580., 3108., 1268.,  486.,  782., 1118., 1286.,  110., 1588., 1988., 2388.,  150., 2052., 2580., 3108.,  190.,  486., 1540., 2068., 2596., 3128., 4312., 5496., 3316., 3800., 5240., 6680., 4036., 2452., 1012., 1540., 2068., 6680., 3128., 4312., 2660., 8120., 3800., 5240., 3252., 4036., 3364., 1012., 1540., 5496., 6680., 3128., 2004., 6680., 8120., 3800., 2468., 3252., 2390., 2750.,  230., 2980., 3764., 4548.,  270., 3444., 4356., 5268.,  310.,  798., 2100., 2500., 2900., 2456., 3384., 4312., 3620., 3128., 4312., 5496., 4340., 1092., 1700., 2100., 2500., 5240., 2456., 3384., 3092., 6680., 3128., 4312., 3684., 4340., 1620., 1700., 2100., 4312., 5240., 2456., 2564., 5496., 6680., 3128., 3028., 3684.,  270.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110.,  278.,  230.,  270.,  310.,  516.,  660.,  804.,  798.,  852., 1124., 1396., 1286.,  110.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x12x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   260.,   404.,   548.,   382.,   486.,   590.,   694.,     0.,   310.,   350.,   390.,   430.,  1268.,  1412.,  1556.,  1110.,  1214.,  1318.,  1422.,     0.,   590.,   630.,    30.,    70.,  1636.,  1780.,   260.,   174.,   278.,   382.,   486.,     0.,   230.,   270.,   310.,   350.,   980.,  1124.,  1268.,   902.,  1006.,  1110.,  1214.,     0.,   620.,   828.,  1036.,  1244.,  2280.,  2824.,  3368.,  2476.,  1148.,  1484.,  1820.,     0.,  1436.,  1644.,  1852.,  2060.,  4424.,  4968.,  5512.,  3164.,  3500.,  3836.,  4172.,     0.,  2892.,  3100.,   620.,   828.,  5544.,  6088.,  2280.,  1804.,  2140.,  2476.,  1148.,     0.,   950.,  1118.,  1286.,  1454.,  2932.,  3332.,  3732.,  2006.,  2238.,  2470.,  2702.,     0.,  2126.,  2294.,  2462.,  2630.,  3044.,  3444.,  3844.,  3630.,   150.,   382.,   614.,     0.,   614.,   782.,   950.,  1118.,  2132.,  2532.,  2932.,  1542.,  1774.,  2006.,  2238.,     0.,  1790.,  1958.,  2126.,  2294.,  4932.,  5332.,  3044.,  3166.,  3398.,  3630.,   150.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1604.,  2260.,  2916.,  1310.,  1670.,  2030.,  2390.,     0.,  2262.,  2558.,  2854.,  3150.,  6196.,  6852.,  7508.,  3830.,  4190.,  4550.,  4910.,     0.,  4334.,  4630.,   190.,   486.,  6052.,  6708.,  1604.,   590.,   950.,  1310.,  1670.,     0.,  1670.,  1966.,  2262.,  2558.,  4884.,  5540.,  6196.,  3110.,  3470.,  3830.,  4190.,     0.,  4012.,  4732.,  5452.,  6172.,  7016.,  8584., 10152.,  7404.,  2492.,  3340.,  4188.,     0.,  4316.,  5036.,  5756.,  6476., 12232., 13800., 15368.,  7580.,  8428.,  9276., 10124.,     0.,  9356., 10076.,  4012.,  4732., 16424., 17992.,  7016.,  5708.,  6556.,  7404.,  2492.,     0.,  2390.,  2814.,  3238.,  3662.,  6836.,  7748.,  8660.,  4214.,  4702.,  5190.,  5678.,     0.,  5358.,  5782.,  6206.,  6630.,  6436.,  7348.,  8260.,  7630.,   310.,   798.,  1286.,     0.,  1542.,  1966.,  2390.,  2814.,  5012.,  5924.,  6836.,  3238.,  3726.,  4214.,  4702.,     0.,  4510.,  4934.,  5358.,  5782., 11396., 12308.,  6436.,  6654.,  7142.,  7630.,   310.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   350.,   902.,  1454.,  2006.,  2948.,  4116.,  5284.,  2238.,  2854.,  3470.,  4086.,     0.,  4214.,  4766.,  5318.,  5870., 11124., 12292., 13460.,  6550.,  7166.,  7782.,  8398.,     0.,  8078.,  8630.,   350.,   902., 10468., 11636.,  2948.,  1006.,  1622.,  2238.,  2854.,     0.,  3110.,  3662.,  4214.,  4766.,  8788.,  9956., 11124.,  5318.,  5934.,  6550.,  7166.,     0.,  7404.,  8636.,  9868., 11100., 11752., 14344., 16936., 12332.,  3836.,  5196.,  6556.,     0.,  7196.,  8428.,  9660., 10892., 20040., 22632., 25224., 11996., 13356., 14716., 16076.,     0., 15820., 17052.,  7404.,  8636., 27304., 29896., 11752.,  9612., 10972., 12332.,  3836.,     0.,  3830.,  4510.,  5190.,  5870., 10740., 12164., 13588.,  6422.,  7166.,  7910.,  8654.,     0.,  8590.,  9270.,  9950., 10630.,  9828., 11252., 12676., 11630.,   470.,  1214.,  1958.,     0.,  2470.,  3150.,  3830.,  4510.,  7892.,  9316., 10740.,  4934.,  5678.,  6422.,  7166.,     0.,  7230.,  7910.,  8590.,  9270., 17860., 19284.,  9828., 10142., 10886., 11630.,   470.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x12x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  17.,   18.,   19.,   20.,   21.,   22.,   53.,   56.,   59.,   62.,   65.,   68.,   42.,   44.,   91.,   96.,  101.,  106.,  111.,  116.,   63.,   66.,   69.,   72.,   31.,   32.,   33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,  161.,  166.,  171.,  176.,  181.,  186.,  105.,  108.,  111.,  114.,   45.,   46.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  231.,  236.,  241.,  246.,  251.,  256.,  147.,  150.,  153.,  156.,   71.,   76.,   81.,   86.,   91.,   96.,  220.,  232.,  244.,  256.,  268.,  280.,  161.,  168.,  352.,  368.,  384.,  400.,  416.,  432.,  231.,  240.,  249.,  258.,  141.,  146.,  151.,  156.,  161.,  166.,  388.,  400.,  412.,  424.,  436.,  448.,  259.,  266.,  576.,  592.,  608.,  624.,  640.,  656.,  357.,  366.,  375.,  384.,  211.,  216.,  221.,  226.,  231.,  236.,  556.,  568.,  580.,  592.,  604.,  616.,  357.,  364.,  800.,  816.,  832.,  848.,  864.,  880.,  483.,  492.,  501.,  510.,  180.,  184.,  188.,  192.,  196.,  200.,  419.,  428.,  437.,  446.,  455.,  464.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  306.,  312.,  257.,  268.,  279.,  290.,  301.,  312.,  616.,  640.,  664.,  688.,  712.,  736.,  371.,  384.,  748.,  776.,  804.,  832.,  860.,  888.,  441.,  456.,  471.,  486.,  411.,  422.,  433.,  444.,  455.,  466.,  952.,  976., 1000., 1024., 1048., 1072.,  553.,  566., 1140., 1168., 1196., 1224., 1252., 1280.,  651.,  666.,  681.,  696.,  565.,  576.,  587.,  598.,  609.,  620., 1288., 1312., 1336., 1360., 1384., 1408.,  735.,  748., 1532., 1560., 1588., 1616., 1644., 1672.,  861.,  876.,  891.,  906.,  315.,  322.,  329.,  336.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  795.,  812.,  829.,  846.,  863.,  880.,  441.,  450.,  459.,  468.,  413.,  420.,  427.,  434.,  441.,  448.,  911.,  926.,  941.,  956.,  971.,  986.,  504.,  512., 1033., 1050., 1067., 1084., 1101., 1118.,  567.,  576.,  585.,  594.,  170.,  180.,  190.,  200.,  210.,  220.,  395.,  416.,  437.,  458.,  479.,  500.,  231.,  242.,  433.,  456.,  479.,  502.,  525.,  548.,  252.,  264.,  276.,  288.,  310.,  320.,  330.,  340.,  350.,  360.,  689.,  710.,  731.,  752.,  773.,  794.,  385.,  396.,  755.,  778.,  801.,  824.,  847.,  870.,  420.,  432.,  444.,  456.,  450.,  460.,  470.,  480.,  490.,  500.,  983., 1004., 1025., 1046., 1067., 1088.,  539.,  550., 1077., 1100., 1123., 1146., 1169., 1192.,  588.,  600.,  612.,  624.,  629.,  652.,  675.,  698.,  721.,  744., 1408., 1456., 1504., 1552., 1600., 1648.,  791.,  816., 1540., 1592., 1644., 1696., 1748., 1800.,  861.,  888.,  915.,  942.,  951.,  974.,  997., 1020., 1043., 1066., 2080., 2128., 2176., 2224., 2272., 2320., 1141., 1166., 2268., 2320., 2372., 2424., 2476., 2528., 1239., 1266., 1293., 1320., 1273., 1296., 1319., 1342., 1365., 1388., 2752., 2800., 2848., 2896., 2944., 2992., 1491., 1516., 2996., 3048., 3100., 3152., 3204., 3256., 1617., 1644., 1671., 1698.,  585.,  598.,  611.,  624.,  637.,  650., 1265., 1292., 1319., 1346., 1373., 1400.,  686.,  700., 1359., 1388., 1417., 1446., 1475., 1504.,  735.,  750.,  765.,  780.,  815.,  844.,  873.,  902.,  931.,  960., 1804., 1864., 1924., 1984., 2044., 2104., 1001., 1032., 1936., 2000., 2064., 2128., 2192., 2256., 1071., 1104., 1137., 1170., 1221., 1250., 1279., 1308., 1337., 1366., 2644., 2704., 2764., 2824., 2884., 2944., 1435., 1466., 2832., 2896., 2960., 3024., 3088., 3152., 1533., 1566., 1599., 1632., 1627., 1656., 1685., 1714., 1743., 1772., 3484., 3544., 3604., 3664., 3724., 3784., 1869., 1900., 3728., 3792., 3856., 3920., 3984., 4048., 1995., 2028., 2061., 2094.,  720.,  736.,  752.,  768.,  784.,  800., 1547., 1580., 1613., 1646., 1679., 1712.,  833.,  850., 1641., 1676., 1711., 1746., 1781., 1816.,  882.,  900.,  918.,  936.,  944.,  960.,  976.,  992., 1008., 1024., 2009., 2042., 2075., 2108., 2141., 2174., 1071., 1088., 2131., 2166., 2201., 2236., 2271., 2306., 1134., 1152., 1170., 1188.,  323.,  342.,  361.,  380.,  399.,  418.,  737.,  776.,  815.,  854.,  893.,  932.,  420.,  440.,  775.,  816.,  857.,  898.,  939.,  980.,  441.,  462.,  483.,  504.,  589.,  608.,  627.,  646.,  665.,  684., 1283., 1322., 1361., 1400., 1439., 1478.,  700.,  720., 1349., 1390., 1431., 1472., 1513., 1554.,  735.,  756.,  777.,  798.,  855.,  874.,  893.,  912.,  931.,  950., 1829., 1868., 1907., 1946., 1985., 2024.,  980., 1000., 1923., 1964., 2005., 2046., 2087., 2128., 1029., 1050., 1071., 1092., 1187., 1228., 1269., 1310., 1351., 1392., 2596., 2680., 2764., 2848., 2932., 3016., 1421., 1464., 2728., 2816., 2904., 2992., 3080., 3168., 1491., 1536., 1581., 1626., 1761., 1802., 1843., 1884., 1925., 1966., 3772., 3856., 3940., 4024., 4108., 4192., 2023., 2066., 3960., 4048., 4136., 4224., 4312., 4400., 2121., 2166., 2211., 2256., 2335., 2376., 2417., 2458., 2499., 2540., 4948., 5032., 5116., 5200., 5284., 5368., 2625., 2668., 5192., 5280., 5368., 5456., 5544., 5632., 2751., 2796., 2841., 2886.,  990., 1012., 1034., 1056., 1078., 1100., 2111., 2156., 2201., 2246., 2291., 2336., 1127., 1150., 2205., 2252., 2299., 2346., 2393., 2440., 1176., 1200., 1224., 1248., 1373., 1420., 1467., 1514., 1561., 1608., 2992., 3088., 3184., 3280., 3376., 3472., 1631., 1680., 3124., 3224., 3324., 3424., 3524., 3624., 1701., 1752., 1803., 1854., 2031., 2078., 2125., 2172., 2219., 2266., 4336., 4432., 4528., 4624., 4720., 4816., 2317., 2366., 4524., 4624., 4724., 4824., 4924., 5024., 2415., 2466., 2517., 2568., 2689., 2736., 2783., 2830., 2877., 2924., 5680., 5776., 5872., 5968., 6064., 6160., 3003., 3052., 5924., 6024., 6124., 6224., 6324., 6424., 3129., 3180., 3231., 3282., 1125., 1150., 1175., 1200., 1225., 1250., 2393., 2444., 2495., 2546., 2597., 2648., 1274., 1300., 2487., 2540., 2593., 2646., 2699., 2752., 1323., 1350., 1377., 1404., 1475., 1500., 1525., 1550., 1575., 1600., 3107., 3158., 3209., 3260., 3311., 3362., 1638., 1664., 3229., 3282., 3335., 3388., 3441., 3494., 1701., 1728., 1755., 1782.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x12x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,   11.,   14.,   17.,   20.,   23.,   26.,   14.,   16.,   18.,   20.,   22.,   24.,   26.,   28.,    0.,    0.,   15.,   16.,   17.,   18.,   19.,   20.,   21.,   22.,   53.,   56.,   59.,   62.,   65.,   68.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,    0.,    0.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,   74.,   76.,   78.,   80.,   82.,   84.,    0.,    0.,   43.,   44.,   45.,   46.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,    0.,    0.,   60.,   64.,   68.,   72.,   76.,   80.,   84.,   88.,  210.,  220.,  230.,  240.,  250.,  260.,  154.,  160.,  166.,  172.,  178.,  184.,  190.,  196.,    0.,    0.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  350.,  360.,  370.,  380.,  390.,  400.,  238.,  244.,  250.,  256.,  262.,  268.,  274.,  280.,    0.,    0.,  172.,  176.,  180.,  184.,  188.,  192.,  196.,  200.,  490.,  500.,  510.,  520.,  530.,  540.,  322.,  328.,  334.,  340.,  346.,  352.,  358.,  364.,    0.,    0.,  129.,  132.,  135.,  138.,  141.,  144.,  147.,  150.,  325.,  332.,  339.,  346.,  353.,  360.,  196.,  200.,  204.,  208.,  212.,  216.,  220.,  224.,    0.,    0.,  171.,  174.,  177.,  180.,  183.,  186.,  189.,  192.,  423.,  430.,  437.,  444.,  451.,  458.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,    0.,    0.,  213.,  216.,  219.,  222.,  225.,  228.,  231.,  234.,  521.,  528.,  535.,  542.,  549.,  556.,  308.,  312.,  316.,  320.,  324.,  328.,  332.,  336.,    0.,    0.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  619.,  626.,  633.,  640.,  647.,  654.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    5.,   10.,   15.,   20.,   25.,   30.,   35.,   40.,   51.,   62.,   73.,   84.,   95.,  106.,   42.,   48.,   54.,   60.,   66.,   72.,   78.,   84.,    0.,    0.,   75.,   80.,   85.,   90.,   95.,  100.,  105.,  110.,  205.,  216.,  227.,  238.,  249.,  260.,  126.,  132.,  138.,  144.,  150.,  156.,  162.,  168.,    0.,    0.,  145.,  150.,  155.,  160.,  165.,  170.,  175.,  180.,  359.,  370.,  381.,  392.,  403.,  414.,  210.,  216.,  222.,  228.,  234.,  240.,  246.,  252.,    0.,    0.,  215.,  220.,  225.,  230.,  235.,  240.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  306.,  312.,  318.,  324.,  330.,  336.,    0.,    0.,  292.,  304.,  316.,  328.,  340.,  352.,  364.,  376.,  738.,  764.,  790.,  816.,  842.,  868.,  434.,  448.,  462.,  476.,  490.,  504.,  518.,  532.,    0.,    0.,  460.,  472.,  484.,  496.,  508.,  520.,  532.,  544., 1102., 1128., 1154., 1180., 1206., 1232.,  630.,  644.,  658.,  672.,  686.,  700.,  714.,  728.,    0.,    0.,  628.,  640.,  652.,  664.,  676.,  688.,  700.,  712., 1466., 1492., 1518., 1544., 1570., 1596.,  826.,  840.,  854.,  868.,  882.,  896.,  910.,  924.,    0.,    0.,  301.,  308.,  315.,  322.,  329.,  336.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  408.,  416.,  424.,  432.,  440.,  448.,    0.,    0.,  399.,  406.,  413.,  420.,  427.,  434.,  441.,  448.,  911.,  926.,  941.,  956.,  971.,  986.,  504.,  512.,  520.,  528.,  536.,  544.,  552.,  560.,    0.,    0.,  497.,  504.,  511.,  518.,  525.,  532.,  539.,  546., 1121., 1136., 1151., 1166., 1181., 1196.,  616.,  624.,  632.,  640.,  648.,  656.,  664.,  672.,    0.,    0.,  595.,  602.,  609.,  616.,  623.,  630.,  637.,  644., 1331., 1346., 1361., 1376., 1391., 1406.,  728.,  736.,  744.,  752.,  760.,  768.,  776.,  784.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    9.,   18.,   27.,   36.,   45.,   54.,   63.,   72.,   91.,  110.,  129.,  148.,  167.,  186.,   70.,   80.,   90.,  100.,  110.,  120.,  130.,  140.,    0.,    0.,  135.,  144.,  153.,  162.,  171.,  180.,  189.,  198.,  357.,  376.,  395.,  414.,  433.,  452.,  210.,  220.,  230.,  240.,  250.,  260.,  270.,  280.,    0.,    0.,  261.,  270.,  279.,  288.,  297.,  306.,  315.,  324.,  623.,  642.,  661.,  680.,  699.,  718.,  350.,  360.,  370.,  380.,  390.,  400.,  410.,  420.,    0.,    0.,  387.,  396.,  405.,  414.,  423.,  432.,  441.,  450.,  889.,  908.,  927.,  946.,  965.,  984.,  490.,  500.,  510.,  520.,  530.,  540.,  550.,  560.,    0.,    0.,  524.,  544.,  564.,  584.,  604.,  624.,  644.,  664., 1266., 1308., 1350., 1392., 1434., 1476.,  714.,  736.,  758.,  780.,  802.,  824.,  846.,  868.,    0.,    0.,  804.,  824.,  844.,  864.,  884.,  904.,  924.,  944., 1854., 1896., 1938., 1980., 2022., 2064., 1022., 1044., 1066., 1088., 1110., 1132., 1154., 1176.,    0.,    0., 1084., 1104., 1124., 1144., 1164., 1184., 1204., 1224., 2442., 2484., 2526., 2568., 2610., 2652., 1330., 1352., 1374., 1396., 1418., 1440., 1462., 1484.,    0.,    0.,  473.,  484.,  495.,  506.,  517.,  528.,  539.,  550., 1077., 1100., 1123., 1146., 1169., 1192.,  588.,  600.,  612.,  624.,  636.,  648.,  660.,  672.,    0.,    0.,  627.,  638.,  649.,  660.,  671.,  682.,  693.,  704., 1399., 1422., 1445., 1468., 1491., 1514.,  756.,  768.,  780.,  792.,  804.,  816.,  828.,  840.,    0.,    0.,  781.,  792.,  803.,  814.,  825.,  836.,  847.,  858., 1721., 1744., 1767., 1790., 1813., 1836.,  924.,  936.,  948.,  960.,  972.,  984.,  996., 1008.,    0.,    0.,  935.,  946.,  957.,  968.,  979.,  990., 1001., 1012., 2043., 2066., 2089., 2112., 2135., 2158., 1092., 1104., 1116., 1128., 1140., 1152., 1164., 1176.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x12x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  101.,   107.,   113.,   119.,   125.,   131.,   344.,   364.,   384.,   404.,   424.,   444.,   291.,   305.,   644.,   680.,   716.,   752.,   788.,   824.,   457.,   479.,   501.,   523.,   185.,   191.,   197.,   203.,   209.,   215.,   624.,   644.,   664.,   684.,   704.,   724.,   487.,   501.,  1148.,  1184.,  1220.,  1256.,  1292.,  1328.,   765.,   787.,   809.,   831.,   269.,   275.,   281.,   287.,   293.,   299.,   904.,   924.,   944.,   964.,   984.,  1004.,   683.,   697.,  1652.,  1688.,  1724.,  1760.,  1796.,  1832.,  1073.,  1095.,  1117.,  1139.,   436.,   472.,   508.,   544.,   580.,   616.,  1092.,  1180.,  1268.,  1356.,  1444.,  1532.,  1136.,  1188.,  1628.,  1748.,  1868.,  1988.,  2108.,  2228.,  1692.,  1760.,   420.,   488.,   556.,   592.,   628.,   664.,   700.,   736.,  1428.,  1516.,  1604.,  1692.,  1780.,  1868.,   968.,  1020.,  1900.,  2020.,  2140.,  2260.,  2380.,  2500.,  1236.,  1304.,  1372.,  1440.,  1060.,  1096.,  1132.,  1168.,  1204.,  1240.,  2660.,  2748.,  2836.,  2924.,  3012.,  3100.,  1696.,  1748.,  3580.,  3700.,  3820.,  3940.,  4060.,  4180.,  2188.,  2256.,  2324.,  2392.,  1343.,  1373.,  1403.,  1433.,  1463.,  1493.,  3148.,  3216.,  3284.,  3352.,  3420.,  3488.,  1853.,  1891.,  3896.,  3980.,  4064.,  4148.,  4232.,  4316.,  2243.,  2289.,  2335.,  2381.,  1912.,  1996.,  2080.,  2164.,  2248.,  2332.,  2700.,  2884.,  3068.,  3252.,  3436.,  3620.,  2804.,  2904.,  3236.,  3452.,  3668.,  3884.,  4100.,  4316.,  3360.,  3476.,   648.,   764.,  1168.,  1252.,  1336.,  1420.,  1504.,  1588.,  2844.,  3028.,  3212.,  3396.,  3580.,  3764.,  1772.,  1872.,  3316.,  3532.,  3748.,  3964.,  4180.,  4396.,  2040.,  2156.,  2272.,  2388.,  2344.,  2428.,  2512.,  2596.,  2680.,  2764.,  5420.,  5604.,  5788.,  5972.,  6156.,  6340.,  3172.,  3272.,  6340.,  6556.,  6772.,  6988.,  7204.,  7420.,  3664.,  3780.,  3896.,  4012.,  2417.,  2471.,  2525.,  2579.,  2633.,  2687.,  5392.,  5508.,  5624.,  5740.,  5856.,  5972.,  3023.,  3085.,  6140.,  6272.,  6404.,  6536.,  6668.,  6800.,  3413.,  3483.,  3553.,  3623.,  3173.,  3227.,  3281.,  3335.,  3389.,  3443.,  3560.,  3676.,  3792.,  3908.,  4024.,  4140.,  3891.,  3953.,  4020.,  4152.,  4284.,  4416.,  4548.,  4680.,  4393.,  4463.,    53.,   123.,  1307.,  1385.,  1463.,  1541.,  1619.,  1697.,  3044.,  3208.,  3372.,  3536.,  3700.,  3864.,  1785.,  1871.,  3344.,  3524.,  3704.,  3884.,  4064.,  4244.,  1951.,  2045.,  2139.,  2233.,  2399.,  2477.,  2555.,  2633.,  2711.,  2789.,  5340.,  5504.,  5668.,  5832.,  5996.,  6160.,  2989.,  3075.,  5864.,  6044.,  6224.,  6404.,  6584.,  6764.,  3267.,  3361.,  3455.,  3549.,  3491.,  3569.,  3647.,  3725.,  3803.,  3881.,  7636.,  7800.,  7964.,  8128.,  8292.,  8456.,  4193.,  4279.,  8384.,  8564.,  8744.,  8924.,  9104.,  9284.,  4583.,  4677.,  4771.,  4865.,  4864.,  5044.,  5224.,  5404.,  5584.,  5764.,  5916.,  6292.,  6668.,  7044.,  7420.,  7796.,  6140.,  6336.,  6452.,  6860.,  7268.,  7676.,  8084.,  8492.,  6696.,  6908.,  1104.,  1316.,  2392.,  2572.,  2752.,  2932.,  3112.,  3292.,  5676.,  6052.,  6428.,  6804.,  7180.,  7556.,  3380.,  3576.,  6148.,  6556.,  6964.,  7372.,  7780.,  8188.,  3648.,  3860.,  4072.,  4284.,  4912.,  5092.,  5272.,  5452.,  5632.,  5812., 10940., 11316., 11692., 12068., 12444., 12820.,  6124.,  6320., 11860., 12268., 12676., 13084., 13492., 13900.,  6616.,  6828.,  7040.,  7252.,  4565.,  4667.,  4769.,  4871.,  4973.,  5075.,  9880., 10092., 10304., 10516., 10728., 10940.,  5363.,  5473., 10628., 10856., 11084., 11312., 11540., 11768.,  5753.,  5871.,  5989.,  6107.,  6340.,  6568.,  6796.,  7024.,  7252.,  7480.,  7524.,  7996.,  8468.,  8940.,  9412.,  9884.,  7808.,  8052.,  8060.,  8564.,  9068.,  9572., 10076., 10580.,  8364.,  8624.,  1332.,  1592.,  3004.,  3232.,  3460.,  3688.,  3916.,  4144.,  7092.,  7564.,  8036.,  8508.,  8980.,  9452.,  4184.,  4428.,  7564.,  8068.,  8572.,  9076.,  9580., 10084.,  4452.,  4712.,  4972.,  5232.,  6196.,  6424.,  6652.,  6880.,  7108.,  7336., 13700., 14172., 14644., 15116., 15588., 16060.,  7600.,  7844., 14620., 15124., 15628., 16132., 16636., 17140.,  8092.,  8352.,  8612.,  8872.,  5639.,  5765.,  5891.,  6017.,  6143.,  6269., 12124., 12384., 12644., 12904., 13164., 13424.,  6533.,  6667., 12872., 13148., 13424., 13700., 13976., 14252.,  6923.,  7065.,  7207.,  7349.,  7403.,  7529.,  7655.,  7781.,  7907.,  8033.,  7700.,  7960.,  8220.,  8480.,  8740.,  9000.,  8409.,  8543.,  8160.,  8436.,  8712.,  8988.,  9264.,  9540.,  8911.,  9053.,   107.,   249.,  2513.,  2663.,  2813.,  2963.,  3113.,  3263.,  5744.,  6052.,  6360.,  6668.,  6976.,  7284.,  3279.,  3437.,  6044.,  6368.,  6692.,  7016.,  7340.,  7664.,  3445.,  3611.,  3777.,  3943.,  4613.,  4763.,  4913.,  5063.,  5213.,  5363., 10056., 10364., 10672., 10980., 11288., 11596.,  5491.,  5649., 10580., 10904., 11228., 11552., 11876., 12200.,  5769.,  5935.,  6101.,  6267.,  6713.,  6863.,  7013.,  7163.,  7313.,  7463., 14368., 14676., 14984., 15292., 15600., 15908.,  7703.,  7861., 15116., 15440., 15764., 16088., 16412., 16736.,  8093.,  8259.,  8425.,  8591.,  9292.,  9616.,  9940., 10264., 10588., 10912., 10740., 11404., 12068., 12732., 13396., 14060., 11144., 11484., 11276., 11972., 12668., 13364., 14060., 14756., 11700., 12056.,  1788.,  2144.,  4228.,  4552.,  4876.,  5200.,  5524.,  5848.,  9924., 10588., 11252., 11916., 12580., 13244.,  5792.,  6132., 10396., 11092., 11788., 12484., 13180., 13876.,  6060.,  6416.,  6772.,  7128.,  8764.,  9088.,  9412.,  9736., 10060., 10384., 19220., 19884., 20548., 21212., 21876., 22540., 10552., 10892., 20140., 20836., 21532., 22228., 22924., 23620., 11044., 11400., 11756., 12112.,  7787.,  7961.,  8135.,  8309.,  8483.,  8657., 16612., 16968., 17324., 17680., 18036., 18392.,  8873.,  9055., 17360., 17732., 18104., 18476., 18848., 19220.,  9263.,  9453.,  9643.,  9833., 10768., 11140., 11512., 11884., 12256., 12628., 12348., 13108., 13868., 14628., 15388., 16148., 12812., 13200., 12884., 13676., 14468., 15260., 16052., 16844., 13368., 13772.,  2016.,  2420.,  4840.,  5212.,  5584.,  5956.,  6328.,  6700., 11340., 12100., 12860., 13620., 14380., 15140.,  6596.,  6984., 11812., 12604., 13396., 14188., 14980., 15772.,  6864.,  7268.,  7672.,  8076., 10048., 10420., 10792., 11164., 11536., 11908., 21980., 22740., 23500., 24260., 25020., 25780., 12028., 12416., 22900., 23692., 24484., 25276., 26068., 26860., 12520., 12924., 13328., 13732.,  8861.,  9059.,  9257.,  9455.,  9653.,  9851., 18856., 19260., 19664., 20068., 20472., 20876., 10043., 10249., 19604., 20024., 20444., 20864., 21284., 21704., 10433., 10647., 10861., 11075., 11633., 11831., 12029., 12227., 12425., 12623., 11840., 12244., 12648., 13052., 13456., 13860., 12927., 13133., 12300., 12720., 13140., 13560., 13980., 14400., 13429., 13643.,   161.,   375.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 128.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x12x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,    64.,    84.,   104.,   124.,   144.,   164.,    95.,   109.,   123.,   137.,   151.,   165.,   179.,   193.,     0.,     0.,    89.,    95.,   101.,   107.,   113.,   119.,   125.,   131.,   344.,   364.,   384.,   404.,   424.,   444.,   291.,   305.,   319.,   333.,   347.,   361.,   375.,   389.,     0.,     0.,   173.,   179.,   185.,   191.,   197.,   203.,   209.,   215.,   624.,   644.,   664.,   684.,   704.,   724.,   487.,   501.,   515.,   529.,   543.,   557.,   571.,   585.,     0.,     0.,   257.,   263.,   269.,   275.,   281.,   287.,   293.,   299.,   904.,   924.,   944.,   964.,   984.,  1004.,   683.,   697.,   711.,   725.,   739.,   753.,   767.,   781.,     0.,     0.,   358.,   386.,   414.,   442.,   470.,   498.,   526.,   554.,  1400.,  1472.,  1544.,  1616.,  1688.,  1760.,  1082.,  1126.,  1170.,  1214.,  1258.,  1302.,  1346.,  1390.,     0.,     0.,   750.,   778.,   806.,   834.,   862.,   890.,   918.,   946.,  2408.,  2480.,  2552.,  2624.,  2696.,  2768.,  1698.,  1742.,  1786.,  1830.,  1874.,  1918.,  1962.,  2006.,     0.,     0.,  1142.,  1170.,  1198.,  1226.,  1254.,  1282.,  1310.,  1338.,  3416.,  3488.,  3560.,  3632.,  3704.,  3776.,  2314.,  2358.,  2402.,  2446.,  2490.,  2534.,  2578.,  2622.,     0.,     0.,   941.,   963.,   985.,  1007.,  1029.,  1051.,  1073.,  1095.,  2400.,  2452.,  2504.,  2556.,  2608.,  2660.,  1463.,  1493.,  1523.,  1553.,  1583.,  1613.,  1643.,  1673.,     0.,     0.,  1249.,  1271.,  1293.,  1315.,  1337.,  1359.,  1381.,  1403.,  3128.,  3180.,  3232.,  3284.,  3336.,  3388.,  1883.,  1913.,  1943.,  1973.,  2003.,  2033.,  2063.,  2093.,     0.,     0.,  1557.,  1579.,  1601.,  1623.,  1645.,  1667.,  1689.,  1711.,  3856.,  3908.,  3960.,  4012.,  4064.,  4116.,  2303.,  2333.,  2363.,  2393.,  2423.,  2453.,  2483.,  2513.,     0.,     0.,  1865.,  1887.,  1909.,  1931.,  1953.,  1975.,  1997.,  2019.,  4584.,  4636.,  4688.,  4740.,  4792.,  4844.,  2723.,  2753.,  2783.,  2813.,  2843.,  2873.,  2903.,  2933.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    29.,    67.,   105.,   143.,   181.,   219.,   257.,   295.,   368.,   452.,   536.,   620.,   704.,   788.,   311.,   357.,   403.,   449.,   495.,   541.,   587.,   633.,     0.,     0.,   561.,   599.,   637.,   675.,   713.,   751.,   789.,   827.,  1544.,  1628.,  1712.,  1796.,  1880.,  1964.,   955.,  1001.,  1047.,  1093.,  1139.,  1185.,  1231.,  1277.,     0.,     0.,  1093.,  1131.,  1169.,  1207.,  1245.,  1283.,  1321.,  1359.,  2720.,  2804.,  2888.,  2972.,  3056.,  3140.,  1599.,  1645.,  1691.,  1737.,  1783.,  1829.,  1875.,  1921.,     0.,     0.,  1625.,  1663.,  1701.,  1739.,  1777.,  1815.,  1853.,  1891.,  3896.,  3980.,  4064.,  4148.,  4232.,  4316.,  2243.,  2289.,  2335.,  2381.,  2427.,  2473.,  2519.,  2565.,     0.,     0.,  2198.,  2290.,  2382.,  2474.,  2566.,  2658.,  2750.,  2842.,  5592.,  5792.,  5992.,  6192.,  6392.,  6592.,  3306.,  3414.,  3522.,  3630.,  3738.,  3846.,  3954.,  4062.,     0.,     0.,  3486.,  3578.,  3670.,  3762.,  3854.,  3946.,  4038.,  4130.,  8392.,  8592.,  8792.,  8992.,  9192.,  9392.,  4818.,  4926.,  5034.,  5142.,  5250.,  5358.,  5466.,  5574.,     0.,     0.,  4774.,  4866.,  4958.,  5050.,  5142.,  5234.,  5326.,  5418., 11192., 11392., 11592., 11792., 11992., 12192.,  6330.,  6438.,  6546.,  6654.,  6762.,  6870.,  6978.,  7086.,     0.,     0.,  2309.,  2363.,  2417.,  2471.,  2525.,  2579.,  2633.,  2687.,  5392.,  5508.,  5624.,  5740.,  5856.,  5972.,  3023.,  3085.,  3147.,  3209.,  3271.,  3333.,  3395.,  3457.,     0.,     0.,  3065.,  3119.,  3173.,  3227.,  3281.,  3335.,  3389.,  3443.,  7016.,  7132.,  7248.,  7364.,  7480.,  7596.,  3891.,  3953.,  4015.,  4077.,  4139.,  4201.,  4263.,  4325.,     0.,     0.,  3821.,  3875.,  3929.,  3983.,  4037.,  4091.,  4145.,  4199.,  8640.,  8756.,  8872.,  8988.,  9104.,  9220.,  4759.,  4821.,  4883.,  4945.,  5007.,  5069.,  5131.,  5193.,     0.,     0.,  4577.,  4631.,  4685.,  4739.,  4793.,  4847.,  4901.,  4955., 10264., 10380., 10496., 10612., 10728., 10844.,  5627.,  5689.,  5751.,  5813.,  5875.,  5937.,  5999.,  6061.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    53.,   123.,   193.,   263.,   333.,   403.,   473.,   543.,   672.,   820.,   968.,  1116.,  1264.,  1412.,   527.,   605.,   683.,   761.,   839.,   917.,   995.,  1073.,     0.,     0.,  1033.,  1103.,  1173.,  1243.,  1313.,  1383.,  1453.,  1523.,  2744.,  2892.,  3040.,  3188.,  3336.,  3484.,  1619.,  1697.,  1775.,  1853.,  1931.,  2009.,  2087.,  2165.,     0.,     0.,  2013.,  2083.,  2153.,  2223.,  2293.,  2363.,  2433.,  2503.,  4816.,  4964.,  5112.,  5260.,  5408.,  5556.,  2711.,  2789.,  2867.,  2945.,  3023.,  3101.,  3179.,  3257.,     0.,     0.,  2993.,  3063.,  3133.,  3203.,  3273.,  3343.,  3413.,  3483.,  6888.,  7036.,  7184.,  7332.,  7480.,  7628.,  3803.,  3881.,  3959.,  4037.,  4115.,  4193.,  4271.,  4349.,     0.,     0.,  4038.,  4194.,  4350.,  4506.,  4662.,  4818.,  4974.,  5130.,  9784., 10112., 10440., 10768., 11096., 11424.,  5530.,  5702.,  5874.,  6046.,  6218.,  6390.,  6562.,  6734.,     0.,     0.,  6222.,  6378.,  6534.,  6690.,  6846.,  7002.,  7158.,  7314., 14376., 14704., 15032., 15360., 15688., 16016.,  7938.,  8110.,  8282.,  8454.,  8626.,  8798.,  8970.,  9142.,     0.,     0.,  8406.,  8562.,  8718.,  8874.,  9030.,  9186.,  9342.,  9498., 18968., 19296., 19624., 19952., 20280., 20608., 10346., 10518., 10690., 10862., 11034., 11206., 11378., 11550.,     0.,     0.,  3677.,  3763.,  3849.,  3935.,  4021.,  4107.,  4193.,  4279.,  8384.,  8564.,  8744.,  8924.,  9104.,  9284.,  4583.,  4677.,  4771.,  4865.,  4959.,  5053.,  5147.,  5241.,     0.,     0.,  4881.,  4967.,  5053.,  5139.,  5225.,  5311.,  5397.,  5483., 10904., 11084., 11264., 11444., 11624., 11804.,  5899.,  5993.,  6087.,  6181.,  6275.,  6369.,  6463.,  6557.,     0.,     0.,  6085.,  6171.,  6257.,  6343.,  6429.,  6515.,  6601.,  6687., 13424., 13604., 13784., 13964., 14144., 14324.,  7215.,  7309.,  7403.,  7497.,  7591.,  7685.,  7779.,  7873.,     0.,     0.,  7289.,  7375.,  7461.,  7547.,  7633.,  7719.,  7805.,  7891., 15944., 16124., 16304., 16484., 16664., 16844.,  8531.,  8625.,  8719.,  8813.,  8907.,  9001.,  9095.,  9189.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x12x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   446.,   614.,   782.,   950.,   190.,   230.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  3508.,  4036.,   340.,   868.,   180.,   452.,   724.,   996.,  1268.,  1540.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,  1812.,  2084.,   180.,   452.,   724.,   996.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  1396.,  1924.,  2452.,  2980.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  2660.,  3060.,   260.,   660.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1060.,  1460.,  1860.,  2260.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   110.,   150.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  3238.,  3726.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,   270.,   310.,    30.,    70.,    70.,   174.,   278.,   382.,   486.,   590.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   694.,   798.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,   614.,   846.,  1078.,  1310.,   486.,   590.,   694.,   798.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  4356.,  5012.,   420.,  1076.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1732.,  2388.,  3044.,  3700.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  3508.,  4036.,   340.,   868.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  1396.,  1924.,  2452.,  2980.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   694.,   798.,    70.,   174.,   110.,   278.,   446.,   614.,   782.,   950.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  1374.,  1670.,  1966.,  2262.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,   782.,  1078.,  1374.,  1670.,   782.,   950.,  1118.,  1286.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,   782.,  1078.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  5204.,  5988.,   500.,  1284.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  2068.,  2852.,  3636.,  4420.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  4356.,  5012.,   420.,  1076.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1732.,  2388.,  3044.,  3700.,   190.,   230.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1118.,  1286.,   110.,   278.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x12x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   420.,   564.,   708.,   852.,   996.,  1140.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,     0.,     0.,   590.,   630.,    30.,    70.,   110.,   150.,   190.,   230.,  1796.,  1940.,   420.,   564.,   708.,   852.,   486.,   590.,   694.,   798.,   902.,  1006.,  1110.,  1214.,     0.,     0.,   510.,   550.,   590.,   630.,    30.,    70.,   110.,   150.,  1508.,  1652.,  1796.,  1940.,   420.,   564.,   278.,   382.,   486.,   590.,   694.,   798.,   902.,  1006.,     0.,     0.,   430.,   470.,   510.,   550.,   590.,   630.,    30.,    70.,  1220.,  1364.,  1508.,  1652.,  1796.,  1940.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,   460.,   668.,   876.,  1084.,  1292.,  1500.,  1708.,  1916.,  2536.,  3080.,  3624.,  4168.,  4712.,  5256.,  3068.,  3404.,  2076.,  2412.,  2748.,  3084.,  3420.,  3756.,     0.,     0.,  2732.,  2940.,   460.,   668.,   876.,  1084.,  1292.,  1500.,  5800.,  6344.,  2536.,  3080.,  3624.,  4168.,  2396.,  2732.,  3068.,  3404.,  2076.,  2412.,  2748.,  3084.,     0.,     0.,  2316.,  2524.,  2732.,  2940.,   460.,   668.,   876.,  1084.,  4712.,  5256.,  5800.,  6344.,  2536.,  3080.,  1724.,  2060.,  2396.,  2732.,  3068.,  3404.,  2076.,  2412.,     0.,     0.,  1790.,  1958.,  2126.,  2294.,  2462.,  2630.,   110.,   278.,  2916.,  3316.,  3716.,  4116.,  4516.,  4916.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  2462.,  2630.,  2116.,  2516.,  2916.,  3316.,  3716.,  4116.,  3398.,  3630.,   150.,   382.,   614.,   846.,  1078.,  1310.,     0.,     0.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  4004.,  4404.,  2116.,  2516.,  2916.,  3316.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,   614.,   846.,     0.,     0.,   782.,   950.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  3204.,  3604.,  4004.,  4404.,  2116.,  2516.,  2470.,  2702.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,  2788.,  3444.,  4100.,  4756.,  5412.,  6068.,  2390.,  2750.,  3110.,  3470.,  3830.,  4190.,  4550.,  4910.,     0.,     0.,  4334.,  4630.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  7236.,  7892.,  2788.,  3444.,  4100.,  4756.,  1670.,  2030.,  2390.,  2750.,  3110.,  3470.,  3830.,  4190.,     0.,     0.,  3742.,  4038.,  4334.,  4630.,   190.,   486.,   782.,  1078.,  5924.,  6580.,  7236.,  7892.,  2788.,  3444.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,  3110.,  3470.,     0.,     0.,  3150.,  3446.,  3742.,  4038.,  4334.,  4630.,   190.,   486.,  4612.,  5268.,  5924.,  6580.,  7236.,  7892.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,     0.,     0.,  2828.,  3548.,  4268.,  4988.,  5708.,  6428.,  7148.,  7868.,  7272.,  8840., 10408., 11976., 13544., 15112.,  8508.,  9356.,  4444.,  5292.,  6140.,  6988.,  7836.,  8684.,     0.,     0.,  8172.,  8892.,  2828.,  3548.,  4268.,  4988.,  5708.,  6428., 16680., 18248.,  7272.,  8840., 10408., 11976.,  6812.,  7660.,  8508.,  9356.,  4444.,  5292.,  6140.,  6988.,     0.,     0.,  6732.,  7452.,  8172.,  8892.,  2828.,  3548.,  4268.,  4988., 13544., 15112., 16680., 18248.,  7272.,  8840.,  5116.,  5964.,  6812.,  7660.,  8508.,  9356.,  4444.,  5292.,     0.,     0.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,   270.,   694.,  6308.,  7220.,  8132.,  9044.,  9956., 10868.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,     0.,     0.,  3662.,  4086.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,  4484.,  5396.,  6308.,  7220.,  8132.,  9044.,  7142.,  7630.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,     0.,     0.,  2814.,  3238.,  3662.,  4086.,  4510.,  4934.,  5358.,  5782.,  9444., 10356.,  4484.,  5396.,  6308.,  7220.,  6166.,  6654.,  7142.,  7630.,   310.,   798.,  1286.,  1774.,     0.,     0.,  1966.,  2390.,  2814.,  3238.,  3662.,  4086.,  4510.,  4934.,  7620.,  8532.,  9444., 10356.,  4484.,  5396.,  5190.,  5678.,  6166.,  6654.,  7142.,  7630.,   310.,   798.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   350.,   902.,  1454.,  2006.,  2558.,  3110.,  3662.,  4214.,  5156.,  6324.,  7492.,  8660.,  9828., 10996.,  4086.,  4702.,  5318.,  5934.,  6550.,  7166.,  7782.,  8398.,     0.,     0.,  8078.,  8630.,   350.,   902.,  1454.,  2006.,  2558.,  3110., 12676., 13844.,  5156.,  6324.,  7492.,  8660.,  2854.,  3470.,  4086.,  4702.,  5318.,  5934.,  6550.,  7166.,     0.,     0.,  6974.,  7526.,  8078.,  8630.,   350.,   902.,  1454.,  2006., 10340., 11508., 12676., 13844.,  5156.,  6324.,  1622.,  2238.,  2854.,  3470.,  4086.,  4702.,  5318.,  5934.,     0.,     0.,  5870.,  6422.,  6974.,  7526.,  8078.,  8630.,   350.,   902.,  8004.,  9172., 10340., 11508., 12676., 13844.,   390.,  1006.,  1622.,  2238.,  2854.,  3470.,  4086.,  4702.,     0.,     0.,  5196.,  6428.,  7660.,  8892., 10124., 11356., 12588., 13820., 12008., 14600., 17192., 19784., 22376., 24968., 13948., 15308.,  6812.,  8172.,  9532., 10892., 12252., 13612.,     0.,     0., 13612., 14844.,  5196.,  6428.,  7660.,  8892., 10124., 11356., 27560., 30152., 12008., 14600., 17192., 19784., 11228., 12588., 13948., 15308.,  6812.,  8172.,  9532., 10892.,     0.,     0., 11148., 12380., 13612., 14844.,  5196.,  6428.,  7660.,  8892., 22376., 24968., 27560., 30152., 12008., 14600.,  8508.,  9868., 11228., 12588., 13948., 15308.,  6812.,  8172.,     0.,     0.,  7230.,  7910.,  8590.,  9270.,  9950., 10630.,   430.,  1110.,  9700., 11124., 12548., 13972., 15396., 16820.,   470.,  1214.,  1958.,  2702.,  3446.,  4190.,  4934.,  5678.,     0.,     0.,  5870.,  6550.,  7230.,  7910.,  8590.,  9270.,  9950., 10630.,  6852.,  8276.,  9700., 11124., 12548., 13972., 10886., 11630.,   470.,  1214.,  1958.,  2702.,  3446.,  4190.,     0.,     0.,  4510.,  5190.,  5870.,  6550.,  7230.,  7910.,  8590.,  9270., 14884., 16308.,  6852.,  8276.,  9700., 11124.,  9398., 10142., 10886., 11630.,   470.,  1214.,  1958.,  2702.,     0.,     0.,  3150.,  3830.,  4510.,  5190.,  5870.,  6550.,  7230.,  7910., 12036., 13460., 14884., 16308.,  6852.,  8276.,  7910.,  8654.,  9398., 10142., 10886., 11630.,   470.,  1214.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x12x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   33.,    34.,    35.,    36.,    37.,    38.,    39.,    40.,    41.,    42.,    43.,    44.,   103.,   106.,   109.,   112.,   115.,   118.,   121.,   124.,   127.,   130.,   133.,   136.,    82.,    84.,    86.,    88.,   177.,   182.,   187.,   192.,   197.,   202.,   207.,   212.,   217.,   222.,   227.,   232.,   123.,   126.,   129.,   132.,   135.,   138.,   141.,   144.,    61.,    62.,    63.,    64.,    65.,    66.,    67.,    68.,    69.,    70.,    71.,    72.,   187.,   190.,   193.,   196.,   199.,   202.,   205.,   208.,   211.,   214.,   217.,   220.,   138.,   140.,   142.,   144.,   317.,   322.,   327.,   332.,   337.,   342.,   347.,   352.,   357.,   362.,   367.,   372.,   207.,   210.,   213.,   216.,   219.,   222.,   225.,   228.,    89.,    90.,    91.,    92.,    93.,    94.,    95.,    96.,    97.,    98.,    99.,   100.,   271.,   274.,   277.,   280.,   283.,   286.,   289.,   292.,   295.,   298.,   301.,   304.,   194.,   196.,   198.,   200.,   457.,   462.,   467.,   472.,   477.,   482.,   487.,   492.,   497.,   502.,   507.,   512.,   291.,   294.,   297.,   300.,   303.,   306.,   309.,   312.,   137.,   142.,   147.,   152.,   157.,   162.,   167.,   172.,   177.,   182.,   187.,   192.,   428.,   440.,   452.,   464.,   476.,   488.,   500.,   512.,   524.,   536.,   548.,   560.,   315.,   322.,   329.,   336.,   688.,   704.,   720.,   736.,   752.,   768.,   784.,   800.,   816.,   832.,   848.,   864.,   453.,   462.,   471.,   480.,   489.,   498.,   507.,   516.,   277.,   282.,   287.,   292.,   297.,   302.,   307.,   312.,   317.,   322.,   327.,   332.,   764.,   776.,   788.,   800.,   812.,   824.,   836.,   848.,   860.,   872.,   884.,   896.,   511.,   518.,   525.,   532.,  1136.,  1152.,  1168.,  1184.,  1200.,  1216.,  1232.,  1248.,  1264.,  1280.,  1296.,  1312.,   705.,   714.,   723.,   732.,   741.,   750.,   759.,   768.,   417.,   422.,   427.,   432.,   437.,   442.,   447.,   452.,   457.,   462.,   467.,   472.,  1100.,  1112.,  1124.,  1136.,  1148.,  1160.,  1172.,  1184.,  1196.,  1208.,  1220.,  1232.,   707.,   714.,   721.,   728.,  1584.,  1600.,  1616.,  1632.,  1648.,  1664.,  1680.,  1696.,  1712.,  1728.,  1744.,  1760.,   957.,   966.,   975.,   984.,   993.,  1002.,  1011.,  1020.,   356.,   360.,   364.,   368.,   372.,   376.,   380.,   384.,   388.,   392.,   396.,   400.,   829.,   838.,   847.,   856.,   865.,   874.,   883.,   892.,   901.,   910.,   919.,   928.,   485.,   490.,   495.,   500.,  1015.,  1026.,  1037.,  1048.,  1059.,  1070.,  1081.,  1092.,  1103.,  1114.,  1125.,  1136.,   582.,   588.,   594.,   600.,   606.,   612.,   618.,   624.,   503.,   514.,   525.,   536.,   547.,   558.,   569.,   580.,   591.,   602.,   613.,   624.,  1208.,  1232.,  1256.,  1280.,  1304.,  1328.,  1352.,  1376.,  1400.,  1424.,  1448.,  1472.,   729.,   742.,   755.,   768.,  1468.,  1496.,  1524.,  1552.,  1580.,  1608.,  1636.,  1664.,  1692.,  1720.,  1748.,  1776.,   867.,   882.,   897.,   912.,   927.,   942.,   957.,   972.,   811.,   822.,   833.,   844.,   855.,   866.,   877.,   888.,   899.,   910.,   921.,   932.,  1880.,  1904.,  1928.,  1952.,  1976.,  2000.,  2024.,  2048.,  2072.,  2096.,  2120.,  2144.,  1093.,  1106.,  1119.,  1132.,  2252.,  2280.,  2308.,  2336.,  2364.,  2392.,  2420.,  2448.,  2476.,  2504.,  2532.,  2560.,  1287.,  1302.,  1317.,  1332.,  1347.,  1362.,  1377.,  1392.,  1119.,  1130.,  1141.,  1152.,  1163.,  1174.,  1185.,  1196.,  1207.,  1218.,  1229.,  1240.,  2552.,  2576.,  2600.,  2624.,  2648.,  2672.,  2696.,  2720.,  2744.,  2768.,  2792.,  2816.,  1457.,  1470.,  1483.,  1496.,  3036.,  3064.,  3092.,  3120.,  3148.,  3176.,  3204.,  3232.,  3260.,  3288.,  3316.,  3344.,  1707.,  1722.,  1737.,  1752.,  1767.,  1782.,  1797.,  1812.,   623.,   630.,   637.,   644.,   651.,   658.,   665.,   672.,   679.,   686.,   693.,   700.,  1387.,  1402.,  1417.,  1432.,  1447.,  1462.,  1477.,  1492.,  1507.,  1522.,  1537.,  1552.,   776.,   784.,   792.,   800.,  1573.,  1590.,  1607.,  1624.,  1641.,  1658.,  1675.,  1692.,  1709.,  1726.,  1743.,  1760.,   873.,   882.,   891.,   900.,   909.,   918.,   927.,   936.,   819.,   826.,   833.,   840.,   847.,   854.,   861.,   868.,   875.,   882.,   889.,   896.,  1807.,  1822.,  1837.,  1852.,  1867.,  1882.,  1897.,  1912.,  1927.,  1942.,  1957.,  1972.,  1000.,  1008.,  1016.,  1024.,  2049.,  2066.,  2083.,  2100.,  2117.,  2134.,  2151.,  2168.,  2185.,  2202.,  2219.,  2236.,  1125.,  1134.,  1143.,  1152.,  1161.,  1170.,  1179.,  1188.,   330.,   340.,   350.,   360.,   370.,   380.,   390.,   400.,   410.,   420.,   430.,   440.,   769.,   790.,   811.,   832.,   853.,   874.,   895.,   916.,   937.,   958.,   979.,  1000.,   451.,   462.,   473.,   484.,   843.,   866.,   889.,   912.,   935.,   958.,   981.,  1004.,  1027.,  1050.,  1073.,  1096.,   492.,   504.,   516.,   528.,   540.,   552.,   564.,   576.,   610.,   620.,   630.,   640.,   650.,   660.,   670.,   680.,   690.,   700.,   710.,   720.,  1357.,  1378.,  1399.,  1420.,  1441.,  1462.,  1483.,  1504.,  1525.,  1546.,  1567.,  1588.,   759.,   770.,   781.,   792.,  1487.,  1510.,  1533.,  1556.,  1579.,  1602.,  1625.,  1648.,  1671.,  1694.,  1717.,  1740.,   828.,   840.,   852.,   864.,   876.,   888.,   900.,   912.,   890.,   900.,   910.,   920.,   930.,   940.,   950.,   960.,   970.,   980.,   990.,  1000.,  1945.,  1966.,  1987.,  2008.,  2029.,  2050.,  2071.,  2092.,  2113.,  2134.,  2155.,  2176.,  1067.,  1078.,  1089.,  1100.,  2131.,  2154.,  2177.,  2200.,  2223.,  2246.,  2269.,  2292.,  2315.,  2338.,  2361.,  2384.,  1164.,  1176.,  1188.,  1200.,  1212.,  1224.,  1236.,  1248.,  1235.,  1258.,  1281.,  1304.,  1327.,  1350.,  1373.,  1396.,  1419.,  1442.,  1465.,  1488.,  2768.,  2816.,  2864.,  2912.,  2960.,  3008.,  3056.,  3104.,  3152.,  3200.,  3248.,  3296.,  1557.,  1582.,  1607.,  1632.,  3028.,  3080.,  3132.,  3184.,  3236.,  3288.,  3340.,  3392.,  3444.,  3496.,  3548.,  3600.,  1695.,  1722.,  1749.,  1776.,  1803.,  1830.,  1857.,  1884.,  1879.,  1902.,  1925.,  1948.,  1971.,  1994.,  2017.,  2040.,  2063.,  2086.,  2109.,  2132.,  4112.,  4160.,  4208.,  4256.,  4304.,  4352.,  4400.,  4448.,  4496.,  4544.,  4592.,  4640.,  2257.,  2282.,  2307.,  2332.,  4484.,  4536.,  4588.,  4640.,  4692.,  4744.,  4796.,  4848.,  4900.,  4952.,  5004.,  5056.,  2451.,  2478.,  2505.,  2532.,  2559.,  2586.,  2613.,  2640.,  2523.,  2546.,  2569.,  2592.,  2615.,  2638.,  2661.,  2684.,  2707.,  2730.,  2753.,  2776.,  5456.,  5504.,  5552.,  5600.,  5648.,  5696.,  5744.,  5792.,  5840.,  5888.,  5936.,  5984.,  2957.,  2982.,  3007.,  3032.,  5940.,  5992.,  6044.,  6096.,  6148.,  6200.,  6252.,  6304.,  6356.,  6408.,  6460.,  6512.,  3207.,  3234.,  3261.,  3288.,  3315.,  3342.,  3369.,  3396.,  1157.,  1170.,  1183.,  1196.,  1209.,  1222.,  1235.,  1248.,  1261.,  1274.,  1287.,  1300.,  2503.,  2530.,  2557.,  2584.,  2611.,  2638.,  2665.,  2692.,  2719.,  2746.,  2773.,  2800.,  1358.,  1372.,  1386.,  1400.,  2689.,  2718.,  2747.,  2776.,  2805.,  2834.,  2863.,  2892.,  2921.,  2950.,  2979.,  3008.,  1455.,  1470.,  1485.,  1500.,  1515.,  1530.,  1545.,  1560.,  1601.,  1630.,  1659.,  1688.,  1717.,  1746.,  1775.,  1804.,  1833.,  1862.,  1891.,  1920.,  3548.,  3608.,  3668.,  3728.,  3788.,  3848.,  3908.,  3968.,  4028.,  4088.,  4148.,  4208.,  1971.,  2002.,  2033.,  2064.,  3808.,  3872.,  3936.,  4000.,  4064.,  4128.,  4192.,  4256.,  4320.,  4384.,  4448.,  4512.,  2109.,  2142.,  2175.,  2208.,  2241.,  2274.,  2307.,  2340.,  2413.,  2442.,  2471.,  2500.,  2529.,  2558.,  2587.,  2616.,  2645.,  2674.,  2703.,  2732.,  5228.,  5288.,  5348.,  5408.,  5468.,  5528.,  5588.,  5648.,  5708.,  5768.,  5828.,  5888.,  2839.,  2870.,  2901.,  2932.,  5600.,  5664.,  5728.,  5792.,  5856.,  5920.,  5984.,  6048.,  6112.,  6176.,  6240.,  6304.,  3033.,  3066.,  3099.,  3132.,  3165.,  3198.,  3231.,  3264.,  3225.,  3254.,  3283.,  3312.,  3341.,  3370.,  3399.,  3428.,  3457.,  3486.,  3515.,  3544.,  6908.,  6968.,  7028.,  7088.,  7148.,  7208.,  7268.,  7328.,  7388.,  7448.,  7508.,  7568.,  3707.,  3738.,  3769.,  3800.,  7392.,  7456.,  7520.,  7584.,  7648.,  7712.,  7776.,  7840.,  7904.,  7968.,  8032.,  8096.,  3957.,  3990.,  4023.,  4056.,  4089.,  4122.,  4155.,  4188.,  1424.,  1440.,  1456.,  1472.,  1488.,  1504.,  1520.,  1536.,  1552.,  1568.,  1584.,  1600.,  3061.,  3094.,  3127.,  3160.,  3193.,  3226.,  3259.,  3292.,  3325.,  3358.,  3391.,  3424.,  1649.,  1666.,  1683.,  1700.,  3247.,  3282.,  3317.,  3352.,  3387.,  3422.,  3457.,  3492.,  3527.,  3562.,  3597.,  3632.,  1746.,  1764.,  1782.,  1800.,  1818.,  1836.,  1854.,  1872.,  1872.,  1888.,  1904.,  1920.,  1936.,  1952.,  1968.,  1984.,  2000.,  2016.,  2032.,  2048.,  3985.,  4018.,  4051.,  4084.,  4117.,  4150.,  4183.,  4216.,  4249.,  4282.,  4315.,  4348.,  2125.,  2142.,  2159.,  2176.,  4227.,  4262.,  4297.,  4332.,  4367.,  4402.,  4437.,  4472.,  4507.,  4542.,  4577.,  4612.,  2250.,  2268.,  2286.,  2304.,  2322.,  2340.,  2358.,  2376.,   627.,   646.,   665.,   684.,   703.,   722.,   741.,   760.,   779.,   798.,   817.,   836.,  1435.,  1474.,  1513.,  1552.,  1591.,  1630.,  1669.,  1708.,  1747.,  1786.,  1825.,  1864.,   820.,   840.,   860.,   880.,  1509.,  1550.,  1591.,  1632.,  1673.,  1714.,  1755.,  1796.,  1837.,  1878.,  1919.,  1960.,   861.,   882.,   903.,   924.,   945.,   966.,   987.,  1008.,  1159.,  1178.,  1197.,  1216.,  1235.,  1254.,  1273.,  1292.,  1311.,  1330.,  1349.,  1368.,  2527.,  2566.,  2605.,  2644.,  2683.,  2722.,  2761.,  2800.,  2839.,  2878.,  2917.,  2956.,  1380.,  1400.,  1420.,  1440.,  2657.,  2698.,  2739.,  2780.,  2821.,  2862.,  2903.,  2944.,  2985.,  3026.,  3067.,  3108.,  1449.,  1470.,  1491.,  1512.,  1533.,  1554.,  1575.,  1596.,  1691.,  1710.,  1729.,  1748.,  1767.,  1786.,  1805.,  1824.,  1843.,  1862.,  1881.,  1900.,  3619.,  3658.,  3697.,  3736.,  3775.,  3814.,  3853.,  3892.,  3931.,  3970.,  4009.,  4048.,  1940.,  1960.,  1980.,  2000.,  3805.,  3846.,  3887.,  3928.,  3969.,  4010.,  4051.,  4092.,  4133.,  4174.,  4215.,  4256.,  2037.,  2058.,  2079.,  2100.,  2121.,  2142.,  2163.,  2184.,  2333.,  2374.,  2415.,  2456.,  2497.,  2538.,  2579.,  2620.,  2661.,  2702.,  2743.,  2784.,  5108.,  5192.,  5276.,  5360.,  5444.,  5528.,  5612.,  5696.,  5780.,  5864.,  5948.,  6032.,  2799.,  2842.,  2885.,  2928.,  5368.,  5456.,  5544.,  5632.,  5720.,  5808.,  5896.,  5984.,  6072.,  6160.,  6248.,  6336.,  2937.,  2982.,  3027.,  3072.,  3117.,  3162.,  3207.,  3252.,  3481.,  3522.,  3563.,  3604.,  3645.,  3686.,  3727.,  3768.,  3809.,  3850.,  3891.,  3932.,  7460.,  7544.,  7628.,  7712.,  7796.,  7880.,  7964.,  8048.,  8132.,  8216.,  8300.,  8384.,  4003.,  4046.,  4089.,  4132.,  7832.,  7920.,  8008.,  8096.,  8184.,  8272.,  8360.,  8448.,  8536.,  8624.,  8712.,  8800.,  4197.,  4242.,  4287.,  4332.,  4377.,  4422.,  4467.,  4512.,  4629.,  4670.,  4711.,  4752.,  4793.,  4834.,  4875.,  4916.,  4957.,  4998.,  5039.,  5080.,  9812.,  9896.,  9980., 10064., 10148., 10232., 10316., 10400., 10484., 10568., 10652., 10736.,  5207.,  5250.,  5293.,  5336., 10296., 10384., 10472., 10560., 10648., 10736., 10824., 10912., 11000., 11088., 11176., 11264.,  5457.,  5502.,  5547.,  5592.,  5637.,  5682.,  5727.,  5772.,  1958.,  1980.,  2002.,  2024.,  2046.,  2068.,  2090.,  2112.,  2134.,  2156.,  2178.,  2200.,  4177.,  4222.,  4267.,  4312.,  4357.,  4402.,  4447.,  4492.,  4537.,  4582.,  4627.,  4672.,  2231.,  2254.,  2277.,  2300.,  4363.,  4410.,  4457.,  4504.,  4551.,  4598.,  4645.,  4692.,  4739.,  4786.,  4833.,  4880.,  2328.,  2352.,  2376.,  2400.,  2424.,  2448.,  2472.,  2496.,  2699.,  2746.,  2793.,  2840.,  2887.,  2934.,  2981.,  3028.,  3075.,  3122.,  3169.,  3216.,  5888.,  5984.,  6080.,  6176.,  6272.,  6368.,  6464.,  6560.,  6656.,  6752.,  6848.,  6944.,  3213.,  3262.,  3311.,  3360.,  6148.,  6248.,  6348.,  6448.,  6548.,  6648.,  6748.,  6848.,  6948.,  7048.,  7148.,  7248.,  3351.,  3402.,  3453.,  3504.,  3555.,  3606.,  3657.,  3708.,  4015.,  4062.,  4109.,  4156.,  4203.,  4250.,  4297.,  4344.,  4391.,  4438.,  4485.,  4532.,  8576.,  8672.,  8768.,  8864.,  8960.,  9056.,  9152.,  9248.,  9344.,  9440.,  9536.,  9632.,  4585.,  4634.,  4683.,  4732.,  8948.,  9048.,  9148.,  9248.,  9348.,  9448.,  9548.,  9648.,  9748.,  9848.,  9948., 10048.,  4779.,  4830.,  4881.,  4932.,  4983.,  5034.,  5085.,  5136.,  5331.,  5378.,  5425.,  5472.,  5519.,  5566.,  5613.,  5660.,  5707.,  5754.,  5801.,  5848., 11264., 11360., 11456., 11552., 11648., 11744., 11840., 11936., 12032., 12128., 12224., 12320.,  5957.,  6006.,  6055.,  6104., 11748., 11848., 11948., 12048., 12148., 12248., 12348., 12448., 12548., 12648., 12748., 12848.,  6207.,  6258.,  6309.,  6360.,  6411.,  6462.,  6513.,  6564.,  2225.,  2250.,  2275.,  2300.,  2325.,  2350.,  2375.,  2400.,  2425.,  2450.,  2475.,  2500.,  4735.,  4786.,  4837.,  4888.,  4939.,  4990.,  5041.,  5092.,  5143.,  5194.,  5245.,  5296.,  2522.,  2548.,  2574.,  2600.,  4921.,  4974.,  5027.,  5080.,  5133.,  5186.,  5239.,  5292.,  5345.,  5398.,  5451.,  5504.,  2619.,  2646.,  2673.,  2700.,  2727.,  2754.,  2781.,  2808.,  2925.,  2950.,  2975.,  3000.,  3025.,  3050.,  3075.,  3100.,  3125.,  3150.,  3175.,  3200.,  6163.,  6214.,  6265.,  6316.,  6367.,  6418.,  6469.,  6520.,  6571.,  6622.,  6673.,  6724.,  3250.,  3276.,  3302.,  3328.,  6405.,  6458.,  6511.,  6564.,  6617.,  6670.,  6723.,  6776.,  6829.,  6882.,  6935.,  6988.,  3375.,  3402.,  3429.,  3456.,  3483.,  3510.,  3537.,  3564.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x12x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,    9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   19.,   22.,   25.,   28.,   31.,   34.,   37.,   40.,   43.,   46.,   49.,   52.,   26.,   28.,   30.,   32.,   34.,   36.,   38.,   40.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,    0.,    0.,    0.,    0.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,  103.,  106.,  109.,  112.,  115.,  118.,  121.,  124.,  127.,  130.,  133.,  136.,   82.,   84.,   86.,   88.,   90.,   92.,   94.,   96.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,    0.,    0.,    0.,    0.,   57.,   58.,   59.,   60.,   61.,   62.,   63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  146.,  148.,  150.,  152.,  154.,  156.,  158.,  160.,  162.,  164.,  166.,  168.,    0.,    0.,    0.,    0.,   85.,   86.,   87.,   88.,   89.,   90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  202.,  204.,  206.,  208.,  210.,  212.,  214.,  216.,  218.,  220.,  222.,  224.,    0.,    0.,    0.,    0.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  148.,  152.,  156.,  160.,  164.,  168.,  172.,  176.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  302.,  308.,  314.,  320.,  326.,  332.,  338.,  344.,  350.,  356.,  362.,  368.,  374.,  380.,  386.,  392.,    0.,    0.,    0.,    0.,  228.,  232.,  236.,  240.,  244.,  248.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,  284.,  288.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  470.,  476.,  482.,  488.,  494.,  500.,  506.,  512.,  518.,  524.,  530.,  536.,  542.,  548.,  554.,  560.,    0.,    0.,    0.,    0.,  340.,  344.,  348.,  352.,  356.,  360.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,  396.,  400.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080.,  638.,  644.,  650.,  656.,  662.,  668.,  674.,  680.,  686.,  692.,  698.,  704.,  710.,  716.,  722.,  728.,    0.,    0.,    0.,    0.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  279.,  282.,  285.,  288.,  291.,  294.,  297.,  300.,  643.,  650.,  657.,  664.,  671.,  678.,  685.,  692.,  699.,  706.,  713.,  720.,  388.,  392.,  396.,  400.,  404.,  408.,  412.,  416.,  420.,  424.,  428.,  432.,  436.,  440.,  444.,  448.,    0.,    0.,    0.,    0.,  339.,  342.,  345.,  348.,  351.,  354.,  357.,  360.,  363.,  366.,  369.,  372.,  375.,  378.,  381.,  384.,  839.,  846.,  853.,  860.,  867.,  874.,  881.,  888.,  895.,  902.,  909.,  916.,  500.,  504.,  508.,  512.,  516.,  520.,  524.,  528.,  532.,  536.,  540.,  544.,  548.,  552.,  556.,  560.,    0.,    0.,    0.,    0.,  423.,  426.,  429.,  432.,  435.,  438.,  441.,  444.,  447.,  450.,  453.,  456.,  459.,  462.,  465.,  468., 1035., 1042., 1049., 1056., 1063., 1070., 1077., 1084., 1091., 1098., 1105., 1112.,  612.,  616.,  620.,  624.,  628.,  632.,  636.,  640.,  644.,  648.,  652.,  656.,  660.,  664.,  668.,  672.,    0.,    0.,    0.,    0.,  507.,  510.,  513.,  516.,  519.,  522.,  525.,  528.,  531.,  534.,  537.,  540.,  543.,  546.,  549.,  552., 1231., 1238., 1245., 1252., 1259., 1266., 1273., 1280., 1287., 1294., 1301., 1308.,  724.,  728.,  732.,  736.,  740.,  744.,  748.,  752.,  756.,  760.,  764.,  768.,  772.,  776.,  780.,  784.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    5.,   10.,   15.,   20.,   25.,   30.,   35.,   40.,   45.,   50.,   55.,   60.,   65.,   70.,   75.,   80.,   91.,  102.,  113.,  124.,  135.,  146.,  157.,  168.,  179.,  190.,  201.,  212.,   78.,   84.,   90.,   96.,  102.,  108.,  114.,  120.,  126.,  132.,  138.,  144.,  150.,  156.,  162.,  168.,    0.,    0.,    0.,    0.,  145.,  150.,  155.,  160.,  165.,  170.,  175.,  180.,  185.,  190.,  195.,  200.,  205.,  210.,  215.,  220.,  399.,  410.,  421.,  432.,  443.,  454.,  465.,  476.,  487.,  498.,  509.,  520.,  246.,  252.,  258.,  264.,  270.,  276.,  282.,  288.,  294.,  300.,  306.,  312.,  318.,  324.,  330.,  336.,    0.,    0.,    0.,    0.,  285.,  290.,  295.,  300.,  305.,  310.,  315.,  320.,  325.,  330.,  335.,  340.,  345.,  350.,  355.,  360.,  707.,  718.,  729.,  740.,  751.,  762.,  773.,  784.,  795.,  806.,  817.,  828.,  414.,  420.,  426.,  432.,  438.,  444.,  450.,  456.,  462.,  468.,  474.,  480.,  486.,  492.,  498.,  504.,    0.,    0.,    0.,    0.,  425.,  430.,  435.,  440.,  445.,  450.,  455.,  460.,  465.,  470.,  475.,  480.,  485.,  490.,  495.,  500., 1015., 1026., 1037., 1048., 1059., 1070., 1081., 1092., 1103., 1114., 1125., 1136.,  582.,  588.,  594.,  600.,  606.,  612.,  618.,  624.,  630.,  636.,  642.,  648.,  654.,  660.,  666.,  672.,    0.,    0.,    0.,    0.,  572.,  584.,  596.,  608.,  620.,  632.,  644.,  656.,  668.,  680.,  692.,  704.,  716.,  728.,  740.,  752., 1450., 1476., 1502., 1528., 1554., 1580., 1606., 1632., 1658., 1684., 1710., 1736.,  854.,  868.,  882.,  896.,  910.,  924.,  938.,  952.,  966.,  980.,  994., 1008., 1022., 1036., 1050., 1064.,    0.,    0.,    0.,    0.,  908.,  920.,  932.,  944.,  956.,  968.,  980.,  992., 1004., 1016., 1028., 1040., 1052., 1064., 1076., 1088., 2178., 2204., 2230., 2256., 2282., 2308., 2334., 2360., 2386., 2412., 2438., 2464., 1246., 1260., 1274., 1288., 1302., 1316., 1330., 1344., 1358., 1372., 1386., 1400., 1414., 1428., 1442., 1456.,    0.,    0.,    0.,    0., 1244., 1256., 1268., 1280., 1292., 1304., 1316., 1328., 1340., 1352., 1364., 1376., 1388., 1400., 1412., 1424., 2906., 2932., 2958., 2984., 3010., 3036., 3062., 3088., 3114., 3140., 3166., 3192., 1638., 1652., 1666., 1680., 1694., 1708., 1722., 1736., 1750., 1764., 1778., 1792., 1806., 1820., 1834., 1848.,    0.,    0.,    0.,    0.,  595.,  602.,  609.,  616.,  623.,  630.,  637.,  644.,  651.,  658.,  665.,  672.,  679.,  686.,  693.,  700., 1387., 1402., 1417., 1432., 1447., 1462., 1477., 1492., 1507., 1522., 1537., 1552.,  776.,  784.,  792.,  800.,  808.,  816.,  824.,  832.,  840.,  848.,  856.,  864.,  872.,  880.,  888.,  896.,    0.,    0.,    0.,    0.,  791.,  798.,  805.,  812.,  819.,  826.,  833.,  840.,  847.,  854.,  861.,  868.,  875.,  882.,  889.,  896., 1807., 1822., 1837., 1852., 1867., 1882., 1897., 1912., 1927., 1942., 1957., 1972., 1000., 1008., 1016., 1024., 1032., 1040., 1048., 1056., 1064., 1072., 1080., 1088., 1096., 1104., 1112., 1120.,    0.,    0.,    0.,    0.,  987.,  994., 1001., 1008., 1015., 1022., 1029., 1036., 1043., 1050., 1057., 1064., 1071., 1078., 1085., 1092., 2227., 2242., 2257., 2272., 2287., 2302., 2317., 2332., 2347., 2362., 2377., 2392., 1224., 1232., 1240., 1248., 1256., 1264., 1272., 1280., 1288., 1296., 1304., 1312., 1320., 1328., 1336., 1344.,    0.,    0.,    0.,    0., 1183., 1190., 1197., 1204., 1211., 1218., 1225., 1232., 1239., 1246., 1253., 1260., 1267., 1274., 1281., 1288., 2647., 2662., 2677., 2692., 2707., 2722., 2737., 2752., 2767., 2782., 2797., 2812., 1448., 1456., 1464., 1472., 1480., 1488., 1496., 1504., 1512., 1520., 1528., 1536., 1544., 1552., 1560., 1568.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    9.,   18.,   27.,   36.,   45.,   54.,   63.,   72.,   81.,   90.,   99.,  108.,  117.,  126.,  135.,  144.,  163.,  182.,  201.,  220.,  239.,  258.,  277.,  296.,  315.,  334.,  353.,  372.,  130.,  140.,  150.,  160.,  170.,  180.,  190.,  200.,  210.,  220.,  230.,  240.,  250.,  260.,  270.,  280.,    0.,    0.,    0.,    0.,  261.,  270.,  279.,  288.,  297.,  306.,  315.,  324.,  333.,  342.,  351.,  360.,  369.,  378.,  387.,  396.,  695.,  714.,  733.,  752.,  771.,  790.,  809.,  828.,  847.,  866.,  885.,  904.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  530.,  540.,  550.,  560.,    0.,    0.,    0.,    0.,  513.,  522.,  531.,  540.,  549.,  558.,  567.,  576.,  585.,  594.,  603.,  612.,  621.,  630.,  639.,  648., 1227., 1246., 1265., 1284., 1303., 1322., 1341., 1360., 1379., 1398., 1417., 1436.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  810.,  820.,  830.,  840.,    0.,    0.,    0.,    0.,  765.,  774.,  783.,  792.,  801.,  810.,  819.,  828.,  837.,  846.,  855.,  864.,  873.,  882.,  891.,  900., 1759., 1778., 1797., 1816., 1835., 1854., 1873., 1892., 1911., 1930., 1949., 1968.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080., 1090., 1100., 1110., 1120.,    0.,    0.,    0.,    0., 1028., 1048., 1068., 1088., 1108., 1128., 1148., 1168., 1188., 1208., 1228., 1248., 1268., 1288., 1308., 1328., 2490., 2532., 2574., 2616., 2658., 2700., 2742., 2784., 2826., 2868., 2910., 2952., 1406., 1428., 1450., 1472., 1494., 1516., 1538., 1560., 1582., 1604., 1626., 1648., 1670., 1692., 1714., 1736.,    0.,    0.,    0.,    0., 1588., 1608., 1628., 1648., 1668., 1688., 1708., 1728., 1748., 1768., 1788., 1808., 1828., 1848., 1868., 1888., 3666., 3708., 3750., 3792., 3834., 3876., 3918., 3960., 4002., 4044., 4086., 4128., 2022., 2044., 2066., 2088., 2110., 2132., 2154., 2176., 2198., 2220., 2242., 2264., 2286., 2308., 2330., 2352.,    0.,    0.,    0.,    0., 2148., 2168., 2188., 2208., 2228., 2248., 2268., 2288., 2308., 2328., 2348., 2368., 2388., 2408., 2428., 2448., 4842., 4884., 4926., 4968., 5010., 5052., 5094., 5136., 5178., 5220., 5262., 5304., 2638., 2660., 2682., 2704., 2726., 2748., 2770., 2792., 2814., 2836., 2858., 2880., 2902., 2924., 2946., 2968.,    0.,    0.,    0.,    0.,  935.,  946.,  957.,  968.,  979.,  990., 1001., 1012., 1023., 1034., 1045., 1056., 1067., 1078., 1089., 1100., 2131., 2154., 2177., 2200., 2223., 2246., 2269., 2292., 2315., 2338., 2361., 2384., 1164., 1176., 1188., 1200., 1212., 1224., 1236., 1248., 1260., 1272., 1284., 1296., 1308., 1320., 1332., 1344.,    0.,    0.,    0.,    0., 1243., 1254., 1265., 1276., 1287., 1298., 1309., 1320., 1331., 1342., 1353., 1364., 1375., 1386., 1397., 1408., 2775., 2798., 2821., 2844., 2867., 2890., 2913., 2936., 2959., 2982., 3005., 3028., 1500., 1512., 1524., 1536., 1548., 1560., 1572., 1584., 1596., 1608., 1620., 1632., 1644., 1656., 1668., 1680.,    0.,    0.,    0.,    0., 1551., 1562., 1573., 1584., 1595., 1606., 1617., 1628., 1639., 1650., 1661., 1672., 1683., 1694., 1705., 1716., 3419., 3442., 3465., 3488., 3511., 3534., 3557., 3580., 3603., 3626., 3649., 3672., 1836., 1848., 1860., 1872., 1884., 1896., 1908., 1920., 1932., 1944., 1956., 1968., 1980., 1992., 2004., 2016.,    0.,    0.,    0.,    0., 1859., 1870., 1881., 1892., 1903., 1914., 1925., 1936., 1947., 1958., 1969., 1980., 1991., 2002., 2013., 2024., 4063., 4086., 4109., 4132., 4155., 4178., 4201., 4224., 4247., 4270., 4293., 4316., 2172., 2184., 2196., 2208., 2220., 2232., 2244., 2256., 2268., 2280., 2292., 2304., 2316., 2328., 2340., 2352.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x12x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,    53.,    59.,    65.,    71.,   480.,   500.,   520.,   540.,   112.,   132.,   152.,   172.,   192.,   212.,   232.,   252.,   123.,   137.,   151.,   165.,   812.,   848.,   884.,   920.,   252.,   288.,   324.,   360.,   396.,   432.,   468.,   504.,   193.,   215.,   237.,   259.,   281.,   303.,   325.,   347.,   173.,   179.,   185.,   191.,     5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,   400.,   420.,   440.,   460.,   480.,   500.,   520.,   540.,   112.,   132.,   152.,   172.,    67.,    81.,    95.,   109.,   668.,   704.,   740.,   776.,   812.,   848.,   884.,   920.,   252.,   288.,   324.,   360.,   105.,   127.,   149.,   171.,   193.,   215.,   237.,   259.,   149.,   155.,   161.,   167.,   173.,   179.,   185.,   191.,     5.,    11.,    17.,    23.,   320.,   340.,   360.,   380.,   400.,   420.,   440.,   460.,   480.,   500.,   520.,   540.,    11.,    25.,    39.,    53.,   524.,   560.,   596.,   632.,   668.,   704.,   740.,   776.,   812.,   848.,   884.,   920.,    17.,    39.,    61.,    83.,   105.,   127.,   149.,   171.,   268.,   304.,   340.,   376.,   412.,   448.,   484.,   520.,   556.,   592.,   628.,   664.,   772.,   860.,   948.,  1036.,  1124.,  1212.,  1300.,  1388.,  1476.,  1564.,  1652.,  1740.,   888.,   940.,   992.,  1044.,  1052.,  1172.,  1292.,  1412.,  1532.,  1652.,  1772.,  1892.,  2012.,  2132.,  2252.,  2372.,  1220.,  1288.,  1356.,  1424.,   788.,   856.,   924.,   992.,   124.,   160.,   196.,   232.,   268.,   304.,   340.,   376.,   412.,   448.,   484.,   520.,  1828.,  1916.,  2004.,  2092.,   772.,   860.,   948.,  1036.,  1124.,  1212.,  1300.,  1388.,   680.,   732.,   784.,   836.,  2492.,  2612.,  2732.,  2852.,  1052.,  1172.,  1292.,  1412.,  1532.,  1652.,  1772.,  1892.,   948.,  1016.,  1084.,  1152.,  1220.,  1288.,  1356.,  1424.,   940.,   976.,  1012.,  1048.,   124.,   160.,   196.,   232.,   268.,   304.,   340.,   376.,  1476.,  1564.,  1652.,  1740.,  1828.,  1916.,  2004.,  2092.,   772.,   860.,   948.,  1036.,   472.,   524.,   576.,   628.,  2012.,  2132.,  2252.,  2372.,  2492.,  2612.,  2732.,  2852.,  1052.,  1172.,  1292.,  1412.,   676.,   744.,   812.,   880.,   948.,  1016.,  1084.,  1152.,   743.,   773.,   803.,   833.,   863.,   893.,   923.,   953.,    23.,    53.,    83.,   113.,   932.,  1000.,  1068.,  1136.,  1204.,  1272.,  1340.,  1408.,  1476.,  1544.,  1612.,  1680.,    29.,    67.,   105.,   143.,  1136.,  1220.,  1304.,  1388.,  1472.,  1556.,  1640.,  1724.,  1808.,  1892.,  1976.,  2060.,    35.,    81.,   127.,   173.,   219.,   265.,   311.,   357.,   880.,   964.,  1048.,  1132.,  1216.,  1300.,  1384.,  1468.,  1552.,  1636.,  1720.,  1804.,  1612.,  1796.,  1980.,  2164.,  2348.,  2532.,  2716.,  2900.,  3084.,  3268.,  3452.,  3636.,  1884.,  1984.,  2084.,  2184.,  1892.,  2108.,  2324.,  2540.,  2756.,  2972.,  3188.,  3404.,  3620.,  3836.,  4052.,  4268.,  2216.,  2332.,  2448.,  2564.,  1208.,  1324.,  1440.,  1556.,   544.,   628.,   712.,   796.,   880.,   964.,  1048.,  1132.,  1216.,  1300.,  1384.,  1468.,  3820.,  4004.,  4188.,  4372.,  1612.,  1796.,  1980.,  2164.,  2348.,  2532.,  2716.,  2900.,  1484.,  1584.,  1684.,  1784.,  4484.,  4700.,  4916.,  5132.,  1892.,  2108.,  2324.,  2540.,  2756.,  2972.,  3188.,  3404.,  1752.,  1868.,  1984.,  2100.,  2216.,  2332.,  2448.,  2564.,  1936.,  2020.,  2104.,  2188.,   544.,   628.,   712.,   796.,   880.,   964.,  1048.,  1132.,  3084.,  3268.,  3452.,  3636.,  3820.,  4004.,  4188.,  4372.,  1612.,  1796.,  1980.,  2164.,  1084.,  1184.,  1284.,  1384.,  3620.,  3836.,  4052.,  4268.,  4484.,  4700.,  4916.,  5132.,  1892.,  2108.,  2324.,  2540.,  1288.,  1404.,  1520.,  1636.,  1752.,  1868.,  1984.,  2100.,  1337.,  1391.,  1445.,  1499.,  1553.,  1607.,  1661.,  1715.,    41.,    95.,   149.,   203.,  1544.,  1660.,  1776.,  1892.,  2008.,  2124.,  2240.,  2356.,  2472.,  2588.,  2704.,  2820.,    47.,   109.,   171.,   233.,  1748.,  1880.,  2012.,  2144.,  2276.,  2408.,  2540.,  2672.,  2804.,  2936.,  3068.,  3200.,    53.,   123.,   193.,   263.,   333.,   403.,   473.,   543.,  1121.,  1175.,  1229.,  1283.,  1337.,  1391.,  1445.,  1499.,  1553.,  1607.,  1661.,  1715.,  1080.,  1196.,  1312.,  1428.,  1544.,  1660.,  1776.,  1892.,  2008.,  2124.,  2240.,  2356.,  1783.,  1845.,  1907.,  1969.,  1220.,  1352.,  1484.,  1616.,  1748.,  1880.,  2012.,  2144.,  2276.,  2408.,  2540.,  2672.,  2013.,  2083.,  2153.,  2223.,    53.,   123.,   193.,   263.,    59.,   137.,   215.,   293.,   371.,   449.,   527.,   605.,   683.,   761.,   839.,   917.,  3468.,  3632.,  3796.,  3960.,  1372.,  1536.,  1700.,  1864.,  2028.,  2192.,  2356.,  2520.,   753.,   839.,   925.,  1011.,  3800.,  3980.,  4160.,  4340.,  1512.,  1692.,  1872.,  2052.,  2232.,  2412.,  2592.,  2772.,   823.,   917.,  1011.,  1105.,  1199.,  1293.,  1387.,  1481.,  2243.,  2321.,  2399.,  2477.,    59.,   137.,   215.,   293.,   371.,   449.,   527.,   605.,  2812.,  2976.,  3140.,  3304.,  3468.,  3632.,  3796.,  3960.,  1372.,  1536.,  1700.,  1864.,   409.,   495.,   581.,   667.,  3080.,  3260.,  3440.,  3620.,  3800.,  3980.,  4160.,  4340.,  1512.,  1692.,  1872.,  2052.,   447.,   541.,   635.,   729.,   823.,   917.,  1011.,  1105.,  1931.,  2009.,  2087.,  2165.,  2243.,  2321.,  2399.,  2477.,    59.,   137.,   215.,   293.,  2156.,  2320.,  2484.,  2648.,  2812.,  2976.,  3140.,  3304.,  3468.,  3632.,  3796.,  3960.,    65.,   151.,   237.,   323.,  2360.,  2540.,  2720.,  2900.,  3080.,  3260.,  3440.,  3620.,  3800.,  3980.,  4160.,  4340.,    71.,   165.,   259.,   353.,   447.,   541.,   635.,   729.,  2104.,  2284.,  2464.,  2644.,  2824.,  3004.,  3184.,  3364.,  3544.,  3724.,  3904.,  4084.,  3292.,  3668.,  4044.,  4420.,  4796.,  5172.,  5548.,  5924.,  6300.,  6676.,  7052.,  7428.,  3876.,  4072.,  4268.,  4464.,  3572.,  3980.,  4388.,  4796.,  5204.,  5612.,  6020.,  6428.,  6836.,  7244.,  7652.,  8060.,  4208.,  4420.,  4632.,  4844.,  2048.,  2260.,  2472.,  2684.,  1384.,  1564.,  1744.,  1924.,  2104.,  2284.,  2464.,  2644.,  2824.,  3004.,  3184.,  3364.,  7804.,  8180.,  8556.,  8932.,  3292.,  3668.,  4044.,  4420.,  4796.,  5172.,  5548.,  5924.,  3092.,  3288.,  3484.,  3680.,  8468.,  8876.,  9284.,  9692.,  3572.,  3980.,  4388.,  4796.,  5204.,  5612.,  6020.,  6428.,  3360.,  3572.,  3784.,  3996.,  4208.,  4420.,  4632.,  4844.,  3928.,  4108.,  4288.,  4468.,  1384.,  1564.,  1744.,  1924.,  2104.,  2284.,  2464.,  2644.,  6300.,  6676.,  7052.,  7428.,  7804.,  8180.,  8556.,  8932.,  3292.,  3668.,  4044.,  4420.,  2308.,  2504.,  2700.,  2896.,  6836.,  7244.,  7652.,  8060.,  8468.,  8876.,  9284.,  9692.,  3572.,  3980.,  4388.,  4796.,  2512.,  2724.,  2936.,  3148.,  3360.,  3572.,  3784.,  3996.,  2525.,  2627.,  2729.,  2831.,  2933.,  3035.,  3137.,  3239.,    77.,   179.,   281.,   383.,  2768.,  2980.,  3192.,  3404.,  3616.,  3828.,  4040.,  4252.,  4464.,  4676.,  4888.,  5100.,    83.,   193.,   303.,   413.,  2972.,  3200.,  3428.,  3656.,  3884.,  4112.,  4340.,  4568.,  4796.,  5024.,  5252.,  5480.,    89.,   207.,   325.,   443.,   561.,   679.,   797.,   915.,  2716.,  2944.,  3172.,  3400.,  3628.,  3856.,  4084.,  4312.,  4540.,  4768.,  4996.,  5224.,  4132.,  4604.,  5076.,  5548.,  6020.,  6492.,  6964.,  7436.,  7908.,  8380.,  8852.,  9324.,  4872.,  5116.,  5360.,  5604.,  4412.,  4916.,  5420.,  5924.,  6428.,  6932.,  7436.,  7940.,  8444.,  8948.,  9452.,  9956.,  5204.,  5464.,  5724.,  5984.,  2468.,  2728.,  2988.,  3248.,  1804.,  2032.,  2260.,  2488.,  2716.,  2944.,  3172.,  3400.,  3628.,  3856.,  4084.,  4312.,  9796., 10268., 10740., 11212.,  4132.,  4604.,  5076.,  5548.,  6020.,  6492.,  6964.,  7436.,  3896.,  4140.,  4384.,  4628., 10460., 10964., 11468., 11972.,  4412.,  4916.,  5420.,  5924.,  6428.,  6932.,  7436.,  7940.,  4164.,  4424.,  4684.,  4944.,  5204.,  5464.,  5724.,  5984.,  4924.,  5152.,  5380.,  5608.,  1804.,  2032.,  2260.,  2488.,  2716.,  2944.,  3172.,  3400.,  7908.,  8380.,  8852.,  9324.,  9796., 10268., 10740., 11212.,  4132.,  4604.,  5076.,  5548.,  2920.,  3164.,  3408.,  3652.,  8444.,  8948.,  9452.,  9956., 10460., 10964., 11468., 11972.,  4412.,  4916.,  5420.,  5924.,  3124.,  3384.,  3644.,  3904.,  4164.,  4424.,  4684.,  4944.,  3119.,  3245.,  3371.,  3497.,  3623.,  3749.,  3875.,  4001.,    95.,   221.,   347.,   473.,  3380.,  3640.,  3900.,  4160.,  4420.,  4680.,  4940.,  5200.,  5460.,  5720.,  5980.,  6240.,   101.,   235.,   369.,   503.,  3584.,  3860.,  4136.,  4412.,  4688.,  4964.,  5240.,  5516.,  5792.,  6068.,  6344.,  6620.,   107.,   249.,   391.,   533.,   675.,   817.,   959.,  1101.,  2615.,  2741.,  2867.,  2993.,  3119.,  3245.,  3371.,  3497.,  3623.,  3749.,  3875.,  4001.,  2340.,  2600.,  2860.,  3120.,  3380.,  3640.,  3900.,  4160.,  4420.,  4680.,  4940.,  5200.,  3853.,  3987.,  4121.,  4255.,  2480.,  2756.,  3032.,  3308.,  3584.,  3860.,  4136.,  4412.,  4688.,  4964.,  5240.,  5516.,  4083.,  4225.,  4367.,  4509.,   107.,   249.,   391.,   533.,   113.,   263.,   413.,   563.,   713.,   863.,  1013.,  1163.,  1313.,  1463.,  1613.,  1763.,  6456.,  6764.,  7072.,  7380.,  2632.,  2940.,  3248.,  3556.,  3864.,  4172.,  4480.,  4788.,  1383.,  1541.,  1699.,  1857.,  6788.,  7112.,  7436.,  7760.,  2772.,  3096.,  3420.,  3744.,  4068.,  4392.,  4716.,  5040.,  1453.,  1619.,  1785.,  1951.,  2117.,  2283.,  2449.,  2615.,  4313.,  4463.,  4613.,  4763.,   113.,   263.,   413.,   563.,   713.,   863.,  1013.,  1163.,  5224.,  5532.,  5840.,  6148.,  6456.,  6764.,  7072.,  7380.,  2632.,  2940.,  3248.,  3556.,   751.,   909.,  1067.,  1225.,  5492.,  5816.,  6140.,  6464.,  6788.,  7112.,  7436.,  7760.,  2772.,  3096.,  3420.,  3744.,   789.,   955.,  1121.,  1287.,  1453.,  1619.,  1785.,  1951.,  3713.,  3863.,  4013.,  4163.,  4313.,  4463.,  4613.,  4763.,   113.,   263.,   413.,   563.,  3992.,  4300.,  4608.,  4916.,  5224.,  5532.,  5840.,  6148.,  6456.,  6764.,  7072.,  7380.,   119.,   277.,   435.,   593.,  4196.,  4520.,  4844.,  5168.,  5492.,  5816.,  6140.,  6464.,  6788.,  7112.,  7436.,  7760.,   125.,   291.,   457.,   623.,   789.,   955.,  1121.,  1287.,  3940.,  4264.,  4588.,  4912.,  5236.,  5560.,  5884.,  6208.,  6532.,  6856.,  7180.,  7504.,  5812.,  6476.,  7140.,  7804.,  8468.,  9132.,  9796., 10460., 11124., 11788., 12452., 13116.,  6864.,  7204.,  7544.,  7884.,  6092.,  6788.,  7484.,  8180.,  8876.,  9572., 10268., 10964., 11660., 12356., 13052., 13748.,  7196.,  7552.,  7908.,  8264.,  3308.,  3664.,  4020.,  4376.,  2644.,  2968.,  3292.,  3616.,  3940.,  4264.,  4588.,  4912.,  5236.,  5560.,  5884.,  6208., 13780., 14444., 15108., 15772.,  5812.,  6476.,  7140.,  7804.,  8468.,  9132.,  9796., 10460.,  5504.,  5844.,  6184.,  6524., 14444., 15140., 15836., 16532.,  6092.,  6788.,  7484.,  8180.,  8876.,  9572., 10268., 10964.,  5772.,  6128.,  6484.,  6840.,  7196.,  7552.,  7908.,  8264.,  6916.,  7240.,  7564.,  7888.,  2644.,  2968.,  3292.,  3616.,  3940.,  4264.,  4588.,  4912., 11124., 11788., 12452., 13116., 13780., 14444., 15108., 15772.,  5812.,  6476.,  7140.,  7804.,  4144.,  4484.,  4824.,  5164., 11660., 12356., 13052., 13748., 14444., 15140., 15836., 16532.,  6092.,  6788.,  7484.,  8180.,  4348.,  4704.,  5060.,  5416.,  5772.,  6128.,  6484.,  6840.,  4307.,  4481.,  4655.,  4829.,  5003.,  5177.,  5351.,  5525.,   131.,   305.,   479.,   653.,  4604.,  4960.,  5316.,  5672.,  6028.,  6384.,  6740.,  7096.,  7452.,  7808.,  8164.,  8520.,   137.,   319.,   501.,   683.,  4808.,  5180.,  5552.,  5924.,  6296.,  6668.,  7040.,  7412.,  7784.,  8156.,  8528.,  8900.,   143.,   333.,   523.,   713.,   903.,  1093.,  1283.,  1473.,  4552.,  4924.,  5296.,  5668.,  6040.,  6412.,  6784.,  7156.,  7528.,  7900.,  8272.,  8644.,  6652.,  7412.,  8172.,  8932.,  9692., 10452., 11212., 11972., 12732., 13492., 14252., 15012.,  7860.,  8248.,  8636.,  9024.,  6932.,  7724.,  8516.,  9308., 10100., 10892., 11684., 12476., 13268., 14060., 14852., 15644.,  8192.,  8596.,  9000.,  9404.,  3728.,  4132.,  4536.,  4940.,  3064.,  3436.,  3808.,  4180.,  4552.,  4924.,  5296.,  5668.,  6040.,  6412.,  6784.,  7156., 15772., 16532., 17292., 18052.,  6652.,  7412.,  8172.,  8932.,  9692., 10452., 11212., 11972.,  6308.,  6696.,  7084.,  7472., 16436., 17228., 18020., 18812.,  6932.,  7724.,  8516.,  9308., 10100., 10892., 11684., 12476.,  6576.,  6980.,  7384.,  7788.,  8192.,  8596.,  9000.,  9404.,  7912.,  8284.,  8656.,  9028.,  3064.,  3436.,  3808.,  4180.,  4552.,  4924.,  5296.,  5668., 12732., 13492., 14252., 15012., 15772., 16532., 17292., 18052.,  6652.,  7412.,  8172.,  8932.,  4756.,  5144.,  5532.,  5920., 13268., 14060., 14852., 15644., 16436., 17228., 18020., 18812.,  6932.,  7724.,  8516.,  9308.,  4960.,  5364.,  5768.,  6172.,  6576.,  6980.,  7384.,  7788.,  4901.,  5099.,  5297.,  5495.,  5693.,  5891.,  6089.,  6287.,   149.,   347.,   545.,   743.,  5216.,  5620.,  6024.,  6428.,  6832.,  7236.,  7640.,  8044.,  8448.,  8852.,  9256.,  9660.,   155.,   361.,   567.,   773.,  5420.,  5840.,  6260.,  6680.,  7100.,  7520.,  7940.,  8360.,  8780.,  9200.,  9620., 10040.,   161.,   375.,   589.,   803.,  1017.,  1231.,  1445.,  1659.,  4109.,  4307.,  4505.,  4703.,  4901.,  5099.,  5297.,  5495.,  5693.,  5891.,  6089.,  6287.,  3600.,  4004.,  4408.,  4812.,  5216.,  5620.,  6024.,  6428.,  6832.,  7236.,  7640.,  8044.,  5923.,  6129.,  6335.,  6541.,  3740.,  4160.,  4580.,  5000.,  5420.,  5840.,  6260.,  6680.,  7100.,  7520.,  7940.,  8360.,  6153.,  6367.,  6581.,  6795.,   161.,   375.,   589.,   803.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x12x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,    53.,    59.,    65.,    71.,    77.,    83.,    89.,    95.,   112.,   132.,   152.,   172.,   192.,   212.,   232.,   252.,   272.,   292.,   312.,   332.,   179.,   193.,   207.,   221.,   235.,   249.,   263.,   277.,   291.,   305.,   319.,   333.,   347.,   361.,   375.,   389.,     0.,     0.,     0.,     0.,   173.,   179.,   185.,   191.,   197.,   203.,   209.,   215.,   221.,   227.,   233.,   239.,   245.,   251.,   257.,   263.,   672.,   692.,   712.,   732.,   752.,   772.,   792.,   812.,   832.,   852.,   872.,   892.,   571.,   585.,   599.,   613.,   627.,   641.,   655.,   669.,   683.,   697.,   711.,   725.,   739.,   753.,   767.,   781.,     0.,     0.,     0.,     0.,   341.,   347.,   353.,   359.,   365.,   371.,   377.,   383.,   389.,   395.,   401.,   407.,   413.,   419.,   425.,   431.,  1232.,  1252.,  1272.,  1292.,  1312.,  1332.,  1352.,  1372.,  1392.,  1412.,  1432.,  1452.,   963.,   977.,   991.,  1005.,  1019.,  1033.,  1047.,  1061.,  1075.,  1089.,  1103.,  1117.,  1131.,  1145.,  1159.,  1173.,     0.,     0.,     0.,     0.,   509.,   515.,   521.,   527.,   533.,   539.,   545.,   551.,   557.,   563.,   569.,   575.,   581.,   587.,   593.,   599.,  1792.,  1812.,  1832.,  1852.,  1872.,  1892.,  1912.,  1932.,  1952.,  1972.,  1992.,  2012.,  1355.,  1369.,  1383.,  1397.,  1411.,  1425.,  1439.,  1453.,  1467.,  1481.,  1495.,  1509.,  1523.,  1537.,  1551.,  1565.,     0.,     0.,     0.,     0.,   694.,   722.,   750.,   778.,   806.,   834.,   862.,   890.,   918.,   946.,   974.,  1002.,  1030.,  1058.,  1086.,  1114.,  1976.,  2048.,  2120.,  2192.,  2264.,  2336.,  2408.,  2480.,  2552.,  2624.,  2696.,  2768.,  2130.,  2174.,  2218.,  2262.,   514.,   558.,   602.,   646.,   690.,   734.,   778.,   822.,   866.,   910.,   954.,   998.,     0.,     0.,     0.,     0.,   710.,   738.,   766.,   794.,   822.,   850.,   878.,   906.,   934.,   962.,   990.,  1018.,  1046.,  1074.,  1102.,  1130.,  2200.,  2272.,  2344.,  2416.,  2488.,  2560.,  2632.,  2704.,  2776.,  2848.,  2920.,  2992.,  1570.,  1614.,  1658.,  1702.,  1746.,  1790.,  1834.,  1878.,  1922.,  1966.,  2010.,  2054.,  2098.,  2142.,  2186.,  2230.,     0.,     0.,     0.,     0.,  1494.,  1522.,  1550.,  1578.,  1606.,  1634.,  1662.,  1690.,  1718.,  1746.,  1774.,  1802.,  1830.,  1858.,  1886.,  1914.,  4216.,  4288.,  4360.,  4432.,  4504.,  4576.,  4648.,  4720.,  4792.,  4864.,  4936.,  5008.,  2802.,  2846.,  2890.,  2934.,  2978.,  3022.,  3066.,  3110.,  3154.,  3198.,  3242.,  3286.,  3330.,  3374.,  3418.,  3462.,     0.,     0.,     0.,     0.,  1865.,  1887.,  1909.,  1931.,  1953.,  1975.,  1997.,  2019.,  2041.,  2063.,  2085.,  2107.,  2129.,  2151.,  2173.,  2195.,  4760.,  4812.,  4864.,  4916.,  4968.,  5020.,  5072.,  5124.,  5176.,  5228.,  5280.,  5332.,  2903.,  2933.,  2963.,  2993.,  3023.,  3053.,  3083.,  3113.,  3143.,  3173.,  3203.,  3233.,  3263.,  3293.,  3323.,  3353.,     0.,     0.,     0.,     0.,  2481.,  2503.,  2525.,  2547.,  2569.,  2591.,  2613.,  2635.,  2657.,  2679.,  2701.,  2723.,  2745.,  2767.,  2789.,  2811.,  3400.,  3452.,  3504.,  3556.,  3608.,  3660.,  3712.,  3764.,  3816.,  3868.,  3920.,  3972.,  3743.,  3773.,  3803.,  3833.,    23.,    53.,    83.,   113.,   143.,   173.,   203.,   233.,   263.,   293.,   323.,   353.,     0.,     0.,     0.,     0.,   281.,   303.,   325.,   347.,   369.,   391.,   413.,   435.,   457.,   479.,   501.,   523.,   545.,   567.,   589.,   611.,  1016.,  1068.,  1120.,  1172.,  1224.,  1276.,  1328.,  1380.,  1432.,  1484.,  1536.,  1588.,   743.,   773.,   803.,   833.,   863.,   893.,   923.,   953.,   983.,  1013.,  1043.,  1073.,  1103.,  1133.,  1163.,  1193.,     0.,     0.,     0.,     0.,   897.,   919.,   941.,   963.,   985.,  1007.,  1029.,  1051.,  1073.,  1095.,  1117.,  1139.,  1161.,  1183.,  1205.,  1227.,  2472.,  2524.,  2576.,  2628.,  2680.,  2732.,  2784.,  2836.,  2888.,  2940.,  2992.,  3044.,  1583.,  1613.,  1643.,  1673.,  1703.,  1733.,  1763.,  1793.,  1823.,  1853.,  1883.,  1913.,  1943.,  1973.,  2003.,  2033.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    29.,    67.,   105.,   143.,   181.,   219.,   257.,   295.,   333.,   371.,   409.,   447.,   485.,   523.,   561.,   599.,   672.,   756.,   840.,   924.,  1008.,  1092.,  1176.,  1260.,  1344.,  1428.,  1512.,  1596.,   587.,   633.,   679.,   725.,   771.,   817.,   863.,   909.,   955.,  1001.,  1047.,  1093.,  1139.,  1185.,  1231.,  1277.,     0.,     0.,     0.,     0.,  1093.,  1131.,  1169.,  1207.,  1245.,  1283.,  1321.,  1359.,  1397.,  1435.,  1473.,  1511.,  1549.,  1587.,  1625.,  1663.,  3024.,  3108.,  3192.,  3276.,  3360.,  3444.,  3528.,  3612.,  3696.,  3780.,  3864.,  3948.,  1875.,  1921.,  1967.,  2013.,  2059.,  2105.,  2151.,  2197.,  2243.,  2289.,  2335.,  2381.,  2427.,  2473.,  2519.,  2565.,     0.,     0.,     0.,     0.,  2157.,  2195.,  2233.,  2271.,  2309.,  2347.,  2385.,  2423.,  2461.,  2499.,  2537.,  2575.,  2613.,  2651.,  2689.,  2727.,  5376.,  5460.,  5544.,  5628.,  5712.,  5796.,  5880.,  5964.,  6048.,  6132.,  6216.,  6300.,  3163.,  3209.,  3255.,  3301.,  3347.,  3393.,  3439.,  3485.,  3531.,  3577.,  3623.,  3669.,  3715.,  3761.,  3807.,  3853.,     0.,     0.,     0.,     0.,  3221.,  3259.,  3297.,  3335.,  3373.,  3411.,  3449.,  3487.,  3525.,  3563.,  3601.,  3639.,  3677.,  3715.,  3753.,  3791.,  7728.,  7812.,  7896.,  7980.,  8064.,  8148.,  8232.,  8316.,  8400.,  8484.,  8568.,  8652.,  4451.,  4497.,  4543.,  4589.,  4635.,  4681.,  4727.,  4773.,  4819.,  4865.,  4911.,  4957.,  5003.,  5049.,  5095.,  5141.,     0.,     0.,     0.,     0.,  4326.,  4418.,  4510.,  4602.,  4694.,  4786.,  4878.,  4970.,  5062.,  5154.,  5246.,  5338.,  5430.,  5522.,  5614.,  5706.,  6168.,  6368.,  6568.,  6768.,  6968.,  7168.,  7368.,  7568.,  7768.,  7968.,  8168.,  8368.,  6530.,  6638.,  6746.,  6854.,  1074.,  1182.,  1290.,  1398.,  1506.,  1614.,  1722.,  1830.,  1938.,  2046.,  2154.,  2262.,     0.,     0.,     0.,     0.,  2038.,  2130.,  2222.,  2314.,  2406.,  2498.,  2590.,  2682.,  2774.,  2866.,  2958.,  3050.,  3142.,  3234.,  3326.,  3418.,  5880.,  6080.,  6280.,  6480.,  6680.,  6880.,  7080.,  7280.,  7480.,  7680.,  7880.,  8080.,  3666.,  3774.,  3882.,  3990.,  4098.,  4206.,  4314.,  4422.,  4530.,  4638.,  4746.,  4854.,  4962.,  5070.,  5178.,  5286.,     0.,     0.,     0.,     0.,  4614.,  4706.,  4798.,  4890.,  4982.,  5074.,  5166.,  5258.,  5350.,  5442.,  5534.,  5626.,  5718.,  5810.,  5902.,  5994., 11480., 11680., 11880., 12080., 12280., 12480., 12680., 12880., 13080., 13280., 13480., 13680.,  6690.,  6798.,  6906.,  7014.,  7122.,  7230.,  7338.,  7446.,  7554.,  7662.,  7770.,  7878.,  7986.,  8094.,  8202.,  8310.,     0.,     0.,     0.,     0.,  4577.,  4631.,  4685.,  4739.,  4793.,  4847.,  4901.,  4955.,  5009.,  5063.,  5117.,  5171.,  5225.,  5279.,  5333.,  5387., 10696., 10812., 10928., 11044., 11160., 11276., 11392., 11508., 11624., 11740., 11856., 11972.,  5999.,  6061.,  6123.,  6185.,  6247.,  6309.,  6371.,  6433.,  6495.,  6557.,  6619.,  6681.,  6743.,  6805.,  6867.,  6929.,     0.,     0.,     0.,     0.,  6089.,  6143.,  6197.,  6251.,  6305.,  6359.,  6413.,  6467.,  6521.,  6575.,  6629.,  6683.,  6737.,  6791.,  6845.,  6899.,  7032.,  7148.,  7264.,  7380.,  7496.,  7612.,  7728.,  7844.,  7960.,  8076.,  8192.,  8308.,  7735.,  7797.,  7859.,  7921.,    47.,   109.,   171.,   233.,   295.,   357.,   419.,   481.,   543.,   605.,   667.,   729.,     0.,     0.,     0.,     0.,   689.,   743.,   797.,   851.,   905.,   959.,  1013.,  1067.,  1121.,  1175.,  1229.,  1283.,  1337.,  1391.,  1445.,  1499.,  2344.,  2460.,  2576.,  2692.,  2808.,  2924.,  3040.,  3156.,  3272.,  3388.,  3504.,  3620.,  1535.,  1597.,  1659.,  1721.,  1783.,  1845.,  1907.,  1969.,  2031.,  2093.,  2155.,  2217.,  2279.,  2341.,  2403.,  2465.,     0.,     0.,     0.,     0.,  2201.,  2255.,  2309.,  2363.,  2417.,  2471.,  2525.,  2579.,  2633.,  2687.,  2741.,  2795.,  2849.,  2903.,  2957.,  3011.,  5592.,  5708.,  5824.,  5940.,  6056.,  6172.,  6288.,  6404.,  6520.,  6636.,  6752.,  6868.,  3271.,  3333.,  3395.,  3457.,  3519.,  3581.,  3643.,  3705.,  3767.,  3829.,  3891.,  3953.,  4015.,  4077.,  4139.,  4201.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    53.,   123.,   193.,   263.,   333.,   403.,   473.,   543.,   613.,   683.,   753.,   823.,   893.,   963.,  1033.,  1103.,  1232.,  1380.,  1528.,  1676.,  1824.,  1972.,  2120.,  2268.,  2416.,  2564.,  2712.,  2860.,   995.,  1073.,  1151.,  1229.,  1307.,  1385.,  1463.,  1541.,  1619.,  1697.,  1775.,  1853.,  1931.,  2009.,  2087.,  2165.,     0.,     0.,     0.,     0.,  2013.,  2083.,  2153.,  2223.,  2293.,  2363.,  2433.,  2503.,  2573.,  2643.,  2713.,  2783.,  2853.,  2923.,  2993.,  3063.,  5376.,  5524.,  5672.,  5820.,  5968.,  6116.,  6264.,  6412.,  6560.,  6708.,  6856.,  7004.,  3179.,  3257.,  3335.,  3413.,  3491.,  3569.,  3647.,  3725.,  3803.,  3881.,  3959.,  4037.,  4115.,  4193.,  4271.,  4349.,     0.,     0.,     0.,     0.,  3973.,  4043.,  4113.,  4183.,  4253.,  4323.,  4393.,  4463.,  4533.,  4603.,  4673.,  4743.,  4813.,  4883.,  4953.,  5023.,  9520.,  9668.,  9816.,  9964., 10112., 10260., 10408., 10556., 10704., 10852., 11000., 11148.,  5363.,  5441.,  5519.,  5597.,  5675.,  5753.,  5831.,  5909.,  5987.,  6065.,  6143.,  6221.,  6299.,  6377.,  6455.,  6533.,     0.,     0.,     0.,     0.,  5933.,  6003.,  6073.,  6143.,  6213.,  6283.,  6353.,  6423.,  6493.,  6563.,  6633.,  6703.,  6773.,  6843.,  6913.,  6983., 13664., 13812., 13960., 14108., 14256., 14404., 14552., 14700., 14848., 14996., 15144., 15292.,  7547.,  7625.,  7703.,  7781.,  7859.,  7937.,  8015.,  8093.,  8171.,  8249.,  8327.,  8405.,  8483.,  8561.,  8639.,  8717.,     0.,     0.,     0.,     0.,  7958.,  8114.,  8270.,  8426.,  8582.,  8738.,  8894.,  9050.,  9206.,  9362.,  9518.,  9674.,  9830.,  9986., 10142., 10298., 10360., 10688., 11016., 11344., 11672., 12000., 12328., 12656., 12984., 13312., 13640., 13968., 10930., 11102., 11274., 11446.,  1634.,  1806.,  1978.,  2150.,  2322.,  2494.,  2666.,  2838.,  3010.,  3182.,  3354.,  3526.,     0.,     0.,     0.,     0.,  3366.,  3522.,  3678.,  3834.,  3990.,  4146.,  4302.,  4458.,  4614.,  4770.,  4926.,  5082.,  5238.,  5394.,  5550.,  5706.,  9560.,  9888., 10216., 10544., 10872., 11200., 11528., 11856., 12184., 12512., 12840., 13168.,  5762.,  5934.,  6106.,  6278.,  6450.,  6622.,  6794.,  6966.,  7138.,  7310.,  7482.,  7654.,  7826.,  7998.,  8170.,  8342.,     0.,     0.,     0.,     0.,  7734.,  7890.,  8046.,  8202.,  8358.,  8514.,  8670.,  8826.,  8982.,  9138.,  9294.,  9450.,  9606.,  9762.,  9918., 10074., 18744., 19072., 19400., 19728., 20056., 20384., 20712., 21040., 21368., 21696., 22024., 22352., 10578., 10750., 10922., 11094., 11266., 11438., 11610., 11782., 11954., 12126., 12298., 12470., 12642., 12814., 12986., 13158.,     0.,     0.,     0.,     0.,  7289.,  7375.,  7461.,  7547.,  7633.,  7719.,  7805.,  7891.,  7977.,  8063.,  8149.,  8235.,  8321.,  8407.,  8493.,  8579., 16632., 16812., 16992., 17172., 17352., 17532., 17712., 17892., 18072., 18252., 18432., 18612.,  9095.,  9189.,  9283.,  9377.,  9471.,  9565.,  9659.,  9753.,  9847.,  9941., 10035., 10129., 10223., 10317., 10411., 10505.,     0.,     0.,     0.,     0.,  9697.,  9783.,  9869.,  9955., 10041., 10127., 10213., 10299., 10385., 10471., 10557., 10643., 10729., 10815., 10901., 10987., 10664., 10844., 11024., 11204., 11384., 11564., 11744., 11924., 12104., 12284., 12464., 12644., 11727., 11821., 11915., 12009.,    71.,   165.,   259.,   353.,   447.,   541.,   635.,   729.,   823.,   917.,  1011.,  1105.,     0.,     0.,     0.,     0.,  1097.,  1183.,  1269.,  1355.,  1441.,  1527.,  1613.,  1699.,  1785.,  1871.,  1957.,  2043.,  2129.,  2215.,  2301.,  2387.,  3672.,  3852.,  4032.,  4212.,  4392.,  4572.,  4752.,  4932.,  5112.,  5292.,  5472.,  5652.,  2327.,  2421.,  2515.,  2609.,  2703.,  2797.,  2891.,  2985.,  3079.,  3173.,  3267.,  3361.,  3455.,  3549.,  3643.,  3737.,     0.,     0.,     0.,     0.,  3505.,  3591.,  3677.,  3763.,  3849.,  3935.,  4021.,  4107.,  4193.,  4279.,  4365.,  4451.,  4537.,  4623.,  4709.,  4795.,  8712.,  8892.,  9072.,  9252.,  9432.,  9612.,  9792.,  9972., 10152., 10332., 10512., 10692.,  4959.,  5053.,  5147.,  5241.,  5335.,  5429.,  5523.,  5617.,  5711.,  5805.,  5899.,  5993.,  6087.,  6181.,  6275.,  6369.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x12x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   500.,  1284.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   420.,  1076.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x12x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,     0.,     0.,     0.,     0.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,     0.,     0.,     0.,     0.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,     0.,     0.,     0.,     0.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,     0.,     0.,     0.,     0.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,     0.,     0.,     0.,     0.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,     0.,     0.,     0.,     0.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,     0.,     0.,     0.,     0.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,     0.,     0.,     0.,     0.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,     0.,     0.,     0.,     0.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,     0.,     0.,     0.,     0.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,     0.,     0.,     0.,     0.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,     0.,     0.,     0.,     0.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,     0.,     0.,     0.,     0.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,     0.,     0.,     0.,     0.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,     0.,     0.,     0.,     0.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,     0.,     0.,     0.,     0.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,     0.,     0.,     0.,     0.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 12, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x14x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  10.,   11.,   28.,   31.,   34.,   22.,   48.,   53.,   58.,   33.,   68.,   75.,   82.,   44.,   17.,   18.,   49.,   52.,   55.,   36.,   83.,   88.,   93.,   54.,  117.,  124.,  131.,   72.,   24.,   25.,   70.,   73.,   76.,   50.,  118.,  123.,  128.,   75.,  166.,  173.,  180.,  100.,   46.,   52.,  122.,  136.,  150.,   88.,  190.,  208.,  226.,  124.,  258.,  280.,  302.,  160.,   88.,   94.,  220.,  234.,  248.,  144.,  316.,  334.,  352.,  194.,  412.,  434.,  456.,  244.,  130.,  136.,  318.,  332.,  346.,  200.,  442.,  460.,  478.,  264.,  566.,  588.,  610.,  328.,  120.,  125.,  262.,  273.,  284.,  150.,  310.,  323.,  336.,  175.,  358.,  373.,  388.,  200.,  182.,  196.,  394.,  424.,  454.,  232.,  462.,  496.,  530.,  268.,  530.,  568.,  606.,  304.,  280.,  294.,  604.,  634.,  664.,  344.,  700.,  734.,  768.,  394.,  796.,  834.,  872.,  444.,  378.,  392.,  814.,  844.,  874.,  456.,  938.,  972., 1006.,  520., 1062., 1100., 1138.,  584.,  216.,  225.,  454.,  473.,  492.,  250.,  502.,  523.,  544.,  275.,  550.,  573.,  596.,  300.,  279.,  288.,  587.,  606.,  625.,  320.,  649.,  670.,  691.,  352.,  711.,  734.,  757.,  384.,  130.,  143.,  268.,  295.,  322.,  154.,  288.,  317.,  346.,  165.,  308.,  339.,  370.,  176.,  221.,  234.,  457.,  484.,  511.,  252.,  491.,  520.,  549.,  270.,  525.,  556.,  587.,  288.,  312.,  325.,  646.,  673.,  700.,  350.,  694.,  723.,  752.,  375.,  742.,  773.,  804.,  400.,  454.,  484.,  938., 1000., 1062.,  520., 1006., 1072., 1138.,  556., 1074., 1144., 1214.,  592.,  664.,  694., 1372., 1434., 1496.,  744., 1468., 1534., 1600.,  794., 1564., 1634., 1704.,  844.,  874.,  904., 1806., 1868., 1930.,  968., 1930., 1996., 2062., 1032., 2054., 2124., 2194., 1096.,  408.,  425.,  838.,  873.,  908.,  450.,  886.,  923.,  960.,  475.,  934.,  973., 1012.,  500.,  590.,  628., 1210., 1288., 1366.,  664., 1278., 1360., 1442.,  700., 1346., 1432., 1518.,  736.,  856.,  894., 1756., 1834., 1912.,  944., 1852., 1934., 2016.,  994., 1948., 2034., 2120., 1044., 1122., 1160., 2302., 2380., 2458., 1224., 2426., 2508., 2590., 1288., 2550., 2636., 2722., 1352.,  504.,  525., 1030., 1073., 1116.,  550., 1078., 1123., 1168.,  575., 1126., 1173., 1220.,  600.,  651.,  672., 1331., 1374., 1417.,  704., 1393., 1438., 1483.,  736., 1455., 1502., 1549.,  768.,  250.,  275.,  508.,  559.,  610.,  286.,  528.,  581.,  634.,  297.,  548.,  603.,  658.,  308.,  425.,  450.,  865.,  916.,  967.,  468.,  899.,  952., 1005.,  486.,  933.,  988., 1043.,  504.,  600.,  625., 1222., 1273., 1324.,  650., 1270., 1323., 1376.,  675., 1318., 1373., 1428.,  700.,  862.,  916., 1754., 1864., 1974.,  952., 1822., 1936., 2050.,  988., 1890., 2008., 2126., 1024., 1240., 1294., 2524., 2634., 2744., 1344., 2620., 2734., 2848., 1394., 2716., 2834., 2952., 1444., 1618., 1672., 3294., 3404., 3514., 1736., 3418., 3532., 3646., 1800., 3542., 3660., 3778., 1864.,  696.,  725., 1414., 1473., 1532.,  750., 1462., 1523., 1584.,  775., 1510., 1573., 1636.,  800.,  998., 1060., 2026., 2152., 2278., 1096., 2094., 2224., 2354., 1132., 2162., 2296., 2430., 1168., 1432., 1494., 2908., 3034., 3160., 1544., 3004., 3134., 3264., 1594., 3100., 3234., 3368., 1644., 1866., 1928., 3790., 3916., 4042., 1992., 3914., 4044., 4174., 2056., 4038., 4172., 4306., 2120.,  792.,  825., 1606., 1673., 1740.,  850., 1654., 1723., 1792.,  875., 1702., 1773., 1844.,  900., 1023., 1056., 2075., 2142., 2209., 1088., 2137., 2206., 2275., 1120., 2199., 2270., 2341., 1152.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x14x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    7.,   10.,   13.,    8.,   10.,   12.,   14.,    0.,    0.,    0.,    8.,    9.,   10.,   11.,   28.,   31.,   34.,   22.,   24.,   26.,   28.,    0.,    0.,    0.,   15.,   16.,   17.,   18.,   49.,   52.,   55.,   36.,   38.,   40.,   42.,    0.,    0.,    0.,   22.,   23.,   24.,   25.,   70.,   73.,   76.,   50.,   52.,   54.,   56.,    0.,    0.,    0.,   32.,   36.,   40.,   44.,  110.,  120.,  130.,   80.,   86.,   92.,   98.,    0.,    0.,    0.,   60.,   64.,   68.,   72.,  180.,  190.,  200.,  122.,  128.,  134.,  140.,    0.,    0.,    0.,   88.,   92.,   96.,  100.,  250.,  260.,  270.,  164.,  170.,  176.,  182.,    0.,    0.,    0.,   66.,   69.,   72.,   75.,  166.,  173.,  180.,  100.,  104.,  108.,  112.,    0.,    0.,    0.,   87.,   90.,   93.,   96.,  215.,  222.,  229.,  128.,  132.,  136.,  140.,    0.,    0.,    0.,  108.,  111.,  114.,  117.,  264.,  271.,  278.,  156.,  160.,  164.,  168.,    0.,    0.,    0.,  129.,  132.,  135.,  138.,  313.,  320.,  327.,  184.,  188.,  192.,  196.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    5.,   10.,   15.,   20.,   31.,   42.,   53.,   24.,   30.,   36.,   42.,    0.,    0.,    0.,   40.,   45.,   50.,   55.,  108.,  119.,  130.,   66.,   72.,   78.,   84.,    0.,    0.,    0.,   75.,   80.,   85.,   90.,  185.,  196.,  207.,  108.,  114.,  120.,  126.,    0.,    0.,    0.,  110.,  115.,  120.,  125.,  262.,  273.,  284.,  150.,  156.,  162.,  168.,    0.,    0.,    0.,  152.,  164.,  176.,  188.,  382.,  408.,  434.,  224.,  238.,  252.,  266.,    0.,    0.,    0.,  236.,  248.,  260.,  272.,  564.,  590.,  616.,  322.,  336.,  350.,  364.,    0.,    0.,    0.,  320.,  332.,  344.,  356.,  746.,  772.,  798.,  420.,  434.,  448.,  462.,    0.,    0.,    0.,  154.,  161.,  168.,  175.,  358.,  373.,  388.,  200.,  208.,  216.,  224.,    0.,    0.,    0.,  203.,  210.,  217.,  224.,  463.,  478.,  493.,  256.,  264.,  272.,  280.,    0.,    0.,    0.,  252.,  259.,  266.,  273.,  568.,  583.,  598.,  312.,  320.,  328.,  336.,    0.,    0.,    0.,  301.,  308.,  315.,  322.,  673.,  688.,  703.,  368.,  376.,  384.,  392.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    9.,   18.,   27.,   36.,   55.,   74.,   93.,   40.,   50.,   60.,   70.,    0.,    0.,    0.,   72.,   81.,   90.,   99.,  188.,  207.,  226.,  110.,  120.,  130.,  140.,    0.,    0.,    0.,  135.,  144.,  153.,  162.,  321.,  340.,  359.,  180.,  190.,  200.,  210.,    0.,    0.,    0.,  198.,  207.,  216.,  225.,  454.,  473.,  492.,  250.,  260.,  270.,  280.,    0.,    0.,    0.,  272.,  292.,  312.,  332.,  654.,  696.,  738.,  368.,  390.,  412.,  434.,    0.,    0.,    0.,  412.,  432.,  452.,  472.,  948.,  990., 1032.,  522.,  544.,  566.,  588.,    0.,    0.,    0.,  552.,  572.,  592.,  612., 1242., 1284., 1326.,  676.,  698.,  720.,  742.,    0.,    0.,    0.,  242.,  253.,  264.,  275.,  550.,  573.,  596.,  300.,  312.,  324.,  336.,    0.,    0.,    0.,  319.,  330.,  341.,  352.,  711.,  734.,  757.,  384.,  396.,  408.,  420.,    0.,    0.,    0.,  396.,  407.,  418.,  429.,  872.,  895.,  918.,  468.,  480.,  492.,  504.,    0.,    0.,    0.,  473.,  484.,  495.,  506., 1033., 1056., 1079.,  552.,  564.,  576.,  588.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x14x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   59.,    65.,   180.,   200.,   220.,   151.,   336.,   372.,   408.,   237.,   492.,   544.,   596.,   323.,   101.,   107.,   320.,   340.,   360.,   249.,   588.,   624.,   660.,   391.,   856.,   908.,   960.,   533.,   143.,   149.,   460.,   480.,   500.,   347.,   840.,   876.,   912.,   545.,  1220.,  1272.,  1324.,   743.,   290.,   334.,   624.,   728.,   832.,   618.,   904.,  1040.,  1176.,   902.,  1184.,  1352.,  1520.,  1186.,   406.,   450.,   904.,  1008.,  1112.,   590.,  1152.,  1288.,  1424.,   730.,  1400.,  1568.,  1736.,   870.,   714.,   758.,  1632.,  1736.,  1840.,  1010.,  2104.,  2240.,  2376.,  1262.,  2576.,  2744.,  2912.,  1514.,   903.,   941.,  1980.,  2064.,  2148.,  1139.,  2360.,  2460.,  2560.,  1337.,  2740.,  2856.,  2972.,  1535.,  1362.,  1470.,  1744.,  1976.,  2208.,  1754.,  2024.,  2288.,  2552.,  2038.,  2304.,  2600.,  2896.,  2322.,   902.,  1010.,  1896.,  2128.,  2360.,  1150.,  2144.,  2408.,  2672.,  1290.,  2392.,  2688.,  2984.,  1430.,  1658.,  1766.,  3520.,  3752.,  3984.,  2018.,  3992.,  4256.,  4520.,  2270.,  4464.,  4760.,  5056.,  2522.,  1663.,  1733.,  3500.,  3648.,  3796.,  1931.,  3880.,  4044.,  4208.,  2129.,  4260.,  4440.,  4620.,  2327.,  2153.,  2223.,  2296.,  2444.,  2592.,  2477.,  2532.,  2696.,  2860.,  2731.,  2768.,  2948.,  3128.,  2985.,   995.,  1097.,  2052.,  2264.,  2476.,  1183.,  2208.,  2436.,  2664.,  1269.,  2364.,  2608.,  2852.,  1355.,  1709.,  1811.,  3536.,  3748.,  3960.,  1953.,  3804.,  4032.,  4260.,  2095.,  4072.,  4316.,  4560.,  2237.,  2423.,  2525.,  5020.,  5232.,  5444.,  2723.,  5400.,  5628.,  5856.,  2921.,  5780.,  6024.,  6268.,  3119.,  3506.,  3742.,  3984.,  4472.,  4960.,  4026.,  4264.,  4784.,  5304.,  4310.,  4544.,  5096.,  5648.,  4594.,  1894.,  2130.,  3880.,  4368.,  4856.,  2270.,  4128.,  4648.,  5168.,  2410.,  4376.,  4928.,  5480.,  2550.,  3546.,  3782.,  7296.,  7784.,  8272.,  4034.,  7768.,  8288.,  8808.,  4286.,  8240.,  8792.,  9344.,  4538.,  3183.,  3317.,  6540.,  6816.,  7092.,  3515.,  6920.,  7212.,  7504.,  3713.,  7300.,  7608.,  7916.,  3911.,  4578.,  4878.,  5104.,  5720.,  6336.,  5162.,  5384.,  6032.,  6680.,  5446.,  5664.,  6344.,  7024.,  5730.,  2390.,  2690.,  4872.,  5488.,  6104.,  2830.,  5120.,  5768.,  6416.,  2970.,  5368.,  6048.,  6728.,  3110.,  4490.,  4790.,  9184.,  9800., 10416.,  5042.,  9656., 10304., 10952.,  5294., 10128., 10808., 11488.,  5546.,  3943.,  4109.,  8060.,  8400.,  8740.,  4307.,  8440.,  8796.,  9152.,  4505.,  8820.,  9192.,  9564.,  4703.,  5105.,  5271.,  5128.,  5468.,  5808.,  5525.,  5364.,  5720.,  6076.,  5779.,  5600.,  5972.,  6344.,  6033.,  1931.,  2129.,  3924.,  4328.,  4732.,  2215.,  4080.,  4500.,  4920.,  2301.,  4236.,  4672.,  5108.,  2387.,  3317.,  3515.,  6752.,  7156.,  7560.,  3657.,  7020.,  7440.,  7860.,  3799.,  7288.,  7724.,  8160.,  3941.,  4703.,  4901.,  9580.,  9984., 10388.,  5099.,  9960., 10380., 10800.,  5297., 10340., 10776., 11212.,  5495.,  6722.,  7150.,  7344.,  8216.,  9088.,  7434.,  7624.,  8528.,  9432.,  7718.,  7904.,  8840.,  9776.,  8002.,  3382.,  3810.,  6856.,  7728.,  8600.,  3950.,  7104.,  8008.,  8912.,  4090.,  7352.,  8288.,  9224.,  4230.,  6378.,  6806., 12960., 13832., 14704.,  7058., 13432., 14336., 15240.,  7310., 13904., 14840., 15776.,  7562.,  5463.,  5693., 11100., 11568., 12036.,  5891., 11480., 11964., 12448.,  6089., 11860., 12360., 12860.,  6287.,  7090.,  7326.,  7056.,  7544.,  8032.,  7610.,  7336.,  7856.,  8376.,  7894.,  7616.,  8168.,  8720.,  8178.,  1382.,  1618.,  2856.,  3344.,  3832.,  1758.,  3104.,  3624.,  4144.,  1898.,  3352.,  3904.,  4456.,  2038.,  3034.,  3270.,  6272.,  6760.,  7248.,  3522.,  6744.,  7264.,  7784.,  3774.,  7216.,  7768.,  8320.,  4026.,   143.,   149.,   460.,   480.,   500.,   347.,   840.,   876.,   912.,   545.,  1220.,  1272.,  1324.,   743.,   185.,   191.,   408.,   428.,   448.,   445.,   644.,   680.,   716.,   699.,   880.,   932.,   984.,   953.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x14x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    40.,    60.,    80.,    53.,    67.,    81.,    95.,     0.,     0.,     0.,    47.,    53.,    59.,    65.,   180.,   200.,   220.,   151.,   165.,   179.,   193.,     0.,     0.,     0.,    89.,    95.,   101.,   107.,   320.,   340.,   360.,   249.,   263.,   277.,   291.,     0.,     0.,     0.,   131.,   137.,   143.,   149.,   460.,   480.,   500.,   347.,   361.,   375.,   389.,     0.,     0.,     0.,   190.,   218.,   246.,   274.,   728.,   800.,   872.,   558.,   602.,   646.,   690.,     0.,     0.,     0.,   386.,   414.,   442.,   470.,  1232.,  1304.,  1376.,   866.,   910.,   954.,   998.,     0.,     0.,     0.,   582.,   610.,   638.,   666.,  1736.,  1808.,  1880.,  1174.,  1218.,  1262.,  1306.,     0.,     0.,     0.,   479.,   501.,   523.,   545.,  1220.,  1272.,  1324.,   743.,   773.,   803.,   833.,     0.,     0.,     0.,   633.,   655.,   677.,   699.,  1584.,  1636.,  1688.,   953.,   983.,  1013.,  1043.,     0.,     0.,     0.,   787.,   809.,   831.,   853.,  1948.,  2000.,  2052.,  1163.,  1193.,  1223.,  1253.,     0.,     0.,     0.,   941.,   963.,   985.,  1007.,  2312.,  2364.,  2416.,  1373.,  1403.,  1433.,  1463.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    29.,    67.,   105.,   143.,   216.,   300.,   384.,   173.,   219.,   265.,   311.,     0.,     0.,     0.,   295.,   333.,   371.,   409.,   804.,   888.,   972.,   495.,   541.,   587.,   633.,     0.,     0.,     0.,   561.,   599.,   637.,   675.,  1392.,  1476.,  1560.,   817.,   863.,   909.,   955.,     0.,     0.,     0.,   827.,   865.,   903.,   941.,  1980.,  2064.,  2148.,  1139.,  1185.,  1231.,  1277.,     0.,     0.,     0.,  1134.,  1226.,  1318.,  1410.,  2872.,  3072.,  3272.,  1694.,  1802.,  1910.,  2018.,     0.,     0.,     0.,  1778.,  1870.,  1962.,  2054.,  4272.,  4472.,  4672.,  2450.,  2558.,  2666.,  2774.,     0.,     0.,     0.,  2422.,  2514.,  2606.,  2698.,  5672.,  5872.,  6072.,  3206.,  3314.,  3422.,  3530.,     0.,     0.,     0.,  1175.,  1229.,  1283.,  1337.,  2740.,  2856.,  2972.,  1535.,  1597.,  1659.,  1721.,     0.,     0.,     0.,  1553.,  1607.,  1661.,  1715.,  3552.,  3668.,  3784.,  1969.,  2031.,  2093.,  2155.,     0.,     0.,     0.,  1931.,  1985.,  2039.,  2093.,  4364.,  4480.,  4596.,  2403.,  2465.,  2527.,  2589.,     0.,     0.,     0.,  2309.,  2363.,  2417.,  2471.,  5176.,  5292.,  5408.,  2837.,  2899.,  2961.,  3023.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    53.,   123.,   193.,   263.,   392.,   540.,   688.,   293.,   371.,   449.,   527.,     0.,     0.,     0.,   543.,   613.,   683.,   753.,  1428.,  1576.,  1724.,   839.,   917.,   995.,  1073.,     0.,     0.,     0.,  1033.,  1103.,  1173.,  1243.,  2464.,  2612.,  2760.,  1385.,  1463.,  1541.,  1619.,     0.,     0.,     0.,  1523.,  1593.,  1663.,  1733.,  3500.,  3648.,  3796.,  1931.,  2009.,  2087.,  2165.,     0.,     0.,     0.,  2078.,  2234.,  2390.,  2546.,  5016.,  5344.,  5672.,  2830.,  3002.,  3174.,  3346.,     0.,     0.,     0.,  3170.,  3326.,  3482.,  3638.,  7312.,  7640.,  7968.,  4034.,  4206.,  4378.,  4550.,     0.,     0.,     0.,  4262.,  4418.,  4574.,  4730.,  9608.,  9936., 10264.,  5238.,  5410.,  5582.,  5754.,     0.,     0.,     0.,  1871.,  1957.,  2043.,  2129.,  4260.,  4440.,  4620.,  2327.,  2421.,  2515.,  2609.,     0.,     0.,     0.,  2473.,  2559.,  2645.,  2731.,  5520.,  5700.,  5880.,  2985.,  3079.,  3173.,  3267.,     0.,     0.,     0.,  3075.,  3161.,  3247.,  3333.,  6780.,  6960.,  7140.,  3643.,  3737.,  3831.,  3925.,     0.,     0.,     0.,  3677.,  3763.,  3849.,  3935.,  8040.,  8220.,  8400.,  4301.,  4395.,  4489.,  4583.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x14x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  70.,  110.,  948.,  260.,  404.,  278., 1668.,  596.,  868.,  446., 2388.,  932., 1332.,  614.,   30.,   70.,  804.,  948.,  260.,  174., 1396., 1668.,  596.,  278., 1988., 2388.,  932.,  382.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150., 1052., 1388., 2120., 2920., 3720., 2108., 2792., 3848., 4904., 2828., 3464., 4776., 6088., 3548.,  716., 1052., 4520., 2120., 2920., 1644., 5960., 2792., 3848., 2236., 7400., 3464., 4776., 2828.,  380.,  716., 3720., 4520., 2120., 1180., 4904., 5960., 2792., 1644., 6088., 7400., 3464., 2108., 2262.,  190., 2516., 3172., 3828.,  230., 2980., 3764., 4548.,  270., 3444., 4356., 5268.,  310., 2076., 2412., 2120., 2920., 3720., 3132., 2792., 3848., 4904., 3852., 3464., 4776., 6088., 4572., 1740., 2076., 4520., 2120., 2920., 2668., 5960., 2792., 3848., 3260., 7400., 3464., 4776., 3852., 1404., 1740., 3720., 4520., 2120., 2204., 4904., 5960., 2792., 2668., 6088., 7400., 3464., 3132.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150.,  270.,  310.,  516.,  660.,  804.,  798.,  852., 1124., 1396., 1286., 1188., 1588., 1988., 1774.,  486.,  782., 3828., 1604., 2260.,  950., 4548., 1940., 2724., 1118., 5268., 2276., 3188., 1286.,  190.,  486., 3172., 3828., 1604.,  590., 3764., 4548., 1940.,  694., 4356., 5268., 2276.,  798., 2262.,  190., 2516., 3172., 3828.,  230., 2980., 3764., 4548.,  270., 3444., 4356., 5268.,  310., 2076., 2412., 2120., 2920., 3720., 3132., 2792., 3848., 4904., 3852., 3464., 4776., 6088., 4572., 1740., 2076., 4520., 2120., 2920., 2668., 5960., 2792., 3848., 3260., 7400., 3464., 4776., 3852., 1404., 1740., 3720., 4520., 2120., 2204., 4904., 5960., 2792., 2668., 6088., 7400., 3464., 3132.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150., 1052., 1388., 2120., 2920., 3720., 2108., 2792., 3848., 4904., 2828., 3464., 4776., 6088., 3548.,  716., 1052., 4520., 2120., 2920., 1644., 5960., 2792., 3848., 2236., 7400., 3464., 4776., 2828.,  380.,  716., 3720., 4520., 2120., 1180., 4904., 5960., 2792., 1644., 6088., 7400., 3464., 2108., 2262.,  190., 2516., 3172., 3828.,  230., 2980., 3764., 4548.,  270., 3444., 4356., 5268.,  310., 1966., 2262., 1860., 2516., 3172., 2750., 2196., 2980., 3764., 3238., 2532., 3444., 4356., 3726.,   70.,  110.,  948.,  260.,  404.,  278., 1668.,  596.,  868.,  446., 2388.,  932., 1332.,  614.,   30.,   70.,  804.,  948.,  260.,  174., 1396., 1668.,  596.,  278., 1988., 2388.,  932.,  382.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150., 1052., 1388., 2120., 2920., 3720., 2108., 2792., 3848., 4904., 2828., 3464., 4776., 6088., 3548.,  716., 1052., 4520., 2120., 2920., 1644., 5960., 2792., 3848., 2236., 7400., 3464., 4776., 2828.,  380.,  716., 3720., 4520., 2120., 1180., 4904., 5960., 2792., 1644., 6088., 7400., 3464., 2108., 2262.,  190., 2516., 3172., 3828.,  230., 2980., 3764., 4548.,  270., 3444., 4356., 5268.,  310., 2076., 2412., 2120., 2920., 3720., 3132., 2792., 3848., 4904., 3852., 3464., 4776., 6088., 4572., 1740., 2076., 4520., 2120., 2920., 2668., 5960., 2792., 3848., 3260., 7400., 3464., 4776., 3852., 1404., 1740., 3720., 4520., 2120., 2204., 4904., 5960., 2792., 2668., 6088., 7400., 3464., 3132.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150.,  270.,  310.,  516.,  660.,  804.,  798.,  852., 1124., 1396., 1286., 1188., 1588., 1988., 1774.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x14x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   260.,   404.,   548.,   382.,   486.,   590.,   694.,     0.,     0.,     0.,   310.,   350.,   390.,   430.,  1268.,  1412.,  1556.,  1110.,  1214.,  1318.,  1422.,     0.,     0.,     0.,   590.,   630.,    30.,    70.,  1636.,  1780.,   260.,   174.,   278.,   382.,   486.,     0.,     0.,     0.,   230.,   270.,   310.,   350.,   980.,  1124.,  1268.,   902.,  1006.,  1110.,  1214.,     0.,     0.,     0.,   620.,   828.,  1036.,  1244.,  2280.,  2824.,  3368.,  2476.,  1148.,  1484.,  1820.,     0.,     0.,     0.,  1436.,  1644.,  1852.,  2060.,  4424.,  4968.,  5512.,  3164.,  3500.,  3836.,  4172.,     0.,     0.,     0.,  2892.,  3100.,   620.,   828.,  5544.,  6088.,  2280.,  1804.,  2140.,  2476.,  1148.,     0.,     0.,     0.,   950.,  1118.,  1286.,  1454.,  2932.,  3332.,  3732.,  2006.,  2238.,  2470.,  2702.,     0.,     0.,     0.,  2126.,  2294.,  2462.,  2630.,  3044.,  3444.,  3844.,  3630.,   150.,   382.,   614.,     0.,     0.,     0.,   614.,   782.,   950.,  1118.,  2132.,  2532.,  2932.,  1542.,  1774.,  2006.,  2238.,     0.,     0.,     0.,  1790.,  1958.,  2126.,  2294.,  4932.,  5332.,  3044.,  3166.,  3398.,  3630.,   150.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1604.,  2260.,  2916.,  1310.,  1670.,  2030.,  2390.,     0.,     0.,     0.,  2262.,  2558.,  2854.,  3150.,  6196.,  6852.,  7508.,  3830.,  4190.,  4550.,  4910.,     0.,     0.,     0.,  4334.,  4630.,   190.,   486.,  6052.,  6708.,  1604.,   590.,   950.,  1310.,  1670.,     0.,     0.,     0.,  1670.,  1966.,  2262.,  2558.,  4884.,  5540.,  6196.,  3110.,  3470.,  3830.,  4190.,     0.,     0.,     0.,  4012.,  4732.,  5452.,  6172.,  7016.,  8584., 10152.,  7404.,  2492.,  3340.,  4188.,     0.,     0.,     0.,  4316.,  5036.,  5756.,  6476., 12232., 13800., 15368.,  7580.,  8428.,  9276., 10124.,     0.,     0.,     0.,  9356., 10076.,  4012.,  4732., 16424., 17992.,  7016.,  5708.,  6556.,  7404.,  2492.,     0.,     0.,     0.,  2390.,  2814.,  3238.,  3662.,  6836.,  7748.,  8660.,  4214.,  4702.,  5190.,  5678.,     0.,     0.,     0.,  5358.,  5782.,  6206.,  6630.,  6436.,  7348.,  8260.,  7630.,   310.,   798.,  1286.,     0.,     0.,     0.,  1542.,  1966.,  2390.,  2814.,  5012.,  5924.,  6836.,  3238.,  3726.,  4214.,  4702.,     0.,     0.,     0.,  4510.,  4934.,  5358.,  5782., 11396., 12308.,  6436.,  6654.,  7142.,  7630.,   310.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   350.,   902.,  1454.,  2006.,  2948.,  4116.,  5284.,  2238.,  2854.,  3470.,  4086.,     0.,     0.,     0.,  4214.,  4766.,  5318.,  5870., 11124., 12292., 13460.,  6550.,  7166.,  7782.,  8398.,     0.,     0.,     0.,  8078.,  8630.,   350.,   902., 10468., 11636.,  2948.,  1006.,  1622.,  2238.,  2854.,     0.,     0.,     0.,  3110.,  3662.,  4214.,  4766.,  8788.,  9956., 11124.,  5318.,  5934.,  6550.,  7166.,     0.,     0.,     0.,  7404.,  8636.,  9868., 11100., 11752., 14344., 16936., 12332.,  3836.,  5196.,  6556.,     0.,     0.,     0.,  7196.,  8428.,  9660., 10892., 20040., 22632., 25224., 11996., 13356., 14716., 16076.,     0.,     0.,     0., 15820., 17052.,  7404.,  8636., 27304., 29896., 11752.,  9612., 10972., 12332.,  3836.,     0.,     0.,     0.,  3830.,  4510.,  5190.,  5870., 10740., 12164., 13588.,  6422.,  7166.,  7910.,  8654.,     0.,     0.,     0.,  8590.,  9270.,  9950., 10630.,  9828., 11252., 12676., 11630.,   470.,  1214.,  1958.,     0.,     0.,     0.,  2470.,  3150.,  3830.,  4510.,  7892.,  9316., 10740.,  4934.,  5678.,  6422.,  7166.,     0.,     0.,     0.,  7230.,  7910.,  8590.,  9270., 17860., 19284.,  9828., 10142., 10886., 11630.,   470.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x14x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  19.,   20.,   21.,   22.,   53.,   56.,   59.,   62.,   65.,   68.,   42.,   44.,   91.,   96.,  101.,  106.,  111.,  116.,   63.,   66.,  129.,  136.,  143.,  150.,  157.,  164.,   84.,   88.,   33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,  161.,  166.,  171.,  176.,  181.,  186.,  105.,  108.,  227.,  234.,  241.,  248.,  255.,  262.,  140.,  144.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  231.,  236.,  241.,  246.,  251.,  256.,  147.,  150.,  325.,  332.,  339.,  346.,  353.,  360.,  196.,  200.,   86.,   92.,   98.,  104.,  230.,  244.,  258.,  272.,  286.,  300.,  168.,  176.,  362.,  380.,  398.,  416.,  434.,  452.,  238.,  248.,  494.,  516.,  538.,  560.,  582.,  604.,  308.,  320.,  170.,  176.,  182.,  188.,  426.,  440.,  454.,  468.,  482.,  496.,  280.,  288.,  614.,  632.,  650.,  668.,  686.,  704.,  378.,  388.,  802.,  824.,  846.,  868.,  890.,  912.,  476.,  488.,  254.,  260.,  266.,  272.,  622.,  636.,  650.,  664.,  678.,  692.,  392.,  400.,  866.,  884.,  902.,  920.,  938.,  956.,  518.,  528., 1110., 1132., 1154., 1176., 1198., 1220.,  644.,  656.,  235.,  240.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  607.,  620.,  633.,  646.,  659.,  672.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  350.,  364.,  378.,  392.,  758.,  788.,  818.,  848.,  878.,  908.,  448.,  464.,  890.,  924.,  958.,  992., 1026., 1060.,  518.,  536., 1022., 1060., 1098., 1136., 1174., 1212.,  588.,  608.,  546.,  560.,  574.,  588., 1178., 1208., 1238., 1268., 1298., 1328.,  672.,  688., 1366., 1400., 1434., 1468., 1502., 1536.,  770.,  788., 1554., 1592., 1630., 1668., 1706., 1744.,  868.,  888.,  742.,  756.,  770.,  784., 1598., 1628., 1658., 1688., 1718., 1748.,  896.,  912., 1842., 1876., 1910., 1944., 1978., 2012., 1022., 1040., 2086., 2124., 2162., 2200., 2238., 2276., 1148., 1168.,  423.,  432.,  441.,  450.,  889.,  908.,  927.,  946.,  965.,  984.,  490.,  500.,  983., 1004., 1025., 1046., 1067., 1088.,  539.,  550., 1077., 1100., 1123., 1146., 1169., 1192.,  588.,  600.,  549.,  558.,  567.,  576., 1155., 1174., 1193., 1212., 1231., 1250.,  630.,  640., 1277., 1298., 1319., 1340., 1361., 1382.,  693.,  704., 1399., 1422., 1445., 1468., 1491., 1514.,  756.,  768.,  247.,  260.,  273.,  286.,  509.,  536.,  563.,  590.,  617.,  644.,  294.,  308.,  547.,  576.,  605.,  634.,  663.,  692.,  315.,  330.,  585.,  616.,  647.,  678.,  709.,  740.,  336.,  352.,  429.,  442.,  455.,  468.,  887.,  914.,  941.,  968.,  995., 1022.,  490.,  504.,  953.,  982., 1011., 1040., 1069., 1098.,  525.,  540., 1019., 1050., 1081., 1112., 1143., 1174.,  560.,  576.,  611.,  624.,  637.,  650., 1265., 1292., 1319., 1346., 1373., 1400.,  686.,  700., 1359., 1388., 1417., 1446., 1475., 1504.,  735.,  750., 1453., 1484., 1515., 1546., 1577., 1608.,  784.,  800.,  878.,  908.,  938.,  968., 1814., 1876., 1938., 2000., 2062., 2124., 1008., 1040., 1946., 2012., 2078., 2144., 2210., 2276., 1078., 1112., 2078., 2148., 2218., 2288., 2358., 2428., 1148., 1184., 1298., 1328., 1358., 1388., 2682., 2744., 2806., 2868., 2930., 2992., 1456., 1488., 2870., 2936., 3002., 3068., 3134., 3200., 1554., 1588., 3058., 3128., 3198., 3268., 3338., 3408., 1652., 1688., 1718., 1748., 1778., 1808., 3550., 3612., 3674., 3736., 3798., 3860., 1904., 1936., 3794., 3860., 3926., 3992., 4058., 4124., 2030., 2064., 4038., 4108., 4178., 4248., 4318., 4388., 2156., 2192.,  799.,  816.,  833.,  850., 1641., 1676., 1711., 1746., 1781., 1816.,  882.,  900., 1735., 1772., 1809., 1846., 1883., 1920.,  931.,  950., 1829., 1868., 1907., 1946., 1985., 2024.,  980., 1000., 1142., 1180., 1218., 1256., 2342., 2420., 2498., 2576., 2654., 2732., 1288., 1328., 2474., 2556., 2638., 2720., 2802., 2884., 1358., 1400., 2606., 2692., 2778., 2864., 2950., 3036., 1428., 1472., 1674., 1712., 1750., 1788., 3434., 3512., 3590., 3668., 3746., 3824., 1848., 1888., 3622., 3704., 3786., 3868., 3950., 4032., 1946., 1988., 3810., 3896., 3982., 4068., 4154., 4240., 2044., 2088., 2206., 2244., 2282., 2320., 4526., 4604., 4682., 4760., 4838., 4916., 2408., 2448., 4770., 4852., 4934., 5016., 5098., 5180., 2534., 2576., 5014., 5100., 5186., 5272., 5358., 5444., 2660., 2704.,  987., 1008., 1029., 1050., 2017., 2060., 2103., 2146., 2189., 2232., 1078., 1100., 2111., 2156., 2201., 2246., 2291., 2336., 1127., 1150., 2205., 2252., 2299., 2346., 2393., 2440., 1176., 1200., 1281., 1302., 1323., 1344., 2619., 2662., 2705., 2748., 2791., 2834., 1386., 1408., 2741., 2786., 2831., 2876., 2921., 2966., 1449., 1472., 2863., 2910., 2957., 3004., 3051., 3098., 1512., 1536.,  475.,  500.,  525.,  550.,  965., 1016., 1067., 1118., 1169., 1220.,  546.,  572., 1003., 1056., 1109., 1162., 1215., 1268.,  567.,  594., 1041., 1096., 1151., 1206., 1261., 1316.,  588.,  616.,  825.,  850.,  875.,  900., 1679., 1730., 1781., 1832., 1883., 1934.,  910.,  936., 1745., 1798., 1851., 1904., 1957., 2010.,  945.,  972., 1811., 1866., 1921., 1976., 2031., 2086.,  980., 1008., 1175., 1200., 1225., 1250., 2393., 2444., 2495., 2546., 2597., 2648., 1274., 1300., 2487., 2540., 2593., 2646., 2699., 2752., 1323., 1350., 2581., 2636., 2691., 2746., 2801., 2856., 1372., 1400., 1670., 1724., 1778., 1832., 3398., 3508., 3618., 3728., 3838., 3948., 1848., 1904., 3530., 3644., 3758., 3872., 3986., 4100., 1918., 1976., 3662., 3780., 3898., 4016., 4134., 4252., 1988., 2048., 2426., 2480., 2534., 2588., 4938., 5048., 5158., 5268., 5378., 5488., 2632., 2688., 5126., 5240., 5354., 5468., 5582., 5696., 2730., 2788., 5314., 5432., 5550., 5668., 5786., 5904., 2828., 2888., 3182., 3236., 3290., 3344., 6478., 6588., 6698., 6808., 6918., 7028., 3416., 3472., 6722., 6836., 6950., 7064., 7178., 7292., 3542., 3600., 6966., 7084., 7202., 7320., 7438., 7556., 3668., 3728., 1363., 1392., 1421., 1450., 2769., 2828., 2887., 2946., 3005., 3064., 1470., 1500., 2863., 2924., 2985., 3046., 3107., 3168., 1519., 1550., 2957., 3020., 3083., 3146., 3209., 3272., 1568., 1600., 1934., 1996., 2058., 2120., 3926., 4052., 4178., 4304., 4430., 4556., 2128., 2192., 4058., 4188., 4318., 4448., 4578., 4708., 2198., 2264., 4190., 4324., 4458., 4592., 4726., 4860., 2268., 2336., 2802., 2864., 2926., 2988., 5690., 5816., 5942., 6068., 6194., 6320., 3024., 3088., 5878., 6008., 6138., 6268., 6398., 6528., 3122., 3188., 6066., 6200., 6334., 6468., 6602., 6736., 3220., 3288., 3670., 3732., 3794., 3856., 7454., 7580., 7706., 7832., 7958., 8084., 3920., 3984., 7698., 7828., 7958., 8088., 8218., 8348., 4046., 4112., 7942., 8076., 8210., 8344., 8478., 8612., 4172., 4240., 1551., 1584., 1617., 1650., 3145., 3212., 3279., 3346., 3413., 3480., 1666., 1700., 3239., 3308., 3377., 3446., 3515., 3584., 1715., 1750., 3333., 3404., 3475., 3546., 3617., 3688., 1764., 1800., 2013., 2046., 2079., 2112., 4083., 4150., 4217., 4284., 4351., 4418., 2142., 2176., 4205., 4274., 4343., 4412., 4481., 4550., 2205., 2240., 4327., 4398., 4469., 4540., 4611., 4682., 2268., 2304.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x14x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,   11.,   14.,   17.,   20.,   23.,   26.,   14.,   16.,   18.,   20.,   22.,   24.,   26.,   28.,    0.,    0.,    0.,    0.,    0.,    0.,   15.,   16.,   17.,   18.,   19.,   20.,   21.,   22.,   53.,   56.,   59.,   62.,   65.,   68.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,    0.,    0.,    0.,    0.,    0.,    0.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,   74.,   76.,   78.,   80.,   82.,   84.,    0.,    0.,    0.,    0.,    0.,    0.,   43.,   44.,   45.,   46.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,    0.,    0.,    0.,    0.,    0.,    0.,   60.,   64.,   68.,   72.,   76.,   80.,   84.,   88.,  210.,  220.,  230.,  240.,  250.,  260.,  154.,  160.,  166.,  172.,  178.,  184.,  190.,  196.,    0.,    0.,    0.,    0.,    0.,    0.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  350.,  360.,  370.,  380.,  390.,  400.,  238.,  244.,  250.,  256.,  262.,  268.,  274.,  280.,    0.,    0.,    0.,    0.,    0.,    0.,  172.,  176.,  180.,  184.,  188.,  192.,  196.,  200.,  490.,  500.,  510.,  520.,  530.,  540.,  322.,  328.,  334.,  340.,  346.,  352.,  358.,  364.,    0.,    0.,    0.,    0.,    0.,    0.,  129.,  132.,  135.,  138.,  141.,  144.,  147.,  150.,  325.,  332.,  339.,  346.,  353.,  360.,  196.,  200.,  204.,  208.,  212.,  216.,  220.,  224.,    0.,    0.,    0.,    0.,    0.,    0.,  171.,  174.,  177.,  180.,  183.,  186.,  189.,  192.,  423.,  430.,  437.,  444.,  451.,  458.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,    0.,    0.,    0.,    0.,    0.,    0.,  213.,  216.,  219.,  222.,  225.,  228.,  231.,  234.,  521.,  528.,  535.,  542.,  549.,  556.,  308.,  312.,  316.,  320.,  324.,  328.,  332.,  336.,    0.,    0.,    0.,    0.,    0.,    0.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  619.,  626.,  633.,  640.,  647.,  654.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    5.,   10.,   15.,   20.,   25.,   30.,   35.,   40.,   51.,   62.,   73.,   84.,   95.,  106.,   42.,   48.,   54.,   60.,   66.,   72.,   78.,   84.,    0.,    0.,    0.,    0.,    0.,    0.,   75.,   80.,   85.,   90.,   95.,  100.,  105.,  110.,  205.,  216.,  227.,  238.,  249.,  260.,  126.,  132.,  138.,  144.,  150.,  156.,  162.,  168.,    0.,    0.,    0.,    0.,    0.,    0.,  145.,  150.,  155.,  160.,  165.,  170.,  175.,  180.,  359.,  370.,  381.,  392.,  403.,  414.,  210.,  216.,  222.,  228.,  234.,  240.,  246.,  252.,    0.,    0.,    0.,    0.,    0.,    0.,  215.,  220.,  225.,  230.,  235.,  240.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  306.,  312.,  318.,  324.,  330.,  336.,    0.,    0.,    0.,    0.,    0.,    0.,  292.,  304.,  316.,  328.,  340.,  352.,  364.,  376.,  738.,  764.,  790.,  816.,  842.,  868.,  434.,  448.,  462.,  476.,  490.,  504.,  518.,  532.,    0.,    0.,    0.,    0.,    0.,    0.,  460.,  472.,  484.,  496.,  508.,  520.,  532.,  544., 1102., 1128., 1154., 1180., 1206., 1232.,  630.,  644.,  658.,  672.,  686.,  700.,  714.,  728.,    0.,    0.,    0.,    0.,    0.,    0.,  628.,  640.,  652.,  664.,  676.,  688.,  700.,  712., 1466., 1492., 1518., 1544., 1570., 1596.,  826.,  840.,  854.,  868.,  882.,  896.,  910.,  924.,    0.,    0.,    0.,    0.,    0.,    0.,  301.,  308.,  315.,  322.,  329.,  336.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  408.,  416.,  424.,  432.,  440.,  448.,    0.,    0.,    0.,    0.,    0.,    0.,  399.,  406.,  413.,  420.,  427.,  434.,  441.,  448.,  911.,  926.,  941.,  956.,  971.,  986.,  504.,  512.,  520.,  528.,  536.,  544.,  552.,  560.,    0.,    0.,    0.,    0.,    0.,    0.,  497.,  504.,  511.,  518.,  525.,  532.,  539.,  546., 1121., 1136., 1151., 1166., 1181., 1196.,  616.,  624.,  632.,  640.,  648.,  656.,  664.,  672.,    0.,    0.,    0.,    0.,    0.,    0.,  595.,  602.,  609.,  616.,  623.,  630.,  637.,  644., 1331., 1346., 1361., 1376., 1391., 1406.,  728.,  736.,  744.,  752.,  760.,  768.,  776.,  784.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    9.,   18.,   27.,   36.,   45.,   54.,   63.,   72.,   91.,  110.,  129.,  148.,  167.,  186.,   70.,   80.,   90.,  100.,  110.,  120.,  130.,  140.,    0.,    0.,    0.,    0.,    0.,    0.,  135.,  144.,  153.,  162.,  171.,  180.,  189.,  198.,  357.,  376.,  395.,  414.,  433.,  452.,  210.,  220.,  230.,  240.,  250.,  260.,  270.,  280.,    0.,    0.,    0.,    0.,    0.,    0.,  261.,  270.,  279.,  288.,  297.,  306.,  315.,  324.,  623.,  642.,  661.,  680.,  699.,  718.,  350.,  360.,  370.,  380.,  390.,  400.,  410.,  420.,    0.,    0.,    0.,    0.,    0.,    0.,  387.,  396.,  405.,  414.,  423.,  432.,  441.,  450.,  889.,  908.,  927.,  946.,  965.,  984.,  490.,  500.,  510.,  520.,  530.,  540.,  550.,  560.,    0.,    0.,    0.,    0.,    0.,    0.,  524.,  544.,  564.,  584.,  604.,  624.,  644.,  664., 1266., 1308., 1350., 1392., 1434., 1476.,  714.,  736.,  758.,  780.,  802.,  824.,  846.,  868.,    0.,    0.,    0.,    0.,    0.,    0.,  804.,  824.,  844.,  864.,  884.,  904.,  924.,  944., 1854., 1896., 1938., 1980., 2022., 2064., 1022., 1044., 1066., 1088., 1110., 1132., 1154., 1176.,    0.,    0.,    0.,    0.,    0.,    0., 1084., 1104., 1124., 1144., 1164., 1184., 1204., 1224., 2442., 2484., 2526., 2568., 2610., 2652., 1330., 1352., 1374., 1396., 1418., 1440., 1462., 1484.,    0.,    0.,    0.,    0.,    0.,    0.,  473.,  484.,  495.,  506.,  517.,  528.,  539.,  550., 1077., 1100., 1123., 1146., 1169., 1192.,  588.,  600.,  612.,  624.,  636.,  648.,  660.,  672.,    0.,    0.,    0.,    0.,    0.,    0.,  627.,  638.,  649.,  660.,  671.,  682.,  693.,  704., 1399., 1422., 1445., 1468., 1491., 1514.,  756.,  768.,  780.,  792.,  804.,  816.,  828.,  840.,    0.,    0.,    0.,    0.,    0.,    0.,  781.,  792.,  803.,  814.,  825.,  836.,  847.,  858., 1721., 1744., 1767., 1790., 1813., 1836.,  924.,  936.,  948.,  960.,  972.,  984.,  996., 1008.,    0.,    0.,    0.,    0.,    0.,    0.,  935.,  946.,  957.,  968.,  979.,  990., 1001., 1012., 2043., 2066., 2089., 2112., 2135., 2158., 1092., 1104., 1116., 1128., 1140., 1152., 1164., 1176.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x14x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  113.,   119.,   125.,   131.,   344.,   364.,   384.,   404.,   424.,   444.,   291.,   305.,   644.,   680.,   716.,   752.,   788.,   824.,   457.,   479.,   944.,   996.,  1048.,  1100.,  1152.,  1204.,   623.,   653.,     5.,    11.,    17.,    23.,   432.,   452.,   472.,   492.,    64.,    84.,    39.,    53.,   700.,   736.,   772.,   808.,   140.,   176.,    61.,    83.,   968.,  1020.,  1072.,  1124.,   216.,   268.,    83.,   113.,    89.,    95.,   101.,   107.,   264.,   284.,   304.,   324.,   344.,   364.,   235.,   249.,   500.,   536.,   572.,   608.,   644.,   680.,   369.,   391.,   736.,   788.,   840.,   892.,   944.,   996.,   503.,   533.,   354.,   398.,   442.,   486.,   720.,   824.,   928.,  1032.,  1136.,  1240.,   742.,   802.,  1000.,  1136.,  1272.,  1408.,  1544.,  1680.,  1042.,  1118.,  1280.,  1448.,  1616.,  1784.,  1952.,  2120.,  1342.,  1434.,   778.,   822.,   866.,   910.,  1728.,  1832.,  1936.,  2040.,  2144.,  2248.,  1134.,  1194.,  2200.,  2336.,  2472.,  2608.,  2744.,  2880.,  1402.,  1478.,  2672.,  2840.,  3008.,  3176.,  3344.,  3512.,  1670.,  1762.,   178.,   222.,   266.,   310.,  1968.,  2072.,  2176.,  2280.,   720.,   824.,   502.,   562.,  2632.,  2768.,  2904.,  3040.,  1000.,  1136.,   738.,   814.,  3296.,  3464.,  3632.,  3800.,  1280.,  1448.,   974.,  1066.,   561.,   599.,   637.,   675.,  1208.,  1292.,  1376.,  1460.,  1544.,  1628.,   771.,   817.,  1444.,  1544.,  1644.,  1744.,  1844.,  1944.,   905.,   959.,  1680.,  1796.,  1912.,  2028.,  2144.,  2260.,  1039.,  1101.,  1426.,  1534.,  1642.,  1750.,  1840.,  2072.,  2304.,  2536.,  2768.,  3000.,  1942.,  2066.,  2120.,  2384.,  2648.,  2912.,  3176.,  3440.,  2242.,  2382.,  2400.,  2696.,  2992.,  3288.,  3584.,  3880.,  2542.,  2698.,  1722.,  1830.,  1938.,  2046.,  3616.,  3848.,  4080.,  4312.,  4544.,  4776.,  2206.,  2330.,  4088.,  4352.,  4616.,  4880.,  5144.,  5408.,  2474.,  2614.,  4560.,  4856.,  5152.,  5448.,  5744.,  6040.,  2742.,  2898.,   994.,  1102.,  1210.,  1318.,  4624.,  4856.,  5088.,  5320.,  1840.,  2072.,  1446.,  1570.,  5288.,  5552.,  5816.,  6080.,  2120.,  2384.,  1682.,  1822.,  5952.,  6248.,  6544.,  6840.,  2400.,  2696.,  1918.,  2074.,  1033.,  1103.,  1173.,  1243.,  2152.,  2300.,  2448.,  2596.,  2744.,  2892.,  1307.,  1385.,  2388.,  2552.,  2716.,  2880.,  3044.,  3208.,  1441.,  1527.,  2624.,  2804.,  2984.,  3164.,  3344.,  3524.,  1575.,  1669.,  2013.,  2083.,  2153.,  2223.,  1984.,  2132.,  2280.,  2428.,  2576.,  2724.,  2399.,  2477.,  2188.,  2352.,  2516.,  2680.,  2844.,  3008.,  2645.,  2731.,  2392.,  2572.,  2752.,  2932.,  3112.,  3292.,  2891.,  2985.,  1913.,  2015.,  2117.,  2219.,  3944.,  4156.,  4368.,  4580.,  4792.,  5004.,  2283.,  2393.,  4244.,  4472.,  4700.,  4928.,  5156.,  5384.,  2449.,  2567.,  4544.,  4788.,  5032.,  5276.,  5520.,  5764.,  2615.,  2741.,    77.,   179.,   281.,   383.,  3648.,  3860.,  4072.,  4284.,   976.,  1188.,   303.,   413.,  3916.,  4144.,  4372.,  4600.,  1052.,  1280.,   325.,   443.,  4184.,  4428.,  4672.,  4916.,  1128.,  1372.,   347.,   473.,  1505.,  1607.,  1709.,  1811.,  3096.,  3308.,  3520.,  3732.,  3944.,  4156.,  1843.,  1953.,  3332.,  3560.,  3788.,  4016.,  4244.,  4472.,  1977.,  2095.,  3568.,  3812.,  4056.,  4300.,  4544.,  4788.,  2111.,  2237.,  3570.,  3806.,  4042.,  4278.,  4080.,  4568.,  5056.,  5544.,  6032.,  6520.,  4342.,  4594.,  4360.,  4880.,  5400.,  5920.,  6440.,  6960.,  4642.,  4910.,  4640.,  5192.,  5744.,  6296.,  6848.,  7400.,  4942.,  5226.,  3610.,  3846.,  4082.,  4318.,  7392.,  7880.,  8368.,  8856.,  9344.,  9832.,  4350.,  4602.,  7864.,  8384.,  8904.,  9424.,  9944., 10464.,  4618.,  4886.,  8336.,  8888.,  9440.,  9992., 10544., 11096.,  4886.,  5170.,  2626.,  2862.,  3098.,  3334.,  9936., 10424., 10912., 11400.,  4080.,  4568.,  3334.,  3586., 10600., 11120., 11640., 12160.,  4360.,  4880.,  3570.,  3838., 11264., 11816., 12368., 12920.,  4640.,  5192.,  3806.,  4090.,  1977.,  2111.,  2245.,  2379.,  4040.,  4316.,  4592.,  4868.,  5144.,  5420.,  2379.,  2521.,  4276.,  4568.,  4860.,  5152.,  5444.,  5736.,  2513.,  2663.,  4512.,  4820.,  5128.,  5436.,  5744.,  6052.,  2647.,  2805.,  4642.,  4942.,  5242.,  5542.,  5200.,  5816.,  6432.,  7048.,  7664.,  8280.,  5542.,  5858.,  5480.,  6128.,  6776.,  7424.,  8072.,  8720.,  5842.,  6174.,  5760.,  6440.,  7120.,  7800.,  8480.,  9160.,  6142.,  6490.,  4554.,  4854.,  5154.,  5454.,  9280.,  9896., 10512., 11128., 11744., 12360.,  5422.,  5738.,  9752., 10400., 11048., 11696., 12344., 12992.,  5690.,  6022., 10224., 10904., 11584., 12264., 12944., 13624.,  5958.,  6306.,  3442.,  3742.,  4042.,  4342., 12592., 13208., 13824., 14440.,  5200.,  5816.,  4278.,  4594., 13256., 13904., 14552., 15200.,  5480.,  6128.,  4514.,  4846., 13920., 14600., 15280., 15960.,  5760.,  6440.,  4750.,  5098.,  2449.,  2615.,  2781.,  2947.,  4984.,  5324.,  5664.,  6004.,  6344.,  6684.,  2915.,  3089.,  5220.,  5576.,  5932.,  6288.,  6644.,  7000.,  3049.,  3231.,  5456.,  5828.,  6200.,  6572.,  6944.,  7316.,  3183.,  3373.,  4773.,  4939.,  5105.,  5271.,  4432.,  4772.,  5112.,  5452.,  5792.,  6132.,  5351.,  5525.,  4636.,  4992.,  5348.,  5704.,  6060.,  6416.,  5597.,  5779.,  4840.,  5212.,  5584.,  5956.,  6328.,  6700.,  5843.,  6033.,  3713.,  3911.,  4109.,  4307.,  7544.,  7948.,  8352.,  8756.,  9160.,  9564.,  4275.,  4481.,  7844.,  8264.,  8684.,  9104.,  9524.,  9944.,  4441.,  4655.,  8144.,  8580.,  9016.,  9452.,  9888., 10324.,  4607.,  4829.,   149.,   347.,   545.,   743.,  6864.,  7268.,  7672.,  8076.,  1888.,  2292.,   567.,   773.,  7132.,  7552.,  7972.,  8392.,  1964.,  2384.,   589.,   803.,  7400.,  7836.,  8272.,  8708.,  2040.,  2476.,   611.,   833.,  2921.,  3119.,  3317.,  3515.,  5928.,  6332.,  6736.,  7140.,  7544.,  7948.,  3451.,  3657.,  6164.,  6584.,  7004.,  7424.,  7844.,  8264.,  3585.,  3799.,  6400.,  6836.,  7272.,  7708.,  8144.,  8580.,  3719.,  3941.,  6786.,  7214.,  7642.,  8070.,  7440.,  8312.,  9184., 10056., 10928., 11800.,  7942.,  8386.,  7720.,  8624.,  9528., 10432., 11336., 12240.,  8242.,  8702.,  8000.,  8936.,  9872., 10808., 11744., 12680.,  8542.,  9018.,  6442.,  6870.,  7298.,  7726., 13056., 13928., 14800., 15672., 16544., 17416.,  7566.,  8010., 13528., 14432., 15336., 16240., 17144., 18048.,  7834.,  8294., 14000., 14936., 15872., 16808., 17744., 18680.,  8102.,  8578.,  5074.,  5502.,  5930.,  6358., 17904., 18776., 19648., 20520.,  7440.,  8312.,  6166.,  6610., 18568., 19472., 20376., 21280.,  7720.,  8624.,  6402.,  6862., 19232., 20168., 21104., 22040.,  8000.,  8936.,  6638.,  7114.,  3393.,  3623.,  3853.,  4083.,  6872.,  7340.,  7808.,  8276.,  8744.,  9212.,  3987.,  4225.,  7108.,  7592.,  8076.,  8560.,  9044.,  9528.,  4121.,  4367.,  7344.,  7844.,  8344.,  8844.,  9344.,  9844.,  4255.,  4509.,  6642.,  6878.,  7114.,  7350.,  6128.,  6616.,  7104.,  7592.,  8080.,  8568.,  7414.,  7666.,  6408.,  6928.,  7448.,  7968.,  8488.,  9008.,  7714.,  7982.,  6688.,  7240.,  7792.,  8344.,  8896.,  9448.,  8014.,  8298.,  2586.,  2822.,  3058.,  3294.,  5344.,  5832.,  6320.,  6808.,  7296.,  7784.,  3326.,  3578.,  5816.,  6336.,  6856.,  7376.,  7896.,  8416.,  3594.,  3862.,  6288.,  6840.,  7392.,  7944.,  8496.,  9048.,  3862.,  4146.,  5698.,  5934.,  6170.,  6406., 11984., 12472., 12960., 13448.,  6128.,  6616.,  6406.,  6658., 12648., 13168., 13688., 14208.,  6408.,  6928.,  6642.,  6910., 13312., 13864., 14416., 14968.,  6688.,  7240.,  6878.,  7162.,    89.,    95.,   101.,   107.,   264.,   284.,   304.,   324.,   344.,   364.,   235.,   249.,   500.,   536.,   572.,   608.,   644.,   680.,   369.,   391.,   736.,   788.,   840.,   892.,   944.,   996.,   503.,   533.,   173.,   179.,   185.,   191.,   352.,   372.,   392.,   412.,   432.,   452.,   431.,   445.,   556.,   592.,   628.,   664.,   700.,   736.,   677.,   699.,   760.,   812.,   864.,   916.,   968.,  1020.,   923.,   953.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x14x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,    64.,    84.,   104.,   124.,   144.,   164.,    95.,   109.,   123.,   137.,   151.,   165.,   179.,   193.,     0.,     0.,     0.,     0.,     0.,     0.,    89.,    95.,   101.,   107.,   113.,   119.,   125.,   131.,   344.,   364.,   384.,   404.,   424.,   444.,   291.,   305.,   319.,   333.,   347.,   361.,   375.,   389.,     0.,     0.,     0.,     0.,     0.,     0.,   173.,   179.,   185.,   191.,   197.,   203.,   209.,   215.,   624.,   644.,   664.,   684.,   704.,   724.,   487.,   501.,   515.,   529.,   543.,   557.,   571.,   585.,     0.,     0.,     0.,     0.,     0.,     0.,   257.,   263.,   269.,   275.,   281.,   287.,   293.,   299.,   904.,   924.,   944.,   964.,   984.,  1004.,   683.,   697.,   711.,   725.,   739.,   753.,   767.,   781.,     0.,     0.,     0.,     0.,     0.,     0.,   358.,   386.,   414.,   442.,   470.,   498.,   526.,   554.,  1400.,  1472.,  1544.,  1616.,  1688.,  1760.,  1082.,  1126.,  1170.,  1214.,  1258.,  1302.,  1346.,  1390.,     0.,     0.,     0.,     0.,     0.,     0.,   750.,   778.,   806.,   834.,   862.,   890.,   918.,   946.,  2408.,  2480.,  2552.,  2624.,  2696.,  2768.,  1698.,  1742.,  1786.,  1830.,  1874.,  1918.,  1962.,  2006.,     0.,     0.,     0.,     0.,     0.,     0.,  1142.,  1170.,  1198.,  1226.,  1254.,  1282.,  1310.,  1338.,  3416.,  3488.,  3560.,  3632.,  3704.,  3776.,  2314.,  2358.,  2402.,  2446.,  2490.,  2534.,  2578.,  2622.,     0.,     0.,     0.,     0.,     0.,     0.,   941.,   963.,   985.,  1007.,  1029.,  1051.,  1073.,  1095.,  2400.,  2452.,  2504.,  2556.,  2608.,  2660.,  1463.,  1493.,  1523.,  1553.,  1583.,  1613.,  1643.,  1673.,     0.,     0.,     0.,     0.,     0.,     0.,  1249.,  1271.,  1293.,  1315.,  1337.,  1359.,  1381.,  1403.,  3128.,  3180.,  3232.,  3284.,  3336.,  3388.,  1883.,  1913.,  1943.,  1973.,  2003.,  2033.,  2063.,  2093.,     0.,     0.,     0.,     0.,     0.,     0.,  1557.,  1579.,  1601.,  1623.,  1645.,  1667.,  1689.,  1711.,  3856.,  3908.,  3960.,  4012.,  4064.,  4116.,  2303.,  2333.,  2363.,  2393.,  2423.,  2453.,  2483.,  2513.,     0.,     0.,     0.,     0.,     0.,     0.,  1865.,  1887.,  1909.,  1931.,  1953.,  1975.,  1997.,  2019.,  4584.,  4636.,  4688.,  4740.,  4792.,  4844.,  2723.,  2753.,  2783.,  2813.,  2843.,  2873.,  2903.,  2933.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    29.,    67.,   105.,   143.,   181.,   219.,   257.,   295.,   368.,   452.,   536.,   620.,   704.,   788.,   311.,   357.,   403.,   449.,   495.,   541.,   587.,   633.,     0.,     0.,     0.,     0.,     0.,     0.,   561.,   599.,   637.,   675.,   713.,   751.,   789.,   827.,  1544.,  1628.,  1712.,  1796.,  1880.,  1964.,   955.,  1001.,  1047.,  1093.,  1139.,  1185.,  1231.,  1277.,     0.,     0.,     0.,     0.,     0.,     0.,  1093.,  1131.,  1169.,  1207.,  1245.,  1283.,  1321.,  1359.,  2720.,  2804.,  2888.,  2972.,  3056.,  3140.,  1599.,  1645.,  1691.,  1737.,  1783.,  1829.,  1875.,  1921.,     0.,     0.,     0.,     0.,     0.,     0.,  1625.,  1663.,  1701.,  1739.,  1777.,  1815.,  1853.,  1891.,  3896.,  3980.,  4064.,  4148.,  4232.,  4316.,  2243.,  2289.,  2335.,  2381.,  2427.,  2473.,  2519.,  2565.,     0.,     0.,     0.,     0.,     0.,     0.,  2198.,  2290.,  2382.,  2474.,  2566.,  2658.,  2750.,  2842.,  5592.,  5792.,  5992.,  6192.,  6392.,  6592.,  3306.,  3414.,  3522.,  3630.,  3738.,  3846.,  3954.,  4062.,     0.,     0.,     0.,     0.,     0.,     0.,  3486.,  3578.,  3670.,  3762.,  3854.,  3946.,  4038.,  4130.,  8392.,  8592.,  8792.,  8992.,  9192.,  9392.,  4818.,  4926.,  5034.,  5142.,  5250.,  5358.,  5466.,  5574.,     0.,     0.,     0.,     0.,     0.,     0.,  4774.,  4866.,  4958.,  5050.,  5142.,  5234.,  5326.,  5418., 11192., 11392., 11592., 11792., 11992., 12192.,  6330.,  6438.,  6546.,  6654.,  6762.,  6870.,  6978.,  7086.,     0.,     0.,     0.,     0.,     0.,     0.,  2309.,  2363.,  2417.,  2471.,  2525.,  2579.,  2633.,  2687.,  5392.,  5508.,  5624.,  5740.,  5856.,  5972.,  3023.,  3085.,  3147.,  3209.,  3271.,  3333.,  3395.,  3457.,     0.,     0.,     0.,     0.,     0.,     0.,  3065.,  3119.,  3173.,  3227.,  3281.,  3335.,  3389.,  3443.,  7016.,  7132.,  7248.,  7364.,  7480.,  7596.,  3891.,  3953.,  4015.,  4077.,  4139.,  4201.,  4263.,  4325.,     0.,     0.,     0.,     0.,     0.,     0.,  3821.,  3875.,  3929.,  3983.,  4037.,  4091.,  4145.,  4199.,  8640.,  8756.,  8872.,  8988.,  9104.,  9220.,  4759.,  4821.,  4883.,  4945.,  5007.,  5069.,  5131.,  5193.,     0.,     0.,     0.,     0.,     0.,     0.,  4577.,  4631.,  4685.,  4739.,  4793.,  4847.,  4901.,  4955., 10264., 10380., 10496., 10612., 10728., 10844.,  5627.,  5689.,  5751.,  5813.,  5875.,  5937.,  5999.,  6061.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    53.,   123.,   193.,   263.,   333.,   403.,   473.,   543.,   672.,   820.,   968.,  1116.,  1264.,  1412.,   527.,   605.,   683.,   761.,   839.,   917.,   995.,  1073.,     0.,     0.,     0.,     0.,     0.,     0.,  1033.,  1103.,  1173.,  1243.,  1313.,  1383.,  1453.,  1523.,  2744.,  2892.,  3040.,  3188.,  3336.,  3484.,  1619.,  1697.,  1775.,  1853.,  1931.,  2009.,  2087.,  2165.,     0.,     0.,     0.,     0.,     0.,     0.,  2013.,  2083.,  2153.,  2223.,  2293.,  2363.,  2433.,  2503.,  4816.,  4964.,  5112.,  5260.,  5408.,  5556.,  2711.,  2789.,  2867.,  2945.,  3023.,  3101.,  3179.,  3257.,     0.,     0.,     0.,     0.,     0.,     0.,  2993.,  3063.,  3133.,  3203.,  3273.,  3343.,  3413.,  3483.,  6888.,  7036.,  7184.,  7332.,  7480.,  7628.,  3803.,  3881.,  3959.,  4037.,  4115.,  4193.,  4271.,  4349.,     0.,     0.,     0.,     0.,     0.,     0.,  4038.,  4194.,  4350.,  4506.,  4662.,  4818.,  4974.,  5130.,  9784., 10112., 10440., 10768., 11096., 11424.,  5530.,  5702.,  5874.,  6046.,  6218.,  6390.,  6562.,  6734.,     0.,     0.,     0.,     0.,     0.,     0.,  6222.,  6378.,  6534.,  6690.,  6846.,  7002.,  7158.,  7314., 14376., 14704., 15032., 15360., 15688., 16016.,  7938.,  8110.,  8282.,  8454.,  8626.,  8798.,  8970.,  9142.,     0.,     0.,     0.,     0.,     0.,     0.,  8406.,  8562.,  8718.,  8874.,  9030.,  9186.,  9342.,  9498., 18968., 19296., 19624., 19952., 20280., 20608., 10346., 10518., 10690., 10862., 11034., 11206., 11378., 11550.,     0.,     0.,     0.,     0.,     0.,     0.,  3677.,  3763.,  3849.,  3935.,  4021.,  4107.,  4193.,  4279.,  8384.,  8564.,  8744.,  8924.,  9104.,  9284.,  4583.,  4677.,  4771.,  4865.,  4959.,  5053.,  5147.,  5241.,     0.,     0.,     0.,     0.,     0.,     0.,  4881.,  4967.,  5053.,  5139.,  5225.,  5311.,  5397.,  5483., 10904., 11084., 11264., 11444., 11624., 11804.,  5899.,  5993.,  6087.,  6181.,  6275.,  6369.,  6463.,  6557.,     0.,     0.,     0.,     0.,     0.,     0.,  6085.,  6171.,  6257.,  6343.,  6429.,  6515.,  6601.,  6687., 13424., 13604., 13784., 13964., 14144., 14324.,  7215.,  7309.,  7403.,  7497.,  7591.,  7685.,  7779.,  7873.,     0.,     0.,     0.,     0.,     0.,     0.,  7289.,  7375.,  7461.,  7547.,  7633.,  7719.,  7805.,  7891., 15944., 16124., 16304., 16484., 16664., 16844.,  8531.,  8625.,  8719.,  8813.,  8907.,  9001.,  9095.,  9189.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x14x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  110.,   150.,   190.,   230.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,   614.,   846.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  4780.,  5500.,   892.,  1228.,  1564.,  1900.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  1900.,  2620.,  1966.,  2262.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  4780.,  5500.,   892.,  1228.,  1564.,  1900.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  1900.,  2620.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  1542.,  1774.,   782.,  1078.,  1374.,  1670.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  1966.,  2390.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  1286.,  1774.,  1966.,  2262.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  4780.,  5500.,   892.,  1228.,  1564.,  1900.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  1900.,  2620.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  4780.,  5500.,   892.,  1228.,  1564.,  1900.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  1900.,  2620.,  1966.,  2262.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  2390.,  2750.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  3238.,  3726.,   110.,   150.,   190.,   230.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,   614.,   846.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  4780.,  5500.,   892.,  1228.,  1564.,  1900.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  1900.,  2620.,  1966.,  2262.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  4780.,  5500.,   892.,  1228.,  1564.,  1900.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  1900.,  2620.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  1542.,  1774.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x14x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   420.,   564.,   708.,   852.,   996.,  1140.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,     0.,     0.,     0.,     0.,     0.,     0.,   590.,   630.,    30.,    70.,   110.,   150.,   190.,   230.,  1796.,  1940.,   420.,   564.,   708.,   852.,   486.,   590.,   694.,   798.,   902.,  1006.,  1110.,  1214.,     0.,     0.,     0.,     0.,     0.,     0.,   510.,   550.,   590.,   630.,    30.,    70.,   110.,   150.,  1508.,  1652.,  1796.,  1940.,   420.,   564.,   278.,   382.,   486.,   590.,   694.,   798.,   902.,  1006.,     0.,     0.,     0.,     0.,     0.,     0.,   430.,   470.,   510.,   550.,   590.,   630.,    30.,    70.,  1220.,  1364.,  1508.,  1652.,  1796.,  1940.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,     0.,     0.,   460.,   668.,   876.,  1084.,  1292.,  1500.,  1708.,  1916.,  2536.,  3080.,  3624.,  4168.,  4712.,  5256.,  3068.,  3404.,  2076.,  2412.,  2748.,  3084.,  3420.,  3756.,     0.,     0.,     0.,     0.,     0.,     0.,  2732.,  2940.,   460.,   668.,   876.,  1084.,  1292.,  1500.,  5800.,  6344.,  2536.,  3080.,  3624.,  4168.,  2396.,  2732.,  3068.,  3404.,  2076.,  2412.,  2748.,  3084.,     0.,     0.,     0.,     0.,     0.,     0.,  2316.,  2524.,  2732.,  2940.,   460.,   668.,   876.,  1084.,  4712.,  5256.,  5800.,  6344.,  2536.,  3080.,  1724.,  2060.,  2396.,  2732.,  3068.,  3404.,  2076.,  2412.,     0.,     0.,     0.,     0.,     0.,     0.,  1790.,  1958.,  2126.,  2294.,  2462.,  2630.,   110.,   278.,  2916.,  3316.,  3716.,  4116.,  4516.,  4916.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  2462.,  2630.,  2116.,  2516.,  2916.,  3316.,  3716.,  4116.,  3398.,  3630.,   150.,   382.,   614.,   846.,  1078.,  1310.,     0.,     0.,     0.,     0.,     0.,     0.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  4004.,  4404.,  2116.,  2516.,  2916.,  3316.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  3204.,  3604.,  4004.,  4404.,  2116.,  2516.,  2470.,  2702.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,  2788.,  3444.,  4100.,  4756.,  5412.,  6068.,  2390.,  2750.,  3110.,  3470.,  3830.,  4190.,  4550.,  4910.,     0.,     0.,     0.,     0.,     0.,     0.,  4334.,  4630.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  7236.,  7892.,  2788.,  3444.,  4100.,  4756.,  1670.,  2030.,  2390.,  2750.,  3110.,  3470.,  3830.,  4190.,     0.,     0.,     0.,     0.,     0.,     0.,  3742.,  4038.,  4334.,  4630.,   190.,   486.,   782.,  1078.,  5924.,  6580.,  7236.,  7892.,  2788.,  3444.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,  3110.,  3470.,     0.,     0.,     0.,     0.,     0.,     0.,  3150.,  3446.,  3742.,  4038.,  4334.,  4630.,   190.,   486.,  4612.,  5268.,  5924.,  6580.,  7236.,  7892.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,     0.,     0.,     0.,     0.,     0.,     0.,  2828.,  3548.,  4268.,  4988.,  5708.,  6428.,  7148.,  7868.,  7272.,  8840., 10408., 11976., 13544., 15112.,  8508.,  9356.,  4444.,  5292.,  6140.,  6988.,  7836.,  8684.,     0.,     0.,     0.,     0.,     0.,     0.,  8172.,  8892.,  2828.,  3548.,  4268.,  4988.,  5708.,  6428., 16680., 18248.,  7272.,  8840., 10408., 11976.,  6812.,  7660.,  8508.,  9356.,  4444.,  5292.,  6140.,  6988.,     0.,     0.,     0.,     0.,     0.,     0.,  6732.,  7452.,  8172.,  8892.,  2828.,  3548.,  4268.,  4988., 13544., 15112., 16680., 18248.,  7272.,  8840.,  5116.,  5964.,  6812.,  7660.,  8508.,  9356.,  4444.,  5292.,     0.,     0.,     0.,     0.,     0.,     0.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,   270.,   694.,  6308.,  7220.,  8132.,  9044.,  9956., 10868.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,     0.,     0.,     0.,     0.,     0.,     0.,  3662.,  4086.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,  4484.,  5396.,  6308.,  7220.,  8132.,  9044.,  7142.,  7630.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,     0.,     0.,     0.,     0.,     0.,     0.,  2814.,  3238.,  3662.,  4086.,  4510.,  4934.,  5358.,  5782.,  9444., 10356.,  4484.,  5396.,  6308.,  7220.,  6166.,  6654.,  7142.,  7630.,   310.,   798.,  1286.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,  1966.,  2390.,  2814.,  3238.,  3662.,  4086.,  4510.,  4934.,  7620.,  8532.,  9444., 10356.,  4484.,  5396.,  5190.,  5678.,  6166.,  6654.,  7142.,  7630.,   310.,   798.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   350.,   902.,  1454.,  2006.,  2558.,  3110.,  3662.,  4214.,  5156.,  6324.,  7492.,  8660.,  9828., 10996.,  4086.,  4702.,  5318.,  5934.,  6550.,  7166.,  7782.,  8398.,     0.,     0.,     0.,     0.,     0.,     0.,  8078.,  8630.,   350.,   902.,  1454.,  2006.,  2558.,  3110., 12676., 13844.,  5156.,  6324.,  7492.,  8660.,  2854.,  3470.,  4086.,  4702.,  5318.,  5934.,  6550.,  7166.,     0.,     0.,     0.,     0.,     0.,     0.,  6974.,  7526.,  8078.,  8630.,   350.,   902.,  1454.,  2006., 10340., 11508., 12676., 13844.,  5156.,  6324.,  1622.,  2238.,  2854.,  3470.,  4086.,  4702.,  5318.,  5934.,     0.,     0.,     0.,     0.,     0.,     0.,  5870.,  6422.,  6974.,  7526.,  8078.,  8630.,   350.,   902.,  8004.,  9172., 10340., 11508., 12676., 13844.,   390.,  1006.,  1622.,  2238.,  2854.,  3470.,  4086.,  4702.,     0.,     0.,     0.,     0.,     0.,     0.,  5196.,  6428.,  7660.,  8892., 10124., 11356., 12588., 13820., 12008., 14600., 17192., 19784., 22376., 24968., 13948., 15308.,  6812.,  8172.,  9532., 10892., 12252., 13612.,     0.,     0.,     0.,     0.,     0.,     0., 13612., 14844.,  5196.,  6428.,  7660.,  8892., 10124., 11356., 27560., 30152., 12008., 14600., 17192., 19784., 11228., 12588., 13948., 15308.,  6812.,  8172.,  9532., 10892.,     0.,     0.,     0.,     0.,     0.,     0., 11148., 12380., 13612., 14844.,  5196.,  6428.,  7660.,  8892., 22376., 24968., 27560., 30152., 12008., 14600.,  8508.,  9868., 11228., 12588., 13948., 15308.,  6812.,  8172.,     0.,     0.,     0.,     0.,     0.,     0.,  7230.,  7910.,  8590.,  9270.,  9950., 10630.,   430.,  1110.,  9700., 11124., 12548., 13972., 15396., 16820.,   470.,  1214.,  1958.,  2702.,  3446.,  4190.,  4934.,  5678.,     0.,     0.,     0.,     0.,     0.,     0.,  5870.,  6550.,  7230.,  7910.,  8590.,  9270.,  9950., 10630.,  6852.,  8276.,  9700., 11124., 12548., 13972., 10886., 11630.,   470.,  1214.,  1958.,  2702.,  3446.,  4190.,     0.,     0.,     0.,     0.,     0.,     0.,  4510.,  5190.,  5870.,  6550.,  7230.,  7910.,  8590.,  9270., 14884., 16308.,  6852.,  8276.,  9700., 11124.,  9398., 10142., 10886., 11630.,   470.,  1214.,  1958.,  2702.,     0.,     0.,     0.,     0.,     0.,     0.,  3150.,  3830.,  4510.,  5190.,  5870.,  6550.,  7230.,  7910., 12036., 13460., 14884., 16308.,  6852.,  8276.,  7910.,  8654.,  9398., 10142., 10886., 11630.,   470.,  1214.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x14x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   37.,    38.,    39.,    40.,    41.,    42.,    43.,    44.,   103.,   106.,   109.,   112.,   115.,   118.,   121.,   124.,   127.,   130.,   133.,   136.,    82.,    84.,    86.,    88.,   177.,   182.,   187.,   192.,   197.,   202.,   207.,   212.,   217.,   222.,   227.,   232.,   123.,   126.,   129.,   132.,   251.,   258.,   265.,   272.,   279.,   286.,   293.,   300.,   307.,   314.,   321.,   328.,   164.,   168.,   172.,   176.,    65.,    66.,    67.,    68.,    69.,    70.,    71.,    72.,   187.,   190.,   193.,   196.,   199.,   202.,   205.,   208.,   211.,   214.,   217.,   220.,   138.,   140.,   142.,   144.,   317.,   322.,   327.,   332.,   337.,   342.,   347.,   352.,   357.,   362.,   367.,   372.,   207.,   210.,   213.,   216.,   447.,   454.,   461.,   468.,   475.,   482.,   489.,   496.,   503.,   510.,   517.,   524.,   276.,   280.,   284.,   288.,    93.,    94.,    95.,    96.,    97.,    98.,    99.,   100.,   271.,   274.,   277.,   280.,   283.,   286.,   289.,   292.,   295.,   298.,   301.,   304.,   194.,   196.,   198.,   200.,   457.,   462.,   467.,   472.,   477.,   482.,   487.,   492.,   497.,   502.,   507.,   512.,   291.,   294.,   297.,   300.,   643.,   650.,   657.,   664.,   671.,   678.,   685.,   692.,   699.,   706.,   713.,   720.,   388.,   392.,   396.,   400.,   166.,   172.,   178.,   184.,   190.,   196.,   202.,   208.,   446.,   460.,   474.,   488.,   502.,   516.,   530.,   544.,   558.,   572.,   586.,   600.,   328.,   336.,   344.,   352.,   706.,   724.,   742.,   760.,   778.,   796.,   814.,   832.,   850.,   868.,   886.,   904.,   466.,   476.,   486.,   496.,   966.,   988.,  1010.,  1032.,  1054.,  1076.,  1098.,  1120.,  1142.,  1164.,  1186.,  1208.,   604.,   616.,   628.,   640.,   334.,   340.,   346.,   352.,   358.,   364.,   370.,   376.,   838.,   852.,   866.,   880.,   894.,   908.,   922.,   936.,   950.,   964.,   978.,   992.,   552.,   560.,   568.,   576.,  1210.,  1228.,  1246.,  1264.,  1282.,  1300.,  1318.,  1336.,  1354.,  1372.,  1390.,  1408.,   746.,   756.,   766.,   776.,  1582.,  1604.,  1626.,  1648.,  1670.,  1692.,  1714.,  1736.,  1758.,  1780.,  1802.,  1824.,   940.,   952.,   964.,   976.,   502.,   508.,   514.,   520.,   526.,   532.,   538.,   544.,  1230.,  1244.,  1258.,  1272.,  1286.,  1300.,  1314.,  1328.,  1342.,  1356.,  1370.,  1384.,   776.,   784.,   792.,   800.,  1714.,  1732.,  1750.,  1768.,  1786.,  1804.,  1822.,  1840.,  1858.,  1876.,  1894.,  1912.,  1026.,  1036.,  1046.,  1056.,  2198.,  2220.,  2242.,  2264.,  2286.,  2308.,  2330.,  2352.,  2374.,  2396.,  2418.,  2440.,  1276.,  1288.,  1300.,  1312.,   465.,   470.,   475.,   480.,   485.,   490.,   495.,   500.,  1015.,  1026.,  1037.,  1048.,  1059.,  1070.,  1081.,  1092.,  1103.,  1114.,  1125.,  1136.,   582.,   588.,   594.,   600.,  1201.,  1214.,  1227.,  1240.,  1253.,  1266.,  1279.,  1292.,  1305.,  1318.,  1331.,  1344.,   679.,   686.,   693.,   700.,  1387.,  1402.,  1417.,  1432.,  1447.,  1462.,  1477.,  1492.,  1507.,  1522.,  1537.,  1552.,   776.,   784.,   792.,   800.,   686.,   700.,   714.,   728.,   742.,   756.,   770.,   784.,  1486.,  1516.,  1546.,  1576.,  1606.,  1636.,  1666.,  1696.,  1726.,  1756.,  1786.,  1816.,   880.,   896.,   912.,   928.,  1746.,  1780.,  1814.,  1848.,  1882.,  1916.,  1950.,  1984.,  2018.,  2052.,  2086.,  2120.,  1018.,  1036.,  1054.,  1072.,  2006.,  2044.,  2082.,  2120.,  2158.,  2196.,  2234.,  2272.,  2310.,  2348.,  2386.,  2424.,  1156.,  1176.,  1196.,  1216.,  1078.,  1092.,  1106.,  1120.,  1134.,  1148.,  1162.,  1176.,  2326.,  2356.,  2386.,  2416.,  2446.,  2476.,  2506.,  2536.,  2566.,  2596.,  2626.,  2656.,  1328.,  1344.,  1360.,  1376.,  2698.,  2732.,  2766.,  2800.,  2834.,  2868.,  2902.,  2936.,  2970.,  3004.,  3038.,  3072.,  1522.,  1540.,  1558.,  1576.,  3070.,  3108.,  3146.,  3184.,  3222.,  3260.,  3298.,  3336.,  3374.,  3412.,  3450.,  3488.,  1716.,  1736.,  1756.,  1776.,  1470.,  1484.,  1498.,  1512.,  1526.,  1540.,  1554.,  1568.,  3166.,  3196.,  3226.,  3256.,  3286.,  3316.,  3346.,  3376.,  3406.,  3436.,  3466.,  3496.,  1776.,  1792.,  1808.,  1824.,  3650.,  3684.,  3718.,  3752.,  3786.,  3820.,  3854.,  3888.,  3922.,  3956.,  3990.,  4024.,  2026.,  2044.,  2062.,  2080.,  4134.,  4172.,  4210.,  4248.,  4286.,  4324.,  4362.,  4400.,  4438.,  4476.,  4514.,  4552.,  2276.,  2296.,  2316.,  2336.,   837.,   846.,   855.,   864.,   873.,   882.,   891.,   900.,  1759.,  1778.,  1797.,  1816.,  1835.,  1854.,  1873.,  1892.,  1911.,  1930.,  1949.,  1968.,   970.,   980.,   990.,  1000.,  1945.,  1966.,  1987.,  2008.,  2029.,  2050.,  2071.,  2092.,  2113.,  2134.,  2155.,  2176.,  1067.,  1078.,  1089.,  1100.,  2131.,  2154.,  2177.,  2200.,  2223.,  2246.,  2269.,  2292.,  2315.,  2338.,  2361.,  2384.,  1164.,  1176.,  1188.,  1200.,  1089.,  1098.,  1107.,  1116.,  1125.,  1134.,  1143.,  1152.,  2291.,  2310.,  2329.,  2348.,  2367.,  2386.,  2405.,  2424.,  2443.,  2462.,  2481.,  2500.,  1250.,  1260.,  1270.,  1280.,  2533.,  2554.,  2575.,  2596.,  2617.,  2638.,  2659.,  2680.,  2701.,  2722.,  2743.,  2764.,  1375.,  1386.,  1397.,  1408.,  2775.,  2798.,  2821.,  2844.,  2867.,  2890.,  2913.,  2936.,  2959.,  2982.,  3005.,  3028.,  1500.,  1512.,  1524.,  1536.,   481.,   494.,   507.,   520.,   533.,   546.,   559.,   572.,   991.,  1018.,  1045.,  1072.,  1099.,  1126.,  1153.,  1180.,  1207.,  1234.,  1261.,  1288.,   574.,   588.,   602.,   616.,  1065.,  1094.,  1123.,  1152.,  1181.,  1210.,  1239.,  1268.,  1297.,  1326.,  1355.,  1384.,   615.,   630.,   645.,   660.,  1139.,  1170.,  1201.,  1232.,  1263.,  1294.,  1325.,  1356.,  1387.,  1418.,  1449.,  1480.,   656.,   672.,   688.,   704.,   845.,   858.,   871.,   884.,   897.,   910.,   923.,   936.,  1747.,  1774.,  1801.,  1828.,  1855.,  1882.,  1909.,  1936.,  1963.,  1990.,  2017.,  2044.,   966.,   980.,   994.,  1008.,  1877.,  1906.,  1935.,  1964.,  1993.,  2022.,  2051.,  2080.,  2109.,  2138.,  2167.,  2196.,  1035.,  1050.,  1065.,  1080.,  2007.,  2038.,  2069.,  2100.,  2131.,  2162.,  2193.,  2224.,  2255.,  2286.,  2317.,  2348.,  1104.,  1120.,  1136.,  1152.,  1209.,  1222.,  1235.,  1248.,  1261.,  1274.,  1287.,  1300.,  2503.,  2530.,  2557.,  2584.,  2611.,  2638.,  2665.,  2692.,  2719.,  2746.,  2773.,  2800.,  1358.,  1372.,  1386.,  1400.,  2689.,  2718.,  2747.,  2776.,  2805.,  2834.,  2863.,  2892.,  2921.,  2950.,  2979.,  3008.,  1455.,  1470.,  1485.,  1500.,  2875.,  2906.,  2937.,  2968.,  2999.,  3030.,  3061.,  3092.,  3123.,  3154.,  3185.,  3216.,  1552.,  1568.,  1584.,  1600.,  1726.,  1756.,  1786.,  1816.,  1846.,  1876.,  1906.,  1936.,  3566.,  3628.,  3690.,  3752.,  3814.,  3876.,  3938.,  4000.,  4062.,  4124.,  4186.,  4248.,  1984.,  2016.,  2048.,  2080.,  3826.,  3892.,  3958.,  4024.,  4090.,  4156.,  4222.,  4288.,  4354.,  4420.,  4486.,  4552.,  2122.,  2156.,  2190.,  2224.,  4086.,  4156.,  4226.,  4296.,  4366.,  4436.,  4506.,  4576.,  4646.,  4716.,  4786.,  4856.,  2260.,  2296.,  2332.,  2368.,  2566.,  2596.,  2626.,  2656.,  2686.,  2716.,  2746.,  2776.,  5302.,  5364.,  5426.,  5488.,  5550.,  5612.,  5674.,  5736.,  5798.,  5860.,  5922.,  5984.,  2880.,  2912.,  2944.,  2976.,  5674.,  5740.,  5806.,  5872.,  5938.,  6004.,  6070.,  6136.,  6202.,  6268.,  6334.,  6400.,  3074.,  3108.,  3142.,  3176.,  6046.,  6116.,  6186.,  6256.,  6326.,  6396.,  6466.,  6536.,  6606.,  6676.,  6746.,  6816.,  3268.,  3304.,  3340.,  3376.,  3406.,  3436.,  3466.,  3496.,  3526.,  3556.,  3586.,  3616.,  7038.,  7100.,  7162.,  7224.,  7286.,  7348.,  7410.,  7472.,  7534.,  7596.,  7658.,  7720.,  3776.,  3808.,  3840.,  3872.,  7522.,  7588.,  7654.,  7720.,  7786.,  7852.,  7918.,  7984.,  8050.,  8116.,  8182.,  8248.,  4026.,  4060.,  4094.,  4128.,  8006.,  8076.,  8146.,  8216.,  8286.,  8356.,  8426.,  8496.,  8566.,  8636.,  8706.,  8776.,  4276.,  4312.,  4348.,  4384.,  1581.,  1598.,  1615.,  1632.,  1649.,  1666.,  1683.,  1700.,  3247.,  3282.,  3317.,  3352.,  3387.,  3422.,  3457.,  3492.,  3527.,  3562.,  3597.,  3632.,  1746.,  1764.,  1782.,  1800.,  3433.,  3470.,  3507.,  3544.,  3581.,  3618.,  3655.,  3692.,  3729.,  3766.,  3803.,  3840.,  1843.,  1862.,  1881.,  1900.,  3619.,  3658.,  3697.,  3736.,  3775.,  3814.,  3853.,  3892.,  3931.,  3970.,  4009.,  4048.,  1940.,  1960.,  1980.,  2000.,  2246.,  2284.,  2322.,  2360.,  2398.,  2436.,  2474.,  2512.,  4606.,  4684.,  4762.,  4840.,  4918.,  4996.,  5074.,  5152.,  5230.,  5308.,  5386.,  5464.,  2536.,  2576.,  2616.,  2656.,  4866.,  4948.,  5030.,  5112.,  5194.,  5276.,  5358.,  5440.,  5522.,  5604.,  5686.,  5768.,  2674.,  2716.,  2758.,  2800.,  5126.,  5212.,  5298.,  5384.,  5470.,  5556.,  5642.,  5728.,  5814.,  5900.,  5986.,  6072.,  2812.,  2856.,  2900.,  2944.,  3310.,  3348.,  3386.,  3424.,  3462.,  3500.,  3538.,  3576.,  6790.,  6868.,  6946.,  7024.,  7102.,  7180.,  7258.,  7336.,  7414.,  7492.,  7570.,  7648.,  3656.,  3696.,  3736.,  3776.,  7162.,  7244.,  7326.,  7408.,  7490.,  7572.,  7654.,  7736.,  7818.,  7900.,  7982.,  8064.,  3850.,  3892.,  3934.,  3976.,  7534.,  7620.,  7706.,  7792.,  7878.,  7964.,  8050.,  8136.,  8222.,  8308.,  8394.,  8480.,  4044.,  4088.,  4132.,  4176.,  4374.,  4412.,  4450.,  4488.,  4526.,  4564.,  4602.,  4640.,  8974.,  9052.,  9130.,  9208.,  9286.,  9364.,  9442.,  9520.,  9598.,  9676.,  9754.,  9832.,  4776.,  4816.,  4856.,  4896.,  9458.,  9540.,  9622.,  9704.,  9786.,  9868.,  9950., 10032., 10114., 10196., 10278., 10360.,  5026.,  5068.,  5110.,  5152.,  9942., 10028., 10114., 10200., 10286., 10372., 10458., 10544., 10630., 10716., 10802., 10888.,  5276.,  5320.,  5364.,  5408.,  1953.,  1974.,  1995.,  2016.,  2037.,  2058.,  2079.,  2100.,  3991.,  4034.,  4077.,  4120.,  4163.,  4206.,  4249.,  4292.,  4335.,  4378.,  4421.,  4464.,  2134.,  2156.,  2178.,  2200.,  4177.,  4222.,  4267.,  4312.,  4357.,  4402.,  4447.,  4492.,  4537.,  4582.,  4627.,  4672.,  2231.,  2254.,  2277.,  2300.,  4363.,  4410.,  4457.,  4504.,  4551.,  4598.,  4645.,  4692.,  4739.,  4786.,  4833.,  4880.,  2328.,  2352.,  2376.,  2400.,  2541.,  2562.,  2583.,  2604.,  2625.,  2646.,  2667.,  2688.,  5195.,  5238.,  5281.,  5324.,  5367.,  5410.,  5453.,  5496.,  5539.,  5582.,  5625.,  5668.,  2750.,  2772.,  2794.,  2816.,  5437.,  5482.,  5527.,  5572.,  5617.,  5662.,  5707.,  5752.,  5797.,  5842.,  5887.,  5932.,  2875.,  2898.,  2921.,  2944.,  5679.,  5726.,  5773.,  5820.,  5867.,  5914.,  5961.,  6008.,  6055.,  6102.,  6149.,  6196.,  3000.,  3024.,  3048.,  3072.,   925.,   950.,   975.,  1000.,  1025.,  1050.,  1075.,  1100.,  1879.,  1930.,  1981.,  2032.,  2083.,  2134.,  2185.,  2236.,  2287.,  2338.,  2389.,  2440.,  1066.,  1092.,  1118.,  1144.,  1953.,  2006.,  2059.,  2112.,  2165.,  2218.,  2271.,  2324.,  2377.,  2430.,  2483.,  2536.,  1107.,  1134.,  1161.,  1188.,  2027.,  2082.,  2137.,  2192.,  2247.,  2302.,  2357.,  2412.,  2467.,  2522.,  2577.,  2632.,  1148.,  1176.,  1204.,  1232.,  1625.,  1650.,  1675.,  1700.,  1725.,  1750.,  1775.,  1800.,  3307.,  3358.,  3409.,  3460.,  3511.,  3562.,  3613.,  3664.,  3715.,  3766.,  3817.,  3868.,  1794.,  1820.,  1846.,  1872.,  3437.,  3490.,  3543.,  3596.,  3649.,  3702.,  3755.,  3808.,  3861.,  3914.,  3967.,  4020.,  1863.,  1890.,  1917.,  1944.,  3567.,  3622.,  3677.,  3732.,  3787.,  3842.,  3897.,  3952.,  4007.,  4062.,  4117.,  4172.,  1932.,  1960.,  1988.,  2016.,  2325.,  2350.,  2375.,  2400.,  2425.,  2450.,  2475.,  2500.,  4735.,  4786.,  4837.,  4888.,  4939.,  4990.,  5041.,  5092.,  5143.,  5194.,  5245.,  5296.,  2522.,  2548.,  2574.,  2600.,  4921.,  4974.,  5027.,  5080.,  5133.,  5186.,  5239.,  5292.,  5345.,  5398.,  5451.,  5504.,  2619.,  2646.,  2673.,  2700.,  5107.,  5162.,  5217.,  5272.,  5327.,  5382.,  5437.,  5492.,  5547.,  5602.,  5657.,  5712.,  2716.,  2744.,  2772.,  2800.,  3286.,  3340.,  3394.,  3448.,  3502.,  3556.,  3610.,  3664.,  6686.,  6796.,  6906.,  7016.,  7126.,  7236.,  7346.,  7456.,  7566.,  7676.,  7786.,  7896.,  3640.,  3696.,  3752.,  3808.,  6946.,  7060.,  7174.,  7288.,  7402.,  7516.,  7630.,  7744.,  7858.,  7972.,  8086.,  8200.,  3778.,  3836.,  3894.,  3952.,  7206.,  7324.,  7442.,  7560.,  7678.,  7796.,  7914.,  8032.,  8150.,  8268.,  8386.,  8504.,  3916.,  3976.,  4036.,  4096.,  4798.,  4852.,  4906.,  4960.,  5014.,  5068.,  5122.,  5176.,  9766.,  9876.,  9986., 10096., 10206., 10316., 10426., 10536., 10646., 10756., 10866., 10976.,  5208.,  5264.,  5320.,  5376., 10138., 10252., 10366., 10480., 10594., 10708., 10822., 10936., 11050., 11164., 11278., 11392.,  5402.,  5460.,  5518.,  5576., 10510., 10628., 10746., 10864., 10982., 11100., 11218., 11336., 11454., 11572., 11690., 11808.,  5596.,  5656.,  5716.,  5776.,  6310.,  6364.,  6418.,  6472.,  6526.,  6580.,  6634.,  6688., 12846., 12956., 13066., 13176., 13286., 13396., 13506., 13616., 13726., 13836., 13946., 14056.,  6776.,  6832.,  6888.,  6944., 13330., 13444., 13558., 13672., 13786., 13900., 14014., 14128., 14242., 14356., 14470., 14584.,  7026.,  7084.,  7142.,  7200., 13814., 13932., 14050., 14168., 14286., 14404., 14522., 14640., 14758., 14876., 14994., 15112.,  7276.,  7336.,  7396.,  7456.,  2697.,  2726.,  2755.,  2784.,  2813.,  2842.,  2871.,  2900.,  5479.,  5538.,  5597.,  5656.,  5715.,  5774.,  5833.,  5892.,  5951.,  6010.,  6069.,  6128.,  2910.,  2940.,  2970.,  3000.,  5665.,  5726.,  5787.,  5848.,  5909.,  5970.,  6031.,  6092.,  6153.,  6214.,  6275.,  6336.,  3007.,  3038.,  3069.,  3100.,  5851.,  5914.,  5977.,  6040.,  6103.,  6166.,  6229.,  6292.,  6355.,  6418.,  6481.,  6544.,  3104.,  3136.,  3168.,  3200.,  3806.,  3868.,  3930.,  3992.,  4054.,  4116.,  4178.,  4240.,  7726.,  7852.,  7978.,  8104.,  8230.,  8356.,  8482.,  8608.,  8734.,  8860.,  8986.,  9112.,  4192.,  4256.,  4320.,  4384.,  7986.,  8116.,  8246.,  8376.,  8506.,  8636.,  8766.,  8896.,  9026.,  9156.,  9286.,  9416.,  4330.,  4396.,  4462.,  4528.,  8246.,  8380.,  8514.,  8648.,  8782.,  8916.,  9050.,  9184.,  9318.,  9452.,  9586.,  9720.,  4468.,  4536.,  4604.,  4672.,  5542.,  5604.,  5666.,  5728.,  5790.,  5852.,  5914.,  5976., 11254., 11380., 11506., 11632., 11758., 11884., 12010., 12136., 12262., 12388., 12514., 12640.,  5984.,  6048.,  6112.,  6176., 11626., 11756., 11886., 12016., 12146., 12276., 12406., 12536., 12666., 12796., 12926., 13056.,  6178.,  6244.,  6310.,  6376., 11998., 12132., 12266., 12400., 12534., 12668., 12802., 12936., 13070., 13204., 13338., 13472.,  6372.,  6440.,  6508.,  6576.,  7278.,  7340.,  7402.,  7464.,  7526.,  7588.,  7650.,  7712., 14782., 14908., 15034., 15160., 15286., 15412., 15538., 15664., 15790., 15916., 16042., 16168.,  7776.,  7840.,  7904.,  7968., 15266., 15396., 15526., 15656., 15786., 15916., 16046., 16176., 16306., 16436., 16566., 16696.,  8026.,  8092.,  8158.,  8224., 15750., 15884., 16018., 16152., 16286., 16420., 16554., 16688., 16822., 16956., 17090., 17224.,  8276.,  8344.,  8412.,  8480.,  3069.,  3102.,  3135.,  3168.,  3201.,  3234.,  3267.,  3300.,  6223.,  6290.,  6357.,  6424.,  6491.,  6558.,  6625.,  6692.,  6759.,  6826.,  6893.,  6960.,  3298.,  3332.,  3366.,  3400.,  6409.,  6478.,  6547.,  6616.,  6685.,  6754.,  6823.,  6892.,  6961.,  7030.,  7099.,  7168.,  3395.,  3430.,  3465.,  3500.,  6595.,  6666.,  6737.,  6808.,  6879.,  6950.,  7021.,  7092.,  7163.,  7234.,  7305.,  7376.,  3492.,  3528.,  3564.,  3600.,  3993.,  4026.,  4059.,  4092.,  4125.,  4158.,  4191.,  4224.,  8099.,  8166.,  8233.,  8300.,  8367.,  8434.,  8501.,  8568.,  8635.,  8702.,  8769.,  8836.,  4250.,  4284.,  4318.,  4352.,  8341.,  8410.,  8479.,  8548.,  8617.,  8686.,  8755.,  8824.,  8893.,  8962.,  9031.,  9100.,  4375.,  4410.,  4445.,  4480.,  8583.,  8654.,  8725.,  8796.,  8867.,  8938.,  9009.,  9080.,  9151.,  9222.,  9293.,  9364.,  4500.,  4536.,  4572.,  4608.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x14x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,    9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   19.,   22.,   25.,   28.,   31.,   34.,   37.,   40.,   43.,   46.,   49.,   52.,   26.,   28.,   30.,   32.,   34.,   36.,   38.,   40.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,  103.,  106.,  109.,  112.,  115.,  118.,  121.,  124.,  127.,  130.,  133.,  136.,   82.,   84.,   86.,   88.,   90.,   92.,   94.,   96.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,   57.,   58.,   59.,   60.,   61.,   62.,   63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  146.,  148.,  150.,  152.,  154.,  156.,  158.,  160.,  162.,  164.,  166.,  168.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,   85.,   86.,   87.,   88.,   89.,   90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  202.,  204.,  206.,  208.,  210.,  212.,  214.,  216.,  218.,  220.,  222.,  224.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  148.,  152.,  156.,  160.,  164.,  168.,  172.,  176.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  302.,  308.,  314.,  320.,  326.,  332.,  338.,  344.,  350.,  356.,  362.,  368.,  374.,  380.,  386.,  392.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  228.,  232.,  236.,  240.,  244.,  248.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,  284.,  288.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  470.,  476.,  482.,  488.,  494.,  500.,  506.,  512.,  518.,  524.,  530.,  536.,  542.,  548.,  554.,  560.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  340.,  344.,  348.,  352.,  356.,  360.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,  396.,  400.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080.,  638.,  644.,  650.,  656.,  662.,  668.,  674.,  680.,  686.,  692.,  698.,  704.,  710.,  716.,  722.,  728.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  279.,  282.,  285.,  288.,  291.,  294.,  297.,  300.,  643.,  650.,  657.,  664.,  671.,  678.,  685.,  692.,  699.,  706.,  713.,  720.,  388.,  392.,  396.,  400.,  404.,  408.,  412.,  416.,  420.,  424.,  428.,  432.,  436.,  440.,  444.,  448.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  339.,  342.,  345.,  348.,  351.,  354.,  357.,  360.,  363.,  366.,  369.,  372.,  375.,  378.,  381.,  384.,  839.,  846.,  853.,  860.,  867.,  874.,  881.,  888.,  895.,  902.,  909.,  916.,  500.,  504.,  508.,  512.,  516.,  520.,  524.,  528.,  532.,  536.,  540.,  544.,  548.,  552.,  556.,  560.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  423.,  426.,  429.,  432.,  435.,  438.,  441.,  444.,  447.,  450.,  453.,  456.,  459.,  462.,  465.,  468., 1035., 1042., 1049., 1056., 1063., 1070., 1077., 1084., 1091., 1098., 1105., 1112.,  612.,  616.,  620.,  624.,  628.,  632.,  636.,  640.,  644.,  648.,  652.,  656.,  660.,  664.,  668.,  672.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  507.,  510.,  513.,  516.,  519.,  522.,  525.,  528.,  531.,  534.,  537.,  540.,  543.,  546.,  549.,  552., 1231., 1238., 1245., 1252., 1259., 1266., 1273., 1280., 1287., 1294., 1301., 1308.,  724.,  728.,  732.,  736.,  740.,  744.,  748.,  752.,  756.,  760.,  764.,  768.,  772.,  776.,  780.,  784.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    5.,   10.,   15.,   20.,   25.,   30.,   35.,   40.,   45.,   50.,   55.,   60.,   65.,   70.,   75.,   80.,   91.,  102.,  113.,  124.,  135.,  146.,  157.,  168.,  179.,  190.,  201.,  212.,   78.,   84.,   90.,   96.,  102.,  108.,  114.,  120.,  126.,  132.,  138.,  144.,  150.,  156.,  162.,  168.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  145.,  150.,  155.,  160.,  165.,  170.,  175.,  180.,  185.,  190.,  195.,  200.,  205.,  210.,  215.,  220.,  399.,  410.,  421.,  432.,  443.,  454.,  465.,  476.,  487.,  498.,  509.,  520.,  246.,  252.,  258.,  264.,  270.,  276.,  282.,  288.,  294.,  300.,  306.,  312.,  318.,  324.,  330.,  336.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  285.,  290.,  295.,  300.,  305.,  310.,  315.,  320.,  325.,  330.,  335.,  340.,  345.,  350.,  355.,  360.,  707.,  718.,  729.,  740.,  751.,  762.,  773.,  784.,  795.,  806.,  817.,  828.,  414.,  420.,  426.,  432.,  438.,  444.,  450.,  456.,  462.,  468.,  474.,  480.,  486.,  492.,  498.,  504.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  425.,  430.,  435.,  440.,  445.,  450.,  455.,  460.,  465.,  470.,  475.,  480.,  485.,  490.,  495.,  500., 1015., 1026., 1037., 1048., 1059., 1070., 1081., 1092., 1103., 1114., 1125., 1136.,  582.,  588.,  594.,  600.,  606.,  612.,  618.,  624.,  630.,  636.,  642.,  648.,  654.,  660.,  666.,  672.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  572.,  584.,  596.,  608.,  620.,  632.,  644.,  656.,  668.,  680.,  692.,  704.,  716.,  728.,  740.,  752., 1450., 1476., 1502., 1528., 1554., 1580., 1606., 1632., 1658., 1684., 1710., 1736.,  854.,  868.,  882.,  896.,  910.,  924.,  938.,  952.,  966.,  980.,  994., 1008., 1022., 1036., 1050., 1064.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  908.,  920.,  932.,  944.,  956.,  968.,  980.,  992., 1004., 1016., 1028., 1040., 1052., 1064., 1076., 1088., 2178., 2204., 2230., 2256., 2282., 2308., 2334., 2360., 2386., 2412., 2438., 2464., 1246., 1260., 1274., 1288., 1302., 1316., 1330., 1344., 1358., 1372., 1386., 1400., 1414., 1428., 1442., 1456.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1244., 1256., 1268., 1280., 1292., 1304., 1316., 1328., 1340., 1352., 1364., 1376., 1388., 1400., 1412., 1424., 2906., 2932., 2958., 2984., 3010., 3036., 3062., 3088., 3114., 3140., 3166., 3192., 1638., 1652., 1666., 1680., 1694., 1708., 1722., 1736., 1750., 1764., 1778., 1792., 1806., 1820., 1834., 1848.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  595.,  602.,  609.,  616.,  623.,  630.,  637.,  644.,  651.,  658.,  665.,  672.,  679.,  686.,  693.,  700., 1387., 1402., 1417., 1432., 1447., 1462., 1477., 1492., 1507., 1522., 1537., 1552.,  776.,  784.,  792.,  800.,  808.,  816.,  824.,  832.,  840.,  848.,  856.,  864.,  872.,  880.,  888.,  896.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  791.,  798.,  805.,  812.,  819.,  826.,  833.,  840.,  847.,  854.,  861.,  868.,  875.,  882.,  889.,  896., 1807., 1822., 1837., 1852., 1867., 1882., 1897., 1912., 1927., 1942., 1957., 1972., 1000., 1008., 1016., 1024., 1032., 1040., 1048., 1056., 1064., 1072., 1080., 1088., 1096., 1104., 1112., 1120.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  987.,  994., 1001., 1008., 1015., 1022., 1029., 1036., 1043., 1050., 1057., 1064., 1071., 1078., 1085., 1092., 2227., 2242., 2257., 2272., 2287., 2302., 2317., 2332., 2347., 2362., 2377., 2392., 1224., 1232., 1240., 1248., 1256., 1264., 1272., 1280., 1288., 1296., 1304., 1312., 1320., 1328., 1336., 1344.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1183., 1190., 1197., 1204., 1211., 1218., 1225., 1232., 1239., 1246., 1253., 1260., 1267., 1274., 1281., 1288., 2647., 2662., 2677., 2692., 2707., 2722., 2737., 2752., 2767., 2782., 2797., 2812., 1448., 1456., 1464., 1472., 1480., 1488., 1496., 1504., 1512., 1520., 1528., 1536., 1544., 1552., 1560., 1568.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    9.,   18.,   27.,   36.,   45.,   54.,   63.,   72.,   81.,   90.,   99.,  108.,  117.,  126.,  135.,  144.,  163.,  182.,  201.,  220.,  239.,  258.,  277.,  296.,  315.,  334.,  353.,  372.,  130.,  140.,  150.,  160.,  170.,  180.,  190.,  200.,  210.,  220.,  230.,  240.,  250.,  260.,  270.,  280.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  261.,  270.,  279.,  288.,  297.,  306.,  315.,  324.,  333.,  342.,  351.,  360.,  369.,  378.,  387.,  396.,  695.,  714.,  733.,  752.,  771.,  790.,  809.,  828.,  847.,  866.,  885.,  904.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  530.,  540.,  550.,  560.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  513.,  522.,  531.,  540.,  549.,  558.,  567.,  576.,  585.,  594.,  603.,  612.,  621.,  630.,  639.,  648., 1227., 1246., 1265., 1284., 1303., 1322., 1341., 1360., 1379., 1398., 1417., 1436.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  810.,  820.,  830.,  840.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  765.,  774.,  783.,  792.,  801.,  810.,  819.,  828.,  837.,  846.,  855.,  864.,  873.,  882.,  891.,  900., 1759., 1778., 1797., 1816., 1835., 1854., 1873., 1892., 1911., 1930., 1949., 1968.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080., 1090., 1100., 1110., 1120.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1028., 1048., 1068., 1088., 1108., 1128., 1148., 1168., 1188., 1208., 1228., 1248., 1268., 1288., 1308., 1328., 2490., 2532., 2574., 2616., 2658., 2700., 2742., 2784., 2826., 2868., 2910., 2952., 1406., 1428., 1450., 1472., 1494., 1516., 1538., 1560., 1582., 1604., 1626., 1648., 1670., 1692., 1714., 1736.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1588., 1608., 1628., 1648., 1668., 1688., 1708., 1728., 1748., 1768., 1788., 1808., 1828., 1848., 1868., 1888., 3666., 3708., 3750., 3792., 3834., 3876., 3918., 3960., 4002., 4044., 4086., 4128., 2022., 2044., 2066., 2088., 2110., 2132., 2154., 2176., 2198., 2220., 2242., 2264., 2286., 2308., 2330., 2352.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 2148., 2168., 2188., 2208., 2228., 2248., 2268., 2288., 2308., 2328., 2348., 2368., 2388., 2408., 2428., 2448., 4842., 4884., 4926., 4968., 5010., 5052., 5094., 5136., 5178., 5220., 5262., 5304., 2638., 2660., 2682., 2704., 2726., 2748., 2770., 2792., 2814., 2836., 2858., 2880., 2902., 2924., 2946., 2968.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  935.,  946.,  957.,  968.,  979.,  990., 1001., 1012., 1023., 1034., 1045., 1056., 1067., 1078., 1089., 1100., 2131., 2154., 2177., 2200., 2223., 2246., 2269., 2292., 2315., 2338., 2361., 2384., 1164., 1176., 1188., 1200., 1212., 1224., 1236., 1248., 1260., 1272., 1284., 1296., 1308., 1320., 1332., 1344.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1243., 1254., 1265., 1276., 1287., 1298., 1309., 1320., 1331., 1342., 1353., 1364., 1375., 1386., 1397., 1408., 2775., 2798., 2821., 2844., 2867., 2890., 2913., 2936., 2959., 2982., 3005., 3028., 1500., 1512., 1524., 1536., 1548., 1560., 1572., 1584., 1596., 1608., 1620., 1632., 1644., 1656., 1668., 1680.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1551., 1562., 1573., 1584., 1595., 1606., 1617., 1628., 1639., 1650., 1661., 1672., 1683., 1694., 1705., 1716., 3419., 3442., 3465., 3488., 3511., 3534., 3557., 3580., 3603., 3626., 3649., 3672., 1836., 1848., 1860., 1872., 1884., 1896., 1908., 1920., 1932., 1944., 1956., 1968., 1980., 1992., 2004., 2016.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1859., 1870., 1881., 1892., 1903., 1914., 1925., 1936., 1947., 1958., 1969., 1980., 1991., 2002., 2013., 2024., 4063., 4086., 4109., 4132., 4155., 4178., 4201., 4224., 4247., 4270., 4293., 4316., 2172., 2184., 2196., 2208., 2220., 2232., 2244., 2256., 2268., 2280., 2292., 2304., 2316., 2328., 2340., 2352.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x14x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   29.,    35.,    41.,    47.,    53.,    59.,    65.,    71.,   480.,   500.,   520.,   540.,   112.,   132.,   152.,   172.,   192.,   212.,   232.,   252.,   123.,   137.,   151.,   165.,   812.,   848.,   884.,   920.,   252.,   288.,   324.,   360.,   396.,   432.,   468.,   504.,   193.,   215.,   237.,   259.,  1144.,  1196.,  1248.,  1300.,   392.,   444.,   496.,   548.,   600.,   652.,   704.,   756.,   263.,   293.,   323.,   353.,     5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,   400.,   420.,   440.,   460.,   480.,   500.,   520.,   540.,   112.,   132.,   152.,   172.,    67.,    81.,    95.,   109.,   668.,   704.,   740.,   776.,   812.,   848.,   884.,   920.,   252.,   288.,   324.,   360.,   105.,   127.,   149.,   171.,   936.,   988.,  1040.,  1092.,  1144.,  1196.,  1248.,  1300.,   392.,   444.,   496.,   548.,   143.,   173.,   203.,   233.,   173.,   179.,   185.,   191.,     5.,    11.,    17.,    23.,   320.,   340.,   360.,   380.,   400.,   420.,   440.,   460.,   480.,   500.,   520.,   540.,    11.,    25.,    39.,    53.,   524.,   560.,   596.,   632.,   668.,   704.,   740.,   776.,   812.,   848.,   884.,   920.,    17.,    39.,    61.,    83.,   728.,   780.,   832.,   884.,   936.,   988.,  1040.,  1092.,  1144.,  1196.,  1248.,  1300.,    23.,    53.,    83.,   113.,   482.,   526.,   570.,   614.,   658.,   702.,   746.,   790.,   912.,  1016.,  1120.,  1224.,  1328.,  1432.,  1536.,  1640.,  1744.,  1848.,  1952.,  2056.,   990.,  1050.,  1110.,  1170.,  1192.,  1328.,  1464.,  1600.,  1736.,  1872.,  2008.,  2144.,  2280.,  2416.,  2552.,  2688.,  1322.,  1398.,  1474.,  1550.,  1472.,  1640.,  1808.,  1976.,  2144.,  2312.,  2480.,  2648.,  2816.,  2984.,  3152.,  3320.,  1654.,  1746.,  1838.,  1930.,   306.,   350.,   394.,   438.,   482.,   526.,   570.,   614.,  2160.,  2264.,  2368.,  2472.,   912.,  1016.,  1120.,  1224.,  1328.,  1432.,  1536.,  1640.,   750.,   810.,   870.,   930.,  2824.,  2960.,  3096.,  3232.,  1192.,  1328.,  1464.,  1600.,  1736.,  1872.,  2008.,  2144.,  1018.,  1094.,  1170.,  1246.,  3488.,  3656.,  3824.,  3992.,  1472.,  1640.,  1808.,  1976.,  2144.,  2312.,  2480.,  2648.,  1286.,  1378.,  1470.,  1562.,   130.,   174.,   218.,   262.,   306.,   350.,   394.,   438.,  1744.,  1848.,  1952.,  2056.,  2160.,  2264.,  2368.,  2472.,   912.,  1016.,  1120.,  1224.,   510.,   570.,   630.,   690.,  2280.,  2416.,  2552.,  2688.,  2824.,  2960.,  3096.,  3232.,  1192.,  1328.,  1464.,  1600.,   714.,   790.,   866.,   942.,  2816.,  2984.,  3152.,  3320.,  3488.,  3656.,  3824.,  3992.,  1472.,  1640.,  1808.,  1976.,   918.,  1010.,  1102.,  1194.,  1093.,  1131.,  1169.,  1207.,    29.,    67.,   105.,   143.,  1136.,  1220.,  1304.,  1388.,  1472.,  1556.,  1640.,  1724.,  1808.,  1892.,  1976.,  2060.,    35.,    81.,   127.,   173.,  1340.,  1440.,  1540.,  1640.,  1740.,  1840.,  1940.,  2040.,  2140.,  2240.,  2340.,  2440.,    41.,    95.,   149.,   203.,  1544.,  1660.,  1776.,  1892.,  2008.,  2124.,  2240.,  2356.,  2472.,  2588.,  2704.,  2820.,    47.,   109.,   171.,   233.,  1554.,  1662.,  1770.,  1878.,  1986.,  2094.,  2202.,  2310.,  2032.,  2264.,  2496.,  2728.,  2960.,  3192.,  3424.,  3656.,  3888.,  4120.,  4352.,  4584.,  2318.,  2442.,  2566.,  2690.,  2312.,  2576.,  2840.,  3104.,  3368.,  3632.,  3896.,  4160.,  4424.,  4688.,  4952.,  5216.,  2650.,  2790.,  2930.,  3070.,  2592.,  2888.,  3184.,  3480.,  3776.,  4072.,  4368.,  4664.,  4960.,  5256.,  5552.,  5848.,  2982.,  3138.,  3294.,  3450.,  1122.,  1230.,  1338.,  1446.,  1554.,  1662.,  1770.,  1878.,  4816.,  5048.,  5280.,  5512.,  2032.,  2264.,  2496.,  2728.,  2960.,  3192.,  3424.,  3656.,  1822.,  1946.,  2070.,  2194.,  5480.,  5744.,  6008.,  6272.,  2312.,  2576.,  2840.,  3104.,  3368.,  3632.,  3896.,  4160.,  2090.,  2230.,  2370.,  2510.,  6144.,  6440.,  6736.,  7032.,  2592.,  2888.,  3184.,  3480.,  3776.,  4072.,  4368.,  4664.,  2358.,  2514.,  2670.,  2826.,   690.,   798.,   906.,  1014.,  1122.,  1230.,  1338.,  1446.,  3888.,  4120.,  4352.,  4584.,  4816.,  5048.,  5280.,  5512.,  2032.,  2264.,  2496.,  2728.,  1326.,  1450.,  1574.,  1698.,  4424.,  4688.,  4952.,  5216.,  5480.,  5744.,  6008.,  6272.,  2312.,  2576.,  2840.,  3104.,  1530.,  1670.,  1810.,  1950.,  4960.,  5256.,  5552.,  5848.,  6144.,  6440.,  6736.,  7032.,  2592.,  2888.,  3184.,  3480.,  1734.,  1890.,  2046.,  2202.,  2013.,  2083.,  2153.,  2223.,    53.,   123.,   193.,   263.,  1952.,  2100.,  2248.,  2396.,  2544.,  2692.,  2840.,  2988.,  3136.,  3284.,  3432.,  3580.,    59.,   137.,   215.,   293.,  2156.,  2320.,  2484.,  2648.,  2812.,  2976.,  3140.,  3304.,  3468.,  3632.,  3796.,  3960.,    65.,   151.,   237.,   323.,  2360.,  2540.,  2720.,  2900.,  3080.,  3260.,  3440.,  3620.,  3800.,  3980.,  4160.,  4340.,    71.,   165.,   259.,   353.,  1733.,  1803.,  1873.,  1943.,  2013.,  2083.,  2153.,  2223.,  1360.,  1508.,  1656.,  1804.,  1952.,  2100.,  2248.,  2396.,  2544.,  2692.,  2840.,  2988.,  2243.,  2321.,  2399.,  2477.,  1500.,  1664.,  1828.,  1992.,  2156.,  2320.,  2484.,  2648.,  2812.,  2976.,  3140.,  3304.,  2473.,  2559.,  2645.,  2731.,  1640.,  1820.,  2000.,  2180.,  2360.,  2540.,  2720.,  2900.,  3080.,  3260.,  3440.,  3620.,  2703.,  2797.,  2891.,  2985.,   485.,   587.,   689.,   791.,   893.,   995.,  1097.,  1199.,  4464.,  4676.,  4888.,  5100.,  1792.,  2004.,  2216.,  2428.,  2640.,  2852.,  3064.,  3276.,   963.,  1073.,  1183.,  1293.,  4796.,  5024.,  5252.,  5480.,  1932.,  2160.,  2388.,  2616.,  2844.,  3072.,  3300.,  3528.,  1033.,  1151.,  1269.,  1387.,  5128.,  5372.,  5616.,  5860.,  2072.,  2316.,  2560.,  2804.,  3048.,  3292.,  3536.,  3780.,  1103.,  1229.,  1355.,  1481.,    77.,   179.,   281.,   383.,   485.,   587.,   689.,   791.,  3616.,  3828.,  4040.,  4252.,  4464.,  4676.,  4888.,  5100.,  1792.,  2004.,  2216.,  2428.,   523.,   633.,   743.,   853.,  3884.,  4112.,  4340.,  4568.,  4796.,  5024.,  5252.,  5480.,  1932.,  2160.,  2388.,  2616.,   561.,   679.,   797.,   915.,  4152.,  4396.,  4640.,  4884.,  5128.,  5372.,  5616.,  5860.,  2072.,  2316.,  2560.,  2804.,   599.,   725.,   851.,   977.,  2933.,  3035.,  3137.,  3239.,    77.,   179.,   281.,   383.,  2768.,  2980.,  3192.,  3404.,  3616.,  3828.,  4040.,  4252.,  4464.,  4676.,  4888.,  5100.,    83.,   193.,   303.,   413.,  2972.,  3200.,  3428.,  3656.,  3884.,  4112.,  4340.,  4568.,  4796.,  5024.,  5252.,  5480.,    89.,   207.,   325.,   443.,  3176.,  3420.,  3664.,  3908.,  4152.,  4396.,  4640.,  4884.,  5128.,  5372.,  5616.,  5860.,    95.,   221.,   347.,   473.,  3698.,  3934.,  4170.,  4406.,  4642.,  4878.,  5114.,  5350.,  4272.,  4760.,  5248.,  5736.,  6224.,  6712.,  7200.,  7688.,  8176.,  8664.,  9152.,  9640.,  4974.,  5226.,  5478.,  5730.,  4552.,  5072.,  5592.,  6112.,  6632.,  7152.,  7672.,  8192.,  8712.,  9232.,  9752., 10272.,  5306.,  5574.,  5842.,  6110.,  4832.,  5384.,  5936.,  6488.,  7040.,  7592.,  8144.,  8696.,  9248.,  9800., 10352., 10904.,  5638.,  5922.,  6206.,  6490.,  2754.,  2990.,  3226.,  3462.,  3698.,  3934.,  4170.,  4406., 10128., 10616., 11104., 11592.,  4272.,  4760.,  5248.,  5736.,  6224.,  6712.,  7200.,  7688.,  3966.,  4218.,  4470.,  4722., 10792., 11312., 11832., 12352.,  4552.,  5072.,  5592.,  6112.,  6632.,  7152.,  7672.,  8192.,  4234.,  4502.,  4770.,  5038., 11456., 12008., 12560., 13112.,  4832.,  5384.,  5936.,  6488.,  7040.,  7592.,  8144.,  8696.,  4502.,  4786.,  5070.,  5354.,  1810.,  2046.,  2282.,  2518.,  2754.,  2990.,  3226.,  3462.,  8176.,  8664.,  9152.,  9640., 10128., 10616., 11104., 11592.,  4272.,  4760.,  5248.,  5736.,  2958.,  3210.,  3462.,  3714.,  8712.,  9232.,  9752., 10272., 10792., 11312., 11832., 12352.,  4552.,  5072.,  5592.,  6112.,  3162.,  3430.,  3698.,  3966.,  9248.,  9800., 10352., 10904., 11456., 12008., 12560., 13112.,  4832.,  5384.,  5936.,  6488.,  3366.,  3650.,  3934.,  4218.,  3853.,  3987.,  4121.,  4255.,   101.,   235.,   369.,   503.,  3584.,  3860.,  4136.,  4412.,  4688.,  4964.,  5240.,  5516.,  5792.,  6068.,  6344.,  6620.,   107.,   249.,   391.,   533.,  3788.,  4080.,  4372.,  4664.,  4956.,  5248.,  5540.,  5832.,  6124.,  6416.,  6708.,  7000.,   113.,   263.,   413.,   563.,  3992.,  4300.,  4608.,  4916.,  5224.,  5532.,  5840.,  6148.,  6456.,  6764.,  7072.,  7380.,   119.,   277.,   435.,   593.,  4770.,  5070.,  5370.,  5670.,  5970.,  6270.,  6570.,  6870.,  5392.,  6008.,  6624.,  7240.,  7856.,  8472.,  9088.,  9704., 10320., 10936., 11552., 12168.,  6302.,  6618.,  6934.,  7250.,  5672.,  6320.,  6968.,  7616.,  8264.,  8912.,  9560., 10208., 10856., 11504., 12152., 12800.,  6634.,  6966.,  7298.,  7630.,  5952.,  6632.,  7312.,  7992.,  8672.,  9352., 10032., 10712., 11392., 12072., 12752., 13432.,  6966.,  7314.,  7662.,  8010.,  3570.,  3870.,  4170.,  4470.,  4770.,  5070.,  5370.,  5670., 12784., 13400., 14016., 14632.,  5392.,  6008.,  6624.,  7240.,  7856.,  8472.,  9088.,  9704.,  5038.,  5354.,  5670.,  5986., 13448., 14096., 14744., 15392.,  5672.,  6320.,  6968.,  7616.,  8264.,  8912.,  9560., 10208.,  5306.,  5638.,  5970.,  6302., 14112., 14792., 15472., 16152.,  5952.,  6632.,  7312.,  7992.,  8672.,  9352., 10032., 10712.,  5574.,  5922.,  6270.,  6618.,  2370.,  2670.,  2970.,  3270.,  3570.,  3870.,  4170.,  4470., 10320., 10936., 11552., 12168., 12784., 13400., 14016., 14632.,  5392.,  6008.,  6624.,  7240.,  3774.,  4090.,  4406.,  4722., 10856., 11504., 12152., 12800., 13448., 14096., 14744., 15392.,  5672.,  6320.,  6968.,  7616.,  3978.,  4310.,  4642.,  4974., 11392., 12072., 12752., 13432., 14112., 14792., 15472., 16152.,  5952.,  6632.,  7312.,  7992.,  4182.,  4530.,  4878.,  5226.,  4773.,  4939.,  5105.,  5271.,   125.,   291.,   457.,   623.,  4400.,  4740.,  5080.,  5420.,  5760.,  6100.,  6440.,  6780.,  7120.,  7460.,  7800.,  8140.,   131.,   305.,   479.,   653.,  4604.,  4960.,  5316.,  5672.,  6028.,  6384.,  6740.,  7096.,  7452.,  7808.,  8164.,  8520.,   137.,   319.,   501.,   683.,  4808.,  5180.,  5552.,  5924.,  6296.,  6668.,  7040.,  7412.,  7784.,  8156.,  8528.,  8900.,   143.,   333.,   523.,   713.,  4109.,  4275.,  4441.,  4607.,  4773.,  4939.,  5105.,  5271.,  3040.,  3380.,  3720.,  4060.,  4400.,  4740.,  5080.,  5420.,  5760.,  6100.,  6440.,  6780.,  5003.,  5177.,  5351.,  5525.,  3180.,  3536.,  3892.,  4248.,  4604.,  4960.,  5316.,  5672.,  6028.,  6384.,  6740.,  7096.,  5233.,  5415.,  5597.,  5779.,  3320.,  3692.,  4064.,  4436.,  4808.,  5180.,  5552.,  5924.,  6296.,  6668.,  7040.,  7412.,  5463.,  5653.,  5843.,  6033.,   941.,  1139.,  1337.,  1535.,  1733.,  1931.,  2129.,  2327.,  8448.,  8852.,  9256.,  9660.,  3472.,  3876.,  4280.,  4684.,  5088.,  5492.,  5896.,  6300.,  1803.,  2009.,  2215.,  2421.,  8780.,  9200.,  9620., 10040.,  3612.,  4032.,  4452.,  4872.,  5292.,  5712.,  6132.,  6552.,  1873.,  2087.,  2301.,  2515.,  9112.,  9548.,  9984., 10420.,  3752.,  4188.,  4624.,  5060.,  5496.,  5932.,  6368.,  6804.,  1943.,  2165.,  2387.,  2609.,   149.,   347.,   545.,   743.,   941.,  1139.,  1337.,  1535.,  6832.,  7236.,  7640.,  8044.,  8448.,  8852.,  9256.,  9660.,  3472.,  3876.,  4280.,  4684.,   979.,  1185.,  1391.,  1597.,  7100.,  7520.,  7940.,  8360.,  8780.,  9200.,  9620., 10040.,  3612.,  4032.,  4452.,  4872.,  1017.,  1231.,  1445.,  1659.,  7368.,  7804.,  8240.,  8676.,  9112.,  9548.,  9984., 10420.,  3752.,  4188.,  4624.,  5060.,  1055.,  1277.,  1499.,  1721.,  5693.,  5891.,  6089.,  6287.,   149.,   347.,   545.,   743.,  5216.,  5620.,  6024.,  6428.,  6832.,  7236.,  7640.,  8044.,  8448.,  8852.,  9256.,  9660.,   155.,   361.,   567.,   773.,  5420.,  5840.,  6260.,  6680.,  7100.,  7520.,  7940.,  8360.,  8780.,  9200.,  9620., 10040.,   161.,   375.,   589.,   803.,  5624.,  6060.,  6496.,  6932.,  7368.,  7804.,  8240.,  8676.,  9112.,  9548.,  9984., 10420.,   167.,   389.,   611.,   833.,  6914.,  7342.,  7770.,  8198.,  8626.,  9054.,  9482.,  9910.,  7632.,  8504.,  9376., 10248., 11120., 11992., 12864., 13736., 14608., 15480., 16352., 17224.,  8958.,  9402.,  9846., 10290.,  7912.,  8816.,  9720., 10624., 11528., 12432., 13336., 14240., 15144., 16048., 16952., 17856.,  9290.,  9750., 10210., 10670.,  8192.,  9128., 10064., 11000., 11936., 12872., 13808., 14744., 15680., 16616., 17552., 18488.,  9622., 10098., 10574., 11050.,  5202.,  5630.,  6058.,  6486.,  6914.,  7342.,  7770.,  8198., 18096., 18968., 19840., 20712.,  7632.,  8504.,  9376., 10248., 11120., 11992., 12864., 13736.,  7182.,  7626.,  8070.,  8514., 18760., 19664., 20568., 21472.,  7912.,  8816.,  9720., 10624., 11528., 12432., 13336., 14240.,  7450.,  7910.,  8370.,  8830., 19424., 20360., 21296., 22232.,  8192.,  9128., 10064., 11000., 11936., 12872., 13808., 14744.,  7718.,  8194.,  8670.,  9146.,  3490.,  3918.,  4346.,  4774.,  5202.,  5630.,  6058.,  6486., 14608., 15480., 16352., 17224., 18096., 18968., 19840., 20712.,  7632.,  8504.,  9376., 10248.,  5406.,  5850.,  6294.,  6738., 15144., 16048., 16952., 17856., 18760., 19664., 20568., 21472.,  7912.,  8816.,  9720., 10624.,  5610.,  6070.,  6530.,  6990., 15680., 16616., 17552., 18488., 19424., 20360., 21296., 22232.,  8192.,  9128., 10064., 11000.,  5814.,  6290.,  6766.,  7242.,  6613.,  6843.,  7073.,  7303.,   173.,   403.,   633.,   863.,  6032.,  6500.,  6968.,  7436.,  7904.,  8372.,  8840.,  9308.,  9776., 10244., 10712., 11180.,   179.,   417.,   655.,   893.,  6236.,  6720.,  7204.,  7688.,  8172.,  8656.,  9140.,  9624., 10108., 10592., 11076., 11560.,   185.,   431.,   677.,   923.,  6440.,  6940.,  7440.,  7940.,  8440.,  8940.,  9440.,  9940., 10440., 10940., 11440., 11940.,   191.,   445.,   699.,   953.,  5746.,  5982.,  6218.,  6454.,  6690.,  6926.,  7162.,  7398.,  4272.,  4760.,  5248.,  5736.,  6224.,  6712.,  7200.,  7688.,  8176.,  8664.,  9152.,  9640.,  7022.,  7274.,  7526.,  7778.,  4552.,  5072.,  5592.,  6112.,  6632.,  7152.,  7672.,  8192.,  8712.,  9232.,  9752., 10272.,  7354.,  7622.,  7890.,  8158.,  4832.,  5384.,  5936.,  6488.,  7040.,  7592.,  8144.,  8696.,  9248.,  9800., 10352., 10904.,  7686.,  7970.,  8254.,  8538.,  4802.,  5038.,  5274.,  5510.,  5746.,  5982.,  6218.,  6454., 10128., 10616., 11104., 11592.,  4272.,  4760.,  5248.,  5736.,  6224.,  6712.,  7200.,  7688.,  6014.,  6266.,  6518.,  6770., 10792., 11312., 11832., 12352.,  4552.,  5072.,  5592.,  6112.,  6632.,  7152.,  7672.,  8192.,  6282.,  6550.,  6818.,  7086., 11456., 12008., 12560., 13112.,  4832.,  5384.,  5936.,  6488.,  7040.,  7592.,  8144.,  8696.,  6550.,  6834.,  7118.,  7402.,  3858.,  4094.,  4330.,  4566.,  4802.,  5038.,  5274.,  5510.,  8176.,  8664.,  9152.,  9640., 10128., 10616., 11104., 11592.,  4272.,  4760.,  5248.,  5736.,  5006.,  5258.,  5510.,  5762.,  8712.,  9232.,  9752., 10272., 10792., 11312., 11832., 12352.,  4552.,  5072.,  5592.,  6112.,  5210.,  5478.,  5746.,  6014.,  9248.,  9800., 10352., 10904., 11456., 12008., 12560., 13112.,  4832.,  5384.,  5936.,  6488.,  5414.,  5698.,  5982.,  6266.,   173.,   179.,   185.,   191.,     5.,    11.,    17.,    23.,   320.,   340.,   360.,   380.,   400.,   420.,   440.,   460.,   480.,   500.,   520.,   540.,    11.,    25.,    39.,    53.,   524.,   560.,   596.,   632.,   668.,   704.,   740.,   776.,   812.,   848.,   884.,   920.,    17.,    39.,    61.,    83.,   728.,   780.,   832.,   884.,   936.,   988.,  1040.,  1092.,  1144.,  1196.,  1248.,  1300.,    23.,    53.,    83.,   113.,   149.,   155.,   161.,   167.,   173.,   179.,   185.,   191.,   240.,   260.,   280.,   300.,   320.,   340.,   360.,   380.,   400.,   420.,   440.,   460.,   403.,   417.,   431.,   445.,   380.,   416.,   452.,   488.,   524.,   560.,   596.,   632.,   668.,   704.,   740.,   776.,   633.,   655.,   677.,   699.,   520.,   572.,   624.,   676.,   728.,   780.,   832.,   884.,   936.,   988.,  1040.,  1092.,   863.,   893.,   923.,   953.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x14x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,    53.,    59.,    65.,    71.,    77.,    83.,    89.,    95.,   112.,   132.,   152.,   172.,   192.,   212.,   232.,   252.,   272.,   292.,   312.,   332.,   179.,   193.,   207.,   221.,   235.,   249.,   263.,   277.,   291.,   305.,   319.,   333.,   347.,   361.,   375.,   389.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   173.,   179.,   185.,   191.,   197.,   203.,   209.,   215.,   221.,   227.,   233.,   239.,   245.,   251.,   257.,   263.,   672.,   692.,   712.,   732.,   752.,   772.,   792.,   812.,   832.,   852.,   872.,   892.,   571.,   585.,   599.,   613.,   627.,   641.,   655.,   669.,   683.,   697.,   711.,   725.,   739.,   753.,   767.,   781.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   341.,   347.,   353.,   359.,   365.,   371.,   377.,   383.,   389.,   395.,   401.,   407.,   413.,   419.,   425.,   431.,  1232.,  1252.,  1272.,  1292.,  1312.,  1332.,  1352.,  1372.,  1392.,  1412.,  1432.,  1452.,   963.,   977.,   991.,  1005.,  1019.,  1033.,  1047.,  1061.,  1075.,  1089.,  1103.,  1117.,  1131.,  1145.,  1159.,  1173.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   509.,   515.,   521.,   527.,   533.,   539.,   545.,   551.,   557.,   563.,   569.,   575.,   581.,   587.,   593.,   599.,  1792.,  1812.,  1832.,  1852.,  1872.,  1892.,  1912.,  1932.,  1952.,  1972.,  1992.,  2012.,  1355.,  1369.,  1383.,  1397.,  1411.,  1425.,  1439.,  1453.,  1467.,  1481.,  1495.,  1509.,  1523.,  1537.,  1551.,  1565.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   694.,   722.,   750.,   778.,   806.,   834.,   862.,   890.,   918.,   946.,   974.,  1002.,  1030.,  1058.,  1086.,  1114.,  1976.,  2048.,  2120.,  2192.,  2264.,  2336.,  2408.,  2480.,  2552.,  2624.,  2696.,  2768.,  2130.,  2174.,  2218.,  2262.,   514.,   558.,   602.,   646.,   690.,   734.,   778.,   822.,   866.,   910.,   954.,   998.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   710.,   738.,   766.,   794.,   822.,   850.,   878.,   906.,   934.,   962.,   990.,  1018.,  1046.,  1074.,  1102.,  1130.,  2200.,  2272.,  2344.,  2416.,  2488.,  2560.,  2632.,  2704.,  2776.,  2848.,  2920.,  2992.,  1570.,  1614.,  1658.,  1702.,  1746.,  1790.,  1834.,  1878.,  1922.,  1966.,  2010.,  2054.,  2098.,  2142.,  2186.,  2230.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1494.,  1522.,  1550.,  1578.,  1606.,  1634.,  1662.,  1690.,  1718.,  1746.,  1774.,  1802.,  1830.,  1858.,  1886.,  1914.,  4216.,  4288.,  4360.,  4432.,  4504.,  4576.,  4648.,  4720.,  4792.,  4864.,  4936.,  5008.,  2802.,  2846.,  2890.,  2934.,  2978.,  3022.,  3066.,  3110.,  3154.,  3198.,  3242.,  3286.,  3330.,  3374.,  3418.,  3462.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1865.,  1887.,  1909.,  1931.,  1953.,  1975.,  1997.,  2019.,  2041.,  2063.,  2085.,  2107.,  2129.,  2151.,  2173.,  2195.,  4760.,  4812.,  4864.,  4916.,  4968.,  5020.,  5072.,  5124.,  5176.,  5228.,  5280.,  5332.,  2903.,  2933.,  2963.,  2993.,  3023.,  3053.,  3083.,  3113.,  3143.,  3173.,  3203.,  3233.,  3263.,  3293.,  3323.,  3353.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  2481.,  2503.,  2525.,  2547.,  2569.,  2591.,  2613.,  2635.,  2657.,  2679.,  2701.,  2723.,  2745.,  2767.,  2789.,  2811.,  3400.,  3452.,  3504.,  3556.,  3608.,  3660.,  3712.,  3764.,  3816.,  3868.,  3920.,  3972.,  3743.,  3773.,  3803.,  3833.,    23.,    53.,    83.,   113.,   143.,   173.,   203.,   233.,   263.,   293.,   323.,   353.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   281.,   303.,   325.,   347.,   369.,   391.,   413.,   435.,   457.,   479.,   501.,   523.,   545.,   567.,   589.,   611.,  1016.,  1068.,  1120.,  1172.,  1224.,  1276.,  1328.,  1380.,  1432.,  1484.,  1536.,  1588.,   743.,   773.,   803.,   833.,   863.,   893.,   923.,   953.,   983.,  1013.,  1043.,  1073.,  1103.,  1133.,  1163.,  1193.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   897.,   919.,   941.,   963.,   985.,  1007.,  1029.,  1051.,  1073.,  1095.,  1117.,  1139.,  1161.,  1183.,  1205.,  1227.,  2472.,  2524.,  2576.,  2628.,  2680.,  2732.,  2784.,  2836.,  2888.,  2940.,  2992.,  3044.,  1583.,  1613.,  1643.,  1673.,  1703.,  1733.,  1763.,  1793.,  1823.,  1853.,  1883.,  1913.,  1943.,  1973.,  2003.,  2033.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    29.,    67.,   105.,   143.,   181.,   219.,   257.,   295.,   333.,   371.,   409.,   447.,   485.,   523.,   561.,   599.,   672.,   756.,   840.,   924.,  1008.,  1092.,  1176.,  1260.,  1344.,  1428.,  1512.,  1596.,   587.,   633.,   679.,   725.,   771.,   817.,   863.,   909.,   955.,  1001.,  1047.,  1093.,  1139.,  1185.,  1231.,  1277.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1093.,  1131.,  1169.,  1207.,  1245.,  1283.,  1321.,  1359.,  1397.,  1435.,  1473.,  1511.,  1549.,  1587.,  1625.,  1663.,  3024.,  3108.,  3192.,  3276.,  3360.,  3444.,  3528.,  3612.,  3696.,  3780.,  3864.,  3948.,  1875.,  1921.,  1967.,  2013.,  2059.,  2105.,  2151.,  2197.,  2243.,  2289.,  2335.,  2381.,  2427.,  2473.,  2519.,  2565.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  2157.,  2195.,  2233.,  2271.,  2309.,  2347.,  2385.,  2423.,  2461.,  2499.,  2537.,  2575.,  2613.,  2651.,  2689.,  2727.,  5376.,  5460.,  5544.,  5628.,  5712.,  5796.,  5880.,  5964.,  6048.,  6132.,  6216.,  6300.,  3163.,  3209.,  3255.,  3301.,  3347.,  3393.,  3439.,  3485.,  3531.,  3577.,  3623.,  3669.,  3715.,  3761.,  3807.,  3853.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  3221.,  3259.,  3297.,  3335.,  3373.,  3411.,  3449.,  3487.,  3525.,  3563.,  3601.,  3639.,  3677.,  3715.,  3753.,  3791.,  7728.,  7812.,  7896.,  7980.,  8064.,  8148.,  8232.,  8316.,  8400.,  8484.,  8568.,  8652.,  4451.,  4497.,  4543.,  4589.,  4635.,  4681.,  4727.,  4773.,  4819.,  4865.,  4911.,  4957.,  5003.,  5049.,  5095.,  5141.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  4326.,  4418.,  4510.,  4602.,  4694.,  4786.,  4878.,  4970.,  5062.,  5154.,  5246.,  5338.,  5430.,  5522.,  5614.,  5706.,  6168.,  6368.,  6568.,  6768.,  6968.,  7168.,  7368.,  7568.,  7768.,  7968.,  8168.,  8368.,  6530.,  6638.,  6746.,  6854.,  1074.,  1182.,  1290.,  1398.,  1506.,  1614.,  1722.,  1830.,  1938.,  2046.,  2154.,  2262.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  2038.,  2130.,  2222.,  2314.,  2406.,  2498.,  2590.,  2682.,  2774.,  2866.,  2958.,  3050.,  3142.,  3234.,  3326.,  3418.,  5880.,  6080.,  6280.,  6480.,  6680.,  6880.,  7080.,  7280.,  7480.,  7680.,  7880.,  8080.,  3666.,  3774.,  3882.,  3990.,  4098.,  4206.,  4314.,  4422.,  4530.,  4638.,  4746.,  4854.,  4962.,  5070.,  5178.,  5286.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  4614.,  4706.,  4798.,  4890.,  4982.,  5074.,  5166.,  5258.,  5350.,  5442.,  5534.,  5626.,  5718.,  5810.,  5902.,  5994., 11480., 11680., 11880., 12080., 12280., 12480., 12680., 12880., 13080., 13280., 13480., 13680.,  6690.,  6798.,  6906.,  7014.,  7122.,  7230.,  7338.,  7446.,  7554.,  7662.,  7770.,  7878.,  7986.,  8094.,  8202.,  8310.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  4577.,  4631.,  4685.,  4739.,  4793.,  4847.,  4901.,  4955.,  5009.,  5063.,  5117.,  5171.,  5225.,  5279.,  5333.,  5387., 10696., 10812., 10928., 11044., 11160., 11276., 11392., 11508., 11624., 11740., 11856., 11972.,  5999.,  6061.,  6123.,  6185.,  6247.,  6309.,  6371.,  6433.,  6495.,  6557.,  6619.,  6681.,  6743.,  6805.,  6867.,  6929.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  6089.,  6143.,  6197.,  6251.,  6305.,  6359.,  6413.,  6467.,  6521.,  6575.,  6629.,  6683.,  6737.,  6791.,  6845.,  6899.,  7032.,  7148.,  7264.,  7380.,  7496.,  7612.,  7728.,  7844.,  7960.,  8076.,  8192.,  8308.,  7735.,  7797.,  7859.,  7921.,    47.,   109.,   171.,   233.,   295.,   357.,   419.,   481.,   543.,   605.,   667.,   729.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   689.,   743.,   797.,   851.,   905.,   959.,  1013.,  1067.,  1121.,  1175.,  1229.,  1283.,  1337.,  1391.,  1445.,  1499.,  2344.,  2460.,  2576.,  2692.,  2808.,  2924.,  3040.,  3156.,  3272.,  3388.,  3504.,  3620.,  1535.,  1597.,  1659.,  1721.,  1783.,  1845.,  1907.,  1969.,  2031.,  2093.,  2155.,  2217.,  2279.,  2341.,  2403.,  2465.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  2201.,  2255.,  2309.,  2363.,  2417.,  2471.,  2525.,  2579.,  2633.,  2687.,  2741.,  2795.,  2849.,  2903.,  2957.,  3011.,  5592.,  5708.,  5824.,  5940.,  6056.,  6172.,  6288.,  6404.,  6520.,  6636.,  6752.,  6868.,  3271.,  3333.,  3395.,  3457.,  3519.,  3581.,  3643.,  3705.,  3767.,  3829.,  3891.,  3953.,  4015.,  4077.,  4139.,  4201.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    53.,   123.,   193.,   263.,   333.,   403.,   473.,   543.,   613.,   683.,   753.,   823.,   893.,   963.,  1033.,  1103.,  1232.,  1380.,  1528.,  1676.,  1824.,  1972.,  2120.,  2268.,  2416.,  2564.,  2712.,  2860.,   995.,  1073.,  1151.,  1229.,  1307.,  1385.,  1463.,  1541.,  1619.,  1697.,  1775.,  1853.,  1931.,  2009.,  2087.,  2165.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  2013.,  2083.,  2153.,  2223.,  2293.,  2363.,  2433.,  2503.,  2573.,  2643.,  2713.,  2783.,  2853.,  2923.,  2993.,  3063.,  5376.,  5524.,  5672.,  5820.,  5968.,  6116.,  6264.,  6412.,  6560.,  6708.,  6856.,  7004.,  3179.,  3257.,  3335.,  3413.,  3491.,  3569.,  3647.,  3725.,  3803.,  3881.,  3959.,  4037.,  4115.,  4193.,  4271.,  4349.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  3973.,  4043.,  4113.,  4183.,  4253.,  4323.,  4393.,  4463.,  4533.,  4603.,  4673.,  4743.,  4813.,  4883.,  4953.,  5023.,  9520.,  9668.,  9816.,  9964., 10112., 10260., 10408., 10556., 10704., 10852., 11000., 11148.,  5363.,  5441.,  5519.,  5597.,  5675.,  5753.,  5831.,  5909.,  5987.,  6065.,  6143.,  6221.,  6299.,  6377.,  6455.,  6533.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  5933.,  6003.,  6073.,  6143.,  6213.,  6283.,  6353.,  6423.,  6493.,  6563.,  6633.,  6703.,  6773.,  6843.,  6913.,  6983., 13664., 13812., 13960., 14108., 14256., 14404., 14552., 14700., 14848., 14996., 15144., 15292.,  7547.,  7625.,  7703.,  7781.,  7859.,  7937.,  8015.,  8093.,  8171.,  8249.,  8327.,  8405.,  8483.,  8561.,  8639.,  8717.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  7958.,  8114.,  8270.,  8426.,  8582.,  8738.,  8894.,  9050.,  9206.,  9362.,  9518.,  9674.,  9830.,  9986., 10142., 10298., 10360., 10688., 11016., 11344., 11672., 12000., 12328., 12656., 12984., 13312., 13640., 13968., 10930., 11102., 11274., 11446.,  1634.,  1806.,  1978.,  2150.,  2322.,  2494.,  2666.,  2838.,  3010.,  3182.,  3354.,  3526.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  3366.,  3522.,  3678.,  3834.,  3990.,  4146.,  4302.,  4458.,  4614.,  4770.,  4926.,  5082.,  5238.,  5394.,  5550.,  5706.,  9560.,  9888., 10216., 10544., 10872., 11200., 11528., 11856., 12184., 12512., 12840., 13168.,  5762.,  5934.,  6106.,  6278.,  6450.,  6622.,  6794.,  6966.,  7138.,  7310.,  7482.,  7654.,  7826.,  7998.,  8170.,  8342.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  7734.,  7890.,  8046.,  8202.,  8358.,  8514.,  8670.,  8826.,  8982.,  9138.,  9294.,  9450.,  9606.,  9762.,  9918., 10074., 18744., 19072., 19400., 19728., 20056., 20384., 20712., 21040., 21368., 21696., 22024., 22352., 10578., 10750., 10922., 11094., 11266., 11438., 11610., 11782., 11954., 12126., 12298., 12470., 12642., 12814., 12986., 13158.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  7289.,  7375.,  7461.,  7547.,  7633.,  7719.,  7805.,  7891.,  7977.,  8063.,  8149.,  8235.,  8321.,  8407.,  8493.,  8579., 16632., 16812., 16992., 17172., 17352., 17532., 17712., 17892., 18072., 18252., 18432., 18612.,  9095.,  9189.,  9283.,  9377.,  9471.,  9565.,  9659.,  9753.,  9847.,  9941., 10035., 10129., 10223., 10317., 10411., 10505.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  9697.,  9783.,  9869.,  9955., 10041., 10127., 10213., 10299., 10385., 10471., 10557., 10643., 10729., 10815., 10901., 10987., 10664., 10844., 11024., 11204., 11384., 11564., 11744., 11924., 12104., 12284., 12464., 12644., 11727., 11821., 11915., 12009.,    71.,   165.,   259.,   353.,   447.,   541.,   635.,   729.,   823.,   917.,  1011.,  1105.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1097.,  1183.,  1269.,  1355.,  1441.,  1527.,  1613.,  1699.,  1785.,  1871.,  1957.,  2043.,  2129.,  2215.,  2301.,  2387.,  3672.,  3852.,  4032.,  4212.,  4392.,  4572.,  4752.,  4932.,  5112.,  5292.,  5472.,  5652.,  2327.,  2421.,  2515.,  2609.,  2703.,  2797.,  2891.,  2985.,  3079.,  3173.,  3267.,  3361.,  3455.,  3549.,  3643.,  3737.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  3505.,  3591.,  3677.,  3763.,  3849.,  3935.,  4021.,  4107.,  4193.,  4279.,  4365.,  4451.,  4537.,  4623.,  4709.,  4795.,  8712.,  8892.,  9072.,  9252.,  9432.,  9612.,  9792.,  9972., 10152., 10332., 10512., 10692.,  4959.,  5053.,  5147.,  5241.,  5335.,  5429.,  5523.,  5617.,  5711.,  5805.,  5899.,  5993.,  6087.,  6181.,  6275.,  6369.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x12x14x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  2390.,  2750.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  2390.,  2750.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x12x14x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 12, 14, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x11x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  17.,   18.,   49.,   52.,   55.,   36.,   83.,   88.,   93.,   54.,   57.,   24.,   25.,   70.,   73.,   76.,   50.,  118.,  123.,  128.,   75.,   78.,   43.,   48.,  116.,  128.,  140.,   84.,  184.,  200.,  216.,  120.,  129.,   78.,   83.,  200.,  212.,  224.,  133.,  296.,  312.,  328.,  183.,  192.,  113.,  118.,  284.,  296.,  308.,  182.,  408.,  424.,  440.,  246.,  255.,   96.,  100.,  214.,  223.,  232.,  125.,  262.,  273.,  284.,  150.,  156.,  145.,  156.,  320.,  344.,  368.,  192.,  388.,  416.,  444.,  228.,  243.,  222.,  233.,  488.,  512.,  536.,  283.,  584.,  612.,  640.,  333.,  348.,  299.,  310.,  656.,  680.,  704.,  374.,  780.,  808.,  836.,  438.,  453.,  168.,  175.,  358.,  373.,  388.,  200.,  406.,  423.,  440.,  225.,  234.,  247.,  264.,  524.,  560.,  596.,  300.,  592.,  632.,  672.,  336.,  357.,  366.,  383.,  776.,  812.,  848.,  433.,  872.,  912.,  952.,  483.,  504.,  485.,  502., 1028., 1064., 1100.,  566., 1152., 1192., 1232.,  630.,  651.,  240.,  250.,  502.,  523.,  544.,  275.,  550.,  573.,  596.,  300.,  312.,  221.,  234.,  457.,  484.,  511.,  252.,  491.,  520.,  549.,  270.,  285.,  312.,  325.,  646.,  673.,  700.,  350.,  694.,  723.,  752.,  375.,  390.,  451.,  480.,  932.,  992., 1052.,  516., 1000., 1064., 1128.,  552.,  585.,  654.,  683., 1352., 1412., 1472.,  733., 1448., 1512., 1576.,  783.,  816.,  857.,  886., 1772., 1832., 1892.,  950., 1896., 1960., 2024., 1014., 1047.,  384.,  400.,  790.,  823.,  856.,  425.,  838.,  873.,  908.,  450.,  468.,  553.,  588., 1136., 1208., 1280.,  624., 1204., 1280., 1356.,  660.,  699.,  798.,  833., 1640., 1712., 1784.,  883., 1736., 1812., 1888.,  933.,  972., 1043., 1078., 2144., 2216., 2288., 1142., 2268., 2344., 2420., 1206., 1245.,  456.,  475.,  934.,  973., 1012.,  500.,  982., 1023., 1064.,  525.,  546.,  655.,  696., 1340., 1424., 1508.,  732., 1408., 1496., 1584.,  768.,  813.,  942.,  983., 1928., 2012., 2096., 1033., 2024., 2112., 2200., 1083., 1128., 1229., 1270., 2516., 2600., 2684., 1334., 2640., 2728., 2816., 1398., 1443.,  528.,  550., 1078., 1123., 1168.,  575., 1126., 1173., 1220.,  600.,  624.,  425.,  450.,  865.,  916.,  967.,  468.,  899.,  952., 1005.,  486.,  513.,  600.,  625., 1222., 1273., 1324.,  650., 1270., 1323., 1376.,  675.,  702.,  859.,  912., 1748., 1856., 1964.,  948., 1816., 1928., 2040.,  984., 1041., 1230., 1283., 2504., 2612., 2720., 1333., 2600., 2712., 2824., 1383., 1440., 1601., 1654., 3260., 3368., 3476., 1718., 3384., 3496., 3608., 1782., 1839.,  672.,  700., 1366., 1423., 1480.,  725., 1414., 1473., 1532.,  750.,  780.,  961., 1020., 1952., 2072., 2192., 1056., 2020., 2144., 2268., 1092., 1155., 1374., 1433., 2792., 2912., 3032., 1483., 2888., 3012., 3136., 1533., 1596., 1787., 1846., 3632., 3752., 3872., 1910., 3756., 3880., 4004., 1974., 2037.,  744.,  775., 1510., 1573., 1636.,  800., 1558., 1623., 1688.,  825.,  858., 1063., 1128., 2156., 2288., 2420., 1164., 2224., 2360., 2496., 1200., 1269., 1518., 1583., 3080., 3212., 3344., 1633., 3176., 3312., 3448., 1683., 1752., 1973., 2038., 4004., 4136., 4268., 2102., 4128., 4264., 4400., 2166., 2235.,  816.,  850., 1654., 1723., 1792.,  875., 1702., 1773., 1844.,  900.,  936.};
  const std::array<int, 4> in_shape = {{ 3, 14, 11, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x11x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    7.,   10.,   13.,    8.,   10.,   12.,   14.,    8.,    9.,   10.,   11.,   28.,   31.,   34.,   22.,   24.,   26.,   28.,   15.,   16.,   17.,   18.,   49.,   52.,   55.,   36.,   38.,   40.,   42.,   22.,   23.,   24.,   25.,   70.,   73.,   76.,   50.,   52.,   54.,   56.,   32.,   36.,   40.,   44.,  110.,  120.,  130.,   80.,   86.,   92.,   98.,   60.,   64.,   68.,   72.,  180.,  190.,  200.,  122.,  128.,  134.,  140.,   88.,   92.,   96.,  100.,  250.,  260.,  270.,  164.,  170.,  176.,  182.,   66.,   69.,   72.,   75.,  166.,  173.,  180.,  100.,  104.,  108.,  112.,   87.,   90.,   93.,   96.,  215.,  222.,  229.,  128.,  132.,  136.,  140.,  108.,  111.,  114.,  117.,  264.,  271.,  278.,  156.,  160.,  164.,  168.,  129.,  132.,  135.,  138.,  313.,  320.,  327.,  184.,  188.,  192.,  196.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    5.,   10.,   15.,   20.,   31.,   42.,   53.,   24.,   30.,   36.,   42.,   40.,   45.,   50.,   55.,  108.,  119.,  130.,   66.,   72.,   78.,   84.,   75.,   80.,   85.,   90.,  185.,  196.,  207.,  108.,  114.,  120.,  126.,  110.,  115.,  120.,  125.,  262.,  273.,  284.,  150.,  156.,  162.,  168.,  152.,  164.,  176.,  188.,  382.,  408.,  434.,  224.,  238.,  252.,  266.,  236.,  248.,  260.,  272.,  564.,  590.,  616.,  322.,  336.,  350.,  364.,  320.,  332.,  344.,  356.,  746.,  772.,  798.,  420.,  434.,  448.,  462.,  154.,  161.,  168.,  175.,  358.,  373.,  388.,  200.,  208.,  216.,  224.,  203.,  210.,  217.,  224.,  463.,  478.,  493.,  256.,  264.,  272.,  280.,  252.,  259.,  266.,  273.,  568.,  583.,  598.,  312.,  320.,  328.,  336.,  301.,  308.,  315.,  322.,  673.,  688.,  703.,  368.,  376.,  384.,  392.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    9.,   18.,   27.,   36.,   55.,   74.,   93.,   40.,   50.,   60.,   70.,   72.,   81.,   90.,   99.,  188.,  207.,  226.,  110.,  120.,  130.,  140.,  135.,  144.,  153.,  162.,  321.,  340.,  359.,  180.,  190.,  200.,  210.,  198.,  207.,  216.,  225.,  454.,  473.,  492.,  250.,  260.,  270.,  280.,  272.,  292.,  312.,  332.,  654.,  696.,  738.,  368.,  390.,  412.,  434.,  412.,  432.,  452.,  472.,  948.,  990., 1032.,  522.,  544.,  566.,  588.,  552.,  572.,  592.,  612., 1242., 1284., 1326.,  676.,  698.,  720.,  742.,  242.,  253.,  264.,  275.,  550.,  573.,  596.,  300.,  312.,  324.,  336.,  319.,  330.,  341.,  352.,  711.,  734.,  757.,  384.,  396.,  408.,  420.,  396.,  407.,  418.,  429.,  872.,  895.,  918.,  468.,  480.,  492.,  504.,  473.,  484.,  495.,  506., 1033., 1056., 1079.,  552.,  564.,  576.,  588.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 11, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x11x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  101.,   107.,   320.,   340.,   360.,   249.,   588.,   624.,   660.,   391.,   413.,   143.,   149.,   460.,   480.,   500.,   347.,   840.,   876.,   912.,   545.,   567.,   268.,   304.,   580.,   668.,   756.,   588.,   860.,   980.,  1100.,   872.,   236.,   328.,   364.,   748.,   836.,   924.,   504.,   996.,  1116.,  1236.,   644.,   712.,   580.,   616.,  1364.,  1452.,  1540.,   868.,  1836.,  1956.,  2076.,  1120.,  1188.,   713.,   743.,  1600.,  1668.,  1736.,   941.,  1980.,  2064.,  2148.,  1139.,  1185.,  1072.,  1156.,  1420.,  1604.,  1788.,  1440.,  1700.,  1916.,  2132.,  1724.,   368.,   700.,   784.,  1492.,  1676.,  1860.,   924.,  1740.,  1956.,  2172.,  1064.,  1180.,  1288.,  1372.,  2780.,  2964.,  3148.,  1624.,  3252.,  3468.,  3684.,  1876.,  1992.,  1283.,  1337.,  2740.,  2856.,  2972.,  1535.,  3120.,  3252.,  3384.,  1733.,  1803.,  1876.,  2008.,  2260.,  2540.,  2820.,  2292.,  2540.,  2852.,  3164.,  2576.,   500.,  1072.,  1204.,  2236.,  2516.,  2796.,  1344.,  2484.,  2796.,  3108.,  1484.,  1648.,  1996.,  2128.,  4196.,  4476.,  4756.,  2380.,  4668.,  4980.,  5292.,  2632.,  2796.,  1853.,  1931.,  3880.,  4044.,  4208.,  2129.,  4260.,  4440.,  4620.,  2327.,  2421.,  1709.,  1811.,  3536.,  3748.,  3960.,  1953.,  3804.,  4032.,  4260.,  2095.,  2213.,  2423.,  2525.,  5020.,  5232.,  5444.,  2723.,  5400.,  5628.,  5856.,  2921.,  3039.,  3484.,  3712.,  3940.,  4412.,  4884.,  3996.,  4220.,  4724.,  5228.,  4280.,   764.,  1816.,  2044.,  3724.,  4196.,  4668.,  2184.,  3972.,  4476.,  4980.,  2324.,  2584.,  3412.,  3640.,  7028.,  7500.,  7972.,  3892.,  7500.,  8004.,  8508.,  4144.,  4404.,  2993.,  3119.,  6160.,  6420.,  6680.,  3317.,  6540.,  6816.,  7092.,  3515.,  3657.,  4288.,  4564.,  4780.,  5348.,  5916.,  4848.,  5060.,  5660.,  6260.,  5132.,   896.,  2188.,  2464.,  4468.,  5036.,  5604.,  2604.,  4716.,  5316.,  5916.,  2744.,  3052.,  4120.,  4396.,  8444.,  9012.,  9580.,  4648.,  8916.,  9516., 10116.,  4900.,  5208.,  3563.,  3713.,  7300.,  7608.,  7916.,  3911.,  7680.,  8004.,  8328.,  4109.,  4275.,  5092.,  5416.,  5620.,  6284.,  6948.,  5700.,  5900.,  6596.,  7292.,  5984.,  1028.,  2560.,  2884.,  5212.,  5876.,  6540.,  3024.,  5460.,  6156.,  6852.,  3164.,  3520.,  4828.,  5152.,  9860., 10524., 11188.,  5404., 10332., 11028., 11724.,  5656.,  6012.,  4133.,  4307.,  8440.,  8796.,  9152.,  4505.,  8820.,  9192.,  9564.,  4703.,  4893.,  3317.,  3515.,  6752.,  7156.,  7560.,  3657.,  7020.,  7440.,  7860.,  3799.,  4013.,  4703.,  4901.,  9580.,  9984., 10388.,  5099.,  9960., 10380., 10800.,  5297.,  5511.,  6700.,  7120.,  7300.,  8156.,  9012.,  7404.,  7580.,  8468.,  9356.,  7688.,  1292.,  3304.,  3724.,  6700.,  7556.,  8412.,  3864.,  6948.,  7836.,  8724.,  4004.,  4456.,  6244.,  6664., 12692., 13548., 14404.,  6916., 13164., 14052., 14940.,  7168.,  7620.,  5273.,  5495., 10720., 11172., 11624.,  5693., 11100., 11568., 12036.,  5891.,  6129.,  7504.,  7972.,  8140.,  9092., 10044.,  8256.,  8228.,  8956.,  9684.,  7580.,   208.,  3676.,  4144.,  7444.,  8396.,  9348.,  4284.,  5708.,  6436.,  7164.,  1672.,  1916.,  6952.,  7420., 14108., 15060., 16012.,  7672., 10804., 11532., 12260.,  3380.,  3624.,  5843.,  6089., 11860., 12360., 12860.,  6287.,  6672.,  6932.,  7192.,   149.,   155.,  7604.,  7864.,  7572.,  8108.,  8644.,  8148.,   492.,   804.,  1116.,   304.,   148.,  1552.,  1812.,  3196.,  3732.,  4268.,  1952.,  2484.,  2796.,  3108.,   364.,   400.,  3372.,  3632.,  6948.,  7484.,  8020.,  3884.,  4668.,  4980.,  5292.,   616.,   652.,   333.,   347.,   840.,   876.,   912.,   545.,  1220.,  1272.,  1324.,   743.,   773.};
  const std::array<int, 4> in_shape = {{ 3, 14, 11, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x11x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    40.,    60.,    80.,    53.,    67.,    81.,    95.,    47.,    53.,    59.,    65.,   180.,   200.,   220.,   151.,   165.,   179.,   193.,    89.,    95.,   101.,   107.,   320.,   340.,   360.,   249.,   263.,   277.,   291.,   131.,   137.,   143.,   149.,   460.,   480.,   500.,   347.,   361.,   375.,   389.,   190.,   218.,   246.,   274.,   728.,   800.,   872.,   558.,   602.,   646.,   690.,   386.,   414.,   442.,   470.,  1232.,  1304.,  1376.,   866.,   910.,   954.,   998.,   582.,   610.,   638.,   666.,  1736.,  1808.,  1880.,  1174.,  1218.,  1262.,  1306.,   479.,   501.,   523.,   545.,  1220.,  1272.,  1324.,   743.,   773.,   803.,   833.,   633.,   655.,   677.,   699.,  1584.,  1636.,  1688.,   953.,   983.,  1013.,  1043.,   787.,   809.,   831.,   853.,  1948.,  2000.,  2052.,  1163.,  1193.,  1223.,  1253.,   941.,   963.,   985.,  1007.,  2312.,  2364.,  2416.,  1373.,  1403.,  1433.,  1463.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    29.,    67.,   105.,   143.,   216.,   300.,   384.,   173.,   219.,   265.,   311.,   295.,   333.,   371.,   409.,   804.,   888.,   972.,   495.,   541.,   587.,   633.,   561.,   599.,   637.,   675.,  1392.,  1476.,  1560.,   817.,   863.,   909.,   955.,   827.,   865.,   903.,   941.,  1980.,  2064.,  2148.,  1139.,  1185.,  1231.,  1277.,  1134.,  1226.,  1318.,  1410.,  2872.,  3072.,  3272.,  1694.,  1802.,  1910.,  2018.,  1778.,  1870.,  1962.,  2054.,  4272.,  4472.,  4672.,  2450.,  2558.,  2666.,  2774.,  2422.,  2514.,  2606.,  2698.,  5672.,  5872.,  6072.,  3206.,  3314.,  3422.,  3530.,  1175.,  1229.,  1283.,  1337.,  2740.,  2856.,  2972.,  1535.,  1597.,  1659.,  1721.,  1553.,  1607.,  1661.,  1715.,  3552.,  3668.,  3784.,  1969.,  2031.,  2093.,  2155.,  1931.,  1985.,  2039.,  2093.,  4364.,  4480.,  4596.,  2403.,  2465.,  2527.,  2589.,  2309.,  2363.,  2417.,  2471.,  5176.,  5292.,  5408.,  2837.,  2899.,  2961.,  3023.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    53.,   123.,   193.,   263.,   392.,   540.,   688.,   293.,   371.,   449.,   527.,   543.,   613.,   683.,   753.,  1428.,  1576.,  1724.,   839.,   917.,   995.,  1073.,  1033.,  1103.,  1173.,  1243.,  2464.,  2612.,  2760.,  1385.,  1463.,  1541.,  1619.,  1523.,  1593.,  1663.,  1733.,  3500.,  3648.,  3796.,  1931.,  2009.,  2087.,  2165.,  2078.,  2234.,  2390.,  2546.,  5016.,  5344.,  5672.,  2830.,  3002.,  3174.,  3346.,  3170.,  3326.,  3482.,  3638.,  7312.,  7640.,  7968.,  4034.,  4206.,  4378.,  4550.,  4262.,  4418.,  4574.,  4730.,  9608.,  9936., 10264.,  5238.,  5410.,  5582.,  5754.,  1871.,  1957.,  2043.,  2129.,  4260.,  4440.,  4620.,  2327.,  2421.,  2515.,  2609.,  2473.,  2559.,  2645.,  2731.,  5520.,  5700.,  5880.,  2985.,  3079.,  3173.,  3267.,  3075.,  3161.,  3247.,  3333.,  6780.,  6960.,  7140.,  3643.,  3737.,  3831.,  3925.,  3677.,  3763.,  3849.,  3935.,  8040.,  8220.,  8400.,  4301.,  4395.,  4489.,  4583.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 11, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x11x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  30.,   70.,  804.,  948.,  260.,  174., 1396., 1668.,  596.,  278.,  446.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110.,  278.,  884., 1156., 1784., 2456., 3128., 1876., 2456., 3384., 4312., 2596., 1780.,  612.,  884., 3800., 1784., 2456., 1476., 5240., 2456., 3384., 2068., 2596.,  340.,  612., 3128., 3800., 1784., 1076., 4312., 5240., 2456., 1540., 2068., 1774.,  150., 2052., 2580., 3108.,  190., 2516., 3172., 3828.,  230.,  590., 2660., 3316., 3800., 5240., 6680., 4036., 4152., 5336., 6520., 2900.,  420., 2004., 2660., 8120., 3800., 5240., 3252., 5656., 4152., 5336., 2500., 2900., 1348., 2004., 6680., 8120., 3800., 2468., 4472., 5656., 4152., 2100., 2500., 3238.,  270., 3444., 4356., 5268.,  310., 1028., 1556., 2084.,   30.,   70., 3092., 3620., 3128., 4312., 5496., 4340., 1432., 2360., 3288., 1156., 1108., 2564., 3092., 6680., 3128., 4312., 3684., 6264., 1432., 2360.,  884., 1156., 2036., 2564., 5496., 6680., 3128., 3028., 5336., 6264., 1432.,  612.,  884.,  798.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150.,  382.,  190.,  486., 3172., 3828., 1604.,  590., 3764., 4548., 1940.,  694., 1118., 2262.,  190., 2516., 3172., 3828.,  230., 2980., 3764., 4548.,  270.,  694., 3252., 4036., 4152., 5336., 6520., 2900., 2456., 3384., 4312., 3620.,  756., 2468., 3252., 5656., 4152., 5336., 2500., 5240., 2456., 3384., 3092., 3620., 1684., 2468., 4472., 5656., 4152., 2100., 4312., 5240., 2456., 2564., 3092., 3726.,  310., 1028., 1556., 2084.,   30.,  660.,  804.,  948.,   70.,  174., 3684., 4340., 1432., 2360., 3288., 1156., 1784., 2456., 3128., 1876., 1444., 3028., 3684., 6264., 1432., 2360.,  884., 3800., 1784., 2456., 1476., 1876., 2372., 3028., 5336., 6264., 1432.,  612., 3128., 3800., 1784., 1076., 1476., 1286.,  110., 1588., 1988., 2388.,  150., 2052., 2580., 3108.,  190.,  486., 2068., 2596., 3128., 4312., 5496., 3316., 3800., 5240., 6680., 4036., 2452., 1540., 2068., 6680., 3128., 4312., 2660., 8120., 3800., 5240., 3252., 4036., 1012., 1540., 5496., 6680., 3128., 2004., 6680., 8120., 3800., 2468., 3252., 2750.,  230., 2980., 3764., 4548.,  270., 3444., 4356., 5268.,  310.,  798.,   30.,   70.,  804.,  948.,  260.,  174., 1396., 1668.,  596.,  278.,  446.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110.,  278.,  884., 1156., 1784., 2456., 3128., 1876., 2456., 3384., 4312., 2596., 1780.,  612.,  884., 3800., 1784., 2456., 1476., 5240., 2456., 3384., 2068., 2596.,  340.,  612., 3128., 3800., 1784., 1076., 4312., 5240., 2456., 1540., 2068., 1774.,  150., 2052., 2580., 3108.,  190., 2516., 3172., 3828.,  230.,  590., 2660., 3316., 3800., 5240., 6680., 4036., 4152., 5336., 6520., 2900.,  420., 2004., 2660., 8120., 3800., 5240., 3252., 5656., 4152., 5336., 2500., 2900., 1348., 2004., 6680., 8120., 3800., 2468., 4472., 5656., 4152., 2100., 2500., 3238.,  270., 3444., 4356., 5268.,  310., 1028., 1556., 2084.,   30.,   70., 3092., 3620., 3128., 4312., 5496., 4340., 1432., 2360., 3288., 1156., 1108., 2564., 3092., 6680., 3128., 4312., 3684., 6264., 1432., 2360.,  884., 1156., 2036., 2564., 5496., 6680., 3128., 3028., 5336., 6264., 1432.,  612.,  884.,  798.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150.,  382.};
  const std::array<int, 4> in_shape = {{ 3, 14, 11, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x11x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   260.,   404.,   548.,   382.,   486.,   590.,   694.,   310.,   350.,   390.,   430.,  1268.,  1412.,  1556.,  1110.,  1214.,  1318.,  1422.,   590.,   630.,    30.,    70.,  1636.,  1780.,   260.,   174.,   278.,   382.,   486.,   230.,   270.,   310.,   350.,   980.,  1124.,  1268.,   902.,  1006.,  1110.,  1214.,   620.,   828.,  1036.,  1244.,  2280.,  2824.,  3368.,  2476.,  1148.,  1484.,  1820.,  1436.,  1644.,  1852.,  2060.,  4424.,  4968.,  5512.,  3164.,  3500.,  3836.,  4172.,  2892.,  3100.,   620.,   828.,  5544.,  6088.,  2280.,  1804.,  2140.,  2476.,  1148.,   950.,  1118.,  1286.,  1454.,  2932.,  3332.,  3732.,  2006.,  2238.,  2470.,  2702.,  2126.,  2294.,  2462.,  2630.,  3044.,  3444.,  3844.,  3630.,   150.,   382.,   614.,   614.,   782.,   950.,  1118.,  2132.,  2532.,  2932.,  1542.,  1774.,  2006.,  2238.,  1790.,  1958.,  2126.,  2294.,  4932.,  5332.,  3044.,  3166.,  3398.,  3630.,   150.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1604.,  2260.,  2916.,  1310.,  1670.,  2030.,  2390.,  2262.,  2558.,  2854.,  3150.,  6196.,  6852.,  7508.,  3830.,  4190.,  4550.,  4910.,  4334.,  4630.,   190.,   486.,  6052.,  6708.,  1604.,   590.,   950.,  1310.,  1670.,  1670.,  1966.,  2262.,  2558.,  4884.,  5540.,  6196.,  3110.,  3470.,  3830.,  4190.,  4012.,  4732.,  5452.,  6172.,  7016.,  8584., 10152.,  7404.,  2492.,  3340.,  4188.,  4316.,  5036.,  5756.,  6476., 12232., 13800., 15368.,  7580.,  8428.,  9276., 10124.,  9356., 10076.,  4012.,  4732., 16424., 17992.,  7016.,  5708.,  6556.,  7404.,  2492.,  2390.,  2814.,  3238.,  3662.,  6836.,  7748.,  8660.,  4214.,  4702.,  5190.,  5678.,  5358.,  5782.,  6206.,  6630.,  6436.,  7348.,  8260.,  7630.,   310.,   798.,  1286.,  1542.,  1966.,  2390.,  2814.,  5012.,  5924.,  6836.,  3238.,  3726.,  4214.,  4702.,  4510.,  4934.,  5358.,  5782., 11396., 12308.,  6436.,  6654.,  7142.,  7630.,   310.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   350.,   902.,  1454.,  2006.,  2948.,  4116.,  5284.,  2238.,  2854.,  3470.,  4086.,  4214.,  4766.,  5318.,  5870., 11124., 12292., 13460.,  6550.,  7166.,  7782.,  8398.,  8078.,  8630.,   350.,   902., 10468., 11636.,  2948.,  1006.,  1622.,  2238.,  2854.,  3110.,  3662.,  4214.,  4766.,  8788.,  9956., 11124.,  5318.,  5934.,  6550.,  7166.,  7404.,  8636.,  9868., 11100., 11752., 14344., 16936., 12332.,  3836.,  5196.,  6556.,  7196.,  8428.,  9660., 10892., 20040., 22632., 25224., 11996., 13356., 14716., 16076., 15820., 17052.,  7404.,  8636., 27304., 29896., 11752.,  9612., 10972., 12332.,  3836.,  3830.,  4510.,  5190.,  5870., 10740., 12164., 13588.,  6422.,  7166.,  7910.,  8654.,  8590.,  9270.,  9950., 10630.,  9828., 11252., 12676., 11630.,   470.,  1214.,  1958.,  2470.,  3150.,  3830.,  4510.,  7892.,  9316., 10740.,  4934.,  5678.,  6422.,  7166.,  7230.,  7910.,  8590.,  9270., 17860., 19284.,  9828., 10142., 10886., 11630.,   470.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 11, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x11x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,  161.,  166.,  171.,  176.,  181.,  186.,  105.,  108.,  111.,  114.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  231.,  236.,  241.,  246.,  251.,  256.,  147.,  150.,  153.,  156.,   81.,   86.,   91.,   96.,  220.,  232.,  244.,  256.,  268.,  280.,  161.,  168.,  352.,  368.,  384.,  400.,  416.,  432.,  231.,  240.,  249.,  258.,  151.,  156.,  161.,  166.,  388.,  400.,  412.,  424.,  436.,  448.,  259.,  266.,  576.,  592.,  608.,  624.,  640.,  656.,  357.,  366.,  375.,  384.,  221.,  226.,  231.,  236.,  556.,  568.,  580.,  592.,  604.,  616.,  357.,  364.,  800.,  816.,  832.,  848.,  864.,  880.,  483.,  492.,  501.,  510.,  188.,  192.,  196.,  200.,  419.,  428.,  437.,  446.,  455.,  464.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  306.,  312.,  279.,  290.,  301.,  312.,  616.,  640.,  664.,  688.,  712.,  736.,  371.,  384.,  748.,  776.,  804.,  832.,  860.,  888.,  441.,  456.,  471.,  486.,  433.,  444.,  455.,  466.,  952.,  976., 1000., 1024., 1048., 1072.,  553.,  566., 1140., 1168., 1196., 1224., 1252., 1280.,  651.,  666.,  681.,  696.,  587.,  598.,  609.,  620., 1288., 1312., 1336., 1360., 1384., 1408.,  735.,  748., 1532., 1560., 1588., 1616., 1644., 1672.,  861.,  876.,  891.,  906.,  329.,  336.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  795.,  812.,  829.,  846.,  863.,  880.,  441.,  450.,  459.,  468.,  477.,  494.,  511.,  528., 1012., 1048., 1084., 1120., 1156., 1192.,  581.,  600., 1144., 1184., 1224., 1264., 1304., 1344.,  651.,  672.,  693.,  714.,  715.,  732.,  749.,  766., 1516., 1552., 1588., 1624., 1660., 1696.,  847.,  866., 1704., 1744., 1784., 1824., 1864., 1904.,  945.,  966.,  987., 1008.,  953.,  970.,  987., 1004., 2020., 2056., 2092., 2128., 2164., 2200., 1113., 1132., 2264., 2304., 2344., 2384., 2424., 2464., 1239., 1260., 1281., 1302.,  470.,  480.,  490.,  500.,  983., 1004., 1025., 1046., 1067., 1088.,  539.,  550., 1077., 1100., 1123., 1146., 1169., 1192.,  588.,  600.,  612.,  624.,  429.,  442.,  455.,  468.,  887.,  914.,  941.,  968.,  995., 1022.,  490.,  504.,  953.,  982., 1011., 1040., 1069., 1098.,  525.,  540.,  555.,  570.,  611.,  624.,  637.,  650., 1265., 1292., 1319., 1346., 1373., 1400.,  686.,  700., 1359., 1388., 1417., 1446., 1475., 1504.,  735.,  750.,  765.,  780.,  873.,  902.,  931.,  960., 1804., 1864., 1924., 1984., 2044., 2104., 1001., 1032., 1936., 2000., 2064., 2128., 2192., 2256., 1071., 1104., 1137., 1170., 1279., 1308., 1337., 1366., 2644., 2704., 2764., 2824., 2884., 2944., 1435., 1466., 2832., 2896., 2960., 3024., 3088., 3152., 1533., 1566., 1599., 1632., 1685., 1714., 1743., 1772., 3484., 3544., 3604., 3664., 3724., 3784., 1869., 1900., 3728., 3792., 3856., 3920., 3984., 4048., 1995., 2028., 2061., 2094.,  752.,  768.,  784.,  800., 1547., 1580., 1613., 1646., 1679., 1712.,  833.,  850., 1641., 1676., 1711., 1746., 1781., 1816.,  882.,  900.,  918.,  936., 1071., 1106., 1141., 1176., 2200., 2272., 2344., 2416., 2488., 2560., 1211., 1248., 2332., 2408., 2484., 2560., 2636., 2712., 1281., 1320., 1359., 1398., 1561., 1596., 1631., 1666., 3208., 3280., 3352., 3424., 3496., 3568., 1729., 1766., 3396., 3472., 3548., 3624., 3700., 3776., 1827., 1866., 1905., 1944., 2051., 2086., 2121., 2156., 4216., 4288., 4360., 4432., 4504., 4576., 2247., 2284., 4460., 4536., 4612., 4688., 4764., 4840., 2373., 2412., 2451., 2490.,  893.,  912.,  931.,  950., 1829., 1868., 1907., 1946., 1985., 2024.,  980., 1000., 1923., 1964., 2005., 2046., 2087., 2128., 1029., 1050., 1071., 1092., 1269., 1310., 1351., 1392., 2596., 2680., 2764., 2848., 2932., 3016., 1421., 1464., 2728., 2816., 2904., 2992., 3080., 3168., 1491., 1536., 1581., 1626., 1843., 1884., 1925., 1966., 3772., 3856., 3940., 4024., 4108., 4192., 2023., 2066., 3960., 4048., 4136., 4224., 4312., 4400., 2121., 2166., 2211., 2256., 2417., 2458., 2499., 2540., 4948., 5032., 5116., 5200., 5284., 5368., 2625., 2668., 5192., 5280., 5368., 5456., 5544., 5632., 2751., 2796., 2841., 2886., 1034., 1056., 1078., 1100., 2111., 2156., 2201., 2246., 2291., 2336., 1127., 1150., 2205., 2252., 2299., 2346., 2393., 2440., 1176., 1200., 1224., 1248.,  825.,  850.,  875.,  900., 1679., 1730., 1781., 1832., 1883., 1934.,  910.,  936., 1745., 1798., 1851., 1904., 1957., 2010.,  945.,  972.,  999., 1026., 1175., 1200., 1225., 1250., 2393., 2444., 2495., 2546., 2597., 2648., 1274., 1300., 2487., 2540., 2593., 2646., 2699., 2752., 1323., 1350., 1377., 1404., 1665., 1718., 1771., 1824., 3388., 3496., 3604., 3712., 3820., 3928., 1841., 1896., 3520., 3632., 3744., 3856., 3968., 4080., 1911., 1968., 2025., 2082., 2407., 2460., 2513., 2566., 4900., 5008., 5116., 5224., 5332., 5440., 2611., 2666., 5088., 5200., 5312., 5424., 5536., 5648., 2709., 2766., 2823., 2880., 3149., 3202., 3255., 3308., 6412., 6520., 6628., 6736., 6844., 6952., 3381., 3436., 6656., 6768., 6880., 6992., 7104., 7216., 3507., 3564., 3621., 3678., 1316., 1344., 1372., 1400., 2675., 2732., 2789., 2846., 2903., 2960., 1421., 1450., 2769., 2828., 2887., 2946., 3005., 3064., 1470., 1500., 1530., 1560., 1863., 1922., 1981., 2040., 3784., 3904., 4024., 4144., 4264., 4384., 2051., 2112., 3916., 4040., 4164., 4288., 4412., 4536., 2121., 2184., 2247., 2310., 2689., 2748., 2807., 2866., 5464., 5584., 5704., 5824., 5944., 6064., 2905., 2966., 5652., 5776., 5900., 6024., 6148., 6272., 3003., 3066., 3129., 3192., 3515., 3574., 3633., 3692., 7144., 7264., 7384., 7504., 7624., 7744., 3759., 3820., 7388., 7512., 7636., 7760., 7884., 8008., 3885., 3948., 4011., 4074., 1457., 1488., 1519., 1550., 2957., 3020., 3083., 3146., 3209., 3272., 1568., 1600., 3051., 3116., 3181., 3246., 3311., 3376., 1617., 1650., 1683., 1716., 2061., 2126., 2191., 2256., 4180., 4312., 4444., 4576., 4708., 4840., 2261., 2328., 4312., 4448., 4584., 4720., 4856., 4992., 2331., 2400., 2469., 2538., 2971., 3036., 3101., 3166., 6028., 6160., 6292., 6424., 6556., 6688., 3199., 3266., 6216., 6352., 6488., 6624., 6760., 6896., 3297., 3366., 3435., 3504., 3881., 3946., 4011., 4076., 7876., 8008., 8140., 8272., 8404., 8536., 4137., 4204., 8120., 8256., 8392., 8528., 8664., 8800., 4263., 4332., 4401., 4470., 1598., 1632., 1666., 1700., 3239., 3308., 3377., 3446., 3515., 3584., 1715., 1750., 3333., 3404., 3475., 3546., 3617., 3688., 1764., 1800., 1836., 1872.};
  const std::array<int, 4> in_shape = {{ 3, 14, 11, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x11x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,   11.,   14.,   17.,   20.,   23.,   26.,   14.,   16.,   18.,   20.,   22.,   24.,   26.,   28.,   15.,   16.,   17.,   18.,   19.,   20.,   21.,   22.,   53.,   56.,   59.,   62.,   65.,   68.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,   74.,   76.,   78.,   80.,   82.,   84.,   43.,   44.,   45.,   46.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,   60.,   64.,   68.,   72.,   76.,   80.,   84.,   88.,  210.,  220.,  230.,  240.,  250.,  260.,  154.,  160.,  166.,  172.,  178.,  184.,  190.,  196.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  350.,  360.,  370.,  380.,  390.,  400.,  238.,  244.,  250.,  256.,  262.,  268.,  274.,  280.,  172.,  176.,  180.,  184.,  188.,  192.,  196.,  200.,  490.,  500.,  510.,  520.,  530.,  540.,  322.,  328.,  334.,  340.,  346.,  352.,  358.,  364.,  129.,  132.,  135.,  138.,  141.,  144.,  147.,  150.,  325.,  332.,  339.,  346.,  353.,  360.,  196.,  200.,  204.,  208.,  212.,  216.,  220.,  224.,  171.,  174.,  177.,  180.,  183.,  186.,  189.,  192.,  423.,  430.,  437.,  444.,  451.,  458.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,  213.,  216.,  219.,  222.,  225.,  228.,  231.,  234.,  521.,  528.,  535.,  542.,  549.,  556.,  308.,  312.,  316.,  320.,  324.,  328.,  332.,  336.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  619.,  626.,  633.,  640.,  647.,  654.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    5.,   10.,   15.,   20.,   25.,   30.,   35.,   40.,   51.,   62.,   73.,   84.,   95.,  106.,   42.,   48.,   54.,   60.,   66.,   72.,   78.,   84.,   75.,   80.,   85.,   90.,   95.,  100.,  105.,  110.,  205.,  216.,  227.,  238.,  249.,  260.,  126.,  132.,  138.,  144.,  150.,  156.,  162.,  168.,  145.,  150.,  155.,  160.,  165.,  170.,  175.,  180.,  359.,  370.,  381.,  392.,  403.,  414.,  210.,  216.,  222.,  228.,  234.,  240.,  246.,  252.,  215.,  220.,  225.,  230.,  235.,  240.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  306.,  312.,  318.,  324.,  330.,  336.,  292.,  304.,  316.,  328.,  340.,  352.,  364.,  376.,  738.,  764.,  790.,  816.,  842.,  868.,  434.,  448.,  462.,  476.,  490.,  504.,  518.,  532.,  460.,  472.,  484.,  496.,  508.,  520.,  532.,  544., 1102., 1128., 1154., 1180., 1206., 1232.,  630.,  644.,  658.,  672.,  686.,  700.,  714.,  728.,  628.,  640.,  652.,  664.,  676.,  688.,  700.,  712., 1466., 1492., 1518., 1544., 1570., 1596.,  826.,  840.,  854.,  868.,  882.,  896.,  910.,  924.,  301.,  308.,  315.,  322.,  329.,  336.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  408.,  416.,  424.,  432.,  440.,  448.,  399.,  406.,  413.,  420.,  427.,  434.,  441.,  448.,  911.,  926.,  941.,  956.,  971.,  986.,  504.,  512.,  520.,  528.,  536.,  544.,  552.,  560.,  497.,  504.,  511.,  518.,  525.,  532.,  539.,  546., 1121., 1136., 1151., 1166., 1181., 1196.,  616.,  624.,  632.,  640.,  648.,  656.,  664.,  672.,  595.,  602.,  609.,  616.,  623.,  630.,  637.,  644., 1331., 1346., 1361., 1376., 1391., 1406.,  728.,  736.,  744.,  752.,  760.,  768.,  776.,  784.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    9.,   18.,   27.,   36.,   45.,   54.,   63.,   72.,   91.,  110.,  129.,  148.,  167.,  186.,   70.,   80.,   90.,  100.,  110.,  120.,  130.,  140.,  135.,  144.,  153.,  162.,  171.,  180.,  189.,  198.,  357.,  376.,  395.,  414.,  433.,  452.,  210.,  220.,  230.,  240.,  250.,  260.,  270.,  280.,  261.,  270.,  279.,  288.,  297.,  306.,  315.,  324.,  623.,  642.,  661.,  680.,  699.,  718.,  350.,  360.,  370.,  380.,  390.,  400.,  410.,  420.,  387.,  396.,  405.,  414.,  423.,  432.,  441.,  450.,  889.,  908.,  927.,  946.,  965.,  984.,  490.,  500.,  510.,  520.,  530.,  540.,  550.,  560.,  524.,  544.,  564.,  584.,  604.,  624.,  644.,  664., 1266., 1308., 1350., 1392., 1434., 1476.,  714.,  736.,  758.,  780.,  802.,  824.,  846.,  868.,  804.,  824.,  844.,  864.,  884.,  904.,  924.,  944., 1854., 1896., 1938., 1980., 2022., 2064., 1022., 1044., 1066., 1088., 1110., 1132., 1154., 1176., 1084., 1104., 1124., 1144., 1164., 1184., 1204., 1224., 2442., 2484., 2526., 2568., 2610., 2652., 1330., 1352., 1374., 1396., 1418., 1440., 1462., 1484.,  473.,  484.,  495.,  506.,  517.,  528.,  539.,  550., 1077., 1100., 1123., 1146., 1169., 1192.,  588.,  600.,  612.,  624.,  636.,  648.,  660.,  672.,  627.,  638.,  649.,  660.,  671.,  682.,  693.,  704., 1399., 1422., 1445., 1468., 1491., 1514.,  756.,  768.,  780.,  792.,  804.,  816.,  828.,  840.,  781.,  792.,  803.,  814.,  825.,  836.,  847.,  858., 1721., 1744., 1767., 1790., 1813., 1836.,  924.,  936.,  948.,  960.,  972.,  984.,  996., 1008.,  935.,  946.,  957.,  968.,  979.,  990., 1001., 1012., 2043., 2066., 2089., 2112., 2135., 2158., 1092., 1104., 1116., 1128., 1140., 1152., 1164., 1176.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 11, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x11x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,   432.,   452.,   472.,   492.,    64.,    84.,    39.,    53.,   700.,   736.,   772.,   808.,   140.,   176.,    61.,    83.,   105.,   127.,    89.,    95.,   101.,   107.,   264.,   284.,   304.,   324.,   344.,   364.,   235.,   249.,   500.,   536.,   572.,   608.,   644.,   680.,   369.,   391.,   413.,   435.,   316.,   352.,   388.,   424.,   644.,   732.,   820.,   908.,   996.,  1084.,   688.,   740.,   924.,  1044.,  1164.,  1284.,  1404.,  1524.,   988.,  1056.,   420.,   488.,   628.,   664.,   700.,   736.,  1428.,  1516.,  1604.,  1692.,  1780.,  1868.,   968.,  1020.,  1900.,  2020.,  2140.,  2260.,  2380.,  2500.,  1236.,  1304.,  1372.,  1440.,   172.,   208.,   244.,   280.,  1700.,  1788.,  1876.,  1964.,   644.,   732.,   480.,   532.,  2364.,  2484.,  2604.,  2724.,   924.,  1044.,   716.,   784.,   852.,   920.,   443.,   473.,   503.,   533.,   972.,  1040.,  1108.,  1176.,  1244.,  1312.,   637.,   675.,  1208.,  1292.,  1376.,  1460.,  1544.,  1628.,   771.,   817.,   863.,   909.,  1120.,  1204.,  1288.,  1372.,  1484.,  1668.,  1852.,  2036.,  2220.,  2404.,  1588.,  1688.,  1764.,  1980.,  2196.,  2412.,  2628.,  2844.,  1888.,  2004.,   648.,   764.,  1336.,  1420.,  1504.,  1588.,  2844.,  3028.,  3212.,  3396.,  3580.,  3764.,  1772.,  1872.,  3316.,  3532.,  3748.,  3964.,  4180.,  4396.,  2040.,  2156.,  2272.,  2388.,   784.,   868.,   952.,  1036.,  3692.,  3876.,  4060.,  4244.,  1484.,  1668.,  1188.,  1288.,  4356.,  4572.,  4788.,  5004.,  1764.,  1980.,  1424.,  1540.,  1656.,  1772.,   797.,   851.,   905.,   959.,  1680.,  1796.,  1912.,  2028.,  2144.,  2260.,  1039.,  1101.,  1916.,  2048.,  2180.,  2312.,  2444.,  2576.,  1173.,  1243.,  1313.,  1383.,  1924.,  2056.,  2188.,  2320.,  2324.,  2604.,  2884.,  3164.,  3444.,  3724.,  2488.,  2636.,  2604.,  2916.,  3228.,  3540.,  3852.,  4164.,  2788.,  2952.,   876.,  1040.,  2044.,  2176.,  2308.,  2440.,  4260.,  4540.,  4820.,  5100.,  5380.,  5660.,  2576.,  2724.,  4732.,  5044.,  5356.,  5668.,  5980.,  6292.,  2844.,  3008.,  3172.,  3336.,  1396.,  1528.,  1660.,  1792.,  5684.,  5964.,  6244.,  6524.,  2324.,  2604.,  1896.,  2044.,  6348.,  6660.,  6972.,  7284.,  2604.,  2916.,  2132.,  2296.,  2460.,  2624.,  1151.,  1229.,  1307.,  1385.,  2388.,  2552.,  2716.,  2880.,  3044.,  3208.,  1441.,  1527.,  2624.,  2804.,  2984.,  3164.,  3344.,  3524.,  1575.,  1669.,  1763.,  1857.,    77.,   179.,   281.,   383.,  3648.,  3860.,  4072.,  4284.,   976.,  1188.,   303.,   413.,  3916.,  4144.,  4372.,  4600.,  1052.,  1280.,   325.,   443.,   561.,   679.,  1505.,  1607.,  1709.,  1811.,  3096.,  3308.,  3520.,  3732.,  3944.,  4156.,  1843.,  1953.,  3332.,  3560.,  3788.,  4016.,  4244.,  4472.,  1977.,  2095.,  2213.,  2331.,  3532.,  3760.,  3988.,  4216.,  4004.,  4476.,  4948.,  5420.,  5892.,  6364.,  4288.,  4532.,  4284.,  4788.,  5292.,  5796.,  6300.,  6804.,  4588.,  4848.,  1332.,  1592.,  3460.,  3688.,  3916.,  4144.,  7092.,  7564.,  8036.,  8508.,  8980.,  9452.,  4184.,  4428.,  7564.,  8068.,  8572.,  9076.,  9580., 10084.,  4452.,  4712.,  4972.,  5232.,  2620.,  2848.,  3076.,  3304.,  9668., 10140., 10612., 11084.,  4004.,  4476.,  3312.,  3556., 10332., 10836., 11340., 11844.,  4284.,  4788.,  3548.,  3808.,  4068.,  4328.,  1859.,  1985.,  2111.,  2237.,  3804.,  4064.,  4324.,  4584.,  4844.,  5104.,  2245.,  2379.,  4040.,  4316.,  4592.,  4868.,  5144.,  5420.,  2379.,  2521.,  2663.,  2805.,  4336.,  4612.,  4888.,  5164.,  4844.,  5412.,  5980.,  6548.,  7116.,  7684.,  5188.,  5480.,  5124.,  5724.,  6324.,  6924.,  7524.,  8124.,  5488.,  5796.,  1560.,  1868.,  4168.,  4444.,  4720.,  4996.,  8508.,  9076.,  9644., 10212., 10780., 11348.,  4988.,  5280.,  8980.,  9580., 10180., 10780., 11380., 11980.,  5256.,  5564.,  5872.,  6180.,  3232.,  3508.,  3784.,  4060., 11660., 12228., 12796., 13364.,  4844.,  5412.,  4020.,  4312., 12324., 12924., 13524., 14124.,  5124.,  5724.,  4256.,  4564.,  4872.,  5180.,  2213.,  2363.,  2513.,  2663.,  4512.,  4820.,  5128.,  5436.,  5744.,  6052.,  2647.,  2805.,  4748.,  5072.,  5396.,  5720.,  6044.,  6368.,  2781.,  2947.,  3113.,  3279.,  5140.,  5464.,  5788.,  6112.,  5684.,  6348.,  7012.,  7676.,  8340.,  9004.,  6088.,  6428.,  5964.,  6660.,  7356.,  8052.,  8748.,  9444.,  6388.,  6744.,  1788.,  2144.,  4876.,  5200.,  5524.,  5848.,  9924., 10588., 11252., 11916., 12580., 13244.,  5792.,  6132., 10396., 11092., 11788., 12484., 13180., 13876.,  6060.,  6416.,  6772.,  7128.,  3844.,  4168.,  4492.,  4816., 13652., 14316., 14980., 15644.,  5684.,  6348.,  4728.,  5068., 14316., 15012., 15708., 16404.,  5964.,  6660.,  4964.,  5320.,  5676.,  6032.,  2567.,  2741.,  2915.,  3089.,  5220.,  5576.,  5932.,  6288.,  6644.,  7000.,  3049.,  3231.,  5456.,  5828.,  6200.,  6572.,  6944.,  7316.,  3183.,  3373.,  3563.,  3753.,   149.,   347.,   545.,   743.,  6864.,  7268.,  7672.,  8076.,  1888.,  2292.,   567.,   773.,  7132.,  7552.,  7972.,  8392.,  1964.,  2384.,   589.,   803.,  1017.,  1231.,  2921.,  3119.,  3317.,  3515.,  5928.,  6332.,  6736.,  7140.,  7544.,  7948.,  3451.,  3657.,  6164.,  6584.,  7004.,  7424.,  7844.,  8264.,  3585.,  3799.,  4013.,  4227.,  6748.,  7168.,  7588.,  8008.,  7364.,  8220.,  9076.,  9932., 10788., 11644.,  7888.,  8324.,  7644.,  8532.,  9420., 10308., 11196., 12084.,  8188.,  8640.,  2244.,  2696.,  6292.,  6712.,  7132.,  7552., 12756., 13612., 14468., 15324., 16180., 17036.,  7400.,  7836., 13228., 14116., 15004., 15892., 16780., 17668.,  7668.,  8120.,  8572.,  9024.,  5068.,  5488.,  5908.,  6328., 17636., 18492., 19348., 20204.,  7364.,  8220.,  6144.,  6580., 18300., 19188., 20076., 20964.,  7644.,  8532.,  6380.,  6832.,  7284.,  7736.,  3275.,  3497.,  3719.,  3941.,  6636.,  7088.,  7540.,  7992.,  8444.,  8896.,  3853.,  4083.,  6872.,  7340.,  7808.,  8276.,  8744.,  9212.,  3987.,  4225.,  4463.,  4701.,  7552.,  8020.,  8488.,  8956.,  8204.,  9156., 10108., 11060., 12012., 12964.,  8788.,  9272.,  8292.,  9020.,  9748., 10476., 11204., 11932.,  7360.,  7604.,   232.,   476.,  7000.,  7468.,  7936.,  8404., 14172., 15124., 16076., 17028., 17980., 18932.,  8204.,  8688., 10868., 11596., 12324., 13052., 13780., 14508.,  3160.,  3404.,  3648.,  3892.,  5680.,  6148.,  6616.,  7084., 19628., 20580., 21532., 22484.,  8204.,  9156.,  6852.,  7336., 12932., 13660., 14388., 15116.,  8292.,  9020.,  6384.,  6628.,  6872.,  7116.,  3629.,  3875.,  4121.,  4367.,  7344.,  7844.,  8344.,  8844.,  9344.,  9844.,  4255.,  4509.,  4828.,  5088.,  5348.,  5608.,  5868.,  6128.,   101.,   107.,   113.,   119.,  7140.,  7400.,  7660.,  7920.,  6612.,  7148.,  7684.,  8220.,  8756.,  9292.,  7960.,  8236.,   556.,   868.,  1180.,  1492.,  1804.,  2116.,   388.,   424.,   268.,   304.,  2908.,  3168.,  3428.,  3688.,  5988.,  6524.,  7060.,  7596.,  8132.,  8668.,  3696.,  3972.,  4732.,  5044.,  5356.,  5668.,  5980.,  6292.,   700.,   736.,   772.,   808.,  6100.,  6360.,  6620.,  6880., 13044., 13580., 14116., 14652.,  6612.,  7148.,  6856.,  7132.,  8396.,  8708.,  9020.,  9332.,   556.,   868.,   244.,   280.,   316.,   352.,   207.,   221.,   235.,   249.,   500.,   536.,   572.,   608.,   644.,   680.,   369.,   391.,   736.,   788.,   840.,   892.,   944.,   996.,   503.,   533.,   563.,   593.};
  const std::array<int, 4> in_shape = {{ 3, 14, 11, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x11x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,    64.,    84.,   104.,   124.,   144.,   164.,    95.,   109.,   123.,   137.,   151.,   165.,   179.,   193.,    89.,    95.,   101.,   107.,   113.,   119.,   125.,   131.,   344.,   364.,   384.,   404.,   424.,   444.,   291.,   305.,   319.,   333.,   347.,   361.,   375.,   389.,   173.,   179.,   185.,   191.,   197.,   203.,   209.,   215.,   624.,   644.,   664.,   684.,   704.,   724.,   487.,   501.,   515.,   529.,   543.,   557.,   571.,   585.,   257.,   263.,   269.,   275.,   281.,   287.,   293.,   299.,   904.,   924.,   944.,   964.,   984.,  1004.,   683.,   697.,   711.,   725.,   739.,   753.,   767.,   781.,   358.,   386.,   414.,   442.,   470.,   498.,   526.,   554.,  1400.,  1472.,  1544.,  1616.,  1688.,  1760.,  1082.,  1126.,  1170.,  1214.,  1258.,  1302.,  1346.,  1390.,   750.,   778.,   806.,   834.,   862.,   890.,   918.,   946.,  2408.,  2480.,  2552.,  2624.,  2696.,  2768.,  1698.,  1742.,  1786.,  1830.,  1874.,  1918.,  1962.,  2006.,  1142.,  1170.,  1198.,  1226.,  1254.,  1282.,  1310.,  1338.,  3416.,  3488.,  3560.,  3632.,  3704.,  3776.,  2314.,  2358.,  2402.,  2446.,  2490.,  2534.,  2578.,  2622.,   941.,   963.,   985.,  1007.,  1029.,  1051.,  1073.,  1095.,  2400.,  2452.,  2504.,  2556.,  2608.,  2660.,  1463.,  1493.,  1523.,  1553.,  1583.,  1613.,  1643.,  1673.,  1249.,  1271.,  1293.,  1315.,  1337.,  1359.,  1381.,  1403.,  3128.,  3180.,  3232.,  3284.,  3336.,  3388.,  1883.,  1913.,  1943.,  1973.,  2003.,  2033.,  2063.,  2093.,  1557.,  1579.,  1601.,  1623.,  1645.,  1667.,  1689.,  1711.,  3856.,  3908.,  3960.,  4012.,  4064.,  4116.,  2303.,  2333.,  2363.,  2393.,  2423.,  2453.,  2483.,  2513.,  1865.,  1887.,  1909.,  1931.,  1953.,  1975.,  1997.,  2019.,  4584.,  4636.,  4688.,  4740.,  4792.,  4844.,  2723.,  2753.,  2783.,  2813.,  2843.,  2873.,  2903.,  2933.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    29.,    67.,   105.,   143.,   181.,   219.,   257.,   295.,   368.,   452.,   536.,   620.,   704.,   788.,   311.,   357.,   403.,   449.,   495.,   541.,   587.,   633.,   561.,   599.,   637.,   675.,   713.,   751.,   789.,   827.,  1544.,  1628.,  1712.,  1796.,  1880.,  1964.,   955.,  1001.,  1047.,  1093.,  1139.,  1185.,  1231.,  1277.,  1093.,  1131.,  1169.,  1207.,  1245.,  1283.,  1321.,  1359.,  2720.,  2804.,  2888.,  2972.,  3056.,  3140.,  1599.,  1645.,  1691.,  1737.,  1783.,  1829.,  1875.,  1921.,  1625.,  1663.,  1701.,  1739.,  1777.,  1815.,  1853.,  1891.,  3896.,  3980.,  4064.,  4148.,  4232.,  4316.,  2243.,  2289.,  2335.,  2381.,  2427.,  2473.,  2519.,  2565.,  2198.,  2290.,  2382.,  2474.,  2566.,  2658.,  2750.,  2842.,  5592.,  5792.,  5992.,  6192.,  6392.,  6592.,  3306.,  3414.,  3522.,  3630.,  3738.,  3846.,  3954.,  4062.,  3486.,  3578.,  3670.,  3762.,  3854.,  3946.,  4038.,  4130.,  8392.,  8592.,  8792.,  8992.,  9192.,  9392.,  4818.,  4926.,  5034.,  5142.,  5250.,  5358.,  5466.,  5574.,  4774.,  4866.,  4958.,  5050.,  5142.,  5234.,  5326.,  5418., 11192., 11392., 11592., 11792., 11992., 12192.,  6330.,  6438.,  6546.,  6654.,  6762.,  6870.,  6978.,  7086.,  2309.,  2363.,  2417.,  2471.,  2525.,  2579.,  2633.,  2687.,  5392.,  5508.,  5624.,  5740.,  5856.,  5972.,  3023.,  3085.,  3147.,  3209.,  3271.,  3333.,  3395.,  3457.,  3065.,  3119.,  3173.,  3227.,  3281.,  3335.,  3389.,  3443.,  7016.,  7132.,  7248.,  7364.,  7480.,  7596.,  3891.,  3953.,  4015.,  4077.,  4139.,  4201.,  4263.,  4325.,  3821.,  3875.,  3929.,  3983.,  4037.,  4091.,  4145.,  4199.,  8640.,  8756.,  8872.,  8988.,  9104.,  9220.,  4759.,  4821.,  4883.,  4945.,  5007.,  5069.,  5131.,  5193.,  4577.,  4631.,  4685.,  4739.,  4793.,  4847.,  4901.,  4955., 10264., 10380., 10496., 10612., 10728., 10844.,  5627.,  5689.,  5751.,  5813.,  5875.,  5937.,  5999.,  6061.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    53.,   123.,   193.,   263.,   333.,   403.,   473.,   543.,   672.,   820.,   968.,  1116.,  1264.,  1412.,   527.,   605.,   683.,   761.,   839.,   917.,   995.,  1073.,  1033.,  1103.,  1173.,  1243.,  1313.,  1383.,  1453.,  1523.,  2744.,  2892.,  3040.,  3188.,  3336.,  3484.,  1619.,  1697.,  1775.,  1853.,  1931.,  2009.,  2087.,  2165.,  2013.,  2083.,  2153.,  2223.,  2293.,  2363.,  2433.,  2503.,  4816.,  4964.,  5112.,  5260.,  5408.,  5556.,  2711.,  2789.,  2867.,  2945.,  3023.,  3101.,  3179.,  3257.,  2993.,  3063.,  3133.,  3203.,  3273.,  3343.,  3413.,  3483.,  6888.,  7036.,  7184.,  7332.,  7480.,  7628.,  3803.,  3881.,  3959.,  4037.,  4115.,  4193.,  4271.,  4349.,  4038.,  4194.,  4350.,  4506.,  4662.,  4818.,  4974.,  5130.,  9784., 10112., 10440., 10768., 11096., 11424.,  5530.,  5702.,  5874.,  6046.,  6218.,  6390.,  6562.,  6734.,  6222.,  6378.,  6534.,  6690.,  6846.,  7002.,  7158.,  7314., 14376., 14704., 15032., 15360., 15688., 16016.,  7938.,  8110.,  8282.,  8454.,  8626.,  8798.,  8970.,  9142.,  8406.,  8562.,  8718.,  8874.,  9030.,  9186.,  9342.,  9498., 18968., 19296., 19624., 19952., 20280., 20608., 10346., 10518., 10690., 10862., 11034., 11206., 11378., 11550.,  3677.,  3763.,  3849.,  3935.,  4021.,  4107.,  4193.,  4279.,  8384.,  8564.,  8744.,  8924.,  9104.,  9284.,  4583.,  4677.,  4771.,  4865.,  4959.,  5053.,  5147.,  5241.,  4881.,  4967.,  5053.,  5139.,  5225.,  5311.,  5397.,  5483., 10904., 11084., 11264., 11444., 11624., 11804.,  5899.,  5993.,  6087.,  6181.,  6275.,  6369.,  6463.,  6557.,  6085.,  6171.,  6257.,  6343.,  6429.,  6515.,  6601.,  6687., 13424., 13604., 13784., 13964., 14144., 14324.,  7215.,  7309.,  7403.,  7497.,  7591.,  7685.,  7779.,  7873.,  7289.,  7375.,  7461.,  7547.,  7633.,  7719.,  7805.,  7891., 15944., 16124., 16304., 16484., 16664., 16844.,  8531.,  8625.,  8719.,  8813.,  8907.,  9001.,  9095.,  9189.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 11, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x11x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   446.,   614.,   782.,   950.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  3508.,  4036.,   340.,   868.,   724.,   996.,  1268.,  1540.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   180.,   452.,   724.,   996.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  1396.,  1924.,  2452.,  2980.,  1542.,  1774.,   150.,   382.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  2660.,  3060.,   260.,   660.,  1732.,  2388.,  3044.,  3700.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   420.,  1076.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1060.,  1460.,  1860.,  2260.,  2814.,  3238.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   110.,   150.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  4356.,  5012.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  1812.,  2084.,   180.,   452.,  1396.,  1924.,  2452.,  2980.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  1268.,  1540.,  1812.,  2084.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1732.,  2388.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,   724.,   996.,  1268.,  1540.,   694.,   798.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  1118.,  1542.,  1966.,  2390.,  1966.,  2262.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  3508.,  4036.,   340.,   868.,  2068.,  2852.,  3636.,  4420.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   500.,  1284.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  1396.,  1924.,  2452.,  2980.,  3238.,  3726.,   310.,   798.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  3044.,  3700.,  4356.,  5012.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  2660.,  3060.,   260.,   660.,  1732.,  2388.,  3044.,  3700.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  1268.,  1540.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   420.,  1076.,  1732.,  2388.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,   724.,   996.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1060.,  1460.,  1860.,  2260.,  1118.,  1286.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,   782.,  1078.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  5204.,  5988.,   500.,  1284.,  1396.,  1924.,  2452.,  2980.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  2068.,  2852.,  3636.,  4420.,  2390.,  2750.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   446.,   614.,   782.,   950.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  3508.,  4036.,   340.,   868.,   724.,   996.,  1268.,  1540.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   180.,   452.,   724.,   996.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  1396.,  1924.,  2452.,  2980.,  1542.,  1774.,   150.,   382.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  2660.,  3060.,   260.,   660.,  1732.,  2388.,  3044.,  3700.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   420.,  1076.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1060.,  1460.,  1860.,  2260.,  2814.,  3238.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   110.,   150.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  4356.,  5012.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  1812.,  2084.,   180.,   452.,  1396.,  1924.,  2452.,  2980.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  1268.,  1540.,  1812.,  2084.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1732.,  2388.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,   724.,   996.,  1268.,  1540.,   694.,   798.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.};
  const std::array<int, 4> in_shape = {{ 3, 14, 11, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x11x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   420.,   564.,   708.,   852.,   996.,  1140.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,   590.,   630.,    30.,    70.,   110.,   150.,   190.,   230.,  1796.,  1940.,   420.,   564.,   708.,   852.,   486.,   590.,   694.,   798.,   902.,  1006.,  1110.,  1214.,   510.,   550.,   590.,   630.,    30.,    70.,   110.,   150.,  1508.,  1652.,  1796.,  1940.,   420.,   564.,   278.,   382.,   486.,   590.,   694.,   798.,   902.,  1006.,   430.,   470.,   510.,   550.,   590.,   630.,    30.,    70.,  1220.,  1364.,  1508.,  1652.,  1796.,  1940.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,   460.,   668.,   876.,  1084.,  1292.,  1500.,  1708.,  1916.,  2536.,  3080.,  3624.,  4168.,  4712.,  5256.,  3068.,  3404.,  2076.,  2412.,  2748.,  3084.,  3420.,  3756.,  2732.,  2940.,   460.,   668.,   876.,  1084.,  1292.,  1500.,  5800.,  6344.,  2536.,  3080.,  3624.,  4168.,  2396.,  2732.,  3068.,  3404.,  2076.,  2412.,  2748.,  3084.,  2316.,  2524.,  2732.,  2940.,   460.,   668.,   876.,  1084.,  4712.,  5256.,  5800.,  6344.,  2536.,  3080.,  1724.,  2060.,  2396.,  2732.,  3068.,  3404.,  2076.,  2412.,  1790.,  1958.,  2126.,  2294.,  2462.,  2630.,   110.,   278.,  2916.,  3316.,  3716.,  4116.,  4516.,  4916.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  2462.,  2630.,  2116.,  2516.,  2916.,  3316.,  3716.,  4116.,  3398.,  3630.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  4004.,  4404.,  2116.,  2516.,  2916.,  3316.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,   614.,   846.,   782.,   950.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  3204.,  3604.,  4004.,  4404.,  2116.,  2516.,  2470.,  2702.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,  2788.,  3444.,  4100.,  4756.,  5412.,  6068.,  2390.,  2750.,  3110.,  3470.,  3830.,  4190.,  4550.,  4910.,  4334.,  4630.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  7236.,  7892.,  2788.,  3444.,  4100.,  4756.,  1670.,  2030.,  2390.,  2750.,  3110.,  3470.,  3830.,  4190.,  3742.,  4038.,  4334.,  4630.,   190.,   486.,   782.,  1078.,  5924.,  6580.,  7236.,  7892.,  2788.,  3444.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,  3110.,  3470.,  3150.,  3446.,  3742.,  4038.,  4334.,  4630.,   190.,   486.,  4612.,  5268.,  5924.,  6580.,  7236.,  7892.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,  2828.,  3548.,  4268.,  4988.,  5708.,  6428.,  7148.,  7868.,  7272.,  8840., 10408., 11976., 13544., 15112.,  8508.,  9356.,  4444.,  5292.,  6140.,  6988.,  7836.,  8684.,  8172.,  8892.,  2828.,  3548.,  4268.,  4988.,  5708.,  6428., 16680., 18248.,  7272.,  8840., 10408., 11976.,  6812.,  7660.,  8508.,  9356.,  4444.,  5292.,  6140.,  6988.,  6732.,  7452.,  8172.,  8892.,  2828.,  3548.,  4268.,  4988., 13544., 15112., 16680., 18248.,  7272.,  8840.,  5116.,  5964.,  6812.,  7660.,  8508.,  9356.,  4444.,  5292.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,   270.,   694.,  6308.,  7220.,  8132.,  9044.,  9956., 10868.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,  3662.,  4086.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,  4484.,  5396.,  6308.,  7220.,  8132.,  9044.,  7142.,  7630.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  2814.,  3238.,  3662.,  4086.,  4510.,  4934.,  5358.,  5782.,  9444., 10356.,  4484.,  5396.,  6308.,  7220.,  6166.,  6654.,  7142.,  7630.,   310.,   798.,  1286.,  1774.,  1966.,  2390.,  2814.,  3238.,  3662.,  4086.,  4510.,  4934.,  7620.,  8532.,  9444., 10356.,  4484.,  5396.,  5190.,  5678.,  6166.,  6654.,  7142.,  7630.,   310.,   798.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   350.,   902.,  1454.,  2006.,  2558.,  3110.,  3662.,  4214.,  5156.,  6324.,  7492.,  8660.,  9828., 10996.,  4086.,  4702.,  5318.,  5934.,  6550.,  7166.,  7782.,  8398.,  8078.,  8630.,   350.,   902.,  1454.,  2006.,  2558.,  3110., 12676., 13844.,  5156.,  6324.,  7492.,  8660.,  2854.,  3470.,  4086.,  4702.,  5318.,  5934.,  6550.,  7166.,  6974.,  7526.,  8078.,  8630.,   350.,   902.,  1454.,  2006., 10340., 11508., 12676., 13844.,  5156.,  6324.,  1622.,  2238.,  2854.,  3470.,  4086.,  4702.,  5318.,  5934.,  5870.,  6422.,  6974.,  7526.,  8078.,  8630.,   350.,   902.,  8004.,  9172., 10340., 11508., 12676., 13844.,   390.,  1006.,  1622.,  2238.,  2854.,  3470.,  4086.,  4702.,  5196.,  6428.,  7660.,  8892., 10124., 11356., 12588., 13820., 12008., 14600., 17192., 19784., 22376., 24968., 13948., 15308.,  6812.,  8172.,  9532., 10892., 12252., 13612., 13612., 14844.,  5196.,  6428.,  7660.,  8892., 10124., 11356., 27560., 30152., 12008., 14600., 17192., 19784., 11228., 12588., 13948., 15308.,  6812.,  8172.,  9532., 10892., 11148., 12380., 13612., 14844.,  5196.,  6428.,  7660.,  8892., 22376., 24968., 27560., 30152., 12008., 14600.,  8508.,  9868., 11228., 12588., 13948., 15308.,  6812.,  8172.,  7230.,  7910.,  8590.,  9270.,  9950., 10630.,   430.,  1110.,  9700., 11124., 12548., 13972., 15396., 16820.,   470.,  1214.,  1958.,  2702.,  3446.,  4190.,  4934.,  5678.,  5870.,  6550.,  7230.,  7910.,  8590.,  9270.,  9950., 10630.,  6852.,  8276.,  9700., 11124., 12548., 13972., 10886., 11630.,   470.,  1214.,  1958.,  2702.,  3446.,  4190.,  4510.,  5190.,  5870.,  6550.,  7230.,  7910.,  8590.,  9270., 14884., 16308.,  6852.,  8276.,  9700., 11124.,  9398., 10142., 10886., 11630.,   470.,  1214.,  1958.,  2702.,  3150.,  3830.,  4510.,  5190.,  5870.,  6550.,  7230.,  7910., 12036., 13460., 14884., 16308.,  6852.,  8276.,  7910.,  8654.,  9398., 10142., 10886., 11630.,   470.,  1214.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 11, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x11x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   65.,    66.,    67.,    68.,    69.,    70.,    71.,    72.,   187.,   190.,   193.,   196.,   199.,   202.,   205.,   208.,   211.,   214.,   217.,   220.,   138.,   140.,   142.,   144.,   317.,   322.,   327.,   332.,   337.,   342.,   347.,   352.,   357.,   362.,   367.,   372.,   207.,   210.,   213.,   216.,   219.,   222.,   225.,   228.,    93.,    94.,    95.,    96.,    97.,    98.,    99.,   100.,   271.,   274.,   277.,   280.,   283.,   286.,   289.,   292.,   295.,   298.,   301.,   304.,   194.,   196.,   198.,   200.,   457.,   462.,   467.,   472.,   477.,   482.,   487.,   492.,   497.,   502.,   507.,   512.,   291.,   294.,   297.,   300.,   303.,   306.,   309.,   312.,   157.,   162.,   167.,   172.,   177.,   182.,   187.,   192.,   428.,   440.,   452.,   464.,   476.,   488.,   500.,   512.,   524.,   536.,   548.,   560.,   315.,   322.,   329.,   336.,   688.,   704.,   720.,   736.,   752.,   768.,   784.,   800.,   816.,   832.,   848.,   864.,   453.,   462.,   471.,   480.,   489.,   498.,   507.,   516.,   297.,   302.,   307.,   312.,   317.,   322.,   327.,   332.,   764.,   776.,   788.,   800.,   812.,   824.,   836.,   848.,   860.,   872.,   884.,   896.,   511.,   518.,   525.,   532.,  1136.,  1152.,  1168.,  1184.,  1200.,  1216.,  1232.,  1248.,  1264.,  1280.,  1296.,  1312.,   705.,   714.,   723.,   732.,   741.,   750.,   759.,   768.,   437.,   442.,   447.,   452.,   457.,   462.,   467.,   472.,  1100.,  1112.,  1124.,  1136.,  1148.,  1160.,  1172.,  1184.,  1196.,  1208.,  1220.,  1232.,   707.,   714.,   721.,   728.,  1584.,  1600.,  1616.,  1632.,  1648.,  1664.,  1680.,  1696.,  1712.,  1728.,  1744.,  1760.,   957.,   966.,   975.,   984.,   993.,  1002.,  1011.,  1020.,   372.,   376.,   380.,   384.,   388.,   392.,   396.,   400.,   829.,   838.,   847.,   856.,   865.,   874.,   883.,   892.,   901.,   910.,   919.,   928.,   485.,   490.,   495.,   500.,  1015.,  1026.,  1037.,  1048.,  1059.,  1070.,  1081.,  1092.,  1103.,  1114.,  1125.,  1136.,   582.,   588.,   594.,   600.,   606.,   612.,   618.,   624.,   547.,   558.,   569.,   580.,   591.,   602.,   613.,   624.,  1208.,  1232.,  1256.,  1280.,  1304.,  1328.,  1352.,  1376.,  1400.,  1424.,  1448.,  1472.,   729.,   742.,   755.,   768.,  1468.,  1496.,  1524.,  1552.,  1580.,  1608.,  1636.,  1664.,  1692.,  1720.,  1748.,  1776.,   867.,   882.,   897.,   912.,   927.,   942.,   957.,   972.,   855.,   866.,   877.,   888.,   899.,   910.,   921.,   932.,  1880.,  1904.,  1928.,  1952.,  1976.,  2000.,  2024.,  2048.,  2072.,  2096.,  2120.,  2144.,  1093.,  1106.,  1119.,  1132.,  2252.,  2280.,  2308.,  2336.,  2364.,  2392.,  2420.,  2448.,  2476.,  2504.,  2532.,  2560.,  1287.,  1302.,  1317.,  1332.,  1347.,  1362.,  1377.,  1392.,  1163.,  1174.,  1185.,  1196.,  1207.,  1218.,  1229.,  1240.,  2552.,  2576.,  2600.,  2624.,  2648.,  2672.,  2696.,  2720.,  2744.,  2768.,  2792.,  2816.,  1457.,  1470.,  1483.,  1496.,  3036.,  3064.,  3092.,  3120.,  3148.,  3176.,  3204.,  3232.,  3260.,  3288.,  3316.,  3344.,  1707.,  1722.,  1737.,  1752.,  1767.,  1782.,  1797.,  1812.,   651.,   658.,   665.,   672.,   679.,   686.,   693.,   700.,  1387.,  1402.,  1417.,  1432.,  1447.,  1462.,  1477.,  1492.,  1507.,  1522.,  1537.,  1552.,   776.,   784.,   792.,   800.,  1573.,  1590.,  1607.,  1624.,  1641.,  1658.,  1675.,  1692.,  1709.,  1726.,  1743.,  1760.,   873.,   882.,   891.,   900.,   909.,   918.,   927.,   936.,   937.,   954.,   971.,   988.,  1005.,  1022.,  1039.,  1056.,  1988.,  2024.,  2060.,  2096.,  2132.,  2168.,  2204.,  2240.,  2276.,  2312.,  2348.,  2384.,  1143.,  1162.,  1181.,  1200.,  2248.,  2288.,  2328.,  2368.,  2408.,  2448.,  2488.,  2528.,  2568.,  2608.,  2648.,  2688.,  1281.,  1302.,  1323.,  1344.,  1365.,  1386.,  1407.,  1428.,  1413.,  1430.,  1447.,  1464.,  1481.,  1498.,  1515.,  1532.,  2996.,  3032.,  3068.,  3104.,  3140.,  3176.,  3212.,  3248.,  3284.,  3320.,  3356.,  3392.,  1675.,  1694.,  1713.,  1732.,  3368.,  3408.,  3448.,  3488.,  3528.,  3568.,  3608.,  3648.,  3688.,  3728.,  3768.,  3808.,  1869.,  1890.,  1911.,  1932.,  1953.,  1974.,  1995.,  2016.,  1889.,  1906.,  1923.,  1940.,  1957.,  1974.,  1991.,  2008.,  4004.,  4040.,  4076.,  4112.,  4148.,  4184.,  4220.,  4256.,  4292.,  4328.,  4364.,  4400.,  2207.,  2226.,  2245.,  2264.,  4488.,  4528.,  4568.,  4608.,  4648.,  4688.,  4728.,  4768.,  4808.,  4848.,  4888.,  4928.,  2457.,  2478.,  2499.,  2520.,  2541.,  2562.,  2583.,  2604.,   930.,   940.,   950.,   960.,   970.,   980.,   990.,  1000.,  1945.,  1966.,  1987.,  2008.,  2029.,  2050.,  2071.,  2092.,  2113.,  2134.,  2155.,  2176.,  1067.,  1078.,  1089.,  1100.,  2131.,  2154.,  2177.,  2200.,  2223.,  2246.,  2269.,  2292.,  2315.,  2338.,  2361.,  2384.,  1164.,  1176.,  1188.,  1200.,  1212.,  1224.,  1236.,  1248.,   845.,   858.,   871.,   884.,   897.,   910.,   923.,   936.,  1747.,  1774.,  1801.,  1828.,  1855.,  1882.,  1909.,  1936.,  1963.,  1990.,  2017.,  2044.,   966.,   980.,   994.,  1008.,  1877.,  1906.,  1935.,  1964.,  1993.,  2022.,  2051.,  2080.,  2109.,  2138.,  2167.,  2196.,  1035.,  1050.,  1065.,  1080.,  1095.,  1110.,  1125.,  1140.,  1209.,  1222.,  1235.,  1248.,  1261.,  1274.,  1287.,  1300.,  2503.,  2530.,  2557.,  2584.,  2611.,  2638.,  2665.,  2692.,  2719.,  2746.,  2773.,  2800.,  1358.,  1372.,  1386.,  1400.,  2689.,  2718.,  2747.,  2776.,  2805.,  2834.,  2863.,  2892.,  2921.,  2950.,  2979.,  3008.,  1455.,  1470.,  1485.,  1500.,  1515.,  1530.,  1545.,  1560.,  1717.,  1746.,  1775.,  1804.,  1833.,  1862.,  1891.,  1920.,  3548.,  3608.,  3668.,  3728.,  3788.,  3848.,  3908.,  3968.,  4028.,  4088.,  4148.,  4208.,  1971.,  2002.,  2033.,  2064.,  3808.,  3872.,  3936.,  4000.,  4064.,  4128.,  4192.,  4256.,  4320.,  4384.,  4448.,  4512.,  2109.,  2142.,  2175.,  2208.,  2241.,  2274.,  2307.,  2340.,  2529.,  2558.,  2587.,  2616.,  2645.,  2674.,  2703.,  2732.,  5228.,  5288.,  5348.,  5408.,  5468.,  5528.,  5588.,  5648.,  5708.,  5768.,  5828.,  5888.,  2839.,  2870.,  2901.,  2932.,  5600.,  5664.,  5728.,  5792.,  5856.,  5920.,  5984.,  6048.,  6112.,  6176.,  6240.,  6304.,  3033.,  3066.,  3099.,  3132.,  3165.,  3198.,  3231.,  3264.,  3341.,  3370.,  3399.,  3428.,  3457.,  3486.,  3515.,  3544.,  6908.,  6968.,  7028.,  7088.,  7148.,  7208.,  7268.,  7328.,  7388.,  7448.,  7508.,  7568.,  3707.,  3738.,  3769.,  3800.,  7392.,  7456.,  7520.,  7584.,  7648.,  7712.,  7776.,  7840.,  7904.,  7968.,  8032.,  8096.,  3957.,  3990.,  4023.,  4056.,  4089.,  4122.,  4155.,  4188.,  1488.,  1504.,  1520.,  1536.,  1552.,  1568.,  1584.,  1600.,  3061.,  3094.,  3127.,  3160.,  3193.,  3226.,  3259.,  3292.,  3325.,  3358.,  3391.,  3424.,  1649.,  1666.,  1683.,  1700.,  3247.,  3282.,  3317.,  3352.,  3387.,  3422.,  3457.,  3492.,  3527.,  3562.,  3597.,  3632.,  1746.,  1764.,  1782.,  1800.,  1818.,  1836.,  1854.,  1872.,  2107.,  2142.,  2177.,  2212.,  2247.,  2282.,  2317.,  2352.,  4328.,  4400.,  4472.,  4544.,  4616.,  4688.,  4760.,  4832.,  4904.,  4976.,  5048.,  5120.,  2385.,  2422.,  2459.,  2496.,  4588.,  4664.,  4740.,  4816.,  4892.,  4968.,  5044.,  5120.,  5196.,  5272.,  5348.,  5424.,  2523.,  2562.,  2601.,  2640.,  2679.,  2718.,  2757.,  2796.,  3087.,  3122.,  3157.,  3192.,  3227.,  3262.,  3297.,  3332.,  6344.,  6416.,  6488.,  6560.,  6632.,  6704.,  6776.,  6848.,  6920.,  6992.,  7064.,  7136.,  3421.,  3458.,  3495.,  3532.,  6716.,  6792.,  6868.,  6944.,  7020.,  7096.,  7172.,  7248.,  7324.,  7400.,  7476.,  7552.,  3615.,  3654.,  3693.,  3732.,  3771.,  3810.,  3849.,  3888.,  4067.,  4102.,  4137.,  4172.,  4207.,  4242.,  4277.,  4312.,  8360.,  8432.,  8504.,  8576.,  8648.,  8720.,  8792.,  8864.,  8936.,  9008.,  9080.,  9152.,  4457.,  4494.,  4531.,  4568.,  8844.,  8920.,  8996.,  9072.,  9148.,  9224.,  9300.,  9376.,  9452.,  9528.,  9604.,  9680.,  4707.,  4746.,  4785.,  4824.,  4863.,  4902.,  4941.,  4980.,  1767.,  1786.,  1805.,  1824.,  1843.,  1862.,  1881.,  1900.,  3619.,  3658.,  3697.,  3736.,  3775.,  3814.,  3853.,  3892.,  3931.,  3970.,  4009.,  4048.,  1940.,  1960.,  1980.,  2000.,  3805.,  3846.,  3887.,  3928.,  3969.,  4010.,  4051.,  4092.,  4133.,  4174.,  4215.,  4256.,  2037.,  2058.,  2079.,  2100.,  2121.,  2142.,  2163.,  2184.,  2497.,  2538.,  2579.,  2620.,  2661.,  2702.,  2743.,  2784.,  5108.,  5192.,  5276.,  5360.,  5444.,  5528.,  5612.,  5696.,  5780.,  5864.,  5948.,  6032.,  2799.,  2842.,  2885.,  2928.,  5368.,  5456.,  5544.,  5632.,  5720.,  5808.,  5896.,  5984.,  6072.,  6160.,  6248.,  6336.,  2937.,  2982.,  3027.,  3072.,  3117.,  3162.,  3207.,  3252.,  3645.,  3686.,  3727.,  3768.,  3809.,  3850.,  3891.,  3932.,  7460.,  7544.,  7628.,  7712.,  7796.,  7880.,  7964.,  8048.,  8132.,  8216.,  8300.,  8384.,  4003.,  4046.,  4089.,  4132.,  7832.,  7920.,  8008.,  8096.,  8184.,  8272.,  8360.,  8448.,  8536.,  8624.,  8712.,  8800.,  4197.,  4242.,  4287.,  4332.,  4377.,  4422.,  4467.,  4512.,  4793.,  4834.,  4875.,  4916.,  4957.,  4998.,  5039.,  5080.,  9812.,  9896.,  9980., 10064., 10148., 10232., 10316., 10400., 10484., 10568., 10652., 10736.,  5207.,  5250.,  5293.,  5336., 10296., 10384., 10472., 10560., 10648., 10736., 10824., 10912., 11000., 11088., 11176., 11264.,  5457.,  5502.,  5547.,  5592.,  5637.,  5682.,  5727.,  5772.,  2046.,  2068.,  2090.,  2112.,  2134.,  2156.,  2178.,  2200.,  4177.,  4222.,  4267.,  4312.,  4357.,  4402.,  4447.,  4492.,  4537.,  4582.,  4627.,  4672.,  2231.,  2254.,  2277.,  2300.,  4363.,  4410.,  4457.,  4504.,  4551.,  4598.,  4645.,  4692.,  4739.,  4786.,  4833.,  4880.,  2328.,  2352.,  2376.,  2400.,  2424.,  2448.,  2472.,  2496.,  1625.,  1650.,  1675.,  1700.,  1725.,  1750.,  1775.,  1800.,  3307.,  3358.,  3409.,  3460.,  3511.,  3562.,  3613.,  3664.,  3715.,  3766.,  3817.,  3868.,  1794.,  1820.,  1846.,  1872.,  3437.,  3490.,  3543.,  3596.,  3649.,  3702.,  3755.,  3808.,  3861.,  3914.,  3967.,  4020.,  1863.,  1890.,  1917.,  1944.,  1971.,  1998.,  2025.,  2052.,  2325.,  2350.,  2375.,  2400.,  2425.,  2450.,  2475.,  2500.,  4735.,  4786.,  4837.,  4888.,  4939.,  4990.,  5041.,  5092.,  5143.,  5194.,  5245.,  5296.,  2522.,  2548.,  2574.,  2600.,  4921.,  4974.,  5027.,  5080.,  5133.,  5186.,  5239.,  5292.,  5345.,  5398.,  5451.,  5504.,  2619.,  2646.,  2673.,  2700.,  2727.,  2754.,  2781.,  2808.,  3277.,  3330.,  3383.,  3436.,  3489.,  3542.,  3595.,  3648.,  6668.,  6776.,  6884.,  6992.,  7100.,  7208.,  7316.,  7424.,  7532.,  7640.,  7748.,  7856.,  3627.,  3682.,  3737.,  3792.,  6928.,  7040.,  7152.,  7264.,  7376.,  7488.,  7600.,  7712.,  7824.,  7936.,  8048.,  8160.,  3765.,  3822.,  3879.,  3936.,  3993.,  4050.,  4107.,  4164.,  4761.,  4814.,  4867.,  4920.,  4973.,  5026.,  5079.,  5132.,  9692.,  9800.,  9908., 10016., 10124., 10232., 10340., 10448., 10556., 10664., 10772., 10880.,  5167.,  5222.,  5277.,  5332., 10064., 10176., 10288., 10400., 10512., 10624., 10736., 10848., 10960., 11072., 11184., 11296.,  5361.,  5418.,  5475.,  5532.,  5589.,  5646.,  5703.,  5760.,  6245.,  6298.,  6351.,  6404.,  6457.,  6510.,  6563.,  6616., 12716., 12824., 12932., 13040., 13148., 13256., 13364., 13472., 13580., 13688., 13796., 13904.,  6707.,  6762.,  6817.,  6872., 13200., 13312., 13424., 13536., 13648., 13760., 13872., 13984., 14096., 14208., 14320., 14432.,  6957.,  7014.,  7071.,  7128.,  7185.,  7242.,  7299.,  7356.,  2604.,  2632.,  2660.,  2688.,  2716.,  2744.,  2772.,  2800.,  5293.,  5350.,  5407.,  5464.,  5521.,  5578.,  5635.,  5692.,  5749.,  5806.,  5863.,  5920.,  2813.,  2842.,  2871.,  2900.,  5479.,  5538.,  5597.,  5656.,  5715.,  5774.,  5833.,  5892.,  5951.,  6010.,  6069.,  6128.,  2910.,  2940.,  2970.,  3000.,  3030.,  3060.,  3090.,  3120.,  3667.,  3726.,  3785.,  3844.,  3903.,  3962.,  4021.,  4080.,  7448.,  7568.,  7688.,  7808.,  7928.,  8048.,  8168.,  8288.,  8408.,  8528.,  8648.,  8768.,  4041.,  4102.,  4163.,  4224.,  7708.,  7832.,  7956.,  8080.,  8204.,  8328.,  8452.,  8576.,  8700.,  8824.,  8948.,  9072.,  4179.,  4242.,  4305.,  4368.,  4431.,  4494.,  4557.,  4620.,  5319.,  5378.,  5437.,  5496.,  5555.,  5614.,  5673.,  5732., 10808., 10928., 11048., 11168., 11288., 11408., 11528., 11648., 11768., 11888., 12008., 12128.,  5749.,  5810.,  5871.,  5932., 11180., 11304., 11428., 11552., 11676., 11800., 11924., 12048., 12172., 12296., 12420., 12544.,  5943.,  6006.,  6069.,  6132.,  6195.,  6258.,  6321.,  6384.,  6971.,  7030.,  7089.,  7148.,  7207.,  7266.,  7325.,  7384., 14168., 14288., 14408., 14528., 14648., 14768., 14888., 15008., 15128., 15248., 15368., 15488.,  7457.,  7518.,  7579.,  7640., 14652., 14776., 14900., 15024., 15148., 15272., 15396., 15520., 15644., 15768., 15892., 16016.,  7707.,  7770.,  7833.,  7896.,  7959.,  8022.,  8085.,  8148.,  2883.,  2914.,  2945.,  2976.,  3007.,  3038.,  3069.,  3100.,  5851.,  5914.,  5977.,  6040.,  6103.,  6166.,  6229.,  6292.,  6355.,  6418.,  6481.,  6544.,  3104.,  3136.,  3168.,  3200.,  6037.,  6102.,  6167.,  6232.,  6297.,  6362.,  6427.,  6492.,  6557.,  6622.,  6687.,  6752.,  3201.,  3234.,  3267.,  3300.,  3333.,  3366.,  3399.,  3432.,  4057.,  4122.,  4187.,  4252.,  4317.,  4382.,  4447.,  4512.,  8228.,  8360.,  8492.,  8624.,  8756.,  8888.,  9020.,  9152.,  9284.,  9416.,  9548.,  9680.,  4455.,  4522.,  4589.,  4656.,  8488.,  8624.,  8760.,  8896.,  9032.,  9168.,  9304.,  9440.,  9576.,  9712.,  9848.,  9984.,  4593.,  4662.,  4731.,  4800.,  4869.,  4938.,  5007.,  5076.,  5877.,  5942.,  6007.,  6072.,  6137.,  6202.,  6267.,  6332., 11924., 12056., 12188., 12320., 12452., 12584., 12716., 12848., 12980., 13112., 13244., 13376.,  6331.,  6398.,  6465.,  6532., 12296., 12432., 12568., 12704., 12840., 12976., 13112., 13248., 13384., 13520., 13656., 13792.,  6525.,  6594.,  6663.,  6732.,  6801.,  6870.,  6939.,  7008.,  7697.,  7762.,  7827.,  7892.,  7957.,  8022.,  8087.,  8152., 15620., 15752., 15884., 16016., 16148., 16280., 16412., 16544., 16676., 16808., 16940., 17072.,  8207.,  8274.,  8341.,  8408., 16104., 16240., 16376., 16512., 16648., 16784., 16920., 17056., 17192., 17328., 17464., 17600.,  8457.,  8526.,  8595.,  8664.,  8733.,  8802.,  8871.,  8940.,  3162.,  3196.,  3230.,  3264.,  3298.,  3332.,  3366.,  3400.,  6409.,  6478.,  6547.,  6616.,  6685.,  6754.,  6823.,  6892.,  6961.,  7030.,  7099.,  7168.,  3395.,  3430.,  3465.,  3500.,  6595.,  6666.,  6737.,  6808.,  6879.,  6950.,  7021.,  7092.,  7163.,  7234.,  7305.,  7376.,  3492.,  3528.,  3564.,  3600.,  3636.,  3672.,  3708.,  3744.};
  const std::array<int, 4> in_shape = {{ 3, 14, 11, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x11x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,    9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   19.,   22.,   25.,   28.,   31.,   34.,   37.,   40.,   43.,   46.,   49.,   52.,   26.,   28.,   30.,   32.,   34.,   36.,   38.,   40.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,  103.,  106.,  109.,  112.,  115.,  118.,  121.,  124.,  127.,  130.,  133.,  136.,   82.,   84.,   86.,   88.,   90.,   92.,   94.,   96.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,   57.,   58.,   59.,   60.,   61.,   62.,   63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  146.,  148.,  150.,  152.,  154.,  156.,  158.,  160.,  162.,  164.,  166.,  168.,   85.,   86.,   87.,   88.,   89.,   90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  202.,  204.,  206.,  208.,  210.,  212.,  214.,  216.,  218.,  220.,  222.,  224.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  148.,  152.,  156.,  160.,  164.,  168.,  172.,  176.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  302.,  308.,  314.,  320.,  326.,  332.,  338.,  344.,  350.,  356.,  362.,  368.,  374.,  380.,  386.,  392.,  228.,  232.,  236.,  240.,  244.,  248.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,  284.,  288.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  470.,  476.,  482.,  488.,  494.,  500.,  506.,  512.,  518.,  524.,  530.,  536.,  542.,  548.,  554.,  560.,  340.,  344.,  348.,  352.,  356.,  360.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,  396.,  400.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080.,  638.,  644.,  650.,  656.,  662.,  668.,  674.,  680.,  686.,  692.,  698.,  704.,  710.,  716.,  722.,  728.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  279.,  282.,  285.,  288.,  291.,  294.,  297.,  300.,  643.,  650.,  657.,  664.,  671.,  678.,  685.,  692.,  699.,  706.,  713.,  720.,  388.,  392.,  396.,  400.,  404.,  408.,  412.,  416.,  420.,  424.,  428.,  432.,  436.,  440.,  444.,  448.,  339.,  342.,  345.,  348.,  351.,  354.,  357.,  360.,  363.,  366.,  369.,  372.,  375.,  378.,  381.,  384.,  839.,  846.,  853.,  860.,  867.,  874.,  881.,  888.,  895.,  902.,  909.,  916.,  500.,  504.,  508.,  512.,  516.,  520.,  524.,  528.,  532.,  536.,  540.,  544.,  548.,  552.,  556.,  560.,  423.,  426.,  429.,  432.,  435.,  438.,  441.,  444.,  447.,  450.,  453.,  456.,  459.,  462.,  465.,  468., 1035., 1042., 1049., 1056., 1063., 1070., 1077., 1084., 1091., 1098., 1105., 1112.,  612.,  616.,  620.,  624.,  628.,  632.,  636.,  640.,  644.,  648.,  652.,  656.,  660.,  664.,  668.,  672.,  507.,  510.,  513.,  516.,  519.,  522.,  525.,  528.,  531.,  534.,  537.,  540.,  543.,  546.,  549.,  552., 1231., 1238., 1245., 1252., 1259., 1266., 1273., 1280., 1287., 1294., 1301., 1308.,  724.,  728.,  732.,  736.,  740.,  744.,  748.,  752.,  756.,  760.,  764.,  768.,  772.,  776.,  780.,  784.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    5.,   10.,   15.,   20.,   25.,   30.,   35.,   40.,   45.,   50.,   55.,   60.,   65.,   70.,   75.,   80.,   91.,  102.,  113.,  124.,  135.,  146.,  157.,  168.,  179.,  190.,  201.,  212.,   78.,   84.,   90.,   96.,  102.,  108.,  114.,  120.,  126.,  132.,  138.,  144.,  150.,  156.,  162.,  168.,  145.,  150.,  155.,  160.,  165.,  170.,  175.,  180.,  185.,  190.,  195.,  200.,  205.,  210.,  215.,  220.,  399.,  410.,  421.,  432.,  443.,  454.,  465.,  476.,  487.,  498.,  509.,  520.,  246.,  252.,  258.,  264.,  270.,  276.,  282.,  288.,  294.,  300.,  306.,  312.,  318.,  324.,  330.,  336.,  285.,  290.,  295.,  300.,  305.,  310.,  315.,  320.,  325.,  330.,  335.,  340.,  345.,  350.,  355.,  360.,  707.,  718.,  729.,  740.,  751.,  762.,  773.,  784.,  795.,  806.,  817.,  828.,  414.,  420.,  426.,  432.,  438.,  444.,  450.,  456.,  462.,  468.,  474.,  480.,  486.,  492.,  498.,  504.,  425.,  430.,  435.,  440.,  445.,  450.,  455.,  460.,  465.,  470.,  475.,  480.,  485.,  490.,  495.,  500., 1015., 1026., 1037., 1048., 1059., 1070., 1081., 1092., 1103., 1114., 1125., 1136.,  582.,  588.,  594.,  600.,  606.,  612.,  618.,  624.,  630.,  636.,  642.,  648.,  654.,  660.,  666.,  672.,  572.,  584.,  596.,  608.,  620.,  632.,  644.,  656.,  668.,  680.,  692.,  704.,  716.,  728.,  740.,  752., 1450., 1476., 1502., 1528., 1554., 1580., 1606., 1632., 1658., 1684., 1710., 1736.,  854.,  868.,  882.,  896.,  910.,  924.,  938.,  952.,  966.,  980.,  994., 1008., 1022., 1036., 1050., 1064.,  908.,  920.,  932.,  944.,  956.,  968.,  980.,  992., 1004., 1016., 1028., 1040., 1052., 1064., 1076., 1088., 2178., 2204., 2230., 2256., 2282., 2308., 2334., 2360., 2386., 2412., 2438., 2464., 1246., 1260., 1274., 1288., 1302., 1316., 1330., 1344., 1358., 1372., 1386., 1400., 1414., 1428., 1442., 1456., 1244., 1256., 1268., 1280., 1292., 1304., 1316., 1328., 1340., 1352., 1364., 1376., 1388., 1400., 1412., 1424., 2906., 2932., 2958., 2984., 3010., 3036., 3062., 3088., 3114., 3140., 3166., 3192., 1638., 1652., 1666., 1680., 1694., 1708., 1722., 1736., 1750., 1764., 1778., 1792., 1806., 1820., 1834., 1848.,  595.,  602.,  609.,  616.,  623.,  630.,  637.,  644.,  651.,  658.,  665.,  672.,  679.,  686.,  693.,  700., 1387., 1402., 1417., 1432., 1447., 1462., 1477., 1492., 1507., 1522., 1537., 1552.,  776.,  784.,  792.,  800.,  808.,  816.,  824.,  832.,  840.,  848.,  856.,  864.,  872.,  880.,  888.,  896.,  791.,  798.,  805.,  812.,  819.,  826.,  833.,  840.,  847.,  854.,  861.,  868.,  875.,  882.,  889.,  896., 1807., 1822., 1837., 1852., 1867., 1882., 1897., 1912., 1927., 1942., 1957., 1972., 1000., 1008., 1016., 1024., 1032., 1040., 1048., 1056., 1064., 1072., 1080., 1088., 1096., 1104., 1112., 1120.,  987.,  994., 1001., 1008., 1015., 1022., 1029., 1036., 1043., 1050., 1057., 1064., 1071., 1078., 1085., 1092., 2227., 2242., 2257., 2272., 2287., 2302., 2317., 2332., 2347., 2362., 2377., 2392., 1224., 1232., 1240., 1248., 1256., 1264., 1272., 1280., 1288., 1296., 1304., 1312., 1320., 1328., 1336., 1344., 1183., 1190., 1197., 1204., 1211., 1218., 1225., 1232., 1239., 1246., 1253., 1260., 1267., 1274., 1281., 1288., 2647., 2662., 2677., 2692., 2707., 2722., 2737., 2752., 2767., 2782., 2797., 2812., 1448., 1456., 1464., 1472., 1480., 1488., 1496., 1504., 1512., 1520., 1528., 1536., 1544., 1552., 1560., 1568.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    9.,   18.,   27.,   36.,   45.,   54.,   63.,   72.,   81.,   90.,   99.,  108.,  117.,  126.,  135.,  144.,  163.,  182.,  201.,  220.,  239.,  258.,  277.,  296.,  315.,  334.,  353.,  372.,  130.,  140.,  150.,  160.,  170.,  180.,  190.,  200.,  210.,  220.,  230.,  240.,  250.,  260.,  270.,  280.,  261.,  270.,  279.,  288.,  297.,  306.,  315.,  324.,  333.,  342.,  351.,  360.,  369.,  378.,  387.,  396.,  695.,  714.,  733.,  752.,  771.,  790.,  809.,  828.,  847.,  866.,  885.,  904.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  530.,  540.,  550.,  560.,  513.,  522.,  531.,  540.,  549.,  558.,  567.,  576.,  585.,  594.,  603.,  612.,  621.,  630.,  639.,  648., 1227., 1246., 1265., 1284., 1303., 1322., 1341., 1360., 1379., 1398., 1417., 1436.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  810.,  820.,  830.,  840.,  765.,  774.,  783.,  792.,  801.,  810.,  819.,  828.,  837.,  846.,  855.,  864.,  873.,  882.,  891.,  900., 1759., 1778., 1797., 1816., 1835., 1854., 1873., 1892., 1911., 1930., 1949., 1968.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080., 1090., 1100., 1110., 1120., 1028., 1048., 1068., 1088., 1108., 1128., 1148., 1168., 1188., 1208., 1228., 1248., 1268., 1288., 1308., 1328., 2490., 2532., 2574., 2616., 2658., 2700., 2742., 2784., 2826., 2868., 2910., 2952., 1406., 1428., 1450., 1472., 1494., 1516., 1538., 1560., 1582., 1604., 1626., 1648., 1670., 1692., 1714., 1736., 1588., 1608., 1628., 1648., 1668., 1688., 1708., 1728., 1748., 1768., 1788., 1808., 1828., 1848., 1868., 1888., 3666., 3708., 3750., 3792., 3834., 3876., 3918., 3960., 4002., 4044., 4086., 4128., 2022., 2044., 2066., 2088., 2110., 2132., 2154., 2176., 2198., 2220., 2242., 2264., 2286., 2308., 2330., 2352., 2148., 2168., 2188., 2208., 2228., 2248., 2268., 2288., 2308., 2328., 2348., 2368., 2388., 2408., 2428., 2448., 4842., 4884., 4926., 4968., 5010., 5052., 5094., 5136., 5178., 5220., 5262., 5304., 2638., 2660., 2682., 2704., 2726., 2748., 2770., 2792., 2814., 2836., 2858., 2880., 2902., 2924., 2946., 2968.,  935.,  946.,  957.,  968.,  979.,  990., 1001., 1012., 1023., 1034., 1045., 1056., 1067., 1078., 1089., 1100., 2131., 2154., 2177., 2200., 2223., 2246., 2269., 2292., 2315., 2338., 2361., 2384., 1164., 1176., 1188., 1200., 1212., 1224., 1236., 1248., 1260., 1272., 1284., 1296., 1308., 1320., 1332., 1344., 1243., 1254., 1265., 1276., 1287., 1298., 1309., 1320., 1331., 1342., 1353., 1364., 1375., 1386., 1397., 1408., 2775., 2798., 2821., 2844., 2867., 2890., 2913., 2936., 2959., 2982., 3005., 3028., 1500., 1512., 1524., 1536., 1548., 1560., 1572., 1584., 1596., 1608., 1620., 1632., 1644., 1656., 1668., 1680., 1551., 1562., 1573., 1584., 1595., 1606., 1617., 1628., 1639., 1650., 1661., 1672., 1683., 1694., 1705., 1716., 3419., 3442., 3465., 3488., 3511., 3534., 3557., 3580., 3603., 3626., 3649., 3672., 1836., 1848., 1860., 1872., 1884., 1896., 1908., 1920., 1932., 1944., 1956., 1968., 1980., 1992., 2004., 2016., 1859., 1870., 1881., 1892., 1903., 1914., 1925., 1936., 1947., 1958., 1969., 1980., 1991., 2002., 2013., 2024., 4063., 4086., 4109., 4132., 4155., 4178., 4201., 4224., 4247., 4270., 4293., 4316., 2172., 2184., 2196., 2208., 2220., 2232., 2244., 2256., 2268., 2280., 2292., 2304., 2316., 2328., 2340., 2352.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 11, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x11x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,   400.,   420.,   440.,   460.,   480.,   500.,   520.,   540.,   112.,   132.,   152.,   172.,    67.,    81.,    95.,   109.,   668.,   704.,   740.,   776.,   812.,   848.,   884.,   920.,   252.,   288.,   324.,   360.,   105.,   127.,   149.,   171.,   193.,   215.,   237.,   259.,   173.,   179.,   185.,   191.,     5.,    11.,    17.,    23.,   320.,   340.,   360.,   380.,   400.,   420.,   440.,   460.,   480.,   500.,   520.,   540.,    11.,    25.,    39.,    53.,   524.,   560.,   596.,   632.,   668.,   704.,   740.,   776.,   812.,   848.,   884.,   920.,    17.,    39.,    61.,    83.,   105.,   127.,   149.,   171.,   412.,   448.,   484.,   520.,   556.,   592.,   628.,   664.,   772.,   860.,   948.,  1036.,  1124.,  1212.,  1300.,  1388.,  1476.,  1564.,  1652.,  1740.,   888.,   940.,   992.,  1044.,  1052.,  1172.,  1292.,  1412.,  1532.,  1652.,  1772.,  1892.,  2012.,  2132.,  2252.,  2372.,  1220.,  1288.,  1356.,  1424.,   788.,   856.,   924.,   992.,   268.,   304.,   340.,   376.,   412.,   448.,   484.,   520.,  1828.,  1916.,  2004.,  2092.,   772.,   860.,   948.,  1036.,  1124.,  1212.,  1300.,  1388.,   680.,   732.,   784.,   836.,  2492.,  2612.,  2732.,  2852.,  1052.,  1172.,  1292.,  1412.,  1532.,  1652.,  1772.,  1892.,   948.,  1016.,  1084.,  1152.,  1220.,  1288.,  1356.,  1424.,   124.,   160.,   196.,   232.,   268.,   304.,   340.,   376.,  1476.,  1564.,  1652.,  1740.,  1828.,  1916.,  2004.,  2092.,   772.,   860.,   948.,  1036.,   472.,   524.,   576.,   628.,  2012.,  2132.,  2252.,  2372.,  2492.,  2612.,  2732.,  2852.,  1052.,  1172.,  1292.,  1412.,   676.,   744.,   812.,   880.,   948.,  1016.,  1084.,  1152.,   863.,   893.,   923.,   953.,    23.,    53.,    83.,   113.,   932.,  1000.,  1068.,  1136.,  1204.,  1272.,  1340.,  1408.,  1476.,  1544.,  1612.,  1680.,    29.,    67.,   105.,   143.,  1136.,  1220.,  1304.,  1388.,  1472.,  1556.,  1640.,  1724.,  1808.,  1892.,  1976.,  2060.,    35.,    81.,   127.,   173.,   219.,   265.,   311.,   357.,  1216.,  1300.,  1384.,  1468.,  1552.,  1636.,  1720.,  1804.,  1612.,  1796.,  1980.,  2164.,  2348.,  2532.,  2716.,  2900.,  3084.,  3268.,  3452.,  3636.,  1884.,  1984.,  2084.,  2184.,  1892.,  2108.,  2324.,  2540.,  2756.,  2972.,  3188.,  3404.,  3620.,  3836.,  4052.,  4268.,  2216.,  2332.,  2448.,  2564.,  1208.,  1324.,  1440.,  1556.,   880.,   964.,  1048.,  1132.,  1216.,  1300.,  1384.,  1468.,  3820.,  4004.,  4188.,  4372.,  1612.,  1796.,  1980.,  2164.,  2348.,  2532.,  2716.,  2900.,  1484.,  1584.,  1684.,  1784.,  4484.,  4700.,  4916.,  5132.,  1892.,  2108.,  2324.,  2540.,  2756.,  2972.,  3188.,  3404.,  1752.,  1868.,  1984.,  2100.,  2216.,  2332.,  2448.,  2564.,   544.,   628.,   712.,   796.,   880.,   964.,  1048.,  1132.,  3084.,  3268.,  3452.,  3636.,  3820.,  4004.,  4188.,  4372.,  1612.,  1796.,  1980.,  2164.,  1084.,  1184.,  1284.,  1384.,  3620.,  3836.,  4052.,  4268.,  4484.,  4700.,  4916.,  5132.,  1892.,  2108.,  2324.,  2540.,  1288.,  1404.,  1520.,  1636.,  1752.,  1868.,  1984.,  2100.,  1553.,  1607.,  1661.,  1715.,    41.,    95.,   149.,   203.,  1544.,  1660.,  1776.,  1892.,  2008.,  2124.,  2240.,  2356.,  2472.,  2588.,  2704.,  2820.,    47.,   109.,   171.,   233.,  1748.,  1880.,  2012.,  2144.,  2276.,  2408.,  2540.,  2672.,  2804.,  2936.,  3068.,  3200.,    53.,   123.,   193.,   263.,   333.,   403.,   473.,   543.,  2020.,  2152.,  2284.,  2416.,  2548.,  2680.,  2812.,  2944.,  2452.,  2732.,  3012.,  3292.,  3572.,  3852.,  4132.,  4412.,  4692.,  4972.,  5252.,  5532.,  2880.,  3028.,  3176.,  3324.,  2732.,  3044.,  3356.,  3668.,  3980.,  4292.,  4604.,  4916.,  5228.,  5540.,  5852.,  6164.,  3212.,  3376.,  3540.,  3704.,  1628.,  1792.,  1956.,  2120.,  1492.,  1624.,  1756.,  1888.,  2020.,  2152.,  2284.,  2416.,  5812.,  6092.,  6372.,  6652.,  2452.,  2732.,  3012.,  3292.,  3572.,  3852.,  4132.,  4412.,  2288.,  2436.,  2584.,  2732.,  6476.,  6788.,  7100.,  7412.,  2732.,  3044.,  3356.,  3668.,  3980.,  4292.,  4604.,  4916.,  2556.,  2720.,  2884.,  3048.,  3212.,  3376.,  3540.,  3704.,   964.,  1096.,  1228.,  1360.,  1492.,  1624.,  1756.,  1888.,  4692.,  4972.,  5252.,  5532.,  5812.,  6092.,  6372.,  6652.,  2452.,  2732.,  3012.,  3292.,  1696.,  1844.,  1992.,  2140.,  5228.,  5540.,  5852.,  6164.,  6476.,  6788.,  7100.,  7412.,  2732.,  3044.,  3356.,  3668.,  1900.,  2064.,  2228.,  2392.,  2556.,  2720.,  2884.,  3048.,  2243.,  2321.,  2399.,  2477.,    59.,   137.,   215.,   293.,  2156.,  2320.,  2484.,  2648.,  2812.,  2976.,  3140.,  3304.,  3468.,  3632.,  3796.,  3960.,    65.,   151.,   237.,   323.,  2360.,  2540.,  2720.,  2900.,  3080.,  3260.,  3440.,  3620.,  3800.,  3980.,  4160.,  4340.,    71.,   165.,   259.,   353.,   447.,   541.,   635.,   729.,    77.,   179.,   281.,   383.,   485.,   587.,   689.,   791.,  3616.,  3828.,  4040.,  4252.,  4464.,  4676.,  4888.,  5100.,  1792.,  2004.,  2216.,  2428.,   523.,   633.,   743.,   853.,  3884.,  4112.,  4340.,  4568.,  4796.,  5024.,  5252.,  5480.,  1932.,  2160.,  2388.,  2616.,   561.,   679.,   797.,   915.,  1033.,  1151.,  1269.,  1387.,  2933.,  3035.,  3137.,  3239.,    77.,   179.,   281.,   383.,  2768.,  2980.,  3192.,  3404.,  3616.,  3828.,  4040.,  4252.,  4464.,  4676.,  4888.,  5100.,    83.,   193.,   303.,   413.,  2972.,  3200.,  3428.,  3656.,  3884.,  4112.,  4340.,  4568.,  4796.,  5024.,  5252.,  5480.,    89.,   207.,   325.,   443.,   561.,   679.,   797.,   915.,  3628.,  3856.,  4084.,  4312.,  4540.,  4768.,  4996.,  5224.,  4132.,  4604.,  5076.,  5548.,  6020.,  6492.,  6964.,  7436.,  7908.,  8380.,  8852.,  9324.,  4872.,  5116.,  5360.,  5604.,  4412.,  4916.,  5420.,  5924.,  6428.,  6932.,  7436.,  7940.,  8444.,  8948.,  9452.,  9956.,  5204.,  5464.,  5724.,  5984.,  2468.,  2728.,  2988.,  3248.,  2716.,  2944.,  3172.,  3400.,  3628.,  3856.,  4084.,  4312.,  9796., 10268., 10740., 11212.,  4132.,  4604.,  5076.,  5548.,  6020.,  6492.,  6964.,  7436.,  3896.,  4140.,  4384.,  4628., 10460., 10964., 11468., 11972.,  4412.,  4916.,  5420.,  5924.,  6428.,  6932.,  7436.,  7940.,  4164.,  4424.,  4684.,  4944.,  5204.,  5464.,  5724.,  5984.,  1804.,  2032.,  2260.,  2488.,  2716.,  2944.,  3172.,  3400.,  7908.,  8380.,  8852.,  9324.,  9796., 10268., 10740., 11212.,  4132.,  4604.,  5076.,  5548.,  2920.,  3164.,  3408.,  3652.,  8444.,  8948.,  9452.,  9956., 10460., 10964., 11468., 11972.,  4412.,  4916.,  5420.,  5924.,  3124.,  3384.,  3644.,  3904.,  4164.,  4424.,  4684.,  4944.,  3623.,  3749.,  3875.,  4001.,    95.,   221.,   347.,   473.,  3380.,  3640.,  3900.,  4160.,  4420.,  4680.,  4940.,  5200.,  5460.,  5720.,  5980.,  6240.,   101.,   235.,   369.,   503.,  3584.,  3860.,  4136.,  4412.,  4688.,  4964.,  5240.,  5516.,  5792.,  6068.,  6344.,  6620.,   107.,   249.,   391.,   533.,   675.,   817.,   959.,  1101.,  4432.,  4708.,  4984.,  5260.,  5536.,  5812.,  6088.,  6364.,  4972.,  5540.,  6108.,  6676.,  7244.,  7812.,  8380.,  8948.,  9516., 10084., 10652., 11220.,  5868.,  6160.,  6452.,  6744.,  5252.,  5852.,  6452.,  7052.,  7652.,  8252.,  8852.,  9452., 10052., 10652., 11252., 11852.,  6200.,  6508.,  6816.,  7124.,  2888.,  3196.,  3504.,  3812.,  3328.,  3604.,  3880.,  4156.,  4432.,  4708.,  4984.,  5260., 11788., 12356., 12924., 13492.,  4972.,  5540.,  6108.,  6676.,  7244.,  7812.,  8380.,  8948.,  4700.,  4992.,  5284.,  5576., 12452., 13052., 13652., 14252.,  5252.,  5852.,  6452.,  7052.,  7652.,  8252.,  8852.,  9452.,  4968.,  5276.,  5584.,  5892.,  6200.,  6508.,  6816.,  7124.,  2224.,  2500.,  2776.,  3052.,  3328.,  3604.,  3880.,  4156.,  9516., 10084., 10652., 11220., 11788., 12356., 12924., 13492.,  4972.,  5540.,  6108.,  6676.,  3532.,  3824.,  4116.,  4408., 10052., 10652., 11252., 11852., 12452., 13052., 13652., 14252.,  5252.,  5852.,  6452.,  7052.,  3736.,  4044.,  4352.,  4660.,  4968.,  5276.,  5584.,  5892.,  4313.,  4463.,  4613.,  4763.,   113.,   263.,   413.,   563.,  3992.,  4300.,  4608.,  4916.,  5224.,  5532.,  5840.,  6148.,  6456.,  6764.,  7072.,  7380.,   119.,   277.,   435.,   593.,  4196.,  4520.,  4844.,  5168.,  5492.,  5816.,  6140.,  6464.,  6788.,  7112.,  7436.,  7760.,   125.,   291.,   457.,   623.,   789.,   955.,  1121.,  1287.,  5236.,  5560.,  5884.,  6208.,  6532.,  6856.,  7180.,  7504.,  5812.,  6476.,  7140.,  7804.,  8468.,  9132.,  9796., 10460., 11124., 11788., 12452., 13116.,  6864.,  7204.,  7544.,  7884.,  6092.,  6788.,  7484.,  8180.,  8876.,  9572., 10268., 10964., 11660., 12356., 13052., 13748.,  7196.,  7552.,  7908.,  8264.,  3308.,  3664.,  4020.,  4376.,  3940.,  4264.,  4588.,  4912.,  5236.,  5560.,  5884.,  6208., 13780., 14444., 15108., 15772.,  5812.,  6476.,  7140.,  7804.,  8468.,  9132.,  9796., 10460.,  5504.,  5844.,  6184.,  6524., 14444., 15140., 15836., 16532.,  6092.,  6788.,  7484.,  8180.,  8876.,  9572., 10268., 10964.,  5772.,  6128.,  6484.,  6840.,  7196.,  7552.,  7908.,  8264.,  2644.,  2968.,  3292.,  3616.,  3940.,  4264.,  4588.,  4912., 11124., 11788., 12452., 13116., 13780., 14444., 15108., 15772.,  5812.,  6476.,  7140.,  7804.,  4144.,  4484.,  4824.,  5164., 11660., 12356., 13052., 13748., 14444., 15140., 15836., 16532.,  6092.,  6788.,  7484.,  8180.,  4348.,  4704.,  5060.,  5416.,  5772.,  6128.,  6484.,  6840.,  5003.,  5177.,  5351.,  5525.,   131.,   305.,   479.,   653.,  4604.,  4960.,  5316.,  5672.,  6028.,  6384.,  6740.,  7096.,  7452.,  7808.,  8164.,  8520.,   137.,   319.,   501.,   683.,  4808.,  5180.,  5552.,  5924.,  6296.,  6668.,  7040.,  7412.,  7784.,  8156.,  8528.,  8900.,   143.,   333.,   523.,   713.,   903.,  1093.,  1283.,  1473.,   149.,   347.,   545.,   743.,   941.,  1139.,  1337.,  1535.,  6832.,  7236.,  7640.,  8044.,  8448.,  8852.,  9256.,  9660.,  3472.,  3876.,  4280.,  4684.,   979.,  1185.,  1391.,  1597.,  7100.,  7520.,  7940.,  8360.,  8780.,  9200.,  9620., 10040.,  3612.,  4032.,  4452.,  4872.,  1017.,  1231.,  1445.,  1659.,  1873.,  2087.,  2301.,  2515.,  5693.,  5891.,  6089.,  6287.,   149.,   347.,   545.,   743.,  5216.,  5620.,  6024.,  6428.,  6832.,  7236.,  7640.,  8044.,  8448.,  8852.,  9256.,  9660.,   155.,   361.,   567.,   773.,  5420.,  5840.,  6260.,  6680.,  7100.,  7520.,  7940.,  8360.,  8780.,  9200.,  9620., 10040.,   161.,   375.,   589.,   803.,  1017.,  1231.,  1445.,  1659.,  6844.,  7264.,  7684.,  8104.,  8524.,  8944.,  9364.,  9784.,  7492.,  8348.,  9204., 10060., 10916., 11772., 12628., 13484., 14340., 15196., 16052., 16908.,  8856.,  9292.,  9728., 10164.,  7772.,  8660.,  9548., 10436., 11324., 12212., 13100., 13988., 14876., 15764., 16652., 17540.,  9188.,  9640., 10092., 10544.,  4148.,  4600.,  5052.,  5504.,  5164.,  5584.,  6004.,  6424.,  6844.,  7264.,  7684.,  8104., 17764., 18620., 19476., 20332.,  7492.,  8348.,  9204., 10060., 10916., 11772., 12628., 13484.,  7112.,  7548.,  7984.,  8420., 18428., 19316., 20204., 21092.,  7772.,  8660.,  9548., 10436., 11324., 12212., 13100., 13988.,  7380.,  7832.,  8284.,  8736.,  9188.,  9640., 10092., 10544.,  3484.,  3904.,  4324.,  4744.,  5164.,  5584.,  6004.,  6424., 14340., 15196., 16052., 16908., 17764., 18620., 19476., 20332.,  7492.,  8348.,  9204., 10060.,  5368.,  5804.,  6240.,  6676., 14876., 15764., 16652., 17540., 18428., 19316., 20204., 21092.,  7772.,  8660.,  9548., 10436.,  5572.,  6024.,  6476.,  6928.,  7380.,  7832.,  8284.,  8736.,  6383.,  6605.,  6827.,  7049.,   167.,   389.,   611.,   833.,  5828.,  6280.,  6732.,  7184.,  7636.,  8088.,  8540.,  8992.,  9444.,  9896., 10348., 10800.,   173.,   403.,   633.,   863.,  6032.,  6500.,  6968.,  7436.,  7904.,  8372.,  8840.,  9308.,  9776., 10244., 10712., 11180.,   179.,   417.,   655.,   893.,  1131.,  1369.,  1607.,  1845.,  7648.,  8116.,  8584.,  9052.,  9520.,  9988., 10456., 10924.,  8332.,  9284., 10236., 11188., 12140., 13092., 14044., 14996., 15948., 16900., 17852., 18804.,  9852., 10336., 10820., 11304.,  8420.,  9148.,  9876., 10604., 11332., 12060., 12788., 13516., 14244., 14972., 15700., 16428.,  6920.,  7164.,  7408.,  7652.,   280.,   524.,   768.,  1012.,  5776.,  6244.,  6712.,  7180.,  7648.,  8116.,  8584.,  9052., 19756., 20708., 21660., 22612.,  8332.,  9284., 10236., 11188., 12140., 13092., 14044., 14996.,  7916.,  8400.,  8884.,  9368., 13060., 13788., 14516., 15244.,  8420.,  9148.,  9876., 10604., 11332., 12060., 12788., 13516.,  5944.,  6188.,  6432.,  6676.,  6920.,  7164.,  7408.,  7652.,  3904.,  4372.,  4840.,  5308.,  5776.,  6244.,  6712.,  7180., 15948., 16900., 17852., 18804., 19756., 20708., 21660., 22612.,  8332.,  9284., 10236., 11188.,  5980.,  6464.,  6948.,  7432., 10148., 10876., 11604., 12332., 13060., 13788., 14516., 15244.,  8420.,  9148.,  9876., 10604.,  4968.,  5212.,  5456.,  5700.,  5944.,  6188.,  6432.,  6676.,  7073.,  7319.,  7565.,  7811.,   185.,   431.,   677.,   923.,  6440.,  6940.,  7440.,  7940.,  8440.,  8940.,  9440.,  9940., 10440., 10940., 11440., 11940.,   191.,   445.,   699.,   953.,  1332.,  1592.,  1852.,  2112.,  2372.,  2632.,  2892.,  3152.,  3412.,  3672.,  3932.,  4192.,     5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,  6212.,  6472.,  6732.,  6992.,  7252.,  7512.,  7772.,  8032.,  4692.,  5228.,  5764.,  6300.,  6836.,  7372.,  7908.,  8444.,  8980.,  9516., 10052., 10588.,  7584.,  7860.,  8136.,  8412.,   684.,   996.,  1308.,  1620.,  1932.,  2244.,  2556.,  2868.,  3180.,  3492.,  3804.,  4116.,   556.,   592.,   628.,   664.,   508.,   544.,   580.,   616.,  5172.,  5432.,  5692.,  5952.,  6212.,  6472.,  6732.,  6992., 11124., 11660., 12196., 12732.,  4692.,  5228.,  5764.,  6300.,  6836.,  7372.,  7908.,  8444.,  6480.,  6756.,  7032.,  7308.,  8524.,  8836.,  9148.,  9460.,   684.,   996.,  1308.,  1620.,  1932.,  2244.,  2556.,  2868.,   412.,   448.,   484.,   520.,   556.,   592.,   628.,   664.,  4132.,  4392.,  4652.,  4912.,  5172.,  5432.,  5692.,  5952.,  8980.,  9516., 10052., 10588., 11124., 11660., 12196., 12732.,  4692.,  5228.,  5764.,  6300.,  5376.,  5652.,  5928.,  6204.,  7276.,  7588.,  7900.,  8212.,  8524.,  8836.,  9148.,  9460.,   684.,   996.,  1308.,  1620.,   268.,   304.,   340.,   376.,   412.,   448.,   484.,   520.,   403.,   417.,   431.,   445.,    11.,    25.,    39.,    53.,   524.,   560.,   596.,   632.,   668.,   704.,   740.,   776.,   812.,   848.,   884.,   920.,    17.,    39.,    61.,    83.,   728.,   780.,   832.,   884.,   936.,   988.,  1040.,  1092.,  1144.,  1196.,  1248.,  1300.,    23.,    53.,    83.,   113.,   143.,   173.,   203.,   233.};
  const std::array<int, 4> in_shape = {{ 3, 14, 11, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x11x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,    53.,    59.,    65.,    71.,    77.,    83.,    89.,    95.,   112.,   132.,   152.,   172.,   192.,   212.,   232.,   252.,   272.,   292.,   312.,   332.,   179.,   193.,   207.,   221.,   235.,   249.,   263.,   277.,   291.,   305.,   319.,   333.,   347.,   361.,   375.,   389.,   173.,   179.,   185.,   191.,   197.,   203.,   209.,   215.,   221.,   227.,   233.,   239.,   245.,   251.,   257.,   263.,   672.,   692.,   712.,   732.,   752.,   772.,   792.,   812.,   832.,   852.,   872.,   892.,   571.,   585.,   599.,   613.,   627.,   641.,   655.,   669.,   683.,   697.,   711.,   725.,   739.,   753.,   767.,   781.,   341.,   347.,   353.,   359.,   365.,   371.,   377.,   383.,   389.,   395.,   401.,   407.,   413.,   419.,   425.,   431.,  1232.,  1252.,  1272.,  1292.,  1312.,  1332.,  1352.,  1372.,  1392.,  1412.,  1432.,  1452.,   963.,   977.,   991.,  1005.,  1019.,  1033.,  1047.,  1061.,  1075.,  1089.,  1103.,  1117.,  1131.,  1145.,  1159.,  1173.,   509.,   515.,   521.,   527.,   533.,   539.,   545.,   551.,   557.,   563.,   569.,   575.,   581.,   587.,   593.,   599.,  1792.,  1812.,  1832.,  1852.,  1872.,  1892.,  1912.,  1932.,  1952.,  1972.,  1992.,  2012.,  1355.,  1369.,  1383.,  1397.,  1411.,  1425.,  1439.,  1453.,  1467.,  1481.,  1495.,  1509.,  1523.,  1537.,  1551.,  1565.,   694.,   722.,   750.,   778.,   806.,   834.,   862.,   890.,   918.,   946.,   974.,  1002.,  1030.,  1058.,  1086.,  1114.,  1976.,  2048.,  2120.,  2192.,  2264.,  2336.,  2408.,  2480.,  2552.,  2624.,  2696.,  2768.,  2130.,  2174.,  2218.,  2262.,   514.,   558.,   602.,   646.,   690.,   734.,   778.,   822.,   866.,   910.,   954.,   998.,   710.,   738.,   766.,   794.,   822.,   850.,   878.,   906.,   934.,   962.,   990.,  1018.,  1046.,  1074.,  1102.,  1130.,  2200.,  2272.,  2344.,  2416.,  2488.,  2560.,  2632.,  2704.,  2776.,  2848.,  2920.,  2992.,  1570.,  1614.,  1658.,  1702.,  1746.,  1790.,  1834.,  1878.,  1922.,  1966.,  2010.,  2054.,  2098.,  2142.,  2186.,  2230.,  1494.,  1522.,  1550.,  1578.,  1606.,  1634.,  1662.,  1690.,  1718.,  1746.,  1774.,  1802.,  1830.,  1858.,  1886.,  1914.,  4216.,  4288.,  4360.,  4432.,  4504.,  4576.,  4648.,  4720.,  4792.,  4864.,  4936.,  5008.,  2802.,  2846.,  2890.,  2934.,  2978.,  3022.,  3066.,  3110.,  3154.,  3198.,  3242.,  3286.,  3330.,  3374.,  3418.,  3462.,  1865.,  1887.,  1909.,  1931.,  1953.,  1975.,  1997.,  2019.,  2041.,  2063.,  2085.,  2107.,  2129.,  2151.,  2173.,  2195.,  4760.,  4812.,  4864.,  4916.,  4968.,  5020.,  5072.,  5124.,  5176.,  5228.,  5280.,  5332.,  2903.,  2933.,  2963.,  2993.,  3023.,  3053.,  3083.,  3113.,  3143.,  3173.,  3203.,  3233.,  3263.,  3293.,  3323.,  3353.,  2481.,  2503.,  2525.,  2547.,  2569.,  2591.,  2613.,  2635.,  2657.,  2679.,  2701.,  2723.,  2745.,  2767.,  2789.,  2811.,  3400.,  3452.,  3504.,  3556.,  3608.,  3660.,  3712.,  3764.,  3816.,  3868.,  3920.,  3972.,  3743.,  3773.,  3803.,  3833.,    23.,    53.,    83.,   113.,   143.,   173.,   203.,   233.,   263.,   293.,   323.,   353.,   281.,   303.,   325.,   347.,   369.,   391.,   413.,   435.,   457.,   479.,   501.,   523.,   545.,   567.,   589.,   611.,  1016.,  1068.,  1120.,  1172.,  1224.,  1276.,  1328.,  1380.,  1432.,  1484.,  1536.,  1588.,   743.,   773.,   803.,   833.,   863.,   893.,   923.,   953.,   983.,  1013.,  1043.,  1073.,  1103.,  1133.,  1163.,  1193.,   897.,   919.,   941.,   963.,   985.,  1007.,  1029.,  1051.,  1073.,  1095.,  1117.,  1139.,  1161.,  1183.,  1205.,  1227.,  2472.,  2524.,  2576.,  2628.,  2680.,  2732.,  2784.,  2836.,  2888.,  2940.,  2992.,  3044.,  1583.,  1613.,  1643.,  1673.,  1703.,  1733.,  1763.,  1793.,  1823.,  1853.,  1883.,  1913.,  1943.,  1973.,  2003.,  2033.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    29.,    67.,   105.,   143.,   181.,   219.,   257.,   295.,   333.,   371.,   409.,   447.,   485.,   523.,   561.,   599.,   672.,   756.,   840.,   924.,  1008.,  1092.,  1176.,  1260.,  1344.,  1428.,  1512.,  1596.,   587.,   633.,   679.,   725.,   771.,   817.,   863.,   909.,   955.,  1001.,  1047.,  1093.,  1139.,  1185.,  1231.,  1277.,  1093.,  1131.,  1169.,  1207.,  1245.,  1283.,  1321.,  1359.,  1397.,  1435.,  1473.,  1511.,  1549.,  1587.,  1625.,  1663.,  3024.,  3108.,  3192.,  3276.,  3360.,  3444.,  3528.,  3612.,  3696.,  3780.,  3864.,  3948.,  1875.,  1921.,  1967.,  2013.,  2059.,  2105.,  2151.,  2197.,  2243.,  2289.,  2335.,  2381.,  2427.,  2473.,  2519.,  2565.,  2157.,  2195.,  2233.,  2271.,  2309.,  2347.,  2385.,  2423.,  2461.,  2499.,  2537.,  2575.,  2613.,  2651.,  2689.,  2727.,  5376.,  5460.,  5544.,  5628.,  5712.,  5796.,  5880.,  5964.,  6048.,  6132.,  6216.,  6300.,  3163.,  3209.,  3255.,  3301.,  3347.,  3393.,  3439.,  3485.,  3531.,  3577.,  3623.,  3669.,  3715.,  3761.,  3807.,  3853.,  3221.,  3259.,  3297.,  3335.,  3373.,  3411.,  3449.,  3487.,  3525.,  3563.,  3601.,  3639.,  3677.,  3715.,  3753.,  3791.,  7728.,  7812.,  7896.,  7980.,  8064.,  8148.,  8232.,  8316.,  8400.,  8484.,  8568.,  8652.,  4451.,  4497.,  4543.,  4589.,  4635.,  4681.,  4727.,  4773.,  4819.,  4865.,  4911.,  4957.,  5003.,  5049.,  5095.,  5141.,  4326.,  4418.,  4510.,  4602.,  4694.,  4786.,  4878.,  4970.,  5062.,  5154.,  5246.,  5338.,  5430.,  5522.,  5614.,  5706.,  6168.,  6368.,  6568.,  6768.,  6968.,  7168.,  7368.,  7568.,  7768.,  7968.,  8168.,  8368.,  6530.,  6638.,  6746.,  6854.,  1074.,  1182.,  1290.,  1398.,  1506.,  1614.,  1722.,  1830.,  1938.,  2046.,  2154.,  2262.,  2038.,  2130.,  2222.,  2314.,  2406.,  2498.,  2590.,  2682.,  2774.,  2866.,  2958.,  3050.,  3142.,  3234.,  3326.,  3418.,  5880.,  6080.,  6280.,  6480.,  6680.,  6880.,  7080.,  7280.,  7480.,  7680.,  7880.,  8080.,  3666.,  3774.,  3882.,  3990.,  4098.,  4206.,  4314.,  4422.,  4530.,  4638.,  4746.,  4854.,  4962.,  5070.,  5178.,  5286.,  4614.,  4706.,  4798.,  4890.,  4982.,  5074.,  5166.,  5258.,  5350.,  5442.,  5534.,  5626.,  5718.,  5810.,  5902.,  5994., 11480., 11680., 11880., 12080., 12280., 12480., 12680., 12880., 13080., 13280., 13480., 13680.,  6690.,  6798.,  6906.,  7014.,  7122.,  7230.,  7338.,  7446.,  7554.,  7662.,  7770.,  7878.,  7986.,  8094.,  8202.,  8310.,  4577.,  4631.,  4685.,  4739.,  4793.,  4847.,  4901.,  4955.,  5009.,  5063.,  5117.,  5171.,  5225.,  5279.,  5333.,  5387., 10696., 10812., 10928., 11044., 11160., 11276., 11392., 11508., 11624., 11740., 11856., 11972.,  5999.,  6061.,  6123.,  6185.,  6247.,  6309.,  6371.,  6433.,  6495.,  6557.,  6619.,  6681.,  6743.,  6805.,  6867.,  6929.,  6089.,  6143.,  6197.,  6251.,  6305.,  6359.,  6413.,  6467.,  6521.,  6575.,  6629.,  6683.,  6737.,  6791.,  6845.,  6899.,  7032.,  7148.,  7264.,  7380.,  7496.,  7612.,  7728.,  7844.,  7960.,  8076.,  8192.,  8308.,  7735.,  7797.,  7859.,  7921.,    47.,   109.,   171.,   233.,   295.,   357.,   419.,   481.,   543.,   605.,   667.,   729.,   689.,   743.,   797.,   851.,   905.,   959.,  1013.,  1067.,  1121.,  1175.,  1229.,  1283.,  1337.,  1391.,  1445.,  1499.,  2344.,  2460.,  2576.,  2692.,  2808.,  2924.,  3040.,  3156.,  3272.,  3388.,  3504.,  3620.,  1535.,  1597.,  1659.,  1721.,  1783.,  1845.,  1907.,  1969.,  2031.,  2093.,  2155.,  2217.,  2279.,  2341.,  2403.,  2465.,  2201.,  2255.,  2309.,  2363.,  2417.,  2471.,  2525.,  2579.,  2633.,  2687.,  2741.,  2795.,  2849.,  2903.,  2957.,  3011.,  5592.,  5708.,  5824.,  5940.,  6056.,  6172.,  6288.,  6404.,  6520.,  6636.,  6752.,  6868.,  3271.,  3333.,  3395.,  3457.,  3519.,  3581.,  3643.,  3705.,  3767.,  3829.,  3891.,  3953.,  4015.,  4077.,  4139.,  4201.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    53.,   123.,   193.,   263.,   333.,   403.,   473.,   543.,   613.,   683.,   753.,   823.,   893.,   963.,  1033.,  1103.,  1232.,  1380.,  1528.,  1676.,  1824.,  1972.,  2120.,  2268.,  2416.,  2564.,  2712.,  2860.,   995.,  1073.,  1151.,  1229.,  1307.,  1385.,  1463.,  1541.,  1619.,  1697.,  1775.,  1853.,  1931.,  2009.,  2087.,  2165.,  2013.,  2083.,  2153.,  2223.,  2293.,  2363.,  2433.,  2503.,  2573.,  2643.,  2713.,  2783.,  2853.,  2923.,  2993.,  3063.,  5376.,  5524.,  5672.,  5820.,  5968.,  6116.,  6264.,  6412.,  6560.,  6708.,  6856.,  7004.,  3179.,  3257.,  3335.,  3413.,  3491.,  3569.,  3647.,  3725.,  3803.,  3881.,  3959.,  4037.,  4115.,  4193.,  4271.,  4349.,  3973.,  4043.,  4113.,  4183.,  4253.,  4323.,  4393.,  4463.,  4533.,  4603.,  4673.,  4743.,  4813.,  4883.,  4953.,  5023.,  9520.,  9668.,  9816.,  9964., 10112., 10260., 10408., 10556., 10704., 10852., 11000., 11148.,  5363.,  5441.,  5519.,  5597.,  5675.,  5753.,  5831.,  5909.,  5987.,  6065.,  6143.,  6221.,  6299.,  6377.,  6455.,  6533.,  5933.,  6003.,  6073.,  6143.,  6213.,  6283.,  6353.,  6423.,  6493.,  6563.,  6633.,  6703.,  6773.,  6843.,  6913.,  6983., 13664., 13812., 13960., 14108., 14256., 14404., 14552., 14700., 14848., 14996., 15144., 15292.,  7547.,  7625.,  7703.,  7781.,  7859.,  7937.,  8015.,  8093.,  8171.,  8249.,  8327.,  8405.,  8483.,  8561.,  8639.,  8717.,  7958.,  8114.,  8270.,  8426.,  8582.,  8738.,  8894.,  9050.,  9206.,  9362.,  9518.,  9674.,  9830.,  9986., 10142., 10298., 10360., 10688., 11016., 11344., 11672., 12000., 12328., 12656., 12984., 13312., 13640., 13968., 10930., 11102., 11274., 11446.,  1634.,  1806.,  1978.,  2150.,  2322.,  2494.,  2666.,  2838.,  3010.,  3182.,  3354.,  3526.,  3366.,  3522.,  3678.,  3834.,  3990.,  4146.,  4302.,  4458.,  4614.,  4770.,  4926.,  5082.,  5238.,  5394.,  5550.,  5706.,  9560.,  9888., 10216., 10544., 10872., 11200., 11528., 11856., 12184., 12512., 12840., 13168.,  5762.,  5934.,  6106.,  6278.,  6450.,  6622.,  6794.,  6966.,  7138.,  7310.,  7482.,  7654.,  7826.,  7998.,  8170.,  8342.,  7734.,  7890.,  8046.,  8202.,  8358.,  8514.,  8670.,  8826.,  8982.,  9138.,  9294.,  9450.,  9606.,  9762.,  9918., 10074., 18744., 19072., 19400., 19728., 20056., 20384., 20712., 21040., 21368., 21696., 22024., 22352., 10578., 10750., 10922., 11094., 11266., 11438., 11610., 11782., 11954., 12126., 12298., 12470., 12642., 12814., 12986., 13158.,  7289.,  7375.,  7461.,  7547.,  7633.,  7719.,  7805.,  7891.,  7977.,  8063.,  8149.,  8235.,  8321.,  8407.,  8493.,  8579., 16632., 16812., 16992., 17172., 17352., 17532., 17712., 17892., 18072., 18252., 18432., 18612.,  9095.,  9189.,  9283.,  9377.,  9471.,  9565.,  9659.,  9753.,  9847.,  9941., 10035., 10129., 10223., 10317., 10411., 10505.,  9697.,  9783.,  9869.,  9955., 10041., 10127., 10213., 10299., 10385., 10471., 10557., 10643., 10729., 10815., 10901., 10987., 10664., 10844., 11024., 11204., 11384., 11564., 11744., 11924., 12104., 12284., 12464., 12644., 11727., 11821., 11915., 12009.,    71.,   165.,   259.,   353.,   447.,   541.,   635.,   729.,   823.,   917.,  1011.,  1105.,  1097.,  1183.,  1269.,  1355.,  1441.,  1527.,  1613.,  1699.,  1785.,  1871.,  1957.,  2043.,  2129.,  2215.,  2301.,  2387.,  3672.,  3852.,  4032.,  4212.,  4392.,  4572.,  4752.,  4932.,  5112.,  5292.,  5472.,  5652.,  2327.,  2421.,  2515.,  2609.,  2703.,  2797.,  2891.,  2985.,  3079.,  3173.,  3267.,  3361.,  3455.,  3549.,  3643.,  3737.,  3505.,  3591.,  3677.,  3763.,  3849.,  3935.,  4021.,  4107.,  4193.,  4279.,  4365.,  4451.,  4537.,  4623.,  4709.,  4795.,  8712.,  8892.,  9072.,  9252.,  9432.,  9612.,  9792.,  9972., 10152., 10332., 10512., 10692.,  4959.,  5053.,  5147.,  5241.,  5335.,  5429.,  5523.,  5617.,  5711.,  5805.,  5899.,  5993.,  6087.,  6181.,  6275.,  6369.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 11, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x11x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   500.,  1284.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   420.,  1076.,  1732.,  2388.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  2390.,  2750.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   180.,   452.,   724.,   996.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   420.,  1076.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   500.,  1284.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   420.,  1076.,  1732.,  2388.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.};
  const std::array<int, 4> in_shape = {{ 3, 14, 11, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x11x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 11, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x12x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  16.,   17.,   18.,   49.,   52.,   55.,   36.,   83.,   88.,   93.,   54.,   57.,   23.,   24.,   25.,   70.,   73.,   76.,   50.,  118.,  123.,  128.,   75.,   78.,   38.,   43.,   48.,  116.,  128.,  140.,   84.,  184.,  200.,  216.,  120.,  129.,   73.,   78.,   83.,  200.,  212.,  224.,  133.,  296.,  312.,  328.,  183.,  192.,  108.,  113.,  118.,  284.,  296.,  308.,  182.,  408.,  424.,  440.,  246.,  255.,   92.,   96.,  100.,  214.,  223.,  232.,  125.,  262.,  273.,  284.,  150.,  156.,  134.,  145.,  156.,  320.,  344.,  368.,  192.,  388.,  416.,  444.,  228.,  243.,  211.,  222.,  233.,  488.,  512.,  536.,  283.,  584.,  612.,  640.,  333.,  348.,  288.,  299.,  310.,  656.,  680.,  704.,  374.,  780.,  808.,  836.,  438.,  453.,  161.,  168.,  175.,  358.,  373.,  388.,  200.,  406.,  423.,  440.,  225.,  234.,  230.,  247.,  264.,  524.,  560.,  596.,  300.,  592.,  632.,  672.,  336.,  357.,  349.,  366.,  383.,  776.,  812.,  848.,  433.,  872.,  912.,  952.,  483.,  504.,  468.,  485.,  502., 1028., 1064., 1100.,  566., 1152., 1192., 1232.,  630.,  651.,  230.,  240.,  250.,  502.,  523.,  544.,  275.,  550.,  573.,  596.,  300.,  312.,  208.,  221.,  234.,  457.,  484.,  511.,  252.,  491.,  520.,  549.,  270.,  285.,  299.,  312.,  325.,  646.,  673.,  700.,  350.,  694.,  723.,  752.,  375.,  390.,  422.,  451.,  480.,  932.,  992., 1052.,  516., 1000., 1064., 1128.,  552.,  585.,  625.,  654.,  683., 1352., 1412., 1472.,  733., 1448., 1512., 1576.,  783.,  816.,  828.,  857.,  886., 1772., 1832., 1892.,  950., 1896., 1960., 2024., 1014., 1047.,  368.,  384.,  400.,  790.,  823.,  856.,  425.,  838.,  873.,  908.,  450.,  468.,  518.,  553.,  588., 1136., 1208., 1280.,  624., 1204., 1280., 1356.,  660.,  699.,  763.,  798.,  833., 1640., 1712., 1784.,  883., 1736., 1812., 1888.,  933.,  972., 1008., 1043., 1078., 2144., 2216., 2288., 1142., 2268., 2344., 2420., 1206., 1245.,  437.,  456.,  475.,  934.,  973., 1012.,  500.,  982., 1023., 1064.,  525.,  546.,  614.,  655.,  696., 1340., 1424., 1508.,  732., 1408., 1496., 1584.,  768.,  813.,  901.,  942.,  983., 1928., 2012., 2096., 1033., 2024., 2112., 2200., 1083., 1128., 1188., 1229., 1270., 2516., 2600., 2684., 1334., 2640., 2728., 2816., 1398., 1443.,  506.,  528.,  550., 1078., 1123., 1168.,  575., 1126., 1173., 1220.,  600.,  624.,  400.,  425.,  450.,  865.,  916.,  967.,  468.,  899.,  952., 1005.,  486.,  513.,  575.,  600.,  625., 1222., 1273., 1324.,  650., 1270., 1323., 1376.,  675.,  702.,  806.,  859.,  912., 1748., 1856., 1964.,  948., 1816., 1928., 2040.,  984., 1041., 1177., 1230., 1283., 2504., 2612., 2720., 1333., 2600., 2712., 2824., 1383., 1440., 1548., 1601., 1654., 3260., 3368., 3476., 1718., 3384., 3496., 3608., 1782., 1839.,  644.,  672.,  700., 1366., 1423., 1480.,  725., 1414., 1473., 1532.,  750.,  780.,  902.,  961., 1020., 1952., 2072., 2192., 1056., 2020., 2144., 2268., 1092., 1155., 1315., 1374., 1433., 2792., 2912., 3032., 1483., 2888., 3012., 3136., 1533., 1596., 1728., 1787., 1846., 3632., 3752., 3872., 1910., 3756., 3880., 4004., 1974., 2037.,  713.,  744.,  775., 1510., 1573., 1636.,  800., 1558., 1623., 1688.,  825.,  858.,  998., 1063., 1128., 2156., 2288., 2420., 1164., 2224., 2360., 2496., 1200., 1269., 1453., 1518., 1583., 3080., 3212., 3344., 1633., 3176., 3312., 3448., 1683., 1752., 1908., 1973., 2038., 4004., 4136., 4268., 2102., 4128., 4264., 4400., 2166., 2235.,  782.,  816.,  850., 1654., 1723., 1792.,  875., 1702., 1773., 1844.,  900.,  936.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x12x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    7.,   10.,   13.,    8.,   10.,   12.,   14.,    0.,    8.,    9.,   10.,   11.,   28.,   31.,   34.,   22.,   24.,   26.,   28.,    0.,   15.,   16.,   17.,   18.,   49.,   52.,   55.,   36.,   38.,   40.,   42.,    0.,   22.,   23.,   24.,   25.,   70.,   73.,   76.,   50.,   52.,   54.,   56.,    0.,   32.,   36.,   40.,   44.,  110.,  120.,  130.,   80.,   86.,   92.,   98.,    0.,   60.,   64.,   68.,   72.,  180.,  190.,  200.,  122.,  128.,  134.,  140.,    0.,   88.,   92.,   96.,  100.,  250.,  260.,  270.,  164.,  170.,  176.,  182.,    0.,   66.,   69.,   72.,   75.,  166.,  173.,  180.,  100.,  104.,  108.,  112.,    0.,   87.,   90.,   93.,   96.,  215.,  222.,  229.,  128.,  132.,  136.,  140.,    0.,  108.,  111.,  114.,  117.,  264.,  271.,  278.,  156.,  160.,  164.,  168.,    0.,  129.,  132.,  135.,  138.,  313.,  320.,  327.,  184.,  188.,  192.,  196.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    5.,   10.,   15.,   20.,   31.,   42.,   53.,   24.,   30.,   36.,   42.,    0.,   40.,   45.,   50.,   55.,  108.,  119.,  130.,   66.,   72.,   78.,   84.,    0.,   75.,   80.,   85.,   90.,  185.,  196.,  207.,  108.,  114.,  120.,  126.,    0.,  110.,  115.,  120.,  125.,  262.,  273.,  284.,  150.,  156.,  162.,  168.,    0.,  152.,  164.,  176.,  188.,  382.,  408.,  434.,  224.,  238.,  252.,  266.,    0.,  236.,  248.,  260.,  272.,  564.,  590.,  616.,  322.,  336.,  350.,  364.,    0.,  320.,  332.,  344.,  356.,  746.,  772.,  798.,  420.,  434.,  448.,  462.,    0.,  154.,  161.,  168.,  175.,  358.,  373.,  388.,  200.,  208.,  216.,  224.,    0.,  203.,  210.,  217.,  224.,  463.,  478.,  493.,  256.,  264.,  272.,  280.,    0.,  252.,  259.,  266.,  273.,  568.,  583.,  598.,  312.,  320.,  328.,  336.,    0.,  301.,  308.,  315.,  322.,  673.,  688.,  703.,  368.,  376.,  384.,  392.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    9.,   18.,   27.,   36.,   55.,   74.,   93.,   40.,   50.,   60.,   70.,    0.,   72.,   81.,   90.,   99.,  188.,  207.,  226.,  110.,  120.,  130.,  140.,    0.,  135.,  144.,  153.,  162.,  321.,  340.,  359.,  180.,  190.,  200.,  210.,    0.,  198.,  207.,  216.,  225.,  454.,  473.,  492.,  250.,  260.,  270.,  280.,    0.,  272.,  292.,  312.,  332.,  654.,  696.,  738.,  368.,  390.,  412.,  434.,    0.,  412.,  432.,  452.,  472.,  948.,  990., 1032.,  522.,  544.,  566.,  588.,    0.,  552.,  572.,  592.,  612., 1242., 1284., 1326.,  676.,  698.,  720.,  742.,    0.,  242.,  253.,  264.,  275.,  550.,  573.,  596.,  300.,  312.,  324.,  336.,    0.,  319.,  330.,  341.,  352.,  711.,  734.,  757.,  384.,  396.,  408.,  420.,    0.,  396.,  407.,  418.,  429.,  872.,  895.,  918.,  468.,  480.,  492.,  504.,    0.,  473.,  484.,  495.,  506., 1033., 1056., 1079.,  552.,  564.,  576.,  588.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x12x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   95.,   101.,   107.,   320.,   340.,   360.,   249.,   588.,   624.,   660.,   391.,   413.,   137.,   143.,   149.,   460.,   480.,   500.,   347.,   840.,   876.,   912.,   545.,   567.,   232.,   268.,   304.,   580.,   668.,   756.,   588.,   860.,   980.,  1100.,   872.,   236.,   292.,   328.,   364.,   748.,   836.,   924.,   504.,   996.,  1116.,  1236.,   644.,   712.,   544.,   580.,   616.,  1364.,  1452.,  1540.,   868.,  1836.,  1956.,  2076.,  1120.,  1188.,   683.,   713.,   743.,  1600.,  1668.,  1736.,   941.,  1980.,  2064.,  2148.,  1139.,  1185.,   988.,  1072.,  1156.,  1420.,  1604.,  1788.,  1440.,  1700.,  1916.,  2132.,  1724.,   368.,   616.,   700.,   784.,  1492.,  1676.,  1860.,   924.,  1740.,  1956.,  2172.,  1064.,  1180.,  1204.,  1288.,  1372.,  2780.,  2964.,  3148.,  1624.,  3252.,  3468.,  3684.,  1876.,  1992.,  1229.,  1283.,  1337.,  2740.,  2856.,  2972.,  1535.,  3120.,  3252.,  3384.,  1733.,  1803.,  1744.,  1876.,  2008.,  2260.,  2540.,  2820.,  2292.,  2540.,  2852.,  3164.,  2576.,   500.,   940.,  1072.,  1204.,  2236.,  2516.,  2796.,  1344.,  2484.,  2796.,  3108.,  1484.,  1648.,  1864.,  1996.,  2128.,  4196.,  4476.,  4756.,  2380.,  4668.,  4980.,  5292.,  2632.,  2796.,  1775.,  1853.,  1931.,  3880.,  4044.,  4208.,  2129.,  4260.,  4440.,  4620.,  2327.,  2421.,  1607.,  1709.,  1811.,  3536.,  3748.,  3960.,  1953.,  3804.,  4032.,  4260.,  2095.,  2213.,  2321.,  2423.,  2525.,  5020.,  5232.,  5444.,  2723.,  5400.,  5628.,  5856.,  2921.,  3039.,  3256.,  3484.,  3712.,  3940.,  4412.,  4884.,  3996.,  4220.,  4724.,  5228.,  4280.,   764.,  1588.,  1816.,  2044.,  3724.,  4196.,  4668.,  2184.,  3972.,  4476.,  4980.,  2324.,  2584.,  3184.,  3412.,  3640.,  7028.,  7500.,  7972.,  3892.,  7500.,  8004.,  8508.,  4144.,  4404.,  2867.,  2993.,  3119.,  6160.,  6420.,  6680.,  3317.,  6540.,  6816.,  7092.,  3515.,  3657.,  4012.,  4288.,  4564.,  4780.,  5348.,  5916.,  4848.,  5060.,  5660.,  6260.,  5132.,   896.,  1912.,  2188.,  2464.,  4468.,  5036.,  5604.,  2604.,  4716.,  5316.,  5916.,  2744.,  3052.,  3844.,  4120.,  4396.,  8444.,  9012.,  9580.,  4648.,  8916.,  9516., 10116.,  4900.,  5208.,  3413.,  3563.,  3713.,  7300.,  7608.,  7916.,  3911.,  7680.,  8004.,  8328.,  4109.,  4275.,  4768.,  5092.,  5416.,  5620.,  6284.,  6948.,  5700.,  5900.,  6596.,  7292.,  5984.,  1028.,  2236.,  2560.,  2884.,  5212.,  5876.,  6540.,  3024.,  5460.,  6156.,  6852.,  3164.,  3520.,  4504.,  4828.,  5152.,  9860., 10524., 11188.,  5404., 10332., 11028., 11724.,  5656.,  6012.,  3959.,  4133.,  4307.,  8440.,  8796.,  9152.,  4505.,  8820.,  9192.,  9564.,  4703.,  4893.,  3119.,  3317.,  3515.,  6752.,  7156.,  7560.,  3657.,  7020.,  7440.,  7860.,  3799.,  4013.,  4505.,  4703.,  4901.,  9580.,  9984., 10388.,  5099.,  9960., 10380., 10800.,  5297.,  5511.,  6280.,  6700.,  7120.,  7300.,  8156.,  9012.,  7404.,  7580.,  8468.,  9356.,  7688.,  1292.,  2884.,  3304.,  3724.,  6700.,  7556.,  8412.,  3864.,  6948.,  7836.,  8724.,  4004.,  4456.,  5824.,  6244.,  6664., 12692., 13548., 14404.,  6916., 13164., 14052., 14940.,  7168.,  7620.,  5051.,  5273.,  5495., 10720., 11172., 11624.,  5693., 11100., 11568., 12036.,  5891.,  6129.,  7036.,  7504.,  7972.,  8140.,  9092., 10044.,  8256.,  8228.,  8956.,  9684.,  7580.,   208.,  3208.,  3676.,  4144.,  7444.,  8396.,  9348.,  4284.,  5708.,  6436.,  7164.,  1672.,  1916.,  6484.,  6952.,  7420., 14108., 15060., 16012.,  7672., 10804., 11532., 12260.,  3380.,  3624.,  5597.,  5843.,  6089., 11860., 12360., 12860.,  6287.,  6672.,  6932.,  7192.,   149.,   155.,  7344.,  7604.,  7864.,  7572.,  8108.,  8644.,  8148.,   492.,   804.,  1116.,   304.,   148.,  1292.,  1552.,  1812.,  3196.,  3732.,  4268.,  1952.,  2484.,  2796.,  3108.,   364.,   400.,  3112.,  3372.,  3632.,  6948.,  7484.,  8020.,  3884.,  4668.,  4980.,  5292.,   616.,   652.,   319.,   333.,   347.,   840.,   876.,   912.,   545.,  1220.,  1272.,  1324.,   743.,   773.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x12x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    40.,    60.,    80.,    53.,    67.,    81.,    95.,     0.,    47.,    53.,    59.,    65.,   180.,   200.,   220.,   151.,   165.,   179.,   193.,     0.,    89.,    95.,   101.,   107.,   320.,   340.,   360.,   249.,   263.,   277.,   291.,     0.,   131.,   137.,   143.,   149.,   460.,   480.,   500.,   347.,   361.,   375.,   389.,     0.,   190.,   218.,   246.,   274.,   728.,   800.,   872.,   558.,   602.,   646.,   690.,     0.,   386.,   414.,   442.,   470.,  1232.,  1304.,  1376.,   866.,   910.,   954.,   998.,     0.,   582.,   610.,   638.,   666.,  1736.,  1808.,  1880.,  1174.,  1218.,  1262.,  1306.,     0.,   479.,   501.,   523.,   545.,  1220.,  1272.,  1324.,   743.,   773.,   803.,   833.,     0.,   633.,   655.,   677.,   699.,  1584.,  1636.,  1688.,   953.,   983.,  1013.,  1043.,     0.,   787.,   809.,   831.,   853.,  1948.,  2000.,  2052.,  1163.,  1193.,  1223.,  1253.,     0.,   941.,   963.,   985.,  1007.,  2312.,  2364.,  2416.,  1373.,  1403.,  1433.,  1463.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    29.,    67.,   105.,   143.,   216.,   300.,   384.,   173.,   219.,   265.,   311.,     0.,   295.,   333.,   371.,   409.,   804.,   888.,   972.,   495.,   541.,   587.,   633.,     0.,   561.,   599.,   637.,   675.,  1392.,  1476.,  1560.,   817.,   863.,   909.,   955.,     0.,   827.,   865.,   903.,   941.,  1980.,  2064.,  2148.,  1139.,  1185.,  1231.,  1277.,     0.,  1134.,  1226.,  1318.,  1410.,  2872.,  3072.,  3272.,  1694.,  1802.,  1910.,  2018.,     0.,  1778.,  1870.,  1962.,  2054.,  4272.,  4472.,  4672.,  2450.,  2558.,  2666.,  2774.,     0.,  2422.,  2514.,  2606.,  2698.,  5672.,  5872.,  6072.,  3206.,  3314.,  3422.,  3530.,     0.,  1175.,  1229.,  1283.,  1337.,  2740.,  2856.,  2972.,  1535.,  1597.,  1659.,  1721.,     0.,  1553.,  1607.,  1661.,  1715.,  3552.,  3668.,  3784.,  1969.,  2031.,  2093.,  2155.,     0.,  1931.,  1985.,  2039.,  2093.,  4364.,  4480.,  4596.,  2403.,  2465.,  2527.,  2589.,     0.,  2309.,  2363.,  2417.,  2471.,  5176.,  5292.,  5408.,  2837.,  2899.,  2961.,  3023.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    53.,   123.,   193.,   263.,   392.,   540.,   688.,   293.,   371.,   449.,   527.,     0.,   543.,   613.,   683.,   753.,  1428.,  1576.,  1724.,   839.,   917.,   995.,  1073.,     0.,  1033.,  1103.,  1173.,  1243.,  2464.,  2612.,  2760.,  1385.,  1463.,  1541.,  1619.,     0.,  1523.,  1593.,  1663.,  1733.,  3500.,  3648.,  3796.,  1931.,  2009.,  2087.,  2165.,     0.,  2078.,  2234.,  2390.,  2546.,  5016.,  5344.,  5672.,  2830.,  3002.,  3174.,  3346.,     0.,  3170.,  3326.,  3482.,  3638.,  7312.,  7640.,  7968.,  4034.,  4206.,  4378.,  4550.,     0.,  4262.,  4418.,  4574.,  4730.,  9608.,  9936., 10264.,  5238.,  5410.,  5582.,  5754.,     0.,  1871.,  1957.,  2043.,  2129.,  4260.,  4440.,  4620.,  2327.,  2421.,  2515.,  2609.,     0.,  2473.,  2559.,  2645.,  2731.,  5520.,  5700.,  5880.,  2985.,  3079.,  3173.,  3267.,     0.,  3075.,  3161.,  3247.,  3333.,  6780.,  6960.,  7140.,  3643.,  3737.,  3831.,  3925.,     0.,  3677.,  3763.,  3849.,  3935.,  8040.,  8220.,  8400.,  4301.,  4395.,  4489.,  4583.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x12x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 310.,   30.,   70.,  804.,  948.,  260.,  174., 1396., 1668.,  596.,  278.,  446.,  270.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110.,  278.,  612.,  884., 1156., 1784., 2456., 3128., 1876., 2456., 3384., 4312., 2596., 1780.,  340.,  612.,  884., 3800., 1784., 2456., 1476., 5240., 2456., 3384., 2068., 2596., 1924.,  340.,  612., 3128., 3800., 1784., 1076., 4312., 5240., 2456., 1540., 2068., 1542., 1774.,  150., 2052., 2580., 3108.,  190., 2516., 3172., 3828.,  230.,  590., 2004., 2660., 3316., 3800., 5240., 6680., 4036., 4152., 5336., 6520., 2900.,  420., 1348., 2004., 2660., 8120., 3800., 5240., 3252., 5656., 4152., 5336., 2500., 2900., 4084., 1348., 2004., 6680., 8120., 3800., 2468., 4472., 5656., 4152., 2100., 2500., 2814., 3238.,  270., 3444., 4356., 5268.,  310., 1028., 1556., 2084.,   30.,   70., 2564., 3092., 3620., 3128., 4312., 5496., 4340., 1432., 2360., 3288., 1156., 1108., 2036., 2564., 3092., 6680., 3128., 4312., 3684., 6264., 1432., 2360.,  884., 1156., 2340., 2036., 2564., 5496., 6680., 3128., 3028., 5336., 6264., 1432.,  612.,  884.,  694.,  798.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150.,  382., 2262.,  190.,  486., 3172., 3828., 1604.,  590., 3764., 4548., 1940.,  694., 1118., 1966., 2262.,  190., 2516., 3172., 3828.,  230., 2980., 3764., 4548.,  270.,  694., 2468., 3252., 4036., 4152., 5336., 6520., 2900., 2456., 3384., 4312., 3620.,  756., 1684., 2468., 3252., 5656., 4152., 5336., 2500., 5240., 2456., 3384., 3092., 3620., 4804., 1684., 2468., 4472., 5656., 4152., 2100., 4312., 5240., 2456., 2564., 3092., 3238., 3726.,  310., 1028., 1556., 2084.,   30.,  660.,  804.,  948.,   70.,  174., 3028., 3684., 4340., 1432., 2360., 3288., 1156., 1784., 2456., 3128., 1876., 1444., 2372., 3028., 3684., 6264., 1432., 2360.,  884., 3800., 1784., 2456., 1476., 1876., 3060., 2372., 3028., 5336., 6264., 1432.,  612., 3128., 3800., 1784., 1076., 1476., 1118., 1286.,  110., 1588., 1988., 2388.,  150., 2052., 2580., 3108.,  190.,  486., 1540., 2068., 2596., 3128., 4312., 5496., 3316., 3800., 5240., 6680., 4036., 2452., 1012., 1540., 2068., 6680., 3128., 4312., 2660., 8120., 3800., 5240., 3252., 4036., 3364., 1012., 1540., 5496., 6680., 3128., 2004., 6680., 8120., 3800., 2468., 3252., 2390., 2750.,  230., 2980., 3764., 4548.,  270., 3444., 4356., 5268.,  310.,  798.,  310.,   30.,   70.,  804.,  948.,  260.,  174., 1396., 1668.,  596.,  278.,  446.,  270.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110.,  278.,  612.,  884., 1156., 1784., 2456., 3128., 1876., 2456., 3384., 4312., 2596., 1780.,  340.,  612.,  884., 3800., 1784., 2456., 1476., 5240., 2456., 3384., 2068., 2596., 1924.,  340.,  612., 3128., 3800., 1784., 1076., 4312., 5240., 2456., 1540., 2068., 1542., 1774.,  150., 2052., 2580., 3108.,  190., 2516., 3172., 3828.,  230.,  590., 2004., 2660., 3316., 3800., 5240., 6680., 4036., 4152., 5336., 6520., 2900.,  420., 1348., 2004., 2660., 8120., 3800., 5240., 3252., 5656., 4152., 5336., 2500., 2900., 4084., 1348., 2004., 6680., 8120., 3800., 2468., 4472., 5656., 4152., 2100., 2500., 2814., 3238.,  270., 3444., 4356., 5268.,  310., 1028., 1556., 2084.,   30.,   70., 2564., 3092., 3620., 3128., 4312., 5496., 4340., 1432., 2360., 3288., 1156., 1108., 2036., 2564., 3092., 6680., 3128., 4312., 3684., 6264., 1432., 2360.,  884., 1156., 2340., 2036., 2564., 5496., 6680., 3128., 3028., 5336., 6264., 1432.,  612.,  884.,  694.,  798.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150.,  382.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x12x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   260.,   404.,   548.,   382.,   486.,   590.,   694.,     0.,   310.,   350.,   390.,   430.,  1268.,  1412.,  1556.,  1110.,  1214.,  1318.,  1422.,     0.,   590.,   630.,    30.,    70.,  1636.,  1780.,   260.,   174.,   278.,   382.,   486.,     0.,   230.,   270.,   310.,   350.,   980.,  1124.,  1268.,   902.,  1006.,  1110.,  1214.,     0.,   620.,   828.,  1036.,  1244.,  2280.,  2824.,  3368.,  2476.,  1148.,  1484.,  1820.,     0.,  1436.,  1644.,  1852.,  2060.,  4424.,  4968.,  5512.,  3164.,  3500.,  3836.,  4172.,     0.,  2892.,  3100.,   620.,   828.,  5544.,  6088.,  2280.,  1804.,  2140.,  2476.,  1148.,     0.,   950.,  1118.,  1286.,  1454.,  2932.,  3332.,  3732.,  2006.,  2238.,  2470.,  2702.,     0.,  2126.,  2294.,  2462.,  2630.,  3044.,  3444.,  3844.,  3630.,   150.,   382.,   614.,     0.,   614.,   782.,   950.,  1118.,  2132.,  2532.,  2932.,  1542.,  1774.,  2006.,  2238.,     0.,  1790.,  1958.,  2126.,  2294.,  4932.,  5332.,  3044.,  3166.,  3398.,  3630.,   150.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1604.,  2260.,  2916.,  1310.,  1670.,  2030.,  2390.,     0.,  2262.,  2558.,  2854.,  3150.,  6196.,  6852.,  7508.,  3830.,  4190.,  4550.,  4910.,     0.,  4334.,  4630.,   190.,   486.,  6052.,  6708.,  1604.,   590.,   950.,  1310.,  1670.,     0.,  1670.,  1966.,  2262.,  2558.,  4884.,  5540.,  6196.,  3110.,  3470.,  3830.,  4190.,     0.,  4012.,  4732.,  5452.,  6172.,  7016.,  8584., 10152.,  7404.,  2492.,  3340.,  4188.,     0.,  4316.,  5036.,  5756.,  6476., 12232., 13800., 15368.,  7580.,  8428.,  9276., 10124.,     0.,  9356., 10076.,  4012.,  4732., 16424., 17992.,  7016.,  5708.,  6556.,  7404.,  2492.,     0.,  2390.,  2814.,  3238.,  3662.,  6836.,  7748.,  8660.,  4214.,  4702.,  5190.,  5678.,     0.,  5358.,  5782.,  6206.,  6630.,  6436.,  7348.,  8260.,  7630.,   310.,   798.,  1286.,     0.,  1542.,  1966.,  2390.,  2814.,  5012.,  5924.,  6836.,  3238.,  3726.,  4214.,  4702.,     0.,  4510.,  4934.,  5358.,  5782., 11396., 12308.,  6436.,  6654.,  7142.,  7630.,   310.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   350.,   902.,  1454.,  2006.,  2948.,  4116.,  5284.,  2238.,  2854.,  3470.,  4086.,     0.,  4214.,  4766.,  5318.,  5870., 11124., 12292., 13460.,  6550.,  7166.,  7782.,  8398.,     0.,  8078.,  8630.,   350.,   902., 10468., 11636.,  2948.,  1006.,  1622.,  2238.,  2854.,     0.,  3110.,  3662.,  4214.,  4766.,  8788.,  9956., 11124.,  5318.,  5934.,  6550.,  7166.,     0.,  7404.,  8636.,  9868., 11100., 11752., 14344., 16936., 12332.,  3836.,  5196.,  6556.,     0.,  7196.,  8428.,  9660., 10892., 20040., 22632., 25224., 11996., 13356., 14716., 16076.,     0., 15820., 17052.,  7404.,  8636., 27304., 29896., 11752.,  9612., 10972., 12332.,  3836.,     0.,  3830.,  4510.,  5190.,  5870., 10740., 12164., 13588.,  6422.,  7166.,  7910.,  8654.,     0.,  8590.,  9270.,  9950., 10630.,  9828., 11252., 12676., 11630.,   470.,  1214.,  1958.,     0.,  2470.,  3150.,  3830.,  4510.,  7892.,  9316., 10740.,  4934.,  5678.,  6422.,  7166.,     0.,  7230.,  7910.,  8590.,  9270., 17860., 19284.,  9828., 10142., 10886., 11630.,   470.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x12x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  31.,   32.,   33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,  161.,  166.,  171.,  176.,  181.,  186.,  105.,  108.,  111.,  114.,   45.,   46.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  231.,  236.,  241.,  246.,  251.,  256.,  147.,  150.,  153.,  156.,   71.,   76.,   81.,   86.,   91.,   96.,  220.,  232.,  244.,  256.,  268.,  280.,  161.,  168.,  352.,  368.,  384.,  400.,  416.,  432.,  231.,  240.,  249.,  258.,  141.,  146.,  151.,  156.,  161.,  166.,  388.,  400.,  412.,  424.,  436.,  448.,  259.,  266.,  576.,  592.,  608.,  624.,  640.,  656.,  357.,  366.,  375.,  384.,  211.,  216.,  221.,  226.,  231.,  236.,  556.,  568.,  580.,  592.,  604.,  616.,  357.,  364.,  800.,  816.,  832.,  848.,  864.,  880.,  483.,  492.,  501.,  510.,  180.,  184.,  188.,  192.,  196.,  200.,  419.,  428.,  437.,  446.,  455.,  464.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  306.,  312.,  257.,  268.,  279.,  290.,  301.,  312.,  616.,  640.,  664.,  688.,  712.,  736.,  371.,  384.,  748.,  776.,  804.,  832.,  860.,  888.,  441.,  456.,  471.,  486.,  411.,  422.,  433.,  444.,  455.,  466.,  952.,  976., 1000., 1024., 1048., 1072.,  553.,  566., 1140., 1168., 1196., 1224., 1252., 1280.,  651.,  666.,  681.,  696.,  565.,  576.,  587.,  598.,  609.,  620., 1288., 1312., 1336., 1360., 1384., 1408.,  735.,  748., 1532., 1560., 1588., 1616., 1644., 1672.,  861.,  876.,  891.,  906.,  315.,  322.,  329.,  336.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  795.,  812.,  829.,  846.,  863.,  880.,  441.,  450.,  459.,  468.,  443.,  460.,  477.,  494.,  511.,  528., 1012., 1048., 1084., 1120., 1156., 1192.,  581.,  600., 1144., 1184., 1224., 1264., 1304., 1344.,  651.,  672.,  693.,  714.,  681.,  698.,  715.,  732.,  749.,  766., 1516., 1552., 1588., 1624., 1660., 1696.,  847.,  866., 1704., 1744., 1784., 1824., 1864., 1904.,  945.,  966.,  987., 1008.,  919.,  936.,  953.,  970.,  987., 1004., 2020., 2056., 2092., 2128., 2164., 2200., 1113., 1132., 2264., 2304., 2344., 2384., 2424., 2464., 1239., 1260., 1281., 1302.,  450.,  460.,  470.,  480.,  490.,  500.,  983., 1004., 1025., 1046., 1067., 1088.,  539.,  550., 1077., 1100., 1123., 1146., 1169., 1192.,  588.,  600.,  612.,  624.,  403.,  416.,  429.,  442.,  455.,  468.,  887.,  914.,  941.,  968.,  995., 1022.,  490.,  504.,  953.,  982., 1011., 1040., 1069., 1098.,  525.,  540.,  555.,  570.,  585.,  598.,  611.,  624.,  637.,  650., 1265., 1292., 1319., 1346., 1373., 1400.,  686.,  700., 1359., 1388., 1417., 1446., 1475., 1504.,  735.,  750.,  765.,  780.,  815.,  844.,  873.,  902.,  931.,  960., 1804., 1864., 1924., 1984., 2044., 2104., 1001., 1032., 1936., 2000., 2064., 2128., 2192., 2256., 1071., 1104., 1137., 1170., 1221., 1250., 1279., 1308., 1337., 1366., 2644., 2704., 2764., 2824., 2884., 2944., 1435., 1466., 2832., 2896., 2960., 3024., 3088., 3152., 1533., 1566., 1599., 1632., 1627., 1656., 1685., 1714., 1743., 1772., 3484., 3544., 3604., 3664., 3724., 3784., 1869., 1900., 3728., 3792., 3856., 3920., 3984., 4048., 1995., 2028., 2061., 2094.,  720.,  736.,  752.,  768.,  784.,  800., 1547., 1580., 1613., 1646., 1679., 1712.,  833.,  850., 1641., 1676., 1711., 1746., 1781., 1816.,  882.,  900.,  918.,  936., 1001., 1036., 1071., 1106., 1141., 1176., 2200., 2272., 2344., 2416., 2488., 2560., 1211., 1248., 2332., 2408., 2484., 2560., 2636., 2712., 1281., 1320., 1359., 1398., 1491., 1526., 1561., 1596., 1631., 1666., 3208., 3280., 3352., 3424., 3496., 3568., 1729., 1766., 3396., 3472., 3548., 3624., 3700., 3776., 1827., 1866., 1905., 1944., 1981., 2016., 2051., 2086., 2121., 2156., 4216., 4288., 4360., 4432., 4504., 4576., 2247., 2284., 4460., 4536., 4612., 4688., 4764., 4840., 2373., 2412., 2451., 2490.,  855.,  874.,  893.,  912.,  931.,  950., 1829., 1868., 1907., 1946., 1985., 2024.,  980., 1000., 1923., 1964., 2005., 2046., 2087., 2128., 1029., 1050., 1071., 1092., 1187., 1228., 1269., 1310., 1351., 1392., 2596., 2680., 2764., 2848., 2932., 3016., 1421., 1464., 2728., 2816., 2904., 2992., 3080., 3168., 1491., 1536., 1581., 1626., 1761., 1802., 1843., 1884., 1925., 1966., 3772., 3856., 3940., 4024., 4108., 4192., 2023., 2066., 3960., 4048., 4136., 4224., 4312., 4400., 2121., 2166., 2211., 2256., 2335., 2376., 2417., 2458., 2499., 2540., 4948., 5032., 5116., 5200., 5284., 5368., 2625., 2668., 5192., 5280., 5368., 5456., 5544., 5632., 2751., 2796., 2841., 2886.,  990., 1012., 1034., 1056., 1078., 1100., 2111., 2156., 2201., 2246., 2291., 2336., 1127., 1150., 2205., 2252., 2299., 2346., 2393., 2440., 1176., 1200., 1224., 1248.,  775.,  800.,  825.,  850.,  875.,  900., 1679., 1730., 1781., 1832., 1883., 1934.,  910.,  936., 1745., 1798., 1851., 1904., 1957., 2010.,  945.,  972.,  999., 1026., 1125., 1150., 1175., 1200., 1225., 1250., 2393., 2444., 2495., 2546., 2597., 2648., 1274., 1300., 2487., 2540., 2593., 2646., 2699., 2752., 1323., 1350., 1377., 1404., 1559., 1612., 1665., 1718., 1771., 1824., 3388., 3496., 3604., 3712., 3820., 3928., 1841., 1896., 3520., 3632., 3744., 3856., 3968., 4080., 1911., 1968., 2025., 2082., 2301., 2354., 2407., 2460., 2513., 2566., 4900., 5008., 5116., 5224., 5332., 5440., 2611., 2666., 5088., 5200., 5312., 5424., 5536., 5648., 2709., 2766., 2823., 2880., 3043., 3096., 3149., 3202., 3255., 3308., 6412., 6520., 6628., 6736., 6844., 6952., 3381., 3436., 6656., 6768., 6880., 6992., 7104., 7216., 3507., 3564., 3621., 3678., 1260., 1288., 1316., 1344., 1372., 1400., 2675., 2732., 2789., 2846., 2903., 2960., 1421., 1450., 2769., 2828., 2887., 2946., 3005., 3064., 1470., 1500., 1530., 1560., 1745., 1804., 1863., 1922., 1981., 2040., 3784., 3904., 4024., 4144., 4264., 4384., 2051., 2112., 3916., 4040., 4164., 4288., 4412., 4536., 2121., 2184., 2247., 2310., 2571., 2630., 2689., 2748., 2807., 2866., 5464., 5584., 5704., 5824., 5944., 6064., 2905., 2966., 5652., 5776., 5900., 6024., 6148., 6272., 3003., 3066., 3129., 3192., 3397., 3456., 3515., 3574., 3633., 3692., 7144., 7264., 7384., 7504., 7624., 7744., 3759., 3820., 7388., 7512., 7636., 7760., 7884., 8008., 3885., 3948., 4011., 4074., 1395., 1426., 1457., 1488., 1519., 1550., 2957., 3020., 3083., 3146., 3209., 3272., 1568., 1600., 3051., 3116., 3181., 3246., 3311., 3376., 1617., 1650., 1683., 1716., 1931., 1996., 2061., 2126., 2191., 2256., 4180., 4312., 4444., 4576., 4708., 4840., 2261., 2328., 4312., 4448., 4584., 4720., 4856., 4992., 2331., 2400., 2469., 2538., 2841., 2906., 2971., 3036., 3101., 3166., 6028., 6160., 6292., 6424., 6556., 6688., 3199., 3266., 6216., 6352., 6488., 6624., 6760., 6896., 3297., 3366., 3435., 3504., 3751., 3816., 3881., 3946., 4011., 4076., 7876., 8008., 8140., 8272., 8404., 8536., 4137., 4204., 8120., 8256., 8392., 8528., 8664., 8800., 4263., 4332., 4401., 4470., 1530., 1564., 1598., 1632., 1666., 1700., 3239., 3308., 3377., 3446., 3515., 3584., 1715., 1750., 3333., 3404., 3475., 3546., 3617., 3688., 1764., 1800., 1836., 1872.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x12x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,   11.,   14.,   17.,   20.,   23.,   26.,   14.,   16.,   18.,   20.,   22.,   24.,   26.,   28.,    0.,    0.,   15.,   16.,   17.,   18.,   19.,   20.,   21.,   22.,   53.,   56.,   59.,   62.,   65.,   68.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,    0.,    0.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,   74.,   76.,   78.,   80.,   82.,   84.,    0.,    0.,   43.,   44.,   45.,   46.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,    0.,    0.,   60.,   64.,   68.,   72.,   76.,   80.,   84.,   88.,  210.,  220.,  230.,  240.,  250.,  260.,  154.,  160.,  166.,  172.,  178.,  184.,  190.,  196.,    0.,    0.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  350.,  360.,  370.,  380.,  390.,  400.,  238.,  244.,  250.,  256.,  262.,  268.,  274.,  280.,    0.,    0.,  172.,  176.,  180.,  184.,  188.,  192.,  196.,  200.,  490.,  500.,  510.,  520.,  530.,  540.,  322.,  328.,  334.,  340.,  346.,  352.,  358.,  364.,    0.,    0.,  129.,  132.,  135.,  138.,  141.,  144.,  147.,  150.,  325.,  332.,  339.,  346.,  353.,  360.,  196.,  200.,  204.,  208.,  212.,  216.,  220.,  224.,    0.,    0.,  171.,  174.,  177.,  180.,  183.,  186.,  189.,  192.,  423.,  430.,  437.,  444.,  451.,  458.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,    0.,    0.,  213.,  216.,  219.,  222.,  225.,  228.,  231.,  234.,  521.,  528.,  535.,  542.,  549.,  556.,  308.,  312.,  316.,  320.,  324.,  328.,  332.,  336.,    0.,    0.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  619.,  626.,  633.,  640.,  647.,  654.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    5.,   10.,   15.,   20.,   25.,   30.,   35.,   40.,   51.,   62.,   73.,   84.,   95.,  106.,   42.,   48.,   54.,   60.,   66.,   72.,   78.,   84.,    0.,    0.,   75.,   80.,   85.,   90.,   95.,  100.,  105.,  110.,  205.,  216.,  227.,  238.,  249.,  260.,  126.,  132.,  138.,  144.,  150.,  156.,  162.,  168.,    0.,    0.,  145.,  150.,  155.,  160.,  165.,  170.,  175.,  180.,  359.,  370.,  381.,  392.,  403.,  414.,  210.,  216.,  222.,  228.,  234.,  240.,  246.,  252.,    0.,    0.,  215.,  220.,  225.,  230.,  235.,  240.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  306.,  312.,  318.,  324.,  330.,  336.,    0.,    0.,  292.,  304.,  316.,  328.,  340.,  352.,  364.,  376.,  738.,  764.,  790.,  816.,  842.,  868.,  434.,  448.,  462.,  476.,  490.,  504.,  518.,  532.,    0.,    0.,  460.,  472.,  484.,  496.,  508.,  520.,  532.,  544., 1102., 1128., 1154., 1180., 1206., 1232.,  630.,  644.,  658.,  672.,  686.,  700.,  714.,  728.,    0.,    0.,  628.,  640.,  652.,  664.,  676.,  688.,  700.,  712., 1466., 1492., 1518., 1544., 1570., 1596.,  826.,  840.,  854.,  868.,  882.,  896.,  910.,  924.,    0.,    0.,  301.,  308.,  315.,  322.,  329.,  336.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  408.,  416.,  424.,  432.,  440.,  448.,    0.,    0.,  399.,  406.,  413.,  420.,  427.,  434.,  441.,  448.,  911.,  926.,  941.,  956.,  971.,  986.,  504.,  512.,  520.,  528.,  536.,  544.,  552.,  560.,    0.,    0.,  497.,  504.,  511.,  518.,  525.,  532.,  539.,  546., 1121., 1136., 1151., 1166., 1181., 1196.,  616.,  624.,  632.,  640.,  648.,  656.,  664.,  672.,    0.,    0.,  595.,  602.,  609.,  616.,  623.,  630.,  637.,  644., 1331., 1346., 1361., 1376., 1391., 1406.,  728.,  736.,  744.,  752.,  760.,  768.,  776.,  784.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    9.,   18.,   27.,   36.,   45.,   54.,   63.,   72.,   91.,  110.,  129.,  148.,  167.,  186.,   70.,   80.,   90.,  100.,  110.,  120.,  130.,  140.,    0.,    0.,  135.,  144.,  153.,  162.,  171.,  180.,  189.,  198.,  357.,  376.,  395.,  414.,  433.,  452.,  210.,  220.,  230.,  240.,  250.,  260.,  270.,  280.,    0.,    0.,  261.,  270.,  279.,  288.,  297.,  306.,  315.,  324.,  623.,  642.,  661.,  680.,  699.,  718.,  350.,  360.,  370.,  380.,  390.,  400.,  410.,  420.,    0.,    0.,  387.,  396.,  405.,  414.,  423.,  432.,  441.,  450.,  889.,  908.,  927.,  946.,  965.,  984.,  490.,  500.,  510.,  520.,  530.,  540.,  550.,  560.,    0.,    0.,  524.,  544.,  564.,  584.,  604.,  624.,  644.,  664., 1266., 1308., 1350., 1392., 1434., 1476.,  714.,  736.,  758.,  780.,  802.,  824.,  846.,  868.,    0.,    0.,  804.,  824.,  844.,  864.,  884.,  904.,  924.,  944., 1854., 1896., 1938., 1980., 2022., 2064., 1022., 1044., 1066., 1088., 1110., 1132., 1154., 1176.,    0.,    0., 1084., 1104., 1124., 1144., 1164., 1184., 1204., 1224., 2442., 2484., 2526., 2568., 2610., 2652., 1330., 1352., 1374., 1396., 1418., 1440., 1462., 1484.,    0.,    0.,  473.,  484.,  495.,  506.,  517.,  528.,  539.,  550., 1077., 1100., 1123., 1146., 1169., 1192.,  588.,  600.,  612.,  624.,  636.,  648.,  660.,  672.,    0.,    0.,  627.,  638.,  649.,  660.,  671.,  682.,  693.,  704., 1399., 1422., 1445., 1468., 1491., 1514.,  756.,  768.,  780.,  792.,  804.,  816.,  828.,  840.,    0.,    0.,  781.,  792.,  803.,  814.,  825.,  836.,  847.,  858., 1721., 1744., 1767., 1790., 1813., 1836.,  924.,  936.,  948.,  960.,  972.,  984.,  996., 1008.,    0.,    0.,  935.,  946.,  957.,  968.,  979.,  990., 1001., 1012., 2043., 2066., 2089., 2112., 2135., 2158., 1092., 1104., 1116., 1128., 1140., 1152., 1164., 1176.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x12x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  185.,   191.,     5.,    11.,    17.,    23.,   432.,   452.,   472.,   492.,    64.,    84.,    39.,    53.,   700.,   736.,   772.,   808.,   140.,   176.,    61.,    83.,   105.,   127.,    77.,    83.,    89.,    95.,   101.,   107.,   264.,   284.,   304.,   324.,   344.,   364.,   235.,   249.,   500.,   536.,   572.,   608.,   644.,   680.,   369.,   391.,   413.,   435.,   244.,   280.,   316.,   352.,   388.,   424.,   644.,   732.,   820.,   908.,   996.,  1084.,   688.,   740.,   924.,  1044.,  1164.,  1284.,  1404.,  1524.,   988.,  1056.,   420.,   488.,   556.,   592.,   628.,   664.,   700.,   736.,  1428.,  1516.,  1604.,  1692.,  1780.,  1868.,   968.,  1020.,  1900.,  2020.,  2140.,  2260.,  2380.,  2500.,  1236.,  1304.,  1372.,  1440.,  1060.,  1096.,   172.,   208.,   244.,   280.,  1700.,  1788.,  1876.,  1964.,   644.,   732.,   480.,   532.,  2364.,  2484.,  2604.,  2724.,   924.,  1044.,   716.,   784.,   852.,   920.,   383.,   413.,   443.,   473.,   503.,   533.,   972.,  1040.,  1108.,  1176.,  1244.,  1312.,   637.,   675.,  1208.,  1292.,  1376.,  1460.,  1544.,  1628.,   771.,   817.,   863.,   909.,   952.,  1036.,  1120.,  1204.,  1288.,  1372.,  1484.,  1668.,  1852.,  2036.,  2220.,  2404.,  1588.,  1688.,  1764.,  1980.,  2196.,  2412.,  2628.,  2844.,  1888.,  2004.,   648.,   764.,  1168.,  1252.,  1336.,  1420.,  1504.,  1588.,  2844.,  3028.,  3212.,  3396.,  3580.,  3764.,  1772.,  1872.,  3316.,  3532.,  3748.,  3964.,  4180.,  4396.,  2040.,  2156.,  2272.,  2388.,  2344.,  2428.,   784.,   868.,   952.,  1036.,  3692.,  3876.,  4060.,  4244.,  1484.,  1668.,  1188.,  1288.,  4356.,  4572.,  4788.,  5004.,  1764.,  1980.,  1424.,  1540.,  1656.,  1772.,   689.,   743.,   797.,   851.,   905.,   959.,  1680.,  1796.,  1912.,  2028.,  2144.,  2260.,  1039.,  1101.,  1916.,  2048.,  2180.,  2312.,  2444.,  2576.,  1173.,  1243.,  1313.,  1383.,  1660.,  1792.,  1924.,  2056.,  2188.,  2320.,  2324.,  2604.,  2884.,  3164.,  3444.,  3724.,  2488.,  2636.,  2604.,  2916.,  3228.,  3540.,  3852.,  4164.,  2788.,  2952.,   876.,  1040.,  1780.,  1912.,  2044.,  2176.,  2308.,  2440.,  4260.,  4540.,  4820.,  5100.,  5380.,  5660.,  2576.,  2724.,  4732.,  5044.,  5356.,  5668.,  5980.,  6292.,  2844.,  3008.,  3172.,  3336.,  3628.,  3760.,  1396.,  1528.,  1660.,  1792.,  5684.,  5964.,  6244.,  6524.,  2324.,  2604.,  1896.,  2044.,  6348.,  6660.,  6972.,  7284.,  2604.,  2916.,  2132.,  2296.,  2460.,  2624.,   995.,  1073.,  1151.,  1229.,  1307.,  1385.,  2388.,  2552.,  2716.,  2880.,  3044.,  3208.,  1441.,  1527.,  2624.,  2804.,  2984.,  3164.,  3344.,  3524.,  1575.,  1669.,  1763.,  1857.,  3137.,  3239.,    77.,   179.,   281.,   383.,  3648.,  3860.,  4072.,  4284.,   976.,  1188.,   303.,   413.,  3916.,  4144.,  4372.,  4600.,  1052.,  1280.,   325.,   443.,   561.,   679.,  1301.,  1403.,  1505.,  1607.,  1709.,  1811.,  3096.,  3308.,  3520.,  3732.,  3944.,  4156.,  1843.,  1953.,  3332.,  3560.,  3788.,  4016.,  4244.,  4472.,  1977.,  2095.,  2213.,  2331.,  3076.,  3304.,  3532.,  3760.,  3988.,  4216.,  4004.,  4476.,  4948.,  5420.,  5892.,  6364.,  4288.,  4532.,  4284.,  4788.,  5292.,  5796.,  6300.,  6804.,  4588.,  4848.,  1332.,  1592.,  3004.,  3232.,  3460.,  3688.,  3916.,  4144.,  7092.,  7564.,  8036.,  8508.,  8980.,  9452.,  4184.,  4428.,  7564.,  8068.,  8572.,  9076.,  9580., 10084.,  4452.,  4712.,  4972.,  5232.,  6196.,  6424.,  2620.,  2848.,  3076.,  3304.,  9668., 10140., 10612., 11084.,  4004.,  4476.,  3312.,  3556., 10332., 10836., 11340., 11844.,  4284.,  4788.,  3548.,  3808.,  4068.,  4328.,  1607.,  1733.,  1859.,  1985.,  2111.,  2237.,  3804.,  4064.,  4324.,  4584.,  4844.,  5104.,  2245.,  2379.,  4040.,  4316.,  4592.,  4868.,  5144.,  5420.,  2379.,  2521.,  2663.,  2805.,  3784.,  4060.,  4336.,  4612.,  4888.,  5164.,  4844.,  5412.,  5980.,  6548.,  7116.,  7684.,  5188.,  5480.,  5124.,  5724.,  6324.,  6924.,  7524.,  8124.,  5488.,  5796.,  1560.,  1868.,  3616.,  3892.,  4168.,  4444.,  4720.,  4996.,  8508.,  9076.,  9644., 10212., 10780., 11348.,  4988.,  5280.,  8980.,  9580., 10180., 10780., 11380., 11980.,  5256.,  5564.,  5872.,  6180.,  7480.,  7756.,  3232.,  3508.,  3784.,  4060., 11660., 12228., 12796., 13364.,  4844.,  5412.,  4020.,  4312., 12324., 12924., 13524., 14124.,  5124.,  5724.,  4256.,  4564.,  4872.,  5180.,  1913.,  2063.,  2213.,  2363.,  2513.,  2663.,  4512.,  4820.,  5128.,  5436.,  5744.,  6052.,  2647.,  2805.,  4748.,  5072.,  5396.,  5720.,  6044.,  6368.,  2781.,  2947.,  3113.,  3279.,  4492.,  4816.,  5140.,  5464.,  5788.,  6112.,  5684.,  6348.,  7012.,  7676.,  8340.,  9004.,  6088.,  6428.,  5964.,  6660.,  7356.,  8052.,  8748.,  9444.,  6388.,  6744.,  1788.,  2144.,  4228.,  4552.,  4876.,  5200.,  5524.,  5848.,  9924., 10588., 11252., 11916., 12580., 13244.,  5792.,  6132., 10396., 11092., 11788., 12484., 13180., 13876.,  6060.,  6416.,  6772.,  7128.,  8764.,  9088.,  3844.,  4168.,  4492.,  4816., 13652., 14316., 14980., 15644.,  5684.,  6348.,  4728.,  5068., 14316., 15012., 15708., 16404.,  5964.,  6660.,  4964.,  5320.,  5676.,  6032.,  2219.,  2393.,  2567.,  2741.,  2915.,  3089.,  5220.,  5576.,  5932.,  6288.,  6644.,  7000.,  3049.,  3231.,  5456.,  5828.,  6200.,  6572.,  6944.,  7316.,  3183.,  3373.,  3563.,  3753.,  6089.,  6287.,   149.,   347.,   545.,   743.,  6864.,  7268.,  7672.,  8076.,  1888.,  2292.,   567.,   773.,  7132.,  7552.,  7972.,  8392.,  1964.,  2384.,   589.,   803.,  1017.,  1231.,  2525.,  2723.,  2921.,  3119.,  3317.,  3515.,  5928.,  6332.,  6736.,  7140.,  7544.,  7948.,  3451.,  3657.,  6164.,  6584.,  7004.,  7424.,  7844.,  8264.,  3585.,  3799.,  4013.,  4227.,  5908.,  6328.,  6748.,  7168.,  7588.,  8008.,  7364.,  8220.,  9076.,  9932., 10788., 11644.,  7888.,  8324.,  7644.,  8532.,  9420., 10308., 11196., 12084.,  8188.,  8640.,  2244.,  2696.,  5452.,  5872.,  6292.,  6712.,  7132.,  7552., 12756., 13612., 14468., 15324., 16180., 17036.,  7400.,  7836., 13228., 14116., 15004., 15892., 16780., 17668.,  7668.,  8120.,  8572.,  9024., 11332., 11752.,  5068.,  5488.,  5908.,  6328., 17636., 18492., 19348., 20204.,  7364.,  8220.,  6144.,  6580., 18300., 19188., 20076., 20964.,  7644.,  8532.,  6380.,  6832.,  7284.,  7736.,  2831.,  3053.,  3275.,  3497.,  3719.,  3941.,  6636.,  7088.,  7540.,  7992.,  8444.,  8896.,  3853.,  4083.,  6872.,  7340.,  7808.,  8276.,  8744.,  9212.,  3987.,  4225.,  4463.,  4701.,  6616.,  7084.,  7552.,  8020.,  8488.,  8956.,  8204.,  9156., 10108., 11060., 12012., 12964.,  8788.,  9272.,  8292.,  9020.,  9748., 10476., 11204., 11932.,  7360.,  7604.,   232.,   476.,  6064.,  6532.,  7000.,  7468.,  7936.,  8404., 14172., 15124., 16076., 17028., 17980., 18932.,  8204.,  8688., 10868., 11596., 12324., 13052., 13780., 14508.,  3160.,  3404.,  3648.,  3892., 12616., 13084.,  5680.,  6148.,  6616.,  7084., 19628., 20580., 21532., 22484.,  8204.,  9156.,  6852.,  7336., 12932., 13660., 14388., 15116.,  8292.,  9020.,  6384.,  6628.,  6872.,  7116.,  3137.,  3383.,  3629.,  3875.,  4121.,  4367.,  7344.,  7844.,  8344.,  8844.,  9344.,  9844.,  4255.,  4509.,  4828.,  5088.,  5348.,  5608.,  5868.,  6128.,   101.,   107.,   113.,   119.,  6620.,  6880.,  7140.,  7400.,  7660.,  7920.,  6612.,  7148.,  7684.,  8220.,  8756.,  9292.,  7960.,  8236.,   556.,   868.,  1180.,  1492.,  1804.,  2116.,   388.,   424.,   268.,   304.,  2388.,  2648.,  2908.,  3168.,  3428.,  3688.,  5988.,  6524.,  7060.,  7596.,  8132.,  8668.,  3696.,  3972.,  4732.,  5044.,  5356.,  5668.,  5980.,  6292.,   700.,   736.,   772.,   808.,  6028.,  6288.,  6100.,  6360.,  6620.,  6880., 13044., 13580., 14116., 14652.,  6612.,  7148.,  6856.,  7132.,  8396.,  8708.,  9020.,  9332.,   556.,   868.,   244.,   280.,   316.,   352.,   179.,   193.,   207.,   221.,   235.,   249.,   500.,   536.,   572.,   608.,   644.,   680.,   369.,   391.,   736.,   788.,   840.,   892.,   944.,   996.,   503.,   533.,   563.,   593.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x12x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,    64.,    84.,   104.,   124.,   144.,   164.,    95.,   109.,   123.,   137.,   151.,   165.,   179.,   193.,     0.,     0.,    89.,    95.,   101.,   107.,   113.,   119.,   125.,   131.,   344.,   364.,   384.,   404.,   424.,   444.,   291.,   305.,   319.,   333.,   347.,   361.,   375.,   389.,     0.,     0.,   173.,   179.,   185.,   191.,   197.,   203.,   209.,   215.,   624.,   644.,   664.,   684.,   704.,   724.,   487.,   501.,   515.,   529.,   543.,   557.,   571.,   585.,     0.,     0.,   257.,   263.,   269.,   275.,   281.,   287.,   293.,   299.,   904.,   924.,   944.,   964.,   984.,  1004.,   683.,   697.,   711.,   725.,   739.,   753.,   767.,   781.,     0.,     0.,   358.,   386.,   414.,   442.,   470.,   498.,   526.,   554.,  1400.,  1472.,  1544.,  1616.,  1688.,  1760.,  1082.,  1126.,  1170.,  1214.,  1258.,  1302.,  1346.,  1390.,     0.,     0.,   750.,   778.,   806.,   834.,   862.,   890.,   918.,   946.,  2408.,  2480.,  2552.,  2624.,  2696.,  2768.,  1698.,  1742.,  1786.,  1830.,  1874.,  1918.,  1962.,  2006.,     0.,     0.,  1142.,  1170.,  1198.,  1226.,  1254.,  1282.,  1310.,  1338.,  3416.,  3488.,  3560.,  3632.,  3704.,  3776.,  2314.,  2358.,  2402.,  2446.,  2490.,  2534.,  2578.,  2622.,     0.,     0.,   941.,   963.,   985.,  1007.,  1029.,  1051.,  1073.,  1095.,  2400.,  2452.,  2504.,  2556.,  2608.,  2660.,  1463.,  1493.,  1523.,  1553.,  1583.,  1613.,  1643.,  1673.,     0.,     0.,  1249.,  1271.,  1293.,  1315.,  1337.,  1359.,  1381.,  1403.,  3128.,  3180.,  3232.,  3284.,  3336.,  3388.,  1883.,  1913.,  1943.,  1973.,  2003.,  2033.,  2063.,  2093.,     0.,     0.,  1557.,  1579.,  1601.,  1623.,  1645.,  1667.,  1689.,  1711.,  3856.,  3908.,  3960.,  4012.,  4064.,  4116.,  2303.,  2333.,  2363.,  2393.,  2423.,  2453.,  2483.,  2513.,     0.,     0.,  1865.,  1887.,  1909.,  1931.,  1953.,  1975.,  1997.,  2019.,  4584.,  4636.,  4688.,  4740.,  4792.,  4844.,  2723.,  2753.,  2783.,  2813.,  2843.,  2873.,  2903.,  2933.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    29.,    67.,   105.,   143.,   181.,   219.,   257.,   295.,   368.,   452.,   536.,   620.,   704.,   788.,   311.,   357.,   403.,   449.,   495.,   541.,   587.,   633.,     0.,     0.,   561.,   599.,   637.,   675.,   713.,   751.,   789.,   827.,  1544.,  1628.,  1712.,  1796.,  1880.,  1964.,   955.,  1001.,  1047.,  1093.,  1139.,  1185.,  1231.,  1277.,     0.,     0.,  1093.,  1131.,  1169.,  1207.,  1245.,  1283.,  1321.,  1359.,  2720.,  2804.,  2888.,  2972.,  3056.,  3140.,  1599.,  1645.,  1691.,  1737.,  1783.,  1829.,  1875.,  1921.,     0.,     0.,  1625.,  1663.,  1701.,  1739.,  1777.,  1815.,  1853.,  1891.,  3896.,  3980.,  4064.,  4148.,  4232.,  4316.,  2243.,  2289.,  2335.,  2381.,  2427.,  2473.,  2519.,  2565.,     0.,     0.,  2198.,  2290.,  2382.,  2474.,  2566.,  2658.,  2750.,  2842.,  5592.,  5792.,  5992.,  6192.,  6392.,  6592.,  3306.,  3414.,  3522.,  3630.,  3738.,  3846.,  3954.,  4062.,     0.,     0.,  3486.,  3578.,  3670.,  3762.,  3854.,  3946.,  4038.,  4130.,  8392.,  8592.,  8792.,  8992.,  9192.,  9392.,  4818.,  4926.,  5034.,  5142.,  5250.,  5358.,  5466.,  5574.,     0.,     0.,  4774.,  4866.,  4958.,  5050.,  5142.,  5234.,  5326.,  5418., 11192., 11392., 11592., 11792., 11992., 12192.,  6330.,  6438.,  6546.,  6654.,  6762.,  6870.,  6978.,  7086.,     0.,     0.,  2309.,  2363.,  2417.,  2471.,  2525.,  2579.,  2633.,  2687.,  5392.,  5508.,  5624.,  5740.,  5856.,  5972.,  3023.,  3085.,  3147.,  3209.,  3271.,  3333.,  3395.,  3457.,     0.,     0.,  3065.,  3119.,  3173.,  3227.,  3281.,  3335.,  3389.,  3443.,  7016.,  7132.,  7248.,  7364.,  7480.,  7596.,  3891.,  3953.,  4015.,  4077.,  4139.,  4201.,  4263.,  4325.,     0.,     0.,  3821.,  3875.,  3929.,  3983.,  4037.,  4091.,  4145.,  4199.,  8640.,  8756.,  8872.,  8988.,  9104.,  9220.,  4759.,  4821.,  4883.,  4945.,  5007.,  5069.,  5131.,  5193.,     0.,     0.,  4577.,  4631.,  4685.,  4739.,  4793.,  4847.,  4901.,  4955., 10264., 10380., 10496., 10612., 10728., 10844.,  5627.,  5689.,  5751.,  5813.,  5875.,  5937.,  5999.,  6061.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    53.,   123.,   193.,   263.,   333.,   403.,   473.,   543.,   672.,   820.,   968.,  1116.,  1264.,  1412.,   527.,   605.,   683.,   761.,   839.,   917.,   995.,  1073.,     0.,     0.,  1033.,  1103.,  1173.,  1243.,  1313.,  1383.,  1453.,  1523.,  2744.,  2892.,  3040.,  3188.,  3336.,  3484.,  1619.,  1697.,  1775.,  1853.,  1931.,  2009.,  2087.,  2165.,     0.,     0.,  2013.,  2083.,  2153.,  2223.,  2293.,  2363.,  2433.,  2503.,  4816.,  4964.,  5112.,  5260.,  5408.,  5556.,  2711.,  2789.,  2867.,  2945.,  3023.,  3101.,  3179.,  3257.,     0.,     0.,  2993.,  3063.,  3133.,  3203.,  3273.,  3343.,  3413.,  3483.,  6888.,  7036.,  7184.,  7332.,  7480.,  7628.,  3803.,  3881.,  3959.,  4037.,  4115.,  4193.,  4271.,  4349.,     0.,     0.,  4038.,  4194.,  4350.,  4506.,  4662.,  4818.,  4974.,  5130.,  9784., 10112., 10440., 10768., 11096., 11424.,  5530.,  5702.,  5874.,  6046.,  6218.,  6390.,  6562.,  6734.,     0.,     0.,  6222.,  6378.,  6534.,  6690.,  6846.,  7002.,  7158.,  7314., 14376., 14704., 15032., 15360., 15688., 16016.,  7938.,  8110.,  8282.,  8454.,  8626.,  8798.,  8970.,  9142.,     0.,     0.,  8406.,  8562.,  8718.,  8874.,  9030.,  9186.,  9342.,  9498., 18968., 19296., 19624., 19952., 20280., 20608., 10346., 10518., 10690., 10862., 11034., 11206., 11378., 11550.,     0.,     0.,  3677.,  3763.,  3849.,  3935.,  4021.,  4107.,  4193.,  4279.,  8384.,  8564.,  8744.,  8924.,  9104.,  9284.,  4583.,  4677.,  4771.,  4865.,  4959.,  5053.,  5147.,  5241.,     0.,     0.,  4881.,  4967.,  5053.,  5139.,  5225.,  5311.,  5397.,  5483., 10904., 11084., 11264., 11444., 11624., 11804.,  5899.,  5993.,  6087.,  6181.,  6275.,  6369.,  6463.,  6557.,     0.,     0.,  6085.,  6171.,  6257.,  6343.,  6429.,  6515.,  6601.,  6687., 13424., 13604., 13784., 13964., 14144., 14324.,  7215.,  7309.,  7403.,  7497.,  7591.,  7685.,  7779.,  7873.,     0.,     0.,  7289.,  7375.,  7461.,  7547.,  7633.,  7719.,  7805.,  7891., 15944., 16124., 16304., 16484., 16664., 16844.,  8531.,  8625.,  8719.,  8813.,  8907.,  9001.,  9095.,  9189.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x12x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   446.,   614.,   782.,   950.,   190.,   230.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  3508.,  4036.,   340.,   868.,   180.,   452.,   724.,   996.,  1268.,  1540.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,  1812.,  2084.,   180.,   452.,   724.,   996.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  1396.,  1924.,  2452.,  2980.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  2660.,  3060.,   260.,   660.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1060.,  1460.,  1860.,  2260.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   110.,   150.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  4356.,  5012.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  1812.,  2084.,   180.,   452.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  1268.,  1540.,  1812.,  2084.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1732.,  2388.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,   724.,   996.,  1268.,  1540.,   486.,   590.,   694.,   798.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  1118.,  1542.,  1966.,  2390.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  3508.,  4036.,   340.,   868.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  1396.,  1924.,  2452.,  2980.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  2660.,  3060.,   260.,   660.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  1268.,  1540.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,   724.,   996.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1060.,  1460.,  1860.,  2260.,   782.,   950.,  1118.,  1286.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,   782.,  1078.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  5204.,  5988.,   500.,  1284.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  2068.,  2852.,  3636.,  4420.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   446.,   614.,   782.,   950.,   190.,   230.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  3508.,  4036.,   340.,   868.,   180.,   452.,   724.,   996.,  1268.,  1540.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,  1812.,  2084.,   180.,   452.,   724.,   996.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  1396.,  1924.,  2452.,  2980.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  2660.,  3060.,   260.,   660.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1060.,  1460.,  1860.,  2260.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   110.,   150.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  4356.,  5012.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  1812.,  2084.,   180.,   452.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  1268.,  1540.,  1812.,  2084.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  1732.,  2388.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,   724.,   996.,  1268.,  1540.,   486.,   590.,   694.,   798.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x12x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   420.,   564.,   708.,   852.,   996.,  1140.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,     0.,     0.,   590.,   630.,    30.,    70.,   110.,   150.,   190.,   230.,  1796.,  1940.,   420.,   564.,   708.,   852.,   486.,   590.,   694.,   798.,   902.,  1006.,  1110.,  1214.,     0.,     0.,   510.,   550.,   590.,   630.,    30.,    70.,   110.,   150.,  1508.,  1652.,  1796.,  1940.,   420.,   564.,   278.,   382.,   486.,   590.,   694.,   798.,   902.,  1006.,     0.,     0.,   430.,   470.,   510.,   550.,   590.,   630.,    30.,    70.,  1220.,  1364.,  1508.,  1652.,  1796.,  1940.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,   460.,   668.,   876.,  1084.,  1292.,  1500.,  1708.,  1916.,  2536.,  3080.,  3624.,  4168.,  4712.,  5256.,  3068.,  3404.,  2076.,  2412.,  2748.,  3084.,  3420.,  3756.,     0.,     0.,  2732.,  2940.,   460.,   668.,   876.,  1084.,  1292.,  1500.,  5800.,  6344.,  2536.,  3080.,  3624.,  4168.,  2396.,  2732.,  3068.,  3404.,  2076.,  2412.,  2748.,  3084.,     0.,     0.,  2316.,  2524.,  2732.,  2940.,   460.,   668.,   876.,  1084.,  4712.,  5256.,  5800.,  6344.,  2536.,  3080.,  1724.,  2060.,  2396.,  2732.,  3068.,  3404.,  2076.,  2412.,     0.,     0.,  1790.,  1958.,  2126.,  2294.,  2462.,  2630.,   110.,   278.,  2916.,  3316.,  3716.,  4116.,  4516.,  4916.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  2462.,  2630.,  2116.,  2516.,  2916.,  3316.,  3716.,  4116.,  3398.,  3630.,   150.,   382.,   614.,   846.,  1078.,  1310.,     0.,     0.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  4004.,  4404.,  2116.,  2516.,  2916.,  3316.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,   614.,   846.,     0.,     0.,   782.,   950.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  3204.,  3604.,  4004.,  4404.,  2116.,  2516.,  2470.,  2702.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,  2788.,  3444.,  4100.,  4756.,  5412.,  6068.,  2390.,  2750.,  3110.,  3470.,  3830.,  4190.,  4550.,  4910.,     0.,     0.,  4334.,  4630.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  7236.,  7892.,  2788.,  3444.,  4100.,  4756.,  1670.,  2030.,  2390.,  2750.,  3110.,  3470.,  3830.,  4190.,     0.,     0.,  3742.,  4038.,  4334.,  4630.,   190.,   486.,   782.,  1078.,  5924.,  6580.,  7236.,  7892.,  2788.,  3444.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,  3110.,  3470.,     0.,     0.,  3150.,  3446.,  3742.,  4038.,  4334.,  4630.,   190.,   486.,  4612.,  5268.,  5924.,  6580.,  7236.,  7892.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,     0.,     0.,  2828.,  3548.,  4268.,  4988.,  5708.,  6428.,  7148.,  7868.,  7272.,  8840., 10408., 11976., 13544., 15112.,  8508.,  9356.,  4444.,  5292.,  6140.,  6988.,  7836.,  8684.,     0.,     0.,  8172.,  8892.,  2828.,  3548.,  4268.,  4988.,  5708.,  6428., 16680., 18248.,  7272.,  8840., 10408., 11976.,  6812.,  7660.,  8508.,  9356.,  4444.,  5292.,  6140.,  6988.,     0.,     0.,  6732.,  7452.,  8172.,  8892.,  2828.,  3548.,  4268.,  4988., 13544., 15112., 16680., 18248.,  7272.,  8840.,  5116.,  5964.,  6812.,  7660.,  8508.,  9356.,  4444.,  5292.,     0.,     0.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,   270.,   694.,  6308.,  7220.,  8132.,  9044.,  9956., 10868.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,     0.,     0.,  3662.,  4086.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,  4484.,  5396.,  6308.,  7220.,  8132.,  9044.,  7142.,  7630.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,     0.,     0.,  2814.,  3238.,  3662.,  4086.,  4510.,  4934.,  5358.,  5782.,  9444., 10356.,  4484.,  5396.,  6308.,  7220.,  6166.,  6654.,  7142.,  7630.,   310.,   798.,  1286.,  1774.,     0.,     0.,  1966.,  2390.,  2814.,  3238.,  3662.,  4086.,  4510.,  4934.,  7620.,  8532.,  9444., 10356.,  4484.,  5396.,  5190.,  5678.,  6166.,  6654.,  7142.,  7630.,   310.,   798.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   350.,   902.,  1454.,  2006.,  2558.,  3110.,  3662.,  4214.,  5156.,  6324.,  7492.,  8660.,  9828., 10996.,  4086.,  4702.,  5318.,  5934.,  6550.,  7166.,  7782.,  8398.,     0.,     0.,  8078.,  8630.,   350.,   902.,  1454.,  2006.,  2558.,  3110., 12676., 13844.,  5156.,  6324.,  7492.,  8660.,  2854.,  3470.,  4086.,  4702.,  5318.,  5934.,  6550.,  7166.,     0.,     0.,  6974.,  7526.,  8078.,  8630.,   350.,   902.,  1454.,  2006., 10340., 11508., 12676., 13844.,  5156.,  6324.,  1622.,  2238.,  2854.,  3470.,  4086.,  4702.,  5318.,  5934.,     0.,     0.,  5870.,  6422.,  6974.,  7526.,  8078.,  8630.,   350.,   902.,  8004.,  9172., 10340., 11508., 12676., 13844.,   390.,  1006.,  1622.,  2238.,  2854.,  3470.,  4086.,  4702.,     0.,     0.,  5196.,  6428.,  7660.,  8892., 10124., 11356., 12588., 13820., 12008., 14600., 17192., 19784., 22376., 24968., 13948., 15308.,  6812.,  8172.,  9532., 10892., 12252., 13612.,     0.,     0., 13612., 14844.,  5196.,  6428.,  7660.,  8892., 10124., 11356., 27560., 30152., 12008., 14600., 17192., 19784., 11228., 12588., 13948., 15308.,  6812.,  8172.,  9532., 10892.,     0.,     0., 11148., 12380., 13612., 14844.,  5196.,  6428.,  7660.,  8892., 22376., 24968., 27560., 30152., 12008., 14600.,  8508.,  9868., 11228., 12588., 13948., 15308.,  6812.,  8172.,     0.,     0.,  7230.,  7910.,  8590.,  9270.,  9950., 10630.,   430.,  1110.,  9700., 11124., 12548., 13972., 15396., 16820.,   470.,  1214.,  1958.,  2702.,  3446.,  4190.,  4934.,  5678.,     0.,     0.,  5870.,  6550.,  7230.,  7910.,  8590.,  9270.,  9950., 10630.,  6852.,  8276.,  9700., 11124., 12548., 13972., 10886., 11630.,   470.,  1214.,  1958.,  2702.,  3446.,  4190.,     0.,     0.,  4510.,  5190.,  5870.,  6550.,  7230.,  7910.,  8590.,  9270., 14884., 16308.,  6852.,  8276.,  9700., 11124.,  9398., 10142., 10886., 11630.,   470.,  1214.,  1958.,  2702.,     0.,     0.,  3150.,  3830.,  4510.,  5190.,  5870.,  6550.,  7230.,  7910., 12036., 13460., 14884., 16308.,  6852.,  8276.,  7910.,  8654.,  9398., 10142., 10886., 11630.,   470.,  1214.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x12x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   61.,    62.,    63.,    64.,    65.,    66.,    67.,    68.,    69.,    70.,    71.,    72.,   187.,   190.,   193.,   196.,   199.,   202.,   205.,   208.,   211.,   214.,   217.,   220.,   138.,   140.,   142.,   144.,   317.,   322.,   327.,   332.,   337.,   342.,   347.,   352.,   357.,   362.,   367.,   372.,   207.,   210.,   213.,   216.,   219.,   222.,   225.,   228.,    89.,    90.,    91.,    92.,    93.,    94.,    95.,    96.,    97.,    98.,    99.,   100.,   271.,   274.,   277.,   280.,   283.,   286.,   289.,   292.,   295.,   298.,   301.,   304.,   194.,   196.,   198.,   200.,   457.,   462.,   467.,   472.,   477.,   482.,   487.,   492.,   497.,   502.,   507.,   512.,   291.,   294.,   297.,   300.,   303.,   306.,   309.,   312.,   137.,   142.,   147.,   152.,   157.,   162.,   167.,   172.,   177.,   182.,   187.,   192.,   428.,   440.,   452.,   464.,   476.,   488.,   500.,   512.,   524.,   536.,   548.,   560.,   315.,   322.,   329.,   336.,   688.,   704.,   720.,   736.,   752.,   768.,   784.,   800.,   816.,   832.,   848.,   864.,   453.,   462.,   471.,   480.,   489.,   498.,   507.,   516.,   277.,   282.,   287.,   292.,   297.,   302.,   307.,   312.,   317.,   322.,   327.,   332.,   764.,   776.,   788.,   800.,   812.,   824.,   836.,   848.,   860.,   872.,   884.,   896.,   511.,   518.,   525.,   532.,  1136.,  1152.,  1168.,  1184.,  1200.,  1216.,  1232.,  1248.,  1264.,  1280.,  1296.,  1312.,   705.,   714.,   723.,   732.,   741.,   750.,   759.,   768.,   417.,   422.,   427.,   432.,   437.,   442.,   447.,   452.,   457.,   462.,   467.,   472.,  1100.,  1112.,  1124.,  1136.,  1148.,  1160.,  1172.,  1184.,  1196.,  1208.,  1220.,  1232.,   707.,   714.,   721.,   728.,  1584.,  1600.,  1616.,  1632.,  1648.,  1664.,  1680.,  1696.,  1712.,  1728.,  1744.,  1760.,   957.,   966.,   975.,   984.,   993.,  1002.,  1011.,  1020.,   356.,   360.,   364.,   368.,   372.,   376.,   380.,   384.,   388.,   392.,   396.,   400.,   829.,   838.,   847.,   856.,   865.,   874.,   883.,   892.,   901.,   910.,   919.,   928.,   485.,   490.,   495.,   500.,  1015.,  1026.,  1037.,  1048.,  1059.,  1070.,  1081.,  1092.,  1103.,  1114.,  1125.,  1136.,   582.,   588.,   594.,   600.,   606.,   612.,   618.,   624.,   503.,   514.,   525.,   536.,   547.,   558.,   569.,   580.,   591.,   602.,   613.,   624.,  1208.,  1232.,  1256.,  1280.,  1304.,  1328.,  1352.,  1376.,  1400.,  1424.,  1448.,  1472.,   729.,   742.,   755.,   768.,  1468.,  1496.,  1524.,  1552.,  1580.,  1608.,  1636.,  1664.,  1692.,  1720.,  1748.,  1776.,   867.,   882.,   897.,   912.,   927.,   942.,   957.,   972.,   811.,   822.,   833.,   844.,   855.,   866.,   877.,   888.,   899.,   910.,   921.,   932.,  1880.,  1904.,  1928.,  1952.,  1976.,  2000.,  2024.,  2048.,  2072.,  2096.,  2120.,  2144.,  1093.,  1106.,  1119.,  1132.,  2252.,  2280.,  2308.,  2336.,  2364.,  2392.,  2420.,  2448.,  2476.,  2504.,  2532.,  2560.,  1287.,  1302.,  1317.,  1332.,  1347.,  1362.,  1377.,  1392.,  1119.,  1130.,  1141.,  1152.,  1163.,  1174.,  1185.,  1196.,  1207.,  1218.,  1229.,  1240.,  2552.,  2576.,  2600.,  2624.,  2648.,  2672.,  2696.,  2720.,  2744.,  2768.,  2792.,  2816.,  1457.,  1470.,  1483.,  1496.,  3036.,  3064.,  3092.,  3120.,  3148.,  3176.,  3204.,  3232.,  3260.,  3288.,  3316.,  3344.,  1707.,  1722.,  1737.,  1752.,  1767.,  1782.,  1797.,  1812.,   623.,   630.,   637.,   644.,   651.,   658.,   665.,   672.,   679.,   686.,   693.,   700.,  1387.,  1402.,  1417.,  1432.,  1447.,  1462.,  1477.,  1492.,  1507.,  1522.,  1537.,  1552.,   776.,   784.,   792.,   800.,  1573.,  1590.,  1607.,  1624.,  1641.,  1658.,  1675.,  1692.,  1709.,  1726.,  1743.,  1760.,   873.,   882.,   891.,   900.,   909.,   918.,   927.,   936.,   869.,   886.,   903.,   920.,   937.,   954.,   971.,   988.,  1005.,  1022.,  1039.,  1056.,  1988.,  2024.,  2060.,  2096.,  2132.,  2168.,  2204.,  2240.,  2276.,  2312.,  2348.,  2384.,  1143.,  1162.,  1181.,  1200.,  2248.,  2288.,  2328.,  2368.,  2408.,  2448.,  2488.,  2528.,  2568.,  2608.,  2648.,  2688.,  1281.,  1302.,  1323.,  1344.,  1365.,  1386.,  1407.,  1428.,  1345.,  1362.,  1379.,  1396.,  1413.,  1430.,  1447.,  1464.,  1481.,  1498.,  1515.,  1532.,  2996.,  3032.,  3068.,  3104.,  3140.,  3176.,  3212.,  3248.,  3284.,  3320.,  3356.,  3392.,  1675.,  1694.,  1713.,  1732.,  3368.,  3408.,  3448.,  3488.,  3528.,  3568.,  3608.,  3648.,  3688.,  3728.,  3768.,  3808.,  1869.,  1890.,  1911.,  1932.,  1953.,  1974.,  1995.,  2016.,  1821.,  1838.,  1855.,  1872.,  1889.,  1906.,  1923.,  1940.,  1957.,  1974.,  1991.,  2008.,  4004.,  4040.,  4076.,  4112.,  4148.,  4184.,  4220.,  4256.,  4292.,  4328.,  4364.,  4400.,  2207.,  2226.,  2245.,  2264.,  4488.,  4528.,  4568.,  4608.,  4648.,  4688.,  4728.,  4768.,  4808.,  4848.,  4888.,  4928.,  2457.,  2478.,  2499.,  2520.,  2541.,  2562.,  2583.,  2604.,   890.,   900.,   910.,   920.,   930.,   940.,   950.,   960.,   970.,   980.,   990.,  1000.,  1945.,  1966.,  1987.,  2008.,  2029.,  2050.,  2071.,  2092.,  2113.,  2134.,  2155.,  2176.,  1067.,  1078.,  1089.,  1100.,  2131.,  2154.,  2177.,  2200.,  2223.,  2246.,  2269.,  2292.,  2315.,  2338.,  2361.,  2384.,  1164.,  1176.,  1188.,  1200.,  1212.,  1224.,  1236.,  1248.,   793.,   806.,   819.,   832.,   845.,   858.,   871.,   884.,   897.,   910.,   923.,   936.,  1747.,  1774.,  1801.,  1828.,  1855.,  1882.,  1909.,  1936.,  1963.,  1990.,  2017.,  2044.,   966.,   980.,   994.,  1008.,  1877.,  1906.,  1935.,  1964.,  1993.,  2022.,  2051.,  2080.,  2109.,  2138.,  2167.,  2196.,  1035.,  1050.,  1065.,  1080.,  1095.,  1110.,  1125.,  1140.,  1157.,  1170.,  1183.,  1196.,  1209.,  1222.,  1235.,  1248.,  1261.,  1274.,  1287.,  1300.,  2503.,  2530.,  2557.,  2584.,  2611.,  2638.,  2665.,  2692.,  2719.,  2746.,  2773.,  2800.,  1358.,  1372.,  1386.,  1400.,  2689.,  2718.,  2747.,  2776.,  2805.,  2834.,  2863.,  2892.,  2921.,  2950.,  2979.,  3008.,  1455.,  1470.,  1485.,  1500.,  1515.,  1530.,  1545.,  1560.,  1601.,  1630.,  1659.,  1688.,  1717.,  1746.,  1775.,  1804.,  1833.,  1862.,  1891.,  1920.,  3548.,  3608.,  3668.,  3728.,  3788.,  3848.,  3908.,  3968.,  4028.,  4088.,  4148.,  4208.,  1971.,  2002.,  2033.,  2064.,  3808.,  3872.,  3936.,  4000.,  4064.,  4128.,  4192.,  4256.,  4320.,  4384.,  4448.,  4512.,  2109.,  2142.,  2175.,  2208.,  2241.,  2274.,  2307.,  2340.,  2413.,  2442.,  2471.,  2500.,  2529.,  2558.,  2587.,  2616.,  2645.,  2674.,  2703.,  2732.,  5228.,  5288.,  5348.,  5408.,  5468.,  5528.,  5588.,  5648.,  5708.,  5768.,  5828.,  5888.,  2839.,  2870.,  2901.,  2932.,  5600.,  5664.,  5728.,  5792.,  5856.,  5920.,  5984.,  6048.,  6112.,  6176.,  6240.,  6304.,  3033.,  3066.,  3099.,  3132.,  3165.,  3198.,  3231.,  3264.,  3225.,  3254.,  3283.,  3312.,  3341.,  3370.,  3399.,  3428.,  3457.,  3486.,  3515.,  3544.,  6908.,  6968.,  7028.,  7088.,  7148.,  7208.,  7268.,  7328.,  7388.,  7448.,  7508.,  7568.,  3707.,  3738.,  3769.,  3800.,  7392.,  7456.,  7520.,  7584.,  7648.,  7712.,  7776.,  7840.,  7904.,  7968.,  8032.,  8096.,  3957.,  3990.,  4023.,  4056.,  4089.,  4122.,  4155.,  4188.,  1424.,  1440.,  1456.,  1472.,  1488.,  1504.,  1520.,  1536.,  1552.,  1568.,  1584.,  1600.,  3061.,  3094.,  3127.,  3160.,  3193.,  3226.,  3259.,  3292.,  3325.,  3358.,  3391.,  3424.,  1649.,  1666.,  1683.,  1700.,  3247.,  3282.,  3317.,  3352.,  3387.,  3422.,  3457.,  3492.,  3527.,  3562.,  3597.,  3632.,  1746.,  1764.,  1782.,  1800.,  1818.,  1836.,  1854.,  1872.,  1967.,  2002.,  2037.,  2072.,  2107.,  2142.,  2177.,  2212.,  2247.,  2282.,  2317.,  2352.,  4328.,  4400.,  4472.,  4544.,  4616.,  4688.,  4760.,  4832.,  4904.,  4976.,  5048.,  5120.,  2385.,  2422.,  2459.,  2496.,  4588.,  4664.,  4740.,  4816.,  4892.,  4968.,  5044.,  5120.,  5196.,  5272.,  5348.,  5424.,  2523.,  2562.,  2601.,  2640.,  2679.,  2718.,  2757.,  2796.,  2947.,  2982.,  3017.,  3052.,  3087.,  3122.,  3157.,  3192.,  3227.,  3262.,  3297.,  3332.,  6344.,  6416.,  6488.,  6560.,  6632.,  6704.,  6776.,  6848.,  6920.,  6992.,  7064.,  7136.,  3421.,  3458.,  3495.,  3532.,  6716.,  6792.,  6868.,  6944.,  7020.,  7096.,  7172.,  7248.,  7324.,  7400.,  7476.,  7552.,  3615.,  3654.,  3693.,  3732.,  3771.,  3810.,  3849.,  3888.,  3927.,  3962.,  3997.,  4032.,  4067.,  4102.,  4137.,  4172.,  4207.,  4242.,  4277.,  4312.,  8360.,  8432.,  8504.,  8576.,  8648.,  8720.,  8792.,  8864.,  8936.,  9008.,  9080.,  9152.,  4457.,  4494.,  4531.,  4568.,  8844.,  8920.,  8996.,  9072.,  9148.,  9224.,  9300.,  9376.,  9452.,  9528.,  9604.,  9680.,  4707.,  4746.,  4785.,  4824.,  4863.,  4902.,  4941.,  4980.,  1691.,  1710.,  1729.,  1748.,  1767.,  1786.,  1805.,  1824.,  1843.,  1862.,  1881.,  1900.,  3619.,  3658.,  3697.,  3736.,  3775.,  3814.,  3853.,  3892.,  3931.,  3970.,  4009.,  4048.,  1940.,  1960.,  1980.,  2000.,  3805.,  3846.,  3887.,  3928.,  3969.,  4010.,  4051.,  4092.,  4133.,  4174.,  4215.,  4256.,  2037.,  2058.,  2079.,  2100.,  2121.,  2142.,  2163.,  2184.,  2333.,  2374.,  2415.,  2456.,  2497.,  2538.,  2579.,  2620.,  2661.,  2702.,  2743.,  2784.,  5108.,  5192.,  5276.,  5360.,  5444.,  5528.,  5612.,  5696.,  5780.,  5864.,  5948.,  6032.,  2799.,  2842.,  2885.,  2928.,  5368.,  5456.,  5544.,  5632.,  5720.,  5808.,  5896.,  5984.,  6072.,  6160.,  6248.,  6336.,  2937.,  2982.,  3027.,  3072.,  3117.,  3162.,  3207.,  3252.,  3481.,  3522.,  3563.,  3604.,  3645.,  3686.,  3727.,  3768.,  3809.,  3850.,  3891.,  3932.,  7460.,  7544.,  7628.,  7712.,  7796.,  7880.,  7964.,  8048.,  8132.,  8216.,  8300.,  8384.,  4003.,  4046.,  4089.,  4132.,  7832.,  7920.,  8008.,  8096.,  8184.,  8272.,  8360.,  8448.,  8536.,  8624.,  8712.,  8800.,  4197.,  4242.,  4287.,  4332.,  4377.,  4422.,  4467.,  4512.,  4629.,  4670.,  4711.,  4752.,  4793.,  4834.,  4875.,  4916.,  4957.,  4998.,  5039.,  5080.,  9812.,  9896.,  9980., 10064., 10148., 10232., 10316., 10400., 10484., 10568., 10652., 10736.,  5207.,  5250.,  5293.,  5336., 10296., 10384., 10472., 10560., 10648., 10736., 10824., 10912., 11000., 11088., 11176., 11264.,  5457.,  5502.,  5547.,  5592.,  5637.,  5682.,  5727.,  5772.,  1958.,  1980.,  2002.,  2024.,  2046.,  2068.,  2090.,  2112.,  2134.,  2156.,  2178.,  2200.,  4177.,  4222.,  4267.,  4312.,  4357.,  4402.,  4447.,  4492.,  4537.,  4582.,  4627.,  4672.,  2231.,  2254.,  2277.,  2300.,  4363.,  4410.,  4457.,  4504.,  4551.,  4598.,  4645.,  4692.,  4739.,  4786.,  4833.,  4880.,  2328.,  2352.,  2376.,  2400.,  2424.,  2448.,  2472.,  2496.,  1525.,  1550.,  1575.,  1600.,  1625.,  1650.,  1675.,  1700.,  1725.,  1750.,  1775.,  1800.,  3307.,  3358.,  3409.,  3460.,  3511.,  3562.,  3613.,  3664.,  3715.,  3766.,  3817.,  3868.,  1794.,  1820.,  1846.,  1872.,  3437.,  3490.,  3543.,  3596.,  3649.,  3702.,  3755.,  3808.,  3861.,  3914.,  3967.,  4020.,  1863.,  1890.,  1917.,  1944.,  1971.,  1998.,  2025.,  2052.,  2225.,  2250.,  2275.,  2300.,  2325.,  2350.,  2375.,  2400.,  2425.,  2450.,  2475.,  2500.,  4735.,  4786.,  4837.,  4888.,  4939.,  4990.,  5041.,  5092.,  5143.,  5194.,  5245.,  5296.,  2522.,  2548.,  2574.,  2600.,  4921.,  4974.,  5027.,  5080.,  5133.,  5186.,  5239.,  5292.,  5345.,  5398.,  5451.,  5504.,  2619.,  2646.,  2673.,  2700.,  2727.,  2754.,  2781.,  2808.,  3065.,  3118.,  3171.,  3224.,  3277.,  3330.,  3383.,  3436.,  3489.,  3542.,  3595.,  3648.,  6668.,  6776.,  6884.,  6992.,  7100.,  7208.,  7316.,  7424.,  7532.,  7640.,  7748.,  7856.,  3627.,  3682.,  3737.,  3792.,  6928.,  7040.,  7152.,  7264.,  7376.,  7488.,  7600.,  7712.,  7824.,  7936.,  8048.,  8160.,  3765.,  3822.,  3879.,  3936.,  3993.,  4050.,  4107.,  4164.,  4549.,  4602.,  4655.,  4708.,  4761.,  4814.,  4867.,  4920.,  4973.,  5026.,  5079.,  5132.,  9692.,  9800.,  9908., 10016., 10124., 10232., 10340., 10448., 10556., 10664., 10772., 10880.,  5167.,  5222.,  5277.,  5332., 10064., 10176., 10288., 10400., 10512., 10624., 10736., 10848., 10960., 11072., 11184., 11296.,  5361.,  5418.,  5475.,  5532.,  5589.,  5646.,  5703.,  5760.,  6033.,  6086.,  6139.,  6192.,  6245.,  6298.,  6351.,  6404.,  6457.,  6510.,  6563.,  6616., 12716., 12824., 12932., 13040., 13148., 13256., 13364., 13472., 13580., 13688., 13796., 13904.,  6707.,  6762.,  6817.,  6872., 13200., 13312., 13424., 13536., 13648., 13760., 13872., 13984., 14096., 14208., 14320., 14432.,  6957.,  7014.,  7071.,  7128.,  7185.,  7242.,  7299.,  7356.,  2492.,  2520.,  2548.,  2576.,  2604.,  2632.,  2660.,  2688.,  2716.,  2744.,  2772.,  2800.,  5293.,  5350.,  5407.,  5464.,  5521.,  5578.,  5635.,  5692.,  5749.,  5806.,  5863.,  5920.,  2813.,  2842.,  2871.,  2900.,  5479.,  5538.,  5597.,  5656.,  5715.,  5774.,  5833.,  5892.,  5951.,  6010.,  6069.,  6128.,  2910.,  2940.,  2970.,  3000.,  3030.,  3060.,  3090.,  3120.,  3431.,  3490.,  3549.,  3608.,  3667.,  3726.,  3785.,  3844.,  3903.,  3962.,  4021.,  4080.,  7448.,  7568.,  7688.,  7808.,  7928.,  8048.,  8168.,  8288.,  8408.,  8528.,  8648.,  8768.,  4041.,  4102.,  4163.,  4224.,  7708.,  7832.,  7956.,  8080.,  8204.,  8328.,  8452.,  8576.,  8700.,  8824.,  8948.,  9072.,  4179.,  4242.,  4305.,  4368.,  4431.,  4494.,  4557.,  4620.,  5083.,  5142.,  5201.,  5260.,  5319.,  5378.,  5437.,  5496.,  5555.,  5614.,  5673.,  5732., 10808., 10928., 11048., 11168., 11288., 11408., 11528., 11648., 11768., 11888., 12008., 12128.,  5749.,  5810.,  5871.,  5932., 11180., 11304., 11428., 11552., 11676., 11800., 11924., 12048., 12172., 12296., 12420., 12544.,  5943.,  6006.,  6069.,  6132.,  6195.,  6258.,  6321.,  6384.,  6735.,  6794.,  6853.,  6912.,  6971.,  7030.,  7089.,  7148.,  7207.,  7266.,  7325.,  7384., 14168., 14288., 14408., 14528., 14648., 14768., 14888., 15008., 15128., 15248., 15368., 15488.,  7457.,  7518.,  7579.,  7640., 14652., 14776., 14900., 15024., 15148., 15272., 15396., 15520., 15644., 15768., 15892., 16016.,  7707.,  7770.,  7833.,  7896.,  7959.,  8022.,  8085.,  8148.,  2759.,  2790.,  2821.,  2852.,  2883.,  2914.,  2945.,  2976.,  3007.,  3038.,  3069.,  3100.,  5851.,  5914.,  5977.,  6040.,  6103.,  6166.,  6229.,  6292.,  6355.,  6418.,  6481.,  6544.,  3104.,  3136.,  3168.,  3200.,  6037.,  6102.,  6167.,  6232.,  6297.,  6362.,  6427.,  6492.,  6557.,  6622.,  6687.,  6752.,  3201.,  3234.,  3267.,  3300.,  3333.,  3366.,  3399.,  3432.,  3797.,  3862.,  3927.,  3992.,  4057.,  4122.,  4187.,  4252.,  4317.,  4382.,  4447.,  4512.,  8228.,  8360.,  8492.,  8624.,  8756.,  8888.,  9020.,  9152.,  9284.,  9416.,  9548.,  9680.,  4455.,  4522.,  4589.,  4656.,  8488.,  8624.,  8760.,  8896.,  9032.,  9168.,  9304.,  9440.,  9576.,  9712.,  9848.,  9984.,  4593.,  4662.,  4731.,  4800.,  4869.,  4938.,  5007.,  5076.,  5617.,  5682.,  5747.,  5812.,  5877.,  5942.,  6007.,  6072.,  6137.,  6202.,  6267.,  6332., 11924., 12056., 12188., 12320., 12452., 12584., 12716., 12848., 12980., 13112., 13244., 13376.,  6331.,  6398.,  6465.,  6532., 12296., 12432., 12568., 12704., 12840., 12976., 13112., 13248., 13384., 13520., 13656., 13792.,  6525.,  6594.,  6663.,  6732.,  6801.,  6870.,  6939.,  7008.,  7437.,  7502.,  7567.,  7632.,  7697.,  7762.,  7827.,  7892.,  7957.,  8022.,  8087.,  8152., 15620., 15752., 15884., 16016., 16148., 16280., 16412., 16544., 16676., 16808., 16940., 17072.,  8207.,  8274.,  8341.,  8408., 16104., 16240., 16376., 16512., 16648., 16784., 16920., 17056., 17192., 17328., 17464., 17600.,  8457.,  8526.,  8595.,  8664.,  8733.,  8802.,  8871.,  8940.,  3026.,  3060.,  3094.,  3128.,  3162.,  3196.,  3230.,  3264.,  3298.,  3332.,  3366.,  3400.,  6409.,  6478.,  6547.,  6616.,  6685.,  6754.,  6823.,  6892.,  6961.,  7030.,  7099.,  7168.,  3395.,  3430.,  3465.,  3500.,  6595.,  6666.,  6737.,  6808.,  6879.,  6950.,  7021.,  7092.,  7163.,  7234.,  7305.,  7376.,  3492.,  3528.,  3564.,  3600.,  3636.,  3672.,  3708.,  3744.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x12x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,    9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   19.,   22.,   25.,   28.,   31.,   34.,   37.,   40.,   43.,   46.,   49.,   52.,   26.,   28.,   30.,   32.,   34.,   36.,   38.,   40.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,    0.,    0.,    0.,    0.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,  103.,  106.,  109.,  112.,  115.,  118.,  121.,  124.,  127.,  130.,  133.,  136.,   82.,   84.,   86.,   88.,   90.,   92.,   94.,   96.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,    0.,    0.,    0.,    0.,   57.,   58.,   59.,   60.,   61.,   62.,   63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  146.,  148.,  150.,  152.,  154.,  156.,  158.,  160.,  162.,  164.,  166.,  168.,    0.,    0.,    0.,    0.,   85.,   86.,   87.,   88.,   89.,   90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  202.,  204.,  206.,  208.,  210.,  212.,  214.,  216.,  218.,  220.,  222.,  224.,    0.,    0.,    0.,    0.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  148.,  152.,  156.,  160.,  164.,  168.,  172.,  176.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  302.,  308.,  314.,  320.,  326.,  332.,  338.,  344.,  350.,  356.,  362.,  368.,  374.,  380.,  386.,  392.,    0.,    0.,    0.,    0.,  228.,  232.,  236.,  240.,  244.,  248.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,  284.,  288.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  470.,  476.,  482.,  488.,  494.,  500.,  506.,  512.,  518.,  524.,  530.,  536.,  542.,  548.,  554.,  560.,    0.,    0.,    0.,    0.,  340.,  344.,  348.,  352.,  356.,  360.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,  396.,  400.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080.,  638.,  644.,  650.,  656.,  662.,  668.,  674.,  680.,  686.,  692.,  698.,  704.,  710.,  716.,  722.,  728.,    0.,    0.,    0.,    0.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  279.,  282.,  285.,  288.,  291.,  294.,  297.,  300.,  643.,  650.,  657.,  664.,  671.,  678.,  685.,  692.,  699.,  706.,  713.,  720.,  388.,  392.,  396.,  400.,  404.,  408.,  412.,  416.,  420.,  424.,  428.,  432.,  436.,  440.,  444.,  448.,    0.,    0.,    0.,    0.,  339.,  342.,  345.,  348.,  351.,  354.,  357.,  360.,  363.,  366.,  369.,  372.,  375.,  378.,  381.,  384.,  839.,  846.,  853.,  860.,  867.,  874.,  881.,  888.,  895.,  902.,  909.,  916.,  500.,  504.,  508.,  512.,  516.,  520.,  524.,  528.,  532.,  536.,  540.,  544.,  548.,  552.,  556.,  560.,    0.,    0.,    0.,    0.,  423.,  426.,  429.,  432.,  435.,  438.,  441.,  444.,  447.,  450.,  453.,  456.,  459.,  462.,  465.,  468., 1035., 1042., 1049., 1056., 1063., 1070., 1077., 1084., 1091., 1098., 1105., 1112.,  612.,  616.,  620.,  624.,  628.,  632.,  636.,  640.,  644.,  648.,  652.,  656.,  660.,  664.,  668.,  672.,    0.,    0.,    0.,    0.,  507.,  510.,  513.,  516.,  519.,  522.,  525.,  528.,  531.,  534.,  537.,  540.,  543.,  546.,  549.,  552., 1231., 1238., 1245., 1252., 1259., 1266., 1273., 1280., 1287., 1294., 1301., 1308.,  724.,  728.,  732.,  736.,  740.,  744.,  748.,  752.,  756.,  760.,  764.,  768.,  772.,  776.,  780.,  784.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    5.,   10.,   15.,   20.,   25.,   30.,   35.,   40.,   45.,   50.,   55.,   60.,   65.,   70.,   75.,   80.,   91.,  102.,  113.,  124.,  135.,  146.,  157.,  168.,  179.,  190.,  201.,  212.,   78.,   84.,   90.,   96.,  102.,  108.,  114.,  120.,  126.,  132.,  138.,  144.,  150.,  156.,  162.,  168.,    0.,    0.,    0.,    0.,  145.,  150.,  155.,  160.,  165.,  170.,  175.,  180.,  185.,  190.,  195.,  200.,  205.,  210.,  215.,  220.,  399.,  410.,  421.,  432.,  443.,  454.,  465.,  476.,  487.,  498.,  509.,  520.,  246.,  252.,  258.,  264.,  270.,  276.,  282.,  288.,  294.,  300.,  306.,  312.,  318.,  324.,  330.,  336.,    0.,    0.,    0.,    0.,  285.,  290.,  295.,  300.,  305.,  310.,  315.,  320.,  325.,  330.,  335.,  340.,  345.,  350.,  355.,  360.,  707.,  718.,  729.,  740.,  751.,  762.,  773.,  784.,  795.,  806.,  817.,  828.,  414.,  420.,  426.,  432.,  438.,  444.,  450.,  456.,  462.,  468.,  474.,  480.,  486.,  492.,  498.,  504.,    0.,    0.,    0.,    0.,  425.,  430.,  435.,  440.,  445.,  450.,  455.,  460.,  465.,  470.,  475.,  480.,  485.,  490.,  495.,  500., 1015., 1026., 1037., 1048., 1059., 1070., 1081., 1092., 1103., 1114., 1125., 1136.,  582.,  588.,  594.,  600.,  606.,  612.,  618.,  624.,  630.,  636.,  642.,  648.,  654.,  660.,  666.,  672.,    0.,    0.,    0.,    0.,  572.,  584.,  596.,  608.,  620.,  632.,  644.,  656.,  668.,  680.,  692.,  704.,  716.,  728.,  740.,  752., 1450., 1476., 1502., 1528., 1554., 1580., 1606., 1632., 1658., 1684., 1710., 1736.,  854.,  868.,  882.,  896.,  910.,  924.,  938.,  952.,  966.,  980.,  994., 1008., 1022., 1036., 1050., 1064.,    0.,    0.,    0.,    0.,  908.,  920.,  932.,  944.,  956.,  968.,  980.,  992., 1004., 1016., 1028., 1040., 1052., 1064., 1076., 1088., 2178., 2204., 2230., 2256., 2282., 2308., 2334., 2360., 2386., 2412., 2438., 2464., 1246., 1260., 1274., 1288., 1302., 1316., 1330., 1344., 1358., 1372., 1386., 1400., 1414., 1428., 1442., 1456.,    0.,    0.,    0.,    0., 1244., 1256., 1268., 1280., 1292., 1304., 1316., 1328., 1340., 1352., 1364., 1376., 1388., 1400., 1412., 1424., 2906., 2932., 2958., 2984., 3010., 3036., 3062., 3088., 3114., 3140., 3166., 3192., 1638., 1652., 1666., 1680., 1694., 1708., 1722., 1736., 1750., 1764., 1778., 1792., 1806., 1820., 1834., 1848.,    0.,    0.,    0.,    0.,  595.,  602.,  609.,  616.,  623.,  630.,  637.,  644.,  651.,  658.,  665.,  672.,  679.,  686.,  693.,  700., 1387., 1402., 1417., 1432., 1447., 1462., 1477., 1492., 1507., 1522., 1537., 1552.,  776.,  784.,  792.,  800.,  808.,  816.,  824.,  832.,  840.,  848.,  856.,  864.,  872.,  880.,  888.,  896.,    0.,    0.,    0.,    0.,  791.,  798.,  805.,  812.,  819.,  826.,  833.,  840.,  847.,  854.,  861.,  868.,  875.,  882.,  889.,  896., 1807., 1822., 1837., 1852., 1867., 1882., 1897., 1912., 1927., 1942., 1957., 1972., 1000., 1008., 1016., 1024., 1032., 1040., 1048., 1056., 1064., 1072., 1080., 1088., 1096., 1104., 1112., 1120.,    0.,    0.,    0.,    0.,  987.,  994., 1001., 1008., 1015., 1022., 1029., 1036., 1043., 1050., 1057., 1064., 1071., 1078., 1085., 1092., 2227., 2242., 2257., 2272., 2287., 2302., 2317., 2332., 2347., 2362., 2377., 2392., 1224., 1232., 1240., 1248., 1256., 1264., 1272., 1280., 1288., 1296., 1304., 1312., 1320., 1328., 1336., 1344.,    0.,    0.,    0.,    0., 1183., 1190., 1197., 1204., 1211., 1218., 1225., 1232., 1239., 1246., 1253., 1260., 1267., 1274., 1281., 1288., 2647., 2662., 2677., 2692., 2707., 2722., 2737., 2752., 2767., 2782., 2797., 2812., 1448., 1456., 1464., 1472., 1480., 1488., 1496., 1504., 1512., 1520., 1528., 1536., 1544., 1552., 1560., 1568.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    9.,   18.,   27.,   36.,   45.,   54.,   63.,   72.,   81.,   90.,   99.,  108.,  117.,  126.,  135.,  144.,  163.,  182.,  201.,  220.,  239.,  258.,  277.,  296.,  315.,  334.,  353.,  372.,  130.,  140.,  150.,  160.,  170.,  180.,  190.,  200.,  210.,  220.,  230.,  240.,  250.,  260.,  270.,  280.,    0.,    0.,    0.,    0.,  261.,  270.,  279.,  288.,  297.,  306.,  315.,  324.,  333.,  342.,  351.,  360.,  369.,  378.,  387.,  396.,  695.,  714.,  733.,  752.,  771.,  790.,  809.,  828.,  847.,  866.,  885.,  904.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  530.,  540.,  550.,  560.,    0.,    0.,    0.,    0.,  513.,  522.,  531.,  540.,  549.,  558.,  567.,  576.,  585.,  594.,  603.,  612.,  621.,  630.,  639.,  648., 1227., 1246., 1265., 1284., 1303., 1322., 1341., 1360., 1379., 1398., 1417., 1436.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  810.,  820.,  830.,  840.,    0.,    0.,    0.,    0.,  765.,  774.,  783.,  792.,  801.,  810.,  819.,  828.,  837.,  846.,  855.,  864.,  873.,  882.,  891.,  900., 1759., 1778., 1797., 1816., 1835., 1854., 1873., 1892., 1911., 1930., 1949., 1968.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080., 1090., 1100., 1110., 1120.,    0.,    0.,    0.,    0., 1028., 1048., 1068., 1088., 1108., 1128., 1148., 1168., 1188., 1208., 1228., 1248., 1268., 1288., 1308., 1328., 2490., 2532., 2574., 2616., 2658., 2700., 2742., 2784., 2826., 2868., 2910., 2952., 1406., 1428., 1450., 1472., 1494., 1516., 1538., 1560., 1582., 1604., 1626., 1648., 1670., 1692., 1714., 1736.,    0.,    0.,    0.,    0., 1588., 1608., 1628., 1648., 1668., 1688., 1708., 1728., 1748., 1768., 1788., 1808., 1828., 1848., 1868., 1888., 3666., 3708., 3750., 3792., 3834., 3876., 3918., 3960., 4002., 4044., 4086., 4128., 2022., 2044., 2066., 2088., 2110., 2132., 2154., 2176., 2198., 2220., 2242., 2264., 2286., 2308., 2330., 2352.,    0.,    0.,    0.,    0., 2148., 2168., 2188., 2208., 2228., 2248., 2268., 2288., 2308., 2328., 2348., 2368., 2388., 2408., 2428., 2448., 4842., 4884., 4926., 4968., 5010., 5052., 5094., 5136., 5178., 5220., 5262., 5304., 2638., 2660., 2682., 2704., 2726., 2748., 2770., 2792., 2814., 2836., 2858., 2880., 2902., 2924., 2946., 2968.,    0.,    0.,    0.,    0.,  935.,  946.,  957.,  968.,  979.,  990., 1001., 1012., 1023., 1034., 1045., 1056., 1067., 1078., 1089., 1100., 2131., 2154., 2177., 2200., 2223., 2246., 2269., 2292., 2315., 2338., 2361., 2384., 1164., 1176., 1188., 1200., 1212., 1224., 1236., 1248., 1260., 1272., 1284., 1296., 1308., 1320., 1332., 1344.,    0.,    0.,    0.,    0., 1243., 1254., 1265., 1276., 1287., 1298., 1309., 1320., 1331., 1342., 1353., 1364., 1375., 1386., 1397., 1408., 2775., 2798., 2821., 2844., 2867., 2890., 2913., 2936., 2959., 2982., 3005., 3028., 1500., 1512., 1524., 1536., 1548., 1560., 1572., 1584., 1596., 1608., 1620., 1632., 1644., 1656., 1668., 1680.,    0.,    0.,    0.,    0., 1551., 1562., 1573., 1584., 1595., 1606., 1617., 1628., 1639., 1650., 1661., 1672., 1683., 1694., 1705., 1716., 3419., 3442., 3465., 3488., 3511., 3534., 3557., 3580., 3603., 3626., 3649., 3672., 1836., 1848., 1860., 1872., 1884., 1896., 1908., 1920., 1932., 1944., 1956., 1968., 1980., 1992., 2004., 2016.,    0.,    0.,    0.,    0., 1859., 1870., 1881., 1892., 1903., 1914., 1925., 1936., 1947., 1958., 1969., 1980., 1991., 2002., 2013., 2024., 4063., 4086., 4109., 4132., 4155., 4178., 4201., 4224., 4247., 4270., 4293., 4316., 2172., 2184., 2196., 2208., 2220., 2232., 2244., 2256., 2268., 2280., 2292., 2304., 2316., 2328., 2340., 2352.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x12x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  173.,   179.,   185.,   191.,     5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,   400.,   420.,   440.,   460.,   480.,   500.,   520.,   540.,   112.,   132.,   152.,   172.,    67.,    81.,    95.,   109.,   668.,   704.,   740.,   776.,   812.,   848.,   884.,   920.,   252.,   288.,   324.,   360.,   105.,   127.,   149.,   171.,   193.,   215.,   237.,   259.,   149.,   155.,   161.,   167.,   173.,   179.,   185.,   191.,     5.,    11.,    17.,    23.,   320.,   340.,   360.,   380.,   400.,   420.,   440.,   460.,   480.,   500.,   520.,   540.,    11.,    25.,    39.,    53.,   524.,   560.,   596.,   632.,   668.,   704.,   740.,   776.,   812.,   848.,   884.,   920.,    17.,    39.,    61.,    83.,   105.,   127.,   149.,   171.,   268.,   304.,   340.,   376.,   412.,   448.,   484.,   520.,   556.,   592.,   628.,   664.,   772.,   860.,   948.,  1036.,  1124.,  1212.,  1300.,  1388.,  1476.,  1564.,  1652.,  1740.,   888.,   940.,   992.,  1044.,  1052.,  1172.,  1292.,  1412.,  1532.,  1652.,  1772.,  1892.,  2012.,  2132.,  2252.,  2372.,  1220.,  1288.,  1356.,  1424.,   788.,   856.,   924.,   992.,   124.,   160.,   196.,   232.,   268.,   304.,   340.,   376.,   412.,   448.,   484.,   520.,  1828.,  1916.,  2004.,  2092.,   772.,   860.,   948.,  1036.,  1124.,  1212.,  1300.,  1388.,   680.,   732.,   784.,   836.,  2492.,  2612.,  2732.,  2852.,  1052.,  1172.,  1292.,  1412.,  1532.,  1652.,  1772.,  1892.,   948.,  1016.,  1084.,  1152.,  1220.,  1288.,  1356.,  1424.,   940.,   976.,  1012.,  1048.,   124.,   160.,   196.,   232.,   268.,   304.,   340.,   376.,  1476.,  1564.,  1652.,  1740.,  1828.,  1916.,  2004.,  2092.,   772.,   860.,   948.,  1036.,   472.,   524.,   576.,   628.,  2012.,  2132.,  2252.,  2372.,  2492.,  2612.,  2732.,  2852.,  1052.,  1172.,  1292.,  1412.,   676.,   744.,   812.,   880.,   948.,  1016.,  1084.,  1152.,   743.,   773.,   803.,   833.,   863.,   893.,   923.,   953.,    23.,    53.,    83.,   113.,   932.,  1000.,  1068.,  1136.,  1204.,  1272.,  1340.,  1408.,  1476.,  1544.,  1612.,  1680.,    29.,    67.,   105.,   143.,  1136.,  1220.,  1304.,  1388.,  1472.,  1556.,  1640.,  1724.,  1808.,  1892.,  1976.,  2060.,    35.,    81.,   127.,   173.,   219.,   265.,   311.,   357.,   880.,   964.,  1048.,  1132.,  1216.,  1300.,  1384.,  1468.,  1552.,  1636.,  1720.,  1804.,  1612.,  1796.,  1980.,  2164.,  2348.,  2532.,  2716.,  2900.,  3084.,  3268.,  3452.,  3636.,  1884.,  1984.,  2084.,  2184.,  1892.,  2108.,  2324.,  2540.,  2756.,  2972.,  3188.,  3404.,  3620.,  3836.,  4052.,  4268.,  2216.,  2332.,  2448.,  2564.,  1208.,  1324.,  1440.,  1556.,   544.,   628.,   712.,   796.,   880.,   964.,  1048.,  1132.,  1216.,  1300.,  1384.,  1468.,  3820.,  4004.,  4188.,  4372.,  1612.,  1796.,  1980.,  2164.,  2348.,  2532.,  2716.,  2900.,  1484.,  1584.,  1684.,  1784.,  4484.,  4700.,  4916.,  5132.,  1892.,  2108.,  2324.,  2540.,  2756.,  2972.,  3188.,  3404.,  1752.,  1868.,  1984.,  2100.,  2216.,  2332.,  2448.,  2564.,  1936.,  2020.,  2104.,  2188.,   544.,   628.,   712.,   796.,   880.,   964.,  1048.,  1132.,  3084.,  3268.,  3452.,  3636.,  3820.,  4004.,  4188.,  4372.,  1612.,  1796.,  1980.,  2164.,  1084.,  1184.,  1284.,  1384.,  3620.,  3836.,  4052.,  4268.,  4484.,  4700.,  4916.,  5132.,  1892.,  2108.,  2324.,  2540.,  1288.,  1404.,  1520.,  1636.,  1752.,  1868.,  1984.,  2100.,  1337.,  1391.,  1445.,  1499.,  1553.,  1607.,  1661.,  1715.,    41.,    95.,   149.,   203.,  1544.,  1660.,  1776.,  1892.,  2008.,  2124.,  2240.,  2356.,  2472.,  2588.,  2704.,  2820.,    47.,   109.,   171.,   233.,  1748.,  1880.,  2012.,  2144.,  2276.,  2408.,  2540.,  2672.,  2804.,  2936.,  3068.,  3200.,    53.,   123.,   193.,   263.,   333.,   403.,   473.,   543.,  1492.,  1624.,  1756.,  1888.,  2020.,  2152.,  2284.,  2416.,  2548.,  2680.,  2812.,  2944.,  2452.,  2732.,  3012.,  3292.,  3572.,  3852.,  4132.,  4412.,  4692.,  4972.,  5252.,  5532.,  2880.,  3028.,  3176.,  3324.,  2732.,  3044.,  3356.,  3668.,  3980.,  4292.,  4604.,  4916.,  5228.,  5540.,  5852.,  6164.,  3212.,  3376.,  3540.,  3704.,  1628.,  1792.,  1956.,  2120.,   964.,  1096.,  1228.,  1360.,  1492.,  1624.,  1756.,  1888.,  2020.,  2152.,  2284.,  2416.,  5812.,  6092.,  6372.,  6652.,  2452.,  2732.,  3012.,  3292.,  3572.,  3852.,  4132.,  4412.,  2288.,  2436.,  2584.,  2732.,  6476.,  6788.,  7100.,  7412.,  2732.,  3044.,  3356.,  3668.,  3980.,  4292.,  4604.,  4916.,  2556.,  2720.,  2884.,  3048.,  3212.,  3376.,  3540.,  3704.,  2932.,  3064.,  3196.,  3328.,   964.,  1096.,  1228.,  1360.,  1492.,  1624.,  1756.,  1888.,  4692.,  4972.,  5252.,  5532.,  5812.,  6092.,  6372.,  6652.,  2452.,  2732.,  3012.,  3292.,  1696.,  1844.,  1992.,  2140.,  5228.,  5540.,  5852.,  6164.,  6476.,  6788.,  7100.,  7412.,  2732.,  3044.,  3356.,  3668.,  1900.,  2064.,  2228.,  2392.,  2556.,  2720.,  2884.,  3048.,  1931.,  2009.,  2087.,  2165.,  2243.,  2321.,  2399.,  2477.,    59.,   137.,   215.,   293.,  2156.,  2320.,  2484.,  2648.,  2812.,  2976.,  3140.,  3304.,  3468.,  3632.,  3796.,  3960.,    65.,   151.,   237.,   323.,  2360.,  2540.,  2720.,  2900.,  3080.,  3260.,  3440.,  3620.,  3800.,  3980.,  4160.,  4340.,    71.,   165.,   259.,   353.,   447.,   541.,   635.,   729.,  2933.,  3035.,  3137.,  3239.,    77.,   179.,   281.,   383.,   485.,   587.,   689.,   791.,  3616.,  3828.,  4040.,  4252.,  4464.,  4676.,  4888.,  5100.,  1792.,  2004.,  2216.,  2428.,   523.,   633.,   743.,   853.,  3884.,  4112.,  4340.,  4568.,  4796.,  5024.,  5252.,  5480.,  1932.,  2160.,  2388.,  2616.,   561.,   679.,   797.,   915.,  1033.,  1151.,  1269.,  1387.,  2525.,  2627.,  2729.,  2831.,  2933.,  3035.,  3137.,  3239.,    77.,   179.,   281.,   383.,  2768.,  2980.,  3192.,  3404.,  3616.,  3828.,  4040.,  4252.,  4464.,  4676.,  4888.,  5100.,    83.,   193.,   303.,   413.,  2972.,  3200.,  3428.,  3656.,  3884.,  4112.,  4340.,  4568.,  4796.,  5024.,  5252.,  5480.,    89.,   207.,   325.,   443.,   561.,   679.,   797.,   915.,  2716.,  2944.,  3172.,  3400.,  3628.,  3856.,  4084.,  4312.,  4540.,  4768.,  4996.,  5224.,  4132.,  4604.,  5076.,  5548.,  6020.,  6492.,  6964.,  7436.,  7908.,  8380.,  8852.,  9324.,  4872.,  5116.,  5360.,  5604.,  4412.,  4916.,  5420.,  5924.,  6428.,  6932.,  7436.,  7940.,  8444.,  8948.,  9452.,  9956.,  5204.,  5464.,  5724.,  5984.,  2468.,  2728.,  2988.,  3248.,  1804.,  2032.,  2260.,  2488.,  2716.,  2944.,  3172.,  3400.,  3628.,  3856.,  4084.,  4312.,  9796., 10268., 10740., 11212.,  4132.,  4604.,  5076.,  5548.,  6020.,  6492.,  6964.,  7436.,  3896.,  4140.,  4384.,  4628., 10460., 10964., 11468., 11972.,  4412.,  4916.,  5420.,  5924.,  6428.,  6932.,  7436.,  7940.,  4164.,  4424.,  4684.,  4944.,  5204.,  5464.,  5724.,  5984.,  4924.,  5152.,  5380.,  5608.,  1804.,  2032.,  2260.,  2488.,  2716.,  2944.,  3172.,  3400.,  7908.,  8380.,  8852.,  9324.,  9796., 10268., 10740., 11212.,  4132.,  4604.,  5076.,  5548.,  2920.,  3164.,  3408.,  3652.,  8444.,  8948.,  9452.,  9956., 10460., 10964., 11468., 11972.,  4412.,  4916.,  5420.,  5924.,  3124.,  3384.,  3644.,  3904.,  4164.,  4424.,  4684.,  4944.,  3119.,  3245.,  3371.,  3497.,  3623.,  3749.,  3875.,  4001.,    95.,   221.,   347.,   473.,  3380.,  3640.,  3900.,  4160.,  4420.,  4680.,  4940.,  5200.,  5460.,  5720.,  5980.,  6240.,   101.,   235.,   369.,   503.,  3584.,  3860.,  4136.,  4412.,  4688.,  4964.,  5240.,  5516.,  5792.,  6068.,  6344.,  6620.,   107.,   249.,   391.,   533.,   675.,   817.,   959.,  1101.,  3328.,  3604.,  3880.,  4156.,  4432.,  4708.,  4984.,  5260.,  5536.,  5812.,  6088.,  6364.,  4972.,  5540.,  6108.,  6676.,  7244.,  7812.,  8380.,  8948.,  9516., 10084., 10652., 11220.,  5868.,  6160.,  6452.,  6744.,  5252.,  5852.,  6452.,  7052.,  7652.,  8252.,  8852.,  9452., 10052., 10652., 11252., 11852.,  6200.,  6508.,  6816.,  7124.,  2888.,  3196.,  3504.,  3812.,  2224.,  2500.,  2776.,  3052.,  3328.,  3604.,  3880.,  4156.,  4432.,  4708.,  4984.,  5260., 11788., 12356., 12924., 13492.,  4972.,  5540.,  6108.,  6676.,  7244.,  7812.,  8380.,  8948.,  4700.,  4992.,  5284.,  5576., 12452., 13052., 13652., 14252.,  5252.,  5852.,  6452.,  7052.,  7652.,  8252.,  8852.,  9452.,  4968.,  5276.,  5584.,  5892.,  6200.,  6508.,  6816.,  7124.,  5920.,  6196.,  6472.,  6748.,  2224.,  2500.,  2776.,  3052.,  3328.,  3604.,  3880.,  4156.,  9516., 10084., 10652., 11220., 11788., 12356., 12924., 13492.,  4972.,  5540.,  6108.,  6676.,  3532.,  3824.,  4116.,  4408., 10052., 10652., 11252., 11852., 12452., 13052., 13652., 14252.,  5252.,  5852.,  6452.,  7052.,  3736.,  4044.,  4352.,  4660.,  4968.,  5276.,  5584.,  5892.,  3713.,  3863.,  4013.,  4163.,  4313.,  4463.,  4613.,  4763.,   113.,   263.,   413.,   563.,  3992.,  4300.,  4608.,  4916.,  5224.,  5532.,  5840.,  6148.,  6456.,  6764.,  7072.,  7380.,   119.,   277.,   435.,   593.,  4196.,  4520.,  4844.,  5168.,  5492.,  5816.,  6140.,  6464.,  6788.,  7112.,  7436.,  7760.,   125.,   291.,   457.,   623.,   789.,   955.,  1121.,  1287.,  3940.,  4264.,  4588.,  4912.,  5236.,  5560.,  5884.,  6208.,  6532.,  6856.,  7180.,  7504.,  5812.,  6476.,  7140.,  7804.,  8468.,  9132.,  9796., 10460., 11124., 11788., 12452., 13116.,  6864.,  7204.,  7544.,  7884.,  6092.,  6788.,  7484.,  8180.,  8876.,  9572., 10268., 10964., 11660., 12356., 13052., 13748.,  7196.,  7552.,  7908.,  8264.,  3308.,  3664.,  4020.,  4376.,  2644.,  2968.,  3292.,  3616.,  3940.,  4264.,  4588.,  4912.,  5236.,  5560.,  5884.,  6208., 13780., 14444., 15108., 15772.,  5812.,  6476.,  7140.,  7804.,  8468.,  9132.,  9796., 10460.,  5504.,  5844.,  6184.,  6524., 14444., 15140., 15836., 16532.,  6092.,  6788.,  7484.,  8180.,  8876.,  9572., 10268., 10964.,  5772.,  6128.,  6484.,  6840.,  7196.,  7552.,  7908.,  8264.,  6916.,  7240.,  7564.,  7888.,  2644.,  2968.,  3292.,  3616.,  3940.,  4264.,  4588.,  4912., 11124., 11788., 12452., 13116., 13780., 14444., 15108., 15772.,  5812.,  6476.,  7140.,  7804.,  4144.,  4484.,  4824.,  5164., 11660., 12356., 13052., 13748., 14444., 15140., 15836., 16532.,  6092.,  6788.,  7484.,  8180.,  4348.,  4704.,  5060.,  5416.,  5772.,  6128.,  6484.,  6840.,  4307.,  4481.,  4655.,  4829.,  5003.,  5177.,  5351.,  5525.,   131.,   305.,   479.,   653.,  4604.,  4960.,  5316.,  5672.,  6028.,  6384.,  6740.,  7096.,  7452.,  7808.,  8164.,  8520.,   137.,   319.,   501.,   683.,  4808.,  5180.,  5552.,  5924.,  6296.,  6668.,  7040.,  7412.,  7784.,  8156.,  8528.,  8900.,   143.,   333.,   523.,   713.,   903.,  1093.,  1283.,  1473.,  5693.,  5891.,  6089.,  6287.,   149.,   347.,   545.,   743.,   941.,  1139.,  1337.,  1535.,  6832.,  7236.,  7640.,  8044.,  8448.,  8852.,  9256.,  9660.,  3472.,  3876.,  4280.,  4684.,   979.,  1185.,  1391.,  1597.,  7100.,  7520.,  7940.,  8360.,  8780.,  9200.,  9620., 10040.,  3612.,  4032.,  4452.,  4872.,  1017.,  1231.,  1445.,  1659.,  1873.,  2087.,  2301.,  2515.,  4901.,  5099.,  5297.,  5495.,  5693.,  5891.,  6089.,  6287.,   149.,   347.,   545.,   743.,  5216.,  5620.,  6024.,  6428.,  6832.,  7236.,  7640.,  8044.,  8448.,  8852.,  9256.,  9660.,   155.,   361.,   567.,   773.,  5420.,  5840.,  6260.,  6680.,  7100.,  7520.,  7940.,  8360.,  8780.,  9200.,  9620., 10040.,   161.,   375.,   589.,   803.,  1017.,  1231.,  1445.,  1659.,  5164.,  5584.,  6004.,  6424.,  6844.,  7264.,  7684.,  8104.,  8524.,  8944.,  9364.,  9784.,  7492.,  8348.,  9204., 10060., 10916., 11772., 12628., 13484., 14340., 15196., 16052., 16908.,  8856.,  9292.,  9728., 10164.,  7772.,  8660.,  9548., 10436., 11324., 12212., 13100., 13988., 14876., 15764., 16652., 17540.,  9188.,  9640., 10092., 10544.,  4148.,  4600.,  5052.,  5504.,  3484.,  3904.,  4324.,  4744.,  5164.,  5584.,  6004.,  6424.,  6844.,  7264.,  7684.,  8104., 17764., 18620., 19476., 20332.,  7492.,  8348.,  9204., 10060., 10916., 11772., 12628., 13484.,  7112.,  7548.,  7984.,  8420., 18428., 19316., 20204., 21092.,  7772.,  8660.,  9548., 10436., 11324., 12212., 13100., 13988.,  7380.,  7832.,  8284.,  8736.,  9188.,  9640., 10092., 10544.,  8908.,  9328.,  9748., 10168.,  3484.,  3904.,  4324.,  4744.,  5164.,  5584.,  6004.,  6424., 14340., 15196., 16052., 16908., 17764., 18620., 19476., 20332.,  7492.,  8348.,  9204., 10060.,  5368.,  5804.,  6240.,  6676., 14876., 15764., 16652., 17540., 18428., 19316., 20204., 21092.,  7772.,  8660.,  9548., 10436.,  5572.,  6024.,  6476.,  6928.,  7380.,  7832.,  8284.,  8736.,  5495.,  5717.,  5939.,  6161.,  6383.,  6605.,  6827.,  7049.,   167.,   389.,   611.,   833.,  5828.,  6280.,  6732.,  7184.,  7636.,  8088.,  8540.,  8992.,  9444.,  9896., 10348., 10800.,   173.,   403.,   633.,   863.,  6032.,  6500.,  6968.,  7436.,  7904.,  8372.,  8840.,  9308.,  9776., 10244., 10712., 11180.,   179.,   417.,   655.,   893.,  1131.,  1369.,  1607.,  1845.,  5776.,  6244.,  6712.,  7180.,  7648.,  8116.,  8584.,  9052.,  9520.,  9988., 10456., 10924.,  8332.,  9284., 10236., 11188., 12140., 13092., 14044., 14996., 15948., 16900., 17852., 18804.,  9852., 10336., 10820., 11304.,  8420.,  9148.,  9876., 10604., 11332., 12060., 12788., 13516., 14244., 14972., 15700., 16428.,  6920.,  7164.,  7408.,  7652.,   280.,   524.,   768.,  1012.,  3904.,  4372.,  4840.,  5308.,  5776.,  6244.,  6712.,  7180.,  7648.,  8116.,  8584.,  9052., 19756., 20708., 21660., 22612.,  8332.,  9284., 10236., 11188., 12140., 13092., 14044., 14996.,  7916.,  8400.,  8884.,  9368., 13060., 13788., 14516., 15244.,  8420.,  9148.,  9876., 10604., 11332., 12060., 12788., 13516.,  5944.,  6188.,  6432.,  6676.,  6920.,  7164.,  7408.,  7652.,  9904., 10372., 10840., 11308.,  3904.,  4372.,  4840.,  5308.,  5776.,  6244.,  6712.,  7180., 15948., 16900., 17852., 18804., 19756., 20708., 21660., 22612.,  8332.,  9284., 10236., 11188.,  5980.,  6464.,  6948.,  7432., 10148., 10876., 11604., 12332., 13060., 13788., 14516., 15244.,  8420.,  9148.,  9876., 10604.,  4968.,  5212.,  5456.,  5700.,  5944.,  6188.,  6432.,  6676.,  6089.,  6335.,  6581.,  6827.,  7073.,  7319.,  7565.,  7811.,   185.,   431.,   677.,   923.,  6440.,  6940.,  7440.,  7940.,  8440.,  8940.,  9440.,  9940., 10440., 10940., 11440., 11940.,   191.,   445.,   699.,   953.,  1332.,  1592.,  1852.,  2112.,  2372.,  2632.,  2892.,  3152.,  3412.,  3672.,  3932.,  4192.,     5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,  5172.,  5432.,  5692.,  5952.,  6212.,  6472.,  6732.,  6992.,  7252.,  7512.,  7772.,  8032.,  4692.,  5228.,  5764.,  6300.,  6836.,  7372.,  7908.,  8444.,  8980.,  9516., 10052., 10588.,  7584.,  7860.,  8136.,  8412.,   684.,   996.,  1308.,  1620.,  1932.,  2244.,  2556.,  2868.,  3180.,  3492.,  3804.,  4116.,   556.,   592.,   628.,   664.,   508.,   544.,   580.,   616.,  4132.,  4392.,  4652.,  4912.,  5172.,  5432.,  5692.,  5952.,  6212.,  6472.,  6732.,  6992., 11124., 11660., 12196., 12732.,  4692.,  5228.,  5764.,  6300.,  6836.,  7372.,  7908.,  8444.,  6480.,  6756.,  7032.,  7308.,  8524.,  8836.,  9148.,  9460.,   684.,   996.,  1308.,  1620.,  1932.,  2244.,  2556.,  2868.,   412.,   448.,   484.,   520.,   556.,   592.,   628.,   664.,  3540.,  3800.,  4060.,  4320.,  4132.,  4392.,  4652.,  4912.,  5172.,  5432.,  5692.,  5952.,  8980.,  9516., 10052., 10588., 11124., 11660., 12196., 12732.,  4692.,  5228.,  5764.,  6300.,  5376.,  5652.,  5928.,  6204.,  7276.,  7588.,  7900.,  8212.,  8524.,  8836.,  9148.,  9460.,   684.,   996.,  1308.,  1620.,   268.,   304.,   340.,   376.,   412.,   448.,   484.,   520.,   347.,   361.,   375.,   389.,   403.,   417.,   431.,   445.,    11.,    25.,    39.,    53.,   524.,   560.,   596.,   632.,   668.,   704.,   740.,   776.,   812.,   848.,   884.,   920.,    17.,    39.,    61.,    83.,   728.,   780.,   832.,   884.,   936.,   988.,  1040.,  1092.,  1144.,  1196.,  1248.,  1300.,    23.,    53.,    83.,   113.,   143.,   173.,   203.,   233.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x12x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,    53.,    59.,    65.,    71.,    77.,    83.,    89.,    95.,   112.,   132.,   152.,   172.,   192.,   212.,   232.,   252.,   272.,   292.,   312.,   332.,   179.,   193.,   207.,   221.,   235.,   249.,   263.,   277.,   291.,   305.,   319.,   333.,   347.,   361.,   375.,   389.,     0.,     0.,     0.,     0.,   173.,   179.,   185.,   191.,   197.,   203.,   209.,   215.,   221.,   227.,   233.,   239.,   245.,   251.,   257.,   263.,   672.,   692.,   712.,   732.,   752.,   772.,   792.,   812.,   832.,   852.,   872.,   892.,   571.,   585.,   599.,   613.,   627.,   641.,   655.,   669.,   683.,   697.,   711.,   725.,   739.,   753.,   767.,   781.,     0.,     0.,     0.,     0.,   341.,   347.,   353.,   359.,   365.,   371.,   377.,   383.,   389.,   395.,   401.,   407.,   413.,   419.,   425.,   431.,  1232.,  1252.,  1272.,  1292.,  1312.,  1332.,  1352.,  1372.,  1392.,  1412.,  1432.,  1452.,   963.,   977.,   991.,  1005.,  1019.,  1033.,  1047.,  1061.,  1075.,  1089.,  1103.,  1117.,  1131.,  1145.,  1159.,  1173.,     0.,     0.,     0.,     0.,   509.,   515.,   521.,   527.,   533.,   539.,   545.,   551.,   557.,   563.,   569.,   575.,   581.,   587.,   593.,   599.,  1792.,  1812.,  1832.,  1852.,  1872.,  1892.,  1912.,  1932.,  1952.,  1972.,  1992.,  2012.,  1355.,  1369.,  1383.,  1397.,  1411.,  1425.,  1439.,  1453.,  1467.,  1481.,  1495.,  1509.,  1523.,  1537.,  1551.,  1565.,     0.,     0.,     0.,     0.,   694.,   722.,   750.,   778.,   806.,   834.,   862.,   890.,   918.,   946.,   974.,  1002.,  1030.,  1058.,  1086.,  1114.,  1976.,  2048.,  2120.,  2192.,  2264.,  2336.,  2408.,  2480.,  2552.,  2624.,  2696.,  2768.,  2130.,  2174.,  2218.,  2262.,   514.,   558.,   602.,   646.,   690.,   734.,   778.,   822.,   866.,   910.,   954.,   998.,     0.,     0.,     0.,     0.,   710.,   738.,   766.,   794.,   822.,   850.,   878.,   906.,   934.,   962.,   990.,  1018.,  1046.,  1074.,  1102.,  1130.,  2200.,  2272.,  2344.,  2416.,  2488.,  2560.,  2632.,  2704.,  2776.,  2848.,  2920.,  2992.,  1570.,  1614.,  1658.,  1702.,  1746.,  1790.,  1834.,  1878.,  1922.,  1966.,  2010.,  2054.,  2098.,  2142.,  2186.,  2230.,     0.,     0.,     0.,     0.,  1494.,  1522.,  1550.,  1578.,  1606.,  1634.,  1662.,  1690.,  1718.,  1746.,  1774.,  1802.,  1830.,  1858.,  1886.,  1914.,  4216.,  4288.,  4360.,  4432.,  4504.,  4576.,  4648.,  4720.,  4792.,  4864.,  4936.,  5008.,  2802.,  2846.,  2890.,  2934.,  2978.,  3022.,  3066.,  3110.,  3154.,  3198.,  3242.,  3286.,  3330.,  3374.,  3418.,  3462.,     0.,     0.,     0.,     0.,  1865.,  1887.,  1909.,  1931.,  1953.,  1975.,  1997.,  2019.,  2041.,  2063.,  2085.,  2107.,  2129.,  2151.,  2173.,  2195.,  4760.,  4812.,  4864.,  4916.,  4968.,  5020.,  5072.,  5124.,  5176.,  5228.,  5280.,  5332.,  2903.,  2933.,  2963.,  2993.,  3023.,  3053.,  3083.,  3113.,  3143.,  3173.,  3203.,  3233.,  3263.,  3293.,  3323.,  3353.,     0.,     0.,     0.,     0.,  2481.,  2503.,  2525.,  2547.,  2569.,  2591.,  2613.,  2635.,  2657.,  2679.,  2701.,  2723.,  2745.,  2767.,  2789.,  2811.,  3400.,  3452.,  3504.,  3556.,  3608.,  3660.,  3712.,  3764.,  3816.,  3868.,  3920.,  3972.,  3743.,  3773.,  3803.,  3833.,    23.,    53.,    83.,   113.,   143.,   173.,   203.,   233.,   263.,   293.,   323.,   353.,     0.,     0.,     0.,     0.,   281.,   303.,   325.,   347.,   369.,   391.,   413.,   435.,   457.,   479.,   501.,   523.,   545.,   567.,   589.,   611.,  1016.,  1068.,  1120.,  1172.,  1224.,  1276.,  1328.,  1380.,  1432.,  1484.,  1536.,  1588.,   743.,   773.,   803.,   833.,   863.,   893.,   923.,   953.,   983.,  1013.,  1043.,  1073.,  1103.,  1133.,  1163.,  1193.,     0.,     0.,     0.,     0.,   897.,   919.,   941.,   963.,   985.,  1007.,  1029.,  1051.,  1073.,  1095.,  1117.,  1139.,  1161.,  1183.,  1205.,  1227.,  2472.,  2524.,  2576.,  2628.,  2680.,  2732.,  2784.,  2836.,  2888.,  2940.,  2992.,  3044.,  1583.,  1613.,  1643.,  1673.,  1703.,  1733.,  1763.,  1793.,  1823.,  1853.,  1883.,  1913.,  1943.,  1973.,  2003.,  2033.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    29.,    67.,   105.,   143.,   181.,   219.,   257.,   295.,   333.,   371.,   409.,   447.,   485.,   523.,   561.,   599.,   672.,   756.,   840.,   924.,  1008.,  1092.,  1176.,  1260.,  1344.,  1428.,  1512.,  1596.,   587.,   633.,   679.,   725.,   771.,   817.,   863.,   909.,   955.,  1001.,  1047.,  1093.,  1139.,  1185.,  1231.,  1277.,     0.,     0.,     0.,     0.,  1093.,  1131.,  1169.,  1207.,  1245.,  1283.,  1321.,  1359.,  1397.,  1435.,  1473.,  1511.,  1549.,  1587.,  1625.,  1663.,  3024.,  3108.,  3192.,  3276.,  3360.,  3444.,  3528.,  3612.,  3696.,  3780.,  3864.,  3948.,  1875.,  1921.,  1967.,  2013.,  2059.,  2105.,  2151.,  2197.,  2243.,  2289.,  2335.,  2381.,  2427.,  2473.,  2519.,  2565.,     0.,     0.,     0.,     0.,  2157.,  2195.,  2233.,  2271.,  2309.,  2347.,  2385.,  2423.,  2461.,  2499.,  2537.,  2575.,  2613.,  2651.,  2689.,  2727.,  5376.,  5460.,  5544.,  5628.,  5712.,  5796.,  5880.,  5964.,  6048.,  6132.,  6216.,  6300.,  3163.,  3209.,  3255.,  3301.,  3347.,  3393.,  3439.,  3485.,  3531.,  3577.,  3623.,  3669.,  3715.,  3761.,  3807.,  3853.,     0.,     0.,     0.,     0.,  3221.,  3259.,  3297.,  3335.,  3373.,  3411.,  3449.,  3487.,  3525.,  3563.,  3601.,  3639.,  3677.,  3715.,  3753.,  3791.,  7728.,  7812.,  7896.,  7980.,  8064.,  8148.,  8232.,  8316.,  8400.,  8484.,  8568.,  8652.,  4451.,  4497.,  4543.,  4589.,  4635.,  4681.,  4727.,  4773.,  4819.,  4865.,  4911.,  4957.,  5003.,  5049.,  5095.,  5141.,     0.,     0.,     0.,     0.,  4326.,  4418.,  4510.,  4602.,  4694.,  4786.,  4878.,  4970.,  5062.,  5154.,  5246.,  5338.,  5430.,  5522.,  5614.,  5706.,  6168.,  6368.,  6568.,  6768.,  6968.,  7168.,  7368.,  7568.,  7768.,  7968.,  8168.,  8368.,  6530.,  6638.,  6746.,  6854.,  1074.,  1182.,  1290.,  1398.,  1506.,  1614.,  1722.,  1830.,  1938.,  2046.,  2154.,  2262.,     0.,     0.,     0.,     0.,  2038.,  2130.,  2222.,  2314.,  2406.,  2498.,  2590.,  2682.,  2774.,  2866.,  2958.,  3050.,  3142.,  3234.,  3326.,  3418.,  5880.,  6080.,  6280.,  6480.,  6680.,  6880.,  7080.,  7280.,  7480.,  7680.,  7880.,  8080.,  3666.,  3774.,  3882.,  3990.,  4098.,  4206.,  4314.,  4422.,  4530.,  4638.,  4746.,  4854.,  4962.,  5070.,  5178.,  5286.,     0.,     0.,     0.,     0.,  4614.,  4706.,  4798.,  4890.,  4982.,  5074.,  5166.,  5258.,  5350.,  5442.,  5534.,  5626.,  5718.,  5810.,  5902.,  5994., 11480., 11680., 11880., 12080., 12280., 12480., 12680., 12880., 13080., 13280., 13480., 13680.,  6690.,  6798.,  6906.,  7014.,  7122.,  7230.,  7338.,  7446.,  7554.,  7662.,  7770.,  7878.,  7986.,  8094.,  8202.,  8310.,     0.,     0.,     0.,     0.,  4577.,  4631.,  4685.,  4739.,  4793.,  4847.,  4901.,  4955.,  5009.,  5063.,  5117.,  5171.,  5225.,  5279.,  5333.,  5387., 10696., 10812., 10928., 11044., 11160., 11276., 11392., 11508., 11624., 11740., 11856., 11972.,  5999.,  6061.,  6123.,  6185.,  6247.,  6309.,  6371.,  6433.,  6495.,  6557.,  6619.,  6681.,  6743.,  6805.,  6867.,  6929.,     0.,     0.,     0.,     0.,  6089.,  6143.,  6197.,  6251.,  6305.,  6359.,  6413.,  6467.,  6521.,  6575.,  6629.,  6683.,  6737.,  6791.,  6845.,  6899.,  7032.,  7148.,  7264.,  7380.,  7496.,  7612.,  7728.,  7844.,  7960.,  8076.,  8192.,  8308.,  7735.,  7797.,  7859.,  7921.,    47.,   109.,   171.,   233.,   295.,   357.,   419.,   481.,   543.,   605.,   667.,   729.,     0.,     0.,     0.,     0.,   689.,   743.,   797.,   851.,   905.,   959.,  1013.,  1067.,  1121.,  1175.,  1229.,  1283.,  1337.,  1391.,  1445.,  1499.,  2344.,  2460.,  2576.,  2692.,  2808.,  2924.,  3040.,  3156.,  3272.,  3388.,  3504.,  3620.,  1535.,  1597.,  1659.,  1721.,  1783.,  1845.,  1907.,  1969.,  2031.,  2093.,  2155.,  2217.,  2279.,  2341.,  2403.,  2465.,     0.,     0.,     0.,     0.,  2201.,  2255.,  2309.,  2363.,  2417.,  2471.,  2525.,  2579.,  2633.,  2687.,  2741.,  2795.,  2849.,  2903.,  2957.,  3011.,  5592.,  5708.,  5824.,  5940.,  6056.,  6172.,  6288.,  6404.,  6520.,  6636.,  6752.,  6868.,  3271.,  3333.,  3395.,  3457.,  3519.,  3581.,  3643.,  3705.,  3767.,  3829.,  3891.,  3953.,  4015.,  4077.,  4139.,  4201.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    53.,   123.,   193.,   263.,   333.,   403.,   473.,   543.,   613.,   683.,   753.,   823.,   893.,   963.,  1033.,  1103.,  1232.,  1380.,  1528.,  1676.,  1824.,  1972.,  2120.,  2268.,  2416.,  2564.,  2712.,  2860.,   995.,  1073.,  1151.,  1229.,  1307.,  1385.,  1463.,  1541.,  1619.,  1697.,  1775.,  1853.,  1931.,  2009.,  2087.,  2165.,     0.,     0.,     0.,     0.,  2013.,  2083.,  2153.,  2223.,  2293.,  2363.,  2433.,  2503.,  2573.,  2643.,  2713.,  2783.,  2853.,  2923.,  2993.,  3063.,  5376.,  5524.,  5672.,  5820.,  5968.,  6116.,  6264.,  6412.,  6560.,  6708.,  6856.,  7004.,  3179.,  3257.,  3335.,  3413.,  3491.,  3569.,  3647.,  3725.,  3803.,  3881.,  3959.,  4037.,  4115.,  4193.,  4271.,  4349.,     0.,     0.,     0.,     0.,  3973.,  4043.,  4113.,  4183.,  4253.,  4323.,  4393.,  4463.,  4533.,  4603.,  4673.,  4743.,  4813.,  4883.,  4953.,  5023.,  9520.,  9668.,  9816.,  9964., 10112., 10260., 10408., 10556., 10704., 10852., 11000., 11148.,  5363.,  5441.,  5519.,  5597.,  5675.,  5753.,  5831.,  5909.,  5987.,  6065.,  6143.,  6221.,  6299.,  6377.,  6455.,  6533.,     0.,     0.,     0.,     0.,  5933.,  6003.,  6073.,  6143.,  6213.,  6283.,  6353.,  6423.,  6493.,  6563.,  6633.,  6703.,  6773.,  6843.,  6913.,  6983., 13664., 13812., 13960., 14108., 14256., 14404., 14552., 14700., 14848., 14996., 15144., 15292.,  7547.,  7625.,  7703.,  7781.,  7859.,  7937.,  8015.,  8093.,  8171.,  8249.,  8327.,  8405.,  8483.,  8561.,  8639.,  8717.,     0.,     0.,     0.,     0.,  7958.,  8114.,  8270.,  8426.,  8582.,  8738.,  8894.,  9050.,  9206.,  9362.,  9518.,  9674.,  9830.,  9986., 10142., 10298., 10360., 10688., 11016., 11344., 11672., 12000., 12328., 12656., 12984., 13312., 13640., 13968., 10930., 11102., 11274., 11446.,  1634.,  1806.,  1978.,  2150.,  2322.,  2494.,  2666.,  2838.,  3010.,  3182.,  3354.,  3526.,     0.,     0.,     0.,     0.,  3366.,  3522.,  3678.,  3834.,  3990.,  4146.,  4302.,  4458.,  4614.,  4770.,  4926.,  5082.,  5238.,  5394.,  5550.,  5706.,  9560.,  9888., 10216., 10544., 10872., 11200., 11528., 11856., 12184., 12512., 12840., 13168.,  5762.,  5934.,  6106.,  6278.,  6450.,  6622.,  6794.,  6966.,  7138.,  7310.,  7482.,  7654.,  7826.,  7998.,  8170.,  8342.,     0.,     0.,     0.,     0.,  7734.,  7890.,  8046.,  8202.,  8358.,  8514.,  8670.,  8826.,  8982.,  9138.,  9294.,  9450.,  9606.,  9762.,  9918., 10074., 18744., 19072., 19400., 19728., 20056., 20384., 20712., 21040., 21368., 21696., 22024., 22352., 10578., 10750., 10922., 11094., 11266., 11438., 11610., 11782., 11954., 12126., 12298., 12470., 12642., 12814., 12986., 13158.,     0.,     0.,     0.,     0.,  7289.,  7375.,  7461.,  7547.,  7633.,  7719.,  7805.,  7891.,  7977.,  8063.,  8149.,  8235.,  8321.,  8407.,  8493.,  8579., 16632., 16812., 16992., 17172., 17352., 17532., 17712., 17892., 18072., 18252., 18432., 18612.,  9095.,  9189.,  9283.,  9377.,  9471.,  9565.,  9659.,  9753.,  9847.,  9941., 10035., 10129., 10223., 10317., 10411., 10505.,     0.,     0.,     0.,     0.,  9697.,  9783.,  9869.,  9955., 10041., 10127., 10213., 10299., 10385., 10471., 10557., 10643., 10729., 10815., 10901., 10987., 10664., 10844., 11024., 11204., 11384., 11564., 11744., 11924., 12104., 12284., 12464., 12644., 11727., 11821., 11915., 12009.,    71.,   165.,   259.,   353.,   447.,   541.,   635.,   729.,   823.,   917.,  1011.,  1105.,     0.,     0.,     0.,     0.,  1097.,  1183.,  1269.,  1355.,  1441.,  1527.,  1613.,  1699.,  1785.,  1871.,  1957.,  2043.,  2129.,  2215.,  2301.,  2387.,  3672.,  3852.,  4032.,  4212.,  4392.,  4572.,  4752.,  4932.,  5112.,  5292.,  5472.,  5652.,  2327.,  2421.,  2515.,  2609.,  2703.,  2797.,  2891.,  2985.,  3079.,  3173.,  3267.,  3361.,  3455.,  3549.,  3643.,  3737.,     0.,     0.,     0.,     0.,  3505.,  3591.,  3677.,  3763.,  3849.,  3935.,  4021.,  4107.,  4193.,  4279.,  4365.,  4451.,  4537.,  4623.,  4709.,  4795.,  8712.,  8892.,  9072.,  9252.,  9432.,  9612.,  9792.,  9972., 10152., 10332., 10512., 10692.,  4959.,  5053.,  5147.,  5241.,  5335.,  5429.,  5523.,  5617.,  5711.,  5805.,  5899.,  5993.,  6087.,  6181.,  6275.,  6369.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x12x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   500.,  1284.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   420.,  1076.,  1732.,  2388.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  2390.,  2750.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   180.,   452.,   724.,   996.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   420.,  1076.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   260.,   660.,  1060.,  1460.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   440.,  1112.,  1784.,  2456.,  3128.,  3800.,  4472.,  5144.,   440.,  1112.,  1784.,  2456.,  1860.,  2260.,  2660.,  3060.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   500.,  1284.,  2068.,  2852.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   920.,  2360.,  3800.,  5240.,  6680.,  8120.,  9560., 11000.,   920.,  2360.,  3800.,  5240.,  3636.,  4420.,  5204.,  5988.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   420.,  1076.,  1732.,  2388.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,  2452.,  2980.,  3508.,  4036.,   340.,   868.,  1396.,  1924.,  2452.,  2980.,  3508.,  4036.,   760.,  1944.,  3128.,  4312.,  5496.,  6680.,  7864.,  9048.,   760.,  1944.,  3128.,  4312.,  3044.,  3700.,  4356.,  5012.,   600.,  1528.,  2456.,  3384.,  4312.,  5240.,  6168.,  7096.,   600.,  1528.,  2456.,  3384.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x12x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,     0.,     0.,     0.,     0.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,     0.,     0.,     0.,     0.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,     0.,     0.,     0.,     0.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,     0.,     0.,     0.,     0.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,     0.,     0.,     0.,     0.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,     0.,     0.,     0.,     0.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,     0.,     0.,     0.,     0.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,     0.,     0.,     0.,     0.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,     0.,     0.,     0.,     0.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,     0.,     0.,     0.,     0.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,     0.,     0.,     0.,     0.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,     0.,     0.,     0.,     0.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,     0.,     0.,     0.,     0.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,     0.,     0.,     0.,     0.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,     0.,     0.,     0.,     0.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,     0.,     0.,     0.,     0.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,     0.,     0.,     0.,     0.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 12, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x14x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  17.,   18.,   49.,   52.,   55.,   36.,   83.,   88.,   93.,   54.,  117.,  124.,  131.,   72.,   24.,   25.,   70.,   73.,   76.,   50.,  118.,  123.,  128.,   75.,  166.,  173.,  180.,  100.,   46.,   52.,  122.,  136.,  150.,   88.,  190.,  208.,  226.,  124.,  258.,  280.,  302.,  160.,   88.,   94.,  220.,  234.,  248.,  144.,  316.,  334.,  352.,  194.,  412.,  434.,  456.,  244.,  130.,  136.,  318.,  332.,  346.,  200.,  442.,  460.,  478.,  264.,  566.,  588.,  610.,  328.,  120.,  125.,  262.,  273.,  284.,  150.,  310.,  323.,  336.,  175.,  358.,  373.,  388.,  200.,  182.,  196.,  394.,  424.,  454.,  232.,  462.,  496.,  530.,  268.,  530.,  568.,  606.,  304.,  280.,  294.,  604.,  634.,  664.,  344.,  700.,  734.,  768.,  394.,  796.,  834.,  872.,  444.,  378.,  392.,  814.,  844.,  874.,  456.,  938.,  972., 1006.,  520., 1062., 1100., 1138.,  584.,  216.,  225.,  454.,  473.,  492.,  250.,  502.,  523.,  544.,  275.,  550.,  573.,  596.,  300.,  318.,  340.,  666.,  712.,  758.,  376.,  734.,  784.,  834.,  412.,  802.,  856.,  910.,  448.,  472.,  494.,  988., 1034., 1080.,  544., 1084., 1134., 1184.,  594., 1180., 1234., 1288.,  644.,  626.,  648., 1310., 1356., 1402.,  712., 1434., 1484., 1534.,  776., 1558., 1612., 1666.,  840.,  312.,  325.,  646.,  673.,  700.,  350.,  694.,  723.,  752.,  375.,  742.,  773.,  804.,  400.,  289.,  306.,  593.,  628.,  663.,  324.,  627.,  664.,  701.,  342.,  661.,  700.,  739.,  360.,  408.,  425.,  838.,  873.,  908.,  450.,  886.,  923.,  960.,  475.,  934.,  973., 1012.,  500.,  590.,  628., 1210., 1288., 1366.,  664., 1278., 1360., 1442.,  700., 1346., 1432., 1518.,  736.,  856.,  894., 1756., 1834., 1912.,  944., 1852., 1934., 2016.,  994., 1948., 2034., 2120., 1044., 1122., 1160., 2302., 2380., 2458., 1224., 2426., 2508., 2590., 1288., 2550., 2636., 2722., 1352.,  504.,  525., 1030., 1073., 1116.,  550., 1078., 1123., 1168.,  575., 1126., 1173., 1220.,  600.,  726.,  772., 1482., 1576., 1670.,  808., 1550., 1648., 1746.,  844., 1618., 1720., 1822.,  880., 1048., 1094., 2140., 2234., 2328., 1144., 2236., 2334., 2432., 1194., 2332., 2434., 2536., 1244., 1370., 1416., 2798., 2892., 2986., 1480., 2922., 3020., 3118., 1544., 3046., 3148., 3250., 1608.,  600.,  625., 1222., 1273., 1324.,  650., 1270., 1323., 1376.,  675., 1318., 1373., 1428.,  700.,  862.,  916., 1754., 1864., 1974.,  952., 1822., 1936., 2050.,  988., 1890., 2008., 2126., 1024., 1240., 1294., 2524., 2634., 2744., 1344., 2620., 2734., 2848., 1394., 2716., 2834., 2952., 1444., 1618., 1672., 3294., 3404., 3514., 1736., 3418., 3532., 3646., 1800., 3542., 3660., 3778., 1864.,  696.,  725., 1414., 1473., 1532.,  750., 1462., 1523., 1584.,  775., 1510., 1573., 1636.,  800.,  561.,  594., 1137., 1204., 1271.,  612., 1171., 1240., 1309.,  630., 1205., 1276., 1347.,  648.,  792.,  825., 1606., 1673., 1740.,  850., 1654., 1723., 1792.,  875., 1702., 1773., 1844.,  900., 1134., 1204., 2298., 2440., 2582., 1240., 2366., 2512., 2658., 1276., 2434., 2584., 2734., 1312., 1624., 1694., 3292., 3434., 3576., 1744., 3388., 3534., 3680., 1794., 3484., 3634., 3784., 1844., 2114., 2184., 4286., 4428., 4570., 2248., 4410., 4556., 4702., 2312., 4534., 4684., 4834., 2376.,  888.,  925., 1798., 1873., 1948.,  950., 1846., 1923., 2000.,  975., 1894., 1973., 2052., 1000., 1270., 1348., 2570., 2728., 2886., 1384., 2638., 2800., 2962., 1420., 2706., 2872., 3038., 1456., 1816., 1894., 3676., 3834., 3992., 1944., 3772., 3934., 4096., 1994., 3868., 4034., 4200., 2044., 2362., 2440., 4782., 4940., 5098., 2504., 4906., 5068., 5230., 2568., 5030., 5196., 5362., 2632.,  984., 1025., 1990., 2073., 2156., 1050., 2038., 2123., 2208., 1075., 2086., 2173., 2260., 1100., 1406., 1492., 2842., 3016., 3190., 1528., 2910., 3088., 3266., 1564., 2978., 3160., 3342., 1600., 2008., 2094., 4060., 4234., 4408., 2144., 4156., 4334., 4512., 2194., 4252., 4434., 4616., 2244., 2610., 2696., 5278., 5452., 5626., 2760., 5402., 5580., 5758., 2824., 5526., 5708., 5890., 2888., 1080., 1125., 2182., 2273., 2364., 1150., 2230., 2323., 2416., 1175., 2278., 2373., 2468., 1200.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x14x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    7.,   10.,   13.,    8.,   10.,   12.,   14.,    0.,    0.,    0.,    8.,    9.,   10.,   11.,   28.,   31.,   34.,   22.,   24.,   26.,   28.,    0.,    0.,    0.,   15.,   16.,   17.,   18.,   49.,   52.,   55.,   36.,   38.,   40.,   42.,    0.,    0.,    0.,   22.,   23.,   24.,   25.,   70.,   73.,   76.,   50.,   52.,   54.,   56.,    0.,    0.,    0.,   32.,   36.,   40.,   44.,  110.,  120.,  130.,   80.,   86.,   92.,   98.,    0.,    0.,    0.,   60.,   64.,   68.,   72.,  180.,  190.,  200.,  122.,  128.,  134.,  140.,    0.,    0.,    0.,   88.,   92.,   96.,  100.,  250.,  260.,  270.,  164.,  170.,  176.,  182.,    0.,    0.,    0.,   66.,   69.,   72.,   75.,  166.,  173.,  180.,  100.,  104.,  108.,  112.,    0.,    0.,    0.,   87.,   90.,   93.,   96.,  215.,  222.,  229.,  128.,  132.,  136.,  140.,    0.,    0.,    0.,  108.,  111.,  114.,  117.,  264.,  271.,  278.,  156.,  160.,  164.,  168.,    0.,    0.,    0.,  129.,  132.,  135.,  138.,  313.,  320.,  327.,  184.,  188.,  192.,  196.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    5.,   10.,   15.,   20.,   31.,   42.,   53.,   24.,   30.,   36.,   42.,    0.,    0.,    0.,   40.,   45.,   50.,   55.,  108.,  119.,  130.,   66.,   72.,   78.,   84.,    0.,    0.,    0.,   75.,   80.,   85.,   90.,  185.,  196.,  207.,  108.,  114.,  120.,  126.,    0.,    0.,    0.,  110.,  115.,  120.,  125.,  262.,  273.,  284.,  150.,  156.,  162.,  168.,    0.,    0.,    0.,  152.,  164.,  176.,  188.,  382.,  408.,  434.,  224.,  238.,  252.,  266.,    0.,    0.,    0.,  236.,  248.,  260.,  272.,  564.,  590.,  616.,  322.,  336.,  350.,  364.,    0.,    0.,    0.,  320.,  332.,  344.,  356.,  746.,  772.,  798.,  420.,  434.,  448.,  462.,    0.,    0.,    0.,  154.,  161.,  168.,  175.,  358.,  373.,  388.,  200.,  208.,  216.,  224.,    0.,    0.,    0.,  203.,  210.,  217.,  224.,  463.,  478.,  493.,  256.,  264.,  272.,  280.,    0.,    0.,    0.,  252.,  259.,  266.,  273.,  568.,  583.,  598.,  312.,  320.,  328.,  336.,    0.,    0.,    0.,  301.,  308.,  315.,  322.,  673.,  688.,  703.,  368.,  376.,  384.,  392.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    9.,   18.,   27.,   36.,   55.,   74.,   93.,   40.,   50.,   60.,   70.,    0.,    0.,    0.,   72.,   81.,   90.,   99.,  188.,  207.,  226.,  110.,  120.,  130.,  140.,    0.,    0.,    0.,  135.,  144.,  153.,  162.,  321.,  340.,  359.,  180.,  190.,  200.,  210.,    0.,    0.,    0.,  198.,  207.,  216.,  225.,  454.,  473.,  492.,  250.,  260.,  270.,  280.,    0.,    0.,    0.,  272.,  292.,  312.,  332.,  654.,  696.,  738.,  368.,  390.,  412.,  434.,    0.,    0.,    0.,  412.,  432.,  452.,  472.,  948.,  990., 1032.,  522.,  544.,  566.,  588.,    0.,    0.,    0.,  552.,  572.,  592.,  612., 1242., 1284., 1326.,  676.,  698.,  720.,  742.,    0.,    0.,    0.,  242.,  253.,  264.,  275.,  550.,  573.,  596.,  300.,  312.,  324.,  336.,    0.,    0.,    0.,  319.,  330.,  341.,  352.,  711.,  734.,  757.,  384.,  396.,  408.,  420.,    0.,    0.,    0.,  396.,  407.,  418.,  429.,  872.,  895.,  918.,  468.,  480.,  492.,  504.,    0.,    0.,    0.,  473.,  484.,  495.,  506., 1033., 1056., 1079.,  552.,  564.,  576.,  588.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 1 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x14x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  101.,   107.,   320.,   340.,   360.,   249.,   588.,   624.,   660.,   391.,   856.,   908.,   960.,   533.,   143.,   149.,   460.,   480.,   500.,   347.,   840.,   876.,   912.,   545.,  1220.,  1272.,  1324.,   743.,   290.,   334.,   624.,   728.,   832.,   618.,   904.,  1040.,  1176.,   902.,  1184.,  1352.,  1520.,  1186.,   406.,   450.,   904.,  1008.,  1112.,   590.,  1152.,  1288.,  1424.,   730.,  1400.,  1568.,  1736.,   870.,   714.,   758.,  1632.,  1736.,  1840.,  1010.,  2104.,  2240.,  2376.,  1262.,  2576.,  2744.,  2912.,  1514.,   903.,   941.,  1980.,  2064.,  2148.,  1139.,  2360.,  2460.,  2560.,  1337.,  2740.,  2856.,  2972.,  1535.,  1362.,  1470.,  1744.,  1976.,  2208.,  1754.,  2024.,  2288.,  2552.,  2038.,  2304.,  2600.,  2896.,  2322.,   902.,  1010.,  1896.,  2128.,  2360.,  1150.,  2144.,  2408.,  2672.,  1290.,  2392.,  2688.,  2984.,  1430.,  1658.,  1766.,  3520.,  3752.,  3984.,  2018.,  3992.,  4256.,  4520.,  2270.,  4464.,  4760.,  5056.,  2522.,  1663.,  1733.,  3500.,  3648.,  3796.,  1931.,  3880.,  4044.,  4208.,  2129.,  4260.,  4440.,  4620.,  2327.,  2434.,  2606.,  2864.,  3224.,  3584.,  2890.,  3144.,  3536.,  3928.,  3174.,  3424.,  3848.,  4272.,  3458.,  1398.,  1570.,  2888.,  3248.,  3608.,  1710.,  3136.,  3528.,  3920.,  1850.,  3384.,  3808.,  4232.,  1990.,  2602.,  2774.,  5408.,  5768.,  6128.,  3026.,  5880.,  6272.,  6664.,  3278.,  6352.,  6776.,  7200.,  3530.,  2423.,  2525.,  5020.,  5232.,  5444.,  2723.,  5400.,  5628.,  5856.,  2921.,  5780.,  6024.,  6268.,  3119.,  2245.,  2379.,  4608.,  4884.,  5160.,  2521.,  4876.,  5168.,  5460.,  2663.,  5144.,  5452.,  5760.,  2805.,  3183.,  3317.,  6540.,  6816.,  7092.,  3515.,  6920.,  7212.,  7504.,  3713.,  7300.,  7608.,  7916.,  3911.,  4578.,  4878.,  5104.,  5720.,  6336.,  5162.,  5384.,  6032.,  6680.,  5446.,  5664.,  6344.,  7024.,  5730.,  2390.,  2690.,  4872.,  5488.,  6104.,  2830.,  5120.,  5768.,  6416.,  2970.,  5368.,  6048.,  6728.,  3110.,  4490.,  4790.,  9184.,  9800., 10416.,  5042.,  9656., 10304., 10952.,  5294., 10128., 10808., 11488.,  5546.,  3943.,  4109.,  8060.,  8400.,  8740.,  4307.,  8440.,  8796.,  9152.,  4505.,  8820.,  9192.,  9564.,  4703.,  5650.,  6014.,  6224.,  6968.,  7712.,  6298.,  6504.,  7280.,  8056.,  6582.,  6784.,  7592.,  8400.,  6866.,  2886.,  3250.,  5864.,  6608.,  7352.,  3390.,  6112.,  6888.,  7664.,  3530.,  6360.,  7168.,  7976.,  3670.,  5434.,  5798., 11072., 11816., 12560.,  6050., 11544., 12320., 13096.,  6302., 12016., 12824., 13632.,  6554.,  4703.,  4901.,  9580.,  9984., 10388.,  5099.,  9960., 10380., 10800.,  5297., 10340., 10776., 11212.,  5495.,  6722.,  7150.,  7344.,  8216.,  9088.,  7434.,  7624.,  8528.,  9432.,  7718.,  7904.,  8840.,  9776.,  8002.,  3382.,  3810.,  6856.,  7728.,  8600.,  3950.,  7104.,  8008.,  8912.,  4090.,  7352.,  8288.,  9224.,  4230.,  6378.,  6806., 12960., 13832., 14704.,  7058., 13432., 14336., 15240.,  7310., 13904., 14840., 15776.,  7562.,  5463.,  5693., 11100., 11568., 12036.,  5891., 11480., 11964., 12448.,  6089., 11860., 12360., 12860.,  6287.,   101.,   107.,   320.,   340.,   360.,   249.,   588.,   624.,   660.,   391.,   856.,   908.,   960.,   533.,   143.,   149.,   460.,   480.,   500.,   347.,   840.,   876.,   912.,   545.,  1220.,  1272.,  1324.,   743.,   290.,   334.,   624.,   728.,   832.,   618.,   904.,  1040.,  1176.,   902.,  1184.,  1352.,  1520.,  1186.,   406.,   450.,   904.,  1008.,  1112.,   590.,  1152.,  1288.,  1424.,   730.,  1400.,  1568.,  1736.,   870.,   714.,   758.,  1632.,  1736.,  1840.,  1010.,  2104.,  2240.,  2376.,  1262.,  2576.,  2744.,  2912.,  1514.,   903.,   941.,  1980.,  2064.,  2148.,  1139.,  2360.,  2460.,  2560.,  1337.,  2740.,  2856.,  2972.,  1535.,  1362.,  1470.,  1744.,  1976.,  2208.,  1754.,  2024.,  2288.,  2552.,  2038.,  2304.,  2600.,  2896.,  2322.,   902.,  1010.,  1896.,  2128.,  2360.,  1150.,  2144.,  2408.,  2672.,  1290.,  2392.,  2688.,  2984.,  1430.,  1658.,  1766.,  3520.,  3752.,  3984.,  2018.,  3992.,  4256.,  4520.,  2270.,  4464.,  4760.,  5056.,  2522.,  1663.,  1733.,  3500.,  3648.,  3796.,  1931.,  3880.,  4044.,  4208.,  2129.,  4260.,  4440.,  4620.,  2327.,  2434.,  2606.,  2864.,  3224.,  3584.,  2890.,  3144.,  3536.,  3928.,  3174.,  3424.,  3848.,  4272.,  3458.,  1398.,  1570.,  2888.,  3248.,  3608.,  1710.,  3136.,  3528.,  3920.,  1850.,  3384.,  3808.,  4232.,  1990.,  2602.,  2774.,  5408.,  5768.,  6128.,  3026.,  5880.,  6272.,  6664.,  3278.,  6352.,  6776.,  7200.,  3530.,  2423.,  2525.,  5020.,  5232.,  5444.,  2723.,  5400.,  5628.,  5856.,  2921.,  5780.,  6024.,  6268.,  3119.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x14x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    40.,    60.,    80.,    53.,    67.,    81.,    95.,     0.,     0.,     0.,    47.,    53.,    59.,    65.,   180.,   200.,   220.,   151.,   165.,   179.,   193.,     0.,     0.,     0.,    89.,    95.,   101.,   107.,   320.,   340.,   360.,   249.,   263.,   277.,   291.,     0.,     0.,     0.,   131.,   137.,   143.,   149.,   460.,   480.,   500.,   347.,   361.,   375.,   389.,     0.,     0.,     0.,   190.,   218.,   246.,   274.,   728.,   800.,   872.,   558.,   602.,   646.,   690.,     0.,     0.,     0.,   386.,   414.,   442.,   470.,  1232.,  1304.,  1376.,   866.,   910.,   954.,   998.,     0.,     0.,     0.,   582.,   610.,   638.,   666.,  1736.,  1808.,  1880.,  1174.,  1218.,  1262.,  1306.,     0.,     0.,     0.,   479.,   501.,   523.,   545.,  1220.,  1272.,  1324.,   743.,   773.,   803.,   833.,     0.,     0.,     0.,   633.,   655.,   677.,   699.,  1584.,  1636.,  1688.,   953.,   983.,  1013.,  1043.,     0.,     0.,     0.,   787.,   809.,   831.,   853.,  1948.,  2000.,  2052.,  1163.,  1193.,  1223.,  1253.,     0.,     0.,     0.,   941.,   963.,   985.,  1007.,  2312.,  2364.,  2416.,  1373.,  1403.,  1433.,  1463.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    29.,    67.,   105.,   143.,   216.,   300.,   384.,   173.,   219.,   265.,   311.,     0.,     0.,     0.,   295.,   333.,   371.,   409.,   804.,   888.,   972.,   495.,   541.,   587.,   633.,     0.,     0.,     0.,   561.,   599.,   637.,   675.,  1392.,  1476.,  1560.,   817.,   863.,   909.,   955.,     0.,     0.,     0.,   827.,   865.,   903.,   941.,  1980.,  2064.,  2148.,  1139.,  1185.,  1231.,  1277.,     0.,     0.,     0.,  1134.,  1226.,  1318.,  1410.,  2872.,  3072.,  3272.,  1694.,  1802.,  1910.,  2018.,     0.,     0.,     0.,  1778.,  1870.,  1962.,  2054.,  4272.,  4472.,  4672.,  2450.,  2558.,  2666.,  2774.,     0.,     0.,     0.,  2422.,  2514.,  2606.,  2698.,  5672.,  5872.,  6072.,  3206.,  3314.,  3422.,  3530.,     0.,     0.,     0.,  1175.,  1229.,  1283.,  1337.,  2740.,  2856.,  2972.,  1535.,  1597.,  1659.,  1721.,     0.,     0.,     0.,  1553.,  1607.,  1661.,  1715.,  3552.,  3668.,  3784.,  1969.,  2031.,  2093.,  2155.,     0.,     0.,     0.,  1931.,  1985.,  2039.,  2093.,  4364.,  4480.,  4596.,  2403.,  2465.,  2527.,  2589.,     0.,     0.,     0.,  2309.,  2363.,  2417.,  2471.,  5176.,  5292.,  5408.,  2837.,  2899.,  2961.,  3023.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    53.,   123.,   193.,   263.,   392.,   540.,   688.,   293.,   371.,   449.,   527.,     0.,     0.,     0.,   543.,   613.,   683.,   753.,  1428.,  1576.,  1724.,   839.,   917.,   995.,  1073.,     0.,     0.,     0.,  1033.,  1103.,  1173.,  1243.,  2464.,  2612.,  2760.,  1385.,  1463.,  1541.,  1619.,     0.,     0.,     0.,  1523.,  1593.,  1663.,  1733.,  3500.,  3648.,  3796.,  1931.,  2009.,  2087.,  2165.,     0.,     0.,     0.,  2078.,  2234.,  2390.,  2546.,  5016.,  5344.,  5672.,  2830.,  3002.,  3174.,  3346.,     0.,     0.,     0.,  3170.,  3326.,  3482.,  3638.,  7312.,  7640.,  7968.,  4034.,  4206.,  4378.,  4550.,     0.,     0.,     0.,  4262.,  4418.,  4574.,  4730.,  9608.,  9936., 10264.,  5238.,  5410.,  5582.,  5754.,     0.,     0.,     0.,  1871.,  1957.,  2043.,  2129.,  4260.,  4440.,  4620.,  2327.,  2421.,  2515.,  2609.,     0.,     0.,     0.,  2473.,  2559.,  2645.,  2731.,  5520.,  5700.,  5880.,  2985.,  3079.,  3173.,  3267.,     0.,     0.,     0.,  3075.,  3161.,  3247.,  3333.,  6780.,  6960.,  7140.,  3643.,  3737.,  3831.,  3925.,     0.,     0.,     0.,  3677.,  3763.,  3849.,  3935.,  8040.,  8220.,  8400.,  4301.,  4395.,  4489.,  4583.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 1 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x14x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {  30.,   70.,  804.,  948.,  260.,  174., 1396., 1668.,  596.,  278., 1988., 2388.,  932.,  382.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150., 1052., 1388., 2120., 2920., 3720., 2108., 2792., 3848., 4904., 2828., 3464., 4776., 6088., 3548.,  716., 1052., 4520., 2120., 2920., 1644., 5960., 2792., 3848., 2236., 7400., 3464., 4776., 2828.,  380.,  716., 3720., 4520., 2120., 1180., 4904., 5960., 2792., 1644., 6088., 7400., 3464., 2108., 2262.,  190., 2516., 3172., 3828.,  230., 2980., 3764., 4548.,  270., 3444., 4356., 5268.,  310., 2076., 2412., 2120., 2920., 3720., 3132., 2792., 3848., 4904., 3852., 3464., 4776., 6088., 4572., 1740., 2076., 4520., 2120., 2920., 2668., 5960., 2792., 3848., 3260., 7400., 3464., 4776., 3852., 1404., 1740., 3720., 4520., 2120., 2204., 4904., 5960., 2792., 2668., 6088., 7400., 3464., 3132.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150., 1052., 1388., 2120., 2920., 3720., 2108., 2792., 3848., 4904., 2828., 3464., 4776., 6088., 3548.,  716., 1052., 4520., 2120., 2920., 1644., 5960., 2792., 3848., 2236., 7400., 3464., 4776., 2828.,  380.,  716., 3720., 4520., 2120., 1180., 4904., 5960., 2792., 1644., 6088., 7400., 3464., 2108., 2262.,  190., 2516., 3172., 3828.,  230., 2980., 3764., 4548.,  270., 3444., 4356., 5268.,  310.,   30.,   70.,  804.,  948.,  260.,  174., 1396., 1668.,  596.,  278., 1988., 2388.,  932.,  382.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150., 1052., 1388., 2120., 2920., 3720., 2108., 2792., 3848., 4904., 2828., 3464., 4776., 6088., 3548.,  716., 1052., 4520., 2120., 2920., 1644., 5960., 2792., 3848., 2236., 7400., 3464., 4776., 2828.,  380.,  716., 3720., 4520., 2120., 1180., 4904., 5960., 2792., 1644., 6088., 7400., 3464., 2108., 2262.,  190., 2516., 3172., 3828.,  230., 2980., 3764., 4548.,  270., 3444., 4356., 5268.,  310., 2076., 2412., 2120., 2920., 3720., 3132., 2792., 3848., 4904., 3852., 3464., 4776., 6088., 4572., 1740., 2076., 4520., 2120., 2920., 2668., 5960., 2792., 3848., 3260., 7400., 3464., 4776., 3852., 1404., 1740., 3720., 4520., 2120., 2204., 4904., 5960., 2792., 2668., 6088., 7400., 3464., 3132.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150., 1052., 1388., 2120., 2920., 3720., 2108., 2792., 3848., 4904., 2828., 3464., 4776., 6088., 3548.,  716., 1052., 4520., 2120., 2920., 1644., 5960., 2792., 3848., 2236., 7400., 3464., 4776., 2828.,  380.,  716., 3720., 4520., 2120., 1180., 4904., 5960., 2792., 1644., 6088., 7400., 3464., 2108., 2262.,  190., 2516., 3172., 3828.,  230., 2980., 3764., 4548.,  270., 3444., 4356., 5268.,  310.,   30.,   70.,  804.,  948.,  260.,  174., 1396., 1668.,  596.,  278., 1988., 2388.,  932.,  382.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150., 1052., 1388., 2120., 2920., 3720., 2108., 2792., 3848., 4904., 2828., 3464., 4776., 6088., 3548.,  716., 1052., 4520., 2120., 2920., 1644., 5960., 2792., 3848., 2236., 7400., 3464., 4776., 2828.,  380.,  716., 3720., 4520., 2120., 1180., 4904., 5960., 2792., 1644., 6088., 7400., 3464., 2108., 2262.,  190., 2516., 3172., 3828.,  230., 2980., 3764., 4548.,  270., 3444., 4356., 5268.,  310., 2076., 2412., 2120., 2920., 3720., 3132., 2792., 3848., 4904., 3852., 3464., 4776., 6088., 4572., 1740., 2076., 4520., 2120., 2920., 2668., 5960., 2792., 3848., 3260., 7400., 3464., 4776., 3852., 1404., 1740., 3720., 4520., 2120., 2204., 4904., 5960., 2792., 2668., 6088., 7400., 3464., 3132.,  310.,   30.,  660.,  804.,  948.,   70., 1124., 1396., 1668.,  110., 1588., 1988., 2388.,  150., 1052., 1388., 2120., 2920., 3720., 2108., 2792., 3848., 4904., 2828., 3464., 4776., 6088., 3548.,  716., 1052., 4520., 2120., 2920., 1644., 5960., 2792., 3848., 2236., 7400., 3464., 4776., 2828.,  380.,  716., 3720., 4520., 2120., 1180., 4904., 5960., 2792., 1644., 6088., 7400., 3464., 2108., 2262.,  190., 2516., 3172., 3828.,  230., 2980., 3764., 4548.,  270., 3444., 4356., 5268.,  310.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x14x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   260.,   404.,   548.,   382.,   486.,   590.,   694.,     0.,     0.,     0.,   310.,   350.,   390.,   430.,  1268.,  1412.,  1556.,  1110.,  1214.,  1318.,  1422.,     0.,     0.,     0.,   590.,   630.,    30.,    70.,  1636.,  1780.,   260.,   174.,   278.,   382.,   486.,     0.,     0.,     0.,   230.,   270.,   310.,   350.,   980.,  1124.,  1268.,   902.,  1006.,  1110.,  1214.,     0.,     0.,     0.,   620.,   828.,  1036.,  1244.,  2280.,  2824.,  3368.,  2476.,  1148.,  1484.,  1820.,     0.,     0.,     0.,  1436.,  1644.,  1852.,  2060.,  4424.,  4968.,  5512.,  3164.,  3500.,  3836.,  4172.,     0.,     0.,     0.,  2892.,  3100.,   620.,   828.,  5544.,  6088.,  2280.,  1804.,  2140.,  2476.,  1148.,     0.,     0.,     0.,   950.,  1118.,  1286.,  1454.,  2932.,  3332.,  3732.,  2006.,  2238.,  2470.,  2702.,     0.,     0.,     0.,  2126.,  2294.,  2462.,  2630.,  3044.,  3444.,  3844.,  3630.,   150.,   382.,   614.,     0.,     0.,     0.,   614.,   782.,   950.,  1118.,  2132.,  2532.,  2932.,  1542.,  1774.,  2006.,  2238.,     0.,     0.,     0.,  1790.,  1958.,  2126.,  2294.,  4932.,  5332.,  3044.,  3166.,  3398.,  3630.,   150.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1604.,  2260.,  2916.,  1310.,  1670.,  2030.,  2390.,     0.,     0.,     0.,  2262.,  2558.,  2854.,  3150.,  6196.,  6852.,  7508.,  3830.,  4190.,  4550.,  4910.,     0.,     0.,     0.,  4334.,  4630.,   190.,   486.,  6052.,  6708.,  1604.,   590.,   950.,  1310.,  1670.,     0.,     0.,     0.,  1670.,  1966.,  2262.,  2558.,  4884.,  5540.,  6196.,  3110.,  3470.,  3830.,  4190.,     0.,     0.,     0.,  4012.,  4732.,  5452.,  6172.,  7016.,  8584., 10152.,  7404.,  2492.,  3340.,  4188.,     0.,     0.,     0.,  4316.,  5036.,  5756.,  6476., 12232., 13800., 15368.,  7580.,  8428.,  9276., 10124.,     0.,     0.,     0.,  9356., 10076.,  4012.,  4732., 16424., 17992.,  7016.,  5708.,  6556.,  7404.,  2492.,     0.,     0.,     0.,  2390.,  2814.,  3238.,  3662.,  6836.,  7748.,  8660.,  4214.,  4702.,  5190.,  5678.,     0.,     0.,     0.,  5358.,  5782.,  6206.,  6630.,  6436.,  7348.,  8260.,  7630.,   310.,   798.,  1286.,     0.,     0.,     0.,  1542.,  1966.,  2390.,  2814.,  5012.,  5924.,  6836.,  3238.,  3726.,  4214.,  4702.,     0.,     0.,     0.,  4510.,  4934.,  5358.,  5782., 11396., 12308.,  6436.,  6654.,  7142.,  7630.,   310.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   350.,   902.,  1454.,  2006.,  2948.,  4116.,  5284.,  2238.,  2854.,  3470.,  4086.,     0.,     0.,     0.,  4214.,  4766.,  5318.,  5870., 11124., 12292., 13460.,  6550.,  7166.,  7782.,  8398.,     0.,     0.,     0.,  8078.,  8630.,   350.,   902., 10468., 11636.,  2948.,  1006.,  1622.,  2238.,  2854.,     0.,     0.,     0.,  3110.,  3662.,  4214.,  4766.,  8788.,  9956., 11124.,  5318.,  5934.,  6550.,  7166.,     0.,     0.,     0.,  7404.,  8636.,  9868., 11100., 11752., 14344., 16936., 12332.,  3836.,  5196.,  6556.,     0.,     0.,     0.,  7196.,  8428.,  9660., 10892., 20040., 22632., 25224., 11996., 13356., 14716., 16076.,     0.,     0.,     0., 15820., 17052.,  7404.,  8636., 27304., 29896., 11752.,  9612., 10972., 12332.,  3836.,     0.,     0.,     0.,  3830.,  4510.,  5190.,  5870., 10740., 12164., 13588.,  6422.,  7166.,  7910.,  8654.,     0.,     0.,     0.,  8590.,  9270.,  9950., 10630.,  9828., 11252., 12676., 11630.,   470.,  1214.,  1958.,     0.,     0.,     0.,  2470.,  3150.,  3830.,  4510.,  7892.,  9316., 10740.,  4934.,  5678.,  6422.,  7166.,     0.,     0.,     0.,  7230.,  7910.,  8590.,  9270., 17860., 19284.,  9828., 10142., 10886., 11630.,   470.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 1 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x14x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   33.,    34.,    35.,    36.,    95.,    98.,   101.,   104.,   107.,   110.,    70.,    72.,   161.,   166.,   171.,   176.,   181.,   186.,   105.,   108.,   227.,   234.,   241.,   248.,   255.,   262.,   140.,   144.,    47.,    48.,    49.,    50.,   137.,   140.,   143.,   146.,   149.,   152.,    98.,   100.,   231.,   236.,   241.,   246.,   251.,   256.,   147.,   150.,   325.,   332.,   339.,   346.,   353.,   360.,   196.,   200.,    86.,    92.,    98.,   104.,   230.,   244.,   258.,   272.,   286.,   300.,   168.,   176.,   362.,   380.,   398.,   416.,   434.,   452.,   238.,   248.,   494.,   516.,   538.,   560.,   582.,   604.,   308.,   320.,   170.,   176.,   182.,   188.,   426.,   440.,   454.,   468.,   482.,   496.,   280.,   288.,   614.,   632.,   650.,   668.,   686.,   704.,   378.,   388.,   802.,   824.,   846.,   868.,   890.,   912.,   476.,   488.,   254.,   260.,   266.,   272.,   622.,   636.,   650.,   664.,   678.,   692.,   392.,   400.,   866.,   884.,   902.,   920.,   938.,   956.,   518.,   528.,  1110.,  1132.,  1154.,  1176.,  1198.,  1220.,   644.,   656.,   235.,   240.,   245.,   250.,   513.,   524.,   535.,   546.,   557.,   568.,   294.,   300.,   607.,   620.,   633.,   646.,   659.,   672.,   343.,   350.,   701.,   716.,   731.,   746.,   761.,   776.,   392.,   400.,   350.,   364.,   378.,   392.,   758.,   788.,   818.,   848.,   878.,   908.,   448.,   464.,   890.,   924.,   958.,   992.,  1026.,  1060.,   518.,   536.,  1022.,  1060.,  1098.,  1136.,  1174.,  1212.,   588.,   608.,   546.,   560.,   574.,   588.,  1178.,  1208.,  1238.,  1268.,  1298.,  1328.,   672.,   688.,  1366.,  1400.,  1434.,  1468.,  1502.,  1536.,   770.,   788.,  1554.,  1592.,  1630.,  1668.,  1706.,  1744.,   868.,   888.,   742.,   756.,   770.,   784.,  1598.,  1628.,  1658.,  1688.,  1718.,  1748.,   896.,   912.,  1842.,  1876.,  1910.,  1944.,  1978.,  2012.,  1022.,  1040.,  2086.,  2124.,  2162.,  2200.,  2238.,  2276.,  1148.,  1168.,   423.,   432.,   441.,   450.,   889.,   908.,   927.,   946.,   965.,   984.,   490.,   500.,   983.,  1004.,  1025.,  1046.,  1067.,  1088.,   539.,   550.,  1077.,  1100.,  1123.,  1146.,  1169.,  1192.,   588.,   600.,   614.,   636.,   658.,   680.,  1286.,  1332.,  1378.,  1424.,  1470.,  1516.,   728.,   752.,  1418.,  1468.,  1518.,  1568.,  1618.,  1668.,   798.,   824.,  1550.,  1604.,  1658.,  1712.,  1766.,  1820.,   868.,   896.,   922.,   944.,   966.,   988.,  1930.,  1976.,  2022.,  2068.,  2114.,  2160.,  1064.,  1088.,  2118.,  2168.,  2218.,  2268.,  2318.,  2368.,  1162.,  1188.,  2306.,  2360.,  2414.,  2468.,  2522.,  2576.,  1260.,  1288.,  1230.,  1252.,  1274.,  1296.,  2574.,  2620.,  2666.,  2712.,  2758.,  2804.,  1400.,  1424.,  2818.,  2868.,  2918.,  2968.,  3018.,  3068.,  1526.,  1552.,  3062.,  3116.,  3170.,  3224.,  3278.,  3332.,  1652.,  1680.,   611.,   624.,   637.,   650.,  1265.,  1292.,  1319.,  1346.,  1373.,  1400.,   686.,   700.,  1359.,  1388.,  1417.,  1446.,  1475.,  1504.,   735.,   750.,  1453.,  1484.,  1515.,  1546.,  1577.,  1608.,   784.,   800.,   561.,   578.,   595.,   612.,  1151.,  1186.,  1221.,  1256.,  1291.,  1326.,   630.,   648.,  1217.,  1254.,  1291.,  1328.,  1365.,  1402.,   665.,   684.,  1283.,  1322.,  1361.,  1400.,  1439.,  1478.,   700.,   720.,   799.,   816.,   833.,   850.,  1641.,  1676.,  1711.,  1746.,  1781.,  1816.,   882.,   900.,  1735.,  1772.,  1809.,  1846.,  1883.,  1920.,   931.,   950.,  1829.,  1868.,  1907.,  1946.,  1985.,  2024.,   980.,  1000.,  1142.,  1180.,  1218.,  1256.,  2342.,  2420.,  2498.,  2576.,  2654.,  2732.,  1288.,  1328.,  2474.,  2556.,  2638.,  2720.,  2802.,  2884.,  1358.,  1400.,  2606.,  2692.,  2778.,  2864.,  2950.,  3036.,  1428.,  1472.,  1674.,  1712.,  1750.,  1788.,  3434.,  3512.,  3590.,  3668.,  3746.,  3824.,  1848.,  1888.,  3622.,  3704.,  3786.,  3868.,  3950.,  4032.,  1946.,  1988.,  3810.,  3896.,  3982.,  4068.,  4154.,  4240.,  2044.,  2088.,  2206.,  2244.,  2282.,  2320.,  4526.,  4604.,  4682.,  4760.,  4838.,  4916.,  2408.,  2448.,  4770.,  4852.,  4934.,  5016.,  5098.,  5180.,  2534.,  2576.,  5014.,  5100.,  5186.,  5272.,  5358.,  5444.,  2660.,  2704.,   987.,  1008.,  1029.,  1050.,  2017.,  2060.,  2103.,  2146.,  2189.,  2232.,  1078.,  1100.,  2111.,  2156.,  2201.,  2246.,  2291.,  2336.,  1127.,  1150.,  2205.,  2252.,  2299.,  2346.,  2393.,  2440.,  1176.,  1200.,  1406.,  1452.,  1498.,  1544.,  2870.,  2964.,  3058.,  3152.,  3246.,  3340.,  1568.,  1616.,  3002.,  3100.,  3198.,  3296.,  3394.,  3492.,  1638.,  1688.,  3134.,  3236.,  3338.,  3440.,  3542.,  3644.,  1708.,  1760.,  2050.,  2096.,  2142.,  2188.,  4186.,  4280.,  4374.,  4468.,  4562.,  4656.,  2240.,  2288.,  4374.,  4472.,  4570.,  4668.,  4766.,  4864.,  2338.,  2388.,  4562.,  4664.,  4766.,  4868.,  4970.,  5072.,  2436.,  2488.,  2694.,  2740.,  2786.,  2832.,  5502.,  5596.,  5690.,  5784.,  5878.,  5972.,  2912.,  2960.,  5746.,  5844.,  5942.,  6040.,  6138.,  6236.,  3038.,  3088.,  5990.,  6092.,  6194.,  6296.,  6398.,  6500.,  3164.,  3216.,  1175.,  1200.,  1225.,  1250.,  2393.,  2444.,  2495.,  2546.,  2597.,  2648.,  1274.,  1300.,  2487.,  2540.,  2593.,  2646.,  2699.,  2752.,  1323.,  1350.,  2581.,  2636.,  2691.,  2746.,  2801.,  2856.,  1372.,  1400.,  1670.,  1724.,  1778.,  1832.,  3398.,  3508.,  3618.,  3728.,  3838.,  3948.,  1848.,  1904.,  3530.,  3644.,  3758.,  3872.,  3986.,  4100.,  1918.,  1976.,  3662.,  3780.,  3898.,  4016.,  4134.,  4252.,  1988.,  2048.,  2426.,  2480.,  2534.,  2588.,  4938.,  5048.,  5158.,  5268.,  5378.,  5488.,  2632.,  2688.,  5126.,  5240.,  5354.,  5468.,  5582.,  5696.,  2730.,  2788.,  5314.,  5432.,  5550.,  5668.,  5786.,  5904.,  2828.,  2888.,  3182.,  3236.,  3290.,  3344.,  6478.,  6588.,  6698.,  6808.,  6918.,  7028.,  3416.,  3472.,  6722.,  6836.,  6950.,  7064.,  7178.,  7292.,  3542.,  3600.,  6966.,  7084.,  7202.,  7320.,  7438.,  7556.,  3668.,  3728.,  1363.,  1392.,  1421.,  1450.,  2769.,  2828.,  2887.,  2946.,  3005.,  3064.,  1470.,  1500.,  2863.,  2924.,  2985.,  3046.,  3107.,  3168.,  1519.,  1550.,  2957.,  3020.,  3083.,  3146.,  3209.,  3272.,  1568.,  1600.,  1089.,  1122.,  1155.,  1188.,  2207.,  2274.,  2341.,  2408.,  2475.,  2542.,  1190.,  1224.,  2273.,  2342.,  2411.,  2480.,  2549.,  2618.,  1225.,  1260.,  2339.,  2410.,  2481.,  2552.,  2623.,  2694.,  1260.,  1296.,  1551.,  1584.,  1617.,  1650.,  3145.,  3212.,  3279.,  3346.,  3413.,  3480.,  1666.,  1700.,  3239.,  3308.,  3377.,  3446.,  3515.,  3584.,  1715.,  1750.,  3333.,  3404.,  3475.,  3546.,  3617.,  3688.,  1764.,  1800.,  2198.,  2268.,  2338.,  2408.,  4454.,  4596.,  4738.,  4880.,  5022.,  5164.,  2408.,  2480.,  4586.,  4732.,  4878.,  5024.,  5170.,  5316.,  2478.,  2552.,  4718.,  4868.,  5018.,  5168.,  5318.,  5468.,  2548.,  2624.,  3178.,  3248.,  3318.,  3388.,  6442.,  6584.,  6726.,  6868.,  7010.,  7152.,  3416.,  3488.,  6630.,  6776.,  6922.,  7068.,  7214.,  7360.,  3514.,  3588.,  6818.,  6968.,  7118.,  7268.,  7418.,  7568.,  3612.,  3688.,  4158.,  4228.,  4298.,  4368.,  8430.,  8572.,  8714.,  8856.,  8998.,  9140.,  4424.,  4496.,  8674.,  8820.,  8966.,  9112.,  9258.,  9404.,  4550.,  4624.,  8918.,  9068.,  9218.,  9368.,  9518.,  9668.,  4676.,  4752.,  1739.,  1776.,  1813.,  1850.,  3521.,  3596.,  3671.,  3746.,  3821.,  3896.,  1862.,  1900.,  3615.,  3692.,  3769.,  3846.,  3923.,  4000.,  1911.,  1950.,  3709.,  3788.,  3867.,  3946.,  4025.,  4104.,  1960.,  2000.,  2462.,  2540.,  2618.,  2696.,  4982.,  5140.,  5298.,  5456.,  5614.,  5772.,  2688.,  2768.,  5114.,  5276.,  5438.,  5600.,  5762.,  5924.,  2758.,  2840.,  5246.,  5412.,  5578.,  5744.,  5910.,  6076.,  2828.,  2912.,  3554.,  3632.,  3710.,  3788.,  7194.,  7352.,  7510.,  7668.,  7826.,  7984.,  3808.,  3888.,  7382.,  7544.,  7706.,  7868.,  8030.,  8192.,  3906.,  3988.,  7570.,  7736.,  7902.,  8068.,  8234.,  8400.,  4004.,  4088.,  4646.,  4724.,  4802.,  4880.,  9406.,  9564.,  9722.,  9880., 10038., 10196.,  4928.,  5008.,  9650.,  9812.,  9974., 10136., 10298., 10460.,  5054.,  5136.,  9894., 10060., 10226., 10392., 10558., 10724.,  5180.,  5264.,  1927.,  1968.,  2009.,  2050.,  3897.,  3980.,  4063.,  4146.,  4229.,  4312.,  2058.,  2100.,  3991.,  4076.,  4161.,  4246.,  4331.,  4416.,  2107.,  2150.,  4085.,  4172.,  4259.,  4346.,  4433.,  4520.,  2156.,  2200.,  2726.,  2812.,  2898.,  2984.,  5510.,  5684.,  5858.,  6032.,  6206.,  6380.,  2968.,  3056.,  5642.,  5820.,  5998.,  6176.,  6354.,  6532.,  3038.,  3128.,  5774.,  5956.,  6138.,  6320.,  6502.,  6684.,  3108.,  3200.,  3930.,  4016.,  4102.,  4188.,  7946.,  8120.,  8294.,  8468.,  8642.,  8816.,  4200.,  4288.,  8134.,  8312.,  8490.,  8668.,  8846.,  9024.,  4298.,  4388.,  8322.,  8504.,  8686.,  8868.,  9050.,  9232.,  4396.,  4488.,  5134.,  5220.,  5306.,  5392., 10382., 10556., 10730., 10904., 11078., 11252.,  5432.,  5520., 10626., 10804., 10982., 11160., 11338., 11516.,  5558.,  5648., 10870., 11052., 11234., 11416., 11598., 11780.,  5684.,  5776.,  2115.,  2160.,  2205.,  2250.,  4273.,  4364.,  4455.,  4546.,  4637.,  4728.,  2254.,  2300.,  4367.,  4460.,  4553.,  4646.,  4739.,  4832.,  2303.,  2350.,  4461.,  4556.,  4651.,  4746.,  4841.,  4936.,  2352.,  2400.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x14x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,   11.,   14.,   17.,   20.,   23.,   26.,   14.,   16.,   18.,   20.,   22.,   24.,   26.,   28.,    0.,    0.,    0.,    0.,    0.,    0.,   15.,   16.,   17.,   18.,   19.,   20.,   21.,   22.,   53.,   56.,   59.,   62.,   65.,   68.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,    0.,    0.,    0.,    0.,    0.,    0.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   95.,   98.,  101.,  104.,  107.,  110.,   70.,   72.,   74.,   76.,   78.,   80.,   82.,   84.,    0.,    0.,    0.,    0.,    0.,    0.,   43.,   44.,   45.,   46.,   47.,   48.,   49.,   50.,  137.,  140.,  143.,  146.,  149.,  152.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,    0.,    0.,    0.,    0.,    0.,    0.,   60.,   64.,   68.,   72.,   76.,   80.,   84.,   88.,  210.,  220.,  230.,  240.,  250.,  260.,  154.,  160.,  166.,  172.,  178.,  184.,  190.,  196.,    0.,    0.,    0.,    0.,    0.,    0.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  350.,  360.,  370.,  380.,  390.,  400.,  238.,  244.,  250.,  256.,  262.,  268.,  274.,  280.,    0.,    0.,    0.,    0.,    0.,    0.,  172.,  176.,  180.,  184.,  188.,  192.,  196.,  200.,  490.,  500.,  510.,  520.,  530.,  540.,  322.,  328.,  334.,  340.,  346.,  352.,  358.,  364.,    0.,    0.,    0.,    0.,    0.,    0.,  129.,  132.,  135.,  138.,  141.,  144.,  147.,  150.,  325.,  332.,  339.,  346.,  353.,  360.,  196.,  200.,  204.,  208.,  212.,  216.,  220.,  224.,    0.,    0.,    0.,    0.,    0.,    0.,  171.,  174.,  177.,  180.,  183.,  186.,  189.,  192.,  423.,  430.,  437.,  444.,  451.,  458.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,    0.,    0.,    0.,    0.,    0.,    0.,  213.,  216.,  219.,  222.,  225.,  228.,  231.,  234.,  521.,  528.,  535.,  542.,  549.,  556.,  308.,  312.,  316.,  320.,  324.,  328.,  332.,  336.,    0.,    0.,    0.,    0.,    0.,    0.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  619.,  626.,  633.,  640.,  647.,  654.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    5.,   10.,   15.,   20.,   25.,   30.,   35.,   40.,   51.,   62.,   73.,   84.,   95.,  106.,   42.,   48.,   54.,   60.,   66.,   72.,   78.,   84.,    0.,    0.,    0.,    0.,    0.,    0.,   75.,   80.,   85.,   90.,   95.,  100.,  105.,  110.,  205.,  216.,  227.,  238.,  249.,  260.,  126.,  132.,  138.,  144.,  150.,  156.,  162.,  168.,    0.,    0.,    0.,    0.,    0.,    0.,  145.,  150.,  155.,  160.,  165.,  170.,  175.,  180.,  359.,  370.,  381.,  392.,  403.,  414.,  210.,  216.,  222.,  228.,  234.,  240.,  246.,  252.,    0.,    0.,    0.,    0.,    0.,    0.,  215.,  220.,  225.,  230.,  235.,  240.,  245.,  250.,  513.,  524.,  535.,  546.,  557.,  568.,  294.,  300.,  306.,  312.,  318.,  324.,  330.,  336.,    0.,    0.,    0.,    0.,    0.,    0.,  292.,  304.,  316.,  328.,  340.,  352.,  364.,  376.,  738.,  764.,  790.,  816.,  842.,  868.,  434.,  448.,  462.,  476.,  490.,  504.,  518.,  532.,    0.,    0.,    0.,    0.,    0.,    0.,  460.,  472.,  484.,  496.,  508.,  520.,  532.,  544., 1102., 1128., 1154., 1180., 1206., 1232.,  630.,  644.,  658.,  672.,  686.,  700.,  714.,  728.,    0.,    0.,    0.,    0.,    0.,    0.,  628.,  640.,  652.,  664.,  676.,  688.,  700.,  712., 1466., 1492., 1518., 1544., 1570., 1596.,  826.,  840.,  854.,  868.,  882.,  896.,  910.,  924.,    0.,    0.,    0.,    0.,    0.,    0.,  301.,  308.,  315.,  322.,  329.,  336.,  343.,  350.,  701.,  716.,  731.,  746.,  761.,  776.,  392.,  400.,  408.,  416.,  424.,  432.,  440.,  448.,    0.,    0.,    0.,    0.,    0.,    0.,  399.,  406.,  413.,  420.,  427.,  434.,  441.,  448.,  911.,  926.,  941.,  956.,  971.,  986.,  504.,  512.,  520.,  528.,  536.,  544.,  552.,  560.,    0.,    0.,    0.,    0.,    0.,    0.,  497.,  504.,  511.,  518.,  525.,  532.,  539.,  546., 1121., 1136., 1151., 1166., 1181., 1196.,  616.,  624.,  632.,  640.,  648.,  656.,  664.,  672.,    0.,    0.,    0.,    0.,    0.,    0.,  595.,  602.,  609.,  616.,  623.,  630.,  637.,  644., 1331., 1346., 1361., 1376., 1391., 1406.,  728.,  736.,  744.,  752.,  760.,  768.,  776.,  784.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    9.,   18.,   27.,   36.,   45.,   54.,   63.,   72.,   91.,  110.,  129.,  148.,  167.,  186.,   70.,   80.,   90.,  100.,  110.,  120.,  130.,  140.,    0.,    0.,    0.,    0.,    0.,    0.,  135.,  144.,  153.,  162.,  171.,  180.,  189.,  198.,  357.,  376.,  395.,  414.,  433.,  452.,  210.,  220.,  230.,  240.,  250.,  260.,  270.,  280.,    0.,    0.,    0.,    0.,    0.,    0.,  261.,  270.,  279.,  288.,  297.,  306.,  315.,  324.,  623.,  642.,  661.,  680.,  699.,  718.,  350.,  360.,  370.,  380.,  390.,  400.,  410.,  420.,    0.,    0.,    0.,    0.,    0.,    0.,  387.,  396.,  405.,  414.,  423.,  432.,  441.,  450.,  889.,  908.,  927.,  946.,  965.,  984.,  490.,  500.,  510.,  520.,  530.,  540.,  550.,  560.,    0.,    0.,    0.,    0.,    0.,    0.,  524.,  544.,  564.,  584.,  604.,  624.,  644.,  664., 1266., 1308., 1350., 1392., 1434., 1476.,  714.,  736.,  758.,  780.,  802.,  824.,  846.,  868.,    0.,    0.,    0.,    0.,    0.,    0.,  804.,  824.,  844.,  864.,  884.,  904.,  924.,  944., 1854., 1896., 1938., 1980., 2022., 2064., 1022., 1044., 1066., 1088., 1110., 1132., 1154., 1176.,    0.,    0.,    0.,    0.,    0.,    0., 1084., 1104., 1124., 1144., 1164., 1184., 1204., 1224., 2442., 2484., 2526., 2568., 2610., 2652., 1330., 1352., 1374., 1396., 1418., 1440., 1462., 1484.,    0.,    0.,    0.,    0.,    0.,    0.,  473.,  484.,  495.,  506.,  517.,  528.,  539.,  550., 1077., 1100., 1123., 1146., 1169., 1192.,  588.,  600.,  612.,  624.,  636.,  648.,  660.,  672.,    0.,    0.,    0.,    0.,    0.,    0.,  627.,  638.,  649.,  660.,  671.,  682.,  693.,  704., 1399., 1422., 1445., 1468., 1491., 1514.,  756.,  768.,  780.,  792.,  804.,  816.,  828.,  840.,    0.,    0.,    0.,    0.,    0.,    0.,  781.,  792.,  803.,  814.,  825.,  836.,  847.,  858., 1721., 1744., 1767., 1790., 1813., 1836.,  924.,  936.,  948.,  960.,  972.,  984.,  996., 1008.,    0.,    0.,    0.,    0.,    0.,    0.,  935.,  946.,  957.,  968.,  979.,  990., 1001., 1012., 2043., 2066., 2089., 2112., 2135., 2158., 1092., 1104., 1116., 1128., 1140., 1152., 1164., 1176.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 2 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x14x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,   432.,   452.,   472.,   492.,    64.,    84.,    39.,    53.,   700.,   736.,   772.,   808.,   140.,   176.,    61.,    83.,   968.,  1020.,  1072.,  1124.,   216.,   268.,    83.,   113.,    89.,    95.,   101.,   107.,   264.,   284.,   304.,   324.,   344.,   364.,   235.,   249.,   500.,   536.,   572.,   608.,   644.,   680.,   369.,   391.,   736.,   788.,   840.,   892.,   944.,   996.,   503.,   533.,   354.,   398.,   442.,   486.,   720.,   824.,   928.,  1032.,  1136.,  1240.,   742.,   802.,  1000.,  1136.,  1272.,  1408.,  1544.,  1680.,  1042.,  1118.,  1280.,  1448.,  1616.,  1784.,  1952.,  2120.,  1342.,  1434.,   778.,   822.,   866.,   910.,  1728.,  1832.,  1936.,  2040.,  2144.,  2248.,  1134.,  1194.,  2200.,  2336.,  2472.,  2608.,  2744.,  2880.,  1402.,  1478.,  2672.,  2840.,  3008.,  3176.,  3344.,  3512.,  1670.,  1762.,   178.,   222.,   266.,   310.,  1968.,  2072.,  2176.,  2280.,   720.,   824.,   502.,   562.,  2632.,  2768.,  2904.,  3040.,  1000.,  1136.,   738.,   814.,  3296.,  3464.,  3632.,  3800.,  1280.,  1448.,   974.,  1066.,   561.,   599.,   637.,   675.,  1208.,  1292.,  1376.,  1460.,  1544.,  1628.,   771.,   817.,  1444.,  1544.,  1644.,  1744.,  1844.,  1944.,   905.,   959.,  1680.,  1796.,  1912.,  2028.,  2144.,  2260.,  1039.,  1101.,  1426.,  1534.,  1642.,  1750.,  1840.,  2072.,  2304.,  2536.,  2768.,  3000.,  1942.,  2066.,  2120.,  2384.,  2648.,  2912.,  3176.,  3440.,  2242.,  2382.,  2400.,  2696.,  2992.,  3288.,  3584.,  3880.,  2542.,  2698.,  1722.,  1830.,  1938.,  2046.,  3616.,  3848.,  4080.,  4312.,  4544.,  4776.,  2206.,  2330.,  4088.,  4352.,  4616.,  4880.,  5144.,  5408.,  2474.,  2614.,  4560.,  4856.,  5152.,  5448.,  5744.,  6040.,  2742.,  2898.,   994.,  1102.,  1210.,  1318.,  4624.,  4856.,  5088.,  5320.,  1840.,  2072.,  1446.,  1570.,  5288.,  5552.,  5816.,  6080.,  2120.,  2384.,  1682.,  1822.,  5952.,  6248.,  6544.,  6840.,  2400.,  2696.,  1918.,  2074.,  1033.,  1103.,  1173.,  1243.,  2152.,  2300.,  2448.,  2596.,  2744.,  2892.,  1307.,  1385.,  2388.,  2552.,  2716.,  2880.,  3044.,  3208.,  1441.,  1527.,  2624.,  2804.,  2984.,  3164.,  3344.,  3524.,  1575.,  1669.,  2498.,  2670.,  2842.,  3014.,  2960.,  3320.,  3680.,  4040.,  4400.,  4760.,  3142.,  3330.,  3240.,  3632.,  4024.,  4416.,  4808.,  5200.,  3442.,  3646.,  3520.,  3944.,  4368.,  4792.,  5216.,  5640.,  3742.,  3962.,  2666.,  2838.,  3010.,  3182.,  5504.,  5864.,  6224.,  6584.,  6944.,  7304.,  3278.,  3466.,  5976.,  6368.,  6760.,  7152.,  7544.,  7936.,  3546.,  3750.,  6448.,  6872.,  7296.,  7720.,  8144.,  8568.,  3814.,  4034.,  1810.,  1982.,  2154.,  2326.,  7280.,  7640.,  8000.,  8360.,  2960.,  3320.,  2390.,  2578.,  7944.,  8336.,  8728.,  9120.,  3240.,  3632.,  2626.,  2830.,  8608.,  9032.,  9456.,  9880.,  3520.,  3944.,  2862.,  3082.,  1505.,  1607.,  1709.,  1811.,  3096.,  3308.,  3520.,  3732.,  3944.,  4156.,  1843.,  1953.,  3332.,  3560.,  3788.,  4016.,  4244.,  4472.,  1977.,  2095.,  3568.,  3812.,  4056.,  4300.,  4544.,  4788.,  2111.,  2237.,   101.,   235.,   369.,   503.,  4720.,  4996.,  5272.,  5548.,  1280.,  1556.,   391.,   533.,  4988.,  5280.,  5572.,  5864.,  1356.,  1648.,   413.,   563.,  5256.,  5564.,  5872.,  6180.,  1432.,  1740.,   435.,   593.,  1977.,  2111.,  2245.,  2379.,  4040.,  4316.,  4592.,  4868.,  5144.,  5420.,  2379.,  2521.,  4276.,  4568.,  4860.,  5152.,  5444.,  5736.,  2513.,  2663.,  4512.,  4820.,  5128.,  5436.,  5744.,  6052.,  2647.,  2805.,  4642.,  4942.,  5242.,  5542.,  5200.,  5816.,  6432.,  7048.,  7664.,  8280.,  5542.,  5858.,  5480.,  6128.,  6776.,  7424.,  8072.,  8720.,  5842.,  6174.,  5760.,  6440.,  7120.,  7800.,  8480.,  9160.,  6142.,  6490.,  4554.,  4854.,  5154.,  5454.,  9280.,  9896., 10512., 11128., 11744., 12360.,  5422.,  5738.,  9752., 10400., 11048., 11696., 12344., 12992.,  5690.,  6022., 10224., 10904., 11584., 12264., 12944., 13624.,  5958.,  6306.,  3442.,  3742.,  4042.,  4342., 12592., 13208., 13824., 14440.,  5200.,  5816.,  4278.,  4594., 13256., 13904., 14552., 15200.,  5480.,  6128.,  4514.,  4846., 13920., 14600., 15280., 15960.,  5760.,  6440.,  4750.,  5098.,  2449.,  2615.,  2781.,  2947.,  4984.,  5324.,  5664.,  6004.,  6344.,  6684.,  2915.,  3089.,  5220.,  5576.,  5932.,  6288.,  6644.,  7000.,  3049.,  3231.,  5456.,  5828.,  6200.,  6572.,  6944.,  7316.,  3183.,  3373.,  5714.,  6078.,  6442.,  6806.,  6320.,  7064.,  7808.,  8552.,  9296., 10040.,  6742.,  7122.,  6600.,  7376.,  8152.,  8928.,  9704., 10480.,  7042.,  7438.,  6880.,  7688.,  8496.,  9304., 10112., 10920.,  7342.,  7754.,  5498.,  5862.,  6226.,  6590., 11168., 11912., 12656., 13400., 14144., 14888.,  6494.,  6874., 11640., 12416., 13192., 13968., 14744., 15520.,  6762.,  7158., 12112., 12920., 13728., 14536., 15344., 16152.,  7030.,  7442.,  4258.,  4622.,  4986.,  5350., 15248., 15992., 16736., 17480.,  6320.,  7064.,  5222.,  5602., 15912., 16688., 17464., 18240.,  6600.,  7376.,  5458.,  5854., 16576., 17384., 18192., 19000.,  6880.,  7688.,  5694.,  6106.,  2921.,  3119.,  3317.,  3515.,  5928.,  6332.,  6736.,  7140.,  7544.,  7948.,  3451.,  3657.,  6164.,  6584.,  7004.,  7424.,  7844.,  8264.,  3585.,  3799.,  6400.,  6836.,  7272.,  7708.,  8144.,  8580.,  3719.,  3941.,  6786.,  7214.,  7642.,  8070.,  7440.,  8312.,  9184., 10056., 10928., 11800.,  7942.,  8386.,  7720.,  8624.,  9528., 10432., 11336., 12240.,  8242.,  8702.,  8000.,  8936.,  9872., 10808., 11744., 12680.,  8542.,  9018.,  6442.,  6870.,  7298.,  7726., 13056., 13928., 14800., 15672., 16544., 17416.,  7566.,  8010., 13528., 14432., 15336., 16240., 17144., 18048.,  7834.,  8294., 14000., 14936., 15872., 16808., 17744., 18680.,  8102.,  8578.,  5074.,  5502.,  5930.,  6358., 17904., 18776., 19648., 20520.,  7440.,  8312.,  6166.,  6610., 18568., 19472., 20376., 21280.,  7720.,  8624.,  6402.,  6862., 19232., 20168., 21104., 22040.,  8000.,  8936.,  6638.,  7114.,  3393.,  3623.,  3853.,  4083.,  6872.,  7340.,  7808.,  8276.,  8744.,  9212.,  3987.,  4225.,  7108.,  7592.,  8076.,  8560.,  9044.,  9528.,  4121.,  4367.,  7344.,  7844.,  8344.,  8844.,  9344.,  9844.,  4255.,  4509.,     5.,    11.,    17.,    23.,   432.,   452.,   472.,   492.,    64.,    84.,    39.,    53.,   700.,   736.,   772.,   808.,   140.,   176.,    61.,    83.,   968.,  1020.,  1072.,  1124.,   216.,   268.,    83.,   113.,    89.,    95.,   101.,   107.,   264.,   284.,   304.,   324.,   344.,   364.,   235.,   249.,   500.,   536.,   572.,   608.,   644.,   680.,   369.,   391.,   736.,   788.,   840.,   892.,   944.,   996.,   503.,   533.,   354.,   398.,   442.,   486.,   720.,   824.,   928.,  1032.,  1136.,  1240.,   742.,   802.,  1000.,  1136.,  1272.,  1408.,  1544.,  1680.,  1042.,  1118.,  1280.,  1448.,  1616.,  1784.,  1952.,  2120.,  1342.,  1434.,   778.,   822.,   866.,   910.,  1728.,  1832.,  1936.,  2040.,  2144.,  2248.,  1134.,  1194.,  2200.,  2336.,  2472.,  2608.,  2744.,  2880.,  1402.,  1478.,  2672.,  2840.,  3008.,  3176.,  3344.,  3512.,  1670.,  1762.,   178.,   222.,   266.,   310.,  1968.,  2072.,  2176.,  2280.,   720.,   824.,   502.,   562.,  2632.,  2768.,  2904.,  3040.,  1000.,  1136.,   738.,   814.,  3296.,  3464.,  3632.,  3800.,  1280.,  1448.,   974.,  1066.,   561.,   599.,   637.,   675.,  1208.,  1292.,  1376.,  1460.,  1544.,  1628.,   771.,   817.,  1444.,  1544.,  1644.,  1744.,  1844.,  1944.,   905.,   959.,  1680.,  1796.,  1912.,  2028.,  2144.,  2260.,  1039.,  1101.,  1426.,  1534.,  1642.,  1750.,  1840.,  2072.,  2304.,  2536.,  2768.,  3000.,  1942.,  2066.,  2120.,  2384.,  2648.,  2912.,  3176.,  3440.,  2242.,  2382.,  2400.,  2696.,  2992.,  3288.,  3584.,  3880.,  2542.,  2698.,  1722.,  1830.,  1938.,  2046.,  3616.,  3848.,  4080.,  4312.,  4544.,  4776.,  2206.,  2330.,  4088.,  4352.,  4616.,  4880.,  5144.,  5408.,  2474.,  2614.,  4560.,  4856.,  5152.,  5448.,  5744.,  6040.,  2742.,  2898.,   994.,  1102.,  1210.,  1318.,  4624.,  4856.,  5088.,  5320.,  1840.,  2072.,  1446.,  1570.,  5288.,  5552.,  5816.,  6080.,  2120.,  2384.,  1682.,  1822.,  5952.,  6248.,  6544.,  6840.,  2400.,  2696.,  1918.,  2074.,  1033.,  1103.,  1173.,  1243.,  2152.,  2300.,  2448.,  2596.,  2744.,  2892.,  1307.,  1385.,  2388.,  2552.,  2716.,  2880.,  3044.,  3208.,  1441.,  1527.,  2624.,  2804.,  2984.,  3164.,  3344.,  3524.,  1575.,  1669.,  2498.,  2670.,  2842.,  3014.,  2960.,  3320.,  3680.,  4040.,  4400.,  4760.,  3142.,  3330.,  3240.,  3632.,  4024.,  4416.,  4808.,  5200.,  3442.,  3646.,  3520.,  3944.,  4368.,  4792.,  5216.,  5640.,  3742.,  3962.,  2666.,  2838.,  3010.,  3182.,  5504.,  5864.,  6224.,  6584.,  6944.,  7304.,  3278.,  3466.,  5976.,  6368.,  6760.,  7152.,  7544.,  7936.,  3546.,  3750.,  6448.,  6872.,  7296.,  7720.,  8144.,  8568.,  3814.,  4034.,  1810.,  1982.,  2154.,  2326.,  7280.,  7640.,  8000.,  8360.,  2960.,  3320.,  2390.,  2578.,  7944.,  8336.,  8728.,  9120.,  3240.,  3632.,  2626.,  2830.,  8608.,  9032.,  9456.,  9880.,  3520.,  3944.,  2862.,  3082.,  1505.,  1607.,  1709.,  1811.,  3096.,  3308.,  3520.,  3732.,  3944.,  4156.,  1843.,  1953.,  3332.,  3560.,  3788.,  4016.,  4244.,  4472.,  1977.,  2095.,  3568.,  3812.,  4056.,  4300.,  4544.,  4788.,  2111.,  2237.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x14x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,    64.,    84.,   104.,   124.,   144.,   164.,    95.,   109.,   123.,   137.,   151.,   165.,   179.,   193.,     0.,     0.,     0.,     0.,     0.,     0.,    89.,    95.,   101.,   107.,   113.,   119.,   125.,   131.,   344.,   364.,   384.,   404.,   424.,   444.,   291.,   305.,   319.,   333.,   347.,   361.,   375.,   389.,     0.,     0.,     0.,     0.,     0.,     0.,   173.,   179.,   185.,   191.,   197.,   203.,   209.,   215.,   624.,   644.,   664.,   684.,   704.,   724.,   487.,   501.,   515.,   529.,   543.,   557.,   571.,   585.,     0.,     0.,     0.,     0.,     0.,     0.,   257.,   263.,   269.,   275.,   281.,   287.,   293.,   299.,   904.,   924.,   944.,   964.,   984.,  1004.,   683.,   697.,   711.,   725.,   739.,   753.,   767.,   781.,     0.,     0.,     0.,     0.,     0.,     0.,   358.,   386.,   414.,   442.,   470.,   498.,   526.,   554.,  1400.,  1472.,  1544.,  1616.,  1688.,  1760.,  1082.,  1126.,  1170.,  1214.,  1258.,  1302.,  1346.,  1390.,     0.,     0.,     0.,     0.,     0.,     0.,   750.,   778.,   806.,   834.,   862.,   890.,   918.,   946.,  2408.,  2480.,  2552.,  2624.,  2696.,  2768.,  1698.,  1742.,  1786.,  1830.,  1874.,  1918.,  1962.,  2006.,     0.,     0.,     0.,     0.,     0.,     0.,  1142.,  1170.,  1198.,  1226.,  1254.,  1282.,  1310.,  1338.,  3416.,  3488.,  3560.,  3632.,  3704.,  3776.,  2314.,  2358.,  2402.,  2446.,  2490.,  2534.,  2578.,  2622.,     0.,     0.,     0.,     0.,     0.,     0.,   941.,   963.,   985.,  1007.,  1029.,  1051.,  1073.,  1095.,  2400.,  2452.,  2504.,  2556.,  2608.,  2660.,  1463.,  1493.,  1523.,  1553.,  1583.,  1613.,  1643.,  1673.,     0.,     0.,     0.,     0.,     0.,     0.,  1249.,  1271.,  1293.,  1315.,  1337.,  1359.,  1381.,  1403.,  3128.,  3180.,  3232.,  3284.,  3336.,  3388.,  1883.,  1913.,  1943.,  1973.,  2003.,  2033.,  2063.,  2093.,     0.,     0.,     0.,     0.,     0.,     0.,  1557.,  1579.,  1601.,  1623.,  1645.,  1667.,  1689.,  1711.,  3856.,  3908.,  3960.,  4012.,  4064.,  4116.,  2303.,  2333.,  2363.,  2393.,  2423.,  2453.,  2483.,  2513.,     0.,     0.,     0.,     0.,     0.,     0.,  1865.,  1887.,  1909.,  1931.,  1953.,  1975.,  1997.,  2019.,  4584.,  4636.,  4688.,  4740.,  4792.,  4844.,  2723.,  2753.,  2783.,  2813.,  2843.,  2873.,  2903.,  2933.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    29.,    67.,   105.,   143.,   181.,   219.,   257.,   295.,   368.,   452.,   536.,   620.,   704.,   788.,   311.,   357.,   403.,   449.,   495.,   541.,   587.,   633.,     0.,     0.,     0.,     0.,     0.,     0.,   561.,   599.,   637.,   675.,   713.,   751.,   789.,   827.,  1544.,  1628.,  1712.,  1796.,  1880.,  1964.,   955.,  1001.,  1047.,  1093.,  1139.,  1185.,  1231.,  1277.,     0.,     0.,     0.,     0.,     0.,     0.,  1093.,  1131.,  1169.,  1207.,  1245.,  1283.,  1321.,  1359.,  2720.,  2804.,  2888.,  2972.,  3056.,  3140.,  1599.,  1645.,  1691.,  1737.,  1783.,  1829.,  1875.,  1921.,     0.,     0.,     0.,     0.,     0.,     0.,  1625.,  1663.,  1701.,  1739.,  1777.,  1815.,  1853.,  1891.,  3896.,  3980.,  4064.,  4148.,  4232.,  4316.,  2243.,  2289.,  2335.,  2381.,  2427.,  2473.,  2519.,  2565.,     0.,     0.,     0.,     0.,     0.,     0.,  2198.,  2290.,  2382.,  2474.,  2566.,  2658.,  2750.,  2842.,  5592.,  5792.,  5992.,  6192.,  6392.,  6592.,  3306.,  3414.,  3522.,  3630.,  3738.,  3846.,  3954.,  4062.,     0.,     0.,     0.,     0.,     0.,     0.,  3486.,  3578.,  3670.,  3762.,  3854.,  3946.,  4038.,  4130.,  8392.,  8592.,  8792.,  8992.,  9192.,  9392.,  4818.,  4926.,  5034.,  5142.,  5250.,  5358.,  5466.,  5574.,     0.,     0.,     0.,     0.,     0.,     0.,  4774.,  4866.,  4958.,  5050.,  5142.,  5234.,  5326.,  5418., 11192., 11392., 11592., 11792., 11992., 12192.,  6330.,  6438.,  6546.,  6654.,  6762.,  6870.,  6978.,  7086.,     0.,     0.,     0.,     0.,     0.,     0.,  2309.,  2363.,  2417.,  2471.,  2525.,  2579.,  2633.,  2687.,  5392.,  5508.,  5624.,  5740.,  5856.,  5972.,  3023.,  3085.,  3147.,  3209.,  3271.,  3333.,  3395.,  3457.,     0.,     0.,     0.,     0.,     0.,     0.,  3065.,  3119.,  3173.,  3227.,  3281.,  3335.,  3389.,  3443.,  7016.,  7132.,  7248.,  7364.,  7480.,  7596.,  3891.,  3953.,  4015.,  4077.,  4139.,  4201.,  4263.,  4325.,     0.,     0.,     0.,     0.,     0.,     0.,  3821.,  3875.,  3929.,  3983.,  4037.,  4091.,  4145.,  4199.,  8640.,  8756.,  8872.,  8988.,  9104.,  9220.,  4759.,  4821.,  4883.,  4945.,  5007.,  5069.,  5131.,  5193.,     0.,     0.,     0.,     0.,     0.,     0.,  4577.,  4631.,  4685.,  4739.,  4793.,  4847.,  4901.,  4955., 10264., 10380., 10496., 10612., 10728., 10844.,  5627.,  5689.,  5751.,  5813.,  5875.,  5937.,  5999.,  6061.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    53.,   123.,   193.,   263.,   333.,   403.,   473.,   543.,   672.,   820.,   968.,  1116.,  1264.,  1412.,   527.,   605.,   683.,   761.,   839.,   917.,   995.,  1073.,     0.,     0.,     0.,     0.,     0.,     0.,  1033.,  1103.,  1173.,  1243.,  1313.,  1383.,  1453.,  1523.,  2744.,  2892.,  3040.,  3188.,  3336.,  3484.,  1619.,  1697.,  1775.,  1853.,  1931.,  2009.,  2087.,  2165.,     0.,     0.,     0.,     0.,     0.,     0.,  2013.,  2083.,  2153.,  2223.,  2293.,  2363.,  2433.,  2503.,  4816.,  4964.,  5112.,  5260.,  5408.,  5556.,  2711.,  2789.,  2867.,  2945.,  3023.,  3101.,  3179.,  3257.,     0.,     0.,     0.,     0.,     0.,     0.,  2993.,  3063.,  3133.,  3203.,  3273.,  3343.,  3413.,  3483.,  6888.,  7036.,  7184.,  7332.,  7480.,  7628.,  3803.,  3881.,  3959.,  4037.,  4115.,  4193.,  4271.,  4349.,     0.,     0.,     0.,     0.,     0.,     0.,  4038.,  4194.,  4350.,  4506.,  4662.,  4818.,  4974.,  5130.,  9784., 10112., 10440., 10768., 11096., 11424.,  5530.,  5702.,  5874.,  6046.,  6218.,  6390.,  6562.,  6734.,     0.,     0.,     0.,     0.,     0.,     0.,  6222.,  6378.,  6534.,  6690.,  6846.,  7002.,  7158.,  7314., 14376., 14704., 15032., 15360., 15688., 16016.,  7938.,  8110.,  8282.,  8454.,  8626.,  8798.,  8970.,  9142.,     0.,     0.,     0.,     0.,     0.,     0.,  8406.,  8562.,  8718.,  8874.,  9030.,  9186.,  9342.,  9498., 18968., 19296., 19624., 19952., 20280., 20608., 10346., 10518., 10690., 10862., 11034., 11206., 11378., 11550.,     0.,     0.,     0.,     0.,     0.,     0.,  3677.,  3763.,  3849.,  3935.,  4021.,  4107.,  4193.,  4279.,  8384.,  8564.,  8744.,  8924.,  9104.,  9284.,  4583.,  4677.,  4771.,  4865.,  4959.,  5053.,  5147.,  5241.,     0.,     0.,     0.,     0.,     0.,     0.,  4881.,  4967.,  5053.,  5139.,  5225.,  5311.,  5397.,  5483., 10904., 11084., 11264., 11444., 11624., 11804.,  5899.,  5993.,  6087.,  6181.,  6275.,  6369.,  6463.,  6557.,     0.,     0.,     0.,     0.,     0.,     0.,  6085.,  6171.,  6257.,  6343.,  6429.,  6515.,  6601.,  6687., 13424., 13604., 13784., 13964., 14144., 14324.,  7215.,  7309.,  7403.,  7497.,  7591.,  7685.,  7779.,  7873.,     0.,     0.,     0.,     0.,     0.,     0.,  7289.,  7375.,  7461.,  7547.,  7633.,  7719.,  7805.,  7891., 15944., 16124., 16304., 16484., 16664., 16844.,  8531.,  8625.,  8719.,  8813.,  8907.,  9001.,  9095.,  9189.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 2 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x14x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,   614.,   846.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  4780.,  5500.,   892.,  1228.,  1564.,  1900.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  1900.,  2620.,  1966.,  2262.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  4780.,  5500.,   892.,  1228.,  1564.,  1900.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  1900.,  2620.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  4780.,  5500.,   892.,  1228.,  1564.,  1900.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  1900.,  2620.,  1966.,  2262.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,   614.,   846.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  4780.,  5500.,   892.,  1228.,  1564.,  1900.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  1900.,  2620.,  1966.,  2262.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  4780.,  5500.,   892.,  1228.,  1564.,  1900.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  1900.,  2620.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  4780.,  5500.,   892.,  1228.,  1564.,  1900.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  1900.,  2620.,  1966.,  2262.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,   614.,   846.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  4780.,  5500.,   892.,  1228.,  1564.,  1900.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  1900.,  2620.,  1966.,  2262.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  4780.,  5500.,   892.,  1228.,  1564.,  1900.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  1900.,  2620.,   270.,   310.,    30.,    70.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  4780.,  5500.,   892.,  1228.,  1564.,  1900.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  1900.,  2620.,  1966.,  2262.,   190.,   486.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x14x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   420.,   564.,   708.,   852.,   996.,  1140.,   694.,   798.,   902.,  1006.,  1110.,  1214.,  1318.,  1422.,     0.,     0.,     0.,     0.,     0.,     0.,   590.,   630.,    30.,    70.,   110.,   150.,   190.,   230.,  1796.,  1940.,   420.,   564.,   708.,   852.,   486.,   590.,   694.,   798.,   902.,  1006.,  1110.,  1214.,     0.,     0.,     0.,     0.,     0.,     0.,   510.,   550.,   590.,   630.,    30.,    70.,   110.,   150.,  1508.,  1652.,  1796.,  1940.,   420.,   564.,   278.,   382.,   486.,   590.,   694.,   798.,   902.,  1006.,     0.,     0.,     0.,     0.,     0.,     0.,   430.,   470.,   510.,   550.,   590.,   630.,    30.,    70.,  1220.,  1364.,  1508.,  1652.,  1796.,  1940.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,     0.,     0.,   460.,   668.,   876.,  1084.,  1292.,  1500.,  1708.,  1916.,  2536.,  3080.,  3624.,  4168.,  4712.,  5256.,  3068.,  3404.,  2076.,  2412.,  2748.,  3084.,  3420.,  3756.,     0.,     0.,     0.,     0.,     0.,     0.,  2732.,  2940.,   460.,   668.,   876.,  1084.,  1292.,  1500.,  5800.,  6344.,  2536.,  3080.,  3624.,  4168.,  2396.,  2732.,  3068.,  3404.,  2076.,  2412.,  2748.,  3084.,     0.,     0.,     0.,     0.,     0.,     0.,  2316.,  2524.,  2732.,  2940.,   460.,   668.,   876.,  1084.,  4712.,  5256.,  5800.,  6344.,  2536.,  3080.,  1724.,  2060.,  2396.,  2732.,  3068.,  3404.,  2076.,  2412.,     0.,     0.,     0.,     0.,     0.,     0.,  1790.,  1958.,  2126.,  2294.,  2462.,  2630.,   110.,   278.,  2916.,  3316.,  3716.,  4116.,  4516.,  4916.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  2462.,  2630.,  2116.,  2516.,  2916.,  3316.,  3716.,  4116.,  3398.,  3630.,   150.,   382.,   614.,   846.,  1078.,  1310.,     0.,     0.,     0.,     0.,     0.,     0.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  2126.,  2294.,  4004.,  4404.,  2116.,  2516.,  2916.,  3316.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,  1454.,  1622.,  1790.,  1958.,  3204.,  3604.,  4004.,  4404.,  2116.,  2516.,  2470.,  2702.,  2934.,  3166.,  3398.,  3630.,   150.,   382.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,  2788.,  3444.,  4100.,  4756.,  5412.,  6068.,  2390.,  2750.,  3110.,  3470.,  3830.,  4190.,  4550.,  4910.,     0.,     0.,     0.,     0.,     0.,     0.,  4334.,  4630.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  7236.,  7892.,  2788.,  3444.,  4100.,  4756.,  1670.,  2030.,  2390.,  2750.,  3110.,  3470.,  3830.,  4190.,     0.,     0.,     0.,     0.,     0.,     0.,  3742.,  4038.,  4334.,  4630.,   190.,   486.,   782.,  1078.,  5924.,  6580.,  7236.,  7892.,  2788.,  3444.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,  3110.,  3470.,     0.,     0.,     0.,     0.,     0.,     0.,  3150.,  3446.,  3742.,  4038.,  4334.,  4630.,   190.,   486.,  4612.,  5268.,  5924.,  6580.,  7236.,  7892.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,     0.,     0.,     0.,     0.,     0.,     0.,  2828.,  3548.,  4268.,  4988.,  5708.,  6428.,  7148.,  7868.,  7272.,  8840., 10408., 11976., 13544., 15112.,  8508.,  9356.,  4444.,  5292.,  6140.,  6988.,  7836.,  8684.,     0.,     0.,     0.,     0.,     0.,     0.,  8172.,  8892.,  2828.,  3548.,  4268.,  4988.,  5708.,  6428., 16680., 18248.,  7272.,  8840., 10408., 11976.,  6812.,  7660.,  8508.,  9356.,  4444.,  5292.,  6140.,  6988.,     0.,     0.,     0.,     0.,     0.,     0.,  6732.,  7452.,  8172.,  8892.,  2828.,  3548.,  4268.,  4988., 13544., 15112., 16680., 18248.,  7272.,  8840.,  5116.,  5964.,  6812.,  7660.,  8508.,  9356.,  4444.,  5292.,     0.,     0.,     0.,     0.,     0.,     0.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,   270.,   694.,  6308.,  7220.,  8132.,  9044.,  9956., 10868.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,     0.,     0.,     0.,     0.,     0.,     0.,  3662.,  4086.,  4510.,  4934.,  5358.,  5782.,  6206.,  6630.,  4484.,  5396.,  6308.,  7220.,  8132.,  9044.,  7142.,  7630.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,     0.,     0.,     0.,     0.,     0.,     0.,  2814.,  3238.,  3662.,  4086.,  4510.,  4934.,  5358.,  5782.,  9444., 10356.,  4484.,  5396.,  6308.,  7220.,  6166.,  6654.,  7142.,  7630.,   310.,   798.,  1286.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,  1966.,  2390.,  2814.,  3238.,  3662.,  4086.,  4510.,  4934.,  7620.,  8532.,  9444., 10356.,  4484.,  5396.,  5190.,  5678.,  6166.,  6654.,  7142.,  7630.,   310.,   798.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   350.,   902.,  1454.,  2006.,  2558.,  3110.,  3662.,  4214.,  5156.,  6324.,  7492.,  8660.,  9828., 10996.,  4086.,  4702.,  5318.,  5934.,  6550.,  7166.,  7782.,  8398.,     0.,     0.,     0.,     0.,     0.,     0.,  8078.,  8630.,   350.,   902.,  1454.,  2006.,  2558.,  3110., 12676., 13844.,  5156.,  6324.,  7492.,  8660.,  2854.,  3470.,  4086.,  4702.,  5318.,  5934.,  6550.,  7166.,     0.,     0.,     0.,     0.,     0.,     0.,  6974.,  7526.,  8078.,  8630.,   350.,   902.,  1454.,  2006., 10340., 11508., 12676., 13844.,  5156.,  6324.,  1622.,  2238.,  2854.,  3470.,  4086.,  4702.,  5318.,  5934.,     0.,     0.,     0.,     0.,     0.,     0.,  5870.,  6422.,  6974.,  7526.,  8078.,  8630.,   350.,   902.,  8004.,  9172., 10340., 11508., 12676., 13844.,   390.,  1006.,  1622.,  2238.,  2854.,  3470.,  4086.,  4702.,     0.,     0.,     0.,     0.,     0.,     0.,  5196.,  6428.,  7660.,  8892., 10124., 11356., 12588., 13820., 12008., 14600., 17192., 19784., 22376., 24968., 13948., 15308.,  6812.,  8172.,  9532., 10892., 12252., 13612.,     0.,     0.,     0.,     0.,     0.,     0., 13612., 14844.,  5196.,  6428.,  7660.,  8892., 10124., 11356., 27560., 30152., 12008., 14600., 17192., 19784., 11228., 12588., 13948., 15308.,  6812.,  8172.,  9532., 10892.,     0.,     0.,     0.,     0.,     0.,     0., 11148., 12380., 13612., 14844.,  5196.,  6428.,  7660.,  8892., 22376., 24968., 27560., 30152., 12008., 14600.,  8508.,  9868., 11228., 12588., 13948., 15308.,  6812.,  8172.,     0.,     0.,     0.,     0.,     0.,     0.,  7230.,  7910.,  8590.,  9270.,  9950., 10630.,   430.,  1110.,  9700., 11124., 12548., 13972., 15396., 16820.,   470.,  1214.,  1958.,  2702.,  3446.,  4190.,  4934.,  5678.,     0.,     0.,     0.,     0.,     0.,     0.,  5870.,  6550.,  7230.,  7910.,  8590.,  9270.,  9950., 10630.,  6852.,  8276.,  9700., 11124., 12548., 13972., 10886., 11630.,   470.,  1214.,  1958.,  2702.,  3446.,  4190.,     0.,     0.,     0.,     0.,     0.,     0.,  4510.,  5190.,  5870.,  6550.,  7230.,  7910.,  8590.,  9270., 14884., 16308.,  6852.,  8276.,  9700., 11124.,  9398., 10142., 10886., 11630.,   470.,  1214.,  1958.,  2702.,     0.,     0.,     0.,     0.,     0.,     0.,  3150.,  3830.,  4510.,  5190.,  5870.,  6550.,  7230.,  7910., 12036., 13460., 14884., 16308.,  6852.,  8276.,  7910.,  8654.,  9398., 10142., 10886., 11630.,   470.,  1214.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 2 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x14x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   65.,    66.,    67.,    68.,    69.,    70.,    71.,    72.,   187.,   190.,   193.,   196.,   199.,   202.,   205.,   208.,   211.,   214.,   217.,   220.,   138.,   140.,   142.,   144.,   317.,   322.,   327.,   332.,   337.,   342.,   347.,   352.,   357.,   362.,   367.,   372.,   207.,   210.,   213.,   216.,   447.,   454.,   461.,   468.,   475.,   482.,   489.,   496.,   503.,   510.,   517.,   524.,   276.,   280.,   284.,   288.,    93.,    94.,    95.,    96.,    97.,    98.,    99.,   100.,   271.,   274.,   277.,   280.,   283.,   286.,   289.,   292.,   295.,   298.,   301.,   304.,   194.,   196.,   198.,   200.,   457.,   462.,   467.,   472.,   477.,   482.,   487.,   492.,   497.,   502.,   507.,   512.,   291.,   294.,   297.,   300.,   643.,   650.,   657.,   664.,   671.,   678.,   685.,   692.,   699.,   706.,   713.,   720.,   388.,   392.,   396.,   400.,   166.,   172.,   178.,   184.,   190.,   196.,   202.,   208.,   446.,   460.,   474.,   488.,   502.,   516.,   530.,   544.,   558.,   572.,   586.,   600.,   328.,   336.,   344.,   352.,   706.,   724.,   742.,   760.,   778.,   796.,   814.,   832.,   850.,   868.,   886.,   904.,   466.,   476.,   486.,   496.,   966.,   988.,  1010.,  1032.,  1054.,  1076.,  1098.,  1120.,  1142.,  1164.,  1186.,  1208.,   604.,   616.,   628.,   640.,   334.,   340.,   346.,   352.,   358.,   364.,   370.,   376.,   838.,   852.,   866.,   880.,   894.,   908.,   922.,   936.,   950.,   964.,   978.,   992.,   552.,   560.,   568.,   576.,  1210.,  1228.,  1246.,  1264.,  1282.,  1300.,  1318.,  1336.,  1354.,  1372.,  1390.,  1408.,   746.,   756.,   766.,   776.,  1582.,  1604.,  1626.,  1648.,  1670.,  1692.,  1714.,  1736.,  1758.,  1780.,  1802.,  1824.,   940.,   952.,   964.,   976.,   502.,   508.,   514.,   520.,   526.,   532.,   538.,   544.,  1230.,  1244.,  1258.,  1272.,  1286.,  1300.,  1314.,  1328.,  1342.,  1356.,  1370.,  1384.,   776.,   784.,   792.,   800.,  1714.,  1732.,  1750.,  1768.,  1786.,  1804.,  1822.,  1840.,  1858.,  1876.,  1894.,  1912.,  1026.,  1036.,  1046.,  1056.,  2198.,  2220.,  2242.,  2264.,  2286.,  2308.,  2330.,  2352.,  2374.,  2396.,  2418.,  2440.,  1276.,  1288.,  1300.,  1312.,   465.,   470.,   475.,   480.,   485.,   490.,   495.,   500.,  1015.,  1026.,  1037.,  1048.,  1059.,  1070.,  1081.,  1092.,  1103.,  1114.,  1125.,  1136.,   582.,   588.,   594.,   600.,  1201.,  1214.,  1227.,  1240.,  1253.,  1266.,  1279.,  1292.,  1305.,  1318.,  1331.,  1344.,   679.,   686.,   693.,   700.,  1387.,  1402.,  1417.,  1432.,  1447.,  1462.,  1477.,  1492.,  1507.,  1522.,  1537.,  1552.,   776.,   784.,   792.,   800.,   686.,   700.,   714.,   728.,   742.,   756.,   770.,   784.,  1486.,  1516.,  1546.,  1576.,  1606.,  1636.,  1666.,  1696.,  1726.,  1756.,  1786.,  1816.,   880.,   896.,   912.,   928.,  1746.,  1780.,  1814.,  1848.,  1882.,  1916.,  1950.,  1984.,  2018.,  2052.,  2086.,  2120.,  1018.,  1036.,  1054.,  1072.,  2006.,  2044.,  2082.,  2120.,  2158.,  2196.,  2234.,  2272.,  2310.,  2348.,  2386.,  2424.,  1156.,  1176.,  1196.,  1216.,  1078.,  1092.,  1106.,  1120.,  1134.,  1148.,  1162.,  1176.,  2326.,  2356.,  2386.,  2416.,  2446.,  2476.,  2506.,  2536.,  2566.,  2596.,  2626.,  2656.,  1328.,  1344.,  1360.,  1376.,  2698.,  2732.,  2766.,  2800.,  2834.,  2868.,  2902.,  2936.,  2970.,  3004.,  3038.,  3072.,  1522.,  1540.,  1558.,  1576.,  3070.,  3108.,  3146.,  3184.,  3222.,  3260.,  3298.,  3336.,  3374.,  3412.,  3450.,  3488.,  1716.,  1736.,  1756.,  1776.,  1470.,  1484.,  1498.,  1512.,  1526.,  1540.,  1554.,  1568.,  3166.,  3196.,  3226.,  3256.,  3286.,  3316.,  3346.,  3376.,  3406.,  3436.,  3466.,  3496.,  1776.,  1792.,  1808.,  1824.,  3650.,  3684.,  3718.,  3752.,  3786.,  3820.,  3854.,  3888.,  3922.,  3956.,  3990.,  4024.,  2026.,  2044.,  2062.,  2080.,  4134.,  4172.,  4210.,  4248.,  4286.,  4324.,  4362.,  4400.,  4438.,  4476.,  4514.,  4552.,  2276.,  2296.,  2316.,  2336.,   837.,   846.,   855.,   864.,   873.,   882.,   891.,   900.,  1759.,  1778.,  1797.,  1816.,  1835.,  1854.,  1873.,  1892.,  1911.,  1930.,  1949.,  1968.,   970.,   980.,   990.,  1000.,  1945.,  1966.,  1987.,  2008.,  2029.,  2050.,  2071.,  2092.,  2113.,  2134.,  2155.,  2176.,  1067.,  1078.,  1089.,  1100.,  2131.,  2154.,  2177.,  2200.,  2223.,  2246.,  2269.,  2292.,  2315.,  2338.,  2361.,  2384.,  1164.,  1176.,  1188.,  1200.,  1206.,  1228.,  1250.,  1272.,  1294.,  1316.,  1338.,  1360.,  2526.,  2572.,  2618.,  2664.,  2710.,  2756.,  2802.,  2848.,  2894.,  2940.,  2986.,  3032.,  1432.,  1456.,  1480.,  1504.,  2786.,  2836.,  2886.,  2936.,  2986.,  3036.,  3086.,  3136.,  3186.,  3236.,  3286.,  3336.,  1570.,  1596.,  1622.,  1648.,  3046.,  3100.,  3154.,  3208.,  3262.,  3316.,  3370.,  3424.,  3478.,  3532.,  3586.,  3640.,  1708.,  1736.,  1764.,  1792.,  1822.,  1844.,  1866.,  1888.,  1910.,  1932.,  1954.,  1976.,  3814.,  3860.,  3906.,  3952.,  3998.,  4044.,  4090.,  4136.,  4182.,  4228.,  4274.,  4320.,  2104.,  2128.,  2152.,  2176.,  4186.,  4236.,  4286.,  4336.,  4386.,  4436.,  4486.,  4536.,  4586.,  4636.,  4686.,  4736.,  2298.,  2324.,  2350.,  2376.,  4558.,  4612.,  4666.,  4720.,  4774.,  4828.,  4882.,  4936.,  4990.,  5044.,  5098.,  5152.,  2492.,  2520.,  2548.,  2576.,  2438.,  2460.,  2482.,  2504.,  2526.,  2548.,  2570.,  2592.,  5102.,  5148.,  5194.,  5240.,  5286.,  5332.,  5378.,  5424.,  5470.,  5516.,  5562.,  5608.,  2776.,  2800.,  2824.,  2848.,  5586.,  5636.,  5686.,  5736.,  5786.,  5836.,  5886.,  5936.,  5986.,  6036.,  6086.,  6136.,  3026.,  3052.,  3078.,  3104.,  6070.,  6124.,  6178.,  6232.,  6286.,  6340.,  6394.,  6448.,  6502.,  6556.,  6610.,  6664.,  3276.,  3304.,  3332.,  3360.,  1209.,  1222.,  1235.,  1248.,  1261.,  1274.,  1287.,  1300.,  2503.,  2530.,  2557.,  2584.,  2611.,  2638.,  2665.,  2692.,  2719.,  2746.,  2773.,  2800.,  1358.,  1372.,  1386.,  1400.,  2689.,  2718.,  2747.,  2776.,  2805.,  2834.,  2863.,  2892.,  2921.,  2950.,  2979.,  3008.,  1455.,  1470.,  1485.,  1500.,  2875.,  2906.,  2937.,  2968.,  2999.,  3030.,  3061.,  3092.,  3123.,  3154.,  3185.,  3216.,  1552.,  1568.,  1584.,  1600.,  1105.,  1122.,  1139.,  1156.,  1173.,  1190.,  1207.,  1224.,  2267.,  2302.,  2337.,  2372.,  2407.,  2442.,  2477.,  2512.,  2547.,  2582.,  2617.,  2652.,  1242.,  1260.,  1278.,  1296.,  2397.,  2434.,  2471.,  2508.,  2545.,  2582.,  2619.,  2656.,  2693.,  2730.,  2767.,  2804.,  1311.,  1330.,  1349.,  1368.,  2527.,  2566.,  2605.,  2644.,  2683.,  2722.,  2761.,  2800.,  2839.,  2878.,  2917.,  2956.,  1380.,  1400.,  1420.,  1440.,  1581.,  1598.,  1615.,  1632.,  1649.,  1666.,  1683.,  1700.,  3247.,  3282.,  3317.,  3352.,  3387.,  3422.,  3457.,  3492.,  3527.,  3562.,  3597.,  3632.,  1746.,  1764.,  1782.,  1800.,  3433.,  3470.,  3507.,  3544.,  3581.,  3618.,  3655.,  3692.,  3729.,  3766.,  3803.,  3840.,  1843.,  1862.,  1881.,  1900.,  3619.,  3658.,  3697.,  3736.,  3775.,  3814.,  3853.,  3892.,  3931.,  3970.,  4009.,  4048.,  1940.,  1960.,  1980.,  2000.,  2246.,  2284.,  2322.,  2360.,  2398.,  2436.,  2474.,  2512.,  4606.,  4684.,  4762.,  4840.,  4918.,  4996.,  5074.,  5152.,  5230.,  5308.,  5386.,  5464.,  2536.,  2576.,  2616.,  2656.,  4866.,  4948.,  5030.,  5112.,  5194.,  5276.,  5358.,  5440.,  5522.,  5604.,  5686.,  5768.,  2674.,  2716.,  2758.,  2800.,  5126.,  5212.,  5298.,  5384.,  5470.,  5556.,  5642.,  5728.,  5814.,  5900.,  5986.,  6072.,  2812.,  2856.,  2900.,  2944.,  3310.,  3348.,  3386.,  3424.,  3462.,  3500.,  3538.,  3576.,  6790.,  6868.,  6946.,  7024.,  7102.,  7180.,  7258.,  7336.,  7414.,  7492.,  7570.,  7648.,  3656.,  3696.,  3736.,  3776.,  7162.,  7244.,  7326.,  7408.,  7490.,  7572.,  7654.,  7736.,  7818.,  7900.,  7982.,  8064.,  3850.,  3892.,  3934.,  3976.,  7534.,  7620.,  7706.,  7792.,  7878.,  7964.,  8050.,  8136.,  8222.,  8308.,  8394.,  8480.,  4044.,  4088.,  4132.,  4176.,  4374.,  4412.,  4450.,  4488.,  4526.,  4564.,  4602.,  4640.,  8974.,  9052.,  9130.,  9208.,  9286.,  9364.,  9442.,  9520.,  9598.,  9676.,  9754.,  9832.,  4776.,  4816.,  4856.,  4896.,  9458.,  9540.,  9622.,  9704.,  9786.,  9868.,  9950., 10032., 10114., 10196., 10278., 10360.,  5026.,  5068.,  5110.,  5152.,  9942., 10028., 10114., 10200., 10286., 10372., 10458., 10544., 10630., 10716., 10802., 10888.,  5276.,  5320.,  5364.,  5408.,  1953.,  1974.,  1995.,  2016.,  2037.,  2058.,  2079.,  2100.,  3991.,  4034.,  4077.,  4120.,  4163.,  4206.,  4249.,  4292.,  4335.,  4378.,  4421.,  4464.,  2134.,  2156.,  2178.,  2200.,  4177.,  4222.,  4267.,  4312.,  4357.,  4402.,  4447.,  4492.,  4537.,  4582.,  4627.,  4672.,  2231.,  2254.,  2277.,  2300.,  4363.,  4410.,  4457.,  4504.,  4551.,  4598.,  4645.,  4692.,  4739.,  4786.,  4833.,  4880.,  2328.,  2352.,  2376.,  2400.,  2766.,  2812.,  2858.,  2904.,  2950.,  2996.,  3042.,  3088.,  5646.,  5740.,  5834.,  5928.,  6022.,  6116.,  6210.,  6304.,  6398.,  6492.,  6586.,  6680.,  3088.,  3136.,  3184.,  3232.,  5906.,  6004.,  6102.,  6200.,  6298.,  6396.,  6494.,  6592.,  6690.,  6788.,  6886.,  6984.,  3226.,  3276.,  3326.,  3376.,  6166.,  6268.,  6370.,  6472.,  6574.,  6676.,  6778.,  6880.,  6982.,  7084.,  7186.,  7288.,  3364.,  3416.,  3468.,  3520.,  4054.,  4100.,  4146.,  4192.,  4238.,  4284.,  4330.,  4376.,  8278.,  8372.,  8466.,  8560.,  8654.,  8748.,  8842.,  8936.,  9030.,  9124.,  9218.,  9312.,  4432.,  4480.,  4528.,  4576.,  8650.,  8748.,  8846.,  8944.,  9042.,  9140.,  9238.,  9336.,  9434.,  9532.,  9630.,  9728.,  4626.,  4676.,  4726.,  4776.,  9022.,  9124.,  9226.,  9328.,  9430.,  9532.,  9634.,  9736.,  9838.,  9940., 10042., 10144.,  4820.,  4872.,  4924.,  4976.,  5342.,  5388.,  5434.,  5480.,  5526.,  5572.,  5618.,  5664., 10910., 11004., 11098., 11192., 11286., 11380., 11474., 11568., 11662., 11756., 11850., 11944.,  5776.,  5824.,  5872.,  5920., 11394., 11492., 11590., 11688., 11786., 11884., 11982., 12080., 12178., 12276., 12374., 12472.,  6026.,  6076.,  6126.,  6176., 11878., 11980., 12082., 12184., 12286., 12388., 12490., 12592., 12694., 12796., 12898., 13000.,  6276.,  6328.,  6380.,  6432.,  2325.,  2350.,  2375.,  2400.,  2425.,  2450.,  2475.,  2500.,  4735.,  4786.,  4837.,  4888.,  4939.,  4990.,  5041.,  5092.,  5143.,  5194.,  5245.,  5296.,  2522.,  2548.,  2574.,  2600.,  4921.,  4974.,  5027.,  5080.,  5133.,  5186.,  5239.,  5292.,  5345.,  5398.,  5451.,  5504.,  2619.,  2646.,  2673.,  2700.,  5107.,  5162.,  5217.,  5272.,  5327.,  5382.,  5437.,  5492.,  5547.,  5602.,  5657.,  5712.,  2716.,  2744.,  2772.,  2800.,  3286.,  3340.,  3394.,  3448.,  3502.,  3556.,  3610.,  3664.,  6686.,  6796.,  6906.,  7016.,  7126.,  7236.,  7346.,  7456.,  7566.,  7676.,  7786.,  7896.,  3640.,  3696.,  3752.,  3808.,  6946.,  7060.,  7174.,  7288.,  7402.,  7516.,  7630.,  7744.,  7858.,  7972.,  8086.,  8200.,  3778.,  3836.,  3894.,  3952.,  7206.,  7324.,  7442.,  7560.,  7678.,  7796.,  7914.,  8032.,  8150.,  8268.,  8386.,  8504.,  3916.,  3976.,  4036.,  4096.,  4798.,  4852.,  4906.,  4960.,  5014.,  5068.,  5122.,  5176.,  9766.,  9876.,  9986., 10096., 10206., 10316., 10426., 10536., 10646., 10756., 10866., 10976.,  5208.,  5264.,  5320.,  5376., 10138., 10252., 10366., 10480., 10594., 10708., 10822., 10936., 11050., 11164., 11278., 11392.,  5402.,  5460.,  5518.,  5576., 10510., 10628., 10746., 10864., 10982., 11100., 11218., 11336., 11454., 11572., 11690., 11808.,  5596.,  5656.,  5716.,  5776.,  6310.,  6364.,  6418.,  6472.,  6526.,  6580.,  6634.,  6688., 12846., 12956., 13066., 13176., 13286., 13396., 13506., 13616., 13726., 13836., 13946., 14056.,  6776.,  6832.,  6888.,  6944., 13330., 13444., 13558., 13672., 13786., 13900., 14014., 14128., 14242., 14356., 14470., 14584.,  7026.,  7084.,  7142.,  7200., 13814., 13932., 14050., 14168., 14286., 14404., 14522., 14640., 14758., 14876., 14994., 15112.,  7276.,  7336.,  7396.,  7456.,  2697.,  2726.,  2755.,  2784.,  2813.,  2842.,  2871.,  2900.,  5479.,  5538.,  5597.,  5656.,  5715.,  5774.,  5833.,  5892.,  5951.,  6010.,  6069.,  6128.,  2910.,  2940.,  2970.,  3000.,  5665.,  5726.,  5787.,  5848.,  5909.,  5970.,  6031.,  6092.,  6153.,  6214.,  6275.,  6336.,  3007.,  3038.,  3069.,  3100.,  5851.,  5914.,  5977.,  6040.,  6103.,  6166.,  6229.,  6292.,  6355.,  6418.,  6481.,  6544.,  3104.,  3136.,  3168.,  3200.,  2145.,  2178.,  2211.,  2244.,  2277.,  2310.,  2343.,  2376.,  4347.,  4414.,  4481.,  4548.,  4615.,  4682.,  4749.,  4816.,  4883.,  4950.,  5017.,  5084.,  2346.,  2380.,  2414.,  2448.,  4477.,  4546.,  4615.,  4684.,  4753.,  4822.,  4891.,  4960.,  5029.,  5098.,  5167.,  5236.,  2415.,  2450.,  2485.,  2520.,  4607.,  4678.,  4749.,  4820.,  4891.,  4962.,  5033.,  5104.,  5175.,  5246.,  5317.,  5388.,  2484.,  2520.,  2556.,  2592.,  3069.,  3102.,  3135.,  3168.,  3201.,  3234.,  3267.,  3300.,  6223.,  6290.,  6357.,  6424.,  6491.,  6558.,  6625.,  6692.,  6759.,  6826.,  6893.,  6960.,  3298.,  3332.,  3366.,  3400.,  6409.,  6478.,  6547.,  6616.,  6685.,  6754.,  6823.,  6892.,  6961.,  7030.,  7099.,  7168.,  3395.,  3430.,  3465.,  3500.,  6595.,  6666.,  6737.,  6808.,  6879.,  6950.,  7021.,  7092.,  7163.,  7234.,  7305.,  7376.,  3492.,  3528.,  3564.,  3600.,  4326.,  4396.,  4466.,  4536.,  4606.,  4676.,  4746.,  4816.,  8766.,  8908.,  9050.,  9192.,  9334.,  9476.,  9618.,  9760.,  9902., 10044., 10186., 10328.,  4744.,  4816.,  4888.,  4960.,  9026.,  9172.,  9318.,  9464.,  9610.,  9756.,  9902., 10048., 10194., 10340., 10486., 10632.,  4882.,  4956.,  5030.,  5104.,  9286.,  9436.,  9586.,  9736.,  9886., 10036., 10186., 10336., 10486., 10636., 10786., 10936.,  5020.,  5096.,  5172.,  5248.,  6286.,  6356.,  6426.,  6496.,  6566.,  6636.,  6706.,  6776., 12742., 12884., 13026., 13168., 13310., 13452., 13594., 13736., 13878., 14020., 14162., 14304.,  6760.,  6832.,  6904.,  6976., 13114., 13260., 13406., 13552., 13698., 13844., 13990., 14136., 14282., 14428., 14574., 14720.,  6954.,  7028.,  7102.,  7176., 13486., 13636., 13786., 13936., 14086., 14236., 14386., 14536., 14686., 14836., 14986., 15136.,  7148.,  7224.,  7300.,  7376.,  8246.,  8316.,  8386.,  8456.,  8526.,  8596.,  8666.,  8736., 16718., 16860., 17002., 17144., 17286., 17428., 17570., 17712., 17854., 17996., 18138., 18280.,  8776.,  8848.,  8920.,  8992., 17202., 17348., 17494., 17640., 17786., 17932., 18078., 18224., 18370., 18516., 18662., 18808.,  9026.,  9100.,  9174.,  9248., 17686., 17836., 17986., 18136., 18286., 18436., 18586., 18736., 18886., 19036., 19186., 19336.,  9276.,  9352.,  9428.,  9504.,  3441.,  3478.,  3515.,  3552.,  3589.,  3626.,  3663.,  3700.,  6967.,  7042.,  7117.,  7192.,  7267.,  7342.,  7417.,  7492.,  7567.,  7642.,  7717.,  7792.,  3686.,  3724.,  3762.,  3800.,  7153.,  7230.,  7307.,  7384.,  7461.,  7538.,  7615.,  7692.,  7769.,  7846.,  7923.,  8000.,  3783.,  3822.,  3861.,  3900.,  7339.,  7418.,  7497.,  7576.,  7655.,  7734.,  7813.,  7892.,  7971.,  8050.,  8129.,  8208.,  3880.,  3920.,  3960.,  4000.,  4846.,  4924.,  5002.,  5080.,  5158.,  5236.,  5314.,  5392.,  9806.,  9964., 10122., 10280., 10438., 10596., 10754., 10912., 11070., 11228., 11386., 11544.,  5296.,  5376.,  5456.,  5536., 10066., 10228., 10390., 10552., 10714., 10876., 11038., 11200., 11362., 11524., 11686., 11848.,  5434.,  5516.,  5598.,  5680., 10326., 10492., 10658., 10824., 10990., 11156., 11322., 11488., 11654., 11820., 11986., 12152.,  5572.,  5656.,  5740.,  5824.,  7030.,  7108.,  7186.,  7264.,  7342.,  7420.,  7498.,  7576., 14230., 14388., 14546., 14704., 14862., 15020., 15178., 15336., 15494., 15652., 15810., 15968.,  7536.,  7616.,  7696.,  7776., 14602., 14764., 14926., 15088., 15250., 15412., 15574., 15736., 15898., 16060., 16222., 16384.,  7730.,  7812.,  7894.,  7976., 14974., 15140., 15306., 15472., 15638., 15804., 15970., 16136., 16302., 16468., 16634., 16800.,  7924.,  8008.,  8092.,  8176.,  9214.,  9292.,  9370.,  9448.,  9526.,  9604.,  9682.,  9760., 18654., 18812., 18970., 19128., 19286., 19444., 19602., 19760., 19918., 20076., 20234., 20392.,  9776.,  9856.,  9936., 10016., 19138., 19300., 19462., 19624., 19786., 19948., 20110., 20272., 20434., 20596., 20758., 20920., 10026., 10108., 10190., 10272., 19622., 19788., 19954., 20120., 20286., 20452., 20618., 20784., 20950., 21116., 21282., 21448., 10276., 10360., 10444., 10528.,  3813.,  3854.,  3895.,  3936.,  3977.,  4018.,  4059.,  4100.,  7711.,  7794.,  7877.,  7960.,  8043.,  8126.,  8209.,  8292.,  8375.,  8458.,  8541.,  8624.,  4074.,  4116.,  4158.,  4200.,  7897.,  7982.,  8067.,  8152.,  8237.,  8322.,  8407.,  8492.,  8577.,  8662.,  8747.,  8832.,  4171.,  4214.,  4257.,  4300.,  8083.,  8170.,  8257.,  8344.,  8431.,  8518.,  8605.,  8692.,  8779.,  8866.,  8953.,  9040.,  4268.,  4312.,  4356.,  4400.,  5366.,  5452.,  5538.,  5624.,  5710.,  5796.,  5882.,  5968., 10846., 11020., 11194., 11368., 11542., 11716., 11890., 12064., 12238., 12412., 12586., 12760.,  5848.,  5936.,  6024.,  6112., 11106., 11284., 11462., 11640., 11818., 11996., 12174., 12352., 12530., 12708., 12886., 13064.,  5986.,  6076.,  6166.,  6256., 11366., 11548., 11730., 11912., 12094., 12276., 12458., 12640., 12822., 13004., 13186., 13368.,  6124.,  6216.,  6308.,  6400.,  7774.,  7860.,  7946.,  8032.,  8118.,  8204.,  8290.,  8376., 15718., 15892., 16066., 16240., 16414., 16588., 16762., 16936., 17110., 17284., 17458., 17632.,  8312.,  8400.,  8488.,  8576., 16090., 16268., 16446., 16624., 16802., 16980., 17158., 17336., 17514., 17692., 17870., 18048.,  8506.,  8596.,  8686.,  8776., 16462., 16644., 16826., 17008., 17190., 17372., 17554., 17736., 17918., 18100., 18282., 18464.,  8700.,  8792.,  8884.,  8976., 10182., 10268., 10354., 10440., 10526., 10612., 10698., 10784., 20590., 20764., 20938., 21112., 21286., 21460., 21634., 21808., 21982., 22156., 22330., 22504., 10776., 10864., 10952., 11040., 21074., 21252., 21430., 21608., 21786., 21964., 22142., 22320., 22498., 22676., 22854., 23032., 11026., 11116., 11206., 11296., 21558., 21740., 21922., 22104., 22286., 22468., 22650., 22832., 23014., 23196., 23378., 23560., 11276., 11368., 11460., 11552.,  4185.,  4230.,  4275.,  4320.,  4365.,  4410.,  4455.,  4500.,  8455.,  8546.,  8637.,  8728.,  8819.,  8910.,  9001.,  9092.,  9183.,  9274.,  9365.,  9456.,  4462.,  4508.,  4554.,  4600.,  8641.,  8734.,  8827.,  8920.,  9013.,  9106.,  9199.,  9292.,  9385.,  9478.,  9571.,  9664.,  4559.,  4606.,  4653.,  4700.,  8827.,  8922.,  9017.,  9112.,  9207.,  9302.,  9397.,  9492.,  9587.,  9682.,  9777.,  9872.,  4656.,  4704.,  4752.,  4800.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x14x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,    9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   19.,   22.,   25.,   28.,   31.,   34.,   37.,   40.,   43.,   46.,   49.,   52.,   26.,   28.,   30.,   32.,   34.,   36.,   38.,   40.,   42.,   44.,   46.,   48.,   50.,   52.,   54.,   56.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,   36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,  103.,  106.,  109.,  112.,  115.,  118.,  121.,  124.,  127.,  130.,  133.,  136.,   82.,   84.,   86.,   88.,   90.,   92.,   94.,   96.,   98.,  100.,  102.,  104.,  106.,  108.,  110.,  112.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,   57.,   58.,   59.,   60.,   61.,   62.,   63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,   72.,  187.,  190.,  193.,  196.,  199.,  202.,  205.,  208.,  211.,  214.,  217.,  220.,  138.,  140.,  142.,  144.,  146.,  148.,  150.,  152.,  154.,  156.,  158.,  160.,  162.,  164.,  166.,  168.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,   85.,   86.,   87.,   88.,   89.,   90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,   99.,  100.,  271.,  274.,  277.,  280.,  283.,  286.,  289.,  292.,  295.,  298.,  301.,  304.,  194.,  196.,  198.,  200.,  202.,  204.,  206.,  208.,  210.,  212.,  214.,  216.,  218.,  220.,  222.,  224.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  116.,  120.,  124.,  128.,  132.,  136.,  140.,  144.,  148.,  152.,  156.,  160.,  164.,  168.,  172.,  176.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  302.,  308.,  314.,  320.,  326.,  332.,  338.,  344.,  350.,  356.,  362.,  368.,  374.,  380.,  386.,  392.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  228.,  232.,  236.,  240.,  244.,  248.,  252.,  256.,  260.,  264.,  268.,  272.,  276.,  280.,  284.,  288.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  470.,  476.,  482.,  488.,  494.,  500.,  506.,  512.,  518.,  524.,  530.,  536.,  542.,  548.,  554.,  560.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  340.,  344.,  348.,  352.,  356.,  360.,  364.,  368.,  372.,  376.,  380.,  384.,  388.,  392.,  396.,  400.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080.,  638.,  644.,  650.,  656.,  662.,  668.,  674.,  680.,  686.,  692.,  698.,  704.,  710.,  716.,  722.,  728.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  255.,  258.,  261.,  264.,  267.,  270.,  273.,  276.,  279.,  282.,  285.,  288.,  291.,  294.,  297.,  300.,  643.,  650.,  657.,  664.,  671.,  678.,  685.,  692.,  699.,  706.,  713.,  720.,  388.,  392.,  396.,  400.,  404.,  408.,  412.,  416.,  420.,  424.,  428.,  432.,  436.,  440.,  444.,  448.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  339.,  342.,  345.,  348.,  351.,  354.,  357.,  360.,  363.,  366.,  369.,  372.,  375.,  378.,  381.,  384.,  839.,  846.,  853.,  860.,  867.,  874.,  881.,  888.,  895.,  902.,  909.,  916.,  500.,  504.,  508.,  512.,  516.,  520.,  524.,  528.,  532.,  536.,  540.,  544.,  548.,  552.,  556.,  560.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  423.,  426.,  429.,  432.,  435.,  438.,  441.,  444.,  447.,  450.,  453.,  456.,  459.,  462.,  465.,  468., 1035., 1042., 1049., 1056., 1063., 1070., 1077., 1084., 1091., 1098., 1105., 1112.,  612.,  616.,  620.,  624.,  628.,  632.,  636.,  640.,  644.,  648.,  652.,  656.,  660.,  664.,  668.,  672.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  507.,  510.,  513.,  516.,  519.,  522.,  525.,  528.,  531.,  534.,  537.,  540.,  543.,  546.,  549.,  552., 1231., 1238., 1245., 1252., 1259., 1266., 1273., 1280., 1287., 1294., 1301., 1308.,  724.,  728.,  732.,  736.,  740.,  744.,  748.,  752.,  756.,  760.,  764.,  768.,  772.,  776.,  780.,  784.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    5.,   10.,   15.,   20.,   25.,   30.,   35.,   40.,   45.,   50.,   55.,   60.,   65.,   70.,   75.,   80.,   91.,  102.,  113.,  124.,  135.,  146.,  157.,  168.,  179.,  190.,  201.,  212.,   78.,   84.,   90.,   96.,  102.,  108.,  114.,  120.,  126.,  132.,  138.,  144.,  150.,  156.,  162.,  168.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  145.,  150.,  155.,  160.,  165.,  170.,  175.,  180.,  185.,  190.,  195.,  200.,  205.,  210.,  215.,  220.,  399.,  410.,  421.,  432.,  443.,  454.,  465.,  476.,  487.,  498.,  509.,  520.,  246.,  252.,  258.,  264.,  270.,  276.,  282.,  288.,  294.,  300.,  306.,  312.,  318.,  324.,  330.,  336.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  285.,  290.,  295.,  300.,  305.,  310.,  315.,  320.,  325.,  330.,  335.,  340.,  345.,  350.,  355.,  360.,  707.,  718.,  729.,  740.,  751.,  762.,  773.,  784.,  795.,  806.,  817.,  828.,  414.,  420.,  426.,  432.,  438.,  444.,  450.,  456.,  462.,  468.,  474.,  480.,  486.,  492.,  498.,  504.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  425.,  430.,  435.,  440.,  445.,  450.,  455.,  460.,  465.,  470.,  475.,  480.,  485.,  490.,  495.,  500., 1015., 1026., 1037., 1048., 1059., 1070., 1081., 1092., 1103., 1114., 1125., 1136.,  582.,  588.,  594.,  600.,  606.,  612.,  618.,  624.,  630.,  636.,  642.,  648.,  654.,  660.,  666.,  672.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  572.,  584.,  596.,  608.,  620.,  632.,  644.,  656.,  668.,  680.,  692.,  704.,  716.,  728.,  740.,  752., 1450., 1476., 1502., 1528., 1554., 1580., 1606., 1632., 1658., 1684., 1710., 1736.,  854.,  868.,  882.,  896.,  910.,  924.,  938.,  952.,  966.,  980.,  994., 1008., 1022., 1036., 1050., 1064.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  908.,  920.,  932.,  944.,  956.,  968.,  980.,  992., 1004., 1016., 1028., 1040., 1052., 1064., 1076., 1088., 2178., 2204., 2230., 2256., 2282., 2308., 2334., 2360., 2386., 2412., 2438., 2464., 1246., 1260., 1274., 1288., 1302., 1316., 1330., 1344., 1358., 1372., 1386., 1400., 1414., 1428., 1442., 1456.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1244., 1256., 1268., 1280., 1292., 1304., 1316., 1328., 1340., 1352., 1364., 1376., 1388., 1400., 1412., 1424., 2906., 2932., 2958., 2984., 3010., 3036., 3062., 3088., 3114., 3140., 3166., 3192., 1638., 1652., 1666., 1680., 1694., 1708., 1722., 1736., 1750., 1764., 1778., 1792., 1806., 1820., 1834., 1848.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  595.,  602.,  609.,  616.,  623.,  630.,  637.,  644.,  651.,  658.,  665.,  672.,  679.,  686.,  693.,  700., 1387., 1402., 1417., 1432., 1447., 1462., 1477., 1492., 1507., 1522., 1537., 1552.,  776.,  784.,  792.,  800.,  808.,  816.,  824.,  832.,  840.,  848.,  856.,  864.,  872.,  880.,  888.,  896.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  791.,  798.,  805.,  812.,  819.,  826.,  833.,  840.,  847.,  854.,  861.,  868.,  875.,  882.,  889.,  896., 1807., 1822., 1837., 1852., 1867., 1882., 1897., 1912., 1927., 1942., 1957., 1972., 1000., 1008., 1016., 1024., 1032., 1040., 1048., 1056., 1064., 1072., 1080., 1088., 1096., 1104., 1112., 1120.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  987.,  994., 1001., 1008., 1015., 1022., 1029., 1036., 1043., 1050., 1057., 1064., 1071., 1078., 1085., 1092., 2227., 2242., 2257., 2272., 2287., 2302., 2317., 2332., 2347., 2362., 2377., 2392., 1224., 1232., 1240., 1248., 1256., 1264., 1272., 1280., 1288., 1296., 1304., 1312., 1320., 1328., 1336., 1344.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1183., 1190., 1197., 1204., 1211., 1218., 1225., 1232., 1239., 1246., 1253., 1260., 1267., 1274., 1281., 1288., 2647., 2662., 2677., 2692., 2707., 2722., 2737., 2752., 2767., 2782., 2797., 2812., 1448., 1456., 1464., 1472., 1480., 1488., 1496., 1504., 1512., 1520., 1528., 1536., 1544., 1552., 1560., 1568.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    9.,   18.,   27.,   36.,   45.,   54.,   63.,   72.,   81.,   90.,   99.,  108.,  117.,  126.,  135.,  144.,  163.,  182.,  201.,  220.,  239.,  258.,  277.,  296.,  315.,  334.,  353.,  372.,  130.,  140.,  150.,  160.,  170.,  180.,  190.,  200.,  210.,  220.,  230.,  240.,  250.,  260.,  270.,  280.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  261.,  270.,  279.,  288.,  297.,  306.,  315.,  324.,  333.,  342.,  351.,  360.,  369.,  378.,  387.,  396.,  695.,  714.,  733.,  752.,  771.,  790.,  809.,  828.,  847.,  866.,  885.,  904.,  410.,  420.,  430.,  440.,  450.,  460.,  470.,  480.,  490.,  500.,  510.,  520.,  530.,  540.,  550.,  560.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  513.,  522.,  531.,  540.,  549.,  558.,  567.,  576.,  585.,  594.,  603.,  612.,  621.,  630.,  639.,  648., 1227., 1246., 1265., 1284., 1303., 1322., 1341., 1360., 1379., 1398., 1417., 1436.,  690.,  700.,  710.,  720.,  730.,  740.,  750.,  760.,  770.,  780.,  790.,  800.,  810.,  820.,  830.,  840.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  765.,  774.,  783.,  792.,  801.,  810.,  819.,  828.,  837.,  846.,  855.,  864.,  873.,  882.,  891.,  900., 1759., 1778., 1797., 1816., 1835., 1854., 1873., 1892., 1911., 1930., 1949., 1968.,  970.,  980.,  990., 1000., 1010., 1020., 1030., 1040., 1050., 1060., 1070., 1080., 1090., 1100., 1110., 1120.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1028., 1048., 1068., 1088., 1108., 1128., 1148., 1168., 1188., 1208., 1228., 1248., 1268., 1288., 1308., 1328., 2490., 2532., 2574., 2616., 2658., 2700., 2742., 2784., 2826., 2868., 2910., 2952., 1406., 1428., 1450., 1472., 1494., 1516., 1538., 1560., 1582., 1604., 1626., 1648., 1670., 1692., 1714., 1736.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1588., 1608., 1628., 1648., 1668., 1688., 1708., 1728., 1748., 1768., 1788., 1808., 1828., 1848., 1868., 1888., 3666., 3708., 3750., 3792., 3834., 3876., 3918., 3960., 4002., 4044., 4086., 4128., 2022., 2044., 2066., 2088., 2110., 2132., 2154., 2176., 2198., 2220., 2242., 2264., 2286., 2308., 2330., 2352.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 2148., 2168., 2188., 2208., 2228., 2248., 2268., 2288., 2308., 2328., 2348., 2368., 2388., 2408., 2428., 2448., 4842., 4884., 4926., 4968., 5010., 5052., 5094., 5136., 5178., 5220., 5262., 5304., 2638., 2660., 2682., 2704., 2726., 2748., 2770., 2792., 2814., 2836., 2858., 2880., 2902., 2924., 2946., 2968.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,  935.,  946.,  957.,  968.,  979.,  990., 1001., 1012., 1023., 1034., 1045., 1056., 1067., 1078., 1089., 1100., 2131., 2154., 2177., 2200., 2223., 2246., 2269., 2292., 2315., 2338., 2361., 2384., 1164., 1176., 1188., 1200., 1212., 1224., 1236., 1248., 1260., 1272., 1284., 1296., 1308., 1320., 1332., 1344.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1243., 1254., 1265., 1276., 1287., 1298., 1309., 1320., 1331., 1342., 1353., 1364., 1375., 1386., 1397., 1408., 2775., 2798., 2821., 2844., 2867., 2890., 2913., 2936., 2959., 2982., 3005., 3028., 1500., 1512., 1524., 1536., 1548., 1560., 1572., 1584., 1596., 1608., 1620., 1632., 1644., 1656., 1668., 1680.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1551., 1562., 1573., 1584., 1595., 1606., 1617., 1628., 1639., 1650., 1661., 1672., 1683., 1694., 1705., 1716., 3419., 3442., 3465., 3488., 3511., 3534., 3557., 3580., 3603., 3626., 3649., 3672., 1836., 1848., 1860., 1872., 1884., 1896., 1908., 1920., 1932., 1944., 1956., 1968., 1980., 1992., 2004., 2016.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0., 1859., 1870., 1881., 1892., 1903., 1914., 1925., 1936., 1947., 1958., 1969., 1980., 1991., 2002., 2013., 2024., 4063., 4086., 4109., 4132., 4155., 4178., 4201., 4224., 4247., 4270., 4293., 4316., 2172., 2184., 2196., 2208., 2220., 2232., 2244., 2256., 2268., 2280., 2292., 2304., 2316., 2328., 2340., 2352.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 4 }};
  const int features = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x14x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,   400.,   420.,   440.,   460.,   480.,   500.,   520.,   540.,   112.,   132.,   152.,   172.,    67.,    81.,    95.,   109.,   668.,   704.,   740.,   776.,   812.,   848.,   884.,   920.,   252.,   288.,   324.,   360.,   105.,   127.,   149.,   171.,   936.,   988.,  1040.,  1092.,  1144.,  1196.,  1248.,  1300.,   392.,   444.,   496.,   548.,   143.,   173.,   203.,   233.,   173.,   179.,   185.,   191.,     5.,    11.,    17.,    23.,   320.,   340.,   360.,   380.,   400.,   420.,   440.,   460.,   480.,   500.,   520.,   540.,    11.,    25.,    39.,    53.,   524.,   560.,   596.,   632.,   668.,   704.,   740.,   776.,   812.,   848.,   884.,   920.,    17.,    39.,    61.,    83.,   728.,   780.,   832.,   884.,   936.,   988.,  1040.,  1092.,  1144.,  1196.,  1248.,  1300.,    23.,    53.,    83.,   113.,   482.,   526.,   570.,   614.,   658.,   702.,   746.,   790.,   912.,  1016.,  1120.,  1224.,  1328.,  1432.,  1536.,  1640.,  1744.,  1848.,  1952.,  2056.,   990.,  1050.,  1110.,  1170.,  1192.,  1328.,  1464.,  1600.,  1736.,  1872.,  2008.,  2144.,  2280.,  2416.,  2552.,  2688.,  1322.,  1398.,  1474.,  1550.,  1472.,  1640.,  1808.,  1976.,  2144.,  2312.,  2480.,  2648.,  2816.,  2984.,  3152.,  3320.,  1654.,  1746.,  1838.,  1930.,   306.,   350.,   394.,   438.,   482.,   526.,   570.,   614.,  2160.,  2264.,  2368.,  2472.,   912.,  1016.,  1120.,  1224.,  1328.,  1432.,  1536.,  1640.,   750.,   810.,   870.,   930.,  2824.,  2960.,  3096.,  3232.,  1192.,  1328.,  1464.,  1600.,  1736.,  1872.,  2008.,  2144.,  1018.,  1094.,  1170.,  1246.,  3488.,  3656.,  3824.,  3992.,  1472.,  1640.,  1808.,  1976.,  2144.,  2312.,  2480.,  2648.,  1286.,  1378.,  1470.,  1562.,   130.,   174.,   218.,   262.,   306.,   350.,   394.,   438.,  1744.,  1848.,  1952.,  2056.,  2160.,  2264.,  2368.,  2472.,   912.,  1016.,  1120.,  1224.,   510.,   570.,   630.,   690.,  2280.,  2416.,  2552.,  2688.,  2824.,  2960.,  3096.,  3232.,  1192.,  1328.,  1464.,  1600.,   714.,   790.,   866.,   942.,  2816.,  2984.,  3152.,  3320.,  3488.,  3656.,  3824.,  3992.,  1472.,  1640.,  1808.,  1976.,   918.,  1010.,  1102.,  1194.,  1093.,  1131.,  1169.,  1207.,    29.,    67.,   105.,   143.,  1136.,  1220.,  1304.,  1388.,  1472.,  1556.,  1640.,  1724.,  1808.,  1892.,  1976.,  2060.,    35.,    81.,   127.,   173.,  1340.,  1440.,  1540.,  1640.,  1740.,  1840.,  1940.,  2040.,  2140.,  2240.,  2340.,  2440.,    41.,    95.,   149.,   203.,  1544.,  1660.,  1776.,  1892.,  2008.,  2124.,  2240.,  2356.,  2472.,  2588.,  2704.,  2820.,    47.,   109.,   171.,   233.,  1554.,  1662.,  1770.,  1878.,  1986.,  2094.,  2202.,  2310.,  2032.,  2264.,  2496.,  2728.,  2960.,  3192.,  3424.,  3656.,  3888.,  4120.,  4352.,  4584.,  2318.,  2442.,  2566.,  2690.,  2312.,  2576.,  2840.,  3104.,  3368.,  3632.,  3896.,  4160.,  4424.,  4688.,  4952.,  5216.,  2650.,  2790.,  2930.,  3070.,  2592.,  2888.,  3184.,  3480.,  3776.,  4072.,  4368.,  4664.,  4960.,  5256.,  5552.,  5848.,  2982.,  3138.,  3294.,  3450.,  1122.,  1230.,  1338.,  1446.,  1554.,  1662.,  1770.,  1878.,  4816.,  5048.,  5280.,  5512.,  2032.,  2264.,  2496.,  2728.,  2960.,  3192.,  3424.,  3656.,  1822.,  1946.,  2070.,  2194.,  5480.,  5744.,  6008.,  6272.,  2312.,  2576.,  2840.,  3104.,  3368.,  3632.,  3896.,  4160.,  2090.,  2230.,  2370.,  2510.,  6144.,  6440.,  6736.,  7032.,  2592.,  2888.,  3184.,  3480.,  3776.,  4072.,  4368.,  4664.,  2358.,  2514.,  2670.,  2826.,   690.,   798.,   906.,  1014.,  1122.,  1230.,  1338.,  1446.,  3888.,  4120.,  4352.,  4584.,  4816.,  5048.,  5280.,  5512.,  2032.,  2264.,  2496.,  2728.,  1326.,  1450.,  1574.,  1698.,  4424.,  4688.,  4952.,  5216.,  5480.,  5744.,  6008.,  6272.,  2312.,  2576.,  2840.,  3104.,  1530.,  1670.,  1810.,  1950.,  4960.,  5256.,  5552.,  5848.,  6144.,  6440.,  6736.,  7032.,  2592.,  2888.,  3184.,  3480.,  1734.,  1890.,  2046.,  2202.,  2013.,  2083.,  2153.,  2223.,    53.,   123.,   193.,   263.,  1952.,  2100.,  2248.,  2396.,  2544.,  2692.,  2840.,  2988.,  3136.,  3284.,  3432.,  3580.,    59.,   137.,   215.,   293.,  2156.,  2320.,  2484.,  2648.,  2812.,  2976.,  3140.,  3304.,  3468.,  3632.,  3796.,  3960.,    65.,   151.,   237.,   323.,  2360.,  2540.,  2720.,  2900.,  3080.,  3260.,  3440.,  3620.,  3800.,  3980.,  4160.,  4340.,    71.,   165.,   259.,   353.,  2626.,  2798.,  2970.,  3142.,  3314.,  3486.,  3658.,  3830.,  3152.,  3512.,  3872.,  4232.,  4592.,  4952.,  5312.,  5672.,  6032.,  6392.,  6752.,  7112.,  3646.,  3834.,  4022.,  4210.,  3432.,  3824.,  4216.,  4608.,  5000.,  5392.,  5784.,  6176.,  6568.,  6960.,  7352.,  7744.,  3978.,  4182.,  4386.,  4590.,  3712.,  4136.,  4560.,  4984.,  5408.,  5832.,  6256.,  6680.,  7104.,  7528.,  7952.,  8376.,  4310.,  4530.,  4750.,  4970.,  1938.,  2110.,  2282.,  2454.,  2626.,  2798.,  2970.,  3142.,  7472.,  7832.,  8192.,  8552.,  3152.,  3512.,  3872.,  4232.,  4592.,  4952.,  5312.,  5672.,  2894.,  3082.,  3270.,  3458.,  8136.,  8528.,  8920.,  9312.,  3432.,  3824.,  4216.,  4608.,  5000.,  5392.,  5784.,  6176.,  3162.,  3366.,  3570.,  3774.,  8800.,  9224.,  9648., 10072.,  3712.,  4136.,  4560.,  4984.,  5408.,  5832.,  6256.,  6680.,  3430.,  3650.,  3870.,  4090.,  1250.,  1422.,  1594.,  1766.,  1938.,  2110.,  2282.,  2454.,  6032.,  6392.,  6752.,  7112.,  7472.,  7832.,  8192.,  8552.,  3152.,  3512.,  3872.,  4232.,  2142.,  2330.,  2518.,  2706.,  6568.,  6960.,  7352.,  7744.,  8136.,  8528.,  8920.,  9312.,  3432.,  3824.,  4216.,  4608.,  2346.,  2550.,  2754.,  2958.,  7104.,  7528.,  7952.,  8376.,  8800.,  9224.,  9648., 10072.,  3712.,  4136.,  4560.,  4984.,  2550.,  2770.,  2990.,  3210.,  2933.,  3035.,  3137.,  3239.,    77.,   179.,   281.,   383.,  2768.,  2980.,  3192.,  3404.,  3616.,  3828.,  4040.,  4252.,  4464.,  4676.,  4888.,  5100.,    83.,   193.,   303.,   413.,  2972.,  3200.,  3428.,  3656.,  3884.,  4112.,  4340.,  4568.,  4796.,  5024.,  5252.,  5480.,    89.,   207.,   325.,   443.,  3176.,  3420.,  3664.,  3908.,  4152.,  4396.,  4640.,  4884.,  5128.,  5372.,  5616.,  5860.,    95.,   221.,   347.,   473.,   101.,   235.,   369.,   503.,   637.,   771.,   905.,  1039.,  4688.,  4964.,  5240.,  5516.,  5792.,  6068.,  6344.,  6620.,  2352.,  2628.,  2904.,  3180.,   675.,   817.,   959.,  1101.,  4956.,  5248.,  5540.,  5832.,  6124.,  6416.,  6708.,  7000.,  2492.,  2784.,  3076.,  3368.,   713.,   863.,  1013.,  1163.,  5224.,  5532.,  5840.,  6148.,  6456.,  6764.,  7072.,  7380.,  2632.,  2940.,  3248.,  3556.,   751.,   909.,  1067.,  1225.,  3853.,  3987.,  4121.,  4255.,   101.,   235.,   369.,   503.,  3584.,  3860.,  4136.,  4412.,  4688.,  4964.,  5240.,  5516.,  5792.,  6068.,  6344.,  6620.,   107.,   249.,   391.,   533.,  3788.,  4080.,  4372.,  4664.,  4956.,  5248.,  5540.,  5832.,  6124.,  6416.,  6708.,  7000.,   113.,   263.,   413.,   563.,  3992.,  4300.,  4608.,  4916.,  5224.,  5532.,  5840.,  6148.,  6456.,  6764.,  7072.,  7380.,   119.,   277.,   435.,   593.,  4770.,  5070.,  5370.,  5670.,  5970.,  6270.,  6570.,  6870.,  5392.,  6008.,  6624.,  7240.,  7856.,  8472.,  9088.,  9704., 10320., 10936., 11552., 12168.,  6302.,  6618.,  6934.,  7250.,  5672.,  6320.,  6968.,  7616.,  8264.,  8912.,  9560., 10208., 10856., 11504., 12152., 12800.,  6634.,  6966.,  7298.,  7630.,  5952.,  6632.,  7312.,  7992.,  8672.,  9352., 10032., 10712., 11392., 12072., 12752., 13432.,  6966.,  7314.,  7662.,  8010.,  3570.,  3870.,  4170.,  4470.,  4770.,  5070.,  5370.,  5670., 12784., 13400., 14016., 14632.,  5392.,  6008.,  6624.,  7240.,  7856.,  8472.,  9088.,  9704.,  5038.,  5354.,  5670.,  5986., 13448., 14096., 14744., 15392.,  5672.,  6320.,  6968.,  7616.,  8264.,  8912.,  9560., 10208.,  5306.,  5638.,  5970.,  6302., 14112., 14792., 15472., 16152.,  5952.,  6632.,  7312.,  7992.,  8672.,  9352., 10032., 10712.,  5574.,  5922.,  6270.,  6618.,  2370.,  2670.,  2970.,  3270.,  3570.,  3870.,  4170.,  4470., 10320., 10936., 11552., 12168., 12784., 13400., 14016., 14632.,  5392.,  6008.,  6624.,  7240.,  3774.,  4090.,  4406.,  4722., 10856., 11504., 12152., 12800., 13448., 14096., 14744., 15392.,  5672.,  6320.,  6968.,  7616.,  3978.,  4310.,  4642.,  4974., 11392., 12072., 12752., 13432., 14112., 14792., 15472., 16152.,  5952.,  6632.,  7312.,  7992.,  4182.,  4530.,  4878.,  5226.,  4773.,  4939.,  5105.,  5271.,   125.,   291.,   457.,   623.,  4400.,  4740.,  5080.,  5420.,  5760.,  6100.,  6440.,  6780.,  7120.,  7460.,  7800.,  8140.,   131.,   305.,   479.,   653.,  4604.,  4960.,  5316.,  5672.,  6028.,  6384.,  6740.,  7096.,  7452.,  7808.,  8164.,  8520.,   137.,   319.,   501.,   683.,  4808.,  5180.,  5552.,  5924.,  6296.,  6668.,  7040.,  7412.,  7784.,  8156.,  8528.,  8900.,   143.,   333.,   523.,   713.,  5842.,  6206.,  6570.,  6934.,  7298.,  7662.,  8026.,  8390.,  6512.,  7256.,  8000.,  8744.,  9488., 10232., 10976., 11720., 12464., 13208., 13952., 14696.,  7630.,  8010.,  8390.,  8770.,  6792.,  7568.,  8344.,  9120.,  9896., 10672., 11448., 12224., 13000., 13776., 14552., 15328.,  7962.,  8358.,  8754.,  9150.,  7072.,  7880.,  8688.,  9496., 10304., 11112., 11920., 12728., 13536., 14344., 15152., 15960.,  8294.,  8706.,  9118.,  9530.,  4386.,  4750.,  5114.,  5478.,  5842.,  6206.,  6570.,  6934., 15440., 16184., 16928., 17672.,  6512.,  7256.,  8000.,  8744.,  9488., 10232., 10976., 11720.,  6110.,  6490.,  6870.,  7250., 16104., 16880., 17656., 18432.,  6792.,  7568.,  8344.,  9120.,  9896., 10672., 11448., 12224.,  6378.,  6774.,  7170.,  7566., 16768., 17576., 18384., 19192.,  7072.,  7880.,  8688.,  9496., 10304., 11112., 11920., 12728.,  6646.,  7058.,  7470.,  7882.,  2930.,  3294.,  3658.,  4022.,  4386.,  4750.,  5114.,  5478., 12464., 13208., 13952., 14696., 15440., 16184., 16928., 17672.,  6512.,  7256.,  8000.,  8744.,  4590.,  4970.,  5350.,  5730., 13000., 13776., 14552., 15328., 16104., 16880., 17656., 18432.,  6792.,  7568.,  8344.,  9120.,  4794.,  5190.,  5586.,  5982., 13536., 14344., 15152., 15960., 16768., 17576., 18384., 19192.,  7072.,  7880.,  8688.,  9496.,  4998.,  5410.,  5822.,  6234.,  5693.,  5891.,  6089.,  6287.,   149.,   347.,   545.,   743.,  5216.,  5620.,  6024.,  6428.,  6832.,  7236.,  7640.,  8044.,  8448.,  8852.,  9256.,  9660.,   155.,   361.,   567.,   773.,  5420.,  5840.,  6260.,  6680.,  7100.,  7520.,  7940.,  8360.,  8780.,  9200.,  9620., 10040.,   161.,   375.,   589.,   803.,  5624.,  6060.,  6496.,  6932.,  7368.,  7804.,  8240.,  8676.,  9112.,  9548.,  9984., 10420.,   167.,   389.,   611.,   833.,  6914.,  7342.,  7770.,  8198.,  8626.,  9054.,  9482.,  9910.,  7632.,  8504.,  9376., 10248., 11120., 11992., 12864., 13736., 14608., 15480., 16352., 17224.,  8958.,  9402.,  9846., 10290.,  7912.,  8816.,  9720., 10624., 11528., 12432., 13336., 14240., 15144., 16048., 16952., 17856.,  9290.,  9750., 10210., 10670.,  8192.,  9128., 10064., 11000., 11936., 12872., 13808., 14744., 15680., 16616., 17552., 18488.,  9622., 10098., 10574., 11050.,  5202.,  5630.,  6058.,  6486.,  6914.,  7342.,  7770.,  8198., 18096., 18968., 19840., 20712.,  7632.,  8504.,  9376., 10248., 11120., 11992., 12864., 13736.,  7182.,  7626.,  8070.,  8514., 18760., 19664., 20568., 21472.,  7912.,  8816.,  9720., 10624., 11528., 12432., 13336., 14240.,  7450.,  7910.,  8370.,  8830., 19424., 20360., 21296., 22232.,  8192.,  9128., 10064., 11000., 11936., 12872., 13808., 14744.,  7718.,  8194.,  8670.,  9146.,  3490.,  3918.,  4346.,  4774.,  5202.,  5630.,  6058.,  6486., 14608., 15480., 16352., 17224., 18096., 18968., 19840., 20712.,  7632.,  8504.,  9376., 10248.,  5406.,  5850.,  6294.,  6738., 15144., 16048., 16952., 17856., 18760., 19664., 20568., 21472.,  7912.,  8816.,  9720., 10624.,  5610.,  6070.,  6530.,  6990., 15680., 16616., 17552., 18488., 19424., 20360., 21296., 22232.,  8192.,  9128., 10064., 11000.,  5814.,  6290.,  6766.,  7242.,  6613.,  6843.,  7073.,  7303.,   173.,   403.,   633.,   863.,  6032.,  6500.,  6968.,  7436.,  7904.,  8372.,  8840.,  9308.,  9776., 10244., 10712., 11180.,   179.,   417.,   655.,   893.,  6236.,  6720.,  7204.,  7688.,  8172.,  8656.,  9140.,  9624., 10108., 10592., 11076., 11560.,   185.,   431.,   677.,   923.,  6440.,  6940.,  7440.,  7940.,  8440.,  8940.,  9440.,  9940., 10440., 10940., 11440., 11940.,   191.,   445.,   699.,   953.,     5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,   400.,   420.,   440.,   460.,   480.,   500.,   520.,   540.,   112.,   132.,   152.,   172.,    67.,    81.,    95.,   109.,   668.,   704.,   740.,   776.,   812.,   848.,   884.,   920.,   252.,   288.,   324.,   360.,   105.,   127.,   149.,   171.,   936.,   988.,  1040.,  1092.,  1144.,  1196.,  1248.,  1300.,   392.,   444.,   496.,   548.,   143.,   173.,   203.,   233.,   173.,   179.,   185.,   191.,     5.,    11.,    17.,    23.,   320.,   340.,   360.,   380.,   400.,   420.,   440.,   460.,   480.,   500.,   520.,   540.,    11.,    25.,    39.,    53.,   524.,   560.,   596.,   632.,   668.,   704.,   740.,   776.,   812.,   848.,   884.,   920.,    17.,    39.,    61.,    83.,   728.,   780.,   832.,   884.,   936.,   988.,  1040.,  1092.,  1144.,  1196.,  1248.,  1300.,    23.,    53.,    83.,   113.,   482.,   526.,   570.,   614.,   658.,   702.,   746.,   790.,   912.,  1016.,  1120.,  1224.,  1328.,  1432.,  1536.,  1640.,  1744.,  1848.,  1952.,  2056.,   990.,  1050.,  1110.,  1170.,  1192.,  1328.,  1464.,  1600.,  1736.,  1872.,  2008.,  2144.,  2280.,  2416.,  2552.,  2688.,  1322.,  1398.,  1474.,  1550.,  1472.,  1640.,  1808.,  1976.,  2144.,  2312.,  2480.,  2648.,  2816.,  2984.,  3152.,  3320.,  1654.,  1746.,  1838.,  1930.,   306.,   350.,   394.,   438.,   482.,   526.,   570.,   614.,  2160.,  2264.,  2368.,  2472.,   912.,  1016.,  1120.,  1224.,  1328.,  1432.,  1536.,  1640.,   750.,   810.,   870.,   930.,  2824.,  2960.,  3096.,  3232.,  1192.,  1328.,  1464.,  1600.,  1736.,  1872.,  2008.,  2144.,  1018.,  1094.,  1170.,  1246.,  3488.,  3656.,  3824.,  3992.,  1472.,  1640.,  1808.,  1976.,  2144.,  2312.,  2480.,  2648.,  1286.,  1378.,  1470.,  1562.,   130.,   174.,   218.,   262.,   306.,   350.,   394.,   438.,  1744.,  1848.,  1952.,  2056.,  2160.,  2264.,  2368.,  2472.,   912.,  1016.,  1120.,  1224.,   510.,   570.,   630.,   690.,  2280.,  2416.,  2552.,  2688.,  2824.,  2960.,  3096.,  3232.,  1192.,  1328.,  1464.,  1600.,   714.,   790.,   866.,   942.,  2816.,  2984.,  3152.,  3320.,  3488.,  3656.,  3824.,  3992.,  1472.,  1640.,  1808.,  1976.,   918.,  1010.,  1102.,  1194.,  1093.,  1131.,  1169.,  1207.,    29.,    67.,   105.,   143.,  1136.,  1220.,  1304.,  1388.,  1472.,  1556.,  1640.,  1724.,  1808.,  1892.,  1976.,  2060.,    35.,    81.,   127.,   173.,  1340.,  1440.,  1540.,  1640.,  1740.,  1840.,  1940.,  2040.,  2140.,  2240.,  2340.,  2440.,    41.,    95.,   149.,   203.,  1544.,  1660.,  1776.,  1892.,  2008.,  2124.,  2240.,  2356.,  2472.,  2588.,  2704.,  2820.,    47.,   109.,   171.,   233.,  1554.,  1662.,  1770.,  1878.,  1986.,  2094.,  2202.,  2310.,  2032.,  2264.,  2496.,  2728.,  2960.,  3192.,  3424.,  3656.,  3888.,  4120.,  4352.,  4584.,  2318.,  2442.,  2566.,  2690.,  2312.,  2576.,  2840.,  3104.,  3368.,  3632.,  3896.,  4160.,  4424.,  4688.,  4952.,  5216.,  2650.,  2790.,  2930.,  3070.,  2592.,  2888.,  3184.,  3480.,  3776.,  4072.,  4368.,  4664.,  4960.,  5256.,  5552.,  5848.,  2982.,  3138.,  3294.,  3450.,  1122.,  1230.,  1338.,  1446.,  1554.,  1662.,  1770.,  1878.,  4816.,  5048.,  5280.,  5512.,  2032.,  2264.,  2496.,  2728.,  2960.,  3192.,  3424.,  3656.,  1822.,  1946.,  2070.,  2194.,  5480.,  5744.,  6008.,  6272.,  2312.,  2576.,  2840.,  3104.,  3368.,  3632.,  3896.,  4160.,  2090.,  2230.,  2370.,  2510.,  6144.,  6440.,  6736.,  7032.,  2592.,  2888.,  3184.,  3480.,  3776.,  4072.,  4368.,  4664.,  2358.,  2514.,  2670.,  2826.,   690.,   798.,   906.,  1014.,  1122.,  1230.,  1338.,  1446.,  3888.,  4120.,  4352.,  4584.,  4816.,  5048.,  5280.,  5512.,  2032.,  2264.,  2496.,  2728.,  1326.,  1450.,  1574.,  1698.,  4424.,  4688.,  4952.,  5216.,  5480.,  5744.,  6008.,  6272.,  2312.,  2576.,  2840.,  3104.,  1530.,  1670.,  1810.,  1950.,  4960.,  5256.,  5552.,  5848.,  6144.,  6440.,  6736.,  7032.,  2592.,  2888.,  3184.,  3480.,  1734.,  1890.,  2046.,  2202.,  2013.,  2083.,  2153.,  2223.,    53.,   123.,   193.,   263.,  1952.,  2100.,  2248.,  2396.,  2544.,  2692.,  2840.,  2988.,  3136.,  3284.,  3432.,  3580.,    59.,   137.,   215.,   293.,  2156.,  2320.,  2484.,  2648.,  2812.,  2976.,  3140.,  3304.,  3468.,  3632.,  3796.,  3960.,    65.,   151.,   237.,   323.,  2360.,  2540.,  2720.,  2900.,  3080.,  3260.,  3440.,  3620.,  3800.,  3980.,  4160.,  4340.,    71.,   165.,   259.,   353.,  2626.,  2798.,  2970.,  3142.,  3314.,  3486.,  3658.,  3830.,  3152.,  3512.,  3872.,  4232.,  4592.,  4952.,  5312.,  5672.,  6032.,  6392.,  6752.,  7112.,  3646.,  3834.,  4022.,  4210.,  3432.,  3824.,  4216.,  4608.,  5000.,  5392.,  5784.,  6176.,  6568.,  6960.,  7352.,  7744.,  3978.,  4182.,  4386.,  4590.,  3712.,  4136.,  4560.,  4984.,  5408.,  5832.,  6256.,  6680.,  7104.,  7528.,  7952.,  8376.,  4310.,  4530.,  4750.,  4970.,  1938.,  2110.,  2282.,  2454.,  2626.,  2798.,  2970.,  3142.,  7472.,  7832.,  8192.,  8552.,  3152.,  3512.,  3872.,  4232.,  4592.,  4952.,  5312.,  5672.,  2894.,  3082.,  3270.,  3458.,  8136.,  8528.,  8920.,  9312.,  3432.,  3824.,  4216.,  4608.,  5000.,  5392.,  5784.,  6176.,  3162.,  3366.,  3570.,  3774.,  8800.,  9224.,  9648., 10072.,  3712.,  4136.,  4560.,  4984.,  5408.,  5832.,  6256.,  6680.,  3430.,  3650.,  3870.,  4090.,  1250.,  1422.,  1594.,  1766.,  1938.,  2110.,  2282.,  2454.,  6032.,  6392.,  6752.,  7112.,  7472.,  7832.,  8192.,  8552.,  3152.,  3512.,  3872.,  4232.,  2142.,  2330.,  2518.,  2706.,  6568.,  6960.,  7352.,  7744.,  8136.,  8528.,  8920.,  9312.,  3432.,  3824.,  4216.,  4608.,  2346.,  2550.,  2754.,  2958.,  7104.,  7528.,  7952.,  8376.,  8800.,  9224.,  9648., 10072.,  3712.,  4136.,  4560.,  4984.,  2550.,  2770.,  2990.,  3210.,  2933.,  3035.,  3137.,  3239.,    77.,   179.,   281.,   383.,  2768.,  2980.,  3192.,  3404.,  3616.,  3828.,  4040.,  4252.,  4464.,  4676.,  4888.,  5100.,    83.,   193.,   303.,   413.,  2972.,  3200.,  3428.,  3656.,  3884.,  4112.,  4340.,  4568.,  4796.,  5024.,  5252.,  5480.,    89.,   207.,   325.,   443.,  3176.,  3420.,  3664.,  3908.,  4152.,  4396.,  4640.,  4884.,  5128.,  5372.,  5616.,  5860.,    95.,   221.,   347.,   473.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 64.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x14x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {    5.,    11.,    17.,    23.,    29.,    35.,    41.,    47.,    53.,    59.,    65.,    71.,    77.,    83.,    89.,    95.,   112.,   132.,   152.,   172.,   192.,   212.,   232.,   252.,   272.,   292.,   312.,   332.,   179.,   193.,   207.,   221.,   235.,   249.,   263.,   277.,   291.,   305.,   319.,   333.,   347.,   361.,   375.,   389.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   173.,   179.,   185.,   191.,   197.,   203.,   209.,   215.,   221.,   227.,   233.,   239.,   245.,   251.,   257.,   263.,   672.,   692.,   712.,   732.,   752.,   772.,   792.,   812.,   832.,   852.,   872.,   892.,   571.,   585.,   599.,   613.,   627.,   641.,   655.,   669.,   683.,   697.,   711.,   725.,   739.,   753.,   767.,   781.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   341.,   347.,   353.,   359.,   365.,   371.,   377.,   383.,   389.,   395.,   401.,   407.,   413.,   419.,   425.,   431.,  1232.,  1252.,  1272.,  1292.,  1312.,  1332.,  1352.,  1372.,  1392.,  1412.,  1432.,  1452.,   963.,   977.,   991.,  1005.,  1019.,  1033.,  1047.,  1061.,  1075.,  1089.,  1103.,  1117.,  1131.,  1145.,  1159.,  1173.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   509.,   515.,   521.,   527.,   533.,   539.,   545.,   551.,   557.,   563.,   569.,   575.,   581.,   587.,   593.,   599.,  1792.,  1812.,  1832.,  1852.,  1872.,  1892.,  1912.,  1932.,  1952.,  1972.,  1992.,  2012.,  1355.,  1369.,  1383.,  1397.,  1411.,  1425.,  1439.,  1453.,  1467.,  1481.,  1495.,  1509.,  1523.,  1537.,  1551.,  1565.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   694.,   722.,   750.,   778.,   806.,   834.,   862.,   890.,   918.,   946.,   974.,  1002.,  1030.,  1058.,  1086.,  1114.,  1976.,  2048.,  2120.,  2192.,  2264.,  2336.,  2408.,  2480.,  2552.,  2624.,  2696.,  2768.,  2130.,  2174.,  2218.,  2262.,   514.,   558.,   602.,   646.,   690.,   734.,   778.,   822.,   866.,   910.,   954.,   998.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   710.,   738.,   766.,   794.,   822.,   850.,   878.,   906.,   934.,   962.,   990.,  1018.,  1046.,  1074.,  1102.,  1130.,  2200.,  2272.,  2344.,  2416.,  2488.,  2560.,  2632.,  2704.,  2776.,  2848.,  2920.,  2992.,  1570.,  1614.,  1658.,  1702.,  1746.,  1790.,  1834.,  1878.,  1922.,  1966.,  2010.,  2054.,  2098.,  2142.,  2186.,  2230.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1494.,  1522.,  1550.,  1578.,  1606.,  1634.,  1662.,  1690.,  1718.,  1746.,  1774.,  1802.,  1830.,  1858.,  1886.,  1914.,  4216.,  4288.,  4360.,  4432.,  4504.,  4576.,  4648.,  4720.,  4792.,  4864.,  4936.,  5008.,  2802.,  2846.,  2890.,  2934.,  2978.,  3022.,  3066.,  3110.,  3154.,  3198.,  3242.,  3286.,  3330.,  3374.,  3418.,  3462.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1865.,  1887.,  1909.,  1931.,  1953.,  1975.,  1997.,  2019.,  2041.,  2063.,  2085.,  2107.,  2129.,  2151.,  2173.,  2195.,  4760.,  4812.,  4864.,  4916.,  4968.,  5020.,  5072.,  5124.,  5176.,  5228.,  5280.,  5332.,  2903.,  2933.,  2963.,  2993.,  3023.,  3053.,  3083.,  3113.,  3143.,  3173.,  3203.,  3233.,  3263.,  3293.,  3323.,  3353.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  2481.,  2503.,  2525.,  2547.,  2569.,  2591.,  2613.,  2635.,  2657.,  2679.,  2701.,  2723.,  2745.,  2767.,  2789.,  2811.,  3400.,  3452.,  3504.,  3556.,  3608.,  3660.,  3712.,  3764.,  3816.,  3868.,  3920.,  3972.,  3743.,  3773.,  3803.,  3833.,    23.,    53.,    83.,   113.,   143.,   173.,   203.,   233.,   263.,   293.,   323.,   353.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   281.,   303.,   325.,   347.,   369.,   391.,   413.,   435.,   457.,   479.,   501.,   523.,   545.,   567.,   589.,   611.,  1016.,  1068.,  1120.,  1172.,  1224.,  1276.,  1328.,  1380.,  1432.,  1484.,  1536.,  1588.,   743.,   773.,   803.,   833.,   863.,   893.,   923.,   953.,   983.,  1013.,  1043.,  1073.,  1103.,  1133.,  1163.,  1193.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   897.,   919.,   941.,   963.,   985.,  1007.,  1029.,  1051.,  1073.,  1095.,  1117.,  1139.,  1161.,  1183.,  1205.,  1227.,  2472.,  2524.,  2576.,  2628.,  2680.,  2732.,  2784.,  2836.,  2888.,  2940.,  2992.,  3044.,  1583.,  1613.,  1643.,  1673.,  1703.,  1733.,  1763.,  1793.,  1823.,  1853.,  1883.,  1913.,  1943.,  1973.,  2003.,  2033.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    29.,    67.,   105.,   143.,   181.,   219.,   257.,   295.,   333.,   371.,   409.,   447.,   485.,   523.,   561.,   599.,   672.,   756.,   840.,   924.,  1008.,  1092.,  1176.,  1260.,  1344.,  1428.,  1512.,  1596.,   587.,   633.,   679.,   725.,   771.,   817.,   863.,   909.,   955.,  1001.,  1047.,  1093.,  1139.,  1185.,  1231.,  1277.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1093.,  1131.,  1169.,  1207.,  1245.,  1283.,  1321.,  1359.,  1397.,  1435.,  1473.,  1511.,  1549.,  1587.,  1625.,  1663.,  3024.,  3108.,  3192.,  3276.,  3360.,  3444.,  3528.,  3612.,  3696.,  3780.,  3864.,  3948.,  1875.,  1921.,  1967.,  2013.,  2059.,  2105.,  2151.,  2197.,  2243.,  2289.,  2335.,  2381.,  2427.,  2473.,  2519.,  2565.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  2157.,  2195.,  2233.,  2271.,  2309.,  2347.,  2385.,  2423.,  2461.,  2499.,  2537.,  2575.,  2613.,  2651.,  2689.,  2727.,  5376.,  5460.,  5544.,  5628.,  5712.,  5796.,  5880.,  5964.,  6048.,  6132.,  6216.,  6300.,  3163.,  3209.,  3255.,  3301.,  3347.,  3393.,  3439.,  3485.,  3531.,  3577.,  3623.,  3669.,  3715.,  3761.,  3807.,  3853.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  3221.,  3259.,  3297.,  3335.,  3373.,  3411.,  3449.,  3487.,  3525.,  3563.,  3601.,  3639.,  3677.,  3715.,  3753.,  3791.,  7728.,  7812.,  7896.,  7980.,  8064.,  8148.,  8232.,  8316.,  8400.,  8484.,  8568.,  8652.,  4451.,  4497.,  4543.,  4589.,  4635.,  4681.,  4727.,  4773.,  4819.,  4865.,  4911.,  4957.,  5003.,  5049.,  5095.,  5141.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  4326.,  4418.,  4510.,  4602.,  4694.,  4786.,  4878.,  4970.,  5062.,  5154.,  5246.,  5338.,  5430.,  5522.,  5614.,  5706.,  6168.,  6368.,  6568.,  6768.,  6968.,  7168.,  7368.,  7568.,  7768.,  7968.,  8168.,  8368.,  6530.,  6638.,  6746.,  6854.,  1074.,  1182.,  1290.,  1398.,  1506.,  1614.,  1722.,  1830.,  1938.,  2046.,  2154.,  2262.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  2038.,  2130.,  2222.,  2314.,  2406.,  2498.,  2590.,  2682.,  2774.,  2866.,  2958.,  3050.,  3142.,  3234.,  3326.,  3418.,  5880.,  6080.,  6280.,  6480.,  6680.,  6880.,  7080.,  7280.,  7480.,  7680.,  7880.,  8080.,  3666.,  3774.,  3882.,  3990.,  4098.,  4206.,  4314.,  4422.,  4530.,  4638.,  4746.,  4854.,  4962.,  5070.,  5178.,  5286.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  4614.,  4706.,  4798.,  4890.,  4982.,  5074.,  5166.,  5258.,  5350.,  5442.,  5534.,  5626.,  5718.,  5810.,  5902.,  5994., 11480., 11680., 11880., 12080., 12280., 12480., 12680., 12880., 13080., 13280., 13480., 13680.,  6690.,  6798.,  6906.,  7014.,  7122.,  7230.,  7338.,  7446.,  7554.,  7662.,  7770.,  7878.,  7986.,  8094.,  8202.,  8310.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  4577.,  4631.,  4685.,  4739.,  4793.,  4847.,  4901.,  4955.,  5009.,  5063.,  5117.,  5171.,  5225.,  5279.,  5333.,  5387., 10696., 10812., 10928., 11044., 11160., 11276., 11392., 11508., 11624., 11740., 11856., 11972.,  5999.,  6061.,  6123.,  6185.,  6247.,  6309.,  6371.,  6433.,  6495.,  6557.,  6619.,  6681.,  6743.,  6805.,  6867.,  6929.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  6089.,  6143.,  6197.,  6251.,  6305.,  6359.,  6413.,  6467.,  6521.,  6575.,  6629.,  6683.,  6737.,  6791.,  6845.,  6899.,  7032.,  7148.,  7264.,  7380.,  7496.,  7612.,  7728.,  7844.,  7960.,  8076.,  8192.,  8308.,  7735.,  7797.,  7859.,  7921.,    47.,   109.,   171.,   233.,   295.,   357.,   419.,   481.,   543.,   605.,   667.,   729.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   689.,   743.,   797.,   851.,   905.,   959.,  1013.,  1067.,  1121.,  1175.,  1229.,  1283.,  1337.,  1391.,  1445.,  1499.,  2344.,  2460.,  2576.,  2692.,  2808.,  2924.,  3040.,  3156.,  3272.,  3388.,  3504.,  3620.,  1535.,  1597.,  1659.,  1721.,  1783.,  1845.,  1907.,  1969.,  2031.,  2093.,  2155.,  2217.,  2279.,  2341.,  2403.,  2465.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  2201.,  2255.,  2309.,  2363.,  2417.,  2471.,  2525.,  2579.,  2633.,  2687.,  2741.,  2795.,  2849.,  2903.,  2957.,  3011.,  5592.,  5708.,  5824.,  5940.,  6056.,  6172.,  6288.,  6404.,  6520.,  6636.,  6752.,  6868.,  3271.,  3333.,  3395.,  3457.,  3519.,  3581.,  3643.,  3705.,  3767.,  3829.,  3891.,  3953.,  4015.,  4077.,  4139.,  4201.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    53.,   123.,   193.,   263.,   333.,   403.,   473.,   543.,   613.,   683.,   753.,   823.,   893.,   963.,  1033.,  1103.,  1232.,  1380.,  1528.,  1676.,  1824.,  1972.,  2120.,  2268.,  2416.,  2564.,  2712.,  2860.,   995.,  1073.,  1151.,  1229.,  1307.,  1385.,  1463.,  1541.,  1619.,  1697.,  1775.,  1853.,  1931.,  2009.,  2087.,  2165.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  2013.,  2083.,  2153.,  2223.,  2293.,  2363.,  2433.,  2503.,  2573.,  2643.,  2713.,  2783.,  2853.,  2923.,  2993.,  3063.,  5376.,  5524.,  5672.,  5820.,  5968.,  6116.,  6264.,  6412.,  6560.,  6708.,  6856.,  7004.,  3179.,  3257.,  3335.,  3413.,  3491.,  3569.,  3647.,  3725.,  3803.,  3881.,  3959.,  4037.,  4115.,  4193.,  4271.,  4349.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  3973.,  4043.,  4113.,  4183.,  4253.,  4323.,  4393.,  4463.,  4533.,  4603.,  4673.,  4743.,  4813.,  4883.,  4953.,  5023.,  9520.,  9668.,  9816.,  9964., 10112., 10260., 10408., 10556., 10704., 10852., 11000., 11148.,  5363.,  5441.,  5519.,  5597.,  5675.,  5753.,  5831.,  5909.,  5987.,  6065.,  6143.,  6221.,  6299.,  6377.,  6455.,  6533.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  5933.,  6003.,  6073.,  6143.,  6213.,  6283.,  6353.,  6423.,  6493.,  6563.,  6633.,  6703.,  6773.,  6843.,  6913.,  6983., 13664., 13812., 13960., 14108., 14256., 14404., 14552., 14700., 14848., 14996., 15144., 15292.,  7547.,  7625.,  7703.,  7781.,  7859.,  7937.,  8015.,  8093.,  8171.,  8249.,  8327.,  8405.,  8483.,  8561.,  8639.,  8717.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  7958.,  8114.,  8270.,  8426.,  8582.,  8738.,  8894.,  9050.,  9206.,  9362.,  9518.,  9674.,  9830.,  9986., 10142., 10298., 10360., 10688., 11016., 11344., 11672., 12000., 12328., 12656., 12984., 13312., 13640., 13968., 10930., 11102., 11274., 11446.,  1634.,  1806.,  1978.,  2150.,  2322.,  2494.,  2666.,  2838.,  3010.,  3182.,  3354.,  3526.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  3366.,  3522.,  3678.,  3834.,  3990.,  4146.,  4302.,  4458.,  4614.,  4770.,  4926.,  5082.,  5238.,  5394.,  5550.,  5706.,  9560.,  9888., 10216., 10544., 10872., 11200., 11528., 11856., 12184., 12512., 12840., 13168.,  5762.,  5934.,  6106.,  6278.,  6450.,  6622.,  6794.,  6966.,  7138.,  7310.,  7482.,  7654.,  7826.,  7998.,  8170.,  8342.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  7734.,  7890.,  8046.,  8202.,  8358.,  8514.,  8670.,  8826.,  8982.,  9138.,  9294.,  9450.,  9606.,  9762.,  9918., 10074., 18744., 19072., 19400., 19728., 20056., 20384., 20712., 21040., 21368., 21696., 22024., 22352., 10578., 10750., 10922., 11094., 11266., 11438., 11610., 11782., 11954., 12126., 12298., 12470., 12642., 12814., 12986., 13158.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  7289.,  7375.,  7461.,  7547.,  7633.,  7719.,  7805.,  7891.,  7977.,  8063.,  8149.,  8235.,  8321.,  8407.,  8493.,  8579., 16632., 16812., 16992., 17172., 17352., 17532., 17712., 17892., 18072., 18252., 18432., 18612.,  9095.,  9189.,  9283.,  9377.,  9471.,  9565.,  9659.,  9753.,  9847.,  9941., 10035., 10129., 10223., 10317., 10411., 10505.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  9697.,  9783.,  9869.,  9955., 10041., 10127., 10213., 10299., 10385., 10471., 10557., 10643., 10729., 10815., 10901., 10987., 10664., 10844., 11024., 11204., 11384., 11564., 11744., 11924., 12104., 12284., 12464., 12644., 11727., 11821., 11915., 12009.,    71.,   165.,   259.,   353.,   447.,   541.,   635.,   729.,   823.,   917.,  1011.,  1105.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1097.,  1183.,  1269.,  1355.,  1441.,  1527.,  1613.,  1699.,  1785.,  1871.,  1957.,  2043.,  2129.,  2215.,  2301.,  2387.,  3672.,  3852.,  4032.,  4212.,  4392.,  4572.,  4752.,  4932.,  5112.,  5292.,  5472.,  5652.,  2327.,  2421.,  2515.,  2609.,  2703.,  2797.,  2891.,  2985.,  3079.,  3173.,  3267.,  3361.,  3455.,  3549.,  3643.,  3737.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  3505.,  3591.,  3677.,  3763.,  3849.,  3935.,  4021.,  4107.,  4193.,  4279.,  4365.,  4451.,  4537.,  4623.,  4709.,  4795.,  8712.,  8892.,  9072.,  9252.,  9432.,  9612.,  9792.,  9972., 10152., 10332., 10512., 10692.,  4959.,  5053.,  5147.,  5241.,  5335.,  5429.,  5523.,  5617.,  5711.,  5805.,  5899.,  5993.,  6087.,  6181.,  6275.,  6369.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 4 }};
  const int features = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 256.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, SAME3x14x14x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,  1268.,  1540.,  1812.,  2084.,   180.,   452.,   724.,   996.,  1268.,  1540.,  1812.,  2084.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   300.,   764.,  1228.,  1692.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   380.,   972.,  1564.,  2156.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   460.,  1180.,  1900.,  2620.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   520.,  1320.,  2120.,  2920.,  3720.,  4520.,  5320.,  6120.,   520.,  1320.,  2120.,  2920.,  2156.,  2620.,  3084.,  3548.,   680.,  1736.,  2792.,  3848.,  4904.,  5960.,  7016.,  8072.,   680.,  1736.,  2792.,  3848.,  2748.,  3340.,  3932.,  4524.,   840.,  2152.,  3464.,  4776.,  6088.,  7400.,  8712., 10024.,   840.,  2152.,  3464.,  4776.,  3340.,  4060.,  4780.,  5500.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  3636.,  4420.,  5204.,  5988.,   500.,  1284.,  2068.,  2852.,  3636.,  4420.,  5204.,  5988.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride4, VALID3x14x14x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {   30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  1374.,  1670.,  1966.,  2262.,   190.,   486.,   782.,  1078.,  3044.,  3700.,  4356.,  5012.,   420.,  1076.,  1732.,  2388.,  3044.,  3700.,  4356.,  5012.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,   230.,   590.,   950.,  1310.,  1670.,  2030.,  2390.,  2750.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,   460.,  1180.,  1900.,  2620.,  3340.,  4060.,  4780.,  5500.,  1000.,  2568.,  4136.,  5704.,  7272.,  8840., 10408., 11976.,  1000.,  2568.,  4136.,  5704.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,  3932.,  4780.,  5628.,  6476.,   540.,  1388.,  2236.,  3084.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   270.,   694.,  1118.,  1542.,  1966.,  2390.,  2814.,  3238.,   580.,  1492.,  2404.,  3316.,  4228.,  5140.,  6052.,  6964.,   580.,  1492.,  2404.,  3316.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,  2262.,  2750.,  3238.,  3726.,   310.,   798.,  1286.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   190.,   230.,   270.,   310.,    30.,    70.,   110.,   150.,   676.,   820.,   964.,  1108.,   100.,   244.,   388.,   532.,   676.,   820.,   964.,  1108.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,    70.,   174.,   278.,   382.,   486.,   590.,   694.,   798.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   140.,   348.,   556.,   764.,   972.,  1180.,  1388.,  1596.,   360.,   904.,  1448.,  1992.,  2536.,  3080.,  3624.,  4168.,   360.,   904.,  1448.,  1992.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,  1564.,  1900.,  2236.,  2572.,   220.,   556.,   892.,  1228.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   110.,   278.,   446.,   614.,   782.,   950.,  1118.,  1286.,   260.,   660.,  1060.,  1460.,  1860.,  2260.,  2660.,  3060.,   260.,   660.,  1060.,  1460.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,  1078.,  1310.,  1542.,  1774.,   150.,   382.,   614.,   846.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.,     0.};
  const std::array<int, 4> in_shape = {{ 3, 14, 14, 4 }};
  const int features = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 32.0;
  this->run_input_backprop_test(exp_out, in_shape, features, padding, max_input_val);
}