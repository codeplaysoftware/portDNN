/*
 * Copyright Codeplay Software Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use these files except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// DO NOT MODIFY BY HAND
// This file was automatically generated by generate_transpose_tests.py.
// Results calculated using Tensorflow v1.13.2.

#include <gtest/gtest.h>
#include <vector>

#include "test/transpose/transpose_fixture.h"
#include "test/types/kernel_data_types.h"
#include "test/types/to_gtest_types.h"

using DataTypeList = sycldnn::types::KernelDataTypes;
using GTestTypeList = sycldnn::types::ToGTestTypes<DataTypeList>::type;

template <typename DataType>
using Tranpose4D = TransposeFixture<DataType>;
TYPED_TEST_SUITE(Tranpose4D, GTestTypeList);
TYPED_TEST(Tranpose4D, T4D_2x2x2x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 2.,  3.,  4.,  5.,  6.,  7.,  8.,
                                         9., 10., 11., 12., 13., 14., 15., 16.};
  const std::vector<int> sizes = {2, 2, 2, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 3.,  2.,  4.,  5.,  7.,  6.,  8.,
                                         9., 11., 10., 12., 13., 15., 14., 16.};
  const std::vector<int> sizes = {2, 2, 2, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 2.,  5.,  6.,  3.,  4.,  7.,  8.,
                                         9., 10., 13., 14., 11., 12., 15., 16.};
  const std::vector<int> sizes = {2, 2, 2, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 5.,  2.,  6.,  3.,  7.,  4.,  8.,
                                         9., 13., 10., 14., 11., 15., 12., 16.};
  const std::vector<int> sizes = {2, 2, 2, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 3.,  5.,  7.,  2.,  4.,  6.,  8.,
                                         9., 11., 13., 15., 10., 12., 14., 16.};
  const std::vector<int> sizes = {2, 2, 2, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 5.,  3.,  7.,  2.,  6.,  4.,  8.,
                                         9., 13., 11., 15., 10., 14., 12., 16.};
  const std::vector<int> sizes = {2, 2, 2, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 2., 3., 4., 9.,  10., 11., 12.,
                                         5., 6., 7., 8., 13., 14., 15., 16.};
  const std::vector<int> sizes = {2, 2, 2, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 3., 2., 4., 9.,  11., 10., 12.,
                                         5., 7., 6., 8., 13., 15., 14., 16.};
  const std::vector<int> sizes = {2, 2, 2, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 2., 9.,  10., 3., 4., 11., 12.,
                                         5., 6., 13., 14., 7., 8., 15., 16.};
  const std::vector<int> sizes = {2, 2, 2, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 9.,  2., 10., 3., 11., 4., 12.,
                                         5., 13., 6., 14., 7., 15., 8., 16.};
  const std::vector<int> sizes = {2, 2, 2, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 3., 9.,  11., 2., 4., 10., 12.,
                                         5., 7., 13., 15., 6., 8., 14., 16.};
  const std::vector<int> sizes = {2, 2, 2, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 9.,  3., 11., 2., 10., 4., 12.,
                                         5., 13., 7., 15., 6., 14., 8., 16.};
  const std::vector<int> sizes = {2, 2, 2, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 2., 5., 6., 9.,  10., 13., 14.,
                                         3., 4., 7., 8., 11., 12., 15., 16.};
  const std::vector<int> sizes = {2, 2, 2, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 5., 2., 6., 9.,  13., 10., 14.,
                                         3., 7., 4., 8., 11., 15., 12., 16.};
  const std::vector<int> sizes = {2, 2, 2, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 2., 9.,  10., 5., 6., 13., 14.,
                                         3., 4., 11., 12., 7., 8., 15., 16.};
  const std::vector<int> sizes = {2, 2, 2, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 9.,  2., 10., 5., 13., 6., 14.,
                                         3., 11., 4., 12., 7., 15., 8., 16.};
  const std::vector<int> sizes = {2, 2, 2, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 5., 9.,  13., 2., 6., 10., 14.,
                                         3., 7., 11., 15., 4., 8., 12., 16.};
  const std::vector<int> sizes = {2, 2, 2, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 9.,  5., 13., 2., 10., 6., 14.,
                                         3., 11., 7., 15., 4., 12., 8., 16.};
  const std::vector<int> sizes = {2, 2, 2, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 3., 5., 7., 9.,  11., 13., 15.,
                                         2., 4., 6., 8., 10., 12., 14., 16.};
  const std::vector<int> sizes = {2, 2, 2, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 5., 3., 7., 9.,  13., 11., 15.,
                                         2., 6., 4., 8., 10., 14., 12., 16.};
  const std::vector<int> sizes = {2, 2, 2, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 3., 9.,  11., 5., 7., 13., 15.,
                                         2., 4., 10., 12., 6., 8., 14., 16.};
  const std::vector<int> sizes = {2, 2, 2, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 9.,  3., 11., 5., 13., 7., 15.,
                                         2., 10., 4., 12., 6., 14., 8., 16.};
  const std::vector<int> sizes = {2, 2, 2, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 5., 9.,  13., 3., 7., 11., 15.,
                                         2., 6., 10., 14., 4., 8., 12., 16.};
  const std::vector<int> sizes = {2, 2, 2, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 9.,  5., 13., 3., 11., 7., 15.,
                                         2., 10., 6., 14., 4., 12., 8., 16.};
  const std::vector<int> sizes = {2, 2, 2, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.};
  const std::vector<int> sizes = {2, 2, 2, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  2.,  5.,  3.,  6.,  7.,  10., 8.,  11., 9.,  12.,
      13., 16., 14., 17., 15., 18., 19., 22., 20., 23., 21., 24.};
  const std::vector<int> sizes = {2, 2, 2, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  7.,  8.,  9.,  4.,  5.,  6.,  10., 11., 12.,
      13., 14., 15., 19., 20., 21., 16., 17., 18., 22., 23., 24.};
  const std::vector<int> sizes = {2, 2, 2, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  2.,  8.,  3.,  9.,  4.,  10., 5.,  11., 6.,  12.,
      13., 19., 14., 20., 15., 21., 16., 22., 17., 23., 18., 24.};
  const std::vector<int> sizes = {2, 2, 2, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 2.,  5.,  8.,  11., 3.,  6.,  9.,  12.,
      13., 16., 19., 22., 14., 17., 20., 23., 15., 18., 21., 24.};
  const std::vector<int> sizes = {2, 2, 2, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  4.,  10., 2.,  8.,  5.,  11., 3.,  9.,  6.,  12.,
      13., 19., 16., 22., 14., 20., 17., 23., 15., 21., 18., 24.};
  const std::vector<int> sizes = {2, 2, 2, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 2., 3., 4.,  5.,  6.,  13., 14., 15., 16., 17., 18.,
      7., 8., 9., 10., 11., 12., 19., 20., 21., 22., 23., 24.};
  const std::vector<int> sizes = {2, 2, 2, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 4.,  2., 5.,  3., 6.,  13., 16., 14., 17., 15., 18.,
      7., 10., 8., 11., 9., 12., 19., 22., 20., 23., 21., 24.};
  const std::vector<int> sizes = {2, 2, 2, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 2., 3., 13., 14., 15., 4.,  5.,  6.,  16., 17., 18.,
      7., 8., 9., 19., 20., 21., 10., 11., 12., 22., 23., 24.};
  const std::vector<int> sizes = {2, 2, 2, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 13., 2.,  14., 3.,  15., 4.,  16.,
                                         5., 17., 6.,  18., 7.,  19., 8.,  20.,
                                         9., 21., 10., 22., 11., 23., 12., 24.};
  const std::vector<int> sizes = {2, 2, 2, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 4.,  13., 16., 2., 5.,  14., 17.,
                                         3., 6.,  15., 18., 7., 10., 19., 22.,
                                         8., 11., 20., 23., 9., 12., 21., 24.};
  const std::vector<int> sizes = {2, 2, 2, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 13., 4.,  16., 2., 14., 5.,  17.,
                                         3., 15., 6.,  18., 7., 19., 10., 22.,
                                         8., 20., 11., 23., 9., 21., 12., 24.};
  const std::vector<int> sizes = {2, 2, 2, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 2., 3., 7.,  8.,  9.,  13., 14., 15., 19., 20., 21.,
      4., 5., 6., 10., 11., 12., 16., 17., 18., 22., 23., 24.};
  const std::vector<int> sizes = {2, 2, 2, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 7.,  2., 8.,  3., 9.,  13., 19., 14., 20., 15., 21.,
      4., 10., 5., 11., 6., 12., 16., 22., 17., 23., 18., 24.};
  const std::vector<int> sizes = {2, 2, 2, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 2., 3., 13., 14., 15., 7.,  8.,  9.,  19., 20., 21.,
      4., 5., 6., 16., 17., 18., 10., 11., 12., 22., 23., 24.};
  const std::vector<int> sizes = {2, 2, 2, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 13., 2.,  14., 3.,  15., 7.,  19.,
                                         8., 20., 9.,  21., 4.,  16., 5.,  17.,
                                         6., 18., 10., 22., 11., 23., 12., 24.};
  const std::vector<int> sizes = {2, 2, 2, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 7.,  13., 19., 2., 8.,  14., 20.,
                                         3., 9.,  15., 21., 4., 10., 16., 22.,
                                         5., 11., 17., 23., 6., 12., 18., 24.};
  const std::vector<int> sizes = {2, 2, 2, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 13., 7.,  19., 2., 14., 8.,  20.,
                                         3., 15., 9.,  21., 4., 16., 10., 22.,
                                         5., 17., 11., 23., 6., 18., 12., 24.};
  const std::vector<int> sizes = {2, 2, 2, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 4., 7., 10., 13., 16., 19., 22.,
                                         2., 5., 8., 11., 14., 17., 20., 23.,
                                         3., 6., 9., 12., 15., 18., 21., 24.};
  const std::vector<int> sizes = {2, 2, 2, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 7., 4., 10., 13., 19., 16., 22.,
                                         2., 8., 5., 11., 14., 20., 17., 23.,
                                         3., 9., 6., 12., 15., 21., 18., 24.};
  const std::vector<int> sizes = {2, 2, 2, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 4., 13., 16., 7., 10., 19., 22.,
                                         2., 5., 14., 17., 8., 11., 20., 23.,
                                         3., 6., 15., 18., 9., 12., 21., 24.};
  const std::vector<int> sizes = {2, 2, 2, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 13., 4., 16., 7., 19., 10., 22.,
                                         2., 14., 5., 17., 8., 20., 11., 23.,
                                         3., 15., 6., 18., 9., 21., 12., 24.};
  const std::vector<int> sizes = {2, 2, 2, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 7., 13., 19., 4., 10., 16., 22.,
                                         2., 8., 14., 20., 5., 11., 17., 23.,
                                         3., 9., 15., 21., 6., 12., 18., 24.};
  const std::vector<int> sizes = {2, 2, 2, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 13., 7., 19., 4., 16., 10., 22.,
                                         2., 14., 8., 20., 5., 17., 11., 23.,
                                         3., 15., 9., 21., 6., 18., 12., 24.};
  const std::vector<int> sizes = {2, 2, 2, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11.,
      12., 13., 14., 15., 16., 17., 18., 19., 20., 21., 22.,
      23., 24., 25., 26., 27., 28., 29., 30., 31., 32.};
  const std::vector<int> sizes = {2, 2, 2, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  2.,  6.,  3.,  7.,  4.,  8.,  9.,  13., 10.,
      14., 11., 15., 12., 16., 17., 21., 18., 22., 19., 23.,
      20., 24., 25., 29., 26., 30., 27., 31., 28., 32.};
  const std::vector<int> sizes = {2, 2, 2, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  9.,  10., 11., 12., 5.,  6.,  7.,
      8.,  13., 14., 15., 16., 17., 18., 19., 20., 25., 26.,
      27., 28., 21., 22., 23., 24., 29., 30., 31., 32.};
  const std::vector<int> sizes = {2, 2, 2, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  2.,  10., 3.,  11., 4.,  12., 5.,  13., 6.,
      14., 7.,  15., 8.,  16., 17., 25., 18., 26., 19., 27.,
      20., 28., 21., 29., 22., 30., 23., 31., 24., 32.};
  const std::vector<int> sizes = {2, 2, 2, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 2.,  6.,  10., 14., 3.,  7.,  11.,
      15., 4.,  8.,  12., 16., 17., 21., 25., 29., 18., 22.,
      26., 30., 19., 23., 27., 31., 20., 24., 28., 32.};
  const std::vector<int> sizes = {2, 2, 2, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  5.,  13., 2.,  10., 6.,  14., 3.,  11., 7.,
      15., 4.,  12., 8.,  16., 17., 25., 21., 29., 18., 26.,
      22., 30., 19., 27., 23., 31., 20., 28., 24., 32.};
  const std::vector<int> sizes = {2, 2, 2, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  17., 18., 19.,
      20., 21., 22., 23., 24., 9.,  10., 11., 12., 13., 14.,
      15., 16., 25., 26., 27., 28., 29., 30., 31., 32.};
  const std::vector<int> sizes = {2, 2, 2, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  2.,  6.,  3.,  7.,  4.,  8.,  17., 21., 18.,
      22., 19., 23., 20., 24., 9.,  13., 10., 14., 11., 15.,
      12., 16., 25., 29., 26., 30., 27., 31., 28., 32.};
  const std::vector<int> sizes = {2, 2, 2, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  17., 18., 19., 20., 5.,  6.,  7.,
      8.,  21., 22., 23., 24., 9.,  10., 11., 12., 25., 26.,
      27., 28., 13., 14., 15., 16., 29., 30., 31., 32.};
  const std::vector<int> sizes = {2, 2, 2, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 2.,  18., 3.,  19., 4.,  20., 5.,  21., 6.,
      22., 7.,  23., 8.,  24., 9.,  25., 10., 26., 11., 27.,
      12., 28., 13., 29., 14., 30., 15., 31., 16., 32.};
  const std::vector<int> sizes = {2, 2, 2, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  17., 21., 2.,  6.,  18., 22., 3.,  7.,  19.,
      23., 4.,  8.,  20., 24., 9.,  13., 25., 29., 10., 14.,
      26., 30., 11., 15., 27., 31., 12., 16., 28., 32.};
  const std::vector<int> sizes = {2, 2, 2, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 5.,  21., 2.,  18., 6.,  22., 3.,  19., 7.,
      23., 4.,  20., 8.,  24., 9.,  25., 13., 29., 10., 26.,
      14., 30., 11., 27., 15., 31., 12., 28., 16., 32.};
  const std::vector<int> sizes = {2, 2, 2, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  9.,  10., 11., 12., 17., 18., 19.,
      20., 25., 26., 27., 28., 5.,  6.,  7.,  8.,  13., 14.,
      15., 16., 21., 22., 23., 24., 29., 30., 31., 32.};
  const std::vector<int> sizes = {2, 2, 2, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  2.,  10., 3.,  11., 4.,  12., 17., 25., 18.,
      26., 19., 27., 20., 28., 5.,  13., 6.,  14., 7.,  15.,
      8.,  16., 21., 29., 22., 30., 23., 31., 24., 32.};
  const std::vector<int> sizes = {2, 2, 2, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  17., 18., 19., 20., 9.,  10., 11.,
      12., 25., 26., 27., 28., 5.,  6.,  7.,  8.,  21., 22.,
      23., 24., 13., 14., 15., 16., 29., 30., 31., 32.};
  const std::vector<int> sizes = {2, 2, 2, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 2.,  18., 3.,  19., 4.,  20., 9.,  25., 10.,
      26., 11., 27., 12., 28., 5.,  21., 6.,  22., 7.,  23.,
      8.,  24., 13., 29., 14., 30., 15., 31., 16., 32.};
  const std::vector<int> sizes = {2, 2, 2, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 9.,  17., 25., 2., 10., 18., 26.,
                                         3., 11., 19., 27., 4., 12., 20., 28.,
                                         5., 13., 21., 29., 6., 14., 22., 30.,
                                         7., 15., 23., 31., 8., 16., 24., 32.};
  const std::vector<int> sizes = {2, 2, 2, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 17., 9.,  25., 2., 18., 10., 26.,
                                         3., 19., 11., 27., 4., 20., 12., 28.,
                                         5., 21., 13., 29., 6., 22., 14., 30.,
                                         7., 23., 15., 31., 8., 24., 16., 32.};
  const std::vector<int> sizes = {2, 2, 2, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 5., 9.,  13., 17., 21., 25., 29.,
                                         2., 6., 10., 14., 18., 22., 26., 30.,
                                         3., 7., 11., 15., 19., 23., 27., 31.,
                                         4., 8., 12., 16., 20., 24., 28., 32.};
  const std::vector<int> sizes = {2, 2, 2, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 9.,  5., 13., 17., 25., 21., 29.,
                                         2., 10., 6., 14., 18., 26., 22., 30.,
                                         3., 11., 7., 15., 19., 27., 23., 31.,
                                         4., 12., 8., 16., 20., 28., 24., 32.};
  const std::vector<int> sizes = {2, 2, 2, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 5., 17., 21., 9.,  13., 25., 29.,
                                         2., 6., 18., 22., 10., 14., 26., 30.,
                                         3., 7., 19., 23., 11., 15., 27., 31.,
                                         4., 8., 20., 24., 12., 16., 28., 32.};
  const std::vector<int> sizes = {2, 2, 2, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 17., 5., 21., 9.,  25., 13., 29.,
                                         2., 18., 6., 22., 10., 26., 14., 30.,
                                         3., 19., 7., 23., 11., 27., 15., 31.,
                                         4., 20., 8., 24., 12., 28., 16., 32.};
  const std::vector<int> sizes = {2, 2, 2, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 9.,  17., 25., 5., 13., 21., 29.,
                                         2., 10., 18., 26., 6., 14., 22., 30.,
                                         3., 11., 19., 27., 7., 15., 23., 31.,
                                         4., 12., 20., 28., 8., 16., 24., 32.};
  const std::vector<int> sizes = {2, 2, 2, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x2x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 17., 9.,  25., 5., 21., 13., 29.,
                                         2., 18., 10., 26., 6., 22., 14., 30.,
                                         3., 19., 11., 27., 7., 23., 15., 31.,
                                         4., 20., 12., 28., 8., 24., 16., 32.};
  const std::vector<int> sizes = {2, 2, 2, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.};
  const std::vector<int> sizes = {2, 2, 3, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  2.,  4.,  6.,  7.,  9.,  11., 8.,  10., 12.,
      13., 15., 17., 14., 16., 18., 19., 21., 23., 20., 22., 24.};
  const std::vector<int> sizes = {2, 2, 3, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  7.,  8.,  3.,  4.,  9.,  10., 5.,  6.,  11., 12.,
      13., 14., 19., 20., 15., 16., 21., 22., 17., 18., 23., 24.};
  const std::vector<int> sizes = {2, 2, 3, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  2.,  8.,  3.,  9.,  4.,  10., 5.,  11., 6.,  12.,
      13., 19., 14., 20., 15., 21., 16., 22., 17., 23., 18., 24.};
  const std::vector<int> sizes = {2, 2, 3, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 2.,  4.,  6.,  8.,  10., 12.,
      13., 15., 17., 19., 21., 23., 14., 16., 18., 20., 22., 24.};
  const std::vector<int> sizes = {2, 2, 3, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  3.,  9.,  5.,  11., 2.,  8.,  4.,  10., 6.,  12.,
      13., 19., 15., 21., 17., 23., 14., 20., 16., 22., 18., 24.};
  const std::vector<int> sizes = {2, 2, 3, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 2., 3., 4.,  5.,  6.,  13., 14., 15., 16., 17., 18.,
      7., 8., 9., 10., 11., 12., 19., 20., 21., 22., 23., 24.};
  const std::vector<int> sizes = {2, 2, 3, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 3., 5.,  2., 4.,  6.,  13., 15., 17., 14., 16., 18.,
      7., 9., 11., 8., 10., 12., 19., 21., 23., 20., 22., 24.};
  const std::vector<int> sizes = {2, 2, 3, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 2.,  13., 14., 3.,  4.,  15., 16.,
                                         5., 6.,  17., 18., 7.,  8.,  19., 20.,
                                         9., 10., 21., 22., 11., 12., 23., 24.};
  const std::vector<int> sizes = {2, 2, 3, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 13., 2.,  14., 3.,  15., 4.,  16.,
                                         5., 17., 6.,  18., 7.,  19., 8.,  20.,
                                         9., 21., 10., 22., 11., 23., 12., 24.};
  const std::vector<int> sizes = {2, 2, 3, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 3., 5.,  13., 15., 17., 2., 4.,  6.,  14., 16., 18.,
      7., 9., 11., 19., 21., 23., 8., 10., 12., 20., 22., 24.};
  const std::vector<int> sizes = {2, 2, 3, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1.,  13., 3., 15., 5.,  17., 2.,  14.,
                                         4.,  16., 6., 18., 7.,  19., 9.,  21.,
                                         11., 23., 8., 20., 10., 22., 12., 24.};
  const std::vector<int> sizes = {2, 2, 3, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 2., 7.,  8.,  13., 14., 19., 20.,
                                         3., 4., 9.,  10., 15., 16., 21., 22.,
                                         5., 6., 11., 12., 17., 18., 23., 24.};
  const std::vector<int> sizes = {2, 2, 3, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 7.,  2., 8.,  13., 19., 14., 20.,
                                         3., 9.,  4., 10., 15., 21., 16., 22.,
                                         5., 11., 6., 12., 17., 23., 18., 24.};
  const std::vector<int> sizes = {2, 2, 3, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 2., 13., 14., 7.,  8.,  19., 20.,
                                         3., 4., 15., 16., 9.,  10., 21., 22.,
                                         5., 6., 17., 18., 11., 12., 23., 24.};
  const std::vector<int> sizes = {2, 2, 3, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 13., 2., 14., 7.,  19., 8.,  20.,
                                         3., 15., 4., 16., 9.,  21., 10., 22.,
                                         5., 17., 6., 18., 11., 23., 12., 24.};
  const std::vector<int> sizes = {2, 2, 3, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 7.,  13., 19., 2., 8.,  14., 20.,
                                         3., 9.,  15., 21., 4., 10., 16., 22.,
                                         5., 11., 17., 23., 6., 12., 18., 24.};
  const std::vector<int> sizes = {2, 2, 3, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 13., 7.,  19., 2., 14., 8.,  20.,
                                         3., 15., 9.,  21., 4., 16., 10., 22.,
                                         5., 17., 11., 23., 6., 18., 12., 24.};
  const std::vector<int> sizes = {2, 2, 3, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 3., 5., 7., 9.,  11., 13., 15., 17., 19., 21., 23.,
      2., 4., 6., 8., 10., 12., 14., 16., 18., 20., 22., 24.};
  const std::vector<int> sizes = {2, 2, 3, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 7., 3., 9.,  5., 11., 13., 19., 15., 21., 17., 23.,
      2., 8., 4., 10., 6., 12., 14., 20., 16., 22., 18., 24.};
  const std::vector<int> sizes = {2, 2, 3, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 3., 5., 13., 15., 17., 7., 9.,  11., 19., 21., 23.,
      2., 4., 6., 14., 16., 18., 8., 10., 12., 20., 22., 24.};
  const std::vector<int> sizes = {2, 2, 3, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 13., 3.,  15., 5.,  17., 7.,  19.,
                                         9., 21., 11., 23., 2.,  14., 4.,  16.,
                                         6., 18., 8.,  20., 10., 22., 12., 24.};
  const std::vector<int> sizes = {2, 2, 3, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 7.,  13., 19., 3., 9.,  15., 21.,
                                         5., 11., 17., 23., 2., 8.,  14., 20.,
                                         4., 10., 16., 22., 6., 12., 18., 24.};
  const std::vector<int> sizes = {2, 2, 3, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 13., 7.,  19., 3., 15., 9.,  21.,
                                         5., 17., 11., 23., 2., 14., 8.,  20.,
                                         4., 16., 10., 22., 6., 18., 12., 24.};
  const std::vector<int> sizes = {2, 2, 3, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.,
      25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.};
  const std::vector<int> sizes = {2, 2, 3, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  2.,  5.,  8.,  3.,  6.,  9.,  10., 13., 16.,
      11., 14., 17., 12., 15., 18., 19., 22., 25., 20., 23., 26.,
      21., 24., 27., 28., 31., 34., 29., 32., 35., 30., 33., 36.};
  const std::vector<int> sizes = {2, 2, 3, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  10., 11., 12., 4.,  5.,  6.,  13., 14., 15.,
      7.,  8.,  9.,  16., 17., 18., 19., 20., 21., 28., 29., 30.,
      22., 23., 24., 31., 32., 33., 25., 26., 27., 34., 35., 36.};
  const std::vector<int> sizes = {2, 2, 3, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 2.,  11., 3.,  12., 4.,  13., 5.,  14., 6.,  15.,
      7.,  16., 8.,  17., 9.,  18., 19., 28., 20., 29., 21., 30.,
      22., 31., 23., 32., 24., 33., 25., 34., 26., 35., 27., 36.};
  const std::vector<int> sizes = {2, 2, 3, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 2.,  5.,  8.,  11., 14., 17.,
      3.,  6.,  9.,  12., 15., 18., 19., 22., 25., 28., 31., 34.,
      20., 23., 26., 29., 32., 35., 21., 24., 27., 30., 33., 36.};
  const std::vector<int> sizes = {2, 2, 3, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 4.,  13., 7.,  16., 2.,  11., 5.,  14., 8.,  17.,
      3.,  12., 6.,  15., 9.,  18., 19., 28., 22., 31., 25., 34.,
      20., 29., 23., 32., 26., 35., 21., 30., 24., 33., 27., 36.};
  const std::vector<int> sizes = {2, 2, 3, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  19., 20., 21.,
      22., 23., 24., 25., 26., 27., 10., 11., 12., 13., 14., 15.,
      16., 17., 18., 28., 29., 30., 31., 32., 33., 34., 35., 36.};
  const std::vector<int> sizes = {2, 2, 3, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  2.,  5.,  8.,  3.,  6.,  9.,  19., 22., 25.,
      20., 23., 26., 21., 24., 27., 10., 13., 16., 11., 14., 17.,
      12., 15., 18., 28., 31., 34., 29., 32., 35., 30., 33., 36.};
  const std::vector<int> sizes = {2, 2, 3, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  19., 20., 21., 4.,  5.,  6.,  22., 23., 24.,
      7.,  8.,  9.,  25., 26., 27., 10., 11., 12., 28., 29., 30.,
      13., 14., 15., 31., 32., 33., 16., 17., 18., 34., 35., 36.};
  const std::vector<int> sizes = {2, 2, 3, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 2.,  20., 3.,  21., 4.,  22., 5.,  23., 6.,  24.,
      7.,  25., 8.,  26., 9.,  27., 10., 28., 11., 29., 12., 30.,
      13., 31., 14., 32., 15., 33., 16., 34., 17., 35., 18., 36.};
  const std::vector<int> sizes = {2, 2, 3, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  19., 22., 25., 2.,  5.,  8.,  20., 23., 26.,
      3.,  6.,  9.,  21., 24., 27., 10., 13., 16., 28., 31., 34.,
      11., 14., 17., 29., 32., 35., 12., 15., 18., 30., 33., 36.};
  const std::vector<int> sizes = {2, 2, 3, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 4.,  22., 7.,  25., 2.,  20., 5.,  23., 8.,  26.,
      3.,  21., 6.,  24., 9.,  27., 10., 28., 13., 31., 16., 34.,
      11., 29., 14., 32., 17., 35., 12., 30., 15., 33., 18., 36.};
  const std::vector<int> sizes = {2, 2, 3, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 2., 3., 10., 11., 12., 19., 20., 21., 28., 29., 30.,
      4., 5., 6., 13., 14., 15., 22., 23., 24., 31., 32., 33.,
      7., 8., 9., 16., 17., 18., 25., 26., 27., 34., 35., 36.};
  const std::vector<int> sizes = {2, 2, 3, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 10., 2., 11., 3., 12., 19., 28., 20., 29., 21., 30.,
      4., 13., 5., 14., 6., 15., 22., 31., 23., 32., 24., 33.,
      7., 16., 8., 17., 9., 18., 25., 34., 26., 35., 27., 36.};
  const std::vector<int> sizes = {2, 2, 3, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 2., 3., 19., 20., 21., 10., 11., 12., 28., 29., 30.,
      4., 5., 6., 22., 23., 24., 13., 14., 15., 31., 32., 33.,
      7., 8., 9., 25., 26., 27., 16., 17., 18., 34., 35., 36.};
  const std::vector<int> sizes = {2, 2, 3, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 19., 2., 20., 3., 21., 10., 28., 11., 29., 12., 30.,
      4., 22., 5., 23., 6., 24., 13., 31., 14., 32., 15., 33.,
      7., 25., 8., 26., 9., 27., 16., 34., 17., 35., 18., 36.};
  const std::vector<int> sizes = {2, 2, 3, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 10., 19., 28., 2., 11., 20., 29., 3., 12., 21., 30.,
      4., 13., 22., 31., 5., 14., 23., 32., 6., 15., 24., 33.,
      7., 16., 25., 34., 8., 17., 26., 35., 9., 18., 27., 36.};
  const std::vector<int> sizes = {2, 2, 3, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 19., 10., 28., 2., 20., 11., 29., 3., 21., 12., 30.,
      4., 22., 13., 31., 5., 23., 14., 32., 6., 24., 15., 33.,
      7., 25., 16., 34., 8., 26., 17., 35., 9., 27., 18., 36.};
  const std::vector<int> sizes = {2, 2, 3, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 4., 7., 10., 13., 16., 19., 22., 25., 28., 31., 34.,
      2., 5., 8., 11., 14., 17., 20., 23., 26., 29., 32., 35.,
      3., 6., 9., 12., 15., 18., 21., 24., 27., 30., 33., 36.};
  const std::vector<int> sizes = {2, 2, 3, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 10., 4., 13., 7., 16., 19., 28., 22., 31., 25., 34.,
      2., 11., 5., 14., 8., 17., 20., 29., 23., 32., 26., 35.,
      3., 12., 6., 15., 9., 18., 21., 30., 24., 33., 27., 36.};
  const std::vector<int> sizes = {2, 2, 3, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 4., 7., 19., 22., 25., 10., 13., 16., 28., 31., 34.,
      2., 5., 8., 20., 23., 26., 11., 14., 17., 29., 32., 35.,
      3., 6., 9., 21., 24., 27., 12., 15., 18., 30., 33., 36.};
  const std::vector<int> sizes = {2, 2, 3, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 19., 4., 22., 7., 25., 10., 28., 13., 31., 16., 34.,
      2., 20., 5., 23., 8., 26., 11., 29., 14., 32., 17., 35.,
      3., 21., 6., 24., 9., 27., 12., 30., 15., 33., 18., 36.};
  const std::vector<int> sizes = {2, 2, 3, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 10., 19., 28., 4., 13., 22., 31., 7., 16., 25., 34.,
      2., 11., 20., 29., 5., 14., 23., 32., 8., 17., 26., 35.,
      3., 12., 21., 30., 6., 15., 24., 33., 9., 18., 27., 36.};
  const std::vector<int> sizes = {2, 2, 3, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 19., 10., 28., 4., 22., 13., 31., 7., 25., 16., 34.,
      2., 20., 11., 29., 5., 23., 14., 32., 8., 26., 17., 35.,
      3., 21., 12., 30., 6., 24., 15., 33., 9., 27., 18., 36.};
  const std::vector<int> sizes = {2, 2, 3, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.,
      25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.,
      37., 38., 39., 40., 41., 42., 43., 44., 45., 46., 47., 48.};
  const std::vector<int> sizes = {2, 2, 3, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  2.,  6.,  10., 3.,  7.,  11., 4.,  8.,  12.,
      13., 17., 21., 14., 18., 22., 15., 19., 23., 16., 20., 24.,
      25., 29., 33., 26., 30., 34., 27., 31., 35., 28., 32., 36.,
      37., 41., 45., 38., 42., 46., 39., 43., 47., 40., 44., 48.};
  const std::vector<int> sizes = {2, 2, 3, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  13., 14., 15., 16., 5.,  6.,  7.,  8.,
      17., 18., 19., 20., 9.,  10., 11., 12., 21., 22., 23., 24.,
      25., 26., 27., 28., 37., 38., 39., 40., 29., 30., 31., 32.,
      41., 42., 43., 44., 33., 34., 35., 36., 45., 46., 47., 48.};
  const std::vector<int> sizes = {2, 2, 3, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 2.,  14., 3.,  15., 4.,  16., 5.,  17., 6.,  18.,
      7.,  19., 8.,  20., 9.,  21., 10., 22., 11., 23., 12., 24.,
      25., 37., 26., 38., 27., 39., 28., 40., 29., 41., 30., 42.,
      31., 43., 32., 44., 33., 45., 34., 46., 35., 47., 36., 48.};
  const std::vector<int> sizes = {2, 2, 3, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 2.,  6.,  10., 14., 18., 22.,
      3.,  7.,  11., 15., 19., 23., 4.,  8.,  12., 16., 20., 24.,
      25., 29., 33., 37., 41., 45., 26., 30., 34., 38., 42., 46.,
      27., 31., 35., 39., 43., 47., 28., 32., 36., 40., 44., 48.};
  const std::vector<int> sizes = {2, 2, 3, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 5.,  17., 9.,  21., 2.,  14., 6.,  18., 10., 22.,
      3.,  15., 7.,  19., 11., 23., 4.,  16., 8.,  20., 12., 24.,
      25., 37., 29., 41., 33., 45., 26., 38., 30., 42., 34., 46.,
      27., 39., 31., 43., 35., 47., 28., 40., 32., 44., 36., 48.};
  const std::vector<int> sizes = {2, 2, 3, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.,
      37., 38., 39., 40., 41., 42., 43., 44., 45., 46., 47., 48.};
  const std::vector<int> sizes = {2, 2, 3, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  2.,  6.,  10., 3.,  7.,  11., 4.,  8.,  12.,
      25., 29., 33., 26., 30., 34., 27., 31., 35., 28., 32., 36.,
      13., 17., 21., 14., 18., 22., 15., 19., 23., 16., 20., 24.,
      37., 41., 45., 38., 42., 46., 39., 43., 47., 40., 44., 48.};
  const std::vector<int> sizes = {2, 2, 3, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  25., 26., 27., 28., 5.,  6.,  7.,  8.,
      29., 30., 31., 32., 9.,  10., 11., 12., 33., 34., 35., 36.,
      13., 14., 15., 16., 37., 38., 39., 40., 17., 18., 19., 20.,
      41., 42., 43., 44., 21., 22., 23., 24., 45., 46., 47., 48.};
  const std::vector<int> sizes = {2, 2, 3, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 2.,  26., 3.,  27., 4.,  28., 5.,  29., 6.,  30.,
      7.,  31., 8.,  32., 9.,  33., 10., 34., 11., 35., 12., 36.,
      13., 37., 14., 38., 15., 39., 16., 40., 17., 41., 18., 42.,
      19., 43., 20., 44., 21., 45., 22., 46., 23., 47., 24., 48.};
  const std::vector<int> sizes = {2, 2, 3, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  25., 29., 33., 2.,  6.,  10., 26., 30., 34.,
      3.,  7.,  11., 27., 31., 35., 4.,  8.,  12., 28., 32., 36.,
      13., 17., 21., 37., 41., 45., 14., 18., 22., 38., 42., 46.,
      15., 19., 23., 39., 43., 47., 16., 20., 24., 40., 44., 48.};
  const std::vector<int> sizes = {2, 2, 3, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 5.,  29., 9.,  33., 2.,  26., 6.,  30., 10., 34.,
      3.,  27., 7.,  31., 11., 35., 4.,  28., 8.,  32., 12., 36.,
      13., 37., 17., 41., 21., 45., 14., 38., 18., 42., 22., 46.,
      15., 39., 19., 43., 23., 47., 16., 40., 20., 44., 24., 48.};
  const std::vector<int> sizes = {2, 2, 3, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  13., 14., 15., 16., 25., 26., 27., 28.,
      37., 38., 39., 40., 5.,  6.,  7.,  8.,  17., 18., 19., 20.,
      29., 30., 31., 32., 41., 42., 43., 44., 9.,  10., 11., 12.,
      21., 22., 23., 24., 33., 34., 35., 36., 45., 46., 47., 48.};
  const std::vector<int> sizes = {2, 2, 3, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 2.,  14., 3.,  15., 4.,  16., 25., 37., 26., 38.,
      27., 39., 28., 40., 5.,  17., 6.,  18., 7.,  19., 8.,  20.,
      29., 41., 30., 42., 31., 43., 32., 44., 9.,  21., 10., 22.,
      11., 23., 12., 24., 33., 45., 34., 46., 35., 47., 36., 48.};
  const std::vector<int> sizes = {2, 2, 3, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  25., 26., 27., 28., 13., 14., 15., 16.,
      37., 38., 39., 40., 5.,  6.,  7.,  8.,  29., 30., 31., 32.,
      17., 18., 19., 20., 41., 42., 43., 44., 9.,  10., 11., 12.,
      33., 34., 35., 36., 21., 22., 23., 24., 45., 46., 47., 48.};
  const std::vector<int> sizes = {2, 2, 3, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 2.,  26., 3.,  27., 4.,  28., 13., 37., 14., 38.,
      15., 39., 16., 40., 5.,  29., 6.,  30., 7.,  31., 8.,  32.,
      17., 41., 18., 42., 19., 43., 20., 44., 9.,  33., 10., 34.,
      11., 35., 12., 36., 21., 45., 22., 46., 23., 47., 24., 48.};
  const std::vector<int> sizes = {2, 2, 3, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 2.,  14., 26., 38., 3.,  15., 27., 39.,
      4.,  16., 28., 40., 5.,  17., 29., 41., 6.,  18., 30., 42.,
      7.,  19., 31., 43., 8.,  20., 32., 44., 9.,  21., 33., 45.,
      10., 22., 34., 46., 11., 23., 35., 47., 12., 24., 36., 48.};
  const std::vector<int> sizes = {2, 2, 3, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 13., 37., 2.,  26., 14., 38., 3.,  27., 15., 39.,
      4.,  28., 16., 40., 5.,  29., 17., 41., 6.,  30., 18., 42.,
      7.,  31., 19., 43., 8.,  32., 20., 44., 9.,  33., 21., 45.,
      10., 34., 22., 46., 11., 35., 23., 47., 12., 36., 24., 48.};
  const std::vector<int> sizes = {2, 2, 3, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 5., 9.,  13., 17., 21., 25., 29., 33., 37., 41., 45.,
      2., 6., 10., 14., 18., 22., 26., 30., 34., 38., 42., 46.,
      3., 7., 11., 15., 19., 23., 27., 31., 35., 39., 43., 47.,
      4., 8., 12., 16., 20., 24., 28., 32., 36., 40., 44., 48.};
  const std::vector<int> sizes = {2, 2, 3, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 13., 5., 17., 9.,  21., 25., 37., 29., 41., 33., 45.,
      2., 14., 6., 18., 10., 22., 26., 38., 30., 42., 34., 46.,
      3., 15., 7., 19., 11., 23., 27., 39., 31., 43., 35., 47.,
      4., 16., 8., 20., 12., 24., 28., 40., 32., 44., 36., 48.};
  const std::vector<int> sizes = {2, 2, 3, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 5., 9.,  25., 29., 33., 13., 17., 21., 37., 41., 45.,
      2., 6., 10., 26., 30., 34., 14., 18., 22., 38., 42., 46.,
      3., 7., 11., 27., 31., 35., 15., 19., 23., 39., 43., 47.,
      4., 8., 12., 28., 32., 36., 16., 20., 24., 40., 44., 48.};
  const std::vector<int> sizes = {2, 2, 3, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 25., 5., 29., 9.,  33., 13., 37., 17., 41., 21., 45.,
      2., 26., 6., 30., 10., 34., 14., 38., 18., 42., 22., 46.,
      3., 27., 7., 31., 11., 35., 15., 39., 19., 43., 23., 47.,
      4., 28., 8., 32., 12., 36., 16., 40., 20., 44., 24., 48.};
  const std::vector<int> sizes = {2, 2, 3, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 13., 25., 37., 5., 17., 29., 41., 9.,  21., 33., 45.,
      2., 14., 26., 38., 6., 18., 30., 42., 10., 22., 34., 46.,
      3., 15., 27., 39., 7., 19., 31., 43., 11., 23., 35., 47.,
      4., 16., 28., 40., 8., 20., 32., 44., 12., 24., 36., 48.};
  const std::vector<int> sizes = {2, 2, 3, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x3x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 25., 13., 37., 5., 29., 17., 41., 9.,  33., 21., 45.,
      2., 26., 14., 38., 6., 30., 18., 42., 10., 34., 22., 46.,
      3., 27., 15., 39., 7., 31., 19., 43., 11., 35., 23., 47.,
      4., 28., 16., 40., 8., 32., 20., 44., 12., 36., 24., 48.};
  const std::vector<int> sizes = {2, 2, 3, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11.,
      12., 13., 14., 15., 16., 17., 18., 19., 20., 21., 22.,
      23., 24., 25., 26., 27., 28., 29., 30., 31., 32.};
  const std::vector<int> sizes = {2, 2, 4, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  2.,  4.,  6.,  8.,  9.,  11., 13.,
      15., 10., 12., 14., 16., 17., 19., 21., 23., 18., 20.,
      22., 24., 25., 27., 29., 31., 26., 28., 30., 32.};
  const std::vector<int> sizes = {2, 2, 4, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  9.,  10., 3.,  4.,  11., 12., 5.,  6.,  13.,
      14., 7.,  8.,  15., 16., 17., 18., 25., 26., 19., 20.,
      27., 28., 21., 22., 29., 30., 23., 24., 31., 32.};
  const std::vector<int> sizes = {2, 2, 4, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  2.,  10., 3.,  11., 4.,  12., 5.,  13., 6.,
      14., 7.,  15., 8.,  16., 17., 25., 18., 26., 19., 27.,
      20., 28., 21., 29., 22., 30., 23., 31., 24., 32.};
  const std::vector<int> sizes = {2, 2, 4, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 2.,  4.,  6.,
      8.,  10., 12., 14., 16., 17., 19., 21., 23., 25., 27.,
      29., 31., 18., 20., 22., 24., 26., 28., 30., 32.};
  const std::vector<int> sizes = {2, 2, 4, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  3.,  11., 5.,  13., 7.,  15., 2.,  10., 4.,
      12., 6.,  14., 8.,  16., 17., 25., 19., 27., 21., 29.,
      23., 31., 18., 26., 20., 28., 22., 30., 24., 32.};
  const std::vector<int> sizes = {2, 2, 4, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  17., 18., 19.,
      20., 21., 22., 23., 24., 9.,  10., 11., 12., 13., 14.,
      15., 16., 25., 26., 27., 28., 29., 30., 31., 32.};
  const std::vector<int> sizes = {2, 2, 4, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  2.,  4.,  6.,  8.,  17., 19., 21.,
      23., 18., 20., 22., 24., 9.,  11., 13., 15., 10., 12.,
      14., 16., 25., 27., 29., 31., 26., 28., 30., 32.};
  const std::vector<int> sizes = {2, 2, 4, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  17., 18., 3.,  4.,  19., 20., 5.,  6.,  21.,
      22., 7.,  8.,  23., 24., 9.,  10., 25., 26., 11., 12.,
      27., 28., 13., 14., 29., 30., 15., 16., 31., 32.};
  const std::vector<int> sizes = {2, 2, 4, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 2.,  18., 3.,  19., 4.,  20., 5.,  21., 6.,
      22., 7.,  23., 8.,  24., 9.,  25., 10., 26., 11., 27.,
      12., 28., 13., 29., 14., 30., 15., 31., 16., 32.};
  const std::vector<int> sizes = {2, 2, 4, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  17., 19., 21., 23., 2.,  4.,  6.,
      8.,  18., 20., 22., 24., 9.,  11., 13., 15., 25., 27.,
      29., 31., 10., 12., 14., 16., 26., 28., 30., 32.};
  const std::vector<int> sizes = {2, 2, 4, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 3.,  19., 5.,  21., 7.,  23., 2.,  18., 4.,
      20., 6.,  22., 8.,  24., 9.,  25., 11., 27., 13., 29.,
      15., 31., 10., 26., 12., 28., 14., 30., 16., 32.};
  const std::vector<int> sizes = {2, 2, 4, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 2., 9.,  10., 17., 18., 25., 26.,
                                         3., 4., 11., 12., 19., 20., 27., 28.,
                                         5., 6., 13., 14., 21., 22., 29., 30.,
                                         7., 8., 15., 16., 23., 24., 31., 32.};
  const std::vector<int> sizes = {2, 2, 4, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 9.,  2., 10., 17., 25., 18., 26.,
                                         3., 11., 4., 12., 19., 27., 20., 28.,
                                         5., 13., 6., 14., 21., 29., 22., 30.,
                                         7., 15., 8., 16., 23., 31., 24., 32.};
  const std::vector<int> sizes = {2, 2, 4, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 2., 17., 18., 9.,  10., 25., 26.,
                                         3., 4., 19., 20., 11., 12., 27., 28.,
                                         5., 6., 21., 22., 13., 14., 29., 30.,
                                         7., 8., 23., 24., 15., 16., 31., 32.};
  const std::vector<int> sizes = {2, 2, 4, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 17., 2., 18., 9.,  25., 10., 26.,
                                         3., 19., 4., 20., 11., 27., 12., 28.,
                                         5., 21., 6., 22., 13., 29., 14., 30.,
                                         7., 23., 8., 24., 15., 31., 16., 32.};
  const std::vector<int> sizes = {2, 2, 4, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 9.,  17., 25., 2., 10., 18., 26.,
                                         3., 11., 19., 27., 4., 12., 20., 28.,
                                         5., 13., 21., 29., 6., 14., 22., 30.,
                                         7., 15., 23., 31., 8., 16., 24., 32.};
  const std::vector<int> sizes = {2, 2, 4, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 17., 9.,  25., 2., 18., 10., 26.,
                                         3., 19., 11., 27., 4., 20., 12., 28.,
                                         5., 21., 13., 29., 6., 22., 14., 30.,
                                         7., 23., 15., 31., 8., 24., 16., 32.};
  const std::vector<int> sizes = {2, 2, 4, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21.,
      23., 25., 27., 29., 31., 2.,  4.,  6.,  8.,  10., 12.,
      14., 16., 18., 20., 22., 24., 26., 28., 30., 32.};
  const std::vector<int> sizes = {2, 2, 4, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  3.,  11., 5.,  13., 7.,  15., 17., 25., 19.,
      27., 21., 29., 23., 31., 2.,  10., 4.,  12., 6.,  14.,
      8.,  16., 18., 26., 20., 28., 22., 30., 24., 32.};
  const std::vector<int> sizes = {2, 2, 4, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  17., 19., 21., 23., 9.,  11., 13.,
      15., 25., 27., 29., 31., 2.,  4.,  6.,  8.,  18., 20.,
      22., 24., 10., 12., 14., 16., 26., 28., 30., 32.};
  const std::vector<int> sizes = {2, 2, 4, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 3.,  19., 5.,  21., 7.,  23., 9.,  25., 11.,
      27., 13., 29., 15., 31., 2.,  18., 4.,  20., 6.,  22.,
      8.,  24., 10., 26., 12., 28., 14., 30., 16., 32.};
  const std::vector<int> sizes = {2, 2, 4, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 9.,  17., 25., 3., 11., 19., 27.,
                                         5., 13., 21., 29., 7., 15., 23., 31.,
                                         2., 10., 18., 26., 4., 12., 20., 28.,
                                         6., 14., 22., 30., 8., 16., 24., 32.};
  const std::vector<int> sizes = {2, 2, 4, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 17., 9.,  25., 3., 19., 11., 27.,
                                         5., 21., 13., 29., 7., 23., 15., 31.,
                                         2., 18., 10., 26., 4., 20., 12., 28.,
                                         6., 22., 14., 30., 8., 24., 16., 32.};
  const std::vector<int> sizes = {2, 2, 4, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.,
      25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.,
      37., 38., 39., 40., 41., 42., 43., 44., 45., 46., 47., 48.};
  const std::vector<int> sizes = {2, 2, 4, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 2.,  5.,  8.,  11., 3.,  6.,  9.,  12.,
      13., 16., 19., 22., 14., 17., 20., 23., 15., 18., 21., 24.,
      25., 28., 31., 34., 26., 29., 32., 35., 27., 30., 33., 36.,
      37., 40., 43., 46., 38., 41., 44., 47., 39., 42., 45., 48.};
  const std::vector<int> sizes = {2, 2, 4, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  13., 14., 15., 4.,  5.,  6.,  16., 17., 18.,
      7.,  8.,  9.,  19., 20., 21., 10., 11., 12., 22., 23., 24.,
      25., 26., 27., 37., 38., 39., 28., 29., 30., 40., 41., 42.,
      31., 32., 33., 43., 44., 45., 34., 35., 36., 46., 47., 48.};
  const std::vector<int> sizes = {2, 2, 4, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 2.,  14., 3.,  15., 4.,  16., 5.,  17., 6.,  18.,
      7.,  19., 8.,  20., 9.,  21., 10., 22., 11., 23., 12., 24.,
      25., 37., 26., 38., 27., 39., 28., 40., 29., 41., 30., 42.,
      31., 43., 32., 44., 33., 45., 34., 46., 35., 47., 36., 48.};
  const std::vector<int> sizes = {2, 2, 4, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 2.,  5.,  8.,  11.,
      14., 17., 20., 23., 3.,  6.,  9.,  12., 15., 18., 21., 24.,
      25., 28., 31., 34., 37., 40., 43., 46., 26., 29., 32., 35.,
      38., 41., 44., 47., 27., 30., 33., 36., 39., 42., 45., 48.};
  const std::vector<int> sizes = {2, 2, 4, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 4.,  16., 7.,  19., 10., 22., 2.,  14., 5.,  17.,
      8.,  20., 11., 23., 3.,  15., 6.,  18., 9.,  21., 12., 24.,
      25., 37., 28., 40., 31., 43., 34., 46., 26., 38., 29., 41.,
      32., 44., 35., 47., 27., 39., 30., 42., 33., 45., 36., 48.};
  const std::vector<int> sizes = {2, 2, 4, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.,
      37., 38., 39., 40., 41., 42., 43., 44., 45., 46., 47., 48.};
  const std::vector<int> sizes = {2, 2, 4, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 2.,  5.,  8.,  11., 3.,  6.,  9.,  12.,
      25., 28., 31., 34., 26., 29., 32., 35., 27., 30., 33., 36.,
      13., 16., 19., 22., 14., 17., 20., 23., 15., 18., 21., 24.,
      37., 40., 43., 46., 38., 41., 44., 47., 39., 42., 45., 48.};
  const std::vector<int> sizes = {2, 2, 4, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  25., 26., 27., 4.,  5.,  6.,  28., 29., 30.,
      7.,  8.,  9.,  31., 32., 33., 10., 11., 12., 34., 35., 36.,
      13., 14., 15., 37., 38., 39., 16., 17., 18., 40., 41., 42.,
      19., 20., 21., 43., 44., 45., 22., 23., 24., 46., 47., 48.};
  const std::vector<int> sizes = {2, 2, 4, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 2.,  26., 3.,  27., 4.,  28., 5.,  29., 6.,  30.,
      7.,  31., 8.,  32., 9.,  33., 10., 34., 11., 35., 12., 36.,
      13., 37., 14., 38., 15., 39., 16., 40., 17., 41., 18., 42.,
      19., 43., 20., 44., 21., 45., 22., 46., 23., 47., 24., 48.};
  const std::vector<int> sizes = {2, 2, 4, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 25., 28., 31., 34., 2.,  5.,  8.,  11.,
      26., 29., 32., 35., 3.,  6.,  9.,  12., 27., 30., 33., 36.,
      13., 16., 19., 22., 37., 40., 43., 46., 14., 17., 20., 23.,
      38., 41., 44., 47., 15., 18., 21., 24., 39., 42., 45., 48.};
  const std::vector<int> sizes = {2, 2, 4, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 4.,  28., 7.,  31., 10., 34., 2.,  26., 5.,  29.,
      8.,  32., 11., 35., 3.,  27., 6.,  30., 9.,  33., 12., 36.,
      13., 37., 16., 40., 19., 43., 22., 46., 14., 38., 17., 41.,
      20., 44., 23., 47., 15., 39., 18., 42., 21., 45., 24., 48.};
  const std::vector<int> sizes = {2, 2, 4, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  13., 14., 15., 25., 26., 27., 37., 38., 39.,
      4.,  5.,  6.,  16., 17., 18., 28., 29., 30., 40., 41., 42.,
      7.,  8.,  9.,  19., 20., 21., 31., 32., 33., 43., 44., 45.,
      10., 11., 12., 22., 23., 24., 34., 35., 36., 46., 47., 48.};
  const std::vector<int> sizes = {2, 2, 4, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 2.,  14., 3.,  15., 25., 37., 26., 38., 27., 39.,
      4.,  16., 5.,  17., 6.,  18., 28., 40., 29., 41., 30., 42.,
      7.,  19., 8.,  20., 9.,  21., 31., 43., 32., 44., 33., 45.,
      10., 22., 11., 23., 12., 24., 34., 46., 35., 47., 36., 48.};
  const std::vector<int> sizes = {2, 2, 4, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  25., 26., 27., 13., 14., 15., 37., 38., 39.,
      4.,  5.,  6.,  28., 29., 30., 16., 17., 18., 40., 41., 42.,
      7.,  8.,  9.,  31., 32., 33., 19., 20., 21., 43., 44., 45.,
      10., 11., 12., 34., 35., 36., 22., 23., 24., 46., 47., 48.};
  const std::vector<int> sizes = {2, 2, 4, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 2.,  26., 3.,  27., 13., 37., 14., 38., 15., 39.,
      4.,  28., 5.,  29., 6.,  30., 16., 40., 17., 41., 18., 42.,
      7.,  31., 8.,  32., 9.,  33., 19., 43., 20., 44., 21., 45.,
      10., 34., 11., 35., 12., 36., 22., 46., 23., 47., 24., 48.};
  const std::vector<int> sizes = {2, 2, 4, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 2.,  14., 26., 38., 3.,  15., 27., 39.,
      4.,  16., 28., 40., 5.,  17., 29., 41., 6.,  18., 30., 42.,
      7.,  19., 31., 43., 8.,  20., 32., 44., 9.,  21., 33., 45.,
      10., 22., 34., 46., 11., 23., 35., 47., 12., 24., 36., 48.};
  const std::vector<int> sizes = {2, 2, 4, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 13., 37., 2.,  26., 14., 38., 3.,  27., 15., 39.,
      4.,  28., 16., 40., 5.,  29., 17., 41., 6.,  30., 18., 42.,
      7.,  31., 19., 43., 8.,  32., 20., 44., 9.,  33., 21., 45.,
      10., 34., 22., 46., 11., 35., 23., 47., 12., 36., 24., 48.};
  const std::vector<int> sizes = {2, 2, 4, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 28., 31., 34.,
      37., 40., 43., 46., 2.,  5.,  8.,  11., 14., 17., 20., 23.,
      26., 29., 32., 35., 38., 41., 44., 47., 3.,  6.,  9.,  12.,
      15., 18., 21., 24., 27., 30., 33., 36., 39., 42., 45., 48.};
  const std::vector<int> sizes = {2, 2, 4, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 4.,  16., 7.,  19., 10., 22., 25., 37., 28., 40.,
      31., 43., 34., 46., 2.,  14., 5.,  17., 8.,  20., 11., 23.,
      26., 38., 29., 41., 32., 44., 35., 47., 3.,  15., 6.,  18.,
      9.,  21., 12., 24., 27., 39., 30., 42., 33., 45., 36., 48.};
  const std::vector<int> sizes = {2, 2, 4, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 25., 28., 31., 34., 13., 16., 19., 22.,
      37., 40., 43., 46., 2.,  5.,  8.,  11., 26., 29., 32., 35.,
      14., 17., 20., 23., 38., 41., 44., 47., 3.,  6.,  9.,  12.,
      27., 30., 33., 36., 15., 18., 21., 24., 39., 42., 45., 48.};
  const std::vector<int> sizes = {2, 2, 4, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 4.,  28., 7.,  31., 10., 34., 13., 37., 16., 40.,
      19., 43., 22., 46., 2.,  26., 5.,  29., 8.,  32., 11., 35.,
      14., 38., 17., 41., 20., 44., 23., 47., 3.,  27., 6.,  30.,
      9.,  33., 12., 36., 15., 39., 18., 42., 21., 45., 24., 48.};
  const std::vector<int> sizes = {2, 2, 4, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 4.,  16., 28., 40., 7.,  19., 31., 43.,
      10., 22., 34., 46., 2.,  14., 26., 38., 5.,  17., 29., 41.,
      8.,  20., 32., 44., 11., 23., 35., 47., 3.,  15., 27., 39.,
      6.,  18., 30., 42., 9.,  21., 33., 45., 12., 24., 36., 48.};
  const std::vector<int> sizes = {2, 2, 4, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 13., 37., 4.,  28., 16., 40., 7.,  31., 19., 43.,
      10., 34., 22., 46., 2.,  26., 14., 38., 5.,  29., 17., 41.,
      8.,  32., 20., 44., 11., 35., 23., 47., 3.,  27., 15., 39.,
      6.,  30., 18., 42., 9.,  33., 21., 45., 12., 36., 24., 48.};
  const std::vector<int> sizes = {2, 2, 4, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13.,
      14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26.,
      27., 28., 29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39.,
      40., 41., 42., 43., 44., 45., 46., 47., 48., 49., 50., 51., 52.,
      53., 54., 55., 56., 57., 58., 59., 60., 61., 62., 63., 64.};
  const std::vector<int> sizes = {2, 2, 4, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 2.,  6.,  10., 14., 3.,  7.,  11., 15., 4.,
      8.,  12., 16., 17., 21., 25., 29., 18., 22., 26., 30., 19., 23.,
      27., 31., 20., 24., 28., 32., 33., 37., 41., 45., 34., 38., 42.,
      46., 35., 39., 43., 47., 36., 40., 44., 48., 49., 53., 57., 61.,
      50., 54., 58., 62., 51., 55., 59., 63., 52., 56., 60., 64.};
  const std::vector<int> sizes = {2, 2, 4, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  17., 18., 19., 20., 5.,  6.,  7.,  8.,  21.,
      22., 23., 24., 9.,  10., 11., 12., 25., 26., 27., 28., 13., 14.,
      15., 16., 29., 30., 31., 32., 33., 34., 35., 36., 49., 50., 51.,
      52., 37., 38., 39., 40., 53., 54., 55., 56., 41., 42., 43., 44.,
      57., 58., 59., 60., 45., 46., 47., 48., 61., 62., 63., 64.};
  const std::vector<int> sizes = {2, 2, 4, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 2.,  18., 3.,  19., 4.,  20., 5.,  21., 6.,  22., 7.,
      23., 8.,  24., 9.,  25., 10., 26., 11., 27., 12., 28., 13., 29.,
      14., 30., 15., 31., 16., 32., 33., 49., 34., 50., 35., 51., 36.,
      52., 37., 53., 38., 54., 39., 55., 40., 56., 41., 57., 42., 58.,
      43., 59., 44., 60., 45., 61., 46., 62., 47., 63., 48., 64.};
  const std::vector<int> sizes = {2, 2, 4, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 25., 29., 2.,  6.,  10., 14., 18.,
      22., 26., 30., 3.,  7.,  11., 15., 19., 23., 27., 31., 4.,  8.,
      12., 16., 20., 24., 28., 32., 33., 37., 41., 45., 49., 53., 57.,
      61., 34., 38., 42., 46., 50., 54., 58., 62., 35., 39., 43., 47.,
      51., 55., 59., 63., 36., 40., 44., 48., 52., 56., 60., 64.};
  const std::vector<int> sizes = {2, 2, 4, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 5.,  21., 9.,  25., 13., 29., 2.,  18., 6.,  22., 10.,
      26., 14., 30., 3.,  19., 7.,  23., 11., 27., 15., 31., 4.,  20.,
      8.,  24., 12., 28., 16., 32., 33., 49., 37., 53., 41., 57., 45.,
      61., 34., 50., 38., 54., 42., 58., 46., 62., 35., 51., 39., 55.,
      43., 59., 47., 63., 36., 52., 40., 56., 44., 60., 48., 64.};
  const std::vector<int> sizes = {2, 2, 4, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13.,
      14., 15., 16., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42.,
      43., 44., 45., 46., 47., 48., 17., 18., 19., 20., 21., 22., 23.,
      24., 25., 26., 27., 28., 29., 30., 31., 32., 49., 50., 51., 52.,
      53., 54., 55., 56., 57., 58., 59., 60., 61., 62., 63., 64.};
  const std::vector<int> sizes = {2, 2, 4, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 2.,  6.,  10., 14., 3.,  7.,  11., 15., 4.,
      8.,  12., 16., 33., 37., 41., 45., 34., 38., 42., 46., 35., 39.,
      43., 47., 36., 40., 44., 48., 17., 21., 25., 29., 18., 22., 26.,
      30., 19., 23., 27., 31., 20., 24., 28., 32., 49., 53., 57., 61.,
      50., 54., 58., 62., 51., 55., 59., 63., 52., 56., 60., 64.};
  const std::vector<int> sizes = {2, 2, 4, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  33., 34., 35., 36., 5.,  6.,  7.,  8.,  37.,
      38., 39., 40., 9.,  10., 11., 12., 41., 42., 43., 44., 13., 14.,
      15., 16., 45., 46., 47., 48., 17., 18., 19., 20., 49., 50., 51.,
      52., 21., 22., 23., 24., 53., 54., 55., 56., 25., 26., 27., 28.,
      57., 58., 59., 60., 29., 30., 31., 32., 61., 62., 63., 64.};
  const std::vector<int> sizes = {2, 2, 4, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 2.,  34., 3.,  35., 4.,  36., 5.,  37., 6.,  38., 7.,
      39., 8.,  40., 9.,  41., 10., 42., 11., 43., 12., 44., 13., 45.,
      14., 46., 15., 47., 16., 48., 17., 49., 18., 50., 19., 51., 20.,
      52., 21., 53., 22., 54., 23., 55., 24., 56., 25., 57., 26., 58.,
      27., 59., 28., 60., 29., 61., 30., 62., 31., 63., 32., 64.};
  const std::vector<int> sizes = {2, 2, 4, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 33., 37., 41., 45., 2.,  6.,  10., 14., 34.,
      38., 42., 46., 3.,  7.,  11., 15., 35., 39., 43., 47., 4.,  8.,
      12., 16., 36., 40., 44., 48., 17., 21., 25., 29., 49., 53., 57.,
      61., 18., 22., 26., 30., 50., 54., 58., 62., 19., 23., 27., 31.,
      51., 55., 59., 63., 20., 24., 28., 32., 52., 56., 60., 64.};
  const std::vector<int> sizes = {2, 2, 4, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 5.,  37., 9.,  41., 13., 45., 2.,  34., 6.,  38., 10.,
      42., 14., 46., 3.,  35., 7.,  39., 11., 43., 15., 47., 4.,  36.,
      8.,  40., 12., 44., 16., 48., 17., 49., 21., 53., 25., 57., 29.,
      61., 18., 50., 22., 54., 26., 58., 30., 62., 19., 51., 23., 55.,
      27., 59., 31., 63., 20., 52., 24., 56., 28., 60., 32., 64.};
  const std::vector<int> sizes = {2, 2, 4, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  17., 18., 19., 20., 33., 34., 35., 36., 49.,
      50., 51., 52., 5.,  6.,  7.,  8.,  21., 22., 23., 24., 37., 38.,
      39., 40., 53., 54., 55., 56., 9.,  10., 11., 12., 25., 26., 27.,
      28., 41., 42., 43., 44., 57., 58., 59., 60., 13., 14., 15., 16.,
      29., 30., 31., 32., 45., 46., 47., 48., 61., 62., 63., 64.};
  const std::vector<int> sizes = {2, 2, 4, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 2.,  18., 3.,  19., 4.,  20., 33., 49., 34., 50., 35.,
      51., 36., 52., 5.,  21., 6.,  22., 7.,  23., 8.,  24., 37., 53.,
      38., 54., 39., 55., 40., 56., 9.,  25., 10., 26., 11., 27., 12.,
      28., 41., 57., 42., 58., 43., 59., 44., 60., 13., 29., 14., 30.,
      15., 31., 16., 32., 45., 61., 46., 62., 47., 63., 48., 64.};
  const std::vector<int> sizes = {2, 2, 4, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  33., 34., 35., 36., 17., 18., 19., 20., 49.,
      50., 51., 52., 5.,  6.,  7.,  8.,  37., 38., 39., 40., 21., 22.,
      23., 24., 53., 54., 55., 56., 9.,  10., 11., 12., 41., 42., 43.,
      44., 25., 26., 27., 28., 57., 58., 59., 60., 13., 14., 15., 16.,
      45., 46., 47., 48., 29., 30., 31., 32., 61., 62., 63., 64.};
  const std::vector<int> sizes = {2, 2, 4, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 2.,  34., 3.,  35., 4.,  36., 17., 49., 18., 50., 19.,
      51., 20., 52., 5.,  37., 6.,  38., 7.,  39., 8.,  40., 21., 53.,
      22., 54., 23., 55., 24., 56., 9.,  41., 10., 42., 11., 43., 12.,
      44., 25., 57., 26., 58., 27., 59., 28., 60., 13., 45., 14., 46.,
      15., 47., 16., 48., 29., 61., 30., 62., 31., 63., 32., 64.};
  const std::vector<int> sizes = {2, 2, 4, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 2.,  18., 34., 50., 3.,  19., 35., 51., 4.,
      20., 36., 52., 5.,  21., 37., 53., 6.,  22., 38., 54., 7.,  23.,
      39., 55., 8.,  24., 40., 56., 9.,  25., 41., 57., 10., 26., 42.,
      58., 11., 27., 43., 59., 12., 28., 44., 60., 13., 29., 45., 61.,
      14., 30., 46., 62., 15., 31., 47., 63., 16., 32., 48., 64.};
  const std::vector<int> sizes = {2, 2, 4, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 17., 49., 2.,  34., 18., 50., 3.,  35., 19., 51., 4.,
      36., 20., 52., 5.,  37., 21., 53., 6.,  38., 22., 54., 7.,  39.,
      23., 55., 8.,  40., 24., 56., 9.,  41., 25., 57., 10., 42., 26.,
      58., 11., 43., 27., 59., 12., 44., 28., 60., 13., 45., 29., 61.,
      14., 46., 30., 62., 15., 47., 31., 63., 16., 48., 32., 64.};
  const std::vector<int> sizes = {2, 2, 4, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 25., 29., 33., 37., 41., 45., 49.,
      53., 57., 61., 2.,  6.,  10., 14., 18., 22., 26., 30., 34., 38.,
      42., 46., 50., 54., 58., 62., 3.,  7.,  11., 15., 19., 23., 27.,
      31., 35., 39., 43., 47., 51., 55., 59., 63., 4.,  8.,  12., 16.,
      20., 24., 28., 32., 36., 40., 44., 48., 52., 56., 60., 64.};
  const std::vector<int> sizes = {2, 2, 4, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 5.,  21., 9.,  25., 13., 29., 33., 49., 37., 53., 41.,
      57., 45., 61., 2.,  18., 6.,  22., 10., 26., 14., 30., 34., 50.,
      38., 54., 42., 58., 46., 62., 3.,  19., 7.,  23., 11., 27., 15.,
      31., 35., 51., 39., 55., 43., 59., 47., 63., 4.,  20., 8.,  24.,
      12., 28., 16., 32., 36., 52., 40., 56., 44., 60., 48., 64.};
  const std::vector<int> sizes = {2, 2, 4, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 33., 37., 41., 45., 17., 21., 25., 29., 49.,
      53., 57., 61., 2.,  6.,  10., 14., 34., 38., 42., 46., 18., 22.,
      26., 30., 50., 54., 58., 62., 3.,  7.,  11., 15., 35., 39., 43.,
      47., 19., 23., 27., 31., 51., 55., 59., 63., 4.,  8.,  12., 16.,
      36., 40., 44., 48., 20., 24., 28., 32., 52., 56., 60., 64.};
  const std::vector<int> sizes = {2, 2, 4, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 5.,  37., 9.,  41., 13., 45., 17., 49., 21., 53., 25.,
      57., 29., 61., 2.,  34., 6.,  38., 10., 42., 14., 46., 18., 50.,
      22., 54., 26., 58., 30., 62., 3.,  35., 7.,  39., 11., 43., 15.,
      47., 19., 51., 23., 55., 27., 59., 31., 63., 4.,  36., 8.,  40.,
      12., 44., 16., 48., 20., 52., 24., 56., 28., 60., 32., 64.};
  const std::vector<int> sizes = {2, 2, 4, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 5.,  21., 37., 53., 9.,  25., 41., 57., 13.,
      29., 45., 61., 2.,  18., 34., 50., 6.,  22., 38., 54., 10., 26.,
      42., 58., 14., 30., 46., 62., 3.,  19., 35., 51., 7.,  23., 39.,
      55., 11., 27., 43., 59., 15., 31., 47., 63., 4.,  20., 36., 52.,
      8.,  24., 40., 56., 12., 28., 44., 60., 16., 32., 48., 64.};
  const std::vector<int> sizes = {2, 2, 4, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x2x4x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 17., 49., 5.,  37., 21., 53., 9.,  41., 25., 57., 13.,
      45., 29., 61., 2.,  34., 18., 50., 6.,  38., 22., 54., 10., 42.,
      26., 58., 14., 46., 30., 62., 3.,  35., 19., 51., 7.,  39., 23.,
      55., 11., 43., 27., 59., 15., 47., 31., 63., 4.,  36., 20., 52.,
      8.,  40., 24., 56., 12., 44., 28., 60., 16., 48., 32., 64.};
  const std::vector<int> sizes = {2, 2, 4, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.};
  const std::vector<int> sizes = {2, 3, 2, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  2.,  4.,  5.,  7.,  6.,  8.,  9.,  11., 10., 12.,
      13., 15., 14., 16., 17., 19., 18., 20., 21., 23., 22., 24.};
  const std::vector<int> sizes = {2, 3, 2, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  5.,  6.,  9.,  10., 3.,  4.,  7.,  8.,  11., 12.,
      13., 14., 17., 18., 21., 22., 15., 16., 19., 20., 23., 24.};
  const std::vector<int> sizes = {2, 3, 2, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  2.,  6.,  10., 3.,  7.,  11., 4.,  8.,  12.,
      13., 17., 21., 14., 18., 22., 15., 19., 23., 16., 20., 24.};
  const std::vector<int> sizes = {2, 3, 2, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 2.,  4.,  6.,  8.,  10., 12.,
      13., 15., 17., 19., 21., 23., 14., 16., 18., 20., 22., 24.};
  const std::vector<int> sizes = {2, 3, 2, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  3.,  7.,  11., 2.,  6.,  10., 4.,  8.,  12.,
      13., 17., 21., 15., 19., 23., 14., 18., 22., 16., 20., 24.};
  const std::vector<int> sizes = {2, 3, 2, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 2.,  3.,  4.,  13., 14., 15., 16.,
                                         5., 6.,  7.,  8.,  17., 18., 19., 20.,
                                         9., 10., 11., 12., 21., 22., 23., 24.};
  const std::vector<int> sizes = {2, 3, 2, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 3.,  2.,  4.,  13., 15., 14., 16.,
                                         5., 7.,  6.,  8.,  17., 19., 18., 20.,
                                         9., 11., 10., 12., 21., 23., 22., 24.};
  const std::vector<int> sizes = {2, 3, 2, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 2.,  13., 14., 3.,  4.,  15., 16.,
                                         5., 6.,  17., 18., 7.,  8.,  19., 20.,
                                         9., 10., 21., 22., 11., 12., 23., 24.};
  const std::vector<int> sizes = {2, 3, 2, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 13., 2.,  14., 3.,  15., 4.,  16.,
                                         5., 17., 6.,  18., 7.,  19., 8.,  20.,
                                         9., 21., 10., 22., 11., 23., 12., 24.};
  const std::vector<int> sizes = {2, 3, 2, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 3.,  13., 15., 2.,  4.,  14., 16.,
                                         5., 7.,  17., 19., 6.,  8.,  18., 20.,
                                         9., 11., 21., 23., 10., 12., 22., 24.};
  const std::vector<int> sizes = {2, 3, 2, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 13., 3.,  15., 2.,  14., 4.,  16.,
                                         5., 17., 7.,  19., 6.,  18., 8.,  20.,
                                         9., 21., 11., 23., 10., 22., 12., 24.};
  const std::vector<int> sizes = {2, 3, 2, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 2., 5., 6., 9.,  10., 13., 14., 17., 18., 21., 22.,
      3., 4., 7., 8., 11., 12., 15., 16., 19., 20., 23., 24.};
  const std::vector<int> sizes = {2, 3, 2, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 5., 9.,  2., 6., 10., 13., 17., 21., 14., 18., 22.,
      3., 7., 11., 4., 8., 12., 15., 19., 23., 16., 20., 24.};
  const std::vector<int> sizes = {2, 3, 2, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 2.,  13., 14., 5.,  6.,  17., 18.,
                                         9., 10., 21., 22., 3.,  4.,  15., 16.,
                                         7., 8.,  19., 20., 11., 12., 23., 24.};
  const std::vector<int> sizes = {2, 3, 2, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 13., 2.,  14., 5.,  17., 6.,  18.,
                                         9., 21., 10., 22., 3.,  15., 4.,  16.,
                                         7., 19., 8.,  20., 11., 23., 12., 24.};
  const std::vector<int> sizes = {2, 3, 2, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 5., 9.,  13., 17., 21., 2., 6., 10., 14., 18., 22.,
      3., 7., 11., 15., 19., 23., 4., 8., 12., 16., 20., 24.};
  const std::vector<int> sizes = {2, 3, 2, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1.,  13., 5.,  17., 9., 21., 2.,  14.,
                                         6.,  18., 10., 22., 3., 15., 7.,  19.,
                                         11., 23., 4.,  16., 8., 20., 12., 24.};
  const std::vector<int> sizes = {2, 3, 2, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 3., 5., 7., 9.,  11., 13., 15., 17., 19., 21., 23.,
      2., 4., 6., 8., 10., 12., 14., 16., 18., 20., 22., 24.};
  const std::vector<int> sizes = {2, 3, 2, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 5., 9.,  3., 7., 11., 13., 17., 21., 15., 19., 23.,
      2., 6., 10., 4., 8., 12., 14., 18., 22., 16., 20., 24.};
  const std::vector<int> sizes = {2, 3, 2, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 3.,  13., 15., 5.,  7.,  17., 19.,
                                         9., 11., 21., 23., 2.,  4.,  14., 16.,
                                         6., 8.,  18., 20., 10., 12., 22., 24.};
  const std::vector<int> sizes = {2, 3, 2, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 13., 3.,  15., 5.,  17., 7.,  19.,
                                         9., 21., 11., 23., 2.,  14., 4.,  16.,
                                         6., 18., 8.,  20., 10., 22., 12., 24.};
  const std::vector<int> sizes = {2, 3, 2, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 5., 9.,  13., 17., 21., 3., 7., 11., 15., 19., 23.,
      2., 6., 10., 14., 18., 22., 4., 8., 12., 16., 20., 24.};
  const std::vector<int> sizes = {2, 3, 2, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1.,  13., 5.,  17., 9., 21., 3.,  15.,
                                         7.,  19., 11., 23., 2., 14., 6.,  18.,
                                         10., 22., 4.,  16., 8., 20., 12., 24.};
  const std::vector<int> sizes = {2, 3, 2, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.,
      25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.};
  const std::vector<int> sizes = {2, 3, 2, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  2.,  5.,  3.,  6.,  7.,  10., 8.,  11., 9.,  12.,
      13., 16., 14., 17., 15., 18., 19., 22., 20., 23., 21., 24.,
      25., 28., 26., 29., 27., 30., 31., 34., 32., 35., 33., 36.};
  const std::vector<int> sizes = {2, 3, 2, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  7.,  8.,  9.,  13., 14., 15., 4.,  5.,  6.,
      10., 11., 12., 16., 17., 18., 19., 20., 21., 25., 26., 27.,
      31., 32., 33., 22., 23., 24., 28., 29., 30., 34., 35., 36.};
  const std::vector<int> sizes = {2, 3, 2, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 2.,  8.,  14., 3.,  9.,  15., 4.,  10., 16.,
      5.,  11., 17., 6.,  12., 18., 19., 25., 31., 20., 26., 32.,
      21., 27., 33., 22., 28., 34., 23., 29., 35., 24., 30., 36.};
  const std::vector<int> sizes = {2, 3, 2, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 2.,  5.,  8.,  11., 14., 17.,
      3.,  6.,  9.,  12., 15., 18., 19., 22., 25., 28., 31., 34.,
      20., 23., 26., 29., 32., 35., 21., 24., 27., 30., 33., 36.};
  const std::vector<int> sizes = {2, 3, 2, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 4.,  10., 16., 2.,  8.,  14., 5.,  11., 17.,
      3.,  9.,  15., 6.,  12., 18., 19., 25., 31., 22., 28., 34.,
      20., 26., 32., 23., 29., 35., 21., 27., 33., 24., 30., 36.};
  const std::vector<int> sizes = {2, 3, 2, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  19., 20., 21., 22., 23., 24.,
      7.,  8.,  9.,  10., 11., 12., 25., 26., 27., 28., 29., 30.,
      13., 14., 15., 16., 17., 18., 31., 32., 33., 34., 35., 36.};
  const std::vector<int> sizes = {2, 3, 2, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  2.,  5.,  3.,  6.,  19., 22., 20., 23., 21., 24.,
      7.,  10., 8.,  11., 9.,  12., 25., 28., 26., 29., 27., 30.,
      13., 16., 14., 17., 15., 18., 31., 34., 32., 35., 33., 36.};
  const std::vector<int> sizes = {2, 3, 2, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  19., 20., 21., 4.,  5.,  6.,  22., 23., 24.,
      7.,  8.,  9.,  25., 26., 27., 10., 11., 12., 28., 29., 30.,
      13., 14., 15., 31., 32., 33., 16., 17., 18., 34., 35., 36.};
  const std::vector<int> sizes = {2, 3, 2, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 2.,  20., 3.,  21., 4.,  22., 5.,  23., 6.,  24.,
      7.,  25., 8.,  26., 9.,  27., 10., 28., 11., 29., 12., 30.,
      13., 31., 14., 32., 15., 33., 16., 34., 17., 35., 18., 36.};
  const std::vector<int> sizes = {2, 3, 2, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  19., 22., 2.,  5.,  20., 23., 3.,  6.,  21., 24.,
      7.,  10., 25., 28., 8.,  11., 26., 29., 9.,  12., 27., 30.,
      13., 16., 31., 34., 14., 17., 32., 35., 15., 18., 33., 36.};
  const std::vector<int> sizes = {2, 3, 2, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 4.,  22., 2.,  20., 5.,  23., 3.,  21., 6.,  24.,
      7.,  25., 10., 28., 8.,  26., 11., 29., 9.,  27., 12., 30.,
      13., 31., 16., 34., 14., 32., 17., 35., 15., 33., 18., 36.};
  const std::vector<int> sizes = {2, 3, 2, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  7.,  8.,  9.,  13., 14., 15., 19., 20., 21.,
      25., 26., 27., 31., 32., 33., 4.,  5.,  6.,  10., 11., 12.,
      16., 17., 18., 22., 23., 24., 28., 29., 30., 34., 35., 36.};
  const std::vector<int> sizes = {2, 3, 2, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 2.,  8.,  14., 3.,  9.,  15., 19., 25., 31.,
      20., 26., 32., 21., 27., 33., 4.,  10., 16., 5.,  11., 17.,
      6.,  12., 18., 22., 28., 34., 23., 29., 35., 24., 30., 36.};
  const std::vector<int> sizes = {2, 3, 2, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  19., 20., 21., 7.,  8.,  9.,  25., 26., 27.,
      13., 14., 15., 31., 32., 33., 4.,  5.,  6.,  22., 23., 24.,
      10., 11., 12., 28., 29., 30., 16., 17., 18., 34., 35., 36.};
  const std::vector<int> sizes = {2, 3, 2, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 2.,  20., 3.,  21., 7.,  25., 8.,  26., 9.,  27.,
      13., 31., 14., 32., 15., 33., 4.,  22., 5.,  23., 6.,  24.,
      10., 28., 11., 29., 12., 30., 16., 34., 17., 35., 18., 36.};
  const std::vector<int> sizes = {2, 3, 2, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 7.,  13., 19., 25., 31., 2., 8.,  14., 20., 26., 32.,
      3., 9.,  15., 21., 27., 33., 4., 10., 16., 22., 28., 34.,
      5., 11., 17., 23., 29., 35., 6., 12., 18., 24., 30., 36.};
  const std::vector<int> sizes = {2, 3, 2, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 19., 7.,  25., 13., 31., 2., 20., 8.,  26., 14., 32.,
      3., 21., 9.,  27., 15., 33., 4., 22., 10., 28., 16., 34.,
      5., 23., 11., 29., 17., 35., 6., 24., 12., 30., 18., 36.};
  const std::vector<int> sizes = {2, 3, 2, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 4., 7., 10., 13., 16., 19., 22., 25., 28., 31., 34.,
      2., 5., 8., 11., 14., 17., 20., 23., 26., 29., 32., 35.,
      3., 6., 9., 12., 15., 18., 21., 24., 27., 30., 33., 36.};
  const std::vector<int> sizes = {2, 3, 2, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 7., 13., 4., 10., 16., 19., 25., 31., 22., 28., 34.,
      2., 8., 14., 5., 11., 17., 20., 26., 32., 23., 29., 35.,
      3., 9., 15., 6., 12., 18., 21., 27., 33., 24., 30., 36.};
  const std::vector<int> sizes = {2, 3, 2, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 4., 19., 22., 7., 10., 25., 28., 13., 16., 31., 34.,
      2., 5., 20., 23., 8., 11., 26., 29., 14., 17., 32., 35.,
      3., 6., 21., 24., 9., 12., 27., 30., 15., 18., 33., 36.};
  const std::vector<int> sizes = {2, 3, 2, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 19., 4., 22., 7., 25., 10., 28., 13., 31., 16., 34.,
      2., 20., 5., 23., 8., 26., 11., 29., 14., 32., 17., 35.,
      3., 21., 6., 24., 9., 27., 12., 30., 15., 33., 18., 36.};
  const std::vector<int> sizes = {2, 3, 2, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 7., 13., 19., 25., 31., 4., 10., 16., 22., 28., 34.,
      2., 8., 14., 20., 26., 32., 5., 11., 17., 23., 29., 35.,
      3., 9., 15., 21., 27., 33., 6., 12., 18., 24., 30., 36.};
  const std::vector<int> sizes = {2, 3, 2, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 19., 7., 25., 13., 31., 4., 22., 10., 28., 16., 34.,
      2., 20., 8., 26., 14., 32., 5., 23., 11., 29., 17., 35.,
      3., 21., 9., 27., 15., 33., 6., 24., 12., 30., 18., 36.};
  const std::vector<int> sizes = {2, 3, 2, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.,
      25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.,
      37., 38., 39., 40., 41., 42., 43., 44., 45., 46., 47., 48.};
  const std::vector<int> sizes = {2, 3, 2, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  2.,  6.,  3.,  7.,  4.,  8.,  9.,  13., 10., 14.,
      11., 15., 12., 16., 17., 21., 18., 22., 19., 23., 20., 24.,
      25., 29., 26., 30., 27., 31., 28., 32., 33., 37., 34., 38.,
      35., 39., 36., 40., 41., 45., 42., 46., 43., 47., 44., 48.};
  const std::vector<int> sizes = {2, 3, 2, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  9.,  10., 11., 12., 17., 18., 19., 20.,
      5.,  6.,  7.,  8.,  13., 14., 15., 16., 21., 22., 23., 24.,
      25., 26., 27., 28., 33., 34., 35., 36., 41., 42., 43., 44.,
      29., 30., 31., 32., 37., 38., 39., 40., 45., 46., 47., 48.};
  const std::vector<int> sizes = {2, 3, 2, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 2.,  10., 18., 3.,  11., 19., 4.,  12., 20.,
      5.,  13., 21., 6.,  14., 22., 7.,  15., 23., 8.,  16., 24.,
      25., 33., 41., 26., 34., 42., 27., 35., 43., 28., 36., 44.,
      29., 37., 45., 30., 38., 46., 31., 39., 47., 32., 40., 48.};
  const std::vector<int> sizes = {2, 3, 2, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 2.,  6.,  10., 14., 18., 22.,
      3.,  7.,  11., 15., 19., 23., 4.,  8.,  12., 16., 20., 24.,
      25., 29., 33., 37., 41., 45., 26., 30., 34., 38., 42., 46.,
      27., 31., 35., 39., 43., 47., 28., 32., 36., 40., 44., 48.};
  const std::vector<int> sizes = {2, 3, 2, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 5.,  13., 21., 2.,  10., 18., 6.,  14., 22.,
      3.,  11., 19., 7.,  15., 23., 4.,  12., 20., 8.,  16., 24.,
      25., 33., 41., 29., 37., 45., 26., 34., 42., 30., 38., 46.,
      27., 35., 43., 31., 39., 47., 28., 36., 44., 32., 40., 48.};
  const std::vector<int> sizes = {2, 3, 2, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  25., 26., 27., 28.,
      29., 30., 31., 32., 9.,  10., 11., 12., 13., 14., 15., 16.,
      33., 34., 35., 36., 37., 38., 39., 40., 17., 18., 19., 20.,
      21., 22., 23., 24., 41., 42., 43., 44., 45., 46., 47., 48.};
  const std::vector<int> sizes = {2, 3, 2, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  2.,  6.,  3.,  7.,  4.,  8.,  25., 29., 26., 30.,
      27., 31., 28., 32., 9.,  13., 10., 14., 11., 15., 12., 16.,
      33., 37., 34., 38., 35., 39., 36., 40., 17., 21., 18., 22.,
      19., 23., 20., 24., 41., 45., 42., 46., 43., 47., 44., 48.};
  const std::vector<int> sizes = {2, 3, 2, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  25., 26., 27., 28., 5.,  6.,  7.,  8.,
      29., 30., 31., 32., 9.,  10., 11., 12., 33., 34., 35., 36.,
      13., 14., 15., 16., 37., 38., 39., 40., 17., 18., 19., 20.,
      41., 42., 43., 44., 21., 22., 23., 24., 45., 46., 47., 48.};
  const std::vector<int> sizes = {2, 3, 2, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 2.,  26., 3.,  27., 4.,  28., 5.,  29., 6.,  30.,
      7.,  31., 8.,  32., 9.,  33., 10., 34., 11., 35., 12., 36.,
      13., 37., 14., 38., 15., 39., 16., 40., 17., 41., 18., 42.,
      19., 43., 20., 44., 21., 45., 22., 46., 23., 47., 24., 48.};
  const std::vector<int> sizes = {2, 3, 2, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  25., 29., 2.,  6.,  26., 30., 3.,  7.,  27., 31.,
      4.,  8.,  28., 32., 9.,  13., 33., 37., 10., 14., 34., 38.,
      11., 15., 35., 39., 12., 16., 36., 40., 17., 21., 41., 45.,
      18., 22., 42., 46., 19., 23., 43., 47., 20., 24., 44., 48.};
  const std::vector<int> sizes = {2, 3, 2, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 5.,  29., 2.,  26., 6.,  30., 3.,  27., 7.,  31.,
      4.,  28., 8.,  32., 9.,  33., 13., 37., 10., 34., 14., 38.,
      11., 35., 15., 39., 12., 36., 16., 40., 17., 41., 21., 45.,
      18., 42., 22., 46., 19., 43., 23., 47., 20., 44., 24., 48.};
  const std::vector<int> sizes = {2, 3, 2, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  9.,  10., 11., 12., 17., 18., 19., 20.,
      25., 26., 27., 28., 33., 34., 35., 36., 41., 42., 43., 44.,
      5.,  6.,  7.,  8.,  13., 14., 15., 16., 21., 22., 23., 24.,
      29., 30., 31., 32., 37., 38., 39., 40., 45., 46., 47., 48.};
  const std::vector<int> sizes = {2, 3, 2, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 2.,  10., 18., 3.,  11., 19., 4.,  12., 20.,
      25., 33., 41., 26., 34., 42., 27., 35., 43., 28., 36., 44.,
      5.,  13., 21., 6.,  14., 22., 7.,  15., 23., 8.,  16., 24.,
      29., 37., 45., 30., 38., 46., 31., 39., 47., 32., 40., 48.};
  const std::vector<int> sizes = {2, 3, 2, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  25., 26., 27., 28., 9.,  10., 11., 12.,
      33., 34., 35., 36., 17., 18., 19., 20., 41., 42., 43., 44.,
      5.,  6.,  7.,  8.,  29., 30., 31., 32., 13., 14., 15., 16.,
      37., 38., 39., 40., 21., 22., 23., 24., 45., 46., 47., 48.};
  const std::vector<int> sizes = {2, 3, 2, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 2.,  26., 3.,  27., 4.,  28., 9.,  33., 10., 34.,
      11., 35., 12., 36., 17., 41., 18., 42., 19., 43., 20., 44.,
      5.,  29., 6.,  30., 7.,  31., 8.,  32., 13., 37., 14., 38.,
      15., 39., 16., 40., 21., 45., 22., 46., 23., 47., 24., 48.};
  const std::vector<int> sizes = {2, 3, 2, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 9.,  17., 25., 33., 41., 2., 10., 18., 26., 34., 42.,
      3., 11., 19., 27., 35., 43., 4., 12., 20., 28., 36., 44.,
      5., 13., 21., 29., 37., 45., 6., 14., 22., 30., 38., 46.,
      7., 15., 23., 31., 39., 47., 8., 16., 24., 32., 40., 48.};
  const std::vector<int> sizes = {2, 3, 2, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 25., 9.,  33., 17., 41., 2., 26., 10., 34., 18., 42.,
      3., 27., 11., 35., 19., 43., 4., 28., 12., 36., 20., 44.,
      5., 29., 13., 37., 21., 45., 6., 30., 14., 38., 22., 46.,
      7., 31., 15., 39., 23., 47., 8., 32., 16., 40., 24., 48.};
  const std::vector<int> sizes = {2, 3, 2, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 5., 9.,  13., 17., 21., 25., 29., 33., 37., 41., 45.,
      2., 6., 10., 14., 18., 22., 26., 30., 34., 38., 42., 46.,
      3., 7., 11., 15., 19., 23., 27., 31., 35., 39., 43., 47.,
      4., 8., 12., 16., 20., 24., 28., 32., 36., 40., 44., 48.};
  const std::vector<int> sizes = {2, 3, 2, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 9.,  17., 5., 13., 21., 25., 33., 41., 29., 37., 45.,
      2., 10., 18., 6., 14., 22., 26., 34., 42., 30., 38., 46.,
      3., 11., 19., 7., 15., 23., 27., 35., 43., 31., 39., 47.,
      4., 12., 20., 8., 16., 24., 28., 36., 44., 32., 40., 48.};
  const std::vector<int> sizes = {2, 3, 2, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 5., 25., 29., 9.,  13., 33., 37., 17., 21., 41., 45.,
      2., 6., 26., 30., 10., 14., 34., 38., 18., 22., 42., 46.,
      3., 7., 27., 31., 11., 15., 35., 39., 19., 23., 43., 47.,
      4., 8., 28., 32., 12., 16., 36., 40., 20., 24., 44., 48.};
  const std::vector<int> sizes = {2, 3, 2, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 25., 5., 29., 9.,  33., 13., 37., 17., 41., 21., 45.,
      2., 26., 6., 30., 10., 34., 14., 38., 18., 42., 22., 46.,
      3., 27., 7., 31., 11., 35., 15., 39., 19., 43., 23., 47.,
      4., 28., 8., 32., 12., 36., 16., 40., 20., 44., 24., 48.};
  const std::vector<int> sizes = {2, 3, 2, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 9.,  17., 25., 33., 41., 5., 13., 21., 29., 37., 45.,
      2., 10., 18., 26., 34., 42., 6., 14., 22., 30., 38., 46.,
      3., 11., 19., 27., 35., 43., 7., 15., 23., 31., 39., 47.,
      4., 12., 20., 28., 36., 44., 8., 16., 24., 32., 40., 48.};
  const std::vector<int> sizes = {2, 3, 2, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x2x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 25., 9.,  33., 17., 41., 5., 29., 13., 37., 21., 45.,
      2., 26., 10., 34., 18., 42., 6., 30., 14., 38., 22., 46.,
      3., 27., 11., 35., 19., 43., 7., 31., 15., 39., 23., 47.,
      4., 28., 12., 36., 20., 44., 8., 32., 16., 40., 24., 48.};
  const std::vector<int> sizes = {2, 3, 2, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.,
      25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.};
  const std::vector<int> sizes = {2, 3, 3, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  2.,  4.,  6.,  7.,  9.,  11., 8.,  10., 12.,
      13., 15., 17., 14., 16., 18., 19., 21., 23., 20., 22., 24.,
      25., 27., 29., 26., 28., 30., 31., 33., 35., 32., 34., 36.};
  const std::vector<int> sizes = {2, 3, 3, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  7.,  8.,  13., 14., 3.,  4.,  9.,  10., 15., 16.,
      5.,  6.,  11., 12., 17., 18., 19., 20., 25., 26., 31., 32.,
      21., 22., 27., 28., 33., 34., 23., 24., 29., 30., 35., 36.};
  const std::vector<int> sizes = {2, 3, 3, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 2.,  8.,  14., 3.,  9.,  15., 4.,  10., 16.,
      5.,  11., 17., 6.,  12., 18., 19., 25., 31., 20., 26., 32.,
      21., 27., 33., 22., 28., 34., 23., 29., 35., 24., 30., 36.};
  const std::vector<int> sizes = {2, 3, 3, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 2.,  4.,  6.,
      8.,  10., 12., 14., 16., 18., 19., 21., 23., 25., 27., 29.,
      31., 33., 35., 20., 22., 24., 26., 28., 30., 32., 34., 36.};
  const std::vector<int> sizes = {2, 3, 3, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 3.,  9.,  15., 5.,  11., 17., 2.,  8.,  14.,
      4.,  10., 16., 6.,  12., 18., 19., 25., 31., 21., 27., 33.,
      23., 29., 35., 20., 26., 32., 22., 28., 34., 24., 30., 36.};
  const std::vector<int> sizes = {2, 3, 3, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  19., 20., 21., 22., 23., 24.,
      7.,  8.,  9.,  10., 11., 12., 25., 26., 27., 28., 29., 30.,
      13., 14., 15., 16., 17., 18., 31., 32., 33., 34., 35., 36.};
  const std::vector<int> sizes = {2, 3, 3, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  2.,  4.,  6.,  19., 21., 23., 20., 22., 24.,
      7.,  9.,  11., 8.,  10., 12., 25., 27., 29., 26., 28., 30.,
      13., 15., 17., 14., 16., 18., 31., 33., 35., 32., 34., 36.};
  const std::vector<int> sizes = {2, 3, 3, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  19., 20., 3.,  4.,  21., 22., 5.,  6.,  23., 24.,
      7.,  8.,  25., 26., 9.,  10., 27., 28., 11., 12., 29., 30.,
      13., 14., 31., 32., 15., 16., 33., 34., 17., 18., 35., 36.};
  const std::vector<int> sizes = {2, 3, 3, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 2.,  20., 3.,  21., 4.,  22., 5.,  23., 6.,  24.,
      7.,  25., 8.,  26., 9.,  27., 10., 28., 11., 29., 12., 30.,
      13., 31., 14., 32., 15., 33., 16., 34., 17., 35., 18., 36.};
  const std::vector<int> sizes = {2, 3, 3, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  19., 21., 23., 2.,  4.,  6.,  20., 22., 24.,
      7.,  9.,  11., 25., 27., 29., 8.,  10., 12., 26., 28., 30.,
      13., 15., 17., 31., 33., 35., 14., 16., 18., 32., 34., 36.};
  const std::vector<int> sizes = {2, 3, 3, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 3.,  21., 5.,  23., 2.,  20., 4.,  22., 6.,  24.,
      7.,  25., 9.,  27., 11., 29., 8.,  26., 10., 28., 12., 30.,
      13., 31., 15., 33., 17., 35., 14., 32., 16., 34., 18., 36.};
  const std::vector<int> sizes = {2, 3, 3, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 2., 7.,  8.,  13., 14., 19., 20., 25., 26., 31., 32.,
      3., 4., 9.,  10., 15., 16., 21., 22., 27., 28., 33., 34.,
      5., 6., 11., 12., 17., 18., 23., 24., 29., 30., 35., 36.};
  const std::vector<int> sizes = {2, 3, 3, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 7.,  13., 2., 8.,  14., 19., 25., 31., 20., 26., 32.,
      3., 9.,  15., 4., 10., 16., 21., 27., 33., 22., 28., 34.,
      5., 11., 17., 6., 12., 18., 23., 29., 35., 24., 30., 36.};
  const std::vector<int> sizes = {2, 3, 3, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 2., 19., 20., 7.,  8.,  25., 26., 13., 14., 31., 32.,
      3., 4., 21., 22., 9.,  10., 27., 28., 15., 16., 33., 34.,
      5., 6., 23., 24., 11., 12., 29., 30., 17., 18., 35., 36.};
  const std::vector<int> sizes = {2, 3, 3, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 19., 2., 20., 7.,  25., 8.,  26., 13., 31., 14., 32.,
      3., 21., 4., 22., 9.,  27., 10., 28., 15., 33., 16., 34.,
      5., 23., 6., 24., 11., 29., 12., 30., 17., 35., 18., 36.};
  const std::vector<int> sizes = {2, 3, 3, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 7.,  13., 19., 25., 31., 2., 8.,  14., 20., 26., 32.,
      3., 9.,  15., 21., 27., 33., 4., 10., 16., 22., 28., 34.,
      5., 11., 17., 23., 29., 35., 6., 12., 18., 24., 30., 36.};
  const std::vector<int> sizes = {2, 3, 3, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 19., 7.,  25., 13., 31., 2., 20., 8.,  26., 14., 32.,
      3., 21., 9.,  27., 15., 33., 4., 22., 10., 28., 16., 34.,
      5., 23., 11., 29., 17., 35., 6., 24., 12., 30., 18., 36.};
  const std::vector<int> sizes = {2, 3, 3, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23.,
      25., 27., 29., 31., 33., 35., 2.,  4.,  6.,  8.,  10., 12.,
      14., 16., 18., 20., 22., 24., 26., 28., 30., 32., 34., 36.};
  const std::vector<int> sizes = {2, 3, 3, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 3.,  9.,  15., 5.,  11., 17., 19., 25., 31.,
      21., 27., 33., 23., 29., 35., 2.,  8.,  14., 4.,  10., 16.,
      6.,  12., 18., 20., 26., 32., 22., 28., 34., 24., 30., 36.};
  const std::vector<int> sizes = {2, 3, 3, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  19., 21., 23., 7.,  9.,  11., 25., 27., 29.,
      13., 15., 17., 31., 33., 35., 2.,  4.,  6.,  20., 22., 24.,
      8.,  10., 12., 26., 28., 30., 14., 16., 18., 32., 34., 36.};
  const std::vector<int> sizes = {2, 3, 3, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 3.,  21., 5.,  23., 7.,  25., 9.,  27., 11., 29.,
      13., 31., 15., 33., 17., 35., 2.,  20., 4.,  22., 6.,  24.,
      8.,  26., 10., 28., 12., 30., 14., 32., 16., 34., 18., 36.};
  const std::vector<int> sizes = {2, 3, 3, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 7.,  13., 19., 25., 31., 3., 9.,  15., 21., 27., 33.,
      5., 11., 17., 23., 29., 35., 2., 8.,  14., 20., 26., 32.,
      4., 10., 16., 22., 28., 34., 6., 12., 18., 24., 30., 36.};
  const std::vector<int> sizes = {2, 3, 3, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 19., 7.,  25., 13., 31., 3., 21., 9.,  27., 15., 33.,
      5., 23., 11., 29., 17., 35., 2., 20., 8.,  26., 14., 32.,
      4., 22., 10., 28., 16., 34., 6., 24., 12., 30., 18., 36.};
  const std::vector<int> sizes = {2, 3, 3, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14.,
      15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28.,
      29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42.,
      43., 44., 45., 46., 47., 48., 49., 50., 51., 52., 53., 54.};
  const std::vector<int> sizes = {2, 3, 3, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  2.,  5.,  8.,  3.,  6.,  9.,  10., 13., 16., 11., 14.,
      17., 12., 15., 18., 19., 22., 25., 20., 23., 26., 21., 24., 27., 28.,
      31., 34., 29., 32., 35., 30., 33., 36., 37., 40., 43., 38., 41., 44.,
      39., 42., 45., 46., 49., 52., 47., 50., 53., 48., 51., 54.};
  const std::vector<int> sizes = {2, 3, 3, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  10., 11., 12., 19., 20., 21., 4.,  5.,  6.,  13., 14.,
      15., 22., 23., 24., 7.,  8.,  9.,  16., 17., 18., 25., 26., 27., 28.,
      29., 30., 37., 38., 39., 46., 47., 48., 31., 32., 33., 40., 41., 42.,
      49., 50., 51., 34., 35., 36., 43., 44., 45., 52., 53., 54.};
  const std::vector<int> sizes = {2, 3, 3, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 2.,  11., 20., 3.,  12., 21., 4.,  13., 22., 5.,  14.,
      23., 6.,  15., 24., 7.,  16., 25., 8.,  17., 26., 9.,  18., 27., 28.,
      37., 46., 29., 38., 47., 30., 39., 48., 31., 40., 49., 32., 41., 50.,
      33., 42., 51., 34., 43., 52., 35., 44., 53., 36., 45., 54.};
  const std::vector<int> sizes = {2, 3, 3, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 2.,  5.,  8.,  11., 14.,
      17., 20., 23., 26., 3.,  6.,  9.,  12., 15., 18., 21., 24., 27., 28.,
      31., 34., 37., 40., 43., 46., 49., 52., 29., 32., 35., 38., 41., 44.,
      47., 50., 53., 30., 33., 36., 39., 42., 45., 48., 51., 54.};
  const std::vector<int> sizes = {2, 3, 3, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 4.,  13., 22., 7.,  16., 25., 2.,  11., 20., 5.,  14.,
      23., 8.,  17., 26., 3.,  12., 21., 6.,  15., 24., 9.,  18., 27., 28.,
      37., 46., 31., 40., 49., 34., 43., 52., 29., 38., 47., 32., 41., 50.,
      35., 44., 53., 30., 39., 48., 33., 42., 51., 36., 45., 54.};
  const std::vector<int> sizes = {2, 3, 3, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  28., 29., 30., 31., 32.,
      33., 34., 35., 36., 10., 11., 12., 13., 14., 15., 16., 17., 18., 37.,
      38., 39., 40., 41., 42., 43., 44., 45., 19., 20., 21., 22., 23., 24.,
      25., 26., 27., 46., 47., 48., 49., 50., 51., 52., 53., 54.};
  const std::vector<int> sizes = {2, 3, 3, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  2.,  5.,  8.,  3.,  6.,  9.,  28., 31., 34., 29., 32.,
      35., 30., 33., 36., 10., 13., 16., 11., 14., 17., 12., 15., 18., 37.,
      40., 43., 38., 41., 44., 39., 42., 45., 19., 22., 25., 20., 23., 26.,
      21., 24., 27., 46., 49., 52., 47., 50., 53., 48., 51., 54.};
  const std::vector<int> sizes = {2, 3, 3, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  28., 29., 30., 4.,  5.,  6.,  31., 32., 33., 7.,  8.,
      9.,  34., 35., 36., 10., 11., 12., 37., 38., 39., 13., 14., 15., 40.,
      41., 42., 16., 17., 18., 43., 44., 45., 19., 20., 21., 46., 47., 48.,
      22., 23., 24., 49., 50., 51., 25., 26., 27., 52., 53., 54.};
  const std::vector<int> sizes = {2, 3, 3, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  28., 2.,  29., 3.,  30., 4.,  31., 5.,  32., 6.,  33., 7.,  34.,
      8.,  35., 9.,  36., 10., 37., 11., 38., 12., 39., 13., 40., 14., 41.,
      15., 42., 16., 43., 17., 44., 18., 45., 19., 46., 20., 47., 21., 48.,
      22., 49., 23., 50., 24., 51., 25., 52., 26., 53., 27., 54.};
  const std::vector<int> sizes = {2, 3, 3, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  28., 31., 34., 2.,  5.,  8.,  29., 32., 35., 3.,  6.,
      9.,  30., 33., 36., 10., 13., 16., 37., 40., 43., 11., 14., 17., 38.,
      41., 44., 12., 15., 18., 39., 42., 45., 19., 22., 25., 46., 49., 52.,
      20., 23., 26., 47., 50., 53., 21., 24., 27., 48., 51., 54.};
  const std::vector<int> sizes = {2, 3, 3, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  28., 4.,  31., 7.,  34., 2.,  29., 5.,  32., 8.,  35., 3.,  30.,
      6.,  33., 9.,  36., 10., 37., 13., 40., 16., 43., 11., 38., 14., 41.,
      17., 44., 12., 39., 15., 42., 18., 45., 19., 46., 22., 49., 25., 52.,
      20., 47., 23., 50., 26., 53., 21., 48., 24., 51., 27., 54.};
  const std::vector<int> sizes = {2, 3, 3, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  10., 11., 12., 19., 20., 21., 28., 29., 30., 37., 38.,
      39., 46., 47., 48., 4.,  5.,  6.,  13., 14., 15., 22., 23., 24., 31.,
      32., 33., 40., 41., 42., 49., 50., 51., 7.,  8.,  9.,  16., 17., 18.,
      25., 26., 27., 34., 35., 36., 43., 44., 45., 52., 53., 54.};
  const std::vector<int> sizes = {2, 3, 3, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 2.,  11., 20., 3.,  12., 21., 28., 37., 46., 29., 38.,
      47., 30., 39., 48., 4.,  13., 22., 5.,  14., 23., 6.,  15., 24., 31.,
      40., 49., 32., 41., 50., 33., 42., 51., 7.,  16., 25., 8.,  17., 26.,
      9.,  18., 27., 34., 43., 52., 35., 44., 53., 36., 45., 54.};
  const std::vector<int> sizes = {2, 3, 3, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  28., 29., 30., 10., 11., 12., 37., 38., 39., 19., 20.,
      21., 46., 47., 48., 4.,  5.,  6.,  31., 32., 33., 13., 14., 15., 40.,
      41., 42., 22., 23., 24., 49., 50., 51., 7.,  8.,  9.,  34., 35., 36.,
      16., 17., 18., 43., 44., 45., 25., 26., 27., 52., 53., 54.};
  const std::vector<int> sizes = {2, 3, 3, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  28., 2.,  29., 3.,  30., 10., 37., 11., 38., 12., 39., 19., 46.,
      20., 47., 21., 48., 4.,  31., 5.,  32., 6.,  33., 13., 40., 14., 41.,
      15., 42., 22., 49., 23., 50., 24., 51., 7.,  34., 8.,  35., 9.,  36.,
      16., 43., 17., 44., 18., 45., 25., 52., 26., 53., 27., 54.};
  const std::vector<int> sizes = {2, 3, 3, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 28., 37., 46., 2.,  11., 20., 29., 38., 47., 3.,  12.,
      21., 30., 39., 48., 4.,  13., 22., 31., 40., 49., 5.,  14., 23., 32.,
      41., 50., 6.,  15., 24., 33., 42., 51., 7.,  16., 25., 34., 43., 52.,
      8.,  17., 26., 35., 44., 53., 9.,  18., 27., 36., 45., 54.};
  const std::vector<int> sizes = {2, 3, 3, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  28., 10., 37., 19., 46., 2.,  29., 11., 38., 20., 47., 3.,  30.,
      12., 39., 21., 48., 4.,  31., 13., 40., 22., 49., 5.,  32., 14., 41.,
      23., 50., 6.,  33., 15., 42., 24., 51., 7.,  34., 16., 43., 25., 52.,
      8.,  35., 17., 44., 26., 53., 9.,  36., 18., 45., 27., 54.};
  const std::vector<int> sizes = {2, 3, 3, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 28., 31., 34., 37., 40.,
      43., 46., 49., 52., 2.,  5.,  8.,  11., 14., 17., 20., 23., 26., 29.,
      32., 35., 38., 41., 44., 47., 50., 53., 3.,  6.,  9.,  12., 15., 18.,
      21., 24., 27., 30., 33., 36., 39., 42., 45., 48., 51., 54.};
  const std::vector<int> sizes = {2, 3, 3, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 4.,  13., 22., 7.,  16., 25., 28., 37., 46., 31., 40.,
      49., 34., 43., 52., 2.,  11., 20., 5.,  14., 23., 8.,  17., 26., 29.,
      38., 47., 32., 41., 50., 35., 44., 53., 3.,  12., 21., 6.,  15., 24.,
      9.,  18., 27., 30., 39., 48., 33., 42., 51., 36., 45., 54.};
  const std::vector<int> sizes = {2, 3, 3, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  28., 31., 34., 10., 13., 16., 37., 40., 43., 19., 22.,
      25., 46., 49., 52., 2.,  5.,  8.,  29., 32., 35., 11., 14., 17., 38.,
      41., 44., 20., 23., 26., 47., 50., 53., 3.,  6.,  9.,  30., 33., 36.,
      12., 15., 18., 39., 42., 45., 21., 24., 27., 48., 51., 54.};
  const std::vector<int> sizes = {2, 3, 3, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  28., 4.,  31., 7.,  34., 10., 37., 13., 40., 16., 43., 19., 46.,
      22., 49., 25., 52., 2.,  29., 5.,  32., 8.,  35., 11., 38., 14., 41.,
      17., 44., 20., 47., 23., 50., 26., 53., 3.,  30., 6.,  33., 9.,  36.,
      12., 39., 15., 42., 18., 45., 21., 48., 24., 51., 27., 54.};
  const std::vector<int> sizes = {2, 3, 3, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 28., 37., 46., 4.,  13., 22., 31., 40., 49., 7.,  16.,
      25., 34., 43., 52., 2.,  11., 20., 29., 38., 47., 5.,  14., 23., 32.,
      41., 50., 8.,  17., 26., 35., 44., 53., 3.,  12., 21., 30., 39., 48.,
      6.,  15., 24., 33., 42., 51., 9.,  18., 27., 36., 45., 54.};
  const std::vector<int> sizes = {2, 3, 3, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  28., 10., 37., 19., 46., 4.,  31., 13., 40., 22., 49., 7.,  34.,
      16., 43., 25., 52., 2.,  29., 11., 38., 20., 47., 5.,  32., 14., 41.,
      23., 50., 8.,  35., 17., 44., 26., 53., 3.,  30., 12., 39., 21., 48.,
      6.,  33., 15., 42., 24., 51., 9.,  36., 18., 45., 27., 54.};
  const std::vector<int> sizes = {2, 3, 3, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14., 15.,
      16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 30.,
      31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42., 43., 44., 45.,
      46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56., 57., 58., 59., 60.,
      61., 62., 63., 64., 65., 66., 67., 68., 69., 70., 71., 72.};
  const std::vector<int> sizes = {2, 3, 3, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  2.,  6.,  10., 3.,  7.,  11., 4.,  8.,  12., 13., 17., 21.,
      14., 18., 22., 15., 19., 23., 16., 20., 24., 25., 29., 33., 26., 30., 34.,
      27., 31., 35., 28., 32., 36., 37., 41., 45., 38., 42., 46., 39., 43., 47.,
      40., 44., 48., 49., 53., 57., 50., 54., 58., 51., 55., 59., 52., 56., 60.,
      61., 65., 69., 62., 66., 70., 63., 67., 71., 64., 68., 72.};
  const std::vector<int> sizes = {2, 3, 3, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  13., 14., 15., 16., 25., 26., 27., 28., 5.,  6.,  7.,
      8.,  17., 18., 19., 20., 29., 30., 31., 32., 9.,  10., 11., 12., 21., 22.,
      23., 24., 33., 34., 35., 36., 37., 38., 39., 40., 49., 50., 51., 52., 61.,
      62., 63., 64., 41., 42., 43., 44., 53., 54., 55., 56., 65., 66., 67., 68.,
      45., 46., 47., 48., 57., 58., 59., 60., 69., 70., 71., 72.};
  const std::vector<int> sizes = {2, 3, 3, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 2.,  14., 26., 3.,  15., 27., 4.,  16., 28., 5.,  17., 29.,
      6.,  18., 30., 7.,  19., 31., 8.,  20., 32., 9.,  21., 33., 10., 22., 34.,
      11., 23., 35., 12., 24., 36., 37., 49., 61., 38., 50., 62., 39., 51., 63.,
      40., 52., 64., 41., 53., 65., 42., 54., 66., 43., 55., 67., 44., 56., 68.,
      45., 57., 69., 46., 58., 70., 47., 59., 71., 48., 60., 72.};
  const std::vector<int> sizes = {2, 3, 3, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 25., 29., 33., 2.,  6.,  10., 14., 18., 22.,
      26., 30., 34., 3.,  7.,  11., 15., 19., 23., 27., 31., 35., 4.,  8.,  12.,
      16., 20., 24., 28., 32., 36., 37., 41., 45., 49., 53., 57., 61., 65., 69.,
      38., 42., 46., 50., 54., 58., 62., 66., 70., 39., 43., 47., 51., 55., 59.,
      63., 67., 71., 40., 44., 48., 52., 56., 60., 64., 68., 72.};
  const std::vector<int> sizes = {2, 3, 3, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 5.,  17., 29., 9.,  21., 33., 2.,  14., 26., 6.,  18., 30.,
      10., 22., 34., 3.,  15., 27., 7.,  19., 31., 11., 23., 35., 4.,  16., 28.,
      8.,  20., 32., 12., 24., 36., 37., 49., 61., 41., 53., 65., 45., 57., 69.,
      38., 50., 62., 42., 54., 66., 46., 58., 70., 39., 51., 63., 43., 55., 67.,
      47., 59., 71., 40., 52., 64., 44., 56., 68., 48., 60., 72.};
  const std::vector<int> sizes = {2, 3, 3, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 37., 38., 39.,
      40., 41., 42., 43., 44., 45., 46., 47., 48., 13., 14., 15., 16., 17., 18.,
      19., 20., 21., 22., 23., 24., 49., 50., 51., 52., 53., 54., 55., 56., 57.,
      58., 59., 60., 25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.,
      61., 62., 63., 64., 65., 66., 67., 68., 69., 70., 71., 72.};
  const std::vector<int> sizes = {2, 3, 3, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  2.,  6.,  10., 3.,  7.,  11., 4.,  8.,  12., 37., 41., 45.,
      38., 42., 46., 39., 43., 47., 40., 44., 48., 13., 17., 21., 14., 18., 22.,
      15., 19., 23., 16., 20., 24., 49., 53., 57., 50., 54., 58., 51., 55., 59.,
      52., 56., 60., 25., 29., 33., 26., 30., 34., 27., 31., 35., 28., 32., 36.,
      61., 65., 69., 62., 66., 70., 63., 67., 71., 64., 68., 72.};
  const std::vector<int> sizes = {2, 3, 3, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  37., 38., 39., 40., 5.,  6.,  7.,  8.,  41., 42., 43.,
      44., 9.,  10., 11., 12., 45., 46., 47., 48., 13., 14., 15., 16., 49., 50.,
      51., 52., 17., 18., 19., 20., 53., 54., 55., 56., 21., 22., 23., 24., 57.,
      58., 59., 60., 25., 26., 27., 28., 61., 62., 63., 64., 29., 30., 31., 32.,
      65., 66., 67., 68., 33., 34., 35., 36., 69., 70., 71., 72.};
  const std::vector<int> sizes = {2, 3, 3, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 2.,  38., 3.,  39., 4.,  40., 5.,  41., 6.,  42., 7.,  43., 8.,
      44., 9.,  45., 10., 46., 11., 47., 12., 48., 13., 49., 14., 50., 15., 51.,
      16., 52., 17., 53., 18., 54., 19., 55., 20., 56., 21., 57., 22., 58., 23.,
      59., 24., 60., 25., 61., 26., 62., 27., 63., 28., 64., 29., 65., 30., 66.,
      31., 67., 32., 68., 33., 69., 34., 70., 35., 71., 36., 72.};
  const std::vector<int> sizes = {2, 3, 3, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  37., 41., 45., 2.,  6.,  10., 38., 42., 46., 3.,  7.,  11.,
      39., 43., 47., 4.,  8.,  12., 40., 44., 48., 13., 17., 21., 49., 53., 57.,
      14., 18., 22., 50., 54., 58., 15., 19., 23., 51., 55., 59., 16., 20., 24.,
      52., 56., 60., 25., 29., 33., 61., 65., 69., 26., 30., 34., 62., 66., 70.,
      27., 31., 35., 63., 67., 71., 28., 32., 36., 64., 68., 72.};
  const std::vector<int> sizes = {2, 3, 3, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 5.,  41., 9.,  45., 2.,  38., 6.,  42., 10., 46., 3.,  39., 7.,
      43., 11., 47., 4.,  40., 8.,  44., 12., 48., 13., 49., 17., 53., 21., 57.,
      14., 50., 18., 54., 22., 58., 15., 51., 19., 55., 23., 59., 16., 52., 20.,
      56., 24., 60., 25., 61., 29., 65., 33., 69., 26., 62., 30., 66., 34., 70.,
      27., 63., 31., 67., 35., 71., 28., 64., 32., 68., 36., 72.};
  const std::vector<int> sizes = {2, 3, 3, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  13., 14., 15., 16., 25., 26., 27., 28., 37., 38., 39.,
      40., 49., 50., 51., 52., 61., 62., 63., 64., 5.,  6.,  7.,  8.,  17., 18.,
      19., 20., 29., 30., 31., 32., 41., 42., 43., 44., 53., 54., 55., 56., 65.,
      66., 67., 68., 9.,  10., 11., 12., 21., 22., 23., 24., 33., 34., 35., 36.,
      45., 46., 47., 48., 57., 58., 59., 60., 69., 70., 71., 72.};
  const std::vector<int> sizes = {2, 3, 3, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 2.,  14., 26., 3.,  15., 27., 4.,  16., 28., 37., 49., 61.,
      38., 50., 62., 39., 51., 63., 40., 52., 64., 5.,  17., 29., 6.,  18., 30.,
      7.,  19., 31., 8.,  20., 32., 41., 53., 65., 42., 54., 66., 43., 55., 67.,
      44., 56., 68., 9.,  21., 33., 10., 22., 34., 11., 23., 35., 12., 24., 36.,
      45., 57., 69., 46., 58., 70., 47., 59., 71., 48., 60., 72.};
  const std::vector<int> sizes = {2, 3, 3, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  37., 38., 39., 40., 13., 14., 15., 16., 49., 50., 51.,
      52., 25., 26., 27., 28., 61., 62., 63., 64., 5.,  6.,  7.,  8.,  41., 42.,
      43., 44., 17., 18., 19., 20., 53., 54., 55., 56., 29., 30., 31., 32., 65.,
      66., 67., 68., 9.,  10., 11., 12., 45., 46., 47., 48., 21., 22., 23., 24.,
      57., 58., 59., 60., 33., 34., 35., 36., 69., 70., 71., 72.};
  const std::vector<int> sizes = {2, 3, 3, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 2.,  38., 3.,  39., 4.,  40., 13., 49., 14., 50., 15., 51., 16.,
      52., 25., 61., 26., 62., 27., 63., 28., 64., 5.,  41., 6.,  42., 7.,  43.,
      8.,  44., 17., 53., 18., 54., 19., 55., 20., 56., 29., 65., 30., 66., 31.,
      67., 32., 68., 9.,  45., 10., 46., 11., 47., 12., 48., 21., 57., 22., 58.,
      23., 59., 24., 60., 33., 69., 34., 70., 35., 71., 36., 72.};
  const std::vector<int> sizes = {2, 3, 3, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 49., 61., 2.,  14., 26., 38., 50., 62., 3.,  15., 27.,
      39., 51., 63., 4.,  16., 28., 40., 52., 64., 5.,  17., 29., 41., 53., 65.,
      6.,  18., 30., 42., 54., 66., 7.,  19., 31., 43., 55., 67., 8.,  20., 32.,
      44., 56., 68., 9.,  21., 33., 45., 57., 69., 10., 22., 34., 46., 58., 70.,
      11., 23., 35., 47., 59., 71., 12., 24., 36., 48., 60., 72.};
  const std::vector<int> sizes = {2, 3, 3, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 13., 49., 25., 61., 2.,  38., 14., 50., 26., 62., 3.,  39., 15.,
      51., 27., 63., 4.,  40., 16., 52., 28., 64., 5.,  41., 17., 53., 29., 65.,
      6.,  42., 18., 54., 30., 66., 7.,  43., 19., 55., 31., 67., 8.,  44., 20.,
      56., 32., 68., 9.,  45., 21., 57., 33., 69., 10., 46., 22., 58., 34., 70.,
      11., 47., 23., 59., 35., 71., 12., 48., 24., 60., 36., 72.};
  const std::vector<int> sizes = {2, 3, 3, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 25., 29., 33., 37., 41., 45., 49., 53., 57.,
      61., 65., 69., 2.,  6.,  10., 14., 18., 22., 26., 30., 34., 38., 42., 46.,
      50., 54., 58., 62., 66., 70., 3.,  7.,  11., 15., 19., 23., 27., 31., 35.,
      39., 43., 47., 51., 55., 59., 63., 67., 71., 4.,  8.,  12., 16., 20., 24.,
      28., 32., 36., 40., 44., 48., 52., 56., 60., 64., 68., 72.};
  const std::vector<int> sizes = {2, 3, 3, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 5.,  17., 29., 9.,  21., 33., 37., 49., 61., 41., 53., 65.,
      45., 57., 69., 2.,  14., 26., 6.,  18., 30., 10., 22., 34., 38., 50., 62.,
      42., 54., 66., 46., 58., 70., 3.,  15., 27., 7.,  19., 31., 11., 23., 35.,
      39., 51., 63., 43., 55., 67., 47., 59., 71., 4.,  16., 28., 8.,  20., 32.,
      12., 24., 36., 40., 52., 64., 44., 56., 68., 48., 60., 72.};
  const std::vector<int> sizes = {2, 3, 3, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  37., 41., 45., 13., 17., 21., 49., 53., 57., 25., 29., 33.,
      61., 65., 69., 2.,  6.,  10., 38., 42., 46., 14., 18., 22., 50., 54., 58.,
      26., 30., 34., 62., 66., 70., 3.,  7.,  11., 39., 43., 47., 15., 19., 23.,
      51., 55., 59., 27., 31., 35., 63., 67., 71., 4.,  8.,  12., 40., 44., 48.,
      16., 20., 24., 52., 56., 60., 28., 32., 36., 64., 68., 72.};
  const std::vector<int> sizes = {2, 3, 3, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 5.,  41., 9.,  45., 13., 49., 17., 53., 21., 57., 25., 61., 29.,
      65., 33., 69., 2.,  38., 6.,  42., 10., 46., 14., 50., 18., 54., 22., 58.,
      26., 62., 30., 66., 34., 70., 3.,  39., 7.,  43., 11., 47., 15., 51., 19.,
      55., 23., 59., 27., 63., 31., 67., 35., 71., 4.,  40., 8.,  44., 12., 48.,
      16., 52., 20., 56., 24., 60., 28., 64., 32., 68., 36., 72.};
  const std::vector<int> sizes = {2, 3, 3, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 49., 61., 5.,  17., 29., 41., 53., 65., 9.,  21., 33.,
      45., 57., 69., 2.,  14., 26., 38., 50., 62., 6.,  18., 30., 42., 54., 66.,
      10., 22., 34., 46., 58., 70., 3.,  15., 27., 39., 51., 63., 7.,  19., 31.,
      43., 55., 67., 11., 23., 35., 47., 59., 71., 4.,  16., 28., 40., 52., 64.,
      8.,  20., 32., 44., 56., 68., 12., 24., 36., 48., 60., 72.};
  const std::vector<int> sizes = {2, 3, 3, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x3x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 13., 49., 25., 61., 5.,  41., 17., 53., 29., 65., 9.,  45., 21.,
      57., 33., 69., 2.,  38., 14., 50., 26., 62., 6.,  42., 18., 54., 30., 66.,
      10., 46., 22., 58., 34., 70., 3.,  39., 15., 51., 27., 63., 7.,  43., 19.,
      55., 31., 67., 11., 47., 23., 59., 35., 71., 4.,  40., 16., 52., 28., 64.,
      8.,  44., 20., 56., 32., 68., 12., 48., 24., 60., 36., 72.};
  const std::vector<int> sizes = {2, 3, 3, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.,
      25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.,
      37., 38., 39., 40., 41., 42., 43., 44., 45., 46., 47., 48.};
  const std::vector<int> sizes = {2, 3, 4, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  2.,  4.,  6.,  8.,  9.,  11., 13., 15.,
      10., 12., 14., 16., 17., 19., 21., 23., 18., 20., 22., 24.,
      25., 27., 29., 31., 26., 28., 30., 32., 33., 35., 37., 39.,
      34., 36., 38., 40., 41., 43., 45., 47., 42., 44., 46., 48.};
  const std::vector<int> sizes = {2, 3, 4, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  9.,  10., 17., 18., 3.,  4.,  11., 12., 19., 20.,
      5.,  6.,  13., 14., 21., 22., 7.,  8.,  15., 16., 23., 24.,
      25., 26., 33., 34., 41., 42., 27., 28., 35., 36., 43., 44.,
      29., 30., 37., 38., 45., 46., 31., 32., 39., 40., 47., 48.};
  const std::vector<int> sizes = {2, 3, 4, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 2.,  10., 18., 3.,  11., 19., 4.,  12., 20.,
      5.,  13., 21., 6.,  14., 22., 7.,  15., 23., 8.,  16., 24.,
      25., 33., 41., 26., 34., 42., 27., 35., 43., 28., 36., 44.,
      29., 37., 45., 30., 38., 46., 31., 39., 47., 32., 40., 48.};
  const std::vector<int> sizes = {2, 3, 4, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23.,
      2.,  4.,  6.,  8.,  10., 12., 14., 16., 18., 20., 22., 24.,
      25., 27., 29., 31., 33., 35., 37., 39., 41., 43., 45., 47.,
      26., 28., 30., 32., 34., 36., 38., 40., 42., 44., 46., 48.};
  const std::vector<int> sizes = {2, 3, 4, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 3.,  11., 19., 5.,  13., 21., 7.,  15., 23.,
      2.,  10., 18., 4.,  12., 20., 6.,  14., 22., 8.,  16., 24.,
      25., 33., 41., 27., 35., 43., 29., 37., 45., 31., 39., 47.,
      26., 34., 42., 28., 36., 44., 30., 38., 46., 32., 40., 48.};
  const std::vector<int> sizes = {2, 3, 4, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  25., 26., 27., 28.,
      29., 30., 31., 32., 9.,  10., 11., 12., 13., 14., 15., 16.,
      33., 34., 35., 36., 37., 38., 39., 40., 17., 18., 19., 20.,
      21., 22., 23., 24., 41., 42., 43., 44., 45., 46., 47., 48.};
  const std::vector<int> sizes = {2, 3, 4, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  2.,  4.,  6.,  8.,  25., 27., 29., 31.,
      26., 28., 30., 32., 9.,  11., 13., 15., 10., 12., 14., 16.,
      33., 35., 37., 39., 34., 36., 38., 40., 17., 19., 21., 23.,
      18., 20., 22., 24., 41., 43., 45., 47., 42., 44., 46., 48.};
  const std::vector<int> sizes = {2, 3, 4, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  25., 26., 3.,  4.,  27., 28., 5.,  6.,  29., 30.,
      7.,  8.,  31., 32., 9.,  10., 33., 34., 11., 12., 35., 36.,
      13., 14., 37., 38., 15., 16., 39., 40., 17., 18., 41., 42.,
      19., 20., 43., 44., 21., 22., 45., 46., 23., 24., 47., 48.};
  const std::vector<int> sizes = {2, 3, 4, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 2.,  26., 3.,  27., 4.,  28., 5.,  29., 6.,  30.,
      7.,  31., 8.,  32., 9.,  33., 10., 34., 11., 35., 12., 36.,
      13., 37., 14., 38., 15., 39., 16., 40., 17., 41., 18., 42.,
      19., 43., 20., 44., 21., 45., 22., 46., 23., 47., 24., 48.};
  const std::vector<int> sizes = {2, 3, 4, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  25., 27., 29., 31., 2.,  4.,  6.,  8.,
      26., 28., 30., 32., 9.,  11., 13., 15., 33., 35., 37., 39.,
      10., 12., 14., 16., 34., 36., 38., 40., 17., 19., 21., 23.,
      41., 43., 45., 47., 18., 20., 22., 24., 42., 44., 46., 48.};
  const std::vector<int> sizes = {2, 3, 4, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 3.,  27., 5.,  29., 7.,  31., 2.,  26., 4.,  28.,
      6.,  30., 8.,  32., 9.,  33., 11., 35., 13., 37., 15., 39.,
      10., 34., 12., 36., 14., 38., 16., 40., 17., 41., 19., 43.,
      21., 45., 23., 47., 18., 42., 20., 44., 22., 46., 24., 48.};
  const std::vector<int> sizes = {2, 3, 4, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 2., 9.,  10., 17., 18., 25., 26., 33., 34., 41., 42.,
      3., 4., 11., 12., 19., 20., 27., 28., 35., 36., 43., 44.,
      5., 6., 13., 14., 21., 22., 29., 30., 37., 38., 45., 46.,
      7., 8., 15., 16., 23., 24., 31., 32., 39., 40., 47., 48.};
  const std::vector<int> sizes = {2, 3, 4, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 9.,  17., 2., 10., 18., 25., 33., 41., 26., 34., 42.,
      3., 11., 19., 4., 12., 20., 27., 35., 43., 28., 36., 44.,
      5., 13., 21., 6., 14., 22., 29., 37., 45., 30., 38., 46.,
      7., 15., 23., 8., 16., 24., 31., 39., 47., 32., 40., 48.};
  const std::vector<int> sizes = {2, 3, 4, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 2., 25., 26., 9.,  10., 33., 34., 17., 18., 41., 42.,
      3., 4., 27., 28., 11., 12., 35., 36., 19., 20., 43., 44.,
      5., 6., 29., 30., 13., 14., 37., 38., 21., 22., 45., 46.,
      7., 8., 31., 32., 15., 16., 39., 40., 23., 24., 47., 48.};
  const std::vector<int> sizes = {2, 3, 4, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 25., 2., 26., 9.,  33., 10., 34., 17., 41., 18., 42.,
      3., 27., 4., 28., 11., 35., 12., 36., 19., 43., 20., 44.,
      5., 29., 6., 30., 13., 37., 14., 38., 21., 45., 22., 46.,
      7., 31., 8., 32., 15., 39., 16., 40., 23., 47., 24., 48.};
  const std::vector<int> sizes = {2, 3, 4, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 9.,  17., 25., 33., 41., 2., 10., 18., 26., 34., 42.,
      3., 11., 19., 27., 35., 43., 4., 12., 20., 28., 36., 44.,
      5., 13., 21., 29., 37., 45., 6., 14., 22., 30., 38., 46.,
      7., 15., 23., 31., 39., 47., 8., 16., 24., 32., 40., 48.};
  const std::vector<int> sizes = {2, 3, 4, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 25., 9.,  33., 17., 41., 2., 26., 10., 34., 18., 42.,
      3., 27., 11., 35., 19., 43., 4., 28., 12., 36., 20., 44.,
      5., 29., 13., 37., 21., 45., 6., 30., 14., 38., 22., 46.,
      7., 31., 15., 39., 23., 47., 8., 32., 16., 40., 24., 48.};
  const std::vector<int> sizes = {2, 3, 4, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23.,
      25., 27., 29., 31., 33., 35., 37., 39., 41., 43., 45., 47.,
      2.,  4.,  6.,  8.,  10., 12., 14., 16., 18., 20., 22., 24.,
      26., 28., 30., 32., 34., 36., 38., 40., 42., 44., 46., 48.};
  const std::vector<int> sizes = {2, 3, 4, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 3.,  11., 19., 5.,  13., 21., 7.,  15., 23.,
      25., 33., 41., 27., 35., 43., 29., 37., 45., 31., 39., 47.,
      2.,  10., 18., 4.,  12., 20., 6.,  14., 22., 8.,  16., 24.,
      26., 34., 42., 28., 36., 44., 30., 38., 46., 32., 40., 48.};
  const std::vector<int> sizes = {2, 3, 4, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  25., 27., 29., 31., 9.,  11., 13., 15.,
      33., 35., 37., 39., 17., 19., 21., 23., 41., 43., 45., 47.,
      2.,  4.,  6.,  8.,  26., 28., 30., 32., 10., 12., 14., 16.,
      34., 36., 38., 40., 18., 20., 22., 24., 42., 44., 46., 48.};
  const std::vector<int> sizes = {2, 3, 4, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 3.,  27., 5.,  29., 7.,  31., 9.,  33., 11., 35.,
      13., 37., 15., 39., 17., 41., 19., 43., 21., 45., 23., 47.,
      2.,  26., 4.,  28., 6.,  30., 8.,  32., 10., 34., 12., 36.,
      14., 38., 16., 40., 18., 42., 20., 44., 22., 46., 24., 48.};
  const std::vector<int> sizes = {2, 3, 4, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 9.,  17., 25., 33., 41., 3., 11., 19., 27., 35., 43.,
      5., 13., 21., 29., 37., 45., 7., 15., 23., 31., 39., 47.,
      2., 10., 18., 26., 34., 42., 4., 12., 20., 28., 36., 44.,
      6., 14., 22., 30., 38., 46., 8., 16., 24., 32., 40., 48.};
  const std::vector<int> sizes = {2, 3, 4, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 25., 9.,  33., 17., 41., 3., 27., 11., 35., 19., 43.,
      5., 29., 13., 37., 21., 45., 7., 31., 15., 39., 23., 47.,
      2., 26., 10., 34., 18., 42., 4., 28., 12., 36., 20., 44.,
      6., 30., 14., 38., 22., 46., 8., 32., 16., 40., 24., 48.};
  const std::vector<int> sizes = {2, 3, 4, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14., 15.,
      16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 30.,
      31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42., 43., 44., 45.,
      46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56., 57., 58., 59., 60.,
      61., 62., 63., 64., 65., 66., 67., 68., 69., 70., 71., 72.};
  const std::vector<int> sizes = {2, 3, 4, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 2.,  5.,  8.,  11., 3.,  6.,  9.,  12., 13., 16., 19.,
      22., 14., 17., 20., 23., 15., 18., 21., 24., 25., 28., 31., 34., 26., 29.,
      32., 35., 27., 30., 33., 36., 37., 40., 43., 46., 38., 41., 44., 47., 39.,
      42., 45., 48., 49., 52., 55., 58., 50., 53., 56., 59., 51., 54., 57., 60.,
      61., 64., 67., 70., 62., 65., 68., 71., 63., 66., 69., 72.};
  const std::vector<int> sizes = {2, 3, 4, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  13., 14., 15., 25., 26., 27., 4.,  5.,  6.,  16., 17., 18.,
      28., 29., 30., 7.,  8.,  9.,  19., 20., 21., 31., 32., 33., 10., 11., 12.,
      22., 23., 24., 34., 35., 36., 37., 38., 39., 49., 50., 51., 61., 62., 63.,
      40., 41., 42., 52., 53., 54., 64., 65., 66., 43., 44., 45., 55., 56., 57.,
      67., 68., 69., 46., 47., 48., 58., 59., 60., 70., 71., 72.};
  const std::vector<int> sizes = {2, 3, 4, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 2.,  14., 26., 3.,  15., 27., 4.,  16., 28., 5.,  17., 29.,
      6.,  18., 30., 7.,  19., 31., 8.,  20., 32., 9.,  21., 33., 10., 22., 34.,
      11., 23., 35., 12., 24., 36., 37., 49., 61., 38., 50., 62., 39., 51., 63.,
      40., 52., 64., 41., 53., 65., 42., 54., 66., 43., 55., 67., 44., 56., 68.,
      45., 57., 69., 46., 58., 70., 47., 59., 71., 48., 60., 72.};
  const std::vector<int> sizes = {2, 3, 4, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 28., 31., 34., 2.,  5.,  8.,
      11., 14., 17., 20., 23., 26., 29., 32., 35., 3.,  6.,  9.,  12., 15., 18.,
      21., 24., 27., 30., 33., 36., 37., 40., 43., 46., 49., 52., 55., 58., 61.,
      64., 67., 70., 38., 41., 44., 47., 50., 53., 56., 59., 62., 65., 68., 71.,
      39., 42., 45., 48., 51., 54., 57., 60., 63., 66., 69., 72.};
  const std::vector<int> sizes = {2, 3, 4, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 4.,  16., 28., 7.,  19., 31., 10., 22., 34., 2.,  14., 26.,
      5.,  17., 29., 8.,  20., 32., 11., 23., 35., 3.,  15., 27., 6.,  18., 30.,
      9.,  21., 33., 12., 24., 36., 37., 49., 61., 40., 52., 64., 43., 55., 67.,
      46., 58., 70., 38., 50., 62., 41., 53., 65., 44., 56., 68., 47., 59., 71.,
      39., 51., 63., 42., 54., 66., 45., 57., 69., 48., 60., 72.};
  const std::vector<int> sizes = {2, 3, 4, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 37., 38., 39.,
      40., 41., 42., 43., 44., 45., 46., 47., 48., 13., 14., 15., 16., 17., 18.,
      19., 20., 21., 22., 23., 24., 49., 50., 51., 52., 53., 54., 55., 56., 57.,
      58., 59., 60., 25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.,
      61., 62., 63., 64., 65., 66., 67., 68., 69., 70., 71., 72.};
  const std::vector<int> sizes = {2, 3, 4, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 2.,  5.,  8.,  11., 3.,  6.,  9.,  12., 37., 40., 43.,
      46., 38., 41., 44., 47., 39., 42., 45., 48., 13., 16., 19., 22., 14., 17.,
      20., 23., 15., 18., 21., 24., 49., 52., 55., 58., 50., 53., 56., 59., 51.,
      54., 57., 60., 25., 28., 31., 34., 26., 29., 32., 35., 27., 30., 33., 36.,
      61., 64., 67., 70., 62., 65., 68., 71., 63., 66., 69., 72.};
  const std::vector<int> sizes = {2, 3, 4, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  37., 38., 39., 4.,  5.,  6.,  40., 41., 42., 7.,  8.,  9.,
      43., 44., 45., 10., 11., 12., 46., 47., 48., 13., 14., 15., 49., 50., 51.,
      16., 17., 18., 52., 53., 54., 19., 20., 21., 55., 56., 57., 22., 23., 24.,
      58., 59., 60., 25., 26., 27., 61., 62., 63., 28., 29., 30., 64., 65., 66.,
      31., 32., 33., 67., 68., 69., 34., 35., 36., 70., 71., 72.};
  const std::vector<int> sizes = {2, 3, 4, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 2.,  38., 3.,  39., 4.,  40., 5.,  41., 6.,  42., 7.,  43., 8.,
      44., 9.,  45., 10., 46., 11., 47., 12., 48., 13., 49., 14., 50., 15., 51.,
      16., 52., 17., 53., 18., 54., 19., 55., 20., 56., 21., 57., 22., 58., 23.,
      59., 24., 60., 25., 61., 26., 62., 27., 63., 28., 64., 29., 65., 30., 66.,
      31., 67., 32., 68., 33., 69., 34., 70., 35., 71., 36., 72.};
  const std::vector<int> sizes = {2, 3, 4, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 37., 40., 43., 46., 2.,  5.,  8.,  11., 38., 41., 44.,
      47., 3.,  6.,  9.,  12., 39., 42., 45., 48., 13., 16., 19., 22., 49., 52.,
      55., 58., 14., 17., 20., 23., 50., 53., 56., 59., 15., 18., 21., 24., 51.,
      54., 57., 60., 25., 28., 31., 34., 61., 64., 67., 70., 26., 29., 32., 35.,
      62., 65., 68., 71., 27., 30., 33., 36., 63., 66., 69., 72.};
  const std::vector<int> sizes = {2, 3, 4, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 4.,  40., 7.,  43., 10., 46., 2.,  38., 5.,  41., 8.,  44., 11.,
      47., 3.,  39., 6.,  42., 9.,  45., 12., 48., 13., 49., 16., 52., 19., 55.,
      22., 58., 14., 50., 17., 53., 20., 56., 23., 59., 15., 51., 18., 54., 21.,
      57., 24., 60., 25., 61., 28., 64., 31., 67., 34., 70., 26., 62., 29., 65.,
      32., 68., 35., 71., 27., 63., 30., 66., 33., 69., 36., 72.};
  const std::vector<int> sizes = {2, 3, 4, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  13., 14., 15., 25., 26., 27., 37., 38., 39., 49., 50., 51.,
      61., 62., 63., 4.,  5.,  6.,  16., 17., 18., 28., 29., 30., 40., 41., 42.,
      52., 53., 54., 64., 65., 66., 7.,  8.,  9.,  19., 20., 21., 31., 32., 33.,
      43., 44., 45., 55., 56., 57., 67., 68., 69., 10., 11., 12., 22., 23., 24.,
      34., 35., 36., 46., 47., 48., 58., 59., 60., 70., 71., 72.};
  const std::vector<int> sizes = {2, 3, 4, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 2.,  14., 26., 3.,  15., 27., 37., 49., 61., 38., 50., 62.,
      39., 51., 63., 4.,  16., 28., 5.,  17., 29., 6.,  18., 30., 40., 52., 64.,
      41., 53., 65., 42., 54., 66., 7.,  19., 31., 8.,  20., 32., 9.,  21., 33.,
      43., 55., 67., 44., 56., 68., 45., 57., 69., 10., 22., 34., 11., 23., 35.,
      12., 24., 36., 46., 58., 70., 47., 59., 71., 48., 60., 72.};
  const std::vector<int> sizes = {2, 3, 4, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  37., 38., 39., 13., 14., 15., 49., 50., 51., 25., 26., 27.,
      61., 62., 63., 4.,  5.,  6.,  40., 41., 42., 16., 17., 18., 52., 53., 54.,
      28., 29., 30., 64., 65., 66., 7.,  8.,  9.,  43., 44., 45., 19., 20., 21.,
      55., 56., 57., 31., 32., 33., 67., 68., 69., 10., 11., 12., 46., 47., 48.,
      22., 23., 24., 58., 59., 60., 34., 35., 36., 70., 71., 72.};
  const std::vector<int> sizes = {2, 3, 4, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 2.,  38., 3.,  39., 13., 49., 14., 50., 15., 51., 25., 61., 26.,
      62., 27., 63., 4.,  40., 5.,  41., 6.,  42., 16., 52., 17., 53., 18., 54.,
      28., 64., 29., 65., 30., 66., 7.,  43., 8.,  44., 9.,  45., 19., 55., 20.,
      56., 21., 57., 31., 67., 32., 68., 33., 69., 10., 46., 11., 47., 12., 48.,
      22., 58., 23., 59., 24., 60., 34., 70., 35., 71., 36., 72.};
  const std::vector<int> sizes = {2, 3, 4, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 49., 61., 2.,  14., 26., 38., 50., 62., 3.,  15., 27.,
      39., 51., 63., 4.,  16., 28., 40., 52., 64., 5.,  17., 29., 41., 53., 65.,
      6.,  18., 30., 42., 54., 66., 7.,  19., 31., 43., 55., 67., 8.,  20., 32.,
      44., 56., 68., 9.,  21., 33., 45., 57., 69., 10., 22., 34., 46., 58., 70.,
      11., 23., 35., 47., 59., 71., 12., 24., 36., 48., 60., 72.};
  const std::vector<int> sizes = {2, 3, 4, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 13., 49., 25., 61., 2.,  38., 14., 50., 26., 62., 3.,  39., 15.,
      51., 27., 63., 4.,  40., 16., 52., 28., 64., 5.,  41., 17., 53., 29., 65.,
      6.,  42., 18., 54., 30., 66., 7.,  43., 19., 55., 31., 67., 8.,  44., 20.,
      56., 32., 68., 9.,  45., 21., 57., 33., 69., 10., 46., 22., 58., 34., 70.,
      11., 47., 23., 59., 35., 71., 12., 48., 24., 60., 36., 72.};
  const std::vector<int> sizes = {2, 3, 4, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 28., 31., 34., 37., 40., 43.,
      46., 49., 52., 55., 58., 61., 64., 67., 70., 2.,  5.,  8.,  11., 14., 17.,
      20., 23., 26., 29., 32., 35., 38., 41., 44., 47., 50., 53., 56., 59., 62.,
      65., 68., 71., 3.,  6.,  9.,  12., 15., 18., 21., 24., 27., 30., 33., 36.,
      39., 42., 45., 48., 51., 54., 57., 60., 63., 66., 69., 72.};
  const std::vector<int> sizes = {2, 3, 4, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 4.,  16., 28., 7.,  19., 31., 10., 22., 34., 37., 49., 61.,
      40., 52., 64., 43., 55., 67., 46., 58., 70., 2.,  14., 26., 5.,  17., 29.,
      8.,  20., 32., 11., 23., 35., 38., 50., 62., 41., 53., 65., 44., 56., 68.,
      47., 59., 71., 3.,  15., 27., 6.,  18., 30., 9.,  21., 33., 12., 24., 36.,
      39., 51., 63., 42., 54., 66., 45., 57., 69., 48., 60., 72.};
  const std::vector<int> sizes = {2, 3, 4, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 37., 40., 43., 46., 13., 16., 19., 22., 49., 52., 55.,
      58., 25., 28., 31., 34., 61., 64., 67., 70., 2.,  5.,  8.,  11., 38., 41.,
      44., 47., 14., 17., 20., 23., 50., 53., 56., 59., 26., 29., 32., 35., 62.,
      65., 68., 71., 3.,  6.,  9.,  12., 39., 42., 45., 48., 15., 18., 21., 24.,
      51., 54., 57., 60., 27., 30., 33., 36., 63., 66., 69., 72.};
  const std::vector<int> sizes = {2, 3, 4, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 4.,  40., 7.,  43., 10., 46., 13., 49., 16., 52., 19., 55., 22.,
      58., 25., 61., 28., 64., 31., 67., 34., 70., 2.,  38., 5.,  41., 8.,  44.,
      11., 47., 14., 50., 17., 53., 20., 56., 23., 59., 26., 62., 29., 65., 32.,
      68., 35., 71., 3.,  39., 6.,  42., 9.,  45., 12., 48., 15., 51., 18., 54.,
      21., 57., 24., 60., 27., 63., 30., 66., 33., 69., 36., 72.};
  const std::vector<int> sizes = {2, 3, 4, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 49., 61., 4.,  16., 28., 40., 52., 64., 7.,  19., 31.,
      43., 55., 67., 10., 22., 34., 46., 58., 70., 2.,  14., 26., 38., 50., 62.,
      5.,  17., 29., 41., 53., 65., 8.,  20., 32., 44., 56., 68., 11., 23., 35.,
      47., 59., 71., 3.,  15., 27., 39., 51., 63., 6.,  18., 30., 42., 54., 66.,
      9.,  21., 33., 45., 57., 69., 12., 24., 36., 48., 60., 72.};
  const std::vector<int> sizes = {2, 3, 4, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 13., 49., 25., 61., 4.,  40., 16., 52., 28., 64., 7.,  43., 19.,
      55., 31., 67., 10., 46., 22., 58., 34., 70., 2.,  38., 14., 50., 26., 62.,
      5.,  41., 17., 53., 29., 65., 8.,  44., 20., 56., 32., 68., 11., 47., 23.,
      59., 35., 71., 3.,  39., 15., 51., 27., 63., 6.,  42., 18., 54., 30., 66.,
      9.,  45., 21., 57., 33., 69., 12., 48., 24., 60., 36., 72.};
  const std::vector<int> sizes = {2, 3, 4, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14.,
      15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28.,
      29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42.,
      43., 44., 45., 46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56.,
      57., 58., 59., 60., 61., 62., 63., 64., 65., 66., 67., 68., 69., 70.,
      71., 72., 73., 74., 75., 76., 77., 78., 79., 80., 81., 82., 83., 84.,
      85., 86., 87., 88., 89., 90., 91., 92., 93., 94., 95., 96.};
  const std::vector<int> sizes = {2, 3, 4, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 2.,  6.,  10., 14., 3.,  7.,  11., 15., 4.,  8.,
      12., 16., 17., 21., 25., 29., 18., 22., 26., 30., 19., 23., 27., 31.,
      20., 24., 28., 32., 33., 37., 41., 45., 34., 38., 42., 46., 35., 39.,
      43., 47., 36., 40., 44., 48., 49., 53., 57., 61., 50., 54., 58., 62.,
      51., 55., 59., 63., 52., 56., 60., 64., 65., 69., 73., 77., 66., 70.,
      74., 78., 67., 71., 75., 79., 68., 72., 76., 80., 81., 85., 89., 93.,
      82., 86., 90., 94., 83., 87., 91., 95., 84., 88., 92., 96.};
  const std::vector<int> sizes = {2, 3, 4, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  17., 18., 19., 20., 33., 34., 35., 36., 5.,  6.,
      7.,  8.,  21., 22., 23., 24., 37., 38., 39., 40., 9.,  10., 11., 12.,
      25., 26., 27., 28., 41., 42., 43., 44., 13., 14., 15., 16., 29., 30.,
      31., 32., 45., 46., 47., 48., 49., 50., 51., 52., 65., 66., 67., 68.,
      81., 82., 83., 84., 53., 54., 55., 56., 69., 70., 71., 72., 85., 86.,
      87., 88., 57., 58., 59., 60., 73., 74., 75., 76., 89., 90., 91., 92.,
      61., 62., 63., 64., 77., 78., 79., 80., 93., 94., 95., 96.};
  const std::vector<int> sizes = {2, 3, 4, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 2.,  18., 34., 3.,  19., 35., 4.,  20., 36., 5.,  21.,
      37., 6.,  22., 38., 7.,  23., 39., 8.,  24., 40., 9.,  25., 41., 10.,
      26., 42., 11., 27., 43., 12., 28., 44., 13., 29., 45., 14., 30., 46.,
      15., 31., 47., 16., 32., 48., 49., 65., 81., 50., 66., 82., 51., 67.,
      83., 52., 68., 84., 53., 69., 85., 54., 70., 86., 55., 71., 87., 56.,
      72., 88., 57., 73., 89., 58., 74., 90., 59., 75., 91., 60., 76., 92.,
      61., 77., 93., 62., 78., 94., 63., 79., 95., 64., 80., 96.};
  const std::vector<int> sizes = {2, 3, 4, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 25., 29., 33., 37., 41., 45., 2.,  6.,
      10., 14., 18., 22., 26., 30., 34., 38., 42., 46., 3.,  7.,  11., 15.,
      19., 23., 27., 31., 35., 39., 43., 47., 4.,  8.,  12., 16., 20., 24.,
      28., 32., 36., 40., 44., 48., 49., 53., 57., 61., 65., 69., 73., 77.,
      81., 85., 89., 93., 50., 54., 58., 62., 66., 70., 74., 78., 82., 86.,
      90., 94., 51., 55., 59., 63., 67., 71., 75., 79., 83., 87., 91., 95.,
      52., 56., 60., 64., 68., 72., 76., 80., 84., 88., 92., 96.};
  const std::vector<int> sizes = {2, 3, 4, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 5.,  21., 37., 9.,  25., 41., 13., 29., 45., 2.,  18.,
      34., 6.,  22., 38., 10., 26., 42., 14., 30., 46., 3.,  19., 35., 7.,
      23., 39., 11., 27., 43., 15., 31., 47., 4.,  20., 36., 8.,  24., 40.,
      12., 28., 44., 16., 32., 48., 49., 65., 81., 53., 69., 85., 57., 73.,
      89., 61., 77., 93., 50., 66., 82., 54., 70., 86., 58., 74., 90., 62.,
      78., 94., 51., 67., 83., 55., 71., 87., 59., 75., 91., 63., 79., 95.,
      52., 68., 84., 56., 72., 88., 60., 76., 92., 64., 80., 96.};
  const std::vector<int> sizes = {2, 3, 4, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14.,
      15., 16., 49., 50., 51., 52., 53., 54., 55., 56., 57., 58., 59., 60.,
      61., 62., 63., 64., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26.,
      27., 28., 29., 30., 31., 32., 65., 66., 67., 68., 69., 70., 71., 72.,
      73., 74., 75., 76., 77., 78., 79., 80., 33., 34., 35., 36., 37., 38.,
      39., 40., 41., 42., 43., 44., 45., 46., 47., 48., 81., 82., 83., 84.,
      85., 86., 87., 88., 89., 90., 91., 92., 93., 94., 95., 96.};
  const std::vector<int> sizes = {2, 3, 4, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 2.,  6.,  10., 14., 3.,  7.,  11., 15., 4.,  8.,
      12., 16., 49., 53., 57., 61., 50., 54., 58., 62., 51., 55., 59., 63.,
      52., 56., 60., 64., 17., 21., 25., 29., 18., 22., 26., 30., 19., 23.,
      27., 31., 20., 24., 28., 32., 65., 69., 73., 77., 66., 70., 74., 78.,
      67., 71., 75., 79., 68., 72., 76., 80., 33., 37., 41., 45., 34., 38.,
      42., 46., 35., 39., 43., 47., 36., 40., 44., 48., 81., 85., 89., 93.,
      82., 86., 90., 94., 83., 87., 91., 95., 84., 88., 92., 96.};
  const std::vector<int> sizes = {2, 3, 4, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  49., 50., 51., 52., 5.,  6.,  7.,  8.,  53., 54.,
      55., 56., 9.,  10., 11., 12., 57., 58., 59., 60., 13., 14., 15., 16.,
      61., 62., 63., 64., 17., 18., 19., 20., 65., 66., 67., 68., 21., 22.,
      23., 24., 69., 70., 71., 72., 25., 26., 27., 28., 73., 74., 75., 76.,
      29., 30., 31., 32., 77., 78., 79., 80., 33., 34., 35., 36., 81., 82.,
      83., 84., 37., 38., 39., 40., 85., 86., 87., 88., 41., 42., 43., 44.,
      89., 90., 91., 92., 45., 46., 47., 48., 93., 94., 95., 96.};
  const std::vector<int> sizes = {2, 3, 4, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 2.,  50., 3.,  51., 4.,  52., 5.,  53., 6.,  54., 7.,  55.,
      8.,  56., 9.,  57., 10., 58., 11., 59., 12., 60., 13., 61., 14., 62.,
      15., 63., 16., 64., 17., 65., 18., 66., 19., 67., 20., 68., 21., 69.,
      22., 70., 23., 71., 24., 72., 25., 73., 26., 74., 27., 75., 28., 76.,
      29., 77., 30., 78., 31., 79., 32., 80., 33., 81., 34., 82., 35., 83.,
      36., 84., 37., 85., 38., 86., 39., 87., 40., 88., 41., 89., 42., 90.,
      43., 91., 44., 92., 45., 93., 46., 94., 47., 95., 48., 96.};
  const std::vector<int> sizes = {2, 3, 4, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 49., 53., 57., 61., 2.,  6.,  10., 14., 50., 54.,
      58., 62., 3.,  7.,  11., 15., 51., 55., 59., 63., 4.,  8.,  12., 16.,
      52., 56., 60., 64., 17., 21., 25., 29., 65., 69., 73., 77., 18., 22.,
      26., 30., 66., 70., 74., 78., 19., 23., 27., 31., 67., 71., 75., 79.,
      20., 24., 28., 32., 68., 72., 76., 80., 33., 37., 41., 45., 81., 85.,
      89., 93., 34., 38., 42., 46., 82., 86., 90., 94., 35., 39., 43., 47.,
      83., 87., 91., 95., 36., 40., 44., 48., 84., 88., 92., 96.};
  const std::vector<int> sizes = {2, 3, 4, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 5.,  53., 9.,  57., 13., 61., 2.,  50., 6.,  54., 10., 58.,
      14., 62., 3.,  51., 7.,  55., 11., 59., 15., 63., 4.,  52., 8.,  56.,
      12., 60., 16., 64., 17., 65., 21., 69., 25., 73., 29., 77., 18., 66.,
      22., 70., 26., 74., 30., 78., 19., 67., 23., 71., 27., 75., 31., 79.,
      20., 68., 24., 72., 28., 76., 32., 80., 33., 81., 37., 85., 41., 89.,
      45., 93., 34., 82., 38., 86., 42., 90., 46., 94., 35., 83., 39., 87.,
      43., 91., 47., 95., 36., 84., 40., 88., 44., 92., 48., 96.};
  const std::vector<int> sizes = {2, 3, 4, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  17., 18., 19., 20., 33., 34., 35., 36., 49., 50.,
      51., 52., 65., 66., 67., 68., 81., 82., 83., 84., 5.,  6.,  7.,  8.,
      21., 22., 23., 24., 37., 38., 39., 40., 53., 54., 55., 56., 69., 70.,
      71., 72., 85., 86., 87., 88., 9.,  10., 11., 12., 25., 26., 27., 28.,
      41., 42., 43., 44., 57., 58., 59., 60., 73., 74., 75., 76., 89., 90.,
      91., 92., 13., 14., 15., 16., 29., 30., 31., 32., 45., 46., 47., 48.,
      61., 62., 63., 64., 77., 78., 79., 80., 93., 94., 95., 96.};
  const std::vector<int> sizes = {2, 3, 4, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 2.,  18., 34., 3.,  19., 35., 4.,  20., 36., 49., 65.,
      81., 50., 66., 82., 51., 67., 83., 52., 68., 84., 5.,  21., 37., 6.,
      22., 38., 7.,  23., 39., 8.,  24., 40., 53., 69., 85., 54., 70., 86.,
      55., 71., 87., 56., 72., 88., 9.,  25., 41., 10., 26., 42., 11., 27.,
      43., 12., 28., 44., 57., 73., 89., 58., 74., 90., 59., 75., 91., 60.,
      76., 92., 13., 29., 45., 14., 30., 46., 15., 31., 47., 16., 32., 48.,
      61., 77., 93., 62., 78., 94., 63., 79., 95., 64., 80., 96.};
  const std::vector<int> sizes = {2, 3, 4, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  49., 50., 51., 52., 17., 18., 19., 20., 65., 66.,
      67., 68., 33., 34., 35., 36., 81., 82., 83., 84., 5.,  6.,  7.,  8.,
      53., 54., 55., 56., 21., 22., 23., 24., 69., 70., 71., 72., 37., 38.,
      39., 40., 85., 86., 87., 88., 9.,  10., 11., 12., 57., 58., 59., 60.,
      25., 26., 27., 28., 73., 74., 75., 76., 41., 42., 43., 44., 89., 90.,
      91., 92., 13., 14., 15., 16., 61., 62., 63., 64., 29., 30., 31., 32.,
      77., 78., 79., 80., 45., 46., 47., 48., 93., 94., 95., 96.};
  const std::vector<int> sizes = {2, 3, 4, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 2.,  50., 3.,  51., 4.,  52., 17., 65., 18., 66., 19., 67.,
      20., 68., 33., 81., 34., 82., 35., 83., 36., 84., 5.,  53., 6.,  54.,
      7.,  55., 8.,  56., 21., 69., 22., 70., 23., 71., 24., 72., 37., 85.,
      38., 86., 39., 87., 40., 88., 9.,  57., 10., 58., 11., 59., 12., 60.,
      25., 73., 26., 74., 27., 75., 28., 76., 41., 89., 42., 90., 43., 91.,
      44., 92., 13., 61., 14., 62., 15., 63., 16., 64., 29., 77., 30., 78.,
      31., 79., 32., 80., 45., 93., 46., 94., 47., 95., 48., 96.};
  const std::vector<int> sizes = {2, 3, 4, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 65., 81., 2.,  18., 34., 50., 66., 82., 3.,  19.,
      35., 51., 67., 83., 4.,  20., 36., 52., 68., 84., 5.,  21., 37., 53.,
      69., 85., 6.,  22., 38., 54., 70., 86., 7.,  23., 39., 55., 71., 87.,
      8.,  24., 40., 56., 72., 88., 9.,  25., 41., 57., 73., 89., 10., 26.,
      42., 58., 74., 90., 11., 27., 43., 59., 75., 91., 12., 28., 44., 60.,
      76., 92., 13., 29., 45., 61., 77., 93., 14., 30., 46., 62., 78., 94.,
      15., 31., 47., 63., 79., 95., 16., 32., 48., 64., 80., 96.};
  const std::vector<int> sizes = {2, 3, 4, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 17., 65., 33., 81., 2.,  50., 18., 66., 34., 82., 3.,  51.,
      19., 67., 35., 83., 4.,  52., 20., 68., 36., 84., 5.,  53., 21., 69.,
      37., 85., 6.,  54., 22., 70., 38., 86., 7.,  55., 23., 71., 39., 87.,
      8.,  56., 24., 72., 40., 88., 9.,  57., 25., 73., 41., 89., 10., 58.,
      26., 74., 42., 90., 11., 59., 27., 75., 43., 91., 12., 60., 28., 76.,
      44., 92., 13., 61., 29., 77., 45., 93., 14., 62., 30., 78., 46., 94.,
      15., 63., 31., 79., 47., 95., 16., 64., 32., 80., 48., 96.};
  const std::vector<int> sizes = {2, 3, 4, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 25., 29., 33., 37., 41., 45., 49., 53.,
      57., 61., 65., 69., 73., 77., 81., 85., 89., 93., 2.,  6.,  10., 14.,
      18., 22., 26., 30., 34., 38., 42., 46., 50., 54., 58., 62., 66., 70.,
      74., 78., 82., 86., 90., 94., 3.,  7.,  11., 15., 19., 23., 27., 31.,
      35., 39., 43., 47., 51., 55., 59., 63., 67., 71., 75., 79., 83., 87.,
      91., 95., 4.,  8.,  12., 16., 20., 24., 28., 32., 36., 40., 44., 48.,
      52., 56., 60., 64., 68., 72., 76., 80., 84., 88., 92., 96.};
  const std::vector<int> sizes = {2, 3, 4, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 5.,  21., 37., 9.,  25., 41., 13., 29., 45., 49., 65.,
      81., 53., 69., 85., 57., 73., 89., 61., 77., 93., 2.,  18., 34., 6.,
      22., 38., 10., 26., 42., 14., 30., 46., 50., 66., 82., 54., 70., 86.,
      58., 74., 90., 62., 78., 94., 3.,  19., 35., 7.,  23., 39., 11., 27.,
      43., 15., 31., 47., 51., 67., 83., 55., 71., 87., 59., 75., 91., 63.,
      79., 95., 4.,  20., 36., 8.,  24., 40., 12., 28., 44., 16., 32., 48.,
      52., 68., 84., 56., 72., 88., 60., 76., 92., 64., 80., 96.};
  const std::vector<int> sizes = {2, 3, 4, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 49., 53., 57., 61., 17., 21., 25., 29., 65., 69.,
      73., 77., 33., 37., 41., 45., 81., 85., 89., 93., 2.,  6.,  10., 14.,
      50., 54., 58., 62., 18., 22., 26., 30., 66., 70., 74., 78., 34., 38.,
      42., 46., 82., 86., 90., 94., 3.,  7.,  11., 15., 51., 55., 59., 63.,
      19., 23., 27., 31., 67., 71., 75., 79., 35., 39., 43., 47., 83., 87.,
      91., 95., 4.,  8.,  12., 16., 52., 56., 60., 64., 20., 24., 28., 32.,
      68., 72., 76., 80., 36., 40., 44., 48., 84., 88., 92., 96.};
  const std::vector<int> sizes = {2, 3, 4, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 5.,  53., 9.,  57., 13., 61., 17., 65., 21., 69., 25., 73.,
      29., 77., 33., 81., 37., 85., 41., 89., 45., 93., 2.,  50., 6.,  54.,
      10., 58., 14., 62., 18., 66., 22., 70., 26., 74., 30., 78., 34., 82.,
      38., 86., 42., 90., 46., 94., 3.,  51., 7.,  55., 11., 59., 15., 63.,
      19., 67., 23., 71., 27., 75., 31., 79., 35., 83., 39., 87., 43., 91.,
      47., 95., 4.,  52., 8.,  56., 12., 60., 16., 64., 20., 68., 24., 72.,
      28., 76., 32., 80., 36., 84., 40., 88., 44., 92., 48., 96.};
  const std::vector<int> sizes = {2, 3, 4, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 65., 81., 5.,  21., 37., 53., 69., 85., 9.,  25.,
      41., 57., 73., 89., 13., 29., 45., 61., 77., 93., 2.,  18., 34., 50.,
      66., 82., 6.,  22., 38., 54., 70., 86., 10., 26., 42., 58., 74., 90.,
      14., 30., 46., 62., 78., 94., 3.,  19., 35., 51., 67., 83., 7.,  23.,
      39., 55., 71., 87., 11., 27., 43., 59., 75., 91., 15., 31., 47., 63.,
      79., 95., 4.,  20., 36., 52., 68., 84., 8.,  24., 40., 56., 72., 88.,
      12., 28., 44., 60., 76., 92., 16., 32., 48., 64., 80., 96.};
  const std::vector<int> sizes = {2, 3, 4, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x3x4x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 17., 65., 33., 81., 5.,  53., 21., 69., 37., 85., 9.,  57.,
      25., 73., 41., 89., 13., 61., 29., 77., 45., 93., 2.,  50., 18., 66.,
      34., 82., 6.,  54., 22., 70., 38., 86., 10., 58., 26., 74., 42., 90.,
      14., 62., 30., 78., 46., 94., 3.,  51., 19., 67., 35., 83., 7.,  55.,
      23., 71., 39., 87., 11., 59., 27., 75., 43., 91., 15., 63., 31., 79.,
      47., 95., 4.,  52., 20., 68., 36., 84., 8.,  56., 24., 72., 40., 88.,
      12., 60., 28., 76., 44., 92., 16., 64., 32., 80., 48., 96.};
  const std::vector<int> sizes = {2, 3, 4, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11.,
      12., 13., 14., 15., 16., 17., 18., 19., 20., 21., 22.,
      23., 24., 25., 26., 27., 28., 29., 30., 31., 32.};
  const std::vector<int> sizes = {2, 4, 2, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  2.,  4.,  5.,  7.,  6.,  8.,  9.,  11., 10.,
      12., 13., 15., 14., 16., 17., 19., 18., 20., 21., 23.,
      22., 24., 25., 27., 26., 28., 29., 31., 30., 32.};
  const std::vector<int> sizes = {2, 4, 2, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  5.,  6.,  9.,  10., 13., 14., 3.,  4.,  7.,
      8.,  11., 12., 15., 16., 17., 18., 21., 22., 25., 26.,
      29., 30., 19., 20., 23., 24., 27., 28., 31., 32.};
  const std::vector<int> sizes = {2, 4, 2, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 2.,  6.,  10., 14., 3.,  7.,  11.,
      15., 4.,  8.,  12., 16., 17., 21., 25., 29., 18., 22.,
      26., 30., 19., 23., 27., 31., 20., 24., 28., 32.};
  const std::vector<int> sizes = {2, 4, 2, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 2.,  4.,  6.,
      8.,  10., 12., 14., 16., 17., 19., 21., 23., 25., 27.,
      29., 31., 18., 20., 22., 24., 26., 28., 30., 32.};
  const std::vector<int> sizes = {2, 4, 2, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 3.,  7.,  11., 15., 2.,  6.,  10.,
      14., 4.,  8.,  12., 16., 17., 21., 25., 29., 19., 23.,
      27., 31., 18., 22., 26., 30., 20., 24., 28., 32.};
  const std::vector<int> sizes = {2, 4, 2, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  17., 18., 19., 20., 5.,  6.,  7.,
      8.,  21., 22., 23., 24., 9.,  10., 11., 12., 25., 26.,
      27., 28., 13., 14., 15., 16., 29., 30., 31., 32.};
  const std::vector<int> sizes = {2, 4, 2, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  2.,  4.,  17., 19., 18., 20., 5.,  7.,  6.,
      8.,  21., 23., 22., 24., 9.,  11., 10., 12., 25., 27.,
      26., 28., 13., 15., 14., 16., 29., 31., 30., 32.};
  const std::vector<int> sizes = {2, 4, 2, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  17., 18., 3.,  4.,  19., 20., 5.,  6.,  21.,
      22., 7.,  8.,  23., 24., 9.,  10., 25., 26., 11., 12.,
      27., 28., 13., 14., 29., 30., 15., 16., 31., 32.};
  const std::vector<int> sizes = {2, 4, 2, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 2.,  18., 3.,  19., 4.,  20., 5.,  21., 6.,
      22., 7.,  23., 8.,  24., 9.,  25., 10., 26., 11., 27.,
      12., 28., 13., 29., 14., 30., 15., 31., 16., 32.};
  const std::vector<int> sizes = {2, 4, 2, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  17., 19., 2.,  4.,  18., 20., 5.,  7.,  21.,
      23., 6.,  8.,  22., 24., 9.,  11., 25., 27., 10., 12.,
      26., 28., 13., 15., 29., 31., 14., 16., 30., 32.};
  const std::vector<int> sizes = {2, 4, 2, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 3.,  19., 2.,  18., 4.,  20., 5.,  21., 7.,
      23., 6.,  22., 8.,  24., 9.,  25., 11., 27., 10., 26.,
      12., 28., 13., 29., 15., 31., 14., 30., 16., 32.};
  const std::vector<int> sizes = {2, 4, 2, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  5.,  6.,  9.,  10., 13., 14., 17., 18., 21.,
      22., 25., 26., 29., 30., 3.,  4.,  7.,  8.,  11., 12.,
      15., 16., 19., 20., 23., 24., 27., 28., 31., 32.};
  const std::vector<int> sizes = {2, 4, 2, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 2.,  6.,  10., 14., 17., 21., 25.,
      29., 18., 22., 26., 30., 3.,  7.,  11., 15., 4.,  8.,
      12., 16., 19., 23., 27., 31., 20., 24., 28., 32.};
  const std::vector<int> sizes = {2, 4, 2, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  17., 18., 5.,  6.,  21., 22., 9.,  10., 25.,
      26., 13., 14., 29., 30., 3.,  4.,  19., 20., 7.,  8.,
      23., 24., 11., 12., 27., 28., 15., 16., 31., 32.};
  const std::vector<int> sizes = {2, 4, 2, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 2.,  18., 5.,  21., 6.,  22., 9.,  25., 10.,
      26., 13., 29., 14., 30., 3.,  19., 4.,  20., 7.,  23.,
      8.,  24., 11., 27., 12., 28., 15., 31., 16., 32.};
  const std::vector<int> sizes = {2, 4, 2, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 5., 9.,  13., 17., 21., 25., 29.,
                                         2., 6., 10., 14., 18., 22., 26., 30.,
                                         3., 7., 11., 15., 19., 23., 27., 31.,
                                         4., 8., 12., 16., 20., 24., 28., 32.};
  const std::vector<int> sizes = {2, 4, 2, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 17., 5., 21., 9.,  25., 13., 29.,
                                         2., 18., 6., 22., 10., 26., 14., 30.,
                                         3., 19., 7., 23., 11., 27., 15., 31.,
                                         4., 20., 8., 24., 12., 28., 16., 32.};
  const std::vector<int> sizes = {2, 4, 2, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21.,
      23., 25., 27., 29., 31., 2.,  4.,  6.,  8.,  10., 12.,
      14., 16., 18., 20., 22., 24., 26., 28., 30., 32.};
  const std::vector<int> sizes = {2, 4, 2, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 3.,  7.,  11., 15., 17., 21., 25.,
      29., 19., 23., 27., 31., 2.,  6.,  10., 14., 4.,  8.,
      12., 16., 18., 22., 26., 30., 20., 24., 28., 32.};
  const std::vector<int> sizes = {2, 4, 2, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  17., 19., 5.,  7.,  21., 23., 9.,  11., 25.,
      27., 13., 15., 29., 31., 2.,  4.,  18., 20., 6.,  8.,
      22., 24., 10., 12., 26., 28., 14., 16., 30., 32.};
  const std::vector<int> sizes = {2, 4, 2, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 3.,  19., 5.,  21., 7.,  23., 9.,  25., 11.,
      27., 13., 29., 15., 31., 2.,  18., 4.,  20., 6.,  22.,
      8.,  24., 10., 26., 12., 28., 14., 30., 16., 32.};
  const std::vector<int> sizes = {2, 4, 2, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 5., 9.,  13., 17., 21., 25., 29.,
                                         3., 7., 11., 15., 19., 23., 27., 31.,
                                         2., 6., 10., 14., 18., 22., 26., 30.,
                                         4., 8., 12., 16., 20., 24., 28., 32.};
  const std::vector<int> sizes = {2, 4, 2, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 17., 5., 21., 9.,  25., 13., 29.,
                                         3., 19., 7., 23., 11., 27., 15., 31.,
                                         2., 18., 6., 22., 10., 26., 14., 30.,
                                         4., 20., 8., 24., 12., 28., 16., 32.};
  const std::vector<int> sizes = {2, 4, 2, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.,
      25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.,
      37., 38., 39., 40., 41., 42., 43., 44., 45., 46., 47., 48.};
  const std::vector<int> sizes = {2, 4, 2, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  2.,  5.,  3.,  6.,  7.,  10., 8.,  11., 9.,  12.,
      13., 16., 14., 17., 15., 18., 19., 22., 20., 23., 21., 24.,
      25., 28., 26., 29., 27., 30., 31., 34., 32., 35., 33., 36.,
      37., 40., 38., 41., 39., 42., 43., 46., 44., 47., 45., 48.};
  const std::vector<int> sizes = {2, 4, 2, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  7.,  8.,  9.,  13., 14., 15., 19., 20., 21.,
      4.,  5.,  6.,  10., 11., 12., 16., 17., 18., 22., 23., 24.,
      25., 26., 27., 31., 32., 33., 37., 38., 39., 43., 44., 45.,
      28., 29., 30., 34., 35., 36., 40., 41., 42., 46., 47., 48.};
  const std::vector<int> sizes = {2, 4, 2, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 2.,  8.,  14., 20., 3.,  9.,  15., 21.,
      4.,  10., 16., 22., 5.,  11., 17., 23., 6.,  12., 18., 24.,
      25., 31., 37., 43., 26., 32., 38., 44., 27., 33., 39., 45.,
      28., 34., 40., 46., 29., 35., 41., 47., 30., 36., 42., 48.};
  const std::vector<int> sizes = {2, 4, 2, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 2.,  5.,  8.,  11.,
      14., 17., 20., 23., 3.,  6.,  9.,  12., 15., 18., 21., 24.,
      25., 28., 31., 34., 37., 40., 43., 46., 26., 29., 32., 35.,
      38., 41., 44., 47., 27., 30., 33., 36., 39., 42., 45., 48.};
  const std::vector<int> sizes = {2, 4, 2, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 4.,  10., 16., 22., 2.,  8.,  14., 20.,
      5.,  11., 17., 23., 3.,  9.,  15., 21., 6.,  12., 18., 24.,
      25., 31., 37., 43., 28., 34., 40., 46., 26., 32., 38., 44.,
      29., 35., 41., 47., 27., 33., 39., 45., 30., 36., 42., 48.};
  const std::vector<int> sizes = {2, 4, 2, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  25., 26., 27., 28., 29., 30.,
      7.,  8.,  9.,  10., 11., 12., 31., 32., 33., 34., 35., 36.,
      13., 14., 15., 16., 17., 18., 37., 38., 39., 40., 41., 42.,
      19., 20., 21., 22., 23., 24., 43., 44., 45., 46., 47., 48.};
  const std::vector<int> sizes = {2, 4, 2, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  2.,  5.,  3.,  6.,  25., 28., 26., 29., 27., 30.,
      7.,  10., 8.,  11., 9.,  12., 31., 34., 32., 35., 33., 36.,
      13., 16., 14., 17., 15., 18., 37., 40., 38., 41., 39., 42.,
      19., 22., 20., 23., 21., 24., 43., 46., 44., 47., 45., 48.};
  const std::vector<int> sizes = {2, 4, 2, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  25., 26., 27., 4.,  5.,  6.,  28., 29., 30.,
      7.,  8.,  9.,  31., 32., 33., 10., 11., 12., 34., 35., 36.,
      13., 14., 15., 37., 38., 39., 16., 17., 18., 40., 41., 42.,
      19., 20., 21., 43., 44., 45., 22., 23., 24., 46., 47., 48.};
  const std::vector<int> sizes = {2, 4, 2, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 2.,  26., 3.,  27., 4.,  28., 5.,  29., 6.,  30.,
      7.,  31., 8.,  32., 9.,  33., 10., 34., 11., 35., 12., 36.,
      13., 37., 14., 38., 15., 39., 16., 40., 17., 41., 18., 42.,
      19., 43., 20., 44., 21., 45., 22., 46., 23., 47., 24., 48.};
  const std::vector<int> sizes = {2, 4, 2, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  25., 28., 2.,  5.,  26., 29., 3.,  6.,  27., 30.,
      7.,  10., 31., 34., 8.,  11., 32., 35., 9.,  12., 33., 36.,
      13., 16., 37., 40., 14., 17., 38., 41., 15., 18., 39., 42.,
      19., 22., 43., 46., 20., 23., 44., 47., 21., 24., 45., 48.};
  const std::vector<int> sizes = {2, 4, 2, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 4.,  28., 2.,  26., 5.,  29., 3.,  27., 6.,  30.,
      7.,  31., 10., 34., 8.,  32., 11., 35., 9.,  33., 12., 36.,
      13., 37., 16., 40., 14., 38., 17., 41., 15., 39., 18., 42.,
      19., 43., 22., 46., 20., 44., 23., 47., 21., 45., 24., 48.};
  const std::vector<int> sizes = {2, 4, 2, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  7.,  8.,  9.,  13., 14., 15., 19., 20., 21.,
      25., 26., 27., 31., 32., 33., 37., 38., 39., 43., 44., 45.,
      4.,  5.,  6.,  10., 11., 12., 16., 17., 18., 22., 23., 24.,
      28., 29., 30., 34., 35., 36., 40., 41., 42., 46., 47., 48.};
  const std::vector<int> sizes = {2, 4, 2, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 2.,  8.,  14., 20., 3.,  9.,  15., 21.,
      25., 31., 37., 43., 26., 32., 38., 44., 27., 33., 39., 45.,
      4.,  10., 16., 22., 5.,  11., 17., 23., 6.,  12., 18., 24.,
      28., 34., 40., 46., 29., 35., 41., 47., 30., 36., 42., 48.};
  const std::vector<int> sizes = {2, 4, 2, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  25., 26., 27., 7.,  8.,  9.,  31., 32., 33.,
      13., 14., 15., 37., 38., 39., 19., 20., 21., 43., 44., 45.,
      4.,  5.,  6.,  28., 29., 30., 10., 11., 12., 34., 35., 36.,
      16., 17., 18., 40., 41., 42., 22., 23., 24., 46., 47., 48.};
  const std::vector<int> sizes = {2, 4, 2, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 2.,  26., 3.,  27., 7.,  31., 8.,  32., 9.,  33.,
      13., 37., 14., 38., 15., 39., 19., 43., 20., 44., 21., 45.,
      4.,  28., 5.,  29., 6.,  30., 10., 34., 11., 35., 12., 36.,
      16., 40., 17., 41., 18., 42., 22., 46., 23., 47., 24., 48.};
  const std::vector<int> sizes = {2, 4, 2, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 25., 31., 37., 43., 2.,  8.,  14., 20.,
      26., 32., 38., 44., 3.,  9.,  15., 21., 27., 33., 39., 45.,
      4.,  10., 16., 22., 28., 34., 40., 46., 5.,  11., 17., 23.,
      29., 35., 41., 47., 6.,  12., 18., 24., 30., 36., 42., 48.};
  const std::vector<int> sizes = {2, 4, 2, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 7.,  31., 13., 37., 19., 43., 2.,  26., 8.,  32.,
      14., 38., 20., 44., 3.,  27., 9.,  33., 15., 39., 21., 45.,
      4.,  28., 10., 34., 16., 40., 22., 46., 5.,  29., 11., 35.,
      17., 41., 23., 47., 6.,  30., 12., 36., 18., 42., 24., 48.};
  const std::vector<int> sizes = {2, 4, 2, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 28., 31., 34.,
      37., 40., 43., 46., 2.,  5.,  8.,  11., 14., 17., 20., 23.,
      26., 29., 32., 35., 38., 41., 44., 47., 3.,  6.,  9.,  12.,
      15., 18., 21., 24., 27., 30., 33., 36., 39., 42., 45., 48.};
  const std::vector<int> sizes = {2, 4, 2, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 4.,  10., 16., 22., 25., 31., 37., 43.,
      28., 34., 40., 46., 2.,  8.,  14., 20., 5.,  11., 17., 23.,
      26., 32., 38., 44., 29., 35., 41., 47., 3.,  9.,  15., 21.,
      6.,  12., 18., 24., 27., 33., 39., 45., 30., 36., 42., 48.};
  const std::vector<int> sizes = {2, 4, 2, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  25., 28., 7.,  10., 31., 34., 13., 16., 37., 40.,
      19., 22., 43., 46., 2.,  5.,  26., 29., 8.,  11., 32., 35.,
      14., 17., 38., 41., 20., 23., 44., 47., 3.,  6.,  27., 30.,
      9.,  12., 33., 36., 15., 18., 39., 42., 21., 24., 45., 48.};
  const std::vector<int> sizes = {2, 4, 2, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 4.,  28., 7.,  31., 10., 34., 13., 37., 16., 40.,
      19., 43., 22., 46., 2.,  26., 5.,  29., 8.,  32., 11., 35.,
      14., 38., 17., 41., 20., 44., 23., 47., 3.,  27., 6.,  30.,
      9.,  33., 12., 36., 15., 39., 18., 42., 21., 45., 24., 48.};
  const std::vector<int> sizes = {2, 4, 2, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 25., 31., 37., 43., 4.,  10., 16., 22.,
      28., 34., 40., 46., 2.,  8.,  14., 20., 26., 32., 38., 44.,
      5.,  11., 17., 23., 29., 35., 41., 47., 3.,  9.,  15., 21.,
      27., 33., 39., 45., 6.,  12., 18., 24., 30., 36., 42., 48.};
  const std::vector<int> sizes = {2, 4, 2, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 7.,  31., 13., 37., 19., 43., 4.,  28., 10., 34.,
      16., 40., 22., 46., 2.,  26., 8.,  32., 14., 38., 20., 44.,
      5.,  29., 11., 35., 17., 41., 23., 47., 3.,  27., 9.,  33.,
      15., 39., 21., 45., 6.,  30., 12., 36., 18., 42., 24., 48.};
  const std::vector<int> sizes = {2, 4, 2, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13.,
      14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26.,
      27., 28., 29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39.,
      40., 41., 42., 43., 44., 45., 46., 47., 48., 49., 50., 51., 52.,
      53., 54., 55., 56., 57., 58., 59., 60., 61., 62., 63., 64.};
  const std::vector<int> sizes = {2, 4, 2, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  2.,  6.,  3.,  7.,  4.,  8.,  9.,  13., 10., 14., 11.,
      15., 12., 16., 17., 21., 18., 22., 19., 23., 20., 24., 25., 29.,
      26., 30., 27., 31., 28., 32., 33., 37., 34., 38., 35., 39., 36.,
      40., 41., 45., 42., 46., 43., 47., 44., 48., 49., 53., 50., 54.,
      51., 55., 52., 56., 57., 61., 58., 62., 59., 63., 60., 64.};
  const std::vector<int> sizes = {2, 4, 2, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  9.,  10., 11., 12., 17., 18., 19., 20., 25.,
      26., 27., 28., 5.,  6.,  7.,  8.,  13., 14., 15., 16., 21., 22.,
      23., 24., 29., 30., 31., 32., 33., 34., 35., 36., 41., 42., 43.,
      44., 49., 50., 51., 52., 57., 58., 59., 60., 37., 38., 39., 40.,
      45., 46., 47., 48., 53., 54., 55., 56., 61., 62., 63., 64.};
  const std::vector<int> sizes = {2, 4, 2, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 2.,  10., 18., 26., 3.,  11., 19., 27., 4.,
      12., 20., 28., 5.,  13., 21., 29., 6.,  14., 22., 30., 7.,  15.,
      23., 31., 8.,  16., 24., 32., 33., 41., 49., 57., 34., 42., 50.,
      58., 35., 43., 51., 59., 36., 44., 52., 60., 37., 45., 53., 61.,
      38., 46., 54., 62., 39., 47., 55., 63., 40., 48., 56., 64.};
  const std::vector<int> sizes = {2, 4, 2, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 25., 29., 2.,  6.,  10., 14., 18.,
      22., 26., 30., 3.,  7.,  11., 15., 19., 23., 27., 31., 4.,  8.,
      12., 16., 20., 24., 28., 32., 33., 37., 41., 45., 49., 53., 57.,
      61., 34., 38., 42., 46., 50., 54., 58., 62., 35., 39., 43., 47.,
      51., 55., 59., 63., 36., 40., 44., 48., 52., 56., 60., 64.};
  const std::vector<int> sizes = {2, 4, 2, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 5.,  13., 21., 29., 2.,  10., 18., 26., 6.,
      14., 22., 30., 3.,  11., 19., 27., 7.,  15., 23., 31., 4.,  12.,
      20., 28., 8.,  16., 24., 32., 33., 41., 49., 57., 37., 45., 53.,
      61., 34., 42., 50., 58., 38., 46., 54., 62., 35., 43., 51., 59.,
      39., 47., 55., 63., 36., 44., 52., 60., 40., 48., 56., 64.};
  const std::vector<int> sizes = {2, 4, 2, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  33., 34., 35., 36., 37.,
      38., 39., 40., 9.,  10., 11., 12., 13., 14., 15., 16., 41., 42.,
      43., 44., 45., 46., 47., 48., 17., 18., 19., 20., 21., 22., 23.,
      24., 49., 50., 51., 52., 53., 54., 55., 56., 25., 26., 27., 28.,
      29., 30., 31., 32., 57., 58., 59., 60., 61., 62., 63., 64.};
  const std::vector<int> sizes = {2, 4, 2, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  2.,  6.,  3.,  7.,  4.,  8.,  33., 37., 34., 38., 35.,
      39., 36., 40., 9.,  13., 10., 14., 11., 15., 12., 16., 41., 45.,
      42., 46., 43., 47., 44., 48., 17., 21., 18., 22., 19., 23., 20.,
      24., 49., 53., 50., 54., 51., 55., 52., 56., 25., 29., 26., 30.,
      27., 31., 28., 32., 57., 61., 58., 62., 59., 63., 60., 64.};
  const std::vector<int> sizes = {2, 4, 2, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  33., 34., 35., 36., 5.,  6.,  7.,  8.,  37.,
      38., 39., 40., 9.,  10., 11., 12., 41., 42., 43., 44., 13., 14.,
      15., 16., 45., 46., 47., 48., 17., 18., 19., 20., 49., 50., 51.,
      52., 21., 22., 23., 24., 53., 54., 55., 56., 25., 26., 27., 28.,
      57., 58., 59., 60., 29., 30., 31., 32., 61., 62., 63., 64.};
  const std::vector<int> sizes = {2, 4, 2, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 2.,  34., 3.,  35., 4.,  36., 5.,  37., 6.,  38., 7.,
      39., 8.,  40., 9.,  41., 10., 42., 11., 43., 12., 44., 13., 45.,
      14., 46., 15., 47., 16., 48., 17., 49., 18., 50., 19., 51., 20.,
      52., 21., 53., 22., 54., 23., 55., 24., 56., 25., 57., 26., 58.,
      27., 59., 28., 60., 29., 61., 30., 62., 31., 63., 32., 64.};
  const std::vector<int> sizes = {2, 4, 2, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  33., 37., 2.,  6.,  34., 38., 3.,  7.,  35., 39., 4.,
      8.,  36., 40., 9.,  13., 41., 45., 10., 14., 42., 46., 11., 15.,
      43., 47., 12., 16., 44., 48., 17., 21., 49., 53., 18., 22., 50.,
      54., 19., 23., 51., 55., 20., 24., 52., 56., 25., 29., 57., 61.,
      26., 30., 58., 62., 27., 31., 59., 63., 28., 32., 60., 64.};
  const std::vector<int> sizes = {2, 4, 2, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 5.,  37., 2.,  34., 6.,  38., 3.,  35., 7.,  39., 4.,
      36., 8.,  40., 9.,  41., 13., 45., 10., 42., 14., 46., 11., 43.,
      15., 47., 12., 44., 16., 48., 17., 49., 21., 53., 18., 50., 22.,
      54., 19., 51., 23., 55., 20., 52., 24., 56., 25., 57., 29., 61.,
      26., 58., 30., 62., 27., 59., 31., 63., 28., 60., 32., 64.};
  const std::vector<int> sizes = {2, 4, 2, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  9.,  10., 11., 12., 17., 18., 19., 20., 25.,
      26., 27., 28., 33., 34., 35., 36., 41., 42., 43., 44., 49., 50.,
      51., 52., 57., 58., 59., 60., 5.,  6.,  7.,  8.,  13., 14., 15.,
      16., 21., 22., 23., 24., 29., 30., 31., 32., 37., 38., 39., 40.,
      45., 46., 47., 48., 53., 54., 55., 56., 61., 62., 63., 64.};
  const std::vector<int> sizes = {2, 4, 2, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 2.,  10., 18., 26., 3.,  11., 19., 27., 4.,
      12., 20., 28., 33., 41., 49., 57., 34., 42., 50., 58., 35., 43.,
      51., 59., 36., 44., 52., 60., 5.,  13., 21., 29., 6.,  14., 22.,
      30., 7.,  15., 23., 31., 8.,  16., 24., 32., 37., 45., 53., 61.,
      38., 46., 54., 62., 39., 47., 55., 63., 40., 48., 56., 64.};
  const std::vector<int> sizes = {2, 4, 2, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  33., 34., 35., 36., 9.,  10., 11., 12., 41.,
      42., 43., 44., 17., 18., 19., 20., 49., 50., 51., 52., 25., 26.,
      27., 28., 57., 58., 59., 60., 5.,  6.,  7.,  8.,  37., 38., 39.,
      40., 13., 14., 15., 16., 45., 46., 47., 48., 21., 22., 23., 24.,
      53., 54., 55., 56., 29., 30., 31., 32., 61., 62., 63., 64.};
  const std::vector<int> sizes = {2, 4, 2, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 2.,  34., 3.,  35., 4.,  36., 9.,  41., 10., 42., 11.,
      43., 12., 44., 17., 49., 18., 50., 19., 51., 20., 52., 25., 57.,
      26., 58., 27., 59., 28., 60., 5.,  37., 6.,  38., 7.,  39., 8.,
      40., 13., 45., 14., 46., 15., 47., 16., 48., 21., 53., 22., 54.,
      23., 55., 24., 56., 29., 61., 30., 62., 31., 63., 32., 64.};
  const std::vector<int> sizes = {2, 4, 2, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 33., 41., 49., 57., 2.,  10., 18., 26., 34.,
      42., 50., 58., 3.,  11., 19., 27., 35., 43., 51., 59., 4.,  12.,
      20., 28., 36., 44., 52., 60., 5.,  13., 21., 29., 37., 45., 53.,
      61., 6.,  14., 22., 30., 38., 46., 54., 62., 7.,  15., 23., 31.,
      39., 47., 55., 63., 8.,  16., 24., 32., 40., 48., 56., 64.};
  const std::vector<int> sizes = {2, 4, 2, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 9.,  41., 17., 49., 25., 57., 2.,  34., 10., 42., 18.,
      50., 26., 58., 3.,  35., 11., 43., 19., 51., 27., 59., 4.,  36.,
      12., 44., 20., 52., 28., 60., 5.,  37., 13., 45., 21., 53., 29.,
      61., 6.,  38., 14., 46., 22., 54., 30., 62., 7.,  39., 15., 47.,
      23., 55., 31., 63., 8.,  40., 16., 48., 24., 56., 32., 64.};
  const std::vector<int> sizes = {2, 4, 2, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 25., 29., 33., 37., 41., 45., 49.,
      53., 57., 61., 2.,  6.,  10., 14., 18., 22., 26., 30., 34., 38.,
      42., 46., 50., 54., 58., 62., 3.,  7.,  11., 15., 19., 23., 27.,
      31., 35., 39., 43., 47., 51., 55., 59., 63., 4.,  8.,  12., 16.,
      20., 24., 28., 32., 36., 40., 44., 48., 52., 56., 60., 64.};
  const std::vector<int> sizes = {2, 4, 2, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 5.,  13., 21., 29., 33., 41., 49., 57., 37.,
      45., 53., 61., 2.,  10., 18., 26., 6.,  14., 22., 30., 34., 42.,
      50., 58., 38., 46., 54., 62., 3.,  11., 19., 27., 7.,  15., 23.,
      31., 35., 43., 51., 59., 39., 47., 55., 63., 4.,  12., 20., 28.,
      8.,  16., 24., 32., 36., 44., 52., 60., 40., 48., 56., 64.};
  const std::vector<int> sizes = {2, 4, 2, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  33., 37., 9.,  13., 41., 45., 17., 21., 49., 53., 25.,
      29., 57., 61., 2.,  6.,  34., 38., 10., 14., 42., 46., 18., 22.,
      50., 54., 26., 30., 58., 62., 3.,  7.,  35., 39., 11., 15., 43.,
      47., 19., 23., 51., 55., 27., 31., 59., 63., 4.,  8.,  36., 40.,
      12., 16., 44., 48., 20., 24., 52., 56., 28., 32., 60., 64.};
  const std::vector<int> sizes = {2, 4, 2, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 5.,  37., 9.,  41., 13., 45., 17., 49., 21., 53., 25.,
      57., 29., 61., 2.,  34., 6.,  38., 10., 42., 14., 46., 18., 50.,
      22., 54., 26., 58., 30., 62., 3.,  35., 7.,  39., 11., 43., 15.,
      47., 19., 51., 23., 55., 27., 59., 31., 63., 4.,  36., 8.,  40.,
      12., 44., 16., 48., 20., 52., 24., 56., 28., 60., 32., 64.};
  const std::vector<int> sizes = {2, 4, 2, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 33., 41., 49., 57., 5.,  13., 21., 29., 37.,
      45., 53., 61., 2.,  10., 18., 26., 34., 42., 50., 58., 6.,  14.,
      22., 30., 38., 46., 54., 62., 3.,  11., 19., 27., 35., 43., 51.,
      59., 7.,  15., 23., 31., 39., 47., 55., 63., 4.,  12., 20., 28.,
      36., 44., 52., 60., 8.,  16., 24., 32., 40., 48., 56., 64.};
  const std::vector<int> sizes = {2, 4, 2, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x2x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 9.,  41., 17., 49., 25., 57., 5.,  37., 13., 45., 21.,
      53., 29., 61., 2.,  34., 10., 42., 18., 50., 26., 58., 6.,  38.,
      14., 46., 22., 54., 30., 62., 3.,  35., 11., 43., 19., 51., 27.,
      59., 7.,  39., 15., 47., 23., 55., 31., 63., 4.,  36., 12., 44.,
      20., 52., 28., 60., 8.,  40., 16., 48., 24., 56., 32., 64.};
  const std::vector<int> sizes = {2, 4, 2, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.,
      25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.,
      37., 38., 39., 40., 41., 42., 43., 44., 45., 46., 47., 48.};
  const std::vector<int> sizes = {2, 4, 3, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  2.,  4.,  6.,  7.,  9.,  11., 8.,  10., 12.,
      13., 15., 17., 14., 16., 18., 19., 21., 23., 20., 22., 24.,
      25., 27., 29., 26., 28., 30., 31., 33., 35., 32., 34., 36.,
      37., 39., 41., 38., 40., 42., 43., 45., 47., 44., 46., 48.};
  const std::vector<int> sizes = {2, 4, 3, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  7.,  8.,  13., 14., 19., 20., 3.,  4.,  9.,  10.,
      15., 16., 21., 22., 5.,  6.,  11., 12., 17., 18., 23., 24.,
      25., 26., 31., 32., 37., 38., 43., 44., 27., 28., 33., 34.,
      39., 40., 45., 46., 29., 30., 35., 36., 41., 42., 47., 48.};
  const std::vector<int> sizes = {2, 4, 3, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 2.,  8.,  14., 20., 3.,  9.,  15., 21.,
      4.,  10., 16., 22., 5.,  11., 17., 23., 6.,  12., 18., 24.,
      25., 31., 37., 43., 26., 32., 38., 44., 27., 33., 39., 45.,
      28., 34., 40., 46., 29., 35., 41., 47., 30., 36., 42., 48.};
  const std::vector<int> sizes = {2, 4, 3, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23.,
      2.,  4.,  6.,  8.,  10., 12., 14., 16., 18., 20., 22., 24.,
      25., 27., 29., 31., 33., 35., 37., 39., 41., 43., 45., 47.,
      26., 28., 30., 32., 34., 36., 38., 40., 42., 44., 46., 48.};
  const std::vector<int> sizes = {2, 4, 3, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 3.,  9.,  15., 21., 5.,  11., 17., 23.,
      2.,  8.,  14., 20., 4.,  10., 16., 22., 6.,  12., 18., 24.,
      25., 31., 37., 43., 27., 33., 39., 45., 29., 35., 41., 47.,
      26., 32., 38., 44., 28., 34., 40., 46., 30., 36., 42., 48.};
  const std::vector<int> sizes = {2, 4, 3, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  25., 26., 27., 28., 29., 30.,
      7.,  8.,  9.,  10., 11., 12., 31., 32., 33., 34., 35., 36.,
      13., 14., 15., 16., 17., 18., 37., 38., 39., 40., 41., 42.,
      19., 20., 21., 22., 23., 24., 43., 44., 45., 46., 47., 48.};
  const std::vector<int> sizes = {2, 4, 3, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  2.,  4.,  6.,  25., 27., 29., 26., 28., 30.,
      7.,  9.,  11., 8.,  10., 12., 31., 33., 35., 32., 34., 36.,
      13., 15., 17., 14., 16., 18., 37., 39., 41., 38., 40., 42.,
      19., 21., 23., 20., 22., 24., 43., 45., 47., 44., 46., 48.};
  const std::vector<int> sizes = {2, 4, 3, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  25., 26., 3.,  4.,  27., 28., 5.,  6.,  29., 30.,
      7.,  8.,  31., 32., 9.,  10., 33., 34., 11., 12., 35., 36.,
      13., 14., 37., 38., 15., 16., 39., 40., 17., 18., 41., 42.,
      19., 20., 43., 44., 21., 22., 45., 46., 23., 24., 47., 48.};
  const std::vector<int> sizes = {2, 4, 3, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 2.,  26., 3.,  27., 4.,  28., 5.,  29., 6.,  30.,
      7.,  31., 8.,  32., 9.,  33., 10., 34., 11., 35., 12., 36.,
      13., 37., 14., 38., 15., 39., 16., 40., 17., 41., 18., 42.,
      19., 43., 20., 44., 21., 45., 22., 46., 23., 47., 24., 48.};
  const std::vector<int> sizes = {2, 4, 3, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  25., 27., 29., 2.,  4.,  6.,  26., 28., 30.,
      7.,  9.,  11., 31., 33., 35., 8.,  10., 12., 32., 34., 36.,
      13., 15., 17., 37., 39., 41., 14., 16., 18., 38., 40., 42.,
      19., 21., 23., 43., 45., 47., 20., 22., 24., 44., 46., 48.};
  const std::vector<int> sizes = {2, 4, 3, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 3.,  27., 5.,  29., 2.,  26., 4.,  28., 6.,  30.,
      7.,  31., 9.,  33., 11., 35., 8.,  32., 10., 34., 12., 36.,
      13., 37., 15., 39., 17., 41., 14., 38., 16., 40., 18., 42.,
      19., 43., 21., 45., 23., 47., 20., 44., 22., 46., 24., 48.};
  const std::vector<int> sizes = {2, 4, 3, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  7.,  8.,  13., 14., 19., 20., 25., 26., 31., 32.,
      37., 38., 43., 44., 3.,  4.,  9.,  10., 15., 16., 21., 22.,
      27., 28., 33., 34., 39., 40., 45., 46., 5.,  6.,  11., 12.,
      17., 18., 23., 24., 29., 30., 35., 36., 41., 42., 47., 48.};
  const std::vector<int> sizes = {2, 4, 3, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 2.,  8.,  14., 20., 25., 31., 37., 43.,
      26., 32., 38., 44., 3.,  9.,  15., 21., 4.,  10., 16., 22.,
      27., 33., 39., 45., 28., 34., 40., 46., 5.,  11., 17., 23.,
      6.,  12., 18., 24., 29., 35., 41., 47., 30., 36., 42., 48.};
  const std::vector<int> sizes = {2, 4, 3, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  25., 26., 7.,  8.,  31., 32., 13., 14., 37., 38.,
      19., 20., 43., 44., 3.,  4.,  27., 28., 9.,  10., 33., 34.,
      15., 16., 39., 40., 21., 22., 45., 46., 5.,  6.,  29., 30.,
      11., 12., 35., 36., 17., 18., 41., 42., 23., 24., 47., 48.};
  const std::vector<int> sizes = {2, 4, 3, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 2.,  26., 7.,  31., 8.,  32., 13., 37., 14., 38.,
      19., 43., 20., 44., 3.,  27., 4.,  28., 9.,  33., 10., 34.,
      15., 39., 16., 40., 21., 45., 22., 46., 5.,  29., 6.,  30.,
      11., 35., 12., 36., 17., 41., 18., 42., 23., 47., 24., 48.};
  const std::vector<int> sizes = {2, 4, 3, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 25., 31., 37., 43., 2.,  8.,  14., 20.,
      26., 32., 38., 44., 3.,  9.,  15., 21., 27., 33., 39., 45.,
      4.,  10., 16., 22., 28., 34., 40., 46., 5.,  11., 17., 23.,
      29., 35., 41., 47., 6.,  12., 18., 24., 30., 36., 42., 48.};
  const std::vector<int> sizes = {2, 4, 3, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 7.,  31., 13., 37., 19., 43., 2.,  26., 8.,  32.,
      14., 38., 20., 44., 3.,  27., 9.,  33., 15., 39., 21., 45.,
      4.,  28., 10., 34., 16., 40., 22., 46., 5.,  29., 11., 35.,
      17., 41., 23., 47., 6.,  30., 12., 36., 18., 42., 24., 48.};
  const std::vector<int> sizes = {2, 4, 3, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23.,
      25., 27., 29., 31., 33., 35., 37., 39., 41., 43., 45., 47.,
      2.,  4.,  6.,  8.,  10., 12., 14., 16., 18., 20., 22., 24.,
      26., 28., 30., 32., 34., 36., 38., 40., 42., 44., 46., 48.};
  const std::vector<int> sizes = {2, 4, 3, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 3.,  9.,  15., 21., 5.,  11., 17., 23.,
      25., 31., 37., 43., 27., 33., 39., 45., 29., 35., 41., 47.,
      2.,  8.,  14., 20., 4.,  10., 16., 22., 6.,  12., 18., 24.,
      26., 32., 38., 44., 28., 34., 40., 46., 30., 36., 42., 48.};
  const std::vector<int> sizes = {2, 4, 3, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  25., 27., 29., 7.,  9.,  11., 31., 33., 35.,
      13., 15., 17., 37., 39., 41., 19., 21., 23., 43., 45., 47.,
      2.,  4.,  6.,  26., 28., 30., 8.,  10., 12., 32., 34., 36.,
      14., 16., 18., 38., 40., 42., 20., 22., 24., 44., 46., 48.};
  const std::vector<int> sizes = {2, 4, 3, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 3.,  27., 5.,  29., 7.,  31., 9.,  33., 11., 35.,
      13., 37., 15., 39., 17., 41., 19., 43., 21., 45., 23., 47.,
      2.,  26., 4.,  28., 6.,  30., 8.,  32., 10., 34., 12., 36.,
      14., 38., 16., 40., 18., 42., 20., 44., 22., 46., 24., 48.};
  const std::vector<int> sizes = {2, 4, 3, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 25., 31., 37., 43., 3.,  9.,  15., 21.,
      27., 33., 39., 45., 5.,  11., 17., 23., 29., 35., 41., 47.,
      2.,  8.,  14., 20., 26., 32., 38., 44., 4.,  10., 16., 22.,
      28., 34., 40., 46., 6.,  12., 18., 24., 30., 36., 42., 48.};
  const std::vector<int> sizes = {2, 4, 3, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 7.,  31., 13., 37., 19., 43., 3.,  27., 9.,  33.,
      15., 39., 21., 45., 5.,  29., 11., 35., 17., 41., 23., 47.,
      2.,  26., 8.,  32., 14., 38., 20., 44., 4.,  28., 10., 34.,
      16., 40., 22., 46., 6.,  30., 12., 36., 18., 42., 24., 48.};
  const std::vector<int> sizes = {2, 4, 3, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14., 15.,
      16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 30.,
      31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42., 43., 44., 45.,
      46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56., 57., 58., 59., 60.,
      61., 62., 63., 64., 65., 66., 67., 68., 69., 70., 71., 72.};
  const std::vector<int> sizes = {2, 4, 3, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  2.,  5.,  8.,  3.,  6.,  9.,  10., 13., 16., 11., 14., 17.,
      12., 15., 18., 19., 22., 25., 20., 23., 26., 21., 24., 27., 28., 31., 34.,
      29., 32., 35., 30., 33., 36., 37., 40., 43., 38., 41., 44., 39., 42., 45.,
      46., 49., 52., 47., 50., 53., 48., 51., 54., 55., 58., 61., 56., 59., 62.,
      57., 60., 63., 64., 67., 70., 65., 68., 71., 66., 69., 72.};
  const std::vector<int> sizes = {2, 4, 3, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  10., 11., 12., 19., 20., 21., 28., 29., 30., 4.,  5.,  6.,
      13., 14., 15., 22., 23., 24., 31., 32., 33., 7.,  8.,  9.,  16., 17., 18.,
      25., 26., 27., 34., 35., 36., 37., 38., 39., 46., 47., 48., 55., 56., 57.,
      64., 65., 66., 40., 41., 42., 49., 50., 51., 58., 59., 60., 67., 68., 69.,
      43., 44., 45., 52., 53., 54., 61., 62., 63., 70., 71., 72.};
  const std::vector<int> sizes = {2, 4, 3, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 28., 2.,  11., 20., 29., 3.,  12., 21., 30., 4.,  13., 22.,
      31., 5.,  14., 23., 32., 6.,  15., 24., 33., 7.,  16., 25., 34., 8.,  17.,
      26., 35., 9.,  18., 27., 36., 37., 46., 55., 64., 38., 47., 56., 65., 39.,
      48., 57., 66., 40., 49., 58., 67., 41., 50., 59., 68., 42., 51., 60., 69.,
      43., 52., 61., 70., 44., 53., 62., 71., 45., 54., 63., 72.};
  const std::vector<int> sizes = {2, 4, 3, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 28., 31., 34., 2.,  5.,  8.,
      11., 14., 17., 20., 23., 26., 29., 32., 35., 3.,  6.,  9.,  12., 15., 18.,
      21., 24., 27., 30., 33., 36., 37., 40., 43., 46., 49., 52., 55., 58., 61.,
      64., 67., 70., 38., 41., 44., 47., 50., 53., 56., 59., 62., 65., 68., 71.,
      39., 42., 45., 48., 51., 54., 57., 60., 63., 66., 69., 72.};
  const std::vector<int> sizes = {2, 4, 3, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 28., 4.,  13., 22., 31., 7.,  16., 25., 34., 2.,  11., 20.,
      29., 5.,  14., 23., 32., 8.,  17., 26., 35., 3.,  12., 21., 30., 6.,  15.,
      24., 33., 9.,  18., 27., 36., 37., 46., 55., 64., 40., 49., 58., 67., 43.,
      52., 61., 70., 38., 47., 56., 65., 41., 50., 59., 68., 44., 53., 62., 71.,
      39., 48., 57., 66., 42., 51., 60., 69., 45., 54., 63., 72.};
  const std::vector<int> sizes = {2, 4, 3, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  37., 38., 39., 40., 41., 42.,
      43., 44., 45., 10., 11., 12., 13., 14., 15., 16., 17., 18., 46., 47., 48.,
      49., 50., 51., 52., 53., 54., 19., 20., 21., 22., 23., 24., 25., 26., 27.,
      55., 56., 57., 58., 59., 60., 61., 62., 63., 28., 29., 30., 31., 32., 33.,
      34., 35., 36., 64., 65., 66., 67., 68., 69., 70., 71., 72.};
  const std::vector<int> sizes = {2, 4, 3, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  2.,  5.,  8.,  3.,  6.,  9.,  37., 40., 43., 38., 41., 44.,
      39., 42., 45., 10., 13., 16., 11., 14., 17., 12., 15., 18., 46., 49., 52.,
      47., 50., 53., 48., 51., 54., 19., 22., 25., 20., 23., 26., 21., 24., 27.,
      55., 58., 61., 56., 59., 62., 57., 60., 63., 28., 31., 34., 29., 32., 35.,
      30., 33., 36., 64., 67., 70., 65., 68., 71., 66., 69., 72.};
  const std::vector<int> sizes = {2, 4, 3, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  37., 38., 39., 4.,  5.,  6.,  40., 41., 42., 7.,  8.,  9.,
      43., 44., 45., 10., 11., 12., 46., 47., 48., 13., 14., 15., 49., 50., 51.,
      16., 17., 18., 52., 53., 54., 19., 20., 21., 55., 56., 57., 22., 23., 24.,
      58., 59., 60., 25., 26., 27., 61., 62., 63., 28., 29., 30., 64., 65., 66.,
      31., 32., 33., 67., 68., 69., 34., 35., 36., 70., 71., 72.};
  const std::vector<int> sizes = {2, 4, 3, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 2.,  38., 3.,  39., 4.,  40., 5.,  41., 6.,  42., 7.,  43., 8.,
      44., 9.,  45., 10., 46., 11., 47., 12., 48., 13., 49., 14., 50., 15., 51.,
      16., 52., 17., 53., 18., 54., 19., 55., 20., 56., 21., 57., 22., 58., 23.,
      59., 24., 60., 25., 61., 26., 62., 27., 63., 28., 64., 29., 65., 30., 66.,
      31., 67., 32., 68., 33., 69., 34., 70., 35., 71., 36., 72.};
  const std::vector<int> sizes = {2, 4, 3, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  37., 40., 43., 2.,  5.,  8.,  38., 41., 44., 3.,  6.,  9.,
      39., 42., 45., 10., 13., 16., 46., 49., 52., 11., 14., 17., 47., 50., 53.,
      12., 15., 18., 48., 51., 54., 19., 22., 25., 55., 58., 61., 20., 23., 26.,
      56., 59., 62., 21., 24., 27., 57., 60., 63., 28., 31., 34., 64., 67., 70.,
      29., 32., 35., 65., 68., 71., 30., 33., 36., 66., 69., 72.};
  const std::vector<int> sizes = {2, 4, 3, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 4.,  40., 7.,  43., 2.,  38., 5.,  41., 8.,  44., 3.,  39., 6.,
      42., 9.,  45., 10., 46., 13., 49., 16., 52., 11., 47., 14., 50., 17., 53.,
      12., 48., 15., 51., 18., 54., 19., 55., 22., 58., 25., 61., 20., 56., 23.,
      59., 26., 62., 21., 57., 24., 60., 27., 63., 28., 64., 31., 67., 34., 70.,
      29., 65., 32., 68., 35., 71., 30., 66., 33., 69., 36., 72.};
  const std::vector<int> sizes = {2, 4, 3, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  10., 11., 12., 19., 20., 21., 28., 29., 30., 37., 38., 39.,
      46., 47., 48., 55., 56., 57., 64., 65., 66., 4.,  5.,  6.,  13., 14., 15.,
      22., 23., 24., 31., 32., 33., 40., 41., 42., 49., 50., 51., 58., 59., 60.,
      67., 68., 69., 7.,  8.,  9.,  16., 17., 18., 25., 26., 27., 34., 35., 36.,
      43., 44., 45., 52., 53., 54., 61., 62., 63., 70., 71., 72.};
  const std::vector<int> sizes = {2, 4, 3, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 28., 2.,  11., 20., 29., 3.,  12., 21., 30., 37., 46., 55.,
      64., 38., 47., 56., 65., 39., 48., 57., 66., 4.,  13., 22., 31., 5.,  14.,
      23., 32., 6.,  15., 24., 33., 40., 49., 58., 67., 41., 50., 59., 68., 42.,
      51., 60., 69., 7.,  16., 25., 34., 8.,  17., 26., 35., 9.,  18., 27., 36.,
      43., 52., 61., 70., 44., 53., 62., 71., 45., 54., 63., 72.};
  const std::vector<int> sizes = {2, 4, 3, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  37., 38., 39., 10., 11., 12., 46., 47., 48., 19., 20., 21.,
      55., 56., 57., 28., 29., 30., 64., 65., 66., 4.,  5.,  6.,  40., 41., 42.,
      13., 14., 15., 49., 50., 51., 22., 23., 24., 58., 59., 60., 31., 32., 33.,
      67., 68., 69., 7.,  8.,  9.,  43., 44., 45., 16., 17., 18., 52., 53., 54.,
      25., 26., 27., 61., 62., 63., 34., 35., 36., 70., 71., 72.};
  const std::vector<int> sizes = {2, 4, 3, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 2.,  38., 3.,  39., 10., 46., 11., 47., 12., 48., 19., 55., 20.,
      56., 21., 57., 28., 64., 29., 65., 30., 66., 4.,  40., 5.,  41., 6.,  42.,
      13., 49., 14., 50., 15., 51., 22., 58., 23., 59., 24., 60., 31., 67., 32.,
      68., 33., 69., 7.,  43., 8.,  44., 9.,  45., 16., 52., 17., 53., 18., 54.,
      25., 61., 26., 62., 27., 63., 34., 70., 35., 71., 36., 72.};
  const std::vector<int> sizes = {2, 4, 3, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 28., 37., 46., 55., 64., 2.,  11., 20., 29., 38., 47., 56.,
      65., 3.,  12., 21., 30., 39., 48., 57., 66., 4.,  13., 22., 31., 40., 49.,
      58., 67., 5.,  14., 23., 32., 41., 50., 59., 68., 6.,  15., 24., 33., 42.,
      51., 60., 69., 7.,  16., 25., 34., 43., 52., 61., 70., 8.,  17., 26., 35.,
      44., 53., 62., 71., 9.,  18., 27., 36., 45., 54., 63., 72.};
  const std::vector<int> sizes = {2, 4, 3, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 10., 46., 19., 55., 28., 64., 2.,  38., 11., 47., 20., 56., 29.,
      65., 3.,  39., 12., 48., 21., 57., 30., 66., 4.,  40., 13., 49., 22., 58.,
      31., 67., 5.,  41., 14., 50., 23., 59., 32., 68., 6.,  42., 15., 51., 24.,
      60., 33., 69., 7.,  43., 16., 52., 25., 61., 34., 70., 8.,  44., 17., 53.,
      26., 62., 35., 71., 9.,  45., 18., 54., 27., 63., 36., 72.};
  const std::vector<int> sizes = {2, 4, 3, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 28., 31., 34., 37., 40., 43.,
      46., 49., 52., 55., 58., 61., 64., 67., 70., 2.,  5.,  8.,  11., 14., 17.,
      20., 23., 26., 29., 32., 35., 38., 41., 44., 47., 50., 53., 56., 59., 62.,
      65., 68., 71., 3.,  6.,  9.,  12., 15., 18., 21., 24., 27., 30., 33., 36.,
      39., 42., 45., 48., 51., 54., 57., 60., 63., 66., 69., 72.};
  const std::vector<int> sizes = {2, 4, 3, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 28., 4.,  13., 22., 31., 7.,  16., 25., 34., 37., 46., 55.,
      64., 40., 49., 58., 67., 43., 52., 61., 70., 2.,  11., 20., 29., 5.,  14.,
      23., 32., 8.,  17., 26., 35., 38., 47., 56., 65., 41., 50., 59., 68., 44.,
      53., 62., 71., 3.,  12., 21., 30., 6.,  15., 24., 33., 9.,  18., 27., 36.,
      39., 48., 57., 66., 42., 51., 60., 69., 45., 54., 63., 72.};
  const std::vector<int> sizes = {2, 4, 3, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  37., 40., 43., 10., 13., 16., 46., 49., 52., 19., 22., 25.,
      55., 58., 61., 28., 31., 34., 64., 67., 70., 2.,  5.,  8.,  38., 41., 44.,
      11., 14., 17., 47., 50., 53., 20., 23., 26., 56., 59., 62., 29., 32., 35.,
      65., 68., 71., 3.,  6.,  9.,  39., 42., 45., 12., 15., 18., 48., 51., 54.,
      21., 24., 27., 57., 60., 63., 30., 33., 36., 66., 69., 72.};
  const std::vector<int> sizes = {2, 4, 3, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 4.,  40., 7.,  43., 10., 46., 13., 49., 16., 52., 19., 55., 22.,
      58., 25., 61., 28., 64., 31., 67., 34., 70., 2.,  38., 5.,  41., 8.,  44.,
      11., 47., 14., 50., 17., 53., 20., 56., 23., 59., 26., 62., 29., 65., 32.,
      68., 35., 71., 3.,  39., 6.,  42., 9.,  45., 12., 48., 15., 51., 18., 54.,
      21., 57., 24., 60., 27., 63., 30., 66., 33., 69., 36., 72.};
  const std::vector<int> sizes = {2, 4, 3, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 28., 37., 46., 55., 64., 4.,  13., 22., 31., 40., 49., 58.,
      67., 7.,  16., 25., 34., 43., 52., 61., 70., 2.,  11., 20., 29., 38., 47.,
      56., 65., 5.,  14., 23., 32., 41., 50., 59., 68., 8.,  17., 26., 35., 44.,
      53., 62., 71., 3.,  12., 21., 30., 39., 48., 57., 66., 6.,  15., 24., 33.,
      42., 51., 60., 69., 9.,  18., 27., 36., 45., 54., 63., 72.};
  const std::vector<int> sizes = {2, 4, 3, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 10., 46., 19., 55., 28., 64., 4.,  40., 13., 49., 22., 58., 31.,
      67., 7.,  43., 16., 52., 25., 61., 34., 70., 2.,  38., 11., 47., 20., 56.,
      29., 65., 5.,  41., 14., 50., 23., 59., 32., 68., 8.,  44., 17., 53., 26.,
      62., 35., 71., 3.,  39., 12., 48., 21., 57., 30., 66., 6.,  42., 15., 51.,
      24., 60., 33., 69., 9.,  45., 18., 54., 27., 63., 36., 72.};
  const std::vector<int> sizes = {2, 4, 3, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14.,
      15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28.,
      29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42.,
      43., 44., 45., 46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56.,
      57., 58., 59., 60., 61., 62., 63., 64., 65., 66., 67., 68., 69., 70.,
      71., 72., 73., 74., 75., 76., 77., 78., 79., 80., 81., 82., 83., 84.,
      85., 86., 87., 88., 89., 90., 91., 92., 93., 94., 95., 96.};
  const std::vector<int> sizes = {2, 4, 3, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  2.,  6.,  10., 3.,  7.,  11., 4.,  8.,  12., 13., 17.,
      21., 14., 18., 22., 15., 19., 23., 16., 20., 24., 25., 29., 33., 26.,
      30., 34., 27., 31., 35., 28., 32., 36., 37., 41., 45., 38., 42., 46.,
      39., 43., 47., 40., 44., 48., 49., 53., 57., 50., 54., 58., 51., 55.,
      59., 52., 56., 60., 61., 65., 69., 62., 66., 70., 63., 67., 71., 64.,
      68., 72., 73., 77., 81., 74., 78., 82., 75., 79., 83., 76., 80., 84.,
      85., 89., 93., 86., 90., 94., 87., 91., 95., 88., 92., 96.};
  const std::vector<int> sizes = {2, 4, 3, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  13., 14., 15., 16., 25., 26., 27., 28., 37., 38.,
      39., 40., 5.,  6.,  7.,  8.,  17., 18., 19., 20., 29., 30., 31., 32.,
      41., 42., 43., 44., 9.,  10., 11., 12., 21., 22., 23., 24., 33., 34.,
      35., 36., 45., 46., 47., 48., 49., 50., 51., 52., 61., 62., 63., 64.,
      73., 74., 75., 76., 85., 86., 87., 88., 53., 54., 55., 56., 65., 66.,
      67., 68., 77., 78., 79., 80., 89., 90., 91., 92., 57., 58., 59., 60.,
      69., 70., 71., 72., 81., 82., 83., 84., 93., 94., 95., 96.};
  const std::vector<int> sizes = {2, 4, 3, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 2.,  14., 26., 38., 3.,  15., 27., 39., 4.,  16.,
      28., 40., 5.,  17., 29., 41., 6.,  18., 30., 42., 7.,  19., 31., 43.,
      8.,  20., 32., 44., 9.,  21., 33., 45., 10., 22., 34., 46., 11., 23.,
      35., 47., 12., 24., 36., 48., 49., 61., 73., 85., 50., 62., 74., 86.,
      51., 63., 75., 87., 52., 64., 76., 88., 53., 65., 77., 89., 54., 66.,
      78., 90., 55., 67., 79., 91., 56., 68., 80., 92., 57., 69., 81., 93.,
      58., 70., 82., 94., 59., 71., 83., 95., 60., 72., 84., 96.};
  const std::vector<int> sizes = {2, 4, 3, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 25., 29., 33., 37., 41., 45., 2.,  6.,
      10., 14., 18., 22., 26., 30., 34., 38., 42., 46., 3.,  7.,  11., 15.,
      19., 23., 27., 31., 35., 39., 43., 47., 4.,  8.,  12., 16., 20., 24.,
      28., 32., 36., 40., 44., 48., 49., 53., 57., 61., 65., 69., 73., 77.,
      81., 85., 89., 93., 50., 54., 58., 62., 66., 70., 74., 78., 82., 86.,
      90., 94., 51., 55., 59., 63., 67., 71., 75., 79., 83., 87., 91., 95.,
      52., 56., 60., 64., 68., 72., 76., 80., 84., 88., 92., 96.};
  const std::vector<int> sizes = {2, 4, 3, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 5.,  17., 29., 41., 9.,  21., 33., 45., 2.,  14.,
      26., 38., 6.,  18., 30., 42., 10., 22., 34., 46., 3.,  15., 27., 39.,
      7.,  19., 31., 43., 11., 23., 35., 47., 4.,  16., 28., 40., 8.,  20.,
      32., 44., 12., 24., 36., 48., 49., 61., 73., 85., 53., 65., 77., 89.,
      57., 69., 81., 93., 50., 62., 74., 86., 54., 66., 78., 90., 58., 70.,
      82., 94., 51., 63., 75., 87., 55., 67., 79., 91., 59., 71., 83., 95.,
      52., 64., 76., 88., 56., 68., 80., 92., 60., 72., 84., 96.};
  const std::vector<int> sizes = {2, 4, 3, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 49., 50.,
      51., 52., 53., 54., 55., 56., 57., 58., 59., 60., 13., 14., 15., 16.,
      17., 18., 19., 20., 21., 22., 23., 24., 61., 62., 63., 64., 65., 66.,
      67., 68., 69., 70., 71., 72., 25., 26., 27., 28., 29., 30., 31., 32.,
      33., 34., 35., 36., 73., 74., 75., 76., 77., 78., 79., 80., 81., 82.,
      83., 84., 37., 38., 39., 40., 41., 42., 43., 44., 45., 46., 47., 48.,
      85., 86., 87., 88., 89., 90., 91., 92., 93., 94., 95., 96.};
  const std::vector<int> sizes = {2, 4, 3, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  2.,  6.,  10., 3.,  7.,  11., 4.,  8.,  12., 49., 53.,
      57., 50., 54., 58., 51., 55., 59., 52., 56., 60., 13., 17., 21., 14.,
      18., 22., 15., 19., 23., 16., 20., 24., 61., 65., 69., 62., 66., 70.,
      63., 67., 71., 64., 68., 72., 25., 29., 33., 26., 30., 34., 27., 31.,
      35., 28., 32., 36., 73., 77., 81., 74., 78., 82., 75., 79., 83., 76.,
      80., 84., 37., 41., 45., 38., 42., 46., 39., 43., 47., 40., 44., 48.,
      85., 89., 93., 86., 90., 94., 87., 91., 95., 88., 92., 96.};
  const std::vector<int> sizes = {2, 4, 3, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  49., 50., 51., 52., 5.,  6.,  7.,  8.,  53., 54.,
      55., 56., 9.,  10., 11., 12., 57., 58., 59., 60., 13., 14., 15., 16.,
      61., 62., 63., 64., 17., 18., 19., 20., 65., 66., 67., 68., 21., 22.,
      23., 24., 69., 70., 71., 72., 25., 26., 27., 28., 73., 74., 75., 76.,
      29., 30., 31., 32., 77., 78., 79., 80., 33., 34., 35., 36., 81., 82.,
      83., 84., 37., 38., 39., 40., 85., 86., 87., 88., 41., 42., 43., 44.,
      89., 90., 91., 92., 45., 46., 47., 48., 93., 94., 95., 96.};
  const std::vector<int> sizes = {2, 4, 3, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 2.,  50., 3.,  51., 4.,  52., 5.,  53., 6.,  54., 7.,  55.,
      8.,  56., 9.,  57., 10., 58., 11., 59., 12., 60., 13., 61., 14., 62.,
      15., 63., 16., 64., 17., 65., 18., 66., 19., 67., 20., 68., 21., 69.,
      22., 70., 23., 71., 24., 72., 25., 73., 26., 74., 27., 75., 28., 76.,
      29., 77., 30., 78., 31., 79., 32., 80., 33., 81., 34., 82., 35., 83.,
      36., 84., 37., 85., 38., 86., 39., 87., 40., 88., 41., 89., 42., 90.,
      43., 91., 44., 92., 45., 93., 46., 94., 47., 95., 48., 96.};
  const std::vector<int> sizes = {2, 4, 3, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  49., 53., 57., 2.,  6.,  10., 50., 54., 58., 3.,  7.,
      11., 51., 55., 59., 4.,  8.,  12., 52., 56., 60., 13., 17., 21., 61.,
      65., 69., 14., 18., 22., 62., 66., 70., 15., 19., 23., 63., 67., 71.,
      16., 20., 24., 64., 68., 72., 25., 29., 33., 73., 77., 81., 26., 30.,
      34., 74., 78., 82., 27., 31., 35., 75., 79., 83., 28., 32., 36., 76.,
      80., 84., 37., 41., 45., 85., 89., 93., 38., 42., 46., 86., 90., 94.,
      39., 43., 47., 87., 91., 95., 40., 44., 48., 88., 92., 96.};
  const std::vector<int> sizes = {2, 4, 3, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 5.,  53., 9.,  57., 2.,  50., 6.,  54., 10., 58., 3.,  51.,
      7.,  55., 11., 59., 4.,  52., 8.,  56., 12., 60., 13., 61., 17., 65.,
      21., 69., 14., 62., 18., 66., 22., 70., 15., 63., 19., 67., 23., 71.,
      16., 64., 20., 68., 24., 72., 25., 73., 29., 77., 33., 81., 26., 74.,
      30., 78., 34., 82., 27., 75., 31., 79., 35., 83., 28., 76., 32., 80.,
      36., 84., 37., 85., 41., 89., 45., 93., 38., 86., 42., 90., 46., 94.,
      39., 87., 43., 91., 47., 95., 40., 88., 44., 92., 48., 96.};
  const std::vector<int> sizes = {2, 4, 3, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  13., 14., 15., 16., 25., 26., 27., 28., 37., 38.,
      39., 40., 49., 50., 51., 52., 61., 62., 63., 64., 73., 74., 75., 76.,
      85., 86., 87., 88., 5.,  6.,  7.,  8.,  17., 18., 19., 20., 29., 30.,
      31., 32., 41., 42., 43., 44., 53., 54., 55., 56., 65., 66., 67., 68.,
      77., 78., 79., 80., 89., 90., 91., 92., 9.,  10., 11., 12., 21., 22.,
      23., 24., 33., 34., 35., 36., 45., 46., 47., 48., 57., 58., 59., 60.,
      69., 70., 71., 72., 81., 82., 83., 84., 93., 94., 95., 96.};
  const std::vector<int> sizes = {2, 4, 3, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 2.,  14., 26., 38., 3.,  15., 27., 39., 4.,  16.,
      28., 40., 49., 61., 73., 85., 50., 62., 74., 86., 51., 63., 75., 87.,
      52., 64., 76., 88., 5.,  17., 29., 41., 6.,  18., 30., 42., 7.,  19.,
      31., 43., 8.,  20., 32., 44., 53., 65., 77., 89., 54., 66., 78., 90.,
      55., 67., 79., 91., 56., 68., 80., 92., 9.,  21., 33., 45., 10., 22.,
      34., 46., 11., 23., 35., 47., 12., 24., 36., 48., 57., 69., 81., 93.,
      58., 70., 82., 94., 59., 71., 83., 95., 60., 72., 84., 96.};
  const std::vector<int> sizes = {2, 4, 3, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  49., 50., 51., 52., 13., 14., 15., 16., 61., 62.,
      63., 64., 25., 26., 27., 28., 73., 74., 75., 76., 37., 38., 39., 40.,
      85., 86., 87., 88., 5.,  6.,  7.,  8.,  53., 54., 55., 56., 17., 18.,
      19., 20., 65., 66., 67., 68., 29., 30., 31., 32., 77., 78., 79., 80.,
      41., 42., 43., 44., 89., 90., 91., 92., 9.,  10., 11., 12., 57., 58.,
      59., 60., 21., 22., 23., 24., 69., 70., 71., 72., 33., 34., 35., 36.,
      81., 82., 83., 84., 45., 46., 47., 48., 93., 94., 95., 96.};
  const std::vector<int> sizes = {2, 4, 3, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 2.,  50., 3.,  51., 4.,  52., 13., 61., 14., 62., 15., 63.,
      16., 64., 25., 73., 26., 74., 27., 75., 28., 76., 37., 85., 38., 86.,
      39., 87., 40., 88., 5.,  53., 6.,  54., 7.,  55., 8.,  56., 17., 65.,
      18., 66., 19., 67., 20., 68., 29., 77., 30., 78., 31., 79., 32., 80.,
      41., 89., 42., 90., 43., 91., 44., 92., 9.,  57., 10., 58., 11., 59.,
      12., 60., 21., 69., 22., 70., 23., 71., 24., 72., 33., 81., 34., 82.,
      35., 83., 36., 84., 45., 93., 46., 94., 47., 95., 48., 96.};
  const std::vector<int> sizes = {2, 4, 3, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 49., 61., 73., 85., 2.,  14., 26., 38., 50., 62.,
      74., 86., 3.,  15., 27., 39., 51., 63., 75., 87., 4.,  16., 28., 40.,
      52., 64., 76., 88., 5.,  17., 29., 41., 53., 65., 77., 89., 6.,  18.,
      30., 42., 54., 66., 78., 90., 7.,  19., 31., 43., 55., 67., 79., 91.,
      8.,  20., 32., 44., 56., 68., 80., 92., 9.,  21., 33., 45., 57., 69.,
      81., 93., 10., 22., 34., 46., 58., 70., 82., 94., 11., 23., 35., 47.,
      59., 71., 83., 95., 12., 24., 36., 48., 60., 72., 84., 96.};
  const std::vector<int> sizes = {2, 4, 3, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 13., 61., 25., 73., 37., 85., 2.,  50., 14., 62., 26., 74.,
      38., 86., 3.,  51., 15., 63., 27., 75., 39., 87., 4.,  52., 16., 64.,
      28., 76., 40., 88., 5.,  53., 17., 65., 29., 77., 41., 89., 6.,  54.,
      18., 66., 30., 78., 42., 90., 7.,  55., 19., 67., 31., 79., 43., 91.,
      8.,  56., 20., 68., 32., 80., 44., 92., 9.,  57., 21., 69., 33., 81.,
      45., 93., 10., 58., 22., 70., 34., 82., 46., 94., 11., 59., 23., 71.,
      35., 83., 47., 95., 12., 60., 24., 72., 36., 84., 48., 96.};
  const std::vector<int> sizes = {2, 4, 3, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 25., 29., 33., 37., 41., 45., 49., 53.,
      57., 61., 65., 69., 73., 77., 81., 85., 89., 93., 2.,  6.,  10., 14.,
      18., 22., 26., 30., 34., 38., 42., 46., 50., 54., 58., 62., 66., 70.,
      74., 78., 82., 86., 90., 94., 3.,  7.,  11., 15., 19., 23., 27., 31.,
      35., 39., 43., 47., 51., 55., 59., 63., 67., 71., 75., 79., 83., 87.,
      91., 95., 4.,  8.,  12., 16., 20., 24., 28., 32., 36., 40., 44., 48.,
      52., 56., 60., 64., 68., 72., 76., 80., 84., 88., 92., 96.};
  const std::vector<int> sizes = {2, 4, 3, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 5.,  17., 29., 41., 9.,  21., 33., 45., 49., 61.,
      73., 85., 53., 65., 77., 89., 57., 69., 81., 93., 2.,  14., 26., 38.,
      6.,  18., 30., 42., 10., 22., 34., 46., 50., 62., 74., 86., 54., 66.,
      78., 90., 58., 70., 82., 94., 3.,  15., 27., 39., 7.,  19., 31., 43.,
      11., 23., 35., 47., 51., 63., 75., 87., 55., 67., 79., 91., 59., 71.,
      83., 95., 4.,  16., 28., 40., 8.,  20., 32., 44., 12., 24., 36., 48.,
      52., 64., 76., 88., 56., 68., 80., 92., 60., 72., 84., 96.};
  const std::vector<int> sizes = {2, 4, 3, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  49., 53., 57., 13., 17., 21., 61., 65., 69., 25., 29.,
      33., 73., 77., 81., 37., 41., 45., 85., 89., 93., 2.,  6.,  10., 50.,
      54., 58., 14., 18., 22., 62., 66., 70., 26., 30., 34., 74., 78., 82.,
      38., 42., 46., 86., 90., 94., 3.,  7.,  11., 51., 55., 59., 15., 19.,
      23., 63., 67., 71., 27., 31., 35., 75., 79., 83., 39., 43., 47., 87.,
      91., 95., 4.,  8.,  12., 52., 56., 60., 16., 20., 24., 64., 68., 72.,
      28., 32., 36., 76., 80., 84., 40., 44., 48., 88., 92., 96.};
  const std::vector<int> sizes = {2, 4, 3, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 5.,  53., 9.,  57., 13., 61., 17., 65., 21., 69., 25., 73.,
      29., 77., 33., 81., 37., 85., 41., 89., 45., 93., 2.,  50., 6.,  54.,
      10., 58., 14., 62., 18., 66., 22., 70., 26., 74., 30., 78., 34., 82.,
      38., 86., 42., 90., 46., 94., 3.,  51., 7.,  55., 11., 59., 15., 63.,
      19., 67., 23., 71., 27., 75., 31., 79., 35., 83., 39., 87., 43., 91.,
      47., 95., 4.,  52., 8.,  56., 12., 60., 16., 64., 20., 68., 24., 72.,
      28., 76., 32., 80., 36., 84., 40., 88., 44., 92., 48., 96.};
  const std::vector<int> sizes = {2, 4, 3, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 49., 61., 73., 85., 5.,  17., 29., 41., 53., 65.,
      77., 89., 9.,  21., 33., 45., 57., 69., 81., 93., 2.,  14., 26., 38.,
      50., 62., 74., 86., 6.,  18., 30., 42., 54., 66., 78., 90., 10., 22.,
      34., 46., 58., 70., 82., 94., 3.,  15., 27., 39., 51., 63., 75., 87.,
      7.,  19., 31., 43., 55., 67., 79., 91., 11., 23., 35., 47., 59., 71.,
      83., 95., 4.,  16., 28., 40., 52., 64., 76., 88., 8.,  20., 32., 44.,
      56., 68., 80., 92., 12., 24., 36., 48., 60., 72., 84., 96.};
  const std::vector<int> sizes = {2, 4, 3, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x3x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 13., 61., 25., 73., 37., 85., 5.,  53., 17., 65., 29., 77.,
      41., 89., 9.,  57., 21., 69., 33., 81., 45., 93., 2.,  50., 14., 62.,
      26., 74., 38., 86., 6.,  54., 18., 66., 30., 78., 42., 90., 10., 58.,
      22., 70., 34., 82., 46., 94., 3.,  51., 15., 63., 27., 75., 39., 87.,
      7.,  55., 19., 67., 31., 79., 43., 91., 11., 59., 23., 71., 35., 83.,
      47., 95., 4.,  52., 16., 64., 28., 76., 40., 88., 8.,  56., 20., 68.,
      32., 80., 44., 92., 12., 60., 24., 72., 36., 84., 48., 96.};
  const std::vector<int> sizes = {2, 4, 3, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13.,
      14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26.,
      27., 28., 29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39.,
      40., 41., 42., 43., 44., 45., 46., 47., 48., 49., 50., 51., 52.,
      53., 54., 55., 56., 57., 58., 59., 60., 61., 62., 63., 64.};
  const std::vector<int> sizes = {2, 4, 4, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  2.,  4.,  6.,  8.,  9.,  11., 13., 15., 10.,
      12., 14., 16., 17., 19., 21., 23., 18., 20., 22., 24., 25., 27.,
      29., 31., 26., 28., 30., 32., 33., 35., 37., 39., 34., 36., 38.,
      40., 41., 43., 45., 47., 42., 44., 46., 48., 49., 51., 53., 55.,
      50., 52., 54., 56., 57., 59., 61., 63., 58., 60., 62., 64.};
  const std::vector<int> sizes = {2, 4, 4, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  9.,  10., 17., 18., 25., 26., 3.,  4.,  11., 12., 19.,
      20., 27., 28., 5.,  6.,  13., 14., 21., 22., 29., 30., 7.,  8.,
      15., 16., 23., 24., 31., 32., 33., 34., 41., 42., 49., 50., 57.,
      58., 35., 36., 43., 44., 51., 52., 59., 60., 37., 38., 45., 46.,
      53., 54., 61., 62., 39., 40., 47., 48., 55., 56., 63., 64.};
  const std::vector<int> sizes = {2, 4, 4, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 2.,  10., 18., 26., 3.,  11., 19., 27., 4.,
      12., 20., 28., 5.,  13., 21., 29., 6.,  14., 22., 30., 7.,  15.,
      23., 31., 8.,  16., 24., 32., 33., 41., 49., 57., 34., 42., 50.,
      58., 35., 43., 51., 59., 36., 44., 52., 60., 37., 45., 53., 61.,
      38., 46., 54., 62., 39., 47., 55., 63., 40., 48., 56., 64.};
  const std::vector<int> sizes = {2, 4, 4, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23., 25.,
      27., 29., 31., 2.,  4.,  6.,  8.,  10., 12., 14., 16., 18., 20.,
      22., 24., 26., 28., 30., 32., 33., 35., 37., 39., 41., 43., 45.,
      47., 49., 51., 53., 55., 57., 59., 61., 63., 34., 36., 38., 40.,
      42., 44., 46., 48., 50., 52., 54., 56., 58., 60., 62., 64.};
  const std::vector<int> sizes = {2, 4, 4, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 3.,  11., 19., 27., 5.,  13., 21., 29., 7.,
      15., 23., 31., 2.,  10., 18., 26., 4.,  12., 20., 28., 6.,  14.,
      22., 30., 8.,  16., 24., 32., 33., 41., 49., 57., 35., 43., 51.,
      59., 37., 45., 53., 61., 39., 47., 55., 63., 34., 42., 50., 58.,
      36., 44., 52., 60., 38., 46., 54., 62., 40., 48., 56., 64.};
  const std::vector<int> sizes = {2, 4, 4, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  33., 34., 35., 36., 37.,
      38., 39., 40., 9.,  10., 11., 12., 13., 14., 15., 16., 41., 42.,
      43., 44., 45., 46., 47., 48., 17., 18., 19., 20., 21., 22., 23.,
      24., 49., 50., 51., 52., 53., 54., 55., 56., 25., 26., 27., 28.,
      29., 30., 31., 32., 57., 58., 59., 60., 61., 62., 63., 64.};
  const std::vector<int> sizes = {2, 4, 4, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  2.,  4.,  6.,  8.,  33., 35., 37., 39., 34.,
      36., 38., 40., 9.,  11., 13., 15., 10., 12., 14., 16., 41., 43.,
      45., 47., 42., 44., 46., 48., 17., 19., 21., 23., 18., 20., 22.,
      24., 49., 51., 53., 55., 50., 52., 54., 56., 25., 27., 29., 31.,
      26., 28., 30., 32., 57., 59., 61., 63., 58., 60., 62., 64.};
  const std::vector<int> sizes = {2, 4, 4, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  33., 34., 3.,  4.,  35., 36., 5.,  6.,  37., 38., 7.,
      8.,  39., 40., 9.,  10., 41., 42., 11., 12., 43., 44., 13., 14.,
      45., 46., 15., 16., 47., 48., 17., 18., 49., 50., 19., 20., 51.,
      52., 21., 22., 53., 54., 23., 24., 55., 56., 25., 26., 57., 58.,
      27., 28., 59., 60., 29., 30., 61., 62., 31., 32., 63., 64.};
  const std::vector<int> sizes = {2, 4, 4, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 2.,  34., 3.,  35., 4.,  36., 5.,  37., 6.,  38., 7.,
      39., 8.,  40., 9.,  41., 10., 42., 11., 43., 12., 44., 13., 45.,
      14., 46., 15., 47., 16., 48., 17., 49., 18., 50., 19., 51., 20.,
      52., 21., 53., 22., 54., 23., 55., 24., 56., 25., 57., 26., 58.,
      27., 59., 28., 60., 29., 61., 30., 62., 31., 63., 32., 64.};
  const std::vector<int> sizes = {2, 4, 4, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  33., 35., 37., 39., 2.,  4.,  6.,  8.,  34.,
      36., 38., 40., 9.,  11., 13., 15., 41., 43., 45., 47., 10., 12.,
      14., 16., 42., 44., 46., 48., 17., 19., 21., 23., 49., 51., 53.,
      55., 18., 20., 22., 24., 50., 52., 54., 56., 25., 27., 29., 31.,
      57., 59., 61., 63., 26., 28., 30., 32., 58., 60., 62., 64.};
  const std::vector<int> sizes = {2, 4, 4, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 3.,  35., 5.,  37., 7.,  39., 2.,  34., 4.,  36., 6.,
      38., 8.,  40., 9.,  41., 11., 43., 13., 45., 15., 47., 10., 42.,
      12., 44., 14., 46., 16., 48., 17., 49., 19., 51., 21., 53., 23.,
      55., 18., 50., 20., 52., 22., 54., 24., 56., 25., 57., 27., 59.,
      29., 61., 31., 63., 26., 58., 28., 60., 30., 62., 32., 64.};
  const std::vector<int> sizes = {2, 4, 4, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  9.,  10., 17., 18., 25., 26., 33., 34., 41., 42., 49.,
      50., 57., 58., 3.,  4.,  11., 12., 19., 20., 27., 28., 35., 36.,
      43., 44., 51., 52., 59., 60., 5.,  6.,  13., 14., 21., 22., 29.,
      30., 37., 38., 45., 46., 53., 54., 61., 62., 7.,  8.,  15., 16.,
      23., 24., 31., 32., 39., 40., 47., 48., 55., 56., 63., 64.};
  const std::vector<int> sizes = {2, 4, 4, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 2.,  10., 18., 26., 33., 41., 49., 57., 34.,
      42., 50., 58., 3.,  11., 19., 27., 4.,  12., 20., 28., 35., 43.,
      51., 59., 36., 44., 52., 60., 5.,  13., 21., 29., 6.,  14., 22.,
      30., 37., 45., 53., 61., 38., 46., 54., 62., 7.,  15., 23., 31.,
      8.,  16., 24., 32., 39., 47., 55., 63., 40., 48., 56., 64.};
  const std::vector<int> sizes = {2, 4, 4, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  33., 34., 9.,  10., 41., 42., 17., 18., 49., 50., 25.,
      26., 57., 58., 3.,  4.,  35., 36., 11., 12., 43., 44., 19., 20.,
      51., 52., 27., 28., 59., 60., 5.,  6.,  37., 38., 13., 14., 45.,
      46., 21., 22., 53., 54., 29., 30., 61., 62., 7.,  8.,  39., 40.,
      15., 16., 47., 48., 23., 24., 55., 56., 31., 32., 63., 64.};
  const std::vector<int> sizes = {2, 4, 4, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 2.,  34., 9.,  41., 10., 42., 17., 49., 18., 50., 25.,
      57., 26., 58., 3.,  35., 4.,  36., 11., 43., 12., 44., 19., 51.,
      20., 52., 27., 59., 28., 60., 5.,  37., 6.,  38., 13., 45., 14.,
      46., 21., 53., 22., 54., 29., 61., 30., 62., 7.,  39., 8.,  40.,
      15., 47., 16., 48., 23., 55., 24., 56., 31., 63., 32., 64.};
  const std::vector<int> sizes = {2, 4, 4, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 33., 41., 49., 57., 2.,  10., 18., 26., 34.,
      42., 50., 58., 3.,  11., 19., 27., 35., 43., 51., 59., 4.,  12.,
      20., 28., 36., 44., 52., 60., 5.,  13., 21., 29., 37., 45., 53.,
      61., 6.,  14., 22., 30., 38., 46., 54., 62., 7.,  15., 23., 31.,
      39., 47., 55., 63., 8.,  16., 24., 32., 40., 48., 56., 64.};
  const std::vector<int> sizes = {2, 4, 4, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 9.,  41., 17., 49., 25., 57., 2.,  34., 10., 42., 18.,
      50., 26., 58., 3.,  35., 11., 43., 19., 51., 27., 59., 4.,  36.,
      12., 44., 20., 52., 28., 60., 5.,  37., 13., 45., 21., 53., 29.,
      61., 6.,  38., 14., 46., 22., 54., 30., 62., 7.,  39., 15., 47.,
      23., 55., 31., 63., 8.,  40., 16., 48., 24., 56., 32., 64.};
  const std::vector<int> sizes = {2, 4, 4, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23., 25.,
      27., 29., 31., 33., 35., 37., 39., 41., 43., 45., 47., 49., 51.,
      53., 55., 57., 59., 61., 63., 2.,  4.,  6.,  8.,  10., 12., 14.,
      16., 18., 20., 22., 24., 26., 28., 30., 32., 34., 36., 38., 40.,
      42., 44., 46., 48., 50., 52., 54., 56., 58., 60., 62., 64.};
  const std::vector<int> sizes = {2, 4, 4, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 3.,  11., 19., 27., 5.,  13., 21., 29., 7.,
      15., 23., 31., 33., 41., 49., 57., 35., 43., 51., 59., 37., 45.,
      53., 61., 39., 47., 55., 63., 2.,  10., 18., 26., 4.,  12., 20.,
      28., 6.,  14., 22., 30., 8.,  16., 24., 32., 34., 42., 50., 58.,
      36., 44., 52., 60., 38., 46., 54., 62., 40., 48., 56., 64.};
  const std::vector<int> sizes = {2, 4, 4, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  33., 35., 37., 39., 9.,  11., 13., 15., 41.,
      43., 45., 47., 17., 19., 21., 23., 49., 51., 53., 55., 25., 27.,
      29., 31., 57., 59., 61., 63., 2.,  4.,  6.,  8.,  34., 36., 38.,
      40., 10., 12., 14., 16., 42., 44., 46., 48., 18., 20., 22., 24.,
      50., 52., 54., 56., 26., 28., 30., 32., 58., 60., 62., 64.};
  const std::vector<int> sizes = {2, 4, 4, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 3.,  35., 5.,  37., 7.,  39., 9.,  41., 11., 43., 13.,
      45., 15., 47., 17., 49., 19., 51., 21., 53., 23., 55., 25., 57.,
      27., 59., 29., 61., 31., 63., 2.,  34., 4.,  36., 6.,  38., 8.,
      40., 10., 42., 12., 44., 14., 46., 16., 48., 18., 50., 20., 52.,
      22., 54., 24., 56., 26., 58., 28., 60., 30., 62., 32., 64.};
  const std::vector<int> sizes = {2, 4, 4, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 33., 41., 49., 57., 3.,  11., 19., 27., 35.,
      43., 51., 59., 5.,  13., 21., 29., 37., 45., 53., 61., 7.,  15.,
      23., 31., 39., 47., 55., 63., 2.,  10., 18., 26., 34., 42., 50.,
      58., 4.,  12., 20., 28., 36., 44., 52., 60., 6.,  14., 22., 30.,
      38., 46., 54., 62., 8.,  16., 24., 32., 40., 48., 56., 64.};
  const std::vector<int> sizes = {2, 4, 4, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 9.,  41., 17., 49., 25., 57., 3.,  35., 11., 43., 19.,
      51., 27., 59., 5.,  37., 13., 45., 21., 53., 29., 61., 7.,  39.,
      15., 47., 23., 55., 31., 63., 2.,  34., 10., 42., 18., 50., 26.,
      58., 4.,  36., 12., 44., 20., 52., 28., 60., 6.,  38., 14., 46.,
      22., 54., 30., 62., 8.,  40., 16., 48., 24., 56., 32., 64.};
  const std::vector<int> sizes = {2, 4, 4, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14.,
      15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28.,
      29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42.,
      43., 44., 45., 46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56.,
      57., 58., 59., 60., 61., 62., 63., 64., 65., 66., 67., 68., 69., 70.,
      71., 72., 73., 74., 75., 76., 77., 78., 79., 80., 81., 82., 83., 84.,
      85., 86., 87., 88., 89., 90., 91., 92., 93., 94., 95., 96.};
  const std::vector<int> sizes = {2, 4, 4, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 2.,  5.,  8.,  11., 3.,  6.,  9.,  12., 13., 16.,
      19., 22., 14., 17., 20., 23., 15., 18., 21., 24., 25., 28., 31., 34.,
      26., 29., 32., 35., 27., 30., 33., 36., 37., 40., 43., 46., 38., 41.,
      44., 47., 39., 42., 45., 48., 49., 52., 55., 58., 50., 53., 56., 59.,
      51., 54., 57., 60., 61., 64., 67., 70., 62., 65., 68., 71., 63., 66.,
      69., 72., 73., 76., 79., 82., 74., 77., 80., 83., 75., 78., 81., 84.,
      85., 88., 91., 94., 86., 89., 92., 95., 87., 90., 93., 96.};
  const std::vector<int> sizes = {2, 4, 4, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  13., 14., 15., 25., 26., 27., 37., 38., 39., 4.,  5.,
      6.,  16., 17., 18., 28., 29., 30., 40., 41., 42., 7.,  8.,  9.,  19.,
      20., 21., 31., 32., 33., 43., 44., 45., 10., 11., 12., 22., 23., 24.,
      34., 35., 36., 46., 47., 48., 49., 50., 51., 61., 62., 63., 73., 74.,
      75., 85., 86., 87., 52., 53., 54., 64., 65., 66., 76., 77., 78., 88.,
      89., 90., 55., 56., 57., 67., 68., 69., 79., 80., 81., 91., 92., 93.,
      58., 59., 60., 70., 71., 72., 82., 83., 84., 94., 95., 96.};
  const std::vector<int> sizes = {2, 4, 4, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 2.,  14., 26., 38., 3.,  15., 27., 39., 4.,  16.,
      28., 40., 5.,  17., 29., 41., 6.,  18., 30., 42., 7.,  19., 31., 43.,
      8.,  20., 32., 44., 9.,  21., 33., 45., 10., 22., 34., 46., 11., 23.,
      35., 47., 12., 24., 36., 48., 49., 61., 73., 85., 50., 62., 74., 86.,
      51., 63., 75., 87., 52., 64., 76., 88., 53., 65., 77., 89., 54., 66.,
      78., 90., 55., 67., 79., 91., 56., 68., 80., 92., 57., 69., 81., 93.,
      58., 70., 82., 94., 59., 71., 83., 95., 60., 72., 84., 96.};
  const std::vector<int> sizes = {2, 4, 4, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 28., 31., 34., 37., 40.,
      43., 46., 2.,  5.,  8.,  11., 14., 17., 20., 23., 26., 29., 32., 35.,
      38., 41., 44., 47., 3.,  6.,  9.,  12., 15., 18., 21., 24., 27., 30.,
      33., 36., 39., 42., 45., 48., 49., 52., 55., 58., 61., 64., 67., 70.,
      73., 76., 79., 82., 85., 88., 91., 94., 50., 53., 56., 59., 62., 65.,
      68., 71., 74., 77., 80., 83., 86., 89., 92., 95., 51., 54., 57., 60.,
      63., 66., 69., 72., 75., 78., 81., 84., 87., 90., 93., 96.};
  const std::vector<int> sizes = {2, 4, 4, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 4.,  16., 28., 40., 7.,  19., 31., 43., 10., 22.,
      34., 46., 2.,  14., 26., 38., 5.,  17., 29., 41., 8.,  20., 32., 44.,
      11., 23., 35., 47., 3.,  15., 27., 39., 6.,  18., 30., 42., 9.,  21.,
      33., 45., 12., 24., 36., 48., 49., 61., 73., 85., 52., 64., 76., 88.,
      55., 67., 79., 91., 58., 70., 82., 94., 50., 62., 74., 86., 53., 65.,
      77., 89., 56., 68., 80., 92., 59., 71., 83., 95., 51., 63., 75., 87.,
      54., 66., 78., 90., 57., 69., 81., 93., 60., 72., 84., 96.};
  const std::vector<int> sizes = {2, 4, 4, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 49., 50.,
      51., 52., 53., 54., 55., 56., 57., 58., 59., 60., 13., 14., 15., 16.,
      17., 18., 19., 20., 21., 22., 23., 24., 61., 62., 63., 64., 65., 66.,
      67., 68., 69., 70., 71., 72., 25., 26., 27., 28., 29., 30., 31., 32.,
      33., 34., 35., 36., 73., 74., 75., 76., 77., 78., 79., 80., 81., 82.,
      83., 84., 37., 38., 39., 40., 41., 42., 43., 44., 45., 46., 47., 48.,
      85., 86., 87., 88., 89., 90., 91., 92., 93., 94., 95., 96.};
  const std::vector<int> sizes = {2, 4, 4, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 2.,  5.,  8.,  11., 3.,  6.,  9.,  12., 49., 52.,
      55., 58., 50., 53., 56., 59., 51., 54., 57., 60., 13., 16., 19., 22.,
      14., 17., 20., 23., 15., 18., 21., 24., 61., 64., 67., 70., 62., 65.,
      68., 71., 63., 66., 69., 72., 25., 28., 31., 34., 26., 29., 32., 35.,
      27., 30., 33., 36., 73., 76., 79., 82., 74., 77., 80., 83., 75., 78.,
      81., 84., 37., 40., 43., 46., 38., 41., 44., 47., 39., 42., 45., 48.,
      85., 88., 91., 94., 86., 89., 92., 95., 87., 90., 93., 96.};
  const std::vector<int> sizes = {2, 4, 4, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  49., 50., 51., 4.,  5.,  6.,  52., 53., 54., 7.,  8.,
      9.,  55., 56., 57., 10., 11., 12., 58., 59., 60., 13., 14., 15., 61.,
      62., 63., 16., 17., 18., 64., 65., 66., 19., 20., 21., 67., 68., 69.,
      22., 23., 24., 70., 71., 72., 25., 26., 27., 73., 74., 75., 28., 29.,
      30., 76., 77., 78., 31., 32., 33., 79., 80., 81., 34., 35., 36., 82.,
      83., 84., 37., 38., 39., 85., 86., 87., 40., 41., 42., 88., 89., 90.,
      43., 44., 45., 91., 92., 93., 46., 47., 48., 94., 95., 96.};
  const std::vector<int> sizes = {2, 4, 4, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 2.,  50., 3.,  51., 4.,  52., 5.,  53., 6.,  54., 7.,  55.,
      8.,  56., 9.,  57., 10., 58., 11., 59., 12., 60., 13., 61., 14., 62.,
      15., 63., 16., 64., 17., 65., 18., 66., 19., 67., 20., 68., 21., 69.,
      22., 70., 23., 71., 24., 72., 25., 73., 26., 74., 27., 75., 28., 76.,
      29., 77., 30., 78., 31., 79., 32., 80., 33., 81., 34., 82., 35., 83.,
      36., 84., 37., 85., 38., 86., 39., 87., 40., 88., 41., 89., 42., 90.,
      43., 91., 44., 92., 45., 93., 46., 94., 47., 95., 48., 96.};
  const std::vector<int> sizes = {2, 4, 4, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 49., 52., 55., 58., 2.,  5.,  8.,  11., 50., 53.,
      56., 59., 3.,  6.,  9.,  12., 51., 54., 57., 60., 13., 16., 19., 22.,
      61., 64., 67., 70., 14., 17., 20., 23., 62., 65., 68., 71., 15., 18.,
      21., 24., 63., 66., 69., 72., 25., 28., 31., 34., 73., 76., 79., 82.,
      26., 29., 32., 35., 74., 77., 80., 83., 27., 30., 33., 36., 75., 78.,
      81., 84., 37., 40., 43., 46., 85., 88., 91., 94., 38., 41., 44., 47.,
      86., 89., 92., 95., 39., 42., 45., 48., 87., 90., 93., 96.};
  const std::vector<int> sizes = {2, 4, 4, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 4.,  52., 7.,  55., 10., 58., 2.,  50., 5.,  53., 8.,  56.,
      11., 59., 3.,  51., 6.,  54., 9.,  57., 12., 60., 13., 61., 16., 64.,
      19., 67., 22., 70., 14., 62., 17., 65., 20., 68., 23., 71., 15., 63.,
      18., 66., 21., 69., 24., 72., 25., 73., 28., 76., 31., 79., 34., 82.,
      26., 74., 29., 77., 32., 80., 35., 83., 27., 75., 30., 78., 33., 81.,
      36., 84., 37., 85., 40., 88., 43., 91., 46., 94., 38., 86., 41., 89.,
      44., 92., 47., 95., 39., 87., 42., 90., 45., 93., 48., 96.};
  const std::vector<int> sizes = {2, 4, 4, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  13., 14., 15., 25., 26., 27., 37., 38., 39., 49., 50.,
      51., 61., 62., 63., 73., 74., 75., 85., 86., 87., 4.,  5.,  6.,  16.,
      17., 18., 28., 29., 30., 40., 41., 42., 52., 53., 54., 64., 65., 66.,
      76., 77., 78., 88., 89., 90., 7.,  8.,  9.,  19., 20., 21., 31., 32.,
      33., 43., 44., 45., 55., 56., 57., 67., 68., 69., 79., 80., 81., 91.,
      92., 93., 10., 11., 12., 22., 23., 24., 34., 35., 36., 46., 47., 48.,
      58., 59., 60., 70., 71., 72., 82., 83., 84., 94., 95., 96.};
  const std::vector<int> sizes = {2, 4, 4, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 2.,  14., 26., 38., 3.,  15., 27., 39., 49., 61.,
      73., 85., 50., 62., 74., 86., 51., 63., 75., 87., 4.,  16., 28., 40.,
      5.,  17., 29., 41., 6.,  18., 30., 42., 52., 64., 76., 88., 53., 65.,
      77., 89., 54., 66., 78., 90., 7.,  19., 31., 43., 8.,  20., 32., 44.,
      9.,  21., 33., 45., 55., 67., 79., 91., 56., 68., 80., 92., 57., 69.,
      81., 93., 10., 22., 34., 46., 11., 23., 35., 47., 12., 24., 36., 48.,
      58., 70., 82., 94., 59., 71., 83., 95., 60., 72., 84., 96.};
  const std::vector<int> sizes = {2, 4, 4, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  49., 50., 51., 13., 14., 15., 61., 62., 63., 25., 26.,
      27., 73., 74., 75., 37., 38., 39., 85., 86., 87., 4.,  5.,  6.,  52.,
      53., 54., 16., 17., 18., 64., 65., 66., 28., 29., 30., 76., 77., 78.,
      40., 41., 42., 88., 89., 90., 7.,  8.,  9.,  55., 56., 57., 19., 20.,
      21., 67., 68., 69., 31., 32., 33., 79., 80., 81., 43., 44., 45., 91.,
      92., 93., 10., 11., 12., 58., 59., 60., 22., 23., 24., 70., 71., 72.,
      34., 35., 36., 82., 83., 84., 46., 47., 48., 94., 95., 96.};
  const std::vector<int> sizes = {2, 4, 4, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 2.,  50., 3.,  51., 13., 61., 14., 62., 15., 63., 25., 73.,
      26., 74., 27., 75., 37., 85., 38., 86., 39., 87., 4.,  52., 5.,  53.,
      6.,  54., 16., 64., 17., 65., 18., 66., 28., 76., 29., 77., 30., 78.,
      40., 88., 41., 89., 42., 90., 7.,  55., 8.,  56., 9.,  57., 19., 67.,
      20., 68., 21., 69., 31., 79., 32., 80., 33., 81., 43., 91., 44., 92.,
      45., 93., 10., 58., 11., 59., 12., 60., 22., 70., 23., 71., 24., 72.,
      34., 82., 35., 83., 36., 84., 46., 94., 47., 95., 48., 96.};
  const std::vector<int> sizes = {2, 4, 4, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 49., 61., 73., 85., 2.,  14., 26., 38., 50., 62.,
      74., 86., 3.,  15., 27., 39., 51., 63., 75., 87., 4.,  16., 28., 40.,
      52., 64., 76., 88., 5.,  17., 29., 41., 53., 65., 77., 89., 6.,  18.,
      30., 42., 54., 66., 78., 90., 7.,  19., 31., 43., 55., 67., 79., 91.,
      8.,  20., 32., 44., 56., 68., 80., 92., 9.,  21., 33., 45., 57., 69.,
      81., 93., 10., 22., 34., 46., 58., 70., 82., 94., 11., 23., 35., 47.,
      59., 71., 83., 95., 12., 24., 36., 48., 60., 72., 84., 96.};
  const std::vector<int> sizes = {2, 4, 4, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 13., 61., 25., 73., 37., 85., 2.,  50., 14., 62., 26., 74.,
      38., 86., 3.,  51., 15., 63., 27., 75., 39., 87., 4.,  52., 16., 64.,
      28., 76., 40., 88., 5.,  53., 17., 65., 29., 77., 41., 89., 6.,  54.,
      18., 66., 30., 78., 42., 90., 7.,  55., 19., 67., 31., 79., 43., 91.,
      8.,  56., 20., 68., 32., 80., 44., 92., 9.,  57., 21., 69., 33., 81.,
      45., 93., 10., 58., 22., 70., 34., 82., 46., 94., 11., 59., 23., 71.,
      35., 83., 47., 95., 12., 60., 24., 72., 36., 84., 48., 96.};
  const std::vector<int> sizes = {2, 4, 4, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 28., 31., 34., 37., 40.,
      43., 46., 49., 52., 55., 58., 61., 64., 67., 70., 73., 76., 79., 82.,
      85., 88., 91., 94., 2.,  5.,  8.,  11., 14., 17., 20., 23., 26., 29.,
      32., 35., 38., 41., 44., 47., 50., 53., 56., 59., 62., 65., 68., 71.,
      74., 77., 80., 83., 86., 89., 92., 95., 3.,  6.,  9.,  12., 15., 18.,
      21., 24., 27., 30., 33., 36., 39., 42., 45., 48., 51., 54., 57., 60.,
      63., 66., 69., 72., 75., 78., 81., 84., 87., 90., 93., 96.};
  const std::vector<int> sizes = {2, 4, 4, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 4.,  16., 28., 40., 7.,  19., 31., 43., 10., 22.,
      34., 46., 49., 61., 73., 85., 52., 64., 76., 88., 55., 67., 79., 91.,
      58., 70., 82., 94., 2.,  14., 26., 38., 5.,  17., 29., 41., 8.,  20.,
      32., 44., 11., 23., 35., 47., 50., 62., 74., 86., 53., 65., 77., 89.,
      56., 68., 80., 92., 59., 71., 83., 95., 3.,  15., 27., 39., 6.,  18.,
      30., 42., 9.,  21., 33., 45., 12., 24., 36., 48., 51., 63., 75., 87.,
      54., 66., 78., 90., 57., 69., 81., 93., 60., 72., 84., 96.};
  const std::vector<int> sizes = {2, 4, 4, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 49., 52., 55., 58., 13., 16., 19., 22., 61., 64.,
      67., 70., 25., 28., 31., 34., 73., 76., 79., 82., 37., 40., 43., 46.,
      85., 88., 91., 94., 2.,  5.,  8.,  11., 50., 53., 56., 59., 14., 17.,
      20., 23., 62., 65., 68., 71., 26., 29., 32., 35., 74., 77., 80., 83.,
      38., 41., 44., 47., 86., 89., 92., 95., 3.,  6.,  9.,  12., 51., 54.,
      57., 60., 15., 18., 21., 24., 63., 66., 69., 72., 27., 30., 33., 36.,
      75., 78., 81., 84., 39., 42., 45., 48., 87., 90., 93., 96.};
  const std::vector<int> sizes = {2, 4, 4, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 4.,  52., 7.,  55., 10., 58., 13., 61., 16., 64., 19., 67.,
      22., 70., 25., 73., 28., 76., 31., 79., 34., 82., 37., 85., 40., 88.,
      43., 91., 46., 94., 2.,  50., 5.,  53., 8.,  56., 11., 59., 14., 62.,
      17., 65., 20., 68., 23., 71., 26., 74., 29., 77., 32., 80., 35., 83.,
      38., 86., 41., 89., 44., 92., 47., 95., 3.,  51., 6.,  54., 9.,  57.,
      12., 60., 15., 63., 18., 66., 21., 69., 24., 72., 27., 75., 30., 78.,
      33., 81., 36., 84., 39., 87., 42., 90., 45., 93., 48., 96.};
  const std::vector<int> sizes = {2, 4, 4, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 49., 61., 73., 85., 4.,  16., 28., 40., 52., 64.,
      76., 88., 7.,  19., 31., 43., 55., 67., 79., 91., 10., 22., 34., 46.,
      58., 70., 82., 94., 2.,  14., 26., 38., 50., 62., 74., 86., 5.,  17.,
      29., 41., 53., 65., 77., 89., 8.,  20., 32., 44., 56., 68., 80., 92.,
      11., 23., 35., 47., 59., 71., 83., 95., 3.,  15., 27., 39., 51., 63.,
      75., 87., 6.,  18., 30., 42., 54., 66., 78., 90., 9.,  21., 33., 45.,
      57., 69., 81., 93., 12., 24., 36., 48., 60., 72., 84., 96.};
  const std::vector<int> sizes = {2, 4, 4, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 13., 61., 25., 73., 37., 85., 4.,  52., 16., 64., 28., 76.,
      40., 88., 7.,  55., 19., 67., 31., 79., 43., 91., 10., 58., 22., 70.,
      34., 82., 46., 94., 2.,  50., 14., 62., 26., 74., 38., 86., 5.,  53.,
      17., 65., 29., 77., 41., 89., 8.,  56., 20., 68., 32., 80., 44., 92.,
      11., 59., 23., 71., 35., 83., 47., 95., 3.,  51., 15., 63., 27., 75.,
      39., 87., 6.,  54., 18., 66., 30., 78., 42., 90., 9.,  57., 21., 69.,
      33., 81., 45., 93., 12., 60., 24., 72., 36., 84., 48., 96.};
  const std::vector<int> sizes = {2, 4, 4, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13.,  14.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 105., 106., 107., 108.,
      109., 110., 111., 112., 113., 114., 115., 116., 117., 118., 119., 120.,
      121., 122., 123., 124., 125., 126., 127., 128.};
  const std::vector<int> sizes = {2, 4, 4, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  2.,   6.,   10.,  14.,  3.,   7.,   11.,  15.,
      4.,   8.,   12.,  16.,  17.,  21.,  25.,  29.,  18.,  22.,  26.,  30.,
      19.,  23.,  27.,  31.,  20.,  24.,  28.,  32.,  33.,  37.,  41.,  45.,
      34.,  38.,  42.,  46.,  35.,  39.,  43.,  47.,  36.,  40.,  44.,  48.,
      49.,  53.,  57.,  61.,  50.,  54.,  58.,  62.,  51.,  55.,  59.,  63.,
      52.,  56.,  60.,  64.,  65.,  69.,  73.,  77.,  66.,  70.,  74.,  78.,
      67.,  71.,  75.,  79.,  68.,  72.,  76.,  80.,  81.,  85.,  89.,  93.,
      82.,  86.,  90.,  94.,  83.,  87.,  91.,  95.,  84.,  88.,  92.,  96.,
      97.,  101., 105., 109., 98.,  102., 106., 110., 99.,  103., 107., 111.,
      100., 104., 108., 112., 113., 117., 121., 125., 114., 118., 122., 126.,
      115., 119., 123., 127., 116., 120., 124., 128.};
  const std::vector<int> sizes = {2, 4, 4, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   17.,  18.,  19.,  20.,  33.,  34.,  35.,  36.,
      49.,  50.,  51.,  52.,  5.,   6.,   7.,   8.,   21.,  22.,  23.,  24.,
      37.,  38.,  39.,  40.,  53.,  54.,  55.,  56.,  9.,   10.,  11.,  12.,
      25.,  26.,  27.,  28.,  41.,  42.,  43.,  44.,  57.,  58.,  59.,  60.,
      13.,  14.,  15.,  16.,  29.,  30.,  31.,  32.,  45.,  46.,  47.,  48.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  81.,  82.,  83.,  84.,
      97.,  98.,  99.,  100., 113., 114., 115., 116., 69.,  70.,  71.,  72.,
      85.,  86.,  87.,  88.,  101., 102., 103., 104., 117., 118., 119., 120.,
      73.,  74.,  75.,  76.,  89.,  90.,  91.,  92.,  105., 106., 107., 108.,
      121., 122., 123., 124., 77.,  78.,  79.,  80.,  93.,  94.,  95.,  96.,
      109., 110., 111., 112., 125., 126., 127., 128.};
  const std::vector<int> sizes = {2, 4, 4, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33.,  49.,  2.,  18., 34.,  50.,  3.,  19., 35.,  51.,
      4.,  20., 36.,  52.,  5.,  21., 37.,  53.,  6.,  22., 38.,  54.,
      7.,  23., 39.,  55.,  8.,  24., 40.,  56.,  9.,  25., 41.,  57.,
      10., 26., 42.,  58.,  11., 27., 43.,  59.,  12., 28., 44.,  60.,
      13., 29., 45.,  61.,  14., 30., 46.,  62.,  15., 31., 47.,  63.,
      16., 32., 48.,  64.,  65., 81., 97.,  113., 66., 82., 98.,  114.,
      67., 83., 99.,  115., 68., 84., 100., 116., 69., 85., 101., 117.,
      70., 86., 102., 118., 71., 87., 103., 119., 72., 88., 104., 120.,
      73., 89., 105., 121., 74., 90., 106., 122., 75., 91., 107., 123.,
      76., 92., 108., 124., 77., 93., 109., 125., 78., 94., 110., 126.,
      79., 95., 111., 127., 80., 96., 112., 128.};
  const std::vector<int> sizes = {2, 4, 4, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  17.,  21.,  25.,  29.,  33.,  37.,  41.,  45.,
      49.,  53.,  57.,  61.,  2.,   6.,   10.,  14.,  18.,  22.,  26.,  30.,
      34.,  38.,  42.,  46.,  50.,  54.,  58.,  62.,  3.,   7.,   11.,  15.,
      19.,  23.,  27.,  31.,  35.,  39.,  43.,  47.,  51.,  55.,  59.,  63.,
      4.,   8.,   12.,  16.,  20.,  24.,  28.,  32.,  36.,  40.,  44.,  48.,
      52.,  56.,  60.,  64.,  65.,  69.,  73.,  77.,  81.,  85.,  89.,  93.,
      97.,  101., 105., 109., 113., 117., 121., 125., 66.,  70.,  74.,  78.,
      82.,  86.,  90.,  94.,  98.,  102., 106., 110., 114., 118., 122., 126.,
      67.,  71.,  75.,  79.,  83.,  87.,  91.,  95.,  99.,  103., 107., 111.,
      115., 119., 123., 127., 68.,  72.,  76.,  80.,  84.,  88.,  92.,  96.,
      100., 104., 108., 112., 116., 120., 124., 128.};
  const std::vector<int> sizes = {2, 4, 4, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33.,  49.,  5.,  21., 37.,  53.,  9.,  25., 41.,  57.,
      13., 29., 45.,  61.,  2.,  18., 34.,  50.,  6.,  22., 38.,  54.,
      10., 26., 42.,  58.,  14., 30., 46.,  62.,  3.,  19., 35.,  51.,
      7.,  23., 39.,  55.,  11., 27., 43.,  59.,  15., 31., 47.,  63.,
      4.,  20., 36.,  52.,  8.,  24., 40.,  56.,  12., 28., 44.,  60.,
      16., 32., 48.,  64.,  65., 81., 97.,  113., 69., 85., 101., 117.,
      73., 89., 105., 121., 77., 93., 109., 125., 66., 82., 98.,  114.,
      70., 86., 102., 118., 74., 90., 106., 122., 78., 94., 110., 126.,
      67., 83., 99.,  115., 71., 87., 103., 119., 75., 91., 107., 123.,
      79., 95., 111., 127., 68., 84., 100., 116., 72., 88., 104., 120.,
      76., 92., 108., 124., 80., 96., 112., 128.};
  const std::vector<int> sizes = {2, 4, 4, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13.,  14.,  15.,  16.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  17.,  18.,  19.,  20.,
      21.,  22.,  23.,  24.,  25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,
      81.,  82.,  83.,  84.,  85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,
      93.,  94.,  95.,  96.,  33.,  34.,  35.,  36.,  37.,  38.,  39.,  40.,
      41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,  97.,  98.,  99.,  100.,
      101., 102., 103., 104., 105., 106., 107., 108., 109., 110., 111., 112.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      61.,  62.,  63.,  64.,  113., 114., 115., 116., 117., 118., 119., 120.,
      121., 122., 123., 124., 125., 126., 127., 128.};
  const std::vector<int> sizes = {2, 4, 4, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  2.,   6.,   10.,  14.,  3.,   7.,   11.,  15.,
      4.,   8.,   12.,  16.,  65.,  69.,  73.,  77.,  66.,  70.,  74.,  78.,
      67.,  71.,  75.,  79.,  68.,  72.,  76.,  80.,  17.,  21.,  25.,  29.,
      18.,  22.,  26.,  30.,  19.,  23.,  27.,  31.,  20.,  24.,  28.,  32.,
      81.,  85.,  89.,  93.,  82.,  86.,  90.,  94.,  83.,  87.,  91.,  95.,
      84.,  88.,  92.,  96.,  33.,  37.,  41.,  45.,  34.,  38.,  42.,  46.,
      35.,  39.,  43.,  47.,  36.,  40.,  44.,  48.,  97.,  101., 105., 109.,
      98.,  102., 106., 110., 99.,  103., 107., 111., 100., 104., 108., 112.,
      49.,  53.,  57.,  61.,  50.,  54.,  58.,  62.,  51.,  55.,  59.,  63.,
      52.,  56.,  60.,  64.,  113., 117., 121., 125., 114., 118., 122., 126.,
      115., 119., 123., 127., 116., 120., 124., 128.};
  const std::vector<int> sizes = {2, 4, 4, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   65.,  66.,  67.,  68.,  5.,   6.,   7.,   8.,
      69.,  70.,  71.,  72.,  9.,   10.,  11.,  12.,  73.,  74.,  75.,  76.,
      13.,  14.,  15.,  16.,  77.,  78.,  79.,  80.,  17.,  18.,  19.,  20.,
      81.,  82.,  83.,  84.,  21.,  22.,  23.,  24.,  85.,  86.,  87.,  88.,
      25.,  26.,  27.,  28.,  89.,  90.,  91.,  92.,  29.,  30.,  31.,  32.,
      93.,  94.,  95.,  96.,  33.,  34.,  35.,  36.,  97.,  98.,  99.,  100.,
      37.,  38.,  39.,  40.,  101., 102., 103., 104., 41.,  42.,  43.,  44.,
      105., 106., 107., 108., 45.,  46.,  47.,  48.,  109., 110., 111., 112.,
      49.,  50.,  51.,  52.,  113., 114., 115., 116., 53.,  54.,  55.,  56.,
      117., 118., 119., 120., 57.,  58.,  59.,  60.,  121., 122., 123., 124.,
      61.,  62.,  63.,  64.,  125., 126., 127., 128.};
  const std::vector<int> sizes = {2, 4, 4, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  65.,  2.,  66.,  3.,  67.,  4.,  68.,  5.,  69.,  6.,  70.,
      7.,  71.,  8.,  72.,  9.,  73.,  10., 74.,  11., 75.,  12., 76.,
      13., 77.,  14., 78.,  15., 79.,  16., 80.,  17., 81.,  18., 82.,
      19., 83.,  20., 84.,  21., 85.,  22., 86.,  23., 87.,  24., 88.,
      25., 89.,  26., 90.,  27., 91.,  28., 92.,  29., 93.,  30., 94.,
      31., 95.,  32., 96.,  33., 97.,  34., 98.,  35., 99.,  36., 100.,
      37., 101., 38., 102., 39., 103., 40., 104., 41., 105., 42., 106.,
      43., 107., 44., 108., 45., 109., 46., 110., 47., 111., 48., 112.,
      49., 113., 50., 114., 51., 115., 52., 116., 53., 117., 54., 118.,
      55., 119., 56., 120., 57., 121., 58., 122., 59., 123., 60., 124.,
      61., 125., 62., 126., 63., 127., 64., 128.};
  const std::vector<int> sizes = {2, 4, 4, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  65.,  69.,  73.,  77.,  2.,   6.,   10.,  14.,
      66.,  70.,  74.,  78.,  3.,   7.,   11.,  15.,  67.,  71.,  75.,  79.,
      4.,   8.,   12.,  16.,  68.,  72.,  76.,  80.,  17.,  21.,  25.,  29.,
      81.,  85.,  89.,  93.,  18.,  22.,  26.,  30.,  82.,  86.,  90.,  94.,
      19.,  23.,  27.,  31.,  83.,  87.,  91.,  95.,  20.,  24.,  28.,  32.,
      84.,  88.,  92.,  96.,  33.,  37.,  41.,  45.,  97.,  101., 105., 109.,
      34.,  38.,  42.,  46.,  98.,  102., 106., 110., 35.,  39.,  43.,  47.,
      99.,  103., 107., 111., 36.,  40.,  44.,  48.,  100., 104., 108., 112.,
      49.,  53.,  57.,  61.,  113., 117., 121., 125., 50.,  54.,  58.,  62.,
      114., 118., 122., 126., 51.,  55.,  59.,  63.,  115., 119., 123., 127.,
      52.,  56.,  60.,  64.,  116., 120., 124., 128.};
  const std::vector<int> sizes = {2, 4, 4, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  65.,  5.,  69.,  9.,  73.,  13., 77.,  2.,  66.,  6.,  70.,
      10., 74.,  14., 78.,  3.,  67.,  7.,  71.,  11., 75.,  15., 79.,
      4.,  68.,  8.,  72.,  12., 76.,  16., 80.,  17., 81.,  21., 85.,
      25., 89.,  29., 93.,  18., 82.,  22., 86.,  26., 90.,  30., 94.,
      19., 83.,  23., 87.,  27., 91.,  31., 95.,  20., 84.,  24., 88.,
      28., 92.,  32., 96.,  33., 97.,  37., 101., 41., 105., 45., 109.,
      34., 98.,  38., 102., 42., 106., 46., 110., 35., 99.,  39., 103.,
      43., 107., 47., 111., 36., 100., 40., 104., 44., 108., 48., 112.,
      49., 113., 53., 117., 57., 121., 61., 125., 50., 114., 54., 118.,
      58., 122., 62., 126., 51., 115., 55., 119., 59., 123., 63., 127.,
      52., 116., 56., 120., 60., 124., 64., 128.};
  const std::vector<int> sizes = {2, 4, 4, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   17.,  18.,  19.,  20.,  33.,  34.,  35.,  36.,
      49.,  50.,  51.,  52.,  65.,  66.,  67.,  68.,  81.,  82.,  83.,  84.,
      97.,  98.,  99.,  100., 113., 114., 115., 116., 5.,   6.,   7.,   8.,
      21.,  22.,  23.,  24.,  37.,  38.,  39.,  40.,  53.,  54.,  55.,  56.,
      69.,  70.,  71.,  72.,  85.,  86.,  87.,  88.,  101., 102., 103., 104.,
      117., 118., 119., 120., 9.,   10.,  11.,  12.,  25.,  26.,  27.,  28.,
      41.,  42.,  43.,  44.,  57.,  58.,  59.,  60.,  73.,  74.,  75.,  76.,
      89.,  90.,  91.,  92.,  105., 106., 107., 108., 121., 122., 123., 124.,
      13.,  14.,  15.,  16.,  29.,  30.,  31.,  32.,  45.,  46.,  47.,  48.,
      61.,  62.,  63.,  64.,  77.,  78.,  79.,  80.,  93.,  94.,  95.,  96.,
      109., 110., 111., 112., 125., 126., 127., 128.};
  const std::vector<int> sizes = {2, 4, 4, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33.,  49.,  2.,  18., 34.,  50.,  3.,  19., 35.,  51.,
      4.,  20., 36.,  52.,  65., 81., 97.,  113., 66., 82., 98.,  114.,
      67., 83., 99.,  115., 68., 84., 100., 116., 5.,  21., 37.,  53.,
      6.,  22., 38.,  54.,  7.,  23., 39.,  55.,  8.,  24., 40.,  56.,
      69., 85., 101., 117., 70., 86., 102., 118., 71., 87., 103., 119.,
      72., 88., 104., 120., 9.,  25., 41.,  57.,  10., 26., 42.,  58.,
      11., 27., 43.,  59.,  12., 28., 44.,  60.,  73., 89., 105., 121.,
      74., 90., 106., 122., 75., 91., 107., 123., 76., 92., 108., 124.,
      13., 29., 45.,  61.,  14., 30., 46.,  62.,  15., 31., 47.,  63.,
      16., 32., 48.,  64.,  77., 93., 109., 125., 78., 94., 110., 126.,
      79., 95., 111., 127., 80., 96., 112., 128.};
  const std::vector<int> sizes = {2, 4, 4, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   65.,  66.,  67.,  68.,  17.,  18.,  19.,  20.,
      81.,  82.,  83.,  84.,  33.,  34.,  35.,  36.,  97.,  98.,  99.,  100.,
      49.,  50.,  51.,  52.,  113., 114., 115., 116., 5.,   6.,   7.,   8.,
      69.,  70.,  71.,  72.,  21.,  22.,  23.,  24.,  85.,  86.,  87.,  88.,
      37.,  38.,  39.,  40.,  101., 102., 103., 104., 53.,  54.,  55.,  56.,
      117., 118., 119., 120., 9.,   10.,  11.,  12.,  73.,  74.,  75.,  76.,
      25.,  26.,  27.,  28.,  89.,  90.,  91.,  92.,  41.,  42.,  43.,  44.,
      105., 106., 107., 108., 57.,  58.,  59.,  60.,  121., 122., 123., 124.,
      13.,  14.,  15.,  16.,  77.,  78.,  79.,  80.,  29.,  30.,  31.,  32.,
      93.,  94.,  95.,  96.,  45.,  46.,  47.,  48.,  109., 110., 111., 112.,
      61.,  62.,  63.,  64.,  125., 126., 127., 128.};
  const std::vector<int> sizes = {2, 4, 4, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  65.,  2.,  66.,  3.,  67.,  4.,  68.,  17., 81.,  18., 82.,
      19., 83.,  20., 84.,  33., 97.,  34., 98.,  35., 99.,  36., 100.,
      49., 113., 50., 114., 51., 115., 52., 116., 5.,  69.,  6.,  70.,
      7.,  71.,  8.,  72.,  21., 85.,  22., 86.,  23., 87.,  24., 88.,
      37., 101., 38., 102., 39., 103., 40., 104., 53., 117., 54., 118.,
      55., 119., 56., 120., 9.,  73.,  10., 74.,  11., 75.,  12., 76.,
      25., 89.,  26., 90.,  27., 91.,  28., 92.,  41., 105., 42., 106.,
      43., 107., 44., 108., 57., 121., 58., 122., 59., 123., 60., 124.,
      13., 77.,  14., 78.,  15., 79.,  16., 80.,  29., 93.,  30., 94.,
      31., 95.,  32., 96.,  45., 109., 46., 110., 47., 111., 48., 112.,
      61., 125., 62., 126., 63., 127., 64., 128.};
  const std::vector<int> sizes = {2, 4, 4, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33.,  49.,  65., 81., 97.,  113., 2.,  18., 34.,  50.,
      66., 82., 98.,  114., 3.,  19., 35.,  51.,  67., 83., 99.,  115.,
      4.,  20., 36.,  52.,  68., 84., 100., 116., 5.,  21., 37.,  53.,
      69., 85., 101., 117., 6.,  22., 38.,  54.,  70., 86., 102., 118.,
      7.,  23., 39.,  55.,  71., 87., 103., 119., 8.,  24., 40.,  56.,
      72., 88., 104., 120., 9.,  25., 41.,  57.,  73., 89., 105., 121.,
      10., 26., 42.,  58.,  74., 90., 106., 122., 11., 27., 43.,  59.,
      75., 91., 107., 123., 12., 28., 44.,  60.,  76., 92., 108., 124.,
      13., 29., 45.,  61.,  77., 93., 109., 125., 14., 30., 46.,  62.,
      78., 94., 110., 126., 15., 31., 47.,  63.,  79., 95., 111., 127.,
      16., 32., 48.,  64.,  80., 96., 112., 128.};
  const std::vector<int> sizes = {2, 4, 4, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  65.,  17., 81.,  33., 97.,  49., 113., 2.,  66.,  18., 82.,
      34., 98.,  50., 114., 3.,  67.,  19., 83.,  35., 99.,  51., 115.,
      4.,  68.,  20., 84.,  36., 100., 52., 116., 5.,  69.,  21., 85.,
      37., 101., 53., 117., 6.,  70.,  22., 86.,  38., 102., 54., 118.,
      7.,  71.,  23., 87.,  39., 103., 55., 119., 8.,  72.,  24., 88.,
      40., 104., 56., 120., 9.,  73.,  25., 89.,  41., 105., 57., 121.,
      10., 74.,  26., 90.,  42., 106., 58., 122., 11., 75.,  27., 91.,
      43., 107., 59., 123., 12., 76.,  28., 92.,  44., 108., 60., 124.,
      13., 77.,  29., 93.,  45., 109., 61., 125., 14., 78.,  30., 94.,
      46., 110., 62., 126., 15., 79.,  31., 95.,  47., 111., 63., 127.,
      16., 80.,  32., 96.,  48., 112., 64., 128.};
  const std::vector<int> sizes = {2, 4, 4, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  17.,  21.,  25.,  29.,  33.,  37.,  41.,  45.,
      49.,  53.,  57.,  61.,  65.,  69.,  73.,  77.,  81.,  85.,  89.,  93.,
      97.,  101., 105., 109., 113., 117., 121., 125., 2.,   6.,   10.,  14.,
      18.,  22.,  26.,  30.,  34.,  38.,  42.,  46.,  50.,  54.,  58.,  62.,
      66.,  70.,  74.,  78.,  82.,  86.,  90.,  94.,  98.,  102., 106., 110.,
      114., 118., 122., 126., 3.,   7.,   11.,  15.,  19.,  23.,  27.,  31.,
      35.,  39.,  43.,  47.,  51.,  55.,  59.,  63.,  67.,  71.,  75.,  79.,
      83.,  87.,  91.,  95.,  99.,  103., 107., 111., 115., 119., 123., 127.,
      4.,   8.,   12.,  16.,  20.,  24.,  28.,  32.,  36.,  40.,  44.,  48.,
      52.,  56.,  60.,  64.,  68.,  72.,  76.,  80.,  84.,  88.,  92.,  96.,
      100., 104., 108., 112., 116., 120., 124., 128.};
  const std::vector<int> sizes = {2, 4, 4, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33.,  49.,  5.,  21., 37.,  53.,  9.,  25., 41.,  57.,
      13., 29., 45.,  61.,  65., 81., 97.,  113., 69., 85., 101., 117.,
      73., 89., 105., 121., 77., 93., 109., 125., 2.,  18., 34.,  50.,
      6.,  22., 38.,  54.,  10., 26., 42.,  58.,  14., 30., 46.,  62.,
      66., 82., 98.,  114., 70., 86., 102., 118., 74., 90., 106., 122.,
      78., 94., 110., 126., 3.,  19., 35.,  51.,  7.,  23., 39.,  55.,
      11., 27., 43.,  59.,  15., 31., 47.,  63.,  67., 83., 99.,  115.,
      71., 87., 103., 119., 75., 91., 107., 123., 79., 95., 111., 127.,
      4.,  20., 36.,  52.,  8.,  24., 40.,  56.,  12., 28., 44.,  60.,
      16., 32., 48.,  64.,  68., 84., 100., 116., 72., 88., 104., 120.,
      76., 92., 108., 124., 80., 96., 112., 128.};
  const std::vector<int> sizes = {2, 4, 4, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  65.,  69.,  73.,  77.,  17.,  21.,  25.,  29.,
      81.,  85.,  89.,  93.,  33.,  37.,  41.,  45.,  97.,  101., 105., 109.,
      49.,  53.,  57.,  61.,  113., 117., 121., 125., 2.,   6.,   10.,  14.,
      66.,  70.,  74.,  78.,  18.,  22.,  26.,  30.,  82.,  86.,  90.,  94.,
      34.,  38.,  42.,  46.,  98.,  102., 106., 110., 50.,  54.,  58.,  62.,
      114., 118., 122., 126., 3.,   7.,   11.,  15.,  67.,  71.,  75.,  79.,
      19.,  23.,  27.,  31.,  83.,  87.,  91.,  95.,  35.,  39.,  43.,  47.,
      99.,  103., 107., 111., 51.,  55.,  59.,  63.,  115., 119., 123., 127.,
      4.,   8.,   12.,  16.,  68.,  72.,  76.,  80.,  20.,  24.,  28.,  32.,
      84.,  88.,  92.,  96.,  36.,  40.,  44.,  48.,  100., 104., 108., 112.,
      52.,  56.,  60.,  64.,  116., 120., 124., 128.};
  const std::vector<int> sizes = {2, 4, 4, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  65.,  5.,  69.,  9.,  73.,  13., 77.,  17., 81.,  21., 85.,
      25., 89.,  29., 93.,  33., 97.,  37., 101., 41., 105., 45., 109.,
      49., 113., 53., 117., 57., 121., 61., 125., 2.,  66.,  6.,  70.,
      10., 74.,  14., 78.,  18., 82.,  22., 86.,  26., 90.,  30., 94.,
      34., 98.,  38., 102., 42., 106., 46., 110., 50., 114., 54., 118.,
      58., 122., 62., 126., 3.,  67.,  7.,  71.,  11., 75.,  15., 79.,
      19., 83.,  23., 87.,  27., 91.,  31., 95.,  35., 99.,  39., 103.,
      43., 107., 47., 111., 51., 115., 55., 119., 59., 123., 63., 127.,
      4.,  68.,  8.,  72.,  12., 76.,  16., 80.,  20., 84.,  24., 88.,
      28., 92.,  32., 96.,  36., 100., 40., 104., 44., 108., 48., 112.,
      52., 116., 56., 120., 60., 124., 64., 128.};
  const std::vector<int> sizes = {2, 4, 4, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33.,  49.,  65., 81., 97.,  113., 5.,  21., 37.,  53.,
      69., 85., 101., 117., 9.,  25., 41.,  57.,  73., 89., 105., 121.,
      13., 29., 45.,  61.,  77., 93., 109., 125., 2.,  18., 34.,  50.,
      66., 82., 98.,  114., 6.,  22., 38.,  54.,  70., 86., 102., 118.,
      10., 26., 42.,  58.,  74., 90., 106., 122., 14., 30., 46.,  62.,
      78., 94., 110., 126., 3.,  19., 35.,  51.,  67., 83., 99.,  115.,
      7.,  23., 39.,  55.,  71., 87., 103., 119., 11., 27., 43.,  59.,
      75., 91., 107., 123., 15., 31., 47.,  63.,  79., 95., 111., 127.,
      4.,  20., 36.,  52.,  68., 84., 100., 116., 8.,  24., 40.,  56.,
      72., 88., 104., 120., 12., 28., 44.,  60.,  76., 92., 108., 124.,
      16., 32., 48.,  64.,  80., 96., 112., 128.};
  const std::vector<int> sizes = {2, 4, 4, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_2x4x4x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  65.,  17., 81.,  33., 97.,  49., 113., 5.,  69.,  21., 85.,
      37., 101., 53., 117., 9.,  73.,  25., 89.,  41., 105., 57., 121.,
      13., 77.,  29., 93.,  45., 109., 61., 125., 2.,  66.,  18., 82.,
      34., 98.,  50., 114., 6.,  70.,  22., 86.,  38., 102., 54., 118.,
      10., 74.,  26., 90.,  42., 106., 58., 122., 14., 78.,  30., 94.,
      46., 110., 62., 126., 3.,  67.,  19., 83.,  35., 99.,  51., 115.,
      7.,  71.,  23., 87.,  39., 103., 55., 119., 11., 75.,  27., 91.,
      43., 107., 59., 123., 15., 79.,  31., 95.,  47., 111., 63., 127.,
      4.,  68.,  20., 84.,  36., 100., 52., 116., 8.,  72.,  24., 88.,
      40., 104., 56., 120., 12., 76.,  28., 92.,  44., 108., 60., 124.,
      16., 80.,  32., 96.,  48., 112., 64., 128.};
  const std::vector<int> sizes = {2, 4, 4, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.};
  const std::vector<int> sizes = {3, 2, 2, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  2.,  4.,  5.,  7.,  6.,  8.,  9.,  11., 10., 12.,
      13., 15., 14., 16., 17., 19., 18., 20., 21., 23., 22., 24.};
  const std::vector<int> sizes = {3, 2, 2, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  5.,  6.,  3.,  4.,  7.,  8.,  9.,  10., 13., 14.,
      11., 12., 15., 16., 17., 18., 21., 22., 19., 20., 23., 24.};
  const std::vector<int> sizes = {3, 2, 2, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  2.,  6.,  3.,  7.,  4.,  8.,  9.,  13., 10., 14.,
      11., 15., 12., 16., 17., 21., 18., 22., 19., 23., 20., 24.};
  const std::vector<int> sizes = {3, 2, 2, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  2.,  4.,  6.,  8.,  9.,  11., 13., 15.,
      10., 12., 14., 16., 17., 19., 21., 23., 18., 20., 22., 24.};
  const std::vector<int> sizes = {3, 2, 2, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  3.,  7.,  2.,  6.,  4.,  8.,  9.,  13., 11., 15.,
      10., 14., 12., 16., 17., 21., 19., 23., 18., 22., 20., 24.};
  const std::vector<int> sizes = {3, 2, 2, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 2., 3., 4., 9.,  10., 11., 12., 17., 18., 19., 20.,
      5., 6., 7., 8., 13., 14., 15., 16., 21., 22., 23., 24.};
  const std::vector<int> sizes = {3, 2, 2, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 3., 2., 4., 9.,  11., 10., 12., 17., 19., 18., 20.,
      5., 7., 6., 8., 13., 15., 14., 16., 21., 23., 22., 24.};
  const std::vector<int> sizes = {3, 2, 2, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 2., 9.,  10., 17., 18., 3., 4., 11., 12., 19., 20.,
      5., 6., 13., 14., 21., 22., 7., 8., 15., 16., 23., 24.};
  const std::vector<int> sizes = {3, 2, 2, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 9.,  17., 2., 10., 18., 3., 11., 19., 4., 12., 20.,
      5., 13., 21., 6., 14., 22., 7., 15., 23., 8., 16., 24.};
  const std::vector<int> sizes = {3, 2, 2, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 3., 9.,  11., 17., 19., 2., 4., 10., 12., 18., 20.,
      5., 7., 13., 15., 21., 23., 6., 8., 14., 16., 22., 24.};
  const std::vector<int> sizes = {3, 2, 2, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 9.,  17., 3., 11., 19., 2., 10., 18., 4., 12., 20.,
      5., 13., 21., 7., 15., 23., 6., 14., 22., 8., 16., 24.};
  const std::vector<int> sizes = {3, 2, 2, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 2., 5., 6., 9.,  10., 13., 14., 17., 18., 21., 22.,
      3., 4., 7., 8., 11., 12., 15., 16., 19., 20., 23., 24.};
  const std::vector<int> sizes = {3, 2, 2, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 5., 2., 6., 9.,  13., 10., 14., 17., 21., 18., 22.,
      3., 7., 4., 8., 11., 15., 12., 16., 19., 23., 20., 24.};
  const std::vector<int> sizes = {3, 2, 2, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 2., 9.,  10., 17., 18., 5., 6., 13., 14., 21., 22.,
      3., 4., 11., 12., 19., 20., 7., 8., 15., 16., 23., 24.};
  const std::vector<int> sizes = {3, 2, 2, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 9.,  17., 2., 10., 18., 5., 13., 21., 6., 14., 22.,
      3., 11., 19., 4., 12., 20., 7., 15., 23., 8., 16., 24.};
  const std::vector<int> sizes = {3, 2, 2, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 5., 9.,  13., 17., 21., 2., 6., 10., 14., 18., 22.,
      3., 7., 11., 15., 19., 23., 4., 8., 12., 16., 20., 24.};
  const std::vector<int> sizes = {3, 2, 2, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 9.,  17., 5., 13., 21., 2., 10., 18., 6., 14., 22.,
      3., 11., 19., 7., 15., 23., 4., 12., 20., 8., 16., 24.};
  const std::vector<int> sizes = {3, 2, 2, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 3., 5., 7., 9.,  11., 13., 15., 17., 19., 21., 23.,
      2., 4., 6., 8., 10., 12., 14., 16., 18., 20., 22., 24.};
  const std::vector<int> sizes = {3, 2, 2, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 5., 3., 7., 9.,  13., 11., 15., 17., 21., 19., 23.,
      2., 6., 4., 8., 10., 14., 12., 16., 18., 22., 20., 24.};
  const std::vector<int> sizes = {3, 2, 2, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 3., 9.,  11., 17., 19., 5., 7., 13., 15., 21., 23.,
      2., 4., 10., 12., 18., 20., 6., 8., 14., 16., 22., 24.};
  const std::vector<int> sizes = {3, 2, 2, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 9.,  17., 3., 11., 19., 5., 13., 21., 7., 15., 23.,
      2., 10., 18., 4., 12., 20., 6., 14., 22., 8., 16., 24.};
  const std::vector<int> sizes = {3, 2, 2, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 5., 9.,  13., 17., 21., 3., 7., 11., 15., 19., 23.,
      2., 6., 10., 14., 18., 22., 4., 8., 12., 16., 20., 24.};
  const std::vector<int> sizes = {3, 2, 2, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 9.,  17., 5., 13., 21., 3., 11., 19., 7., 15., 23.,
      2., 10., 18., 6., 14., 22., 4., 12., 20., 8., 16., 24.};
  const std::vector<int> sizes = {3, 2, 2, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.,
      25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.};
  const std::vector<int> sizes = {3, 2, 2, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  2.,  5.,  3.,  6.,  7.,  10., 8.,  11., 9.,  12.,
      13., 16., 14., 17., 15., 18., 19., 22., 20., 23., 21., 24.,
      25., 28., 26., 29., 27., 30., 31., 34., 32., 35., 33., 36.};
  const std::vector<int> sizes = {3, 2, 2, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  7.,  8.,  9.,  4.,  5.,  6.,  10., 11., 12.,
      13., 14., 15., 19., 20., 21., 16., 17., 18., 22., 23., 24.,
      25., 26., 27., 31., 32., 33., 28., 29., 30., 34., 35., 36.};
  const std::vector<int> sizes = {3, 2, 2, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  2.,  8.,  3.,  9.,  4.,  10., 5.,  11., 6.,  12.,
      13., 19., 14., 20., 15., 21., 16., 22., 17., 23., 18., 24.,
      25., 31., 26., 32., 27., 33., 28., 34., 29., 35., 30., 36.};
  const std::vector<int> sizes = {3, 2, 2, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 2.,  5.,  8.,  11., 3.,  6.,  9.,  12.,
      13., 16., 19., 22., 14., 17., 20., 23., 15., 18., 21., 24.,
      25., 28., 31., 34., 26., 29., 32., 35., 27., 30., 33., 36.};
  const std::vector<int> sizes = {3, 2, 2, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  4.,  10., 2.,  8.,  5.,  11., 3.,  9.,  6.,  12.,
      13., 19., 16., 22., 14., 20., 17., 23., 15., 21., 18., 24.,
      25., 31., 28., 34., 26., 32., 29., 35., 27., 33., 30., 36.};
  const std::vector<int> sizes = {3, 2, 2, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  13., 14., 15., 16., 17., 18.,
      25., 26., 27., 28., 29., 30., 7.,  8.,  9.,  10., 11., 12.,
      19., 20., 21., 22., 23., 24., 31., 32., 33., 34., 35., 36.};
  const std::vector<int> sizes = {3, 2, 2, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  2.,  5.,  3.,  6.,  13., 16., 14., 17., 15., 18.,
      25., 28., 26., 29., 27., 30., 7.,  10., 8.,  11., 9.,  12.,
      19., 22., 20., 23., 21., 24., 31., 34., 32., 35., 33., 36.};
  const std::vector<int> sizes = {3, 2, 2, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  13., 14., 15., 25., 26., 27., 4.,  5.,  6.,
      16., 17., 18., 28., 29., 30., 7.,  8.,  9.,  19., 20., 21.,
      31., 32., 33., 10., 11., 12., 22., 23., 24., 34., 35., 36.};
  const std::vector<int> sizes = {3, 2, 2, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 13., 25., 2.,  14., 26., 3.,  15., 27., 4.,  16., 28.,
      5., 17., 29., 6.,  18., 30., 7.,  19., 31., 8.,  20., 32.,
      9., 21., 33., 10., 22., 34., 11., 23., 35., 12., 24., 36.};
  const std::vector<int> sizes = {3, 2, 2, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 4.,  13., 16., 25., 28., 2., 5.,  14., 17., 26., 29.,
      3., 6.,  15., 18., 27., 30., 7., 10., 19., 22., 31., 34.,
      8., 11., 20., 23., 32., 35., 9., 12., 21., 24., 33., 36.};
  const std::vector<int> sizes = {3, 2, 2, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 13., 25., 4.,  16., 28., 2., 14., 26., 5.,  17., 29.,
      3., 15., 27., 6.,  18., 30., 7., 19., 31., 10., 22., 34.,
      8., 20., 32., 11., 23., 35., 9., 21., 33., 12., 24., 36.};
  const std::vector<int> sizes = {3, 2, 2, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  7.,  8.,  9.,  13., 14., 15., 19., 20., 21.,
      25., 26., 27., 31., 32., 33., 4.,  5.,  6.,  10., 11., 12.,
      16., 17., 18., 22., 23., 24., 28., 29., 30., 34., 35., 36.};
  const std::vector<int> sizes = {3, 2, 2, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  2.,  8.,  3.,  9.,  13., 19., 14., 20., 15., 21.,
      25., 31., 26., 32., 27., 33., 4.,  10., 5.,  11., 6.,  12.,
      16., 22., 17., 23., 18., 24., 28., 34., 29., 35., 30., 36.};
  const std::vector<int> sizes = {3, 2, 2, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  13., 14., 15., 25., 26., 27., 7.,  8.,  9.,
      19., 20., 21., 31., 32., 33., 4.,  5.,  6.,  16., 17., 18.,
      28., 29., 30., 10., 11., 12., 22., 23., 24., 34., 35., 36.};
  const std::vector<int> sizes = {3, 2, 2, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 13., 25., 2.,  14., 26., 3.,  15., 27., 7.,  19., 31.,
      8., 20., 32., 9.,  21., 33., 4.,  16., 28., 5.,  17., 29.,
      6., 18., 30., 10., 22., 34., 11., 23., 35., 12., 24., 36.};
  const std::vector<int> sizes = {3, 2, 2, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 7.,  13., 19., 25., 31., 2., 8.,  14., 20., 26., 32.,
      3., 9.,  15., 21., 27., 33., 4., 10., 16., 22., 28., 34.,
      5., 11., 17., 23., 29., 35., 6., 12., 18., 24., 30., 36.};
  const std::vector<int> sizes = {3, 2, 2, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 13., 25., 7.,  19., 31., 2., 14., 26., 8.,  20., 32.,
      3., 15., 27., 9.,  21., 33., 4., 16., 28., 10., 22., 34.,
      5., 17., 29., 11., 23., 35., 6., 18., 30., 12., 24., 36.};
  const std::vector<int> sizes = {3, 2, 2, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 4., 7., 10., 13., 16., 19., 22., 25., 28., 31., 34.,
      2., 5., 8., 11., 14., 17., 20., 23., 26., 29., 32., 35.,
      3., 6., 9., 12., 15., 18., 21., 24., 27., 30., 33., 36.};
  const std::vector<int> sizes = {3, 2, 2, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 7., 4., 10., 13., 19., 16., 22., 25., 31., 28., 34.,
      2., 8., 5., 11., 14., 20., 17., 23., 26., 32., 29., 35.,
      3., 9., 6., 12., 15., 21., 18., 24., 27., 33., 30., 36.};
  const std::vector<int> sizes = {3, 2, 2, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 4., 13., 16., 25., 28., 7., 10., 19., 22., 31., 34.,
      2., 5., 14., 17., 26., 29., 8., 11., 20., 23., 32., 35.,
      3., 6., 15., 18., 27., 30., 9., 12., 21., 24., 33., 36.};
  const std::vector<int> sizes = {3, 2, 2, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 13., 25., 4., 16., 28., 7., 19., 31., 10., 22., 34.,
      2., 14., 26., 5., 17., 29., 8., 20., 32., 11., 23., 35.,
      3., 15., 27., 6., 18., 30., 9., 21., 33., 12., 24., 36.};
  const std::vector<int> sizes = {3, 2, 2, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 7., 13., 19., 25., 31., 4., 10., 16., 22., 28., 34.,
      2., 8., 14., 20., 26., 32., 5., 11., 17., 23., 29., 35.,
      3., 9., 15., 21., 27., 33., 6., 12., 18., 24., 30., 36.};
  const std::vector<int> sizes = {3, 2, 2, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 13., 25., 7., 19., 31., 4., 16., 28., 10., 22., 34.,
      2., 14., 26., 8., 20., 32., 5., 17., 29., 11., 23., 35.,
      3., 15., 27., 9., 21., 33., 6., 18., 30., 12., 24., 36.};
  const std::vector<int> sizes = {3, 2, 2, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.,
      25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.,
      37., 38., 39., 40., 41., 42., 43., 44., 45., 46., 47., 48.};
  const std::vector<int> sizes = {3, 2, 2, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  2.,  6.,  3.,  7.,  4.,  8.,  9.,  13., 10., 14.,
      11., 15., 12., 16., 17., 21., 18., 22., 19., 23., 20., 24.,
      25., 29., 26., 30., 27., 31., 28., 32., 33., 37., 34., 38.,
      35., 39., 36., 40., 41., 45., 42., 46., 43., 47., 44., 48.};
  const std::vector<int> sizes = {3, 2, 2, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  9.,  10., 11., 12., 5.,  6.,  7.,  8.,
      13., 14., 15., 16., 17., 18., 19., 20., 25., 26., 27., 28.,
      21., 22., 23., 24., 29., 30., 31., 32., 33., 34., 35., 36.,
      41., 42., 43., 44., 37., 38., 39., 40., 45., 46., 47., 48.};
  const std::vector<int> sizes = {3, 2, 2, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  2.,  10., 3.,  11., 4.,  12., 5.,  13., 6.,  14.,
      7.,  15., 8.,  16., 17., 25., 18., 26., 19., 27., 20., 28.,
      21., 29., 22., 30., 23., 31., 24., 32., 33., 41., 34., 42.,
      35., 43., 36., 44., 37., 45., 38., 46., 39., 47., 40., 48.};
  const std::vector<int> sizes = {3, 2, 2, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 2.,  6.,  10., 14., 3.,  7.,  11., 15.,
      4.,  8.,  12., 16., 17., 21., 25., 29., 18., 22., 26., 30.,
      19., 23., 27., 31., 20., 24., 28., 32., 33., 37., 41., 45.,
      34., 38., 42., 46., 35., 39., 43., 47., 36., 40., 44., 48.};
  const std::vector<int> sizes = {3, 2, 2, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  5.,  13., 2.,  10., 6.,  14., 3.,  11., 7.,  15.,
      4.,  12., 8.,  16., 17., 25., 21., 29., 18., 26., 22., 30.,
      19., 27., 23., 31., 20., 28., 24., 32., 33., 41., 37., 45.,
      34., 42., 38., 46., 35., 43., 39., 47., 36., 44., 40., 48.};
  const std::vector<int> sizes = {3, 2, 2, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  17., 18., 19., 20.,
      21., 22., 23., 24., 33., 34., 35., 36., 37., 38., 39., 40.,
      9.,  10., 11., 12., 13., 14., 15., 16., 25., 26., 27., 28.,
      29., 30., 31., 32., 41., 42., 43., 44., 45., 46., 47., 48.};
  const std::vector<int> sizes = {3, 2, 2, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  2.,  6.,  3.,  7.,  4.,  8.,  17., 21., 18., 22.,
      19., 23., 20., 24., 33., 37., 34., 38., 35., 39., 36., 40.,
      9.,  13., 10., 14., 11., 15., 12., 16., 25., 29., 26., 30.,
      27., 31., 28., 32., 41., 45., 42., 46., 43., 47., 44., 48.};
  const std::vector<int> sizes = {3, 2, 2, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  17., 18., 19., 20., 33., 34., 35., 36.,
      5.,  6.,  7.,  8.,  21., 22., 23., 24., 37., 38., 39., 40.,
      9.,  10., 11., 12., 25., 26., 27., 28., 41., 42., 43., 44.,
      13., 14., 15., 16., 29., 30., 31., 32., 45., 46., 47., 48.};
  const std::vector<int> sizes = {3, 2, 2, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 2.,  18., 34., 3.,  19., 35., 4.,  20., 36.,
      5.,  21., 37., 6.,  22., 38., 7.,  23., 39., 8.,  24., 40.,
      9.,  25., 41., 10., 26., 42., 11., 27., 43., 12., 28., 44.,
      13., 29., 45., 14., 30., 46., 15., 31., 47., 16., 32., 48.};
  const std::vector<int> sizes = {3, 2, 2, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  17., 21., 33., 37., 2.,  6.,  18., 22., 34., 38.,
      3.,  7.,  19., 23., 35., 39., 4.,  8.,  20., 24., 36., 40.,
      9.,  13., 25., 29., 41., 45., 10., 14., 26., 30., 42., 46.,
      11., 15., 27., 31., 43., 47., 12., 16., 28., 32., 44., 48.};
  const std::vector<int> sizes = {3, 2, 2, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 5.,  21., 37., 2.,  18., 34., 6.,  22., 38.,
      3.,  19., 35., 7.,  23., 39., 4.,  20., 36., 8.,  24., 40.,
      9.,  25., 41., 13., 29., 45., 10., 26., 42., 14., 30., 46.,
      11., 27., 43., 15., 31., 47., 12., 28., 44., 16., 32., 48.};
  const std::vector<int> sizes = {3, 2, 2, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  9.,  10., 11., 12., 17., 18., 19., 20.,
      25., 26., 27., 28., 33., 34., 35., 36., 41., 42., 43., 44.,
      5.,  6.,  7.,  8.,  13., 14., 15., 16., 21., 22., 23., 24.,
      29., 30., 31., 32., 37., 38., 39., 40., 45., 46., 47., 48.};
  const std::vector<int> sizes = {3, 2, 2, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  2.,  10., 3.,  11., 4.,  12., 17., 25., 18., 26.,
      19., 27., 20., 28., 33., 41., 34., 42., 35., 43., 36., 44.,
      5.,  13., 6.,  14., 7.,  15., 8.,  16., 21., 29., 22., 30.,
      23., 31., 24., 32., 37., 45., 38., 46., 39., 47., 40., 48.};
  const std::vector<int> sizes = {3, 2, 2, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  17., 18., 19., 20., 33., 34., 35., 36.,
      9.,  10., 11., 12., 25., 26., 27., 28., 41., 42., 43., 44.,
      5.,  6.,  7.,  8.,  21., 22., 23., 24., 37., 38., 39., 40.,
      13., 14., 15., 16., 29., 30., 31., 32., 45., 46., 47., 48.};
  const std::vector<int> sizes = {3, 2, 2, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 2.,  18., 34., 3.,  19., 35., 4.,  20., 36.,
      9.,  25., 41., 10., 26., 42., 11., 27., 43., 12., 28., 44.,
      5.,  21., 37., 6.,  22., 38., 7.,  23., 39., 8.,  24., 40.,
      13., 29., 45., 14., 30., 46., 15., 31., 47., 16., 32., 48.};
  const std::vector<int> sizes = {3, 2, 2, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 9.,  17., 25., 33., 41., 2., 10., 18., 26., 34., 42.,
      3., 11., 19., 27., 35., 43., 4., 12., 20., 28., 36., 44.,
      5., 13., 21., 29., 37., 45., 6., 14., 22., 30., 38., 46.,
      7., 15., 23., 31., 39., 47., 8., 16., 24., 32., 40., 48.};
  const std::vector<int> sizes = {3, 2, 2, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 17., 33., 9.,  25., 41., 2., 18., 34., 10., 26., 42.,
      3., 19., 35., 11., 27., 43., 4., 20., 36., 12., 28., 44.,
      5., 21., 37., 13., 29., 45., 6., 22., 38., 14., 30., 46.,
      7., 23., 39., 15., 31., 47., 8., 24., 40., 16., 32., 48.};
  const std::vector<int> sizes = {3, 2, 2, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 5., 9.,  13., 17., 21., 25., 29., 33., 37., 41., 45.,
      2., 6., 10., 14., 18., 22., 26., 30., 34., 38., 42., 46.,
      3., 7., 11., 15., 19., 23., 27., 31., 35., 39., 43., 47.,
      4., 8., 12., 16., 20., 24., 28., 32., 36., 40., 44., 48.};
  const std::vector<int> sizes = {3, 2, 2, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 9.,  5., 13., 17., 25., 21., 29., 33., 41., 37., 45.,
      2., 10., 6., 14., 18., 26., 22., 30., 34., 42., 38., 46.,
      3., 11., 7., 15., 19., 27., 23., 31., 35., 43., 39., 47.,
      4., 12., 8., 16., 20., 28., 24., 32., 36., 44., 40., 48.};
  const std::vector<int> sizes = {3, 2, 2, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 5., 17., 21., 33., 37., 9.,  13., 25., 29., 41., 45.,
      2., 6., 18., 22., 34., 38., 10., 14., 26., 30., 42., 46.,
      3., 7., 19., 23., 35., 39., 11., 15., 27., 31., 43., 47.,
      4., 8., 20., 24., 36., 40., 12., 16., 28., 32., 44., 48.};
  const std::vector<int> sizes = {3, 2, 2, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 17., 33., 5., 21., 37., 9.,  25., 41., 13., 29., 45.,
      2., 18., 34., 6., 22., 38., 10., 26., 42., 14., 30., 46.,
      3., 19., 35., 7., 23., 39., 11., 27., 43., 15., 31., 47.,
      4., 20., 36., 8., 24., 40., 12., 28., 44., 16., 32., 48.};
  const std::vector<int> sizes = {3, 2, 2, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 9.,  17., 25., 33., 41., 5., 13., 21., 29., 37., 45.,
      2., 10., 18., 26., 34., 42., 6., 14., 22., 30., 38., 46.,
      3., 11., 19., 27., 35., 43., 7., 15., 23., 31., 39., 47.,
      4., 12., 20., 28., 36., 44., 8., 16., 24., 32., 40., 48.};
  const std::vector<int> sizes = {3, 2, 2, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x2x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 17., 33., 9.,  25., 41., 5., 21., 37., 13., 29., 45.,
      2., 18., 34., 10., 26., 42., 6., 22., 38., 14., 30., 46.,
      3., 19., 35., 11., 27., 43., 7., 23., 39., 15., 31., 47.,
      4., 20., 36., 12., 28., 44., 8., 24., 40., 16., 32., 48.};
  const std::vector<int> sizes = {3, 2, 2, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.,
      25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.};
  const std::vector<int> sizes = {3, 2, 3, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  2.,  4.,  6.,  7.,  9.,  11., 8.,  10., 12.,
      13., 15., 17., 14., 16., 18., 19., 21., 23., 20., 22., 24.,
      25., 27., 29., 26., 28., 30., 31., 33., 35., 32., 34., 36.};
  const std::vector<int> sizes = {3, 2, 3, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  7.,  8.,  3.,  4.,  9.,  10., 5.,  6.,  11., 12.,
      13., 14., 19., 20., 15., 16., 21., 22., 17., 18., 23., 24.,
      25., 26., 31., 32., 27., 28., 33., 34., 29., 30., 35., 36.};
  const std::vector<int> sizes = {3, 2, 3, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  2.,  8.,  3.,  9.,  4.,  10., 5.,  11., 6.,  12.,
      13., 19., 14., 20., 15., 21., 16., 22., 17., 23., 18., 24.,
      25., 31., 26., 32., 27., 33., 28., 34., 29., 35., 30., 36.};
  const std::vector<int> sizes = {3, 2, 3, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 2.,  4.,  6.,  8.,  10., 12.,
      13., 15., 17., 19., 21., 23., 14., 16., 18., 20., 22., 24.,
      25., 27., 29., 31., 33., 35., 26., 28., 30., 32., 34., 36.};
  const std::vector<int> sizes = {3, 2, 3, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  3.,  9.,  5.,  11., 2.,  8.,  4.,  10., 6.,  12.,
      13., 19., 15., 21., 17., 23., 14., 20., 16., 22., 18., 24.,
      25., 31., 27., 33., 29., 35., 26., 32., 28., 34., 30., 36.};
  const std::vector<int> sizes = {3, 2, 3, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  13., 14., 15., 16., 17., 18.,
      25., 26., 27., 28., 29., 30., 7.,  8.,  9.,  10., 11., 12.,
      19., 20., 21., 22., 23., 24., 31., 32., 33., 34., 35., 36.};
  const std::vector<int> sizes = {3, 2, 3, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  2.,  4.,  6.,  13., 15., 17., 14., 16., 18.,
      25., 27., 29., 26., 28., 30., 7.,  9.,  11., 8.,  10., 12.,
      19., 21., 23., 20., 22., 24., 31., 33., 35., 32., 34., 36.};
  const std::vector<int> sizes = {3, 2, 3, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 2.,  13., 14., 25., 26., 3.,  4.,  15., 16., 27., 28.,
      5., 6.,  17., 18., 29., 30., 7.,  8.,  19., 20., 31., 32.,
      9., 10., 21., 22., 33., 34., 11., 12., 23., 24., 35., 36.};
  const std::vector<int> sizes = {3, 2, 3, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 13., 25., 2.,  14., 26., 3.,  15., 27., 4.,  16., 28.,
      5., 17., 29., 6.,  18., 30., 7.,  19., 31., 8.,  20., 32.,
      9., 21., 33., 10., 22., 34., 11., 23., 35., 12., 24., 36.};
  const std::vector<int> sizes = {3, 2, 3, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  13., 15., 17., 25., 27., 29., 2.,  4.,  6.,
      14., 16., 18., 26., 28., 30., 7.,  9.,  11., 19., 21., 23.,
      31., 33., 35., 8.,  10., 12., 20., 22., 24., 32., 34., 36.};
  const std::vector<int> sizes = {3, 2, 3, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 3., 15., 27., 5.,  17., 29., 2.,  14., 26.,
      4.,  16., 28., 6., 18., 30., 7.,  19., 31., 9.,  21., 33.,
      11., 23., 35., 8., 20., 32., 10., 22., 34., 12., 24., 36.};
  const std::vector<int> sizes = {3, 2, 3, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 2., 7.,  8.,  13., 14., 19., 20., 25., 26., 31., 32.,
      3., 4., 9.,  10., 15., 16., 21., 22., 27., 28., 33., 34.,
      5., 6., 11., 12., 17., 18., 23., 24., 29., 30., 35., 36.};
  const std::vector<int> sizes = {3, 2, 3, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 7.,  2., 8.,  13., 19., 14., 20., 25., 31., 26., 32.,
      3., 9.,  4., 10., 15., 21., 16., 22., 27., 33., 28., 34.,
      5., 11., 6., 12., 17., 23., 18., 24., 29., 35., 30., 36.};
  const std::vector<int> sizes = {3, 2, 3, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 2., 13., 14., 25., 26., 7.,  8.,  19., 20., 31., 32.,
      3., 4., 15., 16., 27., 28., 9.,  10., 21., 22., 33., 34.,
      5., 6., 17., 18., 29., 30., 11., 12., 23., 24., 35., 36.};
  const std::vector<int> sizes = {3, 2, 3, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 13., 25., 2., 14., 26., 7.,  19., 31., 8.,  20., 32.,
      3., 15., 27., 4., 16., 28., 9.,  21., 33., 10., 22., 34.,
      5., 17., 29., 6., 18., 30., 11., 23., 35., 12., 24., 36.};
  const std::vector<int> sizes = {3, 2, 3, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 7.,  13., 19., 25., 31., 2., 8.,  14., 20., 26., 32.,
      3., 9.,  15., 21., 27., 33., 4., 10., 16., 22., 28., 34.,
      5., 11., 17., 23., 29., 35., 6., 12., 18., 24., 30., 36.};
  const std::vector<int> sizes = {3, 2, 3, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 13., 25., 7.,  19., 31., 2., 14., 26., 8.,  20., 32.,
      3., 15., 27., 9.,  21., 33., 4., 16., 28., 10., 22., 34.,
      5., 17., 29., 11., 23., 35., 6., 18., 30., 12., 24., 36.};
  const std::vector<int> sizes = {3, 2, 3, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23.,
      25., 27., 29., 31., 33., 35., 2.,  4.,  6.,  8.,  10., 12.,
      14., 16., 18., 20., 22., 24., 26., 28., 30., 32., 34., 36.};
  const std::vector<int> sizes = {3, 2, 3, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  3.,  9.,  5.,  11., 13., 19., 15., 21., 17., 23.,
      25., 31., 27., 33., 29., 35., 2.,  8.,  4.,  10., 6.,  12.,
      14., 20., 16., 22., 18., 24., 26., 32., 28., 34., 30., 36.};
  const std::vector<int> sizes = {3, 2, 3, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  13., 15., 17., 25., 27., 29., 7.,  9.,  11.,
      19., 21., 23., 31., 33., 35., 2.,  4.,  6.,  14., 16., 18.,
      26., 28., 30., 8.,  10., 12., 20., 22., 24., 32., 34., 36.};
  const std::vector<int> sizes = {3, 2, 3, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 13., 25., 3.,  15., 27., 5.,  17., 29., 7.,  19., 31.,
      9., 21., 33., 11., 23., 35., 2.,  14., 26., 4.,  16., 28.,
      6., 18., 30., 8.,  20., 32., 10., 22., 34., 12., 24., 36.};
  const std::vector<int> sizes = {3, 2, 3, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 7.,  13., 19., 25., 31., 3., 9.,  15., 21., 27., 33.,
      5., 11., 17., 23., 29., 35., 2., 8.,  14., 20., 26., 32.,
      4., 10., 16., 22., 28., 34., 6., 12., 18., 24., 30., 36.};
  const std::vector<int> sizes = {3, 2, 3, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 13., 25., 7.,  19., 31., 3., 15., 27., 9.,  21., 33.,
      5., 17., 29., 11., 23., 35., 2., 14., 26., 8.,  20., 32.,
      4., 16., 28., 10., 22., 34., 6., 18., 30., 12., 24., 36.};
  const std::vector<int> sizes = {3, 2, 3, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14.,
      15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28.,
      29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42.,
      43., 44., 45., 46., 47., 48., 49., 50., 51., 52., 53., 54.};
  const std::vector<int> sizes = {3, 2, 3, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  2.,  5.,  8.,  3.,  6.,  9.,  10., 13., 16., 11., 14.,
      17., 12., 15., 18., 19., 22., 25., 20., 23., 26., 21., 24., 27., 28.,
      31., 34., 29., 32., 35., 30., 33., 36., 37., 40., 43., 38., 41., 44.,
      39., 42., 45., 46., 49., 52., 47., 50., 53., 48., 51., 54.};
  const std::vector<int> sizes = {3, 2, 3, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  10., 11., 12., 4.,  5.,  6.,  13., 14., 15., 7.,  8.,
      9.,  16., 17., 18., 19., 20., 21., 28., 29., 30., 22., 23., 24., 31.,
      32., 33., 25., 26., 27., 34., 35., 36., 37., 38., 39., 46., 47., 48.,
      40., 41., 42., 49., 50., 51., 43., 44., 45., 52., 53., 54.};
  const std::vector<int> sizes = {3, 2, 3, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 2.,  11., 3.,  12., 4.,  13., 5.,  14., 6.,  15., 7.,  16.,
      8.,  17., 9.,  18., 19., 28., 20., 29., 21., 30., 22., 31., 23., 32.,
      24., 33., 25., 34., 26., 35., 27., 36., 37., 46., 38., 47., 39., 48.,
      40., 49., 41., 50., 42., 51., 43., 52., 44., 53., 45., 54.};
  const std::vector<int> sizes = {3, 2, 3, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 2.,  5.,  8.,  11., 14., 17., 3.,  6.,
      9.,  12., 15., 18., 19., 22., 25., 28., 31., 34., 20., 23., 26., 29.,
      32., 35., 21., 24., 27., 30., 33., 36., 37., 40., 43., 46., 49., 52.,
      38., 41., 44., 47., 50., 53., 39., 42., 45., 48., 51., 54.};
  const std::vector<int> sizes = {3, 2, 3, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 4.,  13., 7.,  16., 2.,  11., 5.,  14., 8.,  17., 3.,  12.,
      6.,  15., 9.,  18., 19., 28., 22., 31., 25., 34., 20., 29., 23., 32.,
      26., 35., 21., 30., 24., 33., 27., 36., 37., 46., 40., 49., 43., 52.,
      38., 47., 41., 50., 44., 53., 39., 48., 42., 51., 45., 54.};
  const std::vector<int> sizes = {3, 2, 3, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  19., 20., 21., 22., 23.,
      24., 25., 26., 27., 37., 38., 39., 40., 41., 42., 43., 44., 45., 10.,
      11., 12., 13., 14., 15., 16., 17., 18., 28., 29., 30., 31., 32., 33.,
      34., 35., 36., 46., 47., 48., 49., 50., 51., 52., 53., 54.};
  const std::vector<int> sizes = {3, 2, 3, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  2.,  5.,  8.,  3.,  6.,  9.,  19., 22., 25., 20., 23.,
      26., 21., 24., 27., 37., 40., 43., 38., 41., 44., 39., 42., 45., 10.,
      13., 16., 11., 14., 17., 12., 15., 18., 28., 31., 34., 29., 32., 35.,
      30., 33., 36., 46., 49., 52., 47., 50., 53., 48., 51., 54.};
  const std::vector<int> sizes = {3, 2, 3, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  19., 20., 21., 37., 38., 39., 4.,  5.,  6.,  22., 23.,
      24., 40., 41., 42., 7.,  8.,  9.,  25., 26., 27., 43., 44., 45., 10.,
      11., 12., 28., 29., 30., 46., 47., 48., 13., 14., 15., 31., 32., 33.,
      49., 50., 51., 16., 17., 18., 34., 35., 36., 52., 53., 54.};
  const std::vector<int> sizes = {3, 2, 3, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 2.,  20., 38., 3.,  21., 39., 4.,  22., 40., 5.,  23.,
      41., 6.,  24., 42., 7.,  25., 43., 8.,  26., 44., 9.,  27., 45., 10.,
      28., 46., 11., 29., 47., 12., 30., 48., 13., 31., 49., 14., 32., 50.,
      15., 33., 51., 16., 34., 52., 17., 35., 53., 18., 36., 54.};
  const std::vector<int> sizes = {3, 2, 3, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  19., 22., 25., 37., 40., 43., 2.,  5.,  8.,  20., 23.,
      26., 38., 41., 44., 3.,  6.,  9.,  21., 24., 27., 39., 42., 45., 10.,
      13., 16., 28., 31., 34., 46., 49., 52., 11., 14., 17., 29., 32., 35.,
      47., 50., 53., 12., 15., 18., 30., 33., 36., 48., 51., 54.};
  const std::vector<int> sizes = {3, 2, 3, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 4.,  22., 40., 7.,  25., 43., 2.,  20., 38., 5.,  23.,
      41., 8.,  26., 44., 3.,  21., 39., 6.,  24., 42., 9.,  27., 45., 10.,
      28., 46., 13., 31., 49., 16., 34., 52., 11., 29., 47., 14., 32., 50.,
      17., 35., 53., 12., 30., 48., 15., 33., 51., 18., 36., 54.};
  const std::vector<int> sizes = {3, 2, 3, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  10., 11., 12., 19., 20., 21., 28., 29., 30., 37., 38.,
      39., 46., 47., 48., 4.,  5.,  6.,  13., 14., 15., 22., 23., 24., 31.,
      32., 33., 40., 41., 42., 49., 50., 51., 7.,  8.,  9.,  16., 17., 18.,
      25., 26., 27., 34., 35., 36., 43., 44., 45., 52., 53., 54.};
  const std::vector<int> sizes = {3, 2, 3, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 2.,  11., 3.,  12., 19., 28., 20., 29., 21., 30., 37., 46.,
      38., 47., 39., 48., 4.,  13., 5.,  14., 6.,  15., 22., 31., 23., 32.,
      24., 33., 40., 49., 41., 50., 42., 51., 7.,  16., 8.,  17., 9.,  18.,
      25., 34., 26., 35., 27., 36., 43., 52., 44., 53., 45., 54.};
  const std::vector<int> sizes = {3, 2, 3, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  19., 20., 21., 37., 38., 39., 10., 11., 12., 28., 29.,
      30., 46., 47., 48., 4.,  5.,  6.,  22., 23., 24., 40., 41., 42., 13.,
      14., 15., 31., 32., 33., 49., 50., 51., 7.,  8.,  9.,  25., 26., 27.,
      43., 44., 45., 16., 17., 18., 34., 35., 36., 52., 53., 54.};
  const std::vector<int> sizes = {3, 2, 3, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 2.,  20., 38., 3.,  21., 39., 10., 28., 46., 11., 29.,
      47., 12., 30., 48., 4.,  22., 40., 5.,  23., 41., 6.,  24., 42., 13.,
      31., 49., 14., 32., 50., 15., 33., 51., 7.,  25., 43., 8.,  26., 44.,
      9.,  27., 45., 16., 34., 52., 17., 35., 53., 18., 36., 54.};
  const std::vector<int> sizes = {3, 2, 3, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 28., 37., 46., 2.,  11., 20., 29., 38., 47., 3.,  12.,
      21., 30., 39., 48., 4.,  13., 22., 31., 40., 49., 5.,  14., 23., 32.,
      41., 50., 6.,  15., 24., 33., 42., 51., 7.,  16., 25., 34., 43., 52.,
      8.,  17., 26., 35., 44., 53., 9.,  18., 27., 36., 45., 54.};
  const std::vector<int> sizes = {3, 2, 3, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 10., 28., 46., 2.,  20., 38., 11., 29., 47., 3.,  21.,
      39., 12., 30., 48., 4.,  22., 40., 13., 31., 49., 5.,  23., 41., 14.,
      32., 50., 6.,  24., 42., 15., 33., 51., 7.,  25., 43., 16., 34., 52.,
      8.,  26., 44., 17., 35., 53., 9.,  27., 45., 18., 36., 54.};
  const std::vector<int> sizes = {3, 2, 3, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 28., 31., 34., 37., 40.,
      43., 46., 49., 52., 2.,  5.,  8.,  11., 14., 17., 20., 23., 26., 29.,
      32., 35., 38., 41., 44., 47., 50., 53., 3.,  6.,  9.,  12., 15., 18.,
      21., 24., 27., 30., 33., 36., 39., 42., 45., 48., 51., 54.};
  const std::vector<int> sizes = {3, 2, 3, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 4.,  13., 7.,  16., 19., 28., 22., 31., 25., 34., 37., 46.,
      40., 49., 43., 52., 2.,  11., 5.,  14., 8.,  17., 20., 29., 23., 32.,
      26., 35., 38., 47., 41., 50., 44., 53., 3.,  12., 6.,  15., 9.,  18.,
      21., 30., 24., 33., 27., 36., 39., 48., 42., 51., 45., 54.};
  const std::vector<int> sizes = {3, 2, 3, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  19., 22., 25., 37., 40., 43., 10., 13., 16., 28., 31.,
      34., 46., 49., 52., 2.,  5.,  8.,  20., 23., 26., 38., 41., 44., 11.,
      14., 17., 29., 32., 35., 47., 50., 53., 3.,  6.,  9.,  21., 24., 27.,
      39., 42., 45., 12., 15., 18., 30., 33., 36., 48., 51., 54.};
  const std::vector<int> sizes = {3, 2, 3, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 4.,  22., 40., 7.,  25., 43., 10., 28., 46., 13., 31.,
      49., 16., 34., 52., 2.,  20., 38., 5.,  23., 41., 8.,  26., 44., 11.,
      29., 47., 14., 32., 50., 17., 35., 53., 3.,  21., 39., 6.,  24., 42.,
      9.,  27., 45., 12., 30., 48., 15., 33., 51., 18., 36., 54.};
  const std::vector<int> sizes = {3, 2, 3, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 28., 37., 46., 4.,  13., 22., 31., 40., 49., 7.,  16.,
      25., 34., 43., 52., 2.,  11., 20., 29., 38., 47., 5.,  14., 23., 32.,
      41., 50., 8.,  17., 26., 35., 44., 53., 3.,  12., 21., 30., 39., 48.,
      6.,  15., 24., 33., 42., 51., 9.,  18., 27., 36., 45., 54.};
  const std::vector<int> sizes = {3, 2, 3, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 10., 28., 46., 4.,  22., 40., 13., 31., 49., 7.,  25.,
      43., 16., 34., 52., 2.,  20., 38., 11., 29., 47., 5.,  23., 41., 14.,
      32., 50., 8.,  26., 44., 17., 35., 53., 3.,  21., 39., 12., 30., 48.,
      6.,  24., 42., 15., 33., 51., 9.,  27., 45., 18., 36., 54.};
  const std::vector<int> sizes = {3, 2, 3, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14., 15.,
      16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 30.,
      31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42., 43., 44., 45.,
      46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56., 57., 58., 59., 60.,
      61., 62., 63., 64., 65., 66., 67., 68., 69., 70., 71., 72.};
  const std::vector<int> sizes = {3, 2, 3, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  2.,  6.,  10., 3.,  7.,  11., 4.,  8.,  12., 13., 17., 21.,
      14., 18., 22., 15., 19., 23., 16., 20., 24., 25., 29., 33., 26., 30., 34.,
      27., 31., 35., 28., 32., 36., 37., 41., 45., 38., 42., 46., 39., 43., 47.,
      40., 44., 48., 49., 53., 57., 50., 54., 58., 51., 55., 59., 52., 56., 60.,
      61., 65., 69., 62., 66., 70., 63., 67., 71., 64., 68., 72.};
  const std::vector<int> sizes = {3, 2, 3, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  13., 14., 15., 16., 5.,  6.,  7.,  8.,  17., 18., 19.,
      20., 9.,  10., 11., 12., 21., 22., 23., 24., 25., 26., 27., 28., 37., 38.,
      39., 40., 29., 30., 31., 32., 41., 42., 43., 44., 33., 34., 35., 36., 45.,
      46., 47., 48., 49., 50., 51., 52., 61., 62., 63., 64., 53., 54., 55., 56.,
      65., 66., 67., 68., 57., 58., 59., 60., 69., 70., 71., 72.};
  const std::vector<int> sizes = {3, 2, 3, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 2.,  14., 3.,  15., 4.,  16., 5.,  17., 6.,  18., 7.,  19., 8.,
      20., 9.,  21., 10., 22., 11., 23., 12., 24., 25., 37., 26., 38., 27., 39.,
      28., 40., 29., 41., 30., 42., 31., 43., 32., 44., 33., 45., 34., 46., 35.,
      47., 36., 48., 49., 61., 50., 62., 51., 63., 52., 64., 53., 65., 54., 66.,
      55., 67., 56., 68., 57., 69., 58., 70., 59., 71., 60., 72.};
  const std::vector<int> sizes = {3, 2, 3, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 2.,  6.,  10., 14., 18., 22., 3.,  7.,  11.,
      15., 19., 23., 4.,  8.,  12., 16., 20., 24., 25., 29., 33., 37., 41., 45.,
      26., 30., 34., 38., 42., 46., 27., 31., 35., 39., 43., 47., 28., 32., 36.,
      40., 44., 48., 49., 53., 57., 61., 65., 69., 50., 54., 58., 62., 66., 70.,
      51., 55., 59., 63., 67., 71., 52., 56., 60., 64., 68., 72.};
  const std::vector<int> sizes = {3, 2, 3, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 5.,  17., 9.,  21., 2.,  14., 6.,  18., 10., 22., 3.,  15., 7.,
      19., 11., 23., 4.,  16., 8.,  20., 12., 24., 25., 37., 29., 41., 33., 45.,
      26., 38., 30., 42., 34., 46., 27., 39., 31., 43., 35., 47., 28., 40., 32.,
      44., 36., 48., 49., 61., 53., 65., 57., 69., 50., 62., 54., 66., 58., 70.,
      51., 63., 55., 67., 59., 71., 52., 64., 56., 68., 60., 72.};
  const std::vector<int> sizes = {3, 2, 3, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 25., 26., 27.,
      28., 29., 30., 31., 32., 33., 34., 35., 36., 49., 50., 51., 52., 53., 54.,
      55., 56., 57., 58., 59., 60., 13., 14., 15., 16., 17., 18., 19., 20., 21.,
      22., 23., 24., 37., 38., 39., 40., 41., 42., 43., 44., 45., 46., 47., 48.,
      61., 62., 63., 64., 65., 66., 67., 68., 69., 70., 71., 72.};
  const std::vector<int> sizes = {3, 2, 3, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  2.,  6.,  10., 3.,  7.,  11., 4.,  8.,  12., 25., 29., 33.,
      26., 30., 34., 27., 31., 35., 28., 32., 36., 49., 53., 57., 50., 54., 58.,
      51., 55., 59., 52., 56., 60., 13., 17., 21., 14., 18., 22., 15., 19., 23.,
      16., 20., 24., 37., 41., 45., 38., 42., 46., 39., 43., 47., 40., 44., 48.,
      61., 65., 69., 62., 66., 70., 63., 67., 71., 64., 68., 72.};
  const std::vector<int> sizes = {3, 2, 3, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  25., 26., 27., 28., 49., 50., 51., 52., 5.,  6.,  7.,
      8.,  29., 30., 31., 32., 53., 54., 55., 56., 9.,  10., 11., 12., 33., 34.,
      35., 36., 57., 58., 59., 60., 13., 14., 15., 16., 37., 38., 39., 40., 61.,
      62., 63., 64., 17., 18., 19., 20., 41., 42., 43., 44., 65., 66., 67., 68.,
      21., 22., 23., 24., 45., 46., 47., 48., 69., 70., 71., 72.};
  const std::vector<int> sizes = {3, 2, 3, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 2.,  26., 50., 3.,  27., 51., 4.,  28., 52., 5.,  29., 53.,
      6.,  30., 54., 7.,  31., 55., 8.,  32., 56., 9.,  33., 57., 10., 34., 58.,
      11., 35., 59., 12., 36., 60., 13., 37., 61., 14., 38., 62., 15., 39., 63.,
      16., 40., 64., 17., 41., 65., 18., 42., 66., 19., 43., 67., 20., 44., 68.,
      21., 45., 69., 22., 46., 70., 23., 47., 71., 24., 48., 72.};
  const std::vector<int> sizes = {3, 2, 3, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  25., 29., 33., 49., 53., 57., 2.,  6.,  10., 26., 30., 34.,
      50., 54., 58., 3.,  7.,  11., 27., 31., 35., 51., 55., 59., 4.,  8.,  12.,
      28., 32., 36., 52., 56., 60., 13., 17., 21., 37., 41., 45., 61., 65., 69.,
      14., 18., 22., 38., 42., 46., 62., 66., 70., 15., 19., 23., 39., 43., 47.,
      63., 67., 71., 16., 20., 24., 40., 44., 48., 64., 68., 72.};
  const std::vector<int> sizes = {3, 2, 3, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 5.,  29., 53., 9.,  33., 57., 2.,  26., 50., 6.,  30., 54.,
      10., 34., 58., 3.,  27., 51., 7.,  31., 55., 11., 35., 59., 4.,  28., 52.,
      8.,  32., 56., 12., 36., 60., 13., 37., 61., 17., 41., 65., 21., 45., 69.,
      14., 38., 62., 18., 42., 66., 22., 46., 70., 15., 39., 63., 19., 43., 67.,
      23., 47., 71., 16., 40., 64., 20., 44., 68., 24., 48., 72.};
  const std::vector<int> sizes = {3, 2, 3, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  13., 14., 15., 16., 25., 26., 27., 28., 37., 38., 39.,
      40., 49., 50., 51., 52., 61., 62., 63., 64., 5.,  6.,  7.,  8.,  17., 18.,
      19., 20., 29., 30., 31., 32., 41., 42., 43., 44., 53., 54., 55., 56., 65.,
      66., 67., 68., 9.,  10., 11., 12., 21., 22., 23., 24., 33., 34., 35., 36.,
      45., 46., 47., 48., 57., 58., 59., 60., 69., 70., 71., 72.};
  const std::vector<int> sizes = {3, 2, 3, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 2.,  14., 3.,  15., 4.,  16., 25., 37., 26., 38., 27., 39., 28.,
      40., 49., 61., 50., 62., 51., 63., 52., 64., 5.,  17., 6.,  18., 7.,  19.,
      8.,  20., 29., 41., 30., 42., 31., 43., 32., 44., 53., 65., 54., 66., 55.,
      67., 56., 68., 9.,  21., 10., 22., 11., 23., 12., 24., 33., 45., 34., 46.,
      35., 47., 36., 48., 57., 69., 58., 70., 59., 71., 60., 72.};
  const std::vector<int> sizes = {3, 2, 3, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  25., 26., 27., 28., 49., 50., 51., 52., 13., 14., 15.,
      16., 37., 38., 39., 40., 61., 62., 63., 64., 5.,  6.,  7.,  8.,  29., 30.,
      31., 32., 53., 54., 55., 56., 17., 18., 19., 20., 41., 42., 43., 44., 65.,
      66., 67., 68., 9.,  10., 11., 12., 33., 34., 35., 36., 57., 58., 59., 60.,
      21., 22., 23., 24., 45., 46., 47., 48., 69., 70., 71., 72.};
  const std::vector<int> sizes = {3, 2, 3, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 2.,  26., 50., 3.,  27., 51., 4.,  28., 52., 13., 37., 61.,
      14., 38., 62., 15., 39., 63., 16., 40., 64., 5.,  29., 53., 6.,  30., 54.,
      7.,  31., 55., 8.,  32., 56., 17., 41., 65., 18., 42., 66., 19., 43., 67.,
      20., 44., 68., 9.,  33., 57., 10., 34., 58., 11., 35., 59., 12., 36., 60.,
      21., 45., 69., 22., 46., 70., 23., 47., 71., 24., 48., 72.};
  const std::vector<int> sizes = {3, 2, 3, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 49., 61., 2.,  14., 26., 38., 50., 62., 3.,  15., 27.,
      39., 51., 63., 4.,  16., 28., 40., 52., 64., 5.,  17., 29., 41., 53., 65.,
      6.,  18., 30., 42., 54., 66., 7.,  19., 31., 43., 55., 67., 8.,  20., 32.,
      44., 56., 68., 9.,  21., 33., 45., 57., 69., 10., 22., 34., 46., 58., 70.,
      11., 23., 35., 47., 59., 71., 12., 24., 36., 48., 60., 72.};
  const std::vector<int> sizes = {3, 2, 3, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 13., 37., 61., 2.,  26., 50., 14., 38., 62., 3.,  27., 51.,
      15., 39., 63., 4.,  28., 52., 16., 40., 64., 5.,  29., 53., 17., 41., 65.,
      6.,  30., 54., 18., 42., 66., 7.,  31., 55., 19., 43., 67., 8.,  32., 56.,
      20., 44., 68., 9.,  33., 57., 21., 45., 69., 10., 34., 58., 22., 46., 70.,
      11., 35., 59., 23., 47., 71., 12., 36., 60., 24., 48., 72.};
  const std::vector<int> sizes = {3, 2, 3, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 25., 29., 33., 37., 41., 45., 49., 53., 57.,
      61., 65., 69., 2.,  6.,  10., 14., 18., 22., 26., 30., 34., 38., 42., 46.,
      50., 54., 58., 62., 66., 70., 3.,  7.,  11., 15., 19., 23., 27., 31., 35.,
      39., 43., 47., 51., 55., 59., 63., 67., 71., 4.,  8.,  12., 16., 20., 24.,
      28., 32., 36., 40., 44., 48., 52., 56., 60., 64., 68., 72.};
  const std::vector<int> sizes = {3, 2, 3, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 5.,  17., 9.,  21., 25., 37., 29., 41., 33., 45., 49., 61., 53.,
      65., 57., 69., 2.,  14., 6.,  18., 10., 22., 26., 38., 30., 42., 34., 46.,
      50., 62., 54., 66., 58., 70., 3.,  15., 7.,  19., 11., 23., 27., 39., 31.,
      43., 35., 47., 51., 63., 55., 67., 59., 71., 4.,  16., 8.,  20., 12., 24.,
      28., 40., 32., 44., 36., 48., 52., 64., 56., 68., 60., 72.};
  const std::vector<int> sizes = {3, 2, 3, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  25., 29., 33., 49., 53., 57., 13., 17., 21., 37., 41., 45.,
      61., 65., 69., 2.,  6.,  10., 26., 30., 34., 50., 54., 58., 14., 18., 22.,
      38., 42., 46., 62., 66., 70., 3.,  7.,  11., 27., 31., 35., 51., 55., 59.,
      15., 19., 23., 39., 43., 47., 63., 67., 71., 4.,  8.,  12., 28., 32., 36.,
      52., 56., 60., 16., 20., 24., 40., 44., 48., 64., 68., 72.};
  const std::vector<int> sizes = {3, 2, 3, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 5.,  29., 53., 9.,  33., 57., 13., 37., 61., 17., 41., 65.,
      21., 45., 69., 2.,  26., 50., 6.,  30., 54., 10., 34., 58., 14., 38., 62.,
      18., 42., 66., 22., 46., 70., 3.,  27., 51., 7.,  31., 55., 11., 35., 59.,
      15., 39., 63., 19., 43., 67., 23., 47., 71., 4.,  28., 52., 8.,  32., 56.,
      12., 36., 60., 16., 40., 64., 20., 44., 68., 24., 48., 72.};
  const std::vector<int> sizes = {3, 2, 3, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 49., 61., 5.,  17., 29., 41., 53., 65., 9.,  21., 33.,
      45., 57., 69., 2.,  14., 26., 38., 50., 62., 6.,  18., 30., 42., 54., 66.,
      10., 22., 34., 46., 58., 70., 3.,  15., 27., 39., 51., 63., 7.,  19., 31.,
      43., 55., 67., 11., 23., 35., 47., 59., 71., 4.,  16., 28., 40., 52., 64.,
      8.,  20., 32., 44., 56., 68., 12., 24., 36., 48., 60., 72.};
  const std::vector<int> sizes = {3, 2, 3, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x3x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 13., 37., 61., 5.,  29., 53., 17., 41., 65., 9.,  33., 57.,
      21., 45., 69., 2.,  26., 50., 14., 38., 62., 6.,  30., 54., 18., 42., 66.,
      10., 34., 58., 22., 46., 70., 3.,  27., 51., 15., 39., 63., 7.,  31., 55.,
      19., 43., 67., 11., 35., 59., 23., 47., 71., 4.,  28., 52., 16., 40., 64.,
      8.,  32., 56., 20., 44., 68., 12., 36., 60., 24., 48., 72.};
  const std::vector<int> sizes = {3, 2, 3, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.,
      25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.,
      37., 38., 39., 40., 41., 42., 43., 44., 45., 46., 47., 48.};
  const std::vector<int> sizes = {3, 2, 4, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  2.,  4.,  6.,  8.,  9.,  11., 13., 15.,
      10., 12., 14., 16., 17., 19., 21., 23., 18., 20., 22., 24.,
      25., 27., 29., 31., 26., 28., 30., 32., 33., 35., 37., 39.,
      34., 36., 38., 40., 41., 43., 45., 47., 42., 44., 46., 48.};
  const std::vector<int> sizes = {3, 2, 4, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  9.,  10., 3.,  4.,  11., 12., 5.,  6.,  13., 14.,
      7.,  8.,  15., 16., 17., 18., 25., 26., 19., 20., 27., 28.,
      21., 22., 29., 30., 23., 24., 31., 32., 33., 34., 41., 42.,
      35., 36., 43., 44., 37., 38., 45., 46., 39., 40., 47., 48.};
  const std::vector<int> sizes = {3, 2, 4, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  2.,  10., 3.,  11., 4.,  12., 5.,  13., 6.,  14.,
      7.,  15., 8.,  16., 17., 25., 18., 26., 19., 27., 20., 28.,
      21., 29., 22., 30., 23., 31., 24., 32., 33., 41., 34., 42.,
      35., 43., 36., 44., 37., 45., 38., 46., 39., 47., 40., 48.};
  const std::vector<int> sizes = {3, 2, 4, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 2.,  4.,  6.,  8.,
      10., 12., 14., 16., 17., 19., 21., 23., 25., 27., 29., 31.,
      18., 20., 22., 24., 26., 28., 30., 32., 33., 35., 37., 39.,
      41., 43., 45., 47., 34., 36., 38., 40., 42., 44., 46., 48.};
  const std::vector<int> sizes = {3, 2, 4, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  3.,  11., 5.,  13., 7.,  15., 2.,  10., 4.,  12.,
      6.,  14., 8.,  16., 17., 25., 19., 27., 21., 29., 23., 31.,
      18., 26., 20., 28., 22., 30., 24., 32., 33., 41., 35., 43.,
      37., 45., 39., 47., 34., 42., 36., 44., 38., 46., 40., 48.};
  const std::vector<int> sizes = {3, 2, 4, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  17., 18., 19., 20.,
      21., 22., 23., 24., 33., 34., 35., 36., 37., 38., 39., 40.,
      9.,  10., 11., 12., 13., 14., 15., 16., 25., 26., 27., 28.,
      29., 30., 31., 32., 41., 42., 43., 44., 45., 46., 47., 48.};
  const std::vector<int> sizes = {3, 2, 4, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  2.,  4.,  6.,  8.,  17., 19., 21., 23.,
      18., 20., 22., 24., 33., 35., 37., 39., 34., 36., 38., 40.,
      9.,  11., 13., 15., 10., 12., 14., 16., 25., 27., 29., 31.,
      26., 28., 30., 32., 41., 43., 45., 47., 42., 44., 46., 48.};
  const std::vector<int> sizes = {3, 2, 4, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  17., 18., 33., 34., 3.,  4.,  19., 20., 35., 36.,
      5.,  6.,  21., 22., 37., 38., 7.,  8.,  23., 24., 39., 40.,
      9.,  10., 25., 26., 41., 42., 11., 12., 27., 28., 43., 44.,
      13., 14., 29., 30., 45., 46., 15., 16., 31., 32., 47., 48.};
  const std::vector<int> sizes = {3, 2, 4, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 2.,  18., 34., 3.,  19., 35., 4.,  20., 36.,
      5.,  21., 37., 6.,  22., 38., 7.,  23., 39., 8.,  24., 40.,
      9.,  25., 41., 10., 26., 42., 11., 27., 43., 12., 28., 44.,
      13., 29., 45., 14., 30., 46., 15., 31., 47., 16., 32., 48.};
  const std::vector<int> sizes = {3, 2, 4, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  17., 19., 21., 23., 33., 35., 37., 39.,
      2.,  4.,  6.,  8.,  18., 20., 22., 24., 34., 36., 38., 40.,
      9.,  11., 13., 15., 25., 27., 29., 31., 41., 43., 45., 47.,
      10., 12., 14., 16., 26., 28., 30., 32., 42., 44., 46., 48.};
  const std::vector<int> sizes = {3, 2, 4, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 3.,  19., 35., 5.,  21., 37., 7.,  23., 39.,
      2.,  18., 34., 4.,  20., 36., 6.,  22., 38., 8.,  24., 40.,
      9.,  25., 41., 11., 27., 43., 13., 29., 45., 15., 31., 47.,
      10., 26., 42., 12., 28., 44., 14., 30., 46., 16., 32., 48.};
  const std::vector<int> sizes = {3, 2, 4, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 2., 9.,  10., 17., 18., 25., 26., 33., 34., 41., 42.,
      3., 4., 11., 12., 19., 20., 27., 28., 35., 36., 43., 44.,
      5., 6., 13., 14., 21., 22., 29., 30., 37., 38., 45., 46.,
      7., 8., 15., 16., 23., 24., 31., 32., 39., 40., 47., 48.};
  const std::vector<int> sizes = {3, 2, 4, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 9.,  2., 10., 17., 25., 18., 26., 33., 41., 34., 42.,
      3., 11., 4., 12., 19., 27., 20., 28., 35., 43., 36., 44.,
      5., 13., 6., 14., 21., 29., 22., 30., 37., 45., 38., 46.,
      7., 15., 8., 16., 23., 31., 24., 32., 39., 47., 40., 48.};
  const std::vector<int> sizes = {3, 2, 4, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 2., 17., 18., 33., 34., 9.,  10., 25., 26., 41., 42.,
      3., 4., 19., 20., 35., 36., 11., 12., 27., 28., 43., 44.,
      5., 6., 21., 22., 37., 38., 13., 14., 29., 30., 45., 46.,
      7., 8., 23., 24., 39., 40., 15., 16., 31., 32., 47., 48.};
  const std::vector<int> sizes = {3, 2, 4, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 17., 33., 2., 18., 34., 9.,  25., 41., 10., 26., 42.,
      3., 19., 35., 4., 20., 36., 11., 27., 43., 12., 28., 44.,
      5., 21., 37., 6., 22., 38., 13., 29., 45., 14., 30., 46.,
      7., 23., 39., 8., 24., 40., 15., 31., 47., 16., 32., 48.};
  const std::vector<int> sizes = {3, 2, 4, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 9.,  17., 25., 33., 41., 2., 10., 18., 26., 34., 42.,
      3., 11., 19., 27., 35., 43., 4., 12., 20., 28., 36., 44.,
      5., 13., 21., 29., 37., 45., 6., 14., 22., 30., 38., 46.,
      7., 15., 23., 31., 39., 47., 8., 16., 24., 32., 40., 48.};
  const std::vector<int> sizes = {3, 2, 4, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 17., 33., 9.,  25., 41., 2., 18., 34., 10., 26., 42.,
      3., 19., 35., 11., 27., 43., 4., 20., 36., 12., 28., 44.,
      5., 21., 37., 13., 29., 45., 6., 22., 38., 14., 30., 46.,
      7., 23., 39., 15., 31., 47., 8., 24., 40., 16., 32., 48.};
  const std::vector<int> sizes = {3, 2, 4, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23.,
      25., 27., 29., 31., 33., 35., 37., 39., 41., 43., 45., 47.,
      2.,  4.,  6.,  8.,  10., 12., 14., 16., 18., 20., 22., 24.,
      26., 28., 30., 32., 34., 36., 38., 40., 42., 44., 46., 48.};
  const std::vector<int> sizes = {3, 2, 4, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  3.,  11., 5.,  13., 7.,  15., 17., 25., 19., 27.,
      21., 29., 23., 31., 33., 41., 35., 43., 37., 45., 39., 47.,
      2.,  10., 4.,  12., 6.,  14., 8.,  16., 18., 26., 20., 28.,
      22., 30., 24., 32., 34., 42., 36., 44., 38., 46., 40., 48.};
  const std::vector<int> sizes = {3, 2, 4, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  17., 19., 21., 23., 33., 35., 37., 39.,
      9.,  11., 13., 15., 25., 27., 29., 31., 41., 43., 45., 47.,
      2.,  4.,  6.,  8.,  18., 20., 22., 24., 34., 36., 38., 40.,
      10., 12., 14., 16., 26., 28., 30., 32., 42., 44., 46., 48.};
  const std::vector<int> sizes = {3, 2, 4, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 3.,  19., 35., 5.,  21., 37., 7.,  23., 39.,
      9.,  25., 41., 11., 27., 43., 13., 29., 45., 15., 31., 47.,
      2.,  18., 34., 4.,  20., 36., 6.,  22., 38., 8.,  24., 40.,
      10., 26., 42., 12., 28., 44., 14., 30., 46., 16., 32., 48.};
  const std::vector<int> sizes = {3, 2, 4, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 9.,  17., 25., 33., 41., 3., 11., 19., 27., 35., 43.,
      5., 13., 21., 29., 37., 45., 7., 15., 23., 31., 39., 47.,
      2., 10., 18., 26., 34., 42., 4., 12., 20., 28., 36., 44.,
      6., 14., 22., 30., 38., 46., 8., 16., 24., 32., 40., 48.};
  const std::vector<int> sizes = {3, 2, 4, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 17., 33., 9.,  25., 41., 3., 19., 35., 11., 27., 43.,
      5., 21., 37., 13., 29., 45., 7., 23., 39., 15., 31., 47.,
      2., 18., 34., 10., 26., 42., 4., 20., 36., 12., 28., 44.,
      6., 22., 38., 14., 30., 46., 8., 24., 40., 16., 32., 48.};
  const std::vector<int> sizes = {3, 2, 4, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14., 15.,
      16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 30.,
      31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42., 43., 44., 45.,
      46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56., 57., 58., 59., 60.,
      61., 62., 63., 64., 65., 66., 67., 68., 69., 70., 71., 72.};
  const std::vector<int> sizes = {3, 2, 4, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 2.,  5.,  8.,  11., 3.,  6.,  9.,  12., 13., 16., 19.,
      22., 14., 17., 20., 23., 15., 18., 21., 24., 25., 28., 31., 34., 26., 29.,
      32., 35., 27., 30., 33., 36., 37., 40., 43., 46., 38., 41., 44., 47., 39.,
      42., 45., 48., 49., 52., 55., 58., 50., 53., 56., 59., 51., 54., 57., 60.,
      61., 64., 67., 70., 62., 65., 68., 71., 63., 66., 69., 72.};
  const std::vector<int> sizes = {3, 2, 4, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  13., 14., 15., 4.,  5.,  6.,  16., 17., 18., 7.,  8.,  9.,
      19., 20., 21., 10., 11., 12., 22., 23., 24., 25., 26., 27., 37., 38., 39.,
      28., 29., 30., 40., 41., 42., 31., 32., 33., 43., 44., 45., 34., 35., 36.,
      46., 47., 48., 49., 50., 51., 61., 62., 63., 52., 53., 54., 64., 65., 66.,
      55., 56., 57., 67., 68., 69., 58., 59., 60., 70., 71., 72.};
  const std::vector<int> sizes = {3, 2, 4, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 2.,  14., 3.,  15., 4.,  16., 5.,  17., 6.,  18., 7.,  19., 8.,
      20., 9.,  21., 10., 22., 11., 23., 12., 24., 25., 37., 26., 38., 27., 39.,
      28., 40., 29., 41., 30., 42., 31., 43., 32., 44., 33., 45., 34., 46., 35.,
      47., 36., 48., 49., 61., 50., 62., 51., 63., 52., 64., 53., 65., 54., 66.,
      55., 67., 56., 68., 57., 69., 58., 70., 59., 71., 60., 72.};
  const std::vector<int> sizes = {3, 2, 4, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 2.,  5.,  8.,  11., 14., 17., 20.,
      23., 3.,  6.,  9.,  12., 15., 18., 21., 24., 25., 28., 31., 34., 37., 40.,
      43., 46., 26., 29., 32., 35., 38., 41., 44., 47., 27., 30., 33., 36., 39.,
      42., 45., 48., 49., 52., 55., 58., 61., 64., 67., 70., 50., 53., 56., 59.,
      62., 65., 68., 71., 51., 54., 57., 60., 63., 66., 69., 72.};
  const std::vector<int> sizes = {3, 2, 4, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 4.,  16., 7.,  19., 10., 22., 2.,  14., 5.,  17., 8.,  20., 11.,
      23., 3.,  15., 6.,  18., 9.,  21., 12., 24., 25., 37., 28., 40., 31., 43.,
      34., 46., 26., 38., 29., 41., 32., 44., 35., 47., 27., 39., 30., 42., 33.,
      45., 36., 48., 49., 61., 52., 64., 55., 67., 58., 70., 50., 62., 53., 65.,
      56., 68., 59., 71., 51., 63., 54., 66., 57., 69., 60., 72.};
  const std::vector<int> sizes = {3, 2, 4, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 25., 26., 27.,
      28., 29., 30., 31., 32., 33., 34., 35., 36., 49., 50., 51., 52., 53., 54.,
      55., 56., 57., 58., 59., 60., 13., 14., 15., 16., 17., 18., 19., 20., 21.,
      22., 23., 24., 37., 38., 39., 40., 41., 42., 43., 44., 45., 46., 47., 48.,
      61., 62., 63., 64., 65., 66., 67., 68., 69., 70., 71., 72.};
  const std::vector<int> sizes = {3, 2, 4, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 2.,  5.,  8.,  11., 3.,  6.,  9.,  12., 25., 28., 31.,
      34., 26., 29., 32., 35., 27., 30., 33., 36., 49., 52., 55., 58., 50., 53.,
      56., 59., 51., 54., 57., 60., 13., 16., 19., 22., 14., 17., 20., 23., 15.,
      18., 21., 24., 37., 40., 43., 46., 38., 41., 44., 47., 39., 42., 45., 48.,
      61., 64., 67., 70., 62., 65., 68., 71., 63., 66., 69., 72.};
  const std::vector<int> sizes = {3, 2, 4, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  25., 26., 27., 49., 50., 51., 4.,  5.,  6.,  28., 29., 30.,
      52., 53., 54., 7.,  8.,  9.,  31., 32., 33., 55., 56., 57., 10., 11., 12.,
      34., 35., 36., 58., 59., 60., 13., 14., 15., 37., 38., 39., 61., 62., 63.,
      16., 17., 18., 40., 41., 42., 64., 65., 66., 19., 20., 21., 43., 44., 45.,
      67., 68., 69., 22., 23., 24., 46., 47., 48., 70., 71., 72.};
  const std::vector<int> sizes = {3, 2, 4, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 2.,  26., 50., 3.,  27., 51., 4.,  28., 52., 5.,  29., 53.,
      6.,  30., 54., 7.,  31., 55., 8.,  32., 56., 9.,  33., 57., 10., 34., 58.,
      11., 35., 59., 12., 36., 60., 13., 37., 61., 14., 38., 62., 15., 39., 63.,
      16., 40., 64., 17., 41., 65., 18., 42., 66., 19., 43., 67., 20., 44., 68.,
      21., 45., 69., 22., 46., 70., 23., 47., 71., 24., 48., 72.};
  const std::vector<int> sizes = {3, 2, 4, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 25., 28., 31., 34., 49., 52., 55., 58., 2.,  5.,  8.,
      11., 26., 29., 32., 35., 50., 53., 56., 59., 3.,  6.,  9.,  12., 27., 30.,
      33., 36., 51., 54., 57., 60., 13., 16., 19., 22., 37., 40., 43., 46., 61.,
      64., 67., 70., 14., 17., 20., 23., 38., 41., 44., 47., 62., 65., 68., 71.,
      15., 18., 21., 24., 39., 42., 45., 48., 63., 66., 69., 72.};
  const std::vector<int> sizes = {3, 2, 4, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 4.,  28., 52., 7.,  31., 55., 10., 34., 58., 2.,  26., 50.,
      5.,  29., 53., 8.,  32., 56., 11., 35., 59., 3.,  27., 51., 6.,  30., 54.,
      9.,  33., 57., 12., 36., 60., 13., 37., 61., 16., 40., 64., 19., 43., 67.,
      22., 46., 70., 14., 38., 62., 17., 41., 65., 20., 44., 68., 23., 47., 71.,
      15., 39., 63., 18., 42., 66., 21., 45., 69., 24., 48., 72.};
  const std::vector<int> sizes = {3, 2, 4, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  13., 14., 15., 25., 26., 27., 37., 38., 39., 49., 50., 51.,
      61., 62., 63., 4.,  5.,  6.,  16., 17., 18., 28., 29., 30., 40., 41., 42.,
      52., 53., 54., 64., 65., 66., 7.,  8.,  9.,  19., 20., 21., 31., 32., 33.,
      43., 44., 45., 55., 56., 57., 67., 68., 69., 10., 11., 12., 22., 23., 24.,
      34., 35., 36., 46., 47., 48., 58., 59., 60., 70., 71., 72.};
  const std::vector<int> sizes = {3, 2, 4, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 2.,  14., 3.,  15., 25., 37., 26., 38., 27., 39., 49., 61., 50.,
      62., 51., 63., 4.,  16., 5.,  17., 6.,  18., 28., 40., 29., 41., 30., 42.,
      52., 64., 53., 65., 54., 66., 7.,  19., 8.,  20., 9.,  21., 31., 43., 32.,
      44., 33., 45., 55., 67., 56., 68., 57., 69., 10., 22., 11., 23., 12., 24.,
      34., 46., 35., 47., 36., 48., 58., 70., 59., 71., 60., 72.};
  const std::vector<int> sizes = {3, 2, 4, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  25., 26., 27., 49., 50., 51., 13., 14., 15., 37., 38., 39.,
      61., 62., 63., 4.,  5.,  6.,  28., 29., 30., 52., 53., 54., 16., 17., 18.,
      40., 41., 42., 64., 65., 66., 7.,  8.,  9.,  31., 32., 33., 55., 56., 57.,
      19., 20., 21., 43., 44., 45., 67., 68., 69., 10., 11., 12., 34., 35., 36.,
      58., 59., 60., 22., 23., 24., 46., 47., 48., 70., 71., 72.};
  const std::vector<int> sizes = {3, 2, 4, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 2.,  26., 50., 3.,  27., 51., 13., 37., 61., 14., 38., 62.,
      15., 39., 63., 4.,  28., 52., 5.,  29., 53., 6.,  30., 54., 16., 40., 64.,
      17., 41., 65., 18., 42., 66., 7.,  31., 55., 8.,  32., 56., 9.,  33., 57.,
      19., 43., 67., 20., 44., 68., 21., 45., 69., 10., 34., 58., 11., 35., 59.,
      12., 36., 60., 22., 46., 70., 23., 47., 71., 24., 48., 72.};
  const std::vector<int> sizes = {3, 2, 4, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 49., 61., 2.,  14., 26., 38., 50., 62., 3.,  15., 27.,
      39., 51., 63., 4.,  16., 28., 40., 52., 64., 5.,  17., 29., 41., 53., 65.,
      6.,  18., 30., 42., 54., 66., 7.,  19., 31., 43., 55., 67., 8.,  20., 32.,
      44., 56., 68., 9.,  21., 33., 45., 57., 69., 10., 22., 34., 46., 58., 70.,
      11., 23., 35., 47., 59., 71., 12., 24., 36., 48., 60., 72.};
  const std::vector<int> sizes = {3, 2, 4, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 13., 37., 61., 2.,  26., 50., 14., 38., 62., 3.,  27., 51.,
      15., 39., 63., 4.,  28., 52., 16., 40., 64., 5.,  29., 53., 17., 41., 65.,
      6.,  30., 54., 18., 42., 66., 7.,  31., 55., 19., 43., 67., 8.,  32., 56.,
      20., 44., 68., 9.,  33., 57., 21., 45., 69., 10., 34., 58., 22., 46., 70.,
      11., 35., 59., 23., 47., 71., 12., 36., 60., 24., 48., 72.};
  const std::vector<int> sizes = {3, 2, 4, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 28., 31., 34., 37., 40., 43.,
      46., 49., 52., 55., 58., 61., 64., 67., 70., 2.,  5.,  8.,  11., 14., 17.,
      20., 23., 26., 29., 32., 35., 38., 41., 44., 47., 50., 53., 56., 59., 62.,
      65., 68., 71., 3.,  6.,  9.,  12., 15., 18., 21., 24., 27., 30., 33., 36.,
      39., 42., 45., 48., 51., 54., 57., 60., 63., 66., 69., 72.};
  const std::vector<int> sizes = {3, 2, 4, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 4.,  16., 7.,  19., 10., 22., 25., 37., 28., 40., 31., 43., 34.,
      46., 49., 61., 52., 64., 55., 67., 58., 70., 2.,  14., 5.,  17., 8.,  20.,
      11., 23., 26., 38., 29., 41., 32., 44., 35., 47., 50., 62., 53., 65., 56.,
      68., 59., 71., 3.,  15., 6.,  18., 9.,  21., 12., 24., 27., 39., 30., 42.,
      33., 45., 36., 48., 51., 63., 54., 66., 57., 69., 60., 72.};
  const std::vector<int> sizes = {3, 2, 4, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 25., 28., 31., 34., 49., 52., 55., 58., 13., 16., 19.,
      22., 37., 40., 43., 46., 61., 64., 67., 70., 2.,  5.,  8.,  11., 26., 29.,
      32., 35., 50., 53., 56., 59., 14., 17., 20., 23., 38., 41., 44., 47., 62.,
      65., 68., 71., 3.,  6.,  9.,  12., 27., 30., 33., 36., 51., 54., 57., 60.,
      15., 18., 21., 24., 39., 42., 45., 48., 63., 66., 69., 72.};
  const std::vector<int> sizes = {3, 2, 4, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 4.,  28., 52., 7.,  31., 55., 10., 34., 58., 13., 37., 61.,
      16., 40., 64., 19., 43., 67., 22., 46., 70., 2.,  26., 50., 5.,  29., 53.,
      8.,  32., 56., 11., 35., 59., 14., 38., 62., 17., 41., 65., 20., 44., 68.,
      23., 47., 71., 3.,  27., 51., 6.,  30., 54., 9.,  33., 57., 12., 36., 60.,
      15., 39., 63., 18., 42., 66., 21., 45., 69., 24., 48., 72.};
  const std::vector<int> sizes = {3, 2, 4, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 49., 61., 4.,  16., 28., 40., 52., 64., 7.,  19., 31.,
      43., 55., 67., 10., 22., 34., 46., 58., 70., 2.,  14., 26., 38., 50., 62.,
      5.,  17., 29., 41., 53., 65., 8.,  20., 32., 44., 56., 68., 11., 23., 35.,
      47., 59., 71., 3.,  15., 27., 39., 51., 63., 6.,  18., 30., 42., 54., 66.,
      9.,  21., 33., 45., 57., 69., 12., 24., 36., 48., 60., 72.};
  const std::vector<int> sizes = {3, 2, 4, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 13., 37., 61., 4.,  28., 52., 16., 40., 64., 7.,  31., 55.,
      19., 43., 67., 10., 34., 58., 22., 46., 70., 2.,  26., 50., 14., 38., 62.,
      5.,  29., 53., 17., 41., 65., 8.,  32., 56., 20., 44., 68., 11., 35., 59.,
      23., 47., 71., 3.,  27., 51., 15., 39., 63., 6.,  30., 54., 18., 42., 66.,
      9.,  33., 57., 21., 45., 69., 12., 36., 60., 24., 48., 72.};
  const std::vector<int> sizes = {3, 2, 4, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14.,
      15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28.,
      29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42.,
      43., 44., 45., 46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56.,
      57., 58., 59., 60., 61., 62., 63., 64., 65., 66., 67., 68., 69., 70.,
      71., 72., 73., 74., 75., 76., 77., 78., 79., 80., 81., 82., 83., 84.,
      85., 86., 87., 88., 89., 90., 91., 92., 93., 94., 95., 96.};
  const std::vector<int> sizes = {3, 2, 4, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 2.,  6.,  10., 14., 3.,  7.,  11., 15., 4.,  8.,
      12., 16., 17., 21., 25., 29., 18., 22., 26., 30., 19., 23., 27., 31.,
      20., 24., 28., 32., 33., 37., 41., 45., 34., 38., 42., 46., 35., 39.,
      43., 47., 36., 40., 44., 48., 49., 53., 57., 61., 50., 54., 58., 62.,
      51., 55., 59., 63., 52., 56., 60., 64., 65., 69., 73., 77., 66., 70.,
      74., 78., 67., 71., 75., 79., 68., 72., 76., 80., 81., 85., 89., 93.,
      82., 86., 90., 94., 83., 87., 91., 95., 84., 88., 92., 96.};
  const std::vector<int> sizes = {3, 2, 4, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  17., 18., 19., 20., 5.,  6.,  7.,  8.,  21., 22.,
      23., 24., 9.,  10., 11., 12., 25., 26., 27., 28., 13., 14., 15., 16.,
      29., 30., 31., 32., 33., 34., 35., 36., 49., 50., 51., 52., 37., 38.,
      39., 40., 53., 54., 55., 56., 41., 42., 43., 44., 57., 58., 59., 60.,
      45., 46., 47., 48., 61., 62., 63., 64., 65., 66., 67., 68., 81., 82.,
      83., 84., 69., 70., 71., 72., 85., 86., 87., 88., 73., 74., 75., 76.,
      89., 90., 91., 92., 77., 78., 79., 80., 93., 94., 95., 96.};
  const std::vector<int> sizes = {3, 2, 4, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 2.,  18., 3.,  19., 4.,  20., 5.,  21., 6.,  22., 7.,  23.,
      8.,  24., 9.,  25., 10., 26., 11., 27., 12., 28., 13., 29., 14., 30.,
      15., 31., 16., 32., 33., 49., 34., 50., 35., 51., 36., 52., 37., 53.,
      38., 54., 39., 55., 40., 56., 41., 57., 42., 58., 43., 59., 44., 60.,
      45., 61., 46., 62., 47., 63., 48., 64., 65., 81., 66., 82., 67., 83.,
      68., 84., 69., 85., 70., 86., 71., 87., 72., 88., 73., 89., 74., 90.,
      75., 91., 76., 92., 77., 93., 78., 94., 79., 95., 80., 96.};
  const std::vector<int> sizes = {3, 2, 4, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 25., 29., 2.,  6.,  10., 14., 18., 22.,
      26., 30., 3.,  7.,  11., 15., 19., 23., 27., 31., 4.,  8.,  12., 16.,
      20., 24., 28., 32., 33., 37., 41., 45., 49., 53., 57., 61., 34., 38.,
      42., 46., 50., 54., 58., 62., 35., 39., 43., 47., 51., 55., 59., 63.,
      36., 40., 44., 48., 52., 56., 60., 64., 65., 69., 73., 77., 81., 85.,
      89., 93., 66., 70., 74., 78., 82., 86., 90., 94., 67., 71., 75., 79.,
      83., 87., 91., 95., 68., 72., 76., 80., 84., 88., 92., 96.};
  const std::vector<int> sizes = {3, 2, 4, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 5.,  21., 9.,  25., 13., 29., 2.,  18., 6.,  22., 10., 26.,
      14., 30., 3.,  19., 7.,  23., 11., 27., 15., 31., 4.,  20., 8.,  24.,
      12., 28., 16., 32., 33., 49., 37., 53., 41., 57., 45., 61., 34., 50.,
      38., 54., 42., 58., 46., 62., 35., 51., 39., 55., 43., 59., 47., 63.,
      36., 52., 40., 56., 44., 60., 48., 64., 65., 81., 69., 85., 73., 89.,
      77., 93., 66., 82., 70., 86., 74., 90., 78., 94., 67., 83., 71., 87.,
      75., 91., 79., 95., 68., 84., 72., 88., 76., 92., 80., 96.};
  const std::vector<int> sizes = {3, 2, 4, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14.,
      15., 16., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42., 43., 44.,
      45., 46., 47., 48., 65., 66., 67., 68., 69., 70., 71., 72., 73., 74.,
      75., 76., 77., 78., 79., 80., 17., 18., 19., 20., 21., 22., 23., 24.,
      25., 26., 27., 28., 29., 30., 31., 32., 49., 50., 51., 52., 53., 54.,
      55., 56., 57., 58., 59., 60., 61., 62., 63., 64., 81., 82., 83., 84.,
      85., 86., 87., 88., 89., 90., 91., 92., 93., 94., 95., 96.};
  const std::vector<int> sizes = {3, 2, 4, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 2.,  6.,  10., 14., 3.,  7.,  11., 15., 4.,  8.,
      12., 16., 33., 37., 41., 45., 34., 38., 42., 46., 35., 39., 43., 47.,
      36., 40., 44., 48., 65., 69., 73., 77., 66., 70., 74., 78., 67., 71.,
      75., 79., 68., 72., 76., 80., 17., 21., 25., 29., 18., 22., 26., 30.,
      19., 23., 27., 31., 20., 24., 28., 32., 49., 53., 57., 61., 50., 54.,
      58., 62., 51., 55., 59., 63., 52., 56., 60., 64., 81., 85., 89., 93.,
      82., 86., 90., 94., 83., 87., 91., 95., 84., 88., 92., 96.};
  const std::vector<int> sizes = {3, 2, 4, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  33., 34., 35., 36., 65., 66., 67., 68., 5.,  6.,
      7.,  8.,  37., 38., 39., 40., 69., 70., 71., 72., 9.,  10., 11., 12.,
      41., 42., 43., 44., 73., 74., 75., 76., 13., 14., 15., 16., 45., 46.,
      47., 48., 77., 78., 79., 80., 17., 18., 19., 20., 49., 50., 51., 52.,
      81., 82., 83., 84., 21., 22., 23., 24., 53., 54., 55., 56., 85., 86.,
      87., 88., 25., 26., 27., 28., 57., 58., 59., 60., 89., 90., 91., 92.,
      29., 30., 31., 32., 61., 62., 63., 64., 93., 94., 95., 96.};
  const std::vector<int> sizes = {3, 2, 4, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 2.,  34., 66., 3.,  35., 67., 4.,  36., 68., 5.,  37.,
      69., 6.,  38., 70., 7.,  39., 71., 8.,  40., 72., 9.,  41., 73., 10.,
      42., 74., 11., 43., 75., 12., 44., 76., 13., 45., 77., 14., 46., 78.,
      15., 47., 79., 16., 48., 80., 17., 49., 81., 18., 50., 82., 19., 51.,
      83., 20., 52., 84., 21., 53., 85., 22., 54., 86., 23., 55., 87., 24.,
      56., 88., 25., 57., 89., 26., 58., 90., 27., 59., 91., 28., 60., 92.,
      29., 61., 93., 30., 62., 94., 31., 63., 95., 32., 64., 96.};
  const std::vector<int> sizes = {3, 2, 4, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 33., 37., 41., 45., 65., 69., 73., 77., 2.,  6.,
      10., 14., 34., 38., 42., 46., 66., 70., 74., 78., 3.,  7.,  11., 15.,
      35., 39., 43., 47., 67., 71., 75., 79., 4.,  8.,  12., 16., 36., 40.,
      44., 48., 68., 72., 76., 80., 17., 21., 25., 29., 49., 53., 57., 61.,
      81., 85., 89., 93., 18., 22., 26., 30., 50., 54., 58., 62., 82., 86.,
      90., 94., 19., 23., 27., 31., 51., 55., 59., 63., 83., 87., 91., 95.,
      20., 24., 28., 32., 52., 56., 60., 64., 84., 88., 92., 96.};
  const std::vector<int> sizes = {3, 2, 4, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 5.,  37., 69., 9.,  41., 73., 13., 45., 77., 2.,  34.,
      66., 6.,  38., 70., 10., 42., 74., 14., 46., 78., 3.,  35., 67., 7.,
      39., 71., 11., 43., 75., 15., 47., 79., 4.,  36., 68., 8.,  40., 72.,
      12., 44., 76., 16., 48., 80., 17., 49., 81., 21., 53., 85., 25., 57.,
      89., 29., 61., 93., 18., 50., 82., 22., 54., 86., 26., 58., 90., 30.,
      62., 94., 19., 51., 83., 23., 55., 87., 27., 59., 91., 31., 63., 95.,
      20., 52., 84., 24., 56., 88., 28., 60., 92., 32., 64., 96.};
  const std::vector<int> sizes = {3, 2, 4, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  17., 18., 19., 20., 33., 34., 35., 36., 49., 50.,
      51., 52., 65., 66., 67., 68., 81., 82., 83., 84., 5.,  6.,  7.,  8.,
      21., 22., 23., 24., 37., 38., 39., 40., 53., 54., 55., 56., 69., 70.,
      71., 72., 85., 86., 87., 88., 9.,  10., 11., 12., 25., 26., 27., 28.,
      41., 42., 43., 44., 57., 58., 59., 60., 73., 74., 75., 76., 89., 90.,
      91., 92., 13., 14., 15., 16., 29., 30., 31., 32., 45., 46., 47., 48.,
      61., 62., 63., 64., 77., 78., 79., 80., 93., 94., 95., 96.};
  const std::vector<int> sizes = {3, 2, 4, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 2.,  18., 3.,  19., 4.,  20., 33., 49., 34., 50., 35., 51.,
      36., 52., 65., 81., 66., 82., 67., 83., 68., 84., 5.,  21., 6.,  22.,
      7.,  23., 8.,  24., 37., 53., 38., 54., 39., 55., 40., 56., 69., 85.,
      70., 86., 71., 87., 72., 88., 9.,  25., 10., 26., 11., 27., 12., 28.,
      41., 57., 42., 58., 43., 59., 44., 60., 73., 89., 74., 90., 75., 91.,
      76., 92., 13., 29., 14., 30., 15., 31., 16., 32., 45., 61., 46., 62.,
      47., 63., 48., 64., 77., 93., 78., 94., 79., 95., 80., 96.};
  const std::vector<int> sizes = {3, 2, 4, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  33., 34., 35., 36., 65., 66., 67., 68., 17., 18.,
      19., 20., 49., 50., 51., 52., 81., 82., 83., 84., 5.,  6.,  7.,  8.,
      37., 38., 39., 40., 69., 70., 71., 72., 21., 22., 23., 24., 53., 54.,
      55., 56., 85., 86., 87., 88., 9.,  10., 11., 12., 41., 42., 43., 44.,
      73., 74., 75., 76., 25., 26., 27., 28., 57., 58., 59., 60., 89., 90.,
      91., 92., 13., 14., 15., 16., 45., 46., 47., 48., 77., 78., 79., 80.,
      29., 30., 31., 32., 61., 62., 63., 64., 93., 94., 95., 96.};
  const std::vector<int> sizes = {3, 2, 4, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 2.,  34., 66., 3.,  35., 67., 4.,  36., 68., 17., 49.,
      81., 18., 50., 82., 19., 51., 83., 20., 52., 84., 5.,  37., 69., 6.,
      38., 70., 7.,  39., 71., 8.,  40., 72., 21., 53., 85., 22., 54., 86.,
      23., 55., 87., 24., 56., 88., 9.,  41., 73., 10., 42., 74., 11., 43.,
      75., 12., 44., 76., 25., 57., 89., 26., 58., 90., 27., 59., 91., 28.,
      60., 92., 13., 45., 77., 14., 46., 78., 15., 47., 79., 16., 48., 80.,
      29., 61., 93., 30., 62., 94., 31., 63., 95., 32., 64., 96.};
  const std::vector<int> sizes = {3, 2, 4, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 65., 81., 2.,  18., 34., 50., 66., 82., 3.,  19.,
      35., 51., 67., 83., 4.,  20., 36., 52., 68., 84., 5.,  21., 37., 53.,
      69., 85., 6.,  22., 38., 54., 70., 86., 7.,  23., 39., 55., 71., 87.,
      8.,  24., 40., 56., 72., 88., 9.,  25., 41., 57., 73., 89., 10., 26.,
      42., 58., 74., 90., 11., 27., 43., 59., 75., 91., 12., 28., 44., 60.,
      76., 92., 13., 29., 45., 61., 77., 93., 14., 30., 46., 62., 78., 94.,
      15., 31., 47., 63., 79., 95., 16., 32., 48., 64., 80., 96.};
  const std::vector<int> sizes = {3, 2, 4, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 17., 49., 81., 2.,  34., 66., 18., 50., 82., 3.,  35.,
      67., 19., 51., 83., 4.,  36., 68., 20., 52., 84., 5.,  37., 69., 21.,
      53., 85., 6.,  38., 70., 22., 54., 86., 7.,  39., 71., 23., 55., 87.,
      8.,  40., 72., 24., 56., 88., 9.,  41., 73., 25., 57., 89., 10., 42.,
      74., 26., 58., 90., 11., 43., 75., 27., 59., 91., 12., 44., 76., 28.,
      60., 92., 13., 45., 77., 29., 61., 93., 14., 46., 78., 30., 62., 94.,
      15., 47., 79., 31., 63., 95., 16., 48., 80., 32., 64., 96.};
  const std::vector<int> sizes = {3, 2, 4, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 25., 29., 33., 37., 41., 45., 49., 53.,
      57., 61., 65., 69., 73., 77., 81., 85., 89., 93., 2.,  6.,  10., 14.,
      18., 22., 26., 30., 34., 38., 42., 46., 50., 54., 58., 62., 66., 70.,
      74., 78., 82., 86., 90., 94., 3.,  7.,  11., 15., 19., 23., 27., 31.,
      35., 39., 43., 47., 51., 55., 59., 63., 67., 71., 75., 79., 83., 87.,
      91., 95., 4.,  8.,  12., 16., 20., 24., 28., 32., 36., 40., 44., 48.,
      52., 56., 60., 64., 68., 72., 76., 80., 84., 88., 92., 96.};
  const std::vector<int> sizes = {3, 2, 4, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 5.,  21., 9.,  25., 13., 29., 33., 49., 37., 53., 41., 57.,
      45., 61., 65., 81., 69., 85., 73., 89., 77., 93., 2.,  18., 6.,  22.,
      10., 26., 14., 30., 34., 50., 38., 54., 42., 58., 46., 62., 66., 82.,
      70., 86., 74., 90., 78., 94., 3.,  19., 7.,  23., 11., 27., 15., 31.,
      35., 51., 39., 55., 43., 59., 47., 63., 67., 83., 71., 87., 75., 91.,
      79., 95., 4.,  20., 8.,  24., 12., 28., 16., 32., 36., 52., 40., 56.,
      44., 60., 48., 64., 68., 84., 72., 88., 76., 92., 80., 96.};
  const std::vector<int> sizes = {3, 2, 4, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 33., 37., 41., 45., 65., 69., 73., 77., 17., 21.,
      25., 29., 49., 53., 57., 61., 81., 85., 89., 93., 2.,  6.,  10., 14.,
      34., 38., 42., 46., 66., 70., 74., 78., 18., 22., 26., 30., 50., 54.,
      58., 62., 82., 86., 90., 94., 3.,  7.,  11., 15., 35., 39., 43., 47.,
      67., 71., 75., 79., 19., 23., 27., 31., 51., 55., 59., 63., 83., 87.,
      91., 95., 4.,  8.,  12., 16., 36., 40., 44., 48., 68., 72., 76., 80.,
      20., 24., 28., 32., 52., 56., 60., 64., 84., 88., 92., 96.};
  const std::vector<int> sizes = {3, 2, 4, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 5.,  37., 69., 9.,  41., 73., 13., 45., 77., 17., 49.,
      81., 21., 53., 85., 25., 57., 89., 29., 61., 93., 2.,  34., 66., 6.,
      38., 70., 10., 42., 74., 14., 46., 78., 18., 50., 82., 22., 54., 86.,
      26., 58., 90., 30., 62., 94., 3.,  35., 67., 7.,  39., 71., 11., 43.,
      75., 15., 47., 79., 19., 51., 83., 23., 55., 87., 27., 59., 91., 31.,
      63., 95., 4.,  36., 68., 8.,  40., 72., 12., 44., 76., 16., 48., 80.,
      20., 52., 84., 24., 56., 88., 28., 60., 92., 32., 64., 96.};
  const std::vector<int> sizes = {3, 2, 4, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 65., 81., 5.,  21., 37., 53., 69., 85., 9.,  25.,
      41., 57., 73., 89., 13., 29., 45., 61., 77., 93., 2.,  18., 34., 50.,
      66., 82., 6.,  22., 38., 54., 70., 86., 10., 26., 42., 58., 74., 90.,
      14., 30., 46., 62., 78., 94., 3.,  19., 35., 51., 67., 83., 7.,  23.,
      39., 55., 71., 87., 11., 27., 43., 59., 75., 91., 15., 31., 47., 63.,
      79., 95., 4.,  20., 36., 52., 68., 84., 8.,  24., 40., 56., 72., 88.,
      12., 28., 44., 60., 76., 92., 16., 32., 48., 64., 80., 96.};
  const std::vector<int> sizes = {3, 2, 4, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x2x4x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 17., 49., 81., 5.,  37., 69., 21., 53., 85., 9.,  41.,
      73., 25., 57., 89., 13., 45., 77., 29., 61., 93., 2.,  34., 66., 18.,
      50., 82., 6.,  38., 70., 22., 54., 86., 10., 42., 74., 26., 58., 90.,
      14., 46., 78., 30., 62., 94., 3.,  35., 67., 19., 51., 83., 7.,  39.,
      71., 23., 55., 87., 11., 43., 75., 27., 59., 91., 15., 47., 79., 31.,
      63., 95., 4.,  36., 68., 20., 52., 84., 8.,  40., 72., 24., 56., 88.,
      12., 44., 76., 28., 60., 92., 16., 48., 80., 32., 64., 96.};
  const std::vector<int> sizes = {3, 2, 4, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.,
      25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.};
  const std::vector<int> sizes = {3, 3, 2, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  2.,  4.,  5.,  7.,  6.,  8.,  9.,  11., 10., 12.,
      13., 15., 14., 16., 17., 19., 18., 20., 21., 23., 22., 24.,
      25., 27., 26., 28., 29., 31., 30., 32., 33., 35., 34., 36.};
  const std::vector<int> sizes = {3, 3, 2, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  5.,  6.,  9.,  10., 3.,  4.,  7.,  8.,  11., 12.,
      13., 14., 17., 18., 21., 22., 15., 16., 19., 20., 23., 24.,
      25., 26., 29., 30., 33., 34., 27., 28., 31., 32., 35., 36.};
  const std::vector<int> sizes = {3, 3, 2, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  2.,  6.,  10., 3.,  7.,  11., 4.,  8.,  12.,
      13., 17., 21., 14., 18., 22., 15., 19., 23., 16., 20., 24.,
      25., 29., 33., 26., 30., 34., 27., 31., 35., 28., 32., 36.};
  const std::vector<int> sizes = {3, 3, 2, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 2.,  4.,  6.,  8.,  10., 12.,
      13., 15., 17., 19., 21., 23., 14., 16., 18., 20., 22., 24.,
      25., 27., 29., 31., 33., 35., 26., 28., 30., 32., 34., 36.};
  const std::vector<int> sizes = {3, 3, 2, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  3.,  7.,  11., 2.,  6.,  10., 4.,  8.,  12.,
      13., 17., 21., 15., 19., 23., 14., 18., 22., 16., 20., 24.,
      25., 29., 33., 27., 31., 35., 26., 30., 34., 28., 32., 36.};
  const std::vector<int> sizes = {3, 3, 2, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 2.,  3.,  4.,  13., 14., 15., 16., 25., 26., 27., 28.,
      5., 6.,  7.,  8.,  17., 18., 19., 20., 29., 30., 31., 32.,
      9., 10., 11., 12., 21., 22., 23., 24., 33., 34., 35., 36.};
  const std::vector<int> sizes = {3, 3, 2, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 3.,  2.,  4.,  13., 15., 14., 16., 25., 27., 26., 28.,
      5., 7.,  6.,  8.,  17., 19., 18., 20., 29., 31., 30., 32.,
      9., 11., 10., 12., 21., 23., 22., 24., 33., 35., 34., 36.};
  const std::vector<int> sizes = {3, 3, 2, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 2.,  13., 14., 25., 26., 3.,  4.,  15., 16., 27., 28.,
      5., 6.,  17., 18., 29., 30., 7.,  8.,  19., 20., 31., 32.,
      9., 10., 21., 22., 33., 34., 11., 12., 23., 24., 35., 36.};
  const std::vector<int> sizes = {3, 3, 2, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 13., 25., 2.,  14., 26., 3.,  15., 27., 4.,  16., 28.,
      5., 17., 29., 6.,  18., 30., 7.,  19., 31., 8.,  20., 32.,
      9., 21., 33., 10., 22., 34., 11., 23., 35., 12., 24., 36.};
  const std::vector<int> sizes = {3, 3, 2, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 3.,  13., 15., 25., 27., 2.,  4.,  14., 16., 26., 28.,
      5., 7.,  17., 19., 29., 31., 6.,  8.,  18., 20., 30., 32.,
      9., 11., 21., 23., 33., 35., 10., 12., 22., 24., 34., 36.};
  const std::vector<int> sizes = {3, 3, 2, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 13., 25., 3.,  15., 27., 2.,  14., 26., 4.,  16., 28.,
      5., 17., 29., 7.,  19., 31., 6.,  18., 30., 8.,  20., 32.,
      9., 21., 33., 11., 23., 35., 10., 22., 34., 12., 24., 36.};
  const std::vector<int> sizes = {3, 3, 2, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  5.,  6.,  9.,  10., 13., 14., 17., 18., 21., 22.,
      25., 26., 29., 30., 33., 34., 3.,  4.,  7.,  8.,  11., 12.,
      15., 16., 19., 20., 23., 24., 27., 28., 31., 32., 35., 36.};
  const std::vector<int> sizes = {3, 3, 2, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  2.,  6.,  10., 13., 17., 21., 14., 18., 22.,
      25., 29., 33., 26., 30., 34., 3.,  7.,  11., 4.,  8.,  12.,
      15., 19., 23., 16., 20., 24., 27., 31., 35., 28., 32., 36.};
  const std::vector<int> sizes = {3, 3, 2, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 2.,  13., 14., 25., 26., 5.,  6.,  17., 18., 29., 30.,
      9., 10., 21., 22., 33., 34., 3.,  4.,  15., 16., 27., 28.,
      7., 8.,  19., 20., 31., 32., 11., 12., 23., 24., 35., 36.};
  const std::vector<int> sizes = {3, 3, 2, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 13., 25., 2.,  14., 26., 5.,  17., 29., 6.,  18., 30.,
      9., 21., 33., 10., 22., 34., 3.,  15., 27., 4.,  16., 28.,
      7., 19., 31., 8.,  20., 32., 11., 23., 35., 12., 24., 36.};
  const std::vector<int> sizes = {3, 3, 2, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 25., 29., 33., 2.,  6.,  10.,
      14., 18., 22., 26., 30., 34., 3.,  7.,  11., 15., 19., 23.,
      27., 31., 35., 4.,  8.,  12., 16., 20., 24., 28., 32., 36.};
  const std::vector<int> sizes = {3, 3, 2, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 5.,  17., 29., 9., 21., 33., 2.,  14., 26.,
      6.,  18., 30., 10., 22., 34., 3., 15., 27., 7.,  19., 31.,
      11., 23., 35., 4.,  16., 28., 8., 20., 32., 12., 24., 36.};
  const std::vector<int> sizes = {3, 3, 2, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23.,
      25., 27., 29., 31., 33., 35., 2.,  4.,  6.,  8.,  10., 12.,
      14., 16., 18., 20., 22., 24., 26., 28., 30., 32., 34., 36.};
  const std::vector<int> sizes = {3, 3, 2, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  3.,  7.,  11., 13., 17., 21., 15., 19., 23.,
      25., 29., 33., 27., 31., 35., 2.,  6.,  10., 4.,  8.,  12.,
      14., 18., 22., 16., 20., 24., 26., 30., 34., 28., 32., 36.};
  const std::vector<int> sizes = {3, 3, 2, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 3.,  13., 15., 25., 27., 5.,  7.,  17., 19., 29., 31.,
      9., 11., 21., 23., 33., 35., 2.,  4.,  14., 16., 26., 28.,
      6., 8.,  18., 20., 30., 32., 10., 12., 22., 24., 34., 36.};
  const std::vector<int> sizes = {3, 3, 2, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 13., 25., 3.,  15., 27., 5.,  17., 29., 7.,  19., 31.,
      9., 21., 33., 11., 23., 35., 2.,  14., 26., 4.,  16., 28.,
      6., 18., 30., 8.,  20., 32., 10., 22., 34., 12., 24., 36.};
  const std::vector<int> sizes = {3, 3, 2, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 25., 29., 33., 3.,  7.,  11.,
      15., 19., 23., 27., 31., 35., 2.,  6.,  10., 14., 18., 22.,
      26., 30., 34., 4.,  8.,  12., 16., 20., 24., 28., 32., 36.};
  const std::vector<int> sizes = {3, 3, 2, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 5.,  17., 29., 9., 21., 33., 3.,  15., 27.,
      7.,  19., 31., 11., 23., 35., 2., 14., 26., 6.,  18., 30.,
      10., 22., 34., 4.,  16., 28., 8., 20., 32., 12., 24., 36.};
  const std::vector<int> sizes = {3, 3, 2, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14.,
      15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28.,
      29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42.,
      43., 44., 45., 46., 47., 48., 49., 50., 51., 52., 53., 54.};
  const std::vector<int> sizes = {3, 3, 2, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  2.,  5.,  3.,  6.,  7.,  10., 8.,  11., 9.,  12., 13., 16.,
      14., 17., 15., 18., 19., 22., 20., 23., 21., 24., 25., 28., 26., 29.,
      27., 30., 31., 34., 32., 35., 33., 36., 37., 40., 38., 41., 39., 42.,
      43., 46., 44., 47., 45., 48., 49., 52., 50., 53., 51., 54.};
  const std::vector<int> sizes = {3, 3, 2, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  7.,  8.,  9.,  13., 14., 15., 4.,  5.,  6.,  10., 11.,
      12., 16., 17., 18., 19., 20., 21., 25., 26., 27., 31., 32., 33., 22.,
      23., 24., 28., 29., 30., 34., 35., 36., 37., 38., 39., 43., 44., 45.,
      49., 50., 51., 40., 41., 42., 46., 47., 48., 52., 53., 54.};
  const std::vector<int> sizes = {3, 3, 2, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 2.,  8.,  14., 3.,  9.,  15., 4.,  10., 16., 5.,  11.,
      17., 6.,  12., 18., 19., 25., 31., 20., 26., 32., 21., 27., 33., 22.,
      28., 34., 23., 29., 35., 24., 30., 36., 37., 43., 49., 38., 44., 50.,
      39., 45., 51., 40., 46., 52., 41., 47., 53., 42., 48., 54.};
  const std::vector<int> sizes = {3, 3, 2, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 2.,  5.,  8.,  11., 14., 17., 3.,  6.,
      9.,  12., 15., 18., 19., 22., 25., 28., 31., 34., 20., 23., 26., 29.,
      32., 35., 21., 24., 27., 30., 33., 36., 37., 40., 43., 46., 49., 52.,
      38., 41., 44., 47., 50., 53., 39., 42., 45., 48., 51., 54.};
  const std::vector<int> sizes = {3, 3, 2, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 4.,  10., 16., 2.,  8.,  14., 5.,  11., 17., 3.,  9.,
      15., 6.,  12., 18., 19., 25., 31., 22., 28., 34., 20., 26., 32., 23.,
      29., 35., 21., 27., 33., 24., 30., 36., 37., 43., 49., 40., 46., 52.,
      38., 44., 50., 41., 47., 53., 39., 45., 51., 42., 48., 54.};
  const std::vector<int> sizes = {3, 3, 2, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  19., 20., 21., 22., 23., 24., 37., 38.,
      39., 40., 41., 42., 7.,  8.,  9.,  10., 11., 12., 25., 26., 27., 28.,
      29., 30., 43., 44., 45., 46., 47., 48., 13., 14., 15., 16., 17., 18.,
      31., 32., 33., 34., 35., 36., 49., 50., 51., 52., 53., 54.};
  const std::vector<int> sizes = {3, 3, 2, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  2.,  5.,  3.,  6.,  19., 22., 20., 23., 21., 24., 37., 40.,
      38., 41., 39., 42., 7.,  10., 8.,  11., 9.,  12., 25., 28., 26., 29.,
      27., 30., 43., 46., 44., 47., 45., 48., 13., 16., 14., 17., 15., 18.,
      31., 34., 32., 35., 33., 36., 49., 52., 50., 53., 51., 54.};
  const std::vector<int> sizes = {3, 3, 2, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  19., 20., 21., 37., 38., 39., 4.,  5.,  6.,  22., 23.,
      24., 40., 41., 42., 7.,  8.,  9.,  25., 26., 27., 43., 44., 45., 10.,
      11., 12., 28., 29., 30., 46., 47., 48., 13., 14., 15., 31., 32., 33.,
      49., 50., 51., 16., 17., 18., 34., 35., 36., 52., 53., 54.};
  const std::vector<int> sizes = {3, 3, 2, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 2.,  20., 38., 3.,  21., 39., 4.,  22., 40., 5.,  23.,
      41., 6.,  24., 42., 7.,  25., 43., 8.,  26., 44., 9.,  27., 45., 10.,
      28., 46., 11., 29., 47., 12., 30., 48., 13., 31., 49., 14., 32., 50.,
      15., 33., 51., 16., 34., 52., 17., 35., 53., 18., 36., 54.};
  const std::vector<int> sizes = {3, 3, 2, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  19., 22., 37., 40., 2.,  5.,  20., 23., 38., 41., 3.,  6.,
      21., 24., 39., 42., 7.,  10., 25., 28., 43., 46., 8.,  11., 26., 29.,
      44., 47., 9.,  12., 27., 30., 45., 48., 13., 16., 31., 34., 49., 52.,
      14., 17., 32., 35., 50., 53., 15., 18., 33., 36., 51., 54.};
  const std::vector<int> sizes = {3, 3, 2, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 4.,  22., 40., 2.,  20., 38., 5.,  23., 41., 3.,  21.,
      39., 6.,  24., 42., 7.,  25., 43., 10., 28., 46., 8.,  26., 44., 11.,
      29., 47., 9.,  27., 45., 12., 30., 48., 13., 31., 49., 16., 34., 52.,
      14., 32., 50., 17., 35., 53., 15., 33., 51., 18., 36., 54.};
  const std::vector<int> sizes = {3, 3, 2, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  7.,  8.,  9.,  13., 14., 15., 19., 20., 21., 25., 26.,
      27., 31., 32., 33., 37., 38., 39., 43., 44., 45., 49., 50., 51., 4.,
      5.,  6.,  10., 11., 12., 16., 17., 18., 22., 23., 24., 28., 29., 30.,
      34., 35., 36., 40., 41., 42., 46., 47., 48., 52., 53., 54.};
  const std::vector<int> sizes = {3, 3, 2, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 2.,  8.,  14., 3.,  9.,  15., 19., 25., 31., 20., 26.,
      32., 21., 27., 33., 37., 43., 49., 38., 44., 50., 39., 45., 51., 4.,
      10., 16., 5.,  11., 17., 6.,  12., 18., 22., 28., 34., 23., 29., 35.,
      24., 30., 36., 40., 46., 52., 41., 47., 53., 42., 48., 54.};
  const std::vector<int> sizes = {3, 3, 2, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  19., 20., 21., 37., 38., 39., 7.,  8.,  9.,  25., 26.,
      27., 43., 44., 45., 13., 14., 15., 31., 32., 33., 49., 50., 51., 4.,
      5.,  6.,  22., 23., 24., 40., 41., 42., 10., 11., 12., 28., 29., 30.,
      46., 47., 48., 16., 17., 18., 34., 35., 36., 52., 53., 54.};
  const std::vector<int> sizes = {3, 3, 2, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 2.,  20., 38., 3.,  21., 39., 7.,  25., 43., 8.,  26.,
      44., 9.,  27., 45., 13., 31., 49., 14., 32., 50., 15., 33., 51., 4.,
      22., 40., 5.,  23., 41., 6.,  24., 42., 10., 28., 46., 11., 29., 47.,
      12., 30., 48., 16., 34., 52., 17., 35., 53., 18., 36., 54.};
  const std::vector<int> sizes = {3, 3, 2, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 25., 31., 37., 43., 49., 2.,  8.,  14., 20., 26.,
      32., 38., 44., 50., 3.,  9.,  15., 21., 27., 33., 39., 45., 51., 4.,
      10., 16., 22., 28., 34., 40., 46., 52., 5.,  11., 17., 23., 29., 35.,
      41., 47., 53., 6.,  12., 18., 24., 30., 36., 42., 48., 54.};
  const std::vector<int> sizes = {3, 3, 2, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 7.,  25., 43., 13., 31., 49., 2.,  20., 38., 8.,  26.,
      44., 14., 32., 50., 3.,  21., 39., 9.,  27., 45., 15., 33., 51., 4.,
      22., 40., 10., 28., 46., 16., 34., 52., 5.,  23., 41., 11., 29., 47.,
      17., 35., 53., 6.,  24., 42., 12., 30., 48., 18., 36., 54.};
  const std::vector<int> sizes = {3, 3, 2, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 28., 31., 34., 37., 40.,
      43., 46., 49., 52., 2.,  5.,  8.,  11., 14., 17., 20., 23., 26., 29.,
      32., 35., 38., 41., 44., 47., 50., 53., 3.,  6.,  9.,  12., 15., 18.,
      21., 24., 27., 30., 33., 36., 39., 42., 45., 48., 51., 54.};
  const std::vector<int> sizes = {3, 3, 2, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 4.,  10., 16., 19., 25., 31., 22., 28., 34., 37., 43.,
      49., 40., 46., 52., 2.,  8.,  14., 5.,  11., 17., 20., 26., 32., 23.,
      29., 35., 38., 44., 50., 41., 47., 53., 3.,  9.,  15., 6.,  12., 18.,
      21., 27., 33., 24., 30., 36., 39., 45., 51., 42., 48., 54.};
  const std::vector<int> sizes = {3, 3, 2, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  19., 22., 37., 40., 7.,  10., 25., 28., 43., 46., 13., 16.,
      31., 34., 49., 52., 2.,  5.,  20., 23., 38., 41., 8.,  11., 26., 29.,
      44., 47., 14., 17., 32., 35., 50., 53., 3.,  6.,  21., 24., 39., 42.,
      9.,  12., 27., 30., 45., 48., 15., 18., 33., 36., 51., 54.};
  const std::vector<int> sizes = {3, 3, 2, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 4.,  22., 40., 7.,  25., 43., 10., 28., 46., 13., 31.,
      49., 16., 34., 52., 2.,  20., 38., 5.,  23., 41., 8.,  26., 44., 11.,
      29., 47., 14., 32., 50., 17., 35., 53., 3.,  21., 39., 6.,  24., 42.,
      9.,  27., 45., 12., 30., 48., 15., 33., 51., 18., 36., 54.};
  const std::vector<int> sizes = {3, 3, 2, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 25., 31., 37., 43., 49., 4.,  10., 16., 22., 28.,
      34., 40., 46., 52., 2.,  8.,  14., 20., 26., 32., 38., 44., 50., 5.,
      11., 17., 23., 29., 35., 41., 47., 53., 3.,  9.,  15., 21., 27., 33.,
      39., 45., 51., 6.,  12., 18., 24., 30., 36., 42., 48., 54.};
  const std::vector<int> sizes = {3, 3, 2, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 7.,  25., 43., 13., 31., 49., 4.,  22., 40., 10., 28.,
      46., 16., 34., 52., 2.,  20., 38., 8.,  26., 44., 14., 32., 50., 5.,
      23., 41., 11., 29., 47., 17., 35., 53., 3.,  21., 39., 9.,  27., 45.,
      15., 33., 51., 6.,  24., 42., 12., 30., 48., 18., 36., 54.};
  const std::vector<int> sizes = {3, 3, 2, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14., 15.,
      16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 30.,
      31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42., 43., 44., 45.,
      46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56., 57., 58., 59., 60.,
      61., 62., 63., 64., 65., 66., 67., 68., 69., 70., 71., 72.};
  const std::vector<int> sizes = {3, 3, 2, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  2.,  6.,  3.,  7.,  4.,  8.,  9.,  13., 10., 14., 11., 15., 12.,
      16., 17., 21., 18., 22., 19., 23., 20., 24., 25., 29., 26., 30., 27., 31.,
      28., 32., 33., 37., 34., 38., 35., 39., 36., 40., 41., 45., 42., 46., 43.,
      47., 44., 48., 49., 53., 50., 54., 51., 55., 52., 56., 57., 61., 58., 62.,
      59., 63., 60., 64., 65., 69., 66., 70., 67., 71., 68., 72.};
  const std::vector<int> sizes = {3, 3, 2, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  9.,  10., 11., 12., 17., 18., 19., 20., 5.,  6.,  7.,
      8.,  13., 14., 15., 16., 21., 22., 23., 24., 25., 26., 27., 28., 33., 34.,
      35., 36., 41., 42., 43., 44., 29., 30., 31., 32., 37., 38., 39., 40., 45.,
      46., 47., 48., 49., 50., 51., 52., 57., 58., 59., 60., 65., 66., 67., 68.,
      53., 54., 55., 56., 61., 62., 63., 64., 69., 70., 71., 72.};
  const std::vector<int> sizes = {3, 3, 2, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 2.,  10., 18., 3.,  11., 19., 4.,  12., 20., 5.,  13., 21.,
      6.,  14., 22., 7.,  15., 23., 8.,  16., 24., 25., 33., 41., 26., 34., 42.,
      27., 35., 43., 28., 36., 44., 29., 37., 45., 30., 38., 46., 31., 39., 47.,
      32., 40., 48., 49., 57., 65., 50., 58., 66., 51., 59., 67., 52., 60., 68.,
      53., 61., 69., 54., 62., 70., 55., 63., 71., 56., 64., 72.};
  const std::vector<int> sizes = {3, 3, 2, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 2.,  6.,  10., 14., 18., 22., 3.,  7.,  11.,
      15., 19., 23., 4.,  8.,  12., 16., 20., 24., 25., 29., 33., 37., 41., 45.,
      26., 30., 34., 38., 42., 46., 27., 31., 35., 39., 43., 47., 28., 32., 36.,
      40., 44., 48., 49., 53., 57., 61., 65., 69., 50., 54., 58., 62., 66., 70.,
      51., 55., 59., 63., 67., 71., 52., 56., 60., 64., 68., 72.};
  const std::vector<int> sizes = {3, 3, 2, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 5.,  13., 21., 2.,  10., 18., 6.,  14., 22., 3.,  11., 19.,
      7.,  15., 23., 4.,  12., 20., 8.,  16., 24., 25., 33., 41., 29., 37., 45.,
      26., 34., 42., 30., 38., 46., 27., 35., 43., 31., 39., 47., 28., 36., 44.,
      32., 40., 48., 49., 57., 65., 53., 61., 69., 50., 58., 66., 54., 62., 70.,
      51., 59., 67., 55., 63., 71., 52., 60., 68., 56., 64., 72.};
  const std::vector<int> sizes = {3, 3, 2, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  25., 26., 27., 28., 29., 30., 31.,
      32., 49., 50., 51., 52., 53., 54., 55., 56., 9.,  10., 11., 12., 13., 14.,
      15., 16., 33., 34., 35., 36., 37., 38., 39., 40., 57., 58., 59., 60., 61.,
      62., 63., 64., 17., 18., 19., 20., 21., 22., 23., 24., 41., 42., 43., 44.,
      45., 46., 47., 48., 65., 66., 67., 68., 69., 70., 71., 72.};
  const std::vector<int> sizes = {3, 3, 2, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  2.,  6.,  3.,  7.,  4.,  8.,  25., 29., 26., 30., 27., 31., 28.,
      32., 49., 53., 50., 54., 51., 55., 52., 56., 9.,  13., 10., 14., 11., 15.,
      12., 16., 33., 37., 34., 38., 35., 39., 36., 40., 57., 61., 58., 62., 59.,
      63., 60., 64., 17., 21., 18., 22., 19., 23., 20., 24., 41., 45., 42., 46.,
      43., 47., 44., 48., 65., 69., 66., 70., 67., 71., 68., 72.};
  const std::vector<int> sizes = {3, 3, 2, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  25., 26., 27., 28., 49., 50., 51., 52., 5.,  6.,  7.,
      8.,  29., 30., 31., 32., 53., 54., 55., 56., 9.,  10., 11., 12., 33., 34.,
      35., 36., 57., 58., 59., 60., 13., 14., 15., 16., 37., 38., 39., 40., 61.,
      62., 63., 64., 17., 18., 19., 20., 41., 42., 43., 44., 65., 66., 67., 68.,
      21., 22., 23., 24., 45., 46., 47., 48., 69., 70., 71., 72.};
  const std::vector<int> sizes = {3, 3, 2, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 2.,  26., 50., 3.,  27., 51., 4.,  28., 52., 5.,  29., 53.,
      6.,  30., 54., 7.,  31., 55., 8.,  32., 56., 9.,  33., 57., 10., 34., 58.,
      11., 35., 59., 12., 36., 60., 13., 37., 61., 14., 38., 62., 15., 39., 63.,
      16., 40., 64., 17., 41., 65., 18., 42., 66., 19., 43., 67., 20., 44., 68.,
      21., 45., 69., 22., 46., 70., 23., 47., 71., 24., 48., 72.};
  const std::vector<int> sizes = {3, 3, 2, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  25., 29., 49., 53., 2.,  6.,  26., 30., 50., 54., 3.,  7.,  27.,
      31., 51., 55., 4.,  8.,  28., 32., 52., 56., 9.,  13., 33., 37., 57., 61.,
      10., 14., 34., 38., 58., 62., 11., 15., 35., 39., 59., 63., 12., 16., 36.,
      40., 60., 64., 17., 21., 41., 45., 65., 69., 18., 22., 42., 46., 66., 70.,
      19., 23., 43., 47., 67., 71., 20., 24., 44., 48., 68., 72.};
  const std::vector<int> sizes = {3, 3, 2, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 5.,  29., 53., 2.,  26., 50., 6.,  30., 54., 3.,  27., 51.,
      7.,  31., 55., 4.,  28., 52., 8.,  32., 56., 9.,  33., 57., 13., 37., 61.,
      10., 34., 58., 14., 38., 62., 11., 35., 59., 15., 39., 63., 12., 36., 60.,
      16., 40., 64., 17., 41., 65., 21., 45., 69., 18., 42., 66., 22., 46., 70.,
      19., 43., 67., 23., 47., 71., 20., 44., 68., 24., 48., 72.};
  const std::vector<int> sizes = {3, 3, 2, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  9.,  10., 11., 12., 17., 18., 19., 20., 25., 26., 27.,
      28., 33., 34., 35., 36., 41., 42., 43., 44., 49., 50., 51., 52., 57., 58.,
      59., 60., 65., 66., 67., 68., 5.,  6.,  7.,  8.,  13., 14., 15., 16., 21.,
      22., 23., 24., 29., 30., 31., 32., 37., 38., 39., 40., 45., 46., 47., 48.,
      53., 54., 55., 56., 61., 62., 63., 64., 69., 70., 71., 72.};
  const std::vector<int> sizes = {3, 3, 2, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 2.,  10., 18., 3.,  11., 19., 4.,  12., 20., 25., 33., 41.,
      26., 34., 42., 27., 35., 43., 28., 36., 44., 49., 57., 65., 50., 58., 66.,
      51., 59., 67., 52., 60., 68., 5.,  13., 21., 6.,  14., 22., 7.,  15., 23.,
      8.,  16., 24., 29., 37., 45., 30., 38., 46., 31., 39., 47., 32., 40., 48.,
      53., 61., 69., 54., 62., 70., 55., 63., 71., 56., 64., 72.};
  const std::vector<int> sizes = {3, 3, 2, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  25., 26., 27., 28., 49., 50., 51., 52., 9.,  10., 11.,
      12., 33., 34., 35., 36., 57., 58., 59., 60., 17., 18., 19., 20., 41., 42.,
      43., 44., 65., 66., 67., 68., 5.,  6.,  7.,  8.,  29., 30., 31., 32., 53.,
      54., 55., 56., 13., 14., 15., 16., 37., 38., 39., 40., 61., 62., 63., 64.,
      21., 22., 23., 24., 45., 46., 47., 48., 69., 70., 71., 72.};
  const std::vector<int> sizes = {3, 3, 2, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 2.,  26., 50., 3.,  27., 51., 4.,  28., 52., 9.,  33., 57.,
      10., 34., 58., 11., 35., 59., 12., 36., 60., 17., 41., 65., 18., 42., 66.,
      19., 43., 67., 20., 44., 68., 5.,  29., 53., 6.,  30., 54., 7.,  31., 55.,
      8.,  32., 56., 13., 37., 61., 14., 38., 62., 15., 39., 63., 16., 40., 64.,
      21., 45., 69., 22., 46., 70., 23., 47., 71., 24., 48., 72.};
  const std::vector<int> sizes = {3, 3, 2, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 33., 41., 49., 57., 65., 2.,  10., 18., 26., 34., 42.,
      50., 58., 66., 3.,  11., 19., 27., 35., 43., 51., 59., 67., 4.,  12., 20.,
      28., 36., 44., 52., 60., 68., 5.,  13., 21., 29., 37., 45., 53., 61., 69.,
      6.,  14., 22., 30., 38., 46., 54., 62., 70., 7.,  15., 23., 31., 39., 47.,
      55., 63., 71., 8.,  16., 24., 32., 40., 48., 56., 64., 72.};
  const std::vector<int> sizes = {3, 3, 2, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 9.,  33., 57., 17., 41., 65., 2.,  26., 50., 10., 34., 58.,
      18., 42., 66., 3.,  27., 51., 11., 35., 59., 19., 43., 67., 4.,  28., 52.,
      12., 36., 60., 20., 44., 68., 5.,  29., 53., 13., 37., 61., 21., 45., 69.,
      6.,  30., 54., 14., 38., 62., 22., 46., 70., 7.,  31., 55., 15., 39., 63.,
      23., 47., 71., 8.,  32., 56., 16., 40., 64., 24., 48., 72.};
  const std::vector<int> sizes = {3, 3, 2, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 25., 29., 33., 37., 41., 45., 49., 53., 57.,
      61., 65., 69., 2.,  6.,  10., 14., 18., 22., 26., 30., 34., 38., 42., 46.,
      50., 54., 58., 62., 66., 70., 3.,  7.,  11., 15., 19., 23., 27., 31., 35.,
      39., 43., 47., 51., 55., 59., 63., 67., 71., 4.,  8.,  12., 16., 20., 24.,
      28., 32., 36., 40., 44., 48., 52., 56., 60., 64., 68., 72.};
  const std::vector<int> sizes = {3, 3, 2, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 5.,  13., 21., 25., 33., 41., 29., 37., 45., 49., 57., 65.,
      53., 61., 69., 2.,  10., 18., 6.,  14., 22., 26., 34., 42., 30., 38., 46.,
      50., 58., 66., 54., 62., 70., 3.,  11., 19., 7.,  15., 23., 27., 35., 43.,
      31., 39., 47., 51., 59., 67., 55., 63., 71., 4.,  12., 20., 8.,  16., 24.,
      28., 36., 44., 32., 40., 48., 52., 60., 68., 56., 64., 72.};
  const std::vector<int> sizes = {3, 3, 2, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  25., 29., 49., 53., 9.,  13., 33., 37., 57., 61., 17., 21., 41.,
      45., 65., 69., 2.,  6.,  26., 30., 50., 54., 10., 14., 34., 38., 58., 62.,
      18., 22., 42., 46., 66., 70., 3.,  7.,  27., 31., 51., 55., 11., 15., 35.,
      39., 59., 63., 19., 23., 43., 47., 67., 71., 4.,  8.,  28., 32., 52., 56.,
      12., 16., 36., 40., 60., 64., 20., 24., 44., 48., 68., 72.};
  const std::vector<int> sizes = {3, 3, 2, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 5.,  29., 53., 9.,  33., 57., 13., 37., 61., 17., 41., 65.,
      21., 45., 69., 2.,  26., 50., 6.,  30., 54., 10., 34., 58., 14., 38., 62.,
      18., 42., 66., 22., 46., 70., 3.,  27., 51., 7.,  31., 55., 11., 35., 59.,
      15., 39., 63., 19., 43., 67., 23., 47., 71., 4.,  28., 52., 8.,  32., 56.,
      12., 36., 60., 16., 40., 64., 20., 44., 68., 24., 48., 72.};
  const std::vector<int> sizes = {3, 3, 2, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 33., 41., 49., 57., 65., 5.,  13., 21., 29., 37., 45.,
      53., 61., 69., 2.,  10., 18., 26., 34., 42., 50., 58., 66., 6.,  14., 22.,
      30., 38., 46., 54., 62., 70., 3.,  11., 19., 27., 35., 43., 51., 59., 67.,
      7.,  15., 23., 31., 39., 47., 55., 63., 71., 4.,  12., 20., 28., 36., 44.,
      52., 60., 68., 8.,  16., 24., 32., 40., 48., 56., 64., 72.};
  const std::vector<int> sizes = {3, 3, 2, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x2x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 9.,  33., 57., 17., 41., 65., 5.,  29., 53., 13., 37., 61.,
      21., 45., 69., 2.,  26., 50., 10., 34., 58., 18., 42., 66., 6.,  30., 54.,
      14., 38., 62., 22., 46., 70., 3.,  27., 51., 11., 35., 59., 19., 43., 67.,
      7.,  31., 55., 15., 39., 63., 23., 47., 71., 4.,  28., 52., 12., 36., 60.,
      20., 44., 68., 8.,  32., 56., 16., 40., 64., 24., 48., 72.};
  const std::vector<int> sizes = {3, 3, 2, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14.,
      15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28.,
      29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42.,
      43., 44., 45., 46., 47., 48., 49., 50., 51., 52., 53., 54.};
  const std::vector<int> sizes = {3, 3, 3, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  2.,  4.,  6.,  7.,  9.,  11., 8.,  10., 12., 13., 15.,
      17., 14., 16., 18., 19., 21., 23., 20., 22., 24., 25., 27., 29., 26.,
      28., 30., 31., 33., 35., 32., 34., 36., 37., 39., 41., 38., 40., 42.,
      43., 45., 47., 44., 46., 48., 49., 51., 53., 50., 52., 54.};
  const std::vector<int> sizes = {3, 3, 3, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  7.,  8.,  13., 14., 3.,  4.,  9.,  10., 15., 16., 5.,  6.,
      11., 12., 17., 18., 19., 20., 25., 26., 31., 32., 21., 22., 27., 28.,
      33., 34., 23., 24., 29., 30., 35., 36., 37., 38., 43., 44., 49., 50.,
      39., 40., 45., 46., 51., 52., 41., 42., 47., 48., 53., 54.};
  const std::vector<int> sizes = {3, 3, 3, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 2.,  8.,  14., 3.,  9.,  15., 4.,  10., 16., 5.,  11.,
      17., 6.,  12., 18., 19., 25., 31., 20., 26., 32., 21., 27., 33., 22.,
      28., 34., 23., 29., 35., 24., 30., 36., 37., 43., 49., 38., 44., 50.,
      39., 45., 51., 40., 46., 52., 41., 47., 53., 42., 48., 54.};
  const std::vector<int> sizes = {3, 3, 3, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 2.,  4.,  6.,  8.,  10.,
      12., 14., 16., 18., 19., 21., 23., 25., 27., 29., 31., 33., 35., 20.,
      22., 24., 26., 28., 30., 32., 34., 36., 37., 39., 41., 43., 45., 47.,
      49., 51., 53., 38., 40., 42., 44., 46., 48., 50., 52., 54.};
  const std::vector<int> sizes = {3, 3, 3, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 3.,  9.,  15., 5.,  11., 17., 2.,  8.,  14., 4.,  10.,
      16., 6.,  12., 18., 19., 25., 31., 21., 27., 33., 23., 29., 35., 20.,
      26., 32., 22., 28., 34., 24., 30., 36., 37., 43., 49., 39., 45., 51.,
      41., 47., 53., 38., 44., 50., 40., 46., 52., 42., 48., 54.};
  const std::vector<int> sizes = {3, 3, 3, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  19., 20., 21., 22., 23., 24., 37., 38.,
      39., 40., 41., 42., 7.,  8.,  9.,  10., 11., 12., 25., 26., 27., 28.,
      29., 30., 43., 44., 45., 46., 47., 48., 13., 14., 15., 16., 17., 18.,
      31., 32., 33., 34., 35., 36., 49., 50., 51., 52., 53., 54.};
  const std::vector<int> sizes = {3, 3, 3, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  2.,  4.,  6.,  19., 21., 23., 20., 22., 24., 37., 39.,
      41., 38., 40., 42., 7.,  9.,  11., 8.,  10., 12., 25., 27., 29., 26.,
      28., 30., 43., 45., 47., 44., 46., 48., 13., 15., 17., 14., 16., 18.,
      31., 33., 35., 32., 34., 36., 49., 51., 53., 50., 52., 54.};
  const std::vector<int> sizes = {3, 3, 3, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  19., 20., 37., 38., 3.,  4.,  21., 22., 39., 40., 5.,  6.,
      23., 24., 41., 42., 7.,  8.,  25., 26., 43., 44., 9.,  10., 27., 28.,
      45., 46., 11., 12., 29., 30., 47., 48., 13., 14., 31., 32., 49., 50.,
      15., 16., 33., 34., 51., 52., 17., 18., 35., 36., 53., 54.};
  const std::vector<int> sizes = {3, 3, 3, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 2.,  20., 38., 3.,  21., 39., 4.,  22., 40., 5.,  23.,
      41., 6.,  24., 42., 7.,  25., 43., 8.,  26., 44., 9.,  27., 45., 10.,
      28., 46., 11., 29., 47., 12., 30., 48., 13., 31., 49., 14., 32., 50.,
      15., 33., 51., 16., 34., 52., 17., 35., 53., 18., 36., 54.};
  const std::vector<int> sizes = {3, 3, 3, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  19., 21., 23., 37., 39., 41., 2.,  4.,  6.,  20., 22.,
      24., 38., 40., 42., 7.,  9.,  11., 25., 27., 29., 43., 45., 47., 8.,
      10., 12., 26., 28., 30., 44., 46., 48., 13., 15., 17., 31., 33., 35.,
      49., 51., 53., 14., 16., 18., 32., 34., 36., 50., 52., 54.};
  const std::vector<int> sizes = {3, 3, 3, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 3.,  21., 39., 5.,  23., 41., 2.,  20., 38., 4.,  22.,
      40., 6.,  24., 42., 7.,  25., 43., 9.,  27., 45., 11., 29., 47., 8.,
      26., 44., 10., 28., 46., 12., 30., 48., 13., 31., 49., 15., 33., 51.,
      17., 35., 53., 14., 32., 50., 16., 34., 52., 18., 36., 54.};
  const std::vector<int> sizes = {3, 3, 3, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  7.,  8.,  13., 14., 19., 20., 25., 26., 31., 32., 37., 38.,
      43., 44., 49., 50., 3.,  4.,  9.,  10., 15., 16., 21., 22., 27., 28.,
      33., 34., 39., 40., 45., 46., 51., 52., 5.,  6.,  11., 12., 17., 18.,
      23., 24., 29., 30., 35., 36., 41., 42., 47., 48., 53., 54.};
  const std::vector<int> sizes = {3, 3, 3, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 2.,  8.,  14., 19., 25., 31., 20., 26., 32., 37., 43.,
      49., 38., 44., 50., 3.,  9.,  15., 4.,  10., 16., 21., 27., 33., 22.,
      28., 34., 39., 45., 51., 40., 46., 52., 5.,  11., 17., 6.,  12., 18.,
      23., 29., 35., 24., 30., 36., 41., 47., 53., 42., 48., 54.};
  const std::vector<int> sizes = {3, 3, 3, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  19., 20., 37., 38., 7.,  8.,  25., 26., 43., 44., 13., 14.,
      31., 32., 49., 50., 3.,  4.,  21., 22., 39., 40., 9.,  10., 27., 28.,
      45., 46., 15., 16., 33., 34., 51., 52., 5.,  6.,  23., 24., 41., 42.,
      11., 12., 29., 30., 47., 48., 17., 18., 35., 36., 53., 54.};
  const std::vector<int> sizes = {3, 3, 3, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 2.,  20., 38., 7.,  25., 43., 8.,  26., 44., 13., 31.,
      49., 14., 32., 50., 3.,  21., 39., 4.,  22., 40., 9.,  27., 45., 10.,
      28., 46., 15., 33., 51., 16., 34., 52., 5.,  23., 41., 6.,  24., 42.,
      11., 29., 47., 12., 30., 48., 17., 35., 53., 18., 36., 54.};
  const std::vector<int> sizes = {3, 3, 3, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 25., 31., 37., 43., 49., 2.,  8.,  14., 20., 26.,
      32., 38., 44., 50., 3.,  9.,  15., 21., 27., 33., 39., 45., 51., 4.,
      10., 16., 22., 28., 34., 40., 46., 52., 5.,  11., 17., 23., 29., 35.,
      41., 47., 53., 6.,  12., 18., 24., 30., 36., 42., 48., 54.};
  const std::vector<int> sizes = {3, 3, 3, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 7.,  25., 43., 13., 31., 49., 2.,  20., 38., 8.,  26.,
      44., 14., 32., 50., 3.,  21., 39., 9.,  27., 45., 15., 33., 51., 4.,
      22., 40., 10., 28., 46., 16., 34., 52., 5.,  23., 41., 11., 29., 47.,
      17., 35., 53., 6.,  24., 42., 12., 30., 48., 18., 36., 54.};
  const std::vector<int> sizes = {3, 3, 3, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23., 25., 27.,
      29., 31., 33., 35., 37., 39., 41., 43., 45., 47., 49., 51., 53., 2.,
      4.,  6.,  8.,  10., 12., 14., 16., 18., 20., 22., 24., 26., 28., 30.,
      32., 34., 36., 38., 40., 42., 44., 46., 48., 50., 52., 54.};
  const std::vector<int> sizes = {3, 3, 3, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 3.,  9.,  15., 5.,  11., 17., 19., 25., 31., 21., 27.,
      33., 23., 29., 35., 37., 43., 49., 39., 45., 51., 41., 47., 53., 2.,
      8.,  14., 4.,  10., 16., 6.,  12., 18., 20., 26., 32., 22., 28., 34.,
      24., 30., 36., 38., 44., 50., 40., 46., 52., 42., 48., 54.};
  const std::vector<int> sizes = {3, 3, 3, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  19., 21., 23., 37., 39., 41., 7.,  9.,  11., 25., 27.,
      29., 43., 45., 47., 13., 15., 17., 31., 33., 35., 49., 51., 53., 2.,
      4.,  6.,  20., 22., 24., 38., 40., 42., 8.,  10., 12., 26., 28., 30.,
      44., 46., 48., 14., 16., 18., 32., 34., 36., 50., 52., 54.};
  const std::vector<int> sizes = {3, 3, 3, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 3.,  21., 39., 5.,  23., 41., 7.,  25., 43., 9.,  27.,
      45., 11., 29., 47., 13., 31., 49., 15., 33., 51., 17., 35., 53., 2.,
      20., 38., 4.,  22., 40., 6.,  24., 42., 8.,  26., 44., 10., 28., 46.,
      12., 30., 48., 14., 32., 50., 16., 34., 52., 18., 36., 54.};
  const std::vector<int> sizes = {3, 3, 3, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 25., 31., 37., 43., 49., 3.,  9.,  15., 21., 27.,
      33., 39., 45., 51., 5.,  11., 17., 23., 29., 35., 41., 47., 53., 2.,
      8.,  14., 20., 26., 32., 38., 44., 50., 4.,  10., 16., 22., 28., 34.,
      40., 46., 52., 6.,  12., 18., 24., 30., 36., 42., 48., 54.};
  const std::vector<int> sizes = {3, 3, 3, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 7.,  25., 43., 13., 31., 49., 3.,  21., 39., 9.,  27.,
      45., 15., 33., 51., 5.,  23., 41., 11., 29., 47., 17., 35., 53., 2.,
      20., 38., 8.,  26., 44., 14., 32., 50., 4.,  22., 40., 10., 28., 46.,
      16., 34., 52., 6.,  24., 42., 12., 30., 48., 18., 36., 54.};
  const std::vector<int> sizes = {3, 3, 3, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14.,
      15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28.,
      29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42.,
      43., 44., 45., 46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56.,
      57., 58., 59., 60., 61., 62., 63., 64., 65., 66., 67., 68., 69., 70.,
      71., 72., 73., 74., 75., 76., 77., 78., 79., 80., 81.};
  const std::vector<int> sizes = {3, 3, 3, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  2.,  5.,  8.,  3.,  6.,  9.,  10., 13., 16., 11., 14.,
      17., 12., 15., 18., 19., 22., 25., 20., 23., 26., 21., 24., 27., 28.,
      31., 34., 29., 32., 35., 30., 33., 36., 37., 40., 43., 38., 41., 44.,
      39., 42., 45., 46., 49., 52., 47., 50., 53., 48., 51., 54., 55., 58.,
      61., 56., 59., 62., 57., 60., 63., 64., 67., 70., 65., 68., 71., 66.,
      69., 72., 73., 76., 79., 74., 77., 80., 75., 78., 81.};
  const std::vector<int> sizes = {3, 3, 3, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  10., 11., 12., 19., 20., 21., 4.,  5.,  6.,  13., 14.,
      15., 22., 23., 24., 7.,  8.,  9.,  16., 17., 18., 25., 26., 27., 28.,
      29., 30., 37., 38., 39., 46., 47., 48., 31., 32., 33., 40., 41., 42.,
      49., 50., 51., 34., 35., 36., 43., 44., 45., 52., 53., 54., 55., 56.,
      57., 64., 65., 66., 73., 74., 75., 58., 59., 60., 67., 68., 69., 76.,
      77., 78., 61., 62., 63., 70., 71., 72., 79., 80., 81.};
  const std::vector<int> sizes = {3, 3, 3, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 2.,  11., 20., 3.,  12., 21., 4.,  13., 22., 5.,  14.,
      23., 6.,  15., 24., 7.,  16., 25., 8.,  17., 26., 9.,  18., 27., 28.,
      37., 46., 29., 38., 47., 30., 39., 48., 31., 40., 49., 32., 41., 50.,
      33., 42., 51., 34., 43., 52., 35., 44., 53., 36., 45., 54., 55., 64.,
      73., 56., 65., 74., 57., 66., 75., 58., 67., 76., 59., 68., 77., 60.,
      69., 78., 61., 70., 79., 62., 71., 80., 63., 72., 81.};
  const std::vector<int> sizes = {3, 3, 3, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 2.,  5.,  8.,  11., 14.,
      17., 20., 23., 26., 3.,  6.,  9.,  12., 15., 18., 21., 24., 27., 28.,
      31., 34., 37., 40., 43., 46., 49., 52., 29., 32., 35., 38., 41., 44.,
      47., 50., 53., 30., 33., 36., 39., 42., 45., 48., 51., 54., 55., 58.,
      61., 64., 67., 70., 73., 76., 79., 56., 59., 62., 65., 68., 71., 74.,
      77., 80., 57., 60., 63., 66., 69., 72., 75., 78., 81.};
  const std::vector<int> sizes = {3, 3, 3, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 4.,  13., 22., 7.,  16., 25., 2.,  11., 20., 5.,  14.,
      23., 8.,  17., 26., 3.,  12., 21., 6.,  15., 24., 9.,  18., 27., 28.,
      37., 46., 31., 40., 49., 34., 43., 52., 29., 38., 47., 32., 41., 50.,
      35., 44., 53., 30., 39., 48., 33., 42., 51., 36., 45., 54., 55., 64.,
      73., 58., 67., 76., 61., 70., 79., 56., 65., 74., 59., 68., 77., 62.,
      71., 80., 57., 66., 75., 60., 69., 78., 63., 72., 81.};
  const std::vector<int> sizes = {3, 3, 3, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  28., 29., 30., 31., 32.,
      33., 34., 35., 36., 55., 56., 57., 58., 59., 60., 61., 62., 63., 10.,
      11., 12., 13., 14., 15., 16., 17., 18., 37., 38., 39., 40., 41., 42.,
      43., 44., 45., 64., 65., 66., 67., 68., 69., 70., 71., 72., 19., 20.,
      21., 22., 23., 24., 25., 26., 27., 46., 47., 48., 49., 50., 51., 52.,
      53., 54., 73., 74., 75., 76., 77., 78., 79., 80., 81.};
  const std::vector<int> sizes = {3, 3, 3, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  2.,  5.,  8.,  3.,  6.,  9.,  28., 31., 34., 29., 32.,
      35., 30., 33., 36., 55., 58., 61., 56., 59., 62., 57., 60., 63., 10.,
      13., 16., 11., 14., 17., 12., 15., 18., 37., 40., 43., 38., 41., 44.,
      39., 42., 45., 64., 67., 70., 65., 68., 71., 66., 69., 72., 19., 22.,
      25., 20., 23., 26., 21., 24., 27., 46., 49., 52., 47., 50., 53., 48.,
      51., 54., 73., 76., 79., 74., 77., 80., 75., 78., 81.};
  const std::vector<int> sizes = {3, 3, 3, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  28., 29., 30., 55., 56., 57., 4.,  5.,  6.,  31., 32.,
      33., 58., 59., 60., 7.,  8.,  9.,  34., 35., 36., 61., 62., 63., 10.,
      11., 12., 37., 38., 39., 64., 65., 66., 13., 14., 15., 40., 41., 42.,
      67., 68., 69., 16., 17., 18., 43., 44., 45., 70., 71., 72., 19., 20.,
      21., 46., 47., 48., 73., 74., 75., 22., 23., 24., 49., 50., 51., 76.,
      77., 78., 25., 26., 27., 52., 53., 54., 79., 80., 81.};
  const std::vector<int> sizes = {3, 3, 3, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  28., 55., 2.,  29., 56., 3.,  30., 57., 4.,  31., 58., 5.,  32.,
      59., 6.,  33., 60., 7.,  34., 61., 8.,  35., 62., 9.,  36., 63., 10.,
      37., 64., 11., 38., 65., 12., 39., 66., 13., 40., 67., 14., 41., 68.,
      15., 42., 69., 16., 43., 70., 17., 44., 71., 18., 45., 72., 19., 46.,
      73., 20., 47., 74., 21., 48., 75., 22., 49., 76., 23., 50., 77., 24.,
      51., 78., 25., 52., 79., 26., 53., 80., 27., 54., 81.};
  const std::vector<int> sizes = {3, 3, 3, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  28., 31., 34., 55., 58., 61., 2.,  5.,  8.,  29., 32.,
      35., 56., 59., 62., 3.,  6.,  9.,  30., 33., 36., 57., 60., 63., 10.,
      13., 16., 37., 40., 43., 64., 67., 70., 11., 14., 17., 38., 41., 44.,
      65., 68., 71., 12., 15., 18., 39., 42., 45., 66., 69., 72., 19., 22.,
      25., 46., 49., 52., 73., 76., 79., 20., 23., 26., 47., 50., 53., 74.,
      77., 80., 21., 24., 27., 48., 51., 54., 75., 78., 81.};
  const std::vector<int> sizes = {3, 3, 3, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  28., 55., 4.,  31., 58., 7.,  34., 61., 2.,  29., 56., 5.,  32.,
      59., 8.,  35., 62., 3.,  30., 57., 6.,  33., 60., 9.,  36., 63., 10.,
      37., 64., 13., 40., 67., 16., 43., 70., 11., 38., 65., 14., 41., 68.,
      17., 44., 71., 12., 39., 66., 15., 42., 69., 18., 45., 72., 19., 46.,
      73., 22., 49., 76., 25., 52., 79., 20., 47., 74., 23., 50., 77., 26.,
      53., 80., 21., 48., 75., 24., 51., 78., 27., 54., 81.};
  const std::vector<int> sizes = {3, 3, 3, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  10., 11., 12., 19., 20., 21., 28., 29., 30., 37., 38.,
      39., 46., 47., 48., 55., 56., 57., 64., 65., 66., 73., 74., 75., 4.,
      5.,  6.,  13., 14., 15., 22., 23., 24., 31., 32., 33., 40., 41., 42.,
      49., 50., 51., 58., 59., 60., 67., 68., 69., 76., 77., 78., 7.,  8.,
      9.,  16., 17., 18., 25., 26., 27., 34., 35., 36., 43., 44., 45., 52.,
      53., 54., 61., 62., 63., 70., 71., 72., 79., 80., 81.};
  const std::vector<int> sizes = {3, 3, 3, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 2.,  11., 20., 3.,  12., 21., 28., 37., 46., 29., 38.,
      47., 30., 39., 48., 55., 64., 73., 56., 65., 74., 57., 66., 75., 4.,
      13., 22., 5.,  14., 23., 6.,  15., 24., 31., 40., 49., 32., 41., 50.,
      33., 42., 51., 58., 67., 76., 59., 68., 77., 60., 69., 78., 7.,  16.,
      25., 8.,  17., 26., 9.,  18., 27., 34., 43., 52., 35., 44., 53., 36.,
      45., 54., 61., 70., 79., 62., 71., 80., 63., 72., 81.};
  const std::vector<int> sizes = {3, 3, 3, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  28., 29., 30., 55., 56., 57., 10., 11., 12., 37., 38.,
      39., 64., 65., 66., 19., 20., 21., 46., 47., 48., 73., 74., 75., 4.,
      5.,  6.,  31., 32., 33., 58., 59., 60., 13., 14., 15., 40., 41., 42.,
      67., 68., 69., 22., 23., 24., 49., 50., 51., 76., 77., 78., 7.,  8.,
      9.,  34., 35., 36., 61., 62., 63., 16., 17., 18., 43., 44., 45., 70.,
      71., 72., 25., 26., 27., 52., 53., 54., 79., 80., 81.};
  const std::vector<int> sizes = {3, 3, 3, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  28., 55., 2.,  29., 56., 3.,  30., 57., 10., 37., 64., 11., 38.,
      65., 12., 39., 66., 19., 46., 73., 20., 47., 74., 21., 48., 75., 4.,
      31., 58., 5.,  32., 59., 6.,  33., 60., 13., 40., 67., 14., 41., 68.,
      15., 42., 69., 22., 49., 76., 23., 50., 77., 24., 51., 78., 7.,  34.,
      61., 8.,  35., 62., 9.,  36., 63., 16., 43., 70., 17., 44., 71., 18.,
      45., 72., 25., 52., 79., 26., 53., 80., 27., 54., 81.};
  const std::vector<int> sizes = {3, 3, 3, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 28., 37., 46., 55., 64., 73., 2.,  11., 20., 29., 38.,
      47., 56., 65., 74., 3.,  12., 21., 30., 39., 48., 57., 66., 75., 4.,
      13., 22., 31., 40., 49., 58., 67., 76., 5.,  14., 23., 32., 41., 50.,
      59., 68., 77., 6.,  15., 24., 33., 42., 51., 60., 69., 78., 7.,  16.,
      25., 34., 43., 52., 61., 70., 79., 8.,  17., 26., 35., 44., 53., 62.,
      71., 80., 9.,  18., 27., 36., 45., 54., 63., 72., 81.};
  const std::vector<int> sizes = {3, 3, 3, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  28., 55., 10., 37., 64., 19., 46., 73., 2.,  29., 56., 11., 38.,
      65., 20., 47., 74., 3.,  30., 57., 12., 39., 66., 21., 48., 75., 4.,
      31., 58., 13., 40., 67., 22., 49., 76., 5.,  32., 59., 14., 41., 68.,
      23., 50., 77., 6.,  33., 60., 15., 42., 69., 24., 51., 78., 7.,  34.,
      61., 16., 43., 70., 25., 52., 79., 8.,  35., 62., 17., 44., 71., 26.,
      53., 80., 9.,  36., 63., 18., 45., 72., 27., 54., 81.};
  const std::vector<int> sizes = {3, 3, 3, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 28., 31., 34., 37., 40.,
      43., 46., 49., 52., 55., 58., 61., 64., 67., 70., 73., 76., 79., 2.,
      5.,  8.,  11., 14., 17., 20., 23., 26., 29., 32., 35., 38., 41., 44.,
      47., 50., 53., 56., 59., 62., 65., 68., 71., 74., 77., 80., 3.,  6.,
      9.,  12., 15., 18., 21., 24., 27., 30., 33., 36., 39., 42., 45., 48.,
      51., 54., 57., 60., 63., 66., 69., 72., 75., 78., 81.};
  const std::vector<int> sizes = {3, 3, 3, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 4.,  13., 22., 7.,  16., 25., 28., 37., 46., 31., 40.,
      49., 34., 43., 52., 55., 64., 73., 58., 67., 76., 61., 70., 79., 2.,
      11., 20., 5.,  14., 23., 8.,  17., 26., 29., 38., 47., 32., 41., 50.,
      35., 44., 53., 56., 65., 74., 59., 68., 77., 62., 71., 80., 3.,  12.,
      21., 6.,  15., 24., 9.,  18., 27., 30., 39., 48., 33., 42., 51., 36.,
      45., 54., 57., 66., 75., 60., 69., 78., 63., 72., 81.};
  const std::vector<int> sizes = {3, 3, 3, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  28., 31., 34., 55., 58., 61., 10., 13., 16., 37., 40.,
      43., 64., 67., 70., 19., 22., 25., 46., 49., 52., 73., 76., 79., 2.,
      5.,  8.,  29., 32., 35., 56., 59., 62., 11., 14., 17., 38., 41., 44.,
      65., 68., 71., 20., 23., 26., 47., 50., 53., 74., 77., 80., 3.,  6.,
      9.,  30., 33., 36., 57., 60., 63., 12., 15., 18., 39., 42., 45., 66.,
      69., 72., 21., 24., 27., 48., 51., 54., 75., 78., 81.};
  const std::vector<int> sizes = {3, 3, 3, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  28., 55., 4.,  31., 58., 7.,  34., 61., 10., 37., 64., 13., 40.,
      67., 16., 43., 70., 19., 46., 73., 22., 49., 76., 25., 52., 79., 2.,
      29., 56., 5.,  32., 59., 8.,  35., 62., 11., 38., 65., 14., 41., 68.,
      17., 44., 71., 20., 47., 74., 23., 50., 77., 26., 53., 80., 3.,  30.,
      57., 6.,  33., 60., 9.,  36., 63., 12., 39., 66., 15., 42., 69., 18.,
      45., 72., 21., 48., 75., 24., 51., 78., 27., 54., 81.};
  const std::vector<int> sizes = {3, 3, 3, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 28., 37., 46., 55., 64., 73., 4.,  13., 22., 31., 40.,
      49., 58., 67., 76., 7.,  16., 25., 34., 43., 52., 61., 70., 79., 2.,
      11., 20., 29., 38., 47., 56., 65., 74., 5.,  14., 23., 32., 41., 50.,
      59., 68., 77., 8.,  17., 26., 35., 44., 53., 62., 71., 80., 3.,  12.,
      21., 30., 39., 48., 57., 66., 75., 6.,  15., 24., 33., 42., 51., 60.,
      69., 78., 9.,  18., 27., 36., 45., 54., 63., 72., 81.};
  const std::vector<int> sizes = {3, 3, 3, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  28., 55., 10., 37., 64., 19., 46., 73., 4.,  31., 58., 13., 40.,
      67., 22., 49., 76., 7.,  34., 61., 16., 43., 70., 25., 52., 79., 2.,
      29., 56., 11., 38., 65., 20., 47., 74., 5.,  32., 59., 14., 41., 68.,
      23., 50., 77., 8.,  35., 62., 17., 44., 71., 26., 53., 80., 3.,  30.,
      57., 12., 39., 66., 21., 48., 75., 6.,  33., 60., 15., 42., 69., 24.,
      51., 78., 9.,  36., 63., 18., 45., 72., 27., 54., 81.};
  const std::vector<int> sizes = {3, 3, 3, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13., 14., 15., 16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      25., 26., 27., 28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      37., 38., 39., 40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      49., 50., 51., 52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      61., 62., 63., 64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      73., 74., 75., 76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      85., 86., 87., 88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      97., 98., 99., 100., 101., 102., 103., 104., 105., 106., 107., 108.};
  const std::vector<int> sizes = {3, 3, 3, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,   9.,   2.,  6.,   10.,  3.,  7.,   11.,  4.,   8.,   12.,
      13., 17.,  21.,  14., 18.,  22.,  15., 19.,  23.,  16.,  20.,  24.,
      25., 29.,  33.,  26., 30.,  34.,  27., 31.,  35.,  28.,  32.,  36.,
      37., 41.,  45.,  38., 42.,  46.,  39., 43.,  47.,  40.,  44.,  48.,
      49., 53.,  57.,  50., 54.,  58.,  51., 55.,  59.,  52.,  56.,  60.,
      61., 65.,  69.,  62., 66.,  70.,  63., 67.,  71.,  64.,  68.,  72.,
      73., 77.,  81.,  74., 78.,  82.,  75., 79.,  83.,  76.,  80.,  84.,
      85., 89.,  93.,  86., 90.,  94.,  87., 91.,  95.,  88.,  92.,  96.,
      97., 101., 105., 98., 102., 106., 99., 103., 107., 100., 104., 108.};
  const std::vector<int> sizes = {3, 3, 3, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  13., 14., 15., 16., 25.,  26.,  27.,  28.,
      5.,  6.,  7.,  8.,  17., 18., 19., 20., 29.,  30.,  31.,  32.,
      9.,  10., 11., 12., 21., 22., 23., 24., 33.,  34.,  35.,  36.,
      37., 38., 39., 40., 49., 50., 51., 52., 61.,  62.,  63.,  64.,
      41., 42., 43., 44., 53., 54., 55., 56., 65.,  66.,  67.,  68.,
      45., 46., 47., 48., 57., 58., 59., 60., 69.,  70.,  71.,  72.,
      73., 74., 75., 76., 85., 86., 87., 88., 97.,  98.,  99.,  100.,
      77., 78., 79., 80., 89., 90., 91., 92., 101., 102., 103., 104.,
      81., 82., 83., 84., 93., 94., 95., 96., 105., 106., 107., 108.};
  const std::vector<int> sizes = {3, 3, 3, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25.,  2.,  14., 26.,  3.,  15., 27.,  4.,  16., 28.,
      5.,  17., 29.,  6.,  18., 30.,  7.,  19., 31.,  8.,  20., 32.,
      9.,  21., 33.,  10., 22., 34.,  11., 23., 35.,  12., 24., 36.,
      37., 49., 61.,  38., 50., 62.,  39., 51., 63.,  40., 52., 64.,
      41., 53., 65.,  42., 54., 66.,  43., 55., 67.,  44., 56., 68.,
      45., 57., 69.,  46., 58., 70.,  47., 59., 71.,  48., 60., 72.,
      73., 85., 97.,  74., 86., 98.,  75., 87., 99.,  76., 88., 100.,
      77., 89., 101., 78., 90., 102., 79., 91., 103., 80., 92., 104.,
      81., 93., 105., 82., 94., 106., 83., 95., 107., 84., 96., 108.};
  const std::vector<int> sizes = {3, 3, 3, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,   9.,   13., 17.,  21.,  25., 29.,  33.,  2.,   6.,   10.,
      14., 18.,  22.,  26., 30.,  34.,  3.,  7.,   11.,  15.,  19.,  23.,
      27., 31.,  35.,  4.,  8.,   12.,  16., 20.,  24.,  28.,  32.,  36.,
      37., 41.,  45.,  49., 53.,  57.,  61., 65.,  69.,  38.,  42.,  46.,
      50., 54.,  58.,  62., 66.,  70.,  39., 43.,  47.,  51.,  55.,  59.,
      63., 67.,  71.,  40., 44.,  48.,  52., 56.,  60.,  64.,  68.,  72.,
      73., 77.,  81.,  85., 89.,  93.,  97., 101., 105., 74.,  78.,  82.,
      86., 90.,  94.,  98., 102., 106., 75., 79.,  83.,  87.,  91.,  95.,
      99., 103., 107., 76., 80.,  84.,  88., 92.,  96.,  100., 104., 108.};
  const std::vector<int> sizes = {3, 3, 3, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25.,  5.,  17., 29.,  9.,  21., 33.,  2.,  14., 26.,
      6.,  18., 30.,  10., 22., 34.,  3.,  15., 27.,  7.,  19., 31.,
      11., 23., 35.,  4.,  16., 28.,  8.,  20., 32.,  12., 24., 36.,
      37., 49., 61.,  41., 53., 65.,  45., 57., 69.,  38., 50., 62.,
      42., 54., 66.,  46., 58., 70.,  39., 51., 63.,  43., 55., 67.,
      47., 59., 71.,  40., 52., 64.,  44., 56., 68.,  48., 60., 72.,
      73., 85., 97.,  77., 89., 101., 81., 93., 105., 74., 86., 98.,
      78., 90., 102., 82., 94., 106., 75., 87., 99.,  79., 91., 103.,
      83., 95., 107., 76., 88., 100., 80., 92., 104., 84., 96., 108.};
  const std::vector<int> sizes = {3, 3, 3, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      37., 38., 39., 40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      73., 74., 75., 76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      13., 14., 15., 16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      49., 50., 51., 52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      85., 86., 87., 88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      25., 26., 27., 28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      61., 62., 63., 64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      97., 98., 99., 100., 101., 102., 103., 104., 105., 106., 107., 108.};
  const std::vector<int> sizes = {3, 3, 3, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,   9.,   2.,  6.,   10.,  3.,  7.,   11.,  4.,   8.,   12.,
      37., 41.,  45.,  38., 42.,  46.,  39., 43.,  47.,  40.,  44.,  48.,
      73., 77.,  81.,  74., 78.,  82.,  75., 79.,  83.,  76.,  80.,  84.,
      13., 17.,  21.,  14., 18.,  22.,  15., 19.,  23.,  16.,  20.,  24.,
      49., 53.,  57.,  50., 54.,  58.,  51., 55.,  59.,  52.,  56.,  60.,
      85., 89.,  93.,  86., 90.,  94.,  87., 91.,  95.,  88.,  92.,  96.,
      25., 29.,  33.,  26., 30.,  34.,  27., 31.,  35.,  28.,  32.,  36.,
      61., 65.,  69.,  62., 66.,  70.,  63., 67.,  71.,  64.,  68.,  72.,
      97., 101., 105., 98., 102., 106., 99., 103., 107., 100., 104., 108.};
  const std::vector<int> sizes = {3, 3, 3, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  37., 38., 39., 40., 73.,  74.,  75.,  76.,
      5.,  6.,  7.,  8.,  41., 42., 43., 44., 77.,  78.,  79.,  80.,
      9.,  10., 11., 12., 45., 46., 47., 48., 81.,  82.,  83.,  84.,
      13., 14., 15., 16., 49., 50., 51., 52., 85.,  86.,  87.,  88.,
      17., 18., 19., 20., 53., 54., 55., 56., 89.,  90.,  91.,  92.,
      21., 22., 23., 24., 57., 58., 59., 60., 93.,  94.,  95.,  96.,
      25., 26., 27., 28., 61., 62., 63., 64., 97.,  98.,  99.,  100.,
      29., 30., 31., 32., 65., 66., 67., 68., 101., 102., 103., 104.,
      33., 34., 35., 36., 69., 70., 71., 72., 105., 106., 107., 108.};
  const std::vector<int> sizes = {3, 3, 3, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  2.,  38., 74.,  3.,  39., 75.,  4.,  40., 76.,
      5.,  41., 77.,  6.,  42., 78.,  7.,  43., 79.,  8.,  44., 80.,
      9.,  45., 81.,  10., 46., 82.,  11., 47., 83.,  12., 48., 84.,
      13., 49., 85.,  14., 50., 86.,  15., 51., 87.,  16., 52., 88.,
      17., 53., 89.,  18., 54., 90.,  19., 55., 91.,  20., 56., 92.,
      21., 57., 93.,  22., 58., 94.,  23., 59., 95.,  24., 60., 96.,
      25., 61., 97.,  26., 62., 98.,  27., 63., 99.,  28., 64., 100.,
      29., 65., 101., 30., 66., 102., 31., 67., 103., 32., 68., 104.,
      33., 69., 105., 34., 70., 106., 35., 71., 107., 36., 72., 108.};
  const std::vector<int> sizes = {3, 3, 3, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,   9.,   37., 41.,  45.,  73., 77.,  81.,  2.,   6.,   10.,
      38., 42.,  46.,  74., 78.,  82.,  3.,  7.,   11.,  39.,  43.,  47.,
      75., 79.,  83.,  4.,  8.,   12.,  40., 44.,  48.,  76.,  80.,  84.,
      13., 17.,  21.,  49., 53.,  57.,  85., 89.,  93.,  14.,  18.,  22.,
      50., 54.,  58.,  86., 90.,  94.,  15., 19.,  23.,  51.,  55.,  59.,
      87., 91.,  95.,  16., 20.,  24.,  52., 56.,  60.,  88.,  92.,  96.,
      25., 29.,  33.,  61., 65.,  69.,  97., 101., 105., 26.,  30.,  34.,
      62., 66.,  70.,  98., 102., 106., 27., 31.,  35.,  63.,  67.,  71.,
      99., 103., 107., 28., 32.,  36.,  64., 68.,  72.,  100., 104., 108.};
  const std::vector<int> sizes = {3, 3, 3, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  5.,  41., 77.,  9.,  45., 81.,  2.,  38., 74.,
      6.,  42., 78.,  10., 46., 82.,  3.,  39., 75.,  7.,  43., 79.,
      11., 47., 83.,  4.,  40., 76.,  8.,  44., 80.,  12., 48., 84.,
      13., 49., 85.,  17., 53., 89.,  21., 57., 93.,  14., 50., 86.,
      18., 54., 90.,  22., 58., 94.,  15., 51., 87.,  19., 55., 91.,
      23., 59., 95.,  16., 52., 88.,  20., 56., 92.,  24., 60., 96.,
      25., 61., 97.,  29., 65., 101., 33., 69., 105., 26., 62., 98.,
      30., 66., 102., 34., 70., 106., 27., 63., 99.,  31., 67., 103.,
      35., 71., 107., 28., 64., 100., 32., 68., 104., 36., 72., 108.};
  const std::vector<int> sizes = {3, 3, 3, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  13., 14., 15., 16., 25.,  26.,  27.,  28.,
      37., 38., 39., 40., 49., 50., 51., 52., 61.,  62.,  63.,  64.,
      73., 74., 75., 76., 85., 86., 87., 88., 97.,  98.,  99.,  100.,
      5.,  6.,  7.,  8.,  17., 18., 19., 20., 29.,  30.,  31.,  32.,
      41., 42., 43., 44., 53., 54., 55., 56., 65.,  66.,  67.,  68.,
      77., 78., 79., 80., 89., 90., 91., 92., 101., 102., 103., 104.,
      9.,  10., 11., 12., 21., 22., 23., 24., 33.,  34.,  35.,  36.,
      45., 46., 47., 48., 57., 58., 59., 60., 69.,  70.,  71.,  72.,
      81., 82., 83., 84., 93., 94., 95., 96., 105., 106., 107., 108.};
  const std::vector<int> sizes = {3, 3, 3, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25.,  2.,  14., 26.,  3.,  15., 27.,  4.,  16., 28.,
      37., 49., 61.,  38., 50., 62.,  39., 51., 63.,  40., 52., 64.,
      73., 85., 97.,  74., 86., 98.,  75., 87., 99.,  76., 88., 100.,
      5.,  17., 29.,  6.,  18., 30.,  7.,  19., 31.,  8.,  20., 32.,
      41., 53., 65.,  42., 54., 66.,  43., 55., 67.,  44., 56., 68.,
      77., 89., 101., 78., 90., 102., 79., 91., 103., 80., 92., 104.,
      9.,  21., 33.,  10., 22., 34.,  11., 23., 35.,  12., 24., 36.,
      45., 57., 69.,  46., 58., 70.,  47., 59., 71.,  48., 60., 72.,
      81., 93., 105., 82., 94., 106., 83., 95., 107., 84., 96., 108.};
  const std::vector<int> sizes = {3, 3, 3, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  37., 38., 39., 40., 73.,  74.,  75.,  76.,
      13., 14., 15., 16., 49., 50., 51., 52., 85.,  86.,  87.,  88.,
      25., 26., 27., 28., 61., 62., 63., 64., 97.,  98.,  99.,  100.,
      5.,  6.,  7.,  8.,  41., 42., 43., 44., 77.,  78.,  79.,  80.,
      17., 18., 19., 20., 53., 54., 55., 56., 89.,  90.,  91.,  92.,
      29., 30., 31., 32., 65., 66., 67., 68., 101., 102., 103., 104.,
      9.,  10., 11., 12., 45., 46., 47., 48., 81.,  82.,  83.,  84.,
      21., 22., 23., 24., 57., 58., 59., 60., 93.,  94.,  95.,  96.,
      33., 34., 35., 36., 69., 70., 71., 72., 105., 106., 107., 108.};
  const std::vector<int> sizes = {3, 3, 3, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  2.,  38., 74.,  3.,  39., 75.,  4.,  40., 76.,
      13., 49., 85.,  14., 50., 86.,  15., 51., 87.,  16., 52., 88.,
      25., 61., 97.,  26., 62., 98.,  27., 63., 99.,  28., 64., 100.,
      5.,  41., 77.,  6.,  42., 78.,  7.,  43., 79.,  8.,  44., 80.,
      17., 53., 89.,  18., 54., 90.,  19., 55., 91.,  20., 56., 92.,
      29., 65., 101., 30., 66., 102., 31., 67., 103., 32., 68., 104.,
      9.,  45., 81.,  10., 46., 82.,  11., 47., 83.,  12., 48., 84.,
      21., 57., 93.,  22., 58., 94.,  23., 59., 95.,  24., 60., 96.,
      33., 69., 105., 34., 70., 106., 35., 71., 107., 36., 72., 108.};
  const std::vector<int> sizes = {3, 3, 3, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25.,  37., 49., 61.,  73., 85., 97.,  2.,  14., 26.,
      38., 50., 62.,  74., 86., 98.,  3.,  15., 27.,  39., 51., 63.,
      75., 87., 99.,  4.,  16., 28.,  40., 52., 64.,  76., 88., 100.,
      5.,  17., 29.,  41., 53., 65.,  77., 89., 101., 6.,  18., 30.,
      42., 54., 66.,  78., 90., 102., 7.,  19., 31.,  43., 55., 67.,
      79., 91., 103., 8.,  20., 32.,  44., 56., 68.,  80., 92., 104.,
      9.,  21., 33.,  45., 57., 69.,  81., 93., 105., 10., 22., 34.,
      46., 58., 70.,  82., 94., 106., 11., 23., 35.,  47., 59., 71.,
      83., 95., 107., 12., 24., 36.,  48., 60., 72.,  84., 96., 108.};
  const std::vector<int> sizes = {3, 3, 3, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  13., 49., 85.,  25., 61., 97.,  2.,  38., 74.,
      14., 50., 86.,  26., 62., 98.,  3.,  39., 75.,  15., 51., 87.,
      27., 63., 99.,  4.,  40., 76.,  16., 52., 88.,  28., 64., 100.,
      5.,  41., 77.,  17., 53., 89.,  29., 65., 101., 6.,  42., 78.,
      18., 54., 90.,  30., 66., 102., 7.,  43., 79.,  19., 55., 91.,
      31., 67., 103., 8.,  44., 80.,  20., 56., 92.,  32., 68., 104.,
      9.,  45., 81.,  21., 57., 93.,  33., 69., 105., 10., 46., 82.,
      22., 58., 94.,  34., 70., 106., 11., 47., 83.,  23., 59., 95.,
      35., 71., 107., 12., 48., 84.,  24., 60., 96.,  36., 72., 108.};
  const std::vector<int> sizes = {3, 3, 3, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,   9.,   13., 17.,  21.,  25., 29.,  33.,  37.,  41.,  45.,
      49., 53.,  57.,  61., 65.,  69.,  73., 77.,  81.,  85.,  89.,  93.,
      97., 101., 105., 2.,  6.,   10.,  14., 18.,  22.,  26.,  30.,  34.,
      38., 42.,  46.,  50., 54.,  58.,  62., 66.,  70.,  74.,  78.,  82.,
      86., 90.,  94.,  98., 102., 106., 3.,  7.,   11.,  15.,  19.,  23.,
      27., 31.,  35.,  39., 43.,  47.,  51., 55.,  59.,  63.,  67.,  71.,
      75., 79.,  83.,  87., 91.,  95.,  99., 103., 107., 4.,   8.,   12.,
      16., 20.,  24.,  28., 32.,  36.,  40., 44.,  48.,  52.,  56.,  60.,
      64., 68.,  72.,  76., 80.,  84.,  88., 92.,  96.,  100., 104., 108.};
  const std::vector<int> sizes = {3, 3, 3, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25.,  5.,  17., 29.,  9.,  21., 33.,  37., 49., 61.,
      41., 53., 65.,  45., 57., 69.,  73., 85., 97.,  77., 89., 101.,
      81., 93., 105., 2.,  14., 26.,  6.,  18., 30.,  10., 22., 34.,
      38., 50., 62.,  42., 54., 66.,  46., 58., 70.,  74., 86., 98.,
      78., 90., 102., 82., 94., 106., 3.,  15., 27.,  7.,  19., 31.,
      11., 23., 35.,  39., 51., 63.,  43., 55., 67.,  47., 59., 71.,
      75., 87., 99.,  79., 91., 103., 83., 95., 107., 4.,  16., 28.,
      8.,  20., 32.,  12., 24., 36.,  40., 52., 64.,  44., 56., 68.,
      48., 60., 72.,  76., 88., 100., 80., 92., 104., 84., 96., 108.};
  const std::vector<int> sizes = {3, 3, 3, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,   9.,   37., 41.,  45.,  73., 77.,  81.,  13.,  17.,  21.,
      49., 53.,  57.,  85., 89.,  93.,  25., 29.,  33.,  61.,  65.,  69.,
      97., 101., 105., 2.,  6.,   10.,  38., 42.,  46.,  74.,  78.,  82.,
      14., 18.,  22.,  50., 54.,  58.,  86., 90.,  94.,  26.,  30.,  34.,
      62., 66.,  70.,  98., 102., 106., 3.,  7.,   11.,  39.,  43.,  47.,
      75., 79.,  83.,  15., 19.,  23.,  51., 55.,  59.,  87.,  91.,  95.,
      27., 31.,  35.,  63., 67.,  71.,  99., 103., 107., 4.,   8.,   12.,
      40., 44.,  48.,  76., 80.,  84.,  16., 20.,  24.,  52.,  56.,  60.,
      88., 92.,  96.,  28., 32.,  36.,  64., 68.,  72.,  100., 104., 108.};
  const std::vector<int> sizes = {3, 3, 3, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  5.,  41., 77.,  9.,  45., 81.,  13., 49., 85.,
      17., 53., 89.,  21., 57., 93.,  25., 61., 97.,  29., 65., 101.,
      33., 69., 105., 2.,  38., 74.,  6.,  42., 78.,  10., 46., 82.,
      14., 50., 86.,  18., 54., 90.,  22., 58., 94.,  26., 62., 98.,
      30., 66., 102., 34., 70., 106., 3.,  39., 75.,  7.,  43., 79.,
      11., 47., 83.,  15., 51., 87.,  19., 55., 91.,  23., 59., 95.,
      27., 63., 99.,  31., 67., 103., 35., 71., 107., 4.,  40., 76.,
      8.,  44., 80.,  12., 48., 84.,  16., 52., 88.,  20., 56., 92.,
      24., 60., 96.,  28., 64., 100., 32., 68., 104., 36., 72., 108.};
  const std::vector<int> sizes = {3, 3, 3, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25.,  37., 49., 61.,  73., 85., 97.,  5.,  17., 29.,
      41., 53., 65.,  77., 89., 101., 9.,  21., 33.,  45., 57., 69.,
      81., 93., 105., 2.,  14., 26.,  38., 50., 62.,  74., 86., 98.,
      6.,  18., 30.,  42., 54., 66.,  78., 90., 102., 10., 22., 34.,
      46., 58., 70.,  82., 94., 106., 3.,  15., 27.,  39., 51., 63.,
      75., 87., 99.,  7.,  19., 31.,  43., 55., 67.,  79., 91., 103.,
      11., 23., 35.,  47., 59., 71.,  83., 95., 107., 4.,  16., 28.,
      40., 52., 64.,  76., 88., 100., 8.,  20., 32.,  44., 56., 68.,
      80., 92., 104., 12., 24., 36.,  48., 60., 72.,  84., 96., 108.};
  const std::vector<int> sizes = {3, 3, 3, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x3x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  13., 49., 85.,  25., 61., 97.,  5.,  41., 77.,
      17., 53., 89.,  29., 65., 101., 9.,  45., 81.,  21., 57., 93.,
      33., 69., 105., 2.,  38., 74.,  14., 50., 86.,  26., 62., 98.,
      6.,  42., 78.,  18., 54., 90.,  30., 66., 102., 10., 46., 82.,
      22., 58., 94.,  34., 70., 106., 3.,  39., 75.,  15., 51., 87.,
      27., 63., 99.,  7.,  43., 79.,  19., 55., 91.,  31., 67., 103.,
      11., 47., 83.,  23., 59., 95.,  35., 71., 107., 4.,  40., 76.,
      16., 52., 88.,  28., 64., 100., 8.,  44., 80.,  20., 56., 92.,
      32., 68., 104., 12., 48., 84.,  24., 60., 96.,  36., 72., 108.};
  const std::vector<int> sizes = {3, 3, 3, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14., 15.,
      16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 30.,
      31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42., 43., 44., 45.,
      46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56., 57., 58., 59., 60.,
      61., 62., 63., 64., 65., 66., 67., 68., 69., 70., 71., 72.};
  const std::vector<int> sizes = {3, 3, 4, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  2.,  4.,  6.,  8.,  9.,  11., 13., 15., 10., 12., 14.,
      16., 17., 19., 21., 23., 18., 20., 22., 24., 25., 27., 29., 31., 26., 28.,
      30., 32., 33., 35., 37., 39., 34., 36., 38., 40., 41., 43., 45., 47., 42.,
      44., 46., 48., 49., 51., 53., 55., 50., 52., 54., 56., 57., 59., 61., 63.,
      58., 60., 62., 64., 65., 67., 69., 71., 66., 68., 70., 72.};
  const std::vector<int> sizes = {3, 3, 4, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  9.,  10., 17., 18., 3.,  4.,  11., 12., 19., 20., 5.,  6.,  13.,
      14., 21., 22., 7.,  8.,  15., 16., 23., 24., 25., 26., 33., 34., 41., 42.,
      27., 28., 35., 36., 43., 44., 29., 30., 37., 38., 45., 46., 31., 32., 39.,
      40., 47., 48., 49., 50., 57., 58., 65., 66., 51., 52., 59., 60., 67., 68.,
      53., 54., 61., 62., 69., 70., 55., 56., 63., 64., 71., 72.};
  const std::vector<int> sizes = {3, 3, 4, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 2.,  10., 18., 3.,  11., 19., 4.,  12., 20., 5.,  13., 21.,
      6.,  14., 22., 7.,  15., 23., 8.,  16., 24., 25., 33., 41., 26., 34., 42.,
      27., 35., 43., 28., 36., 44., 29., 37., 45., 30., 38., 46., 31., 39., 47.,
      32., 40., 48., 49., 57., 65., 50., 58., 66., 51., 59., 67., 52., 60., 68.,
      53., 61., 69., 54., 62., 70., 55., 63., 71., 56., 64., 72.};
  const std::vector<int> sizes = {3, 3, 4, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23., 2.,  4.,  6.,
      8.,  10., 12., 14., 16., 18., 20., 22., 24., 25., 27., 29., 31., 33., 35.,
      37., 39., 41., 43., 45., 47., 26., 28., 30., 32., 34., 36., 38., 40., 42.,
      44., 46., 48., 49., 51., 53., 55., 57., 59., 61., 63., 65., 67., 69., 71.,
      50., 52., 54., 56., 58., 60., 62., 64., 66., 68., 70., 72.};
  const std::vector<int> sizes = {3, 3, 4, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 3.,  11., 19., 5.,  13., 21., 7.,  15., 23., 2.,  10., 18.,
      4.,  12., 20., 6.,  14., 22., 8.,  16., 24., 25., 33., 41., 27., 35., 43.,
      29., 37., 45., 31., 39., 47., 26., 34., 42., 28., 36., 44., 30., 38., 46.,
      32., 40., 48., 49., 57., 65., 51., 59., 67., 53., 61., 69., 55., 63., 71.,
      50., 58., 66., 52., 60., 68., 54., 62., 70., 56., 64., 72.};
  const std::vector<int> sizes = {3, 3, 4, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  25., 26., 27., 28., 29., 30., 31.,
      32., 49., 50., 51., 52., 53., 54., 55., 56., 9.,  10., 11., 12., 13., 14.,
      15., 16., 33., 34., 35., 36., 37., 38., 39., 40., 57., 58., 59., 60., 61.,
      62., 63., 64., 17., 18., 19., 20., 21., 22., 23., 24., 41., 42., 43., 44.,
      45., 46., 47., 48., 65., 66., 67., 68., 69., 70., 71., 72.};
  const std::vector<int> sizes = {3, 3, 4, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  2.,  4.,  6.,  8.,  25., 27., 29., 31., 26., 28., 30.,
      32., 49., 51., 53., 55., 50., 52., 54., 56., 9.,  11., 13., 15., 10., 12.,
      14., 16., 33., 35., 37., 39., 34., 36., 38., 40., 57., 59., 61., 63., 58.,
      60., 62., 64., 17., 19., 21., 23., 18., 20., 22., 24., 41., 43., 45., 47.,
      42., 44., 46., 48., 65., 67., 69., 71., 66., 68., 70., 72.};
  const std::vector<int> sizes = {3, 3, 4, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  25., 26., 49., 50., 3.,  4.,  27., 28., 51., 52., 5.,  6.,  29.,
      30., 53., 54., 7.,  8.,  31., 32., 55., 56., 9.,  10., 33., 34., 57., 58.,
      11., 12., 35., 36., 59., 60., 13., 14., 37., 38., 61., 62., 15., 16., 39.,
      40., 63., 64., 17., 18., 41., 42., 65., 66., 19., 20., 43., 44., 67., 68.,
      21., 22., 45., 46., 69., 70., 23., 24., 47., 48., 71., 72.};
  const std::vector<int> sizes = {3, 3, 4, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 2.,  26., 50., 3.,  27., 51., 4.,  28., 52., 5.,  29., 53.,
      6.,  30., 54., 7.,  31., 55., 8.,  32., 56., 9.,  33., 57., 10., 34., 58.,
      11., 35., 59., 12., 36., 60., 13., 37., 61., 14., 38., 62., 15., 39., 63.,
      16., 40., 64., 17., 41., 65., 18., 42., 66., 19., 43., 67., 20., 44., 68.,
      21., 45., 69., 22., 46., 70., 23., 47., 71., 24., 48., 72.};
  const std::vector<int> sizes = {3, 3, 4, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  25., 27., 29., 31., 49., 51., 53., 55., 2.,  4.,  6.,
      8.,  26., 28., 30., 32., 50., 52., 54., 56., 9.,  11., 13., 15., 33., 35.,
      37., 39., 57., 59., 61., 63., 10., 12., 14., 16., 34., 36., 38., 40., 58.,
      60., 62., 64., 17., 19., 21., 23., 41., 43., 45., 47., 65., 67., 69., 71.,
      18., 20., 22., 24., 42., 44., 46., 48., 66., 68., 70., 72.};
  const std::vector<int> sizes = {3, 3, 4, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 3.,  27., 51., 5.,  29., 53., 7.,  31., 55., 2.,  26., 50.,
      4.,  28., 52., 6.,  30., 54., 8.,  32., 56., 9.,  33., 57., 11., 35., 59.,
      13., 37., 61., 15., 39., 63., 10., 34., 58., 12., 36., 60., 14., 38., 62.,
      16., 40., 64., 17., 41., 65., 19., 43., 67., 21., 45., 69., 23., 47., 71.,
      18., 42., 66., 20., 44., 68., 22., 46., 70., 24., 48., 72.};
  const std::vector<int> sizes = {3, 3, 4, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  9.,  10., 17., 18., 25., 26., 33., 34., 41., 42., 49., 50., 57.,
      58., 65., 66., 3.,  4.,  11., 12., 19., 20., 27., 28., 35., 36., 43., 44.,
      51., 52., 59., 60., 67., 68., 5.,  6.,  13., 14., 21., 22., 29., 30., 37.,
      38., 45., 46., 53., 54., 61., 62., 69., 70., 7.,  8.,  15., 16., 23., 24.,
      31., 32., 39., 40., 47., 48., 55., 56., 63., 64., 71., 72.};
  const std::vector<int> sizes = {3, 3, 4, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 2.,  10., 18., 25., 33., 41., 26., 34., 42., 49., 57., 65.,
      50., 58., 66., 3.,  11., 19., 4.,  12., 20., 27., 35., 43., 28., 36., 44.,
      51., 59., 67., 52., 60., 68., 5.,  13., 21., 6.,  14., 22., 29., 37., 45.,
      30., 38., 46., 53., 61., 69., 54., 62., 70., 7.,  15., 23., 8.,  16., 24.,
      31., 39., 47., 32., 40., 48., 55., 63., 71., 56., 64., 72.};
  const std::vector<int> sizes = {3, 3, 4, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  25., 26., 49., 50., 9.,  10., 33., 34., 57., 58., 17., 18., 41.,
      42., 65., 66., 3.,  4.,  27., 28., 51., 52., 11., 12., 35., 36., 59., 60.,
      19., 20., 43., 44., 67., 68., 5.,  6.,  29., 30., 53., 54., 13., 14., 37.,
      38., 61., 62., 21., 22., 45., 46., 69., 70., 7.,  8.,  31., 32., 55., 56.,
      15., 16., 39., 40., 63., 64., 23., 24., 47., 48., 71., 72.};
  const std::vector<int> sizes = {3, 3, 4, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 2.,  26., 50., 9.,  33., 57., 10., 34., 58., 17., 41., 65.,
      18., 42., 66., 3.,  27., 51., 4.,  28., 52., 11., 35., 59., 12., 36., 60.,
      19., 43., 67., 20., 44., 68., 5.,  29., 53., 6.,  30., 54., 13., 37., 61.,
      14., 38., 62., 21., 45., 69., 22., 46., 70., 7.,  31., 55., 8.,  32., 56.,
      15., 39., 63., 16., 40., 64., 23., 47., 71., 24., 48., 72.};
  const std::vector<int> sizes = {3, 3, 4, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 33., 41., 49., 57., 65., 2.,  10., 18., 26., 34., 42.,
      50., 58., 66., 3.,  11., 19., 27., 35., 43., 51., 59., 67., 4.,  12., 20.,
      28., 36., 44., 52., 60., 68., 5.,  13., 21., 29., 37., 45., 53., 61., 69.,
      6.,  14., 22., 30., 38., 46., 54., 62., 70., 7.,  15., 23., 31., 39., 47.,
      55., 63., 71., 8.,  16., 24., 32., 40., 48., 56., 64., 72.};
  const std::vector<int> sizes = {3, 3, 4, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 9.,  33., 57., 17., 41., 65., 2.,  26., 50., 10., 34., 58.,
      18., 42., 66., 3.,  27., 51., 11., 35., 59., 19., 43., 67., 4.,  28., 52.,
      12., 36., 60., 20., 44., 68., 5.,  29., 53., 13., 37., 61., 21., 45., 69.,
      6.,  30., 54., 14., 38., 62., 22., 46., 70., 7.,  31., 55., 15., 39., 63.,
      23., 47., 71., 8.,  32., 56., 16., 40., 64., 24., 48., 72.};
  const std::vector<int> sizes = {3, 3, 4, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23., 25., 27., 29.,
      31., 33., 35., 37., 39., 41., 43., 45., 47., 49., 51., 53., 55., 57., 59.,
      61., 63., 65., 67., 69., 71., 2.,  4.,  6.,  8.,  10., 12., 14., 16., 18.,
      20., 22., 24., 26., 28., 30., 32., 34., 36., 38., 40., 42., 44., 46., 48.,
      50., 52., 54., 56., 58., 60., 62., 64., 66., 68., 70., 72.};
  const std::vector<int> sizes = {3, 3, 4, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 3.,  11., 19., 5.,  13., 21., 7.,  15., 23., 25., 33., 41.,
      27., 35., 43., 29., 37., 45., 31., 39., 47., 49., 57., 65., 51., 59., 67.,
      53., 61., 69., 55., 63., 71., 2.,  10., 18., 4.,  12., 20., 6.,  14., 22.,
      8.,  16., 24., 26., 34., 42., 28., 36., 44., 30., 38., 46., 32., 40., 48.,
      50., 58., 66., 52., 60., 68., 54., 62., 70., 56., 64., 72.};
  const std::vector<int> sizes = {3, 3, 4, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  25., 27., 29., 31., 49., 51., 53., 55., 9.,  11., 13.,
      15., 33., 35., 37., 39., 57., 59., 61., 63., 17., 19., 21., 23., 41., 43.,
      45., 47., 65., 67., 69., 71., 2.,  4.,  6.,  8.,  26., 28., 30., 32., 50.,
      52., 54., 56., 10., 12., 14., 16., 34., 36., 38., 40., 58., 60., 62., 64.,
      18., 20., 22., 24., 42., 44., 46., 48., 66., 68., 70., 72.};
  const std::vector<int> sizes = {3, 3, 4, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 3.,  27., 51., 5.,  29., 53., 7.,  31., 55., 9.,  33., 57.,
      11., 35., 59., 13., 37., 61., 15., 39., 63., 17., 41., 65., 19., 43., 67.,
      21., 45., 69., 23., 47., 71., 2.,  26., 50., 4.,  28., 52., 6.,  30., 54.,
      8.,  32., 56., 10., 34., 58., 12., 36., 60., 14., 38., 62., 16., 40., 64.,
      18., 42., 66., 20., 44., 68., 22., 46., 70., 24., 48., 72.};
  const std::vector<int> sizes = {3, 3, 4, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 33., 41., 49., 57., 65., 3.,  11., 19., 27., 35., 43.,
      51., 59., 67., 5.,  13., 21., 29., 37., 45., 53., 61., 69., 7.,  15., 23.,
      31., 39., 47., 55., 63., 71., 2.,  10., 18., 26., 34., 42., 50., 58., 66.,
      4.,  12., 20., 28., 36., 44., 52., 60., 68., 6.,  14., 22., 30., 38., 46.,
      54., 62., 70., 8.,  16., 24., 32., 40., 48., 56., 64., 72.};
  const std::vector<int> sizes = {3, 3, 4, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 9.,  33., 57., 17., 41., 65., 3.,  27., 51., 11., 35., 59.,
      19., 43., 67., 5.,  29., 53., 13., 37., 61., 21., 45., 69., 7.,  31., 55.,
      15., 39., 63., 23., 47., 71., 2.,  26., 50., 10., 34., 58., 18., 42., 66.,
      4.,  28., 52., 12., 36., 60., 20., 44., 68., 6.,  30., 54., 14., 38., 62.,
      22., 46., 70., 8.,  32., 56., 16., 40., 64., 24., 48., 72.};
  const std::vector<int> sizes = {3, 3, 4, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13., 14., 15., 16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      25., 26., 27., 28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      37., 38., 39., 40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      49., 50., 51., 52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      61., 62., 63., 64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      73., 74., 75., 76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      85., 86., 87., 88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      97., 98., 99., 100., 101., 102., 103., 104., 105., 106., 107., 108.};
  const std::vector<int> sizes = {3, 3, 4, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,   7.,   10.,  2.,  5.,   8.,   11.,  3.,  6.,   9.,   12.,
      13., 16.,  19.,  22.,  14., 17.,  20.,  23.,  15., 18.,  21.,  24.,
      25., 28.,  31.,  34.,  26., 29.,  32.,  35.,  27., 30.,  33.,  36.,
      37., 40.,  43.,  46.,  38., 41.,  44.,  47.,  39., 42.,  45.,  48.,
      49., 52.,  55.,  58.,  50., 53.,  56.,  59.,  51., 54.,  57.,  60.,
      61., 64.,  67.,  70.,  62., 65.,  68.,  71.,  63., 66.,  69.,  72.,
      73., 76.,  79.,  82.,  74., 77.,  80.,  83.,  75., 78.,  81.,  84.,
      85., 88.,  91.,  94.,  86., 89.,  92.,  95.,  87., 90.,  93.,  96.,
      97., 100., 103., 106., 98., 101., 104., 107., 99., 102., 105., 108.};
  const std::vector<int> sizes = {3, 3, 4, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   13.,  14.,  15.,  25., 26., 27., 4.,   5.,   6.,
      16.,  17.,  18.,  28.,  29.,  30.,  7.,  8.,  9.,  19.,  20.,  21.,
      31.,  32.,  33.,  10.,  11.,  12.,  22., 23., 24., 34.,  35.,  36.,
      37.,  38.,  39.,  49.,  50.,  51.,  61., 62., 63., 40.,  41.,  42.,
      52.,  53.,  54.,  64.,  65.,  66.,  43., 44., 45., 55.,  56.,  57.,
      67.,  68.,  69.,  46.,  47.,  48.,  58., 59., 60., 70.,  71.,  72.,
      73.,  74.,  75.,  85.,  86.,  87.,  97., 98., 99., 76.,  77.,  78.,
      88.,  89.,  90.,  100., 101., 102., 79., 80., 81., 91.,  92.,  93.,
      103., 104., 105., 82.,  83.,  84.,  94., 95., 96., 106., 107., 108.};
  const std::vector<int> sizes = {3, 3, 4, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25.,  2.,  14., 26.,  3.,  15., 27.,  4.,  16., 28.,
      5.,  17., 29.,  6.,  18., 30.,  7.,  19., 31.,  8.,  20., 32.,
      9.,  21., 33.,  10., 22., 34.,  11., 23., 35.,  12., 24., 36.,
      37., 49., 61.,  38., 50., 62.,  39., 51., 63.,  40., 52., 64.,
      41., 53., 65.,  42., 54., 66.,  43., 55., 67.,  44., 56., 68.,
      45., 57., 69.,  46., 58., 70.,  47., 59., 71.,  48., 60., 72.,
      73., 85., 97.,  74., 86., 98.,  75., 87., 99.,  76., 88., 100.,
      77., 89., 101., 78., 90., 102., 79., 91., 103., 80., 92., 104.,
      81., 93., 105., 82., 94., 106., 83., 95., 107., 84., 96., 108.};
  const std::vector<int> sizes = {3, 3, 4, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 28.,  31.,  34.,
      2.,  5.,  8.,  11., 14., 17., 20., 23., 26., 29.,  32.,  35.,
      3.,  6.,  9.,  12., 15., 18., 21., 24., 27., 30.,  33.,  36.,
      37., 40., 43., 46., 49., 52., 55., 58., 61., 64.,  67.,  70.,
      38., 41., 44., 47., 50., 53., 56., 59., 62., 65.,  68.,  71.,
      39., 42., 45., 48., 51., 54., 57., 60., 63., 66.,  69.,  72.,
      73., 76., 79., 82., 85., 88., 91., 94., 97., 100., 103., 106.,
      74., 77., 80., 83., 86., 89., 92., 95., 98., 101., 104., 107.,
      75., 78., 81., 84., 87., 90., 93., 96., 99., 102., 105., 108.};
  const std::vector<int> sizes = {3, 3, 4, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 4.,  16., 28.,  7.,  19., 31.,  10., 22., 34.,
      2.,  14., 26., 5.,  17., 29.,  8.,  20., 32.,  11., 23., 35.,
      3.,  15., 27., 6.,  18., 30.,  9.,  21., 33.,  12., 24., 36.,
      37., 49., 61., 40., 52., 64.,  43., 55., 67.,  46., 58., 70.,
      38., 50., 62., 41., 53., 65.,  44., 56., 68.,  47., 59., 71.,
      39., 51., 63., 42., 54., 66.,  45., 57., 69.,  48., 60., 72.,
      73., 85., 97., 76., 88., 100., 79., 91., 103., 82., 94., 106.,
      74., 86., 98., 77., 89., 101., 80., 92., 104., 83., 95., 107.,
      75., 87., 99., 78., 90., 102., 81., 93., 105., 84., 96., 108.};
  const std::vector<int> sizes = {3, 3, 4, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      37., 38., 39., 40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      73., 74., 75., 76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      13., 14., 15., 16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      49., 50., 51., 52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      85., 86., 87., 88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      25., 26., 27., 28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      61., 62., 63., 64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      97., 98., 99., 100., 101., 102., 103., 104., 105., 106., 107., 108.};
  const std::vector<int> sizes = {3, 3, 4, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,   7.,   10.,  2.,  5.,   8.,   11.,  3.,  6.,   9.,   12.,
      37., 40.,  43.,  46.,  38., 41.,  44.,  47.,  39., 42.,  45.,  48.,
      73., 76.,  79.,  82.,  74., 77.,  80.,  83.,  75., 78.,  81.,  84.,
      13., 16.,  19.,  22.,  14., 17.,  20.,  23.,  15., 18.,  21.,  24.,
      49., 52.,  55.,  58.,  50., 53.,  56.,  59.,  51., 54.,  57.,  60.,
      85., 88.,  91.,  94.,  86., 89.,  92.,  95.,  87., 90.,  93.,  96.,
      25., 28.,  31.,  34.,  26., 29.,  32.,  35.,  27., 30.,  33.,  36.,
      61., 64.,  67.,  70.,  62., 65.,  68.,  71.,  63., 66.,  69.,  72.,
      97., 100., 103., 106., 98., 101., 104., 107., 99., 102., 105., 108.};
  const std::vector<int> sizes = {3, 3, 4, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   37.,  38.,  39.,  73., 74., 75., 4.,   5.,   6.,
      40.,  41.,  42.,  76.,  77.,  78.,  7.,  8.,  9.,  43.,  44.,  45.,
      79.,  80.,  81.,  10.,  11.,  12.,  46., 47., 48., 82.,  83.,  84.,
      13.,  14.,  15.,  49.,  50.,  51.,  85., 86., 87., 16.,  17.,  18.,
      52.,  53.,  54.,  88.,  89.,  90.,  19., 20., 21., 55.,  56.,  57.,
      91.,  92.,  93.,  22.,  23.,  24.,  58., 59., 60., 94.,  95.,  96.,
      25.,  26.,  27.,  61.,  62.,  63.,  97., 98., 99., 28.,  29.,  30.,
      64.,  65.,  66.,  100., 101., 102., 31., 32., 33., 67.,  68.,  69.,
      103., 104., 105., 34.,  35.,  36.,  70., 71., 72., 106., 107., 108.};
  const std::vector<int> sizes = {3, 3, 4, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  2.,  38., 74.,  3.,  39., 75.,  4.,  40., 76.,
      5.,  41., 77.,  6.,  42., 78.,  7.,  43., 79.,  8.,  44., 80.,
      9.,  45., 81.,  10., 46., 82.,  11., 47., 83.,  12., 48., 84.,
      13., 49., 85.,  14., 50., 86.,  15., 51., 87.,  16., 52., 88.,
      17., 53., 89.,  18., 54., 90.,  19., 55., 91.,  20., 56., 92.,
      21., 57., 93.,  22., 58., 94.,  23., 59., 95.,  24., 60., 96.,
      25., 61., 97.,  26., 62., 98.,  27., 63., 99.,  28., 64., 100.,
      29., 65., 101., 30., 66., 102., 31., 67., 103., 32., 68., 104.,
      33., 69., 105., 34., 70., 106., 35., 71., 107., 36., 72., 108.};
  const std::vector<int> sizes = {3, 3, 4, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 37., 40., 43., 46., 73., 76.,  79.,  82.,
      2.,  5.,  8.,  11., 38., 41., 44., 47., 74., 77.,  80.,  83.,
      3.,  6.,  9.,  12., 39., 42., 45., 48., 75., 78.,  81.,  84.,
      13., 16., 19., 22., 49., 52., 55., 58., 85., 88.,  91.,  94.,
      14., 17., 20., 23., 50., 53., 56., 59., 86., 89.,  92.,  95.,
      15., 18., 21., 24., 51., 54., 57., 60., 87., 90.,  93.,  96.,
      25., 28., 31., 34., 61., 64., 67., 70., 97., 100., 103., 106.,
      26., 29., 32., 35., 62., 65., 68., 71., 98., 101., 104., 107.,
      27., 30., 33., 36., 63., 66., 69., 72., 99., 102., 105., 108.};
  const std::vector<int> sizes = {3, 3, 4, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73., 4.,  40., 76.,  7.,  43., 79.,  10., 46., 82.,
      2.,  38., 74., 5.,  41., 77.,  8.,  44., 80.,  11., 47., 83.,
      3.,  39., 75., 6.,  42., 78.,  9.,  45., 81.,  12., 48., 84.,
      13., 49., 85., 16., 52., 88.,  19., 55., 91.,  22., 58., 94.,
      14., 50., 86., 17., 53., 89.,  20., 56., 92.,  23., 59., 95.,
      15., 51., 87., 18., 54., 90.,  21., 57., 93.,  24., 60., 96.,
      25., 61., 97., 28., 64., 100., 31., 67., 103., 34., 70., 106.,
      26., 62., 98., 29., 65., 101., 32., 68., 104., 35., 71., 107.,
      27., 63., 99., 30., 66., 102., 33., 69., 105., 36., 72., 108.};
  const std::vector<int> sizes = {3, 3, 4, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  13., 14., 15., 25., 26.,  27.,  37.,  38.,  39.,  49., 50.,
      51., 61., 62., 63., 73., 74., 75., 85.,  86.,  87.,  97.,  98.,  99., 4.,
      5.,  6.,  16., 17., 18., 28., 29., 30.,  40.,  41.,  42.,  52.,  53., 54.,
      64., 65., 66., 76., 77., 78., 88., 89.,  90.,  100., 101., 102., 7.,  8.,
      9.,  19., 20., 21., 31., 32., 33., 43.,  44.,  45.,  55.,  56.,  57., 67.,
      68., 69., 79., 80., 81., 91., 92., 93.,  103., 104., 105., 10.,  11., 12.,
      22., 23., 24., 34., 35., 36., 46., 47.,  48.,  58.,  59.,  60.,  70., 71.,
      72., 82., 83., 84., 94., 95., 96., 106., 107., 108.};
  const std::vector<int> sizes = {3, 3, 4, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25.,  2.,  14., 26.,  3.,  15., 27.,  37., 49., 61.,
      38., 50., 62.,  39., 51., 63.,  73., 85., 97.,  74., 86., 98.,
      75., 87., 99.,  4.,  16., 28.,  5.,  17., 29.,  6.,  18., 30.,
      40., 52., 64.,  41., 53., 65.,  42., 54., 66.,  76., 88., 100.,
      77., 89., 101., 78., 90., 102., 7.,  19., 31.,  8.,  20., 32.,
      9.,  21., 33.,  43., 55., 67.,  44., 56., 68.,  45., 57., 69.,
      79., 91., 103., 80., 92., 104., 81., 93., 105., 10., 22., 34.,
      11., 23., 35.,  12., 24., 36.,  46., 58., 70.,  47., 59., 71.,
      48., 60., 72.,  82., 94., 106., 83., 95., 107., 84., 96., 108.};
  const std::vector<int> sizes = {3, 3, 4, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  37., 38., 39., 73., 74.,  75.,  13.,  14.,  15.,  49., 50.,
      51., 85., 86., 87., 25., 26., 27., 61.,  62.,  63.,  97.,  98.,  99., 4.,
      5.,  6.,  40., 41., 42., 76., 77., 78.,  16.,  17.,  18.,  52.,  53., 54.,
      88., 89., 90., 28., 29., 30., 64., 65.,  66.,  100., 101., 102., 7.,  8.,
      9.,  43., 44., 45., 79., 80., 81., 19.,  20.,  21.,  55.,  56.,  57., 91.,
      92., 93., 31., 32., 33., 67., 68., 69.,  103., 104., 105., 10.,  11., 12.,
      46., 47., 48., 82., 83., 84., 22., 23.,  24.,  58.,  59.,  60.,  94., 95.,
      96., 34., 35., 36., 70., 71., 72., 106., 107., 108.};
  const std::vector<int> sizes = {3, 3, 4, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  2.,  38., 74.,  3.,  39., 75.,  13., 49., 85.,
      14., 50., 86.,  15., 51., 87.,  25., 61., 97.,  26., 62., 98.,
      27., 63., 99.,  4.,  40., 76.,  5.,  41., 77.,  6.,  42., 78.,
      16., 52., 88.,  17., 53., 89.,  18., 54., 90.,  28., 64., 100.,
      29., 65., 101., 30., 66., 102., 7.,  43., 79.,  8.,  44., 80.,
      9.,  45., 81.,  19., 55., 91.,  20., 56., 92.,  21., 57., 93.,
      31., 67., 103., 32., 68., 104., 33., 69., 105., 10., 46., 82.,
      11., 47., 83.,  12., 48., 84.,  22., 58., 94.,  23., 59., 95.,
      24., 60., 96.,  34., 70., 106., 35., 71., 107., 36., 72., 108.};
  const std::vector<int> sizes = {3, 3, 4, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25.,  37., 49., 61.,  73., 85., 97.,  2.,  14., 26.,
      38., 50., 62.,  74., 86., 98.,  3.,  15., 27.,  39., 51., 63.,
      75., 87., 99.,  4.,  16., 28.,  40., 52., 64.,  76., 88., 100.,
      5.,  17., 29.,  41., 53., 65.,  77., 89., 101., 6.,  18., 30.,
      42., 54., 66.,  78., 90., 102., 7.,  19., 31.,  43., 55., 67.,
      79., 91., 103., 8.,  20., 32.,  44., 56., 68.,  80., 92., 104.,
      9.,  21., 33.,  45., 57., 69.,  81., 93., 105., 10., 22., 34.,
      46., 58., 70.,  82., 94., 106., 11., 23., 35.,  47., 59., 71.,
      83., 95., 107., 12., 24., 36.,  48., 60., 72.,  84., 96., 108.};
  const std::vector<int> sizes = {3, 3, 4, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  13., 49., 85.,  25., 61., 97.,  2.,  38., 74.,
      14., 50., 86.,  26., 62., 98.,  3.,  39., 75.,  15., 51., 87.,
      27., 63., 99.,  4.,  40., 76.,  16., 52., 88.,  28., 64., 100.,
      5.,  41., 77.,  17., 53., 89.,  29., 65., 101., 6.,  42., 78.,
      18., 54., 90.,  30., 66., 102., 7.,  43., 79.,  19., 55., 91.,
      31., 67., 103., 8.,  44., 80.,  20., 56., 92.,  32., 68., 104.,
      9.,  45., 81.,  21., 57., 93.,  33., 69., 105., 10., 46., 82.,
      22., 58., 94.,  34., 70., 106., 11., 47., 83.,  23., 59., 95.,
      35., 71., 107., 12., 48., 84.,  24., 60., 96.,  36., 72., 108.};
  const std::vector<int> sizes = {3, 3, 4, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 28.,  31.,  34.,
      37., 40., 43., 46., 49., 52., 55., 58., 61., 64.,  67.,  70.,
      73., 76., 79., 82., 85., 88., 91., 94., 97., 100., 103., 106.,
      2.,  5.,  8.,  11., 14., 17., 20., 23., 26., 29.,  32.,  35.,
      38., 41., 44., 47., 50., 53., 56., 59., 62., 65.,  68.,  71.,
      74., 77., 80., 83., 86., 89., 92., 95., 98., 101., 104., 107.,
      3.,  6.,  9.,  12., 15., 18., 21., 24., 27., 30.,  33.,  36.,
      39., 42., 45., 48., 51., 54., 57., 60., 63., 66.,  69.,  72.,
      75., 78., 81., 84., 87., 90., 93., 96., 99., 102., 105., 108.};
  const std::vector<int> sizes = {3, 3, 4, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 4.,  16., 28.,  7.,  19., 31.,  10., 22., 34.,
      37., 49., 61., 40., 52., 64.,  43., 55., 67.,  46., 58., 70.,
      73., 85., 97., 76., 88., 100., 79., 91., 103., 82., 94., 106.,
      2.,  14., 26., 5.,  17., 29.,  8.,  20., 32.,  11., 23., 35.,
      38., 50., 62., 41., 53., 65.,  44., 56., 68.,  47., 59., 71.,
      74., 86., 98., 77., 89., 101., 80., 92., 104., 83., 95., 107.,
      3.,  15., 27., 6.,  18., 30.,  9.,  21., 33.,  12., 24., 36.,
      39., 51., 63., 42., 54., 66.,  45., 57., 69.,  48., 60., 72.,
      75., 87., 99., 78., 90., 102., 81., 93., 105., 84., 96., 108.};
  const std::vector<int> sizes = {3, 3, 4, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 37., 40., 43., 46., 73., 76.,  79.,  82.,
      13., 16., 19., 22., 49., 52., 55., 58., 85., 88.,  91.,  94.,
      25., 28., 31., 34., 61., 64., 67., 70., 97., 100., 103., 106.,
      2.,  5.,  8.,  11., 38., 41., 44., 47., 74., 77.,  80.,  83.,
      14., 17., 20., 23., 50., 53., 56., 59., 86., 89.,  92.,  95.,
      26., 29., 32., 35., 62., 65., 68., 71., 98., 101., 104., 107.,
      3.,  6.,  9.,  12., 39., 42., 45., 48., 75., 78.,  81.,  84.,
      15., 18., 21., 24., 51., 54., 57., 60., 87., 90.,  93.,  96.,
      27., 30., 33., 36., 63., 66., 69., 72., 99., 102., 105., 108.};
  const std::vector<int> sizes = {3, 3, 4, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73., 4.,  40., 76.,  7.,  43., 79.,  10., 46., 82.,
      13., 49., 85., 16., 52., 88.,  19., 55., 91.,  22., 58., 94.,
      25., 61., 97., 28., 64., 100., 31., 67., 103., 34., 70., 106.,
      2.,  38., 74., 5.,  41., 77.,  8.,  44., 80.,  11., 47., 83.,
      14., 50., 86., 17., 53., 89.,  20., 56., 92.,  23., 59., 95.,
      26., 62., 98., 29., 65., 101., 32., 68., 104., 35., 71., 107.,
      3.,  39., 75., 6.,  42., 78.,  9.,  45., 81.,  12., 48., 84.,
      15., 51., 87., 18., 54., 90.,  21., 57., 93.,  24., 60., 96.,
      27., 63., 99., 30., 66., 102., 33., 69., 105., 36., 72., 108.};
  const std::vector<int> sizes = {3, 3, 4, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25.,  37., 49., 61.,  73., 85., 97., 4.,  16., 28.,
      40., 52., 64.,  76., 88., 100., 7.,  19., 31., 43., 55., 67.,
      79., 91., 103., 10., 22., 34.,  46., 58., 70., 82., 94., 106.,
      2.,  14., 26.,  38., 50., 62.,  74., 86., 98., 5.,  17., 29.,
      41., 53., 65.,  77., 89., 101., 8.,  20., 32., 44., 56., 68.,
      80., 92., 104., 11., 23., 35.,  47., 59., 71., 83., 95., 107.,
      3.,  15., 27.,  39., 51., 63.,  75., 87., 99., 6.,  18., 30.,
      42., 54., 66.,  78., 90., 102., 9.,  21., 33., 45., 57., 69.,
      81., 93., 105., 12., 24., 36.,  48., 60., 72., 84., 96., 108.};
  const std::vector<int> sizes = {3, 3, 4, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  13., 49., 85.,  25., 61., 97., 4.,  40., 76.,
      16., 52., 88.,  28., 64., 100., 7.,  43., 79., 19., 55., 91.,
      31., 67., 103., 10., 46., 82.,  22., 58., 94., 34., 70., 106.,
      2.,  38., 74.,  14., 50., 86.,  26., 62., 98., 5.,  41., 77.,
      17., 53., 89.,  29., 65., 101., 8.,  44., 80., 20., 56., 92.,
      32., 68., 104., 11., 47., 83.,  23., 59., 95., 35., 71., 107.,
      3.,  39., 75.,  15., 51., 87.,  27., 63., 99., 6.,  42., 78.,
      18., 54., 90.,  30., 66., 102., 9.,  45., 81., 21., 57., 93.,
      33., 69., 105., 12., 48., 84.,  24., 60., 96., 36., 72., 108.};
  const std::vector<int> sizes = {3, 3, 4, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13.,  14.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 105., 106., 107., 108.,
      109., 110., 111., 112., 113., 114., 115., 116., 117., 118., 119., 120.,
      121., 122., 123., 124., 125., 126., 127., 128., 129., 130., 131., 132.,
      133., 134., 135., 136., 137., 138., 139., 140., 141., 142., 143., 144.};
  const std::vector<int> sizes = {3, 3, 4, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  2.,   6.,   10.,  14.,  3.,   7.,   11.,  15.,
      4.,   8.,   12.,  16.,  17.,  21.,  25.,  29.,  18.,  22.,  26.,  30.,
      19.,  23.,  27.,  31.,  20.,  24.,  28.,  32.,  33.,  37.,  41.,  45.,
      34.,  38.,  42.,  46.,  35.,  39.,  43.,  47.,  36.,  40.,  44.,  48.,
      49.,  53.,  57.,  61.,  50.,  54.,  58.,  62.,  51.,  55.,  59.,  63.,
      52.,  56.,  60.,  64.,  65.,  69.,  73.,  77.,  66.,  70.,  74.,  78.,
      67.,  71.,  75.,  79.,  68.,  72.,  76.,  80.,  81.,  85.,  89.,  93.,
      82.,  86.,  90.,  94.,  83.,  87.,  91.,  95.,  84.,  88.,  92.,  96.,
      97.,  101., 105., 109., 98.,  102., 106., 110., 99.,  103., 107., 111.,
      100., 104., 108., 112., 113., 117., 121., 125., 114., 118., 122., 126.,
      115., 119., 123., 127., 116., 120., 124., 128., 129., 133., 137., 141.,
      130., 134., 138., 142., 131., 135., 139., 143., 132., 136., 140., 144.};
  const std::vector<int> sizes = {3, 3, 4, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   17.,  18.,  19.,  20.,  33.,  34.,  35.,  36.,
      5.,   6.,   7.,   8.,   21.,  22.,  23.,  24.,  37.,  38.,  39.,  40.,
      9.,   10.,  11.,  12.,  25.,  26.,  27.,  28.,  41.,  42.,  43.,  44.,
      13.,  14.,  15.,  16.,  29.,  30.,  31.,  32.,  45.,  46.,  47.,  48.,
      49.,  50.,  51.,  52.,  65.,  66.,  67.,  68.,  81.,  82.,  83.,  84.,
      53.,  54.,  55.,  56.,  69.,  70.,  71.,  72.,  85.,  86.,  87.,  88.,
      57.,  58.,  59.,  60.,  73.,  74.,  75.,  76.,  89.,  90.,  91.,  92.,
      61.,  62.,  63.,  64.,  77.,  78.,  79.,  80.,  93.,  94.,  95.,  96.,
      97.,  98.,  99.,  100., 113., 114., 115., 116., 129., 130., 131., 132.,
      101., 102., 103., 104., 117., 118., 119., 120., 133., 134., 135., 136.,
      105., 106., 107., 108., 121., 122., 123., 124., 137., 138., 139., 140.,
      109., 110., 111., 112., 125., 126., 127., 128., 141., 142., 143., 144.};
  const std::vector<int> sizes = {3, 3, 4, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   17.,  33.,  2.,   18.,  34.,  3.,   19.,  35.,  4.,   20.,  36.,
      5.,   21.,  37.,  6.,   22.,  38.,  7.,   23.,  39.,  8.,   24.,  40.,
      9.,   25.,  41.,  10.,  26.,  42.,  11.,  27.,  43.,  12.,  28.,  44.,
      13.,  29.,  45.,  14.,  30.,  46.,  15.,  31.,  47.,  16.,  32.,  48.,
      49.,  65.,  81.,  50.,  66.,  82.,  51.,  67.,  83.,  52.,  68.,  84.,
      53.,  69.,  85.,  54.,  70.,  86.,  55.,  71.,  87.,  56.,  72.,  88.,
      57.,  73.,  89.,  58.,  74.,  90.,  59.,  75.,  91.,  60.,  76.,  92.,
      61.,  77.,  93.,  62.,  78.,  94.,  63.,  79.,  95.,  64.,  80.,  96.,
      97.,  113., 129., 98.,  114., 130., 99.,  115., 131., 100., 116., 132.,
      101., 117., 133., 102., 118., 134., 103., 119., 135., 104., 120., 136.,
      105., 121., 137., 106., 122., 138., 107., 123., 139., 108., 124., 140.,
      109., 125., 141., 110., 126., 142., 111., 127., 143., 112., 128., 144.};
  const std::vector<int> sizes = {3, 3, 4, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  17.,  21.,  25.,  29.,  33.,  37.,  41.,  45.,
      2.,   6.,   10.,  14.,  18.,  22.,  26.,  30.,  34.,  38.,  42.,  46.,
      3.,   7.,   11.,  15.,  19.,  23.,  27.,  31.,  35.,  39.,  43.,  47.,
      4.,   8.,   12.,  16.,  20.,  24.,  28.,  32.,  36.,  40.,  44.,  48.,
      49.,  53.,  57.,  61.,  65.,  69.,  73.,  77.,  81.,  85.,  89.,  93.,
      50.,  54.,  58.,  62.,  66.,  70.,  74.,  78.,  82.,  86.,  90.,  94.,
      51.,  55.,  59.,  63.,  67.,  71.,  75.,  79.,  83.,  87.,  91.,  95.,
      52.,  56.,  60.,  64.,  68.,  72.,  76.,  80.,  84.,  88.,  92.,  96.,
      97.,  101., 105., 109., 113., 117., 121., 125., 129., 133., 137., 141.,
      98.,  102., 106., 110., 114., 118., 122., 126., 130., 134., 138., 142.,
      99.,  103., 107., 111., 115., 119., 123., 127., 131., 135., 139., 143.,
      100., 104., 108., 112., 116., 120., 124., 128., 132., 136., 140., 144.};
  const std::vector<int> sizes = {3, 3, 4, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   17.,  33.,  5.,   21.,  37.,  9.,   25.,  41.,  13.,  29.,  45.,
      2.,   18.,  34.,  6.,   22.,  38.,  10.,  26.,  42.,  14.,  30.,  46.,
      3.,   19.,  35.,  7.,   23.,  39.,  11.,  27.,  43.,  15.,  31.,  47.,
      4.,   20.,  36.,  8.,   24.,  40.,  12.,  28.,  44.,  16.,  32.,  48.,
      49.,  65.,  81.,  53.,  69.,  85.,  57.,  73.,  89.,  61.,  77.,  93.,
      50.,  66.,  82.,  54.,  70.,  86.,  58.,  74.,  90.,  62.,  78.,  94.,
      51.,  67.,  83.,  55.,  71.,  87.,  59.,  75.,  91.,  63.,  79.,  95.,
      52.,  68.,  84.,  56.,  72.,  88.,  60.,  76.,  92.,  64.,  80.,  96.,
      97.,  113., 129., 101., 117., 133., 105., 121., 137., 109., 125., 141.,
      98.,  114., 130., 102., 118., 134., 106., 122., 138., 110., 126., 142.,
      99.,  115., 131., 103., 119., 135., 107., 123., 139., 111., 127., 143.,
      100., 116., 132., 104., 120., 136., 108., 124., 140., 112., 128., 144.};
  const std::vector<int> sizes = {3, 3, 4, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13.,  14.,  15.,  16.,  49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,
      57.,  58.,  59.,  60.,  61.,  62.,  63.,  64.,  97.,  98.,  99.,  100.,
      101., 102., 103., 104., 105., 106., 107., 108., 109., 110., 111., 112.,
      17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,  25.,  26.,  27.,  28.,
      29.,  30.,  31.,  32.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  113., 114., 115., 116.,
      117., 118., 119., 120., 121., 122., 123., 124., 125., 126., 127., 128.,
      33.,  34.,  35.,  36.,  37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,
      45.,  46.,  47.,  48.,  81.,  82.,  83.,  84.,  85.,  86.,  87.,  88.,
      89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,  129., 130., 131., 132.,
      133., 134., 135., 136., 137., 138., 139., 140., 141., 142., 143., 144.};
  const std::vector<int> sizes = {3, 3, 4, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  2.,   6.,   10.,  14.,  3.,   7.,   11.,  15.,
      4.,   8.,   12.,  16.,  49.,  53.,  57.,  61.,  50.,  54.,  58.,  62.,
      51.,  55.,  59.,  63.,  52.,  56.,  60.,  64.,  97.,  101., 105., 109.,
      98.,  102., 106., 110., 99.,  103., 107., 111., 100., 104., 108., 112.,
      17.,  21.,  25.,  29.,  18.,  22.,  26.,  30.,  19.,  23.,  27.,  31.,
      20.,  24.,  28.,  32.,  65.,  69.,  73.,  77.,  66.,  70.,  74.,  78.,
      67.,  71.,  75.,  79.,  68.,  72.,  76.,  80.,  113., 117., 121., 125.,
      114., 118., 122., 126., 115., 119., 123., 127., 116., 120., 124., 128.,
      33.,  37.,  41.,  45.,  34.,  38.,  42.,  46.,  35.,  39.,  43.,  47.,
      36.,  40.,  44.,  48.,  81.,  85.,  89.,  93.,  82.,  86.,  90.,  94.,
      83.,  87.,  91.,  95.,  84.,  88.,  92.,  96.,  129., 133., 137., 141.,
      130., 134., 138., 142., 131., 135., 139., 143., 132., 136., 140., 144.};
  const std::vector<int> sizes = {3, 3, 4, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  49., 50., 51., 52., 97.,  98.,  99.,  100.,
      5.,  6.,  7.,  8.,  53., 54., 55., 56., 101., 102., 103., 104.,
      9.,  10., 11., 12., 57., 58., 59., 60., 105., 106., 107., 108.,
      13., 14., 15., 16., 61., 62., 63., 64., 109., 110., 111., 112.,
      17., 18., 19., 20., 65., 66., 67., 68., 113., 114., 115., 116.,
      21., 22., 23., 24., 69., 70., 71., 72., 117., 118., 119., 120.,
      25., 26., 27., 28., 73., 74., 75., 76., 121., 122., 123., 124.,
      29., 30., 31., 32., 77., 78., 79., 80., 125., 126., 127., 128.,
      33., 34., 35., 36., 81., 82., 83., 84., 129., 130., 131., 132.,
      37., 38., 39., 40., 85., 86., 87., 88., 133., 134., 135., 136.,
      41., 42., 43., 44., 89., 90., 91., 92., 137., 138., 139., 140.,
      45., 46., 47., 48., 93., 94., 95., 96., 141., 142., 143., 144.};
  const std::vector<int> sizes = {3, 3, 4, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  2.,  50., 98.,  3.,  51., 99.,  4.,  52., 100.,
      5.,  53., 101., 6.,  54., 102., 7.,  55., 103., 8.,  56., 104.,
      9.,  57., 105., 10., 58., 106., 11., 59., 107., 12., 60., 108.,
      13., 61., 109., 14., 62., 110., 15., 63., 111., 16., 64., 112.,
      17., 65., 113., 18., 66., 114., 19., 67., 115., 20., 68., 116.,
      21., 69., 117., 22., 70., 118., 23., 71., 119., 24., 72., 120.,
      25., 73., 121., 26., 74., 122., 27., 75., 123., 28., 76., 124.,
      29., 77., 125., 30., 78., 126., 31., 79., 127., 32., 80., 128.,
      33., 81., 129., 34., 82., 130., 35., 83., 131., 36., 84., 132.,
      37., 85., 133., 38., 86., 134., 39., 87., 135., 40., 88., 136.,
      41., 89., 137., 42., 90., 138., 43., 91., 139., 44., 92., 140.,
      45., 93., 141., 46., 94., 142., 47., 95., 143., 48., 96., 144.};
  const std::vector<int> sizes = {3, 3, 4, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 49., 53., 57., 61., 97.,  101., 105., 109.,
      2.,  6.,  10., 14., 50., 54., 58., 62., 98.,  102., 106., 110.,
      3.,  7.,  11., 15., 51., 55., 59., 63., 99.,  103., 107., 111.,
      4.,  8.,  12., 16., 52., 56., 60., 64., 100., 104., 108., 112.,
      17., 21., 25., 29., 65., 69., 73., 77., 113., 117., 121., 125.,
      18., 22., 26., 30., 66., 70., 74., 78., 114., 118., 122., 126.,
      19., 23., 27., 31., 67., 71., 75., 79., 115., 119., 123., 127.,
      20., 24., 28., 32., 68., 72., 76., 80., 116., 120., 124., 128.,
      33., 37., 41., 45., 81., 85., 89., 93., 129., 133., 137., 141.,
      34., 38., 42., 46., 82., 86., 90., 94., 130., 134., 138., 142.,
      35., 39., 43., 47., 83., 87., 91., 95., 131., 135., 139., 143.,
      36., 40., 44., 48., 84., 88., 92., 96., 132., 136., 140., 144.};
  const std::vector<int> sizes = {3, 3, 4, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  5.,  53., 101., 9.,  57., 105., 13., 61., 109.,
      2.,  50., 98.,  6.,  54., 102., 10., 58., 106., 14., 62., 110.,
      3.,  51., 99.,  7.,  55., 103., 11., 59., 107., 15., 63., 111.,
      4.,  52., 100., 8.,  56., 104., 12., 60., 108., 16., 64., 112.,
      17., 65., 113., 21., 69., 117., 25., 73., 121., 29., 77., 125.,
      18., 66., 114., 22., 70., 118., 26., 74., 122., 30., 78., 126.,
      19., 67., 115., 23., 71., 119., 27., 75., 123., 31., 79., 127.,
      20., 68., 116., 24., 72., 120., 28., 76., 124., 32., 80., 128.,
      33., 81., 129., 37., 85., 133., 41., 89., 137., 45., 93., 141.,
      34., 82., 130., 38., 86., 134., 42., 90., 138., 46., 94., 142.,
      35., 83., 131., 39., 87., 135., 43., 91., 139., 47., 95., 143.,
      36., 84., 132., 40., 88., 136., 44., 92., 140., 48., 96., 144.};
  const std::vector<int> sizes = {3, 3, 4, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   17.,  18.,  19.,  20.,  33.,  34.,  35.,  36.,
      49.,  50.,  51.,  52.,  65.,  66.,  67.,  68.,  81.,  82.,  83.,  84.,
      97.,  98.,  99.,  100., 113., 114., 115., 116., 129., 130., 131., 132.,
      5.,   6.,   7.,   8.,   21.,  22.,  23.,  24.,  37.,  38.,  39.,  40.,
      53.,  54.,  55.,  56.,  69.,  70.,  71.,  72.,  85.,  86.,  87.,  88.,
      101., 102., 103., 104., 117., 118., 119., 120., 133., 134., 135., 136.,
      9.,   10.,  11.,  12.,  25.,  26.,  27.,  28.,  41.,  42.,  43.,  44.,
      57.,  58.,  59.,  60.,  73.,  74.,  75.,  76.,  89.,  90.,  91.,  92.,
      105., 106., 107., 108., 121., 122., 123., 124., 137., 138., 139., 140.,
      13.,  14.,  15.,  16.,  29.,  30.,  31.,  32.,  45.,  46.,  47.,  48.,
      61.,  62.,  63.,  64.,  77.,  78.,  79.,  80.,  93.,  94.,  95.,  96.,
      109., 110., 111., 112., 125., 126., 127., 128., 141., 142., 143., 144.};
  const std::vector<int> sizes = {3, 3, 4, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   17.,  33.,  2.,   18.,  34.,  3.,   19.,  35.,  4.,   20.,  36.,
      49.,  65.,  81.,  50.,  66.,  82.,  51.,  67.,  83.,  52.,  68.,  84.,
      97.,  113., 129., 98.,  114., 130., 99.,  115., 131., 100., 116., 132.,
      5.,   21.,  37.,  6.,   22.,  38.,  7.,   23.,  39.,  8.,   24.,  40.,
      53.,  69.,  85.,  54.,  70.,  86.,  55.,  71.,  87.,  56.,  72.,  88.,
      101., 117., 133., 102., 118., 134., 103., 119., 135., 104., 120., 136.,
      9.,   25.,  41.,  10.,  26.,  42.,  11.,  27.,  43.,  12.,  28.,  44.,
      57.,  73.,  89.,  58.,  74.,  90.,  59.,  75.,  91.,  60.,  76.,  92.,
      105., 121., 137., 106., 122., 138., 107., 123., 139., 108., 124., 140.,
      13.,  29.,  45.,  14.,  30.,  46.,  15.,  31.,  47.,  16.,  32.,  48.,
      61.,  77.,  93.,  62.,  78.,  94.,  63.,  79.,  95.,  64.,  80.,  96.,
      109., 125., 141., 110., 126., 142., 111., 127., 143., 112., 128., 144.};
  const std::vector<int> sizes = {3, 3, 4, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  49., 50., 51., 52., 97.,  98.,  99.,  100.,
      17., 18., 19., 20., 65., 66., 67., 68., 113., 114., 115., 116.,
      33., 34., 35., 36., 81., 82., 83., 84., 129., 130., 131., 132.,
      5.,  6.,  7.,  8.,  53., 54., 55., 56., 101., 102., 103., 104.,
      21., 22., 23., 24., 69., 70., 71., 72., 117., 118., 119., 120.,
      37., 38., 39., 40., 85., 86., 87., 88., 133., 134., 135., 136.,
      9.,  10., 11., 12., 57., 58., 59., 60., 105., 106., 107., 108.,
      25., 26., 27., 28., 73., 74., 75., 76., 121., 122., 123., 124.,
      41., 42., 43., 44., 89., 90., 91., 92., 137., 138., 139., 140.,
      13., 14., 15., 16., 61., 62., 63., 64., 109., 110., 111., 112.,
      29., 30., 31., 32., 77., 78., 79., 80., 125., 126., 127., 128.,
      45., 46., 47., 48., 93., 94., 95., 96., 141., 142., 143., 144.};
  const std::vector<int> sizes = {3, 3, 4, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  2.,  50., 98.,  3.,  51., 99.,  4.,  52., 100.,
      17., 65., 113., 18., 66., 114., 19., 67., 115., 20., 68., 116.,
      33., 81., 129., 34., 82., 130., 35., 83., 131., 36., 84., 132.,
      5.,  53., 101., 6.,  54., 102., 7.,  55., 103., 8.,  56., 104.,
      21., 69., 117., 22., 70., 118., 23., 71., 119., 24., 72., 120.,
      37., 85., 133., 38., 86., 134., 39., 87., 135., 40., 88., 136.,
      9.,  57., 105., 10., 58., 106., 11., 59., 107., 12., 60., 108.,
      25., 73., 121., 26., 74., 122., 27., 75., 123., 28., 76., 124.,
      41., 89., 137., 42., 90., 138., 43., 91., 139., 44., 92., 140.,
      13., 61., 109., 14., 62., 110., 15., 63., 111., 16., 64., 112.,
      29., 77., 125., 30., 78., 126., 31., 79., 127., 32., 80., 128.,
      45., 93., 141., 46., 94., 142., 47., 95., 143., 48., 96., 144.};
  const std::vector<int> sizes = {3, 3, 4, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   17.,  33.,  49.,  65.,  81.,  97.,  113., 129., 2.,   18.,  34.,
      50.,  66.,  82.,  98.,  114., 130., 3.,   19.,  35.,  51.,  67.,  83.,
      99.,  115., 131., 4.,   20.,  36.,  52.,  68.,  84.,  100., 116., 132.,
      5.,   21.,  37.,  53.,  69.,  85.,  101., 117., 133., 6.,   22.,  38.,
      54.,  70.,  86.,  102., 118., 134., 7.,   23.,  39.,  55.,  71.,  87.,
      103., 119., 135., 8.,   24.,  40.,  56.,  72.,  88.,  104., 120., 136.,
      9.,   25.,  41.,  57.,  73.,  89.,  105., 121., 137., 10.,  26.,  42.,
      58.,  74.,  90.,  106., 122., 138., 11.,  27.,  43.,  59.,  75.,  91.,
      107., 123., 139., 12.,  28.,  44.,  60.,  76.,  92.,  108., 124., 140.,
      13.,  29.,  45.,  61.,  77.,  93.,  109., 125., 141., 14.,  30.,  46.,
      62.,  78.,  94.,  110., 126., 142., 15.,  31.,  47.,  63.,  79.,  95.,
      111., 127., 143., 16.,  32.,  48.,  64.,  80.,  96.,  112., 128., 144.};
  const std::vector<int> sizes = {3, 3, 4, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  17., 65., 113., 33., 81., 129., 2.,  50., 98.,
      18., 66., 114., 34., 82., 130., 3.,  51., 99.,  19., 67., 115.,
      35., 83., 131., 4.,  52., 100., 20., 68., 116., 36., 84., 132.,
      5.,  53., 101., 21., 69., 117., 37., 85., 133., 6.,  54., 102.,
      22., 70., 118., 38., 86., 134., 7.,  55., 103., 23., 71., 119.,
      39., 87., 135., 8.,  56., 104., 24., 72., 120., 40., 88., 136.,
      9.,  57., 105., 25., 73., 121., 41., 89., 137., 10., 58., 106.,
      26., 74., 122., 42., 90., 138., 11., 59., 107., 27., 75., 123.,
      43., 91., 139., 12., 60., 108., 28., 76., 124., 44., 92., 140.,
      13., 61., 109., 29., 77., 125., 45., 93., 141., 14., 62., 110.,
      30., 78., 126., 46., 94., 142., 15., 63., 111., 31., 79., 127.,
      47., 95., 143., 16., 64., 112., 32., 80., 128., 48., 96., 144.};
  const std::vector<int> sizes = {3, 3, 4, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  17.,  21.,  25.,  29.,  33.,  37.,  41.,  45.,
      49.,  53.,  57.,  61.,  65.,  69.,  73.,  77.,  81.,  85.,  89.,  93.,
      97.,  101., 105., 109., 113., 117., 121., 125., 129., 133., 137., 141.,
      2.,   6.,   10.,  14.,  18.,  22.,  26.,  30.,  34.,  38.,  42.,  46.,
      50.,  54.,  58.,  62.,  66.,  70.,  74.,  78.,  82.,  86.,  90.,  94.,
      98.,  102., 106., 110., 114., 118., 122., 126., 130., 134., 138., 142.,
      3.,   7.,   11.,  15.,  19.,  23.,  27.,  31.,  35.,  39.,  43.,  47.,
      51.,  55.,  59.,  63.,  67.,  71.,  75.,  79.,  83.,  87.,  91.,  95.,
      99.,  103., 107., 111., 115., 119., 123., 127., 131., 135., 139., 143.,
      4.,   8.,   12.,  16.,  20.,  24.,  28.,  32.,  36.,  40.,  44.,  48.,
      52.,  56.,  60.,  64.,  68.,  72.,  76.,  80.,  84.,  88.,  92.,  96.,
      100., 104., 108., 112., 116., 120., 124., 128., 132., 136., 140., 144.};
  const std::vector<int> sizes = {3, 3, 4, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   17.,  33.,  5.,   21.,  37.,  9.,   25.,  41.,  13.,  29.,  45.,
      49.,  65.,  81.,  53.,  69.,  85.,  57.,  73.,  89.,  61.,  77.,  93.,
      97.,  113., 129., 101., 117., 133., 105., 121., 137., 109., 125., 141.,
      2.,   18.,  34.,  6.,   22.,  38.,  10.,  26.,  42.,  14.,  30.,  46.,
      50.,  66.,  82.,  54.,  70.,  86.,  58.,  74.,  90.,  62.,  78.,  94.,
      98.,  114., 130., 102., 118., 134., 106., 122., 138., 110., 126., 142.,
      3.,   19.,  35.,  7.,   23.,  39.,  11.,  27.,  43.,  15.,  31.,  47.,
      51.,  67.,  83.,  55.,  71.,  87.,  59.,  75.,  91.,  63.,  79.,  95.,
      99.,  115., 131., 103., 119., 135., 107., 123., 139., 111., 127., 143.,
      4.,   20.,  36.,  8.,   24.,  40.,  12.,  28.,  44.,  16.,  32.,  48.,
      52.,  68.,  84.,  56.,  72.,  88.,  60.,  76.,  92.,  64.,  80.,  96.,
      100., 116., 132., 104., 120., 136., 108., 124., 140., 112., 128., 144.};
  const std::vector<int> sizes = {3, 3, 4, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 49., 53., 57., 61., 97.,  101., 105., 109.,
      17., 21., 25., 29., 65., 69., 73., 77., 113., 117., 121., 125.,
      33., 37., 41., 45., 81., 85., 89., 93., 129., 133., 137., 141.,
      2.,  6.,  10., 14., 50., 54., 58., 62., 98.,  102., 106., 110.,
      18., 22., 26., 30., 66., 70., 74., 78., 114., 118., 122., 126.,
      34., 38., 42., 46., 82., 86., 90., 94., 130., 134., 138., 142.,
      3.,  7.,  11., 15., 51., 55., 59., 63., 99.,  103., 107., 111.,
      19., 23., 27., 31., 67., 71., 75., 79., 115., 119., 123., 127.,
      35., 39., 43., 47., 83., 87., 91., 95., 131., 135., 139., 143.,
      4.,  8.,  12., 16., 52., 56., 60., 64., 100., 104., 108., 112.,
      20., 24., 28., 32., 68., 72., 76., 80., 116., 120., 124., 128.,
      36., 40., 44., 48., 84., 88., 92., 96., 132., 136., 140., 144.};
  const std::vector<int> sizes = {3, 3, 4, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  5.,  53., 101., 9.,  57., 105., 13., 61., 109.,
      17., 65., 113., 21., 69., 117., 25., 73., 121., 29., 77., 125.,
      33., 81., 129., 37., 85., 133., 41., 89., 137., 45., 93., 141.,
      2.,  50., 98.,  6.,  54., 102., 10., 58., 106., 14., 62., 110.,
      18., 66., 114., 22., 70., 118., 26., 74., 122., 30., 78., 126.,
      34., 82., 130., 38., 86., 134., 42., 90., 138., 46., 94., 142.,
      3.,  51., 99.,  7.,  55., 103., 11., 59., 107., 15., 63., 111.,
      19., 67., 115., 23., 71., 119., 27., 75., 123., 31., 79., 127.,
      35., 83., 131., 39., 87., 135., 43., 91., 139., 47., 95., 143.,
      4.,  52., 100., 8.,  56., 104., 12., 60., 108., 16., 64., 112.,
      20., 68., 116., 24., 72., 120., 28., 76., 124., 32., 80., 128.,
      36., 84., 132., 40., 88., 136., 44., 92., 140., 48., 96., 144.};
  const std::vector<int> sizes = {3, 3, 4, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   17.,  33.,  49.,  65.,  81.,  97.,  113., 129., 5.,   21.,  37.,
      53.,  69.,  85.,  101., 117., 133., 9.,   25.,  41.,  57.,  73.,  89.,
      105., 121., 137., 13.,  29.,  45.,  61.,  77.,  93.,  109., 125., 141.,
      2.,   18.,  34.,  50.,  66.,  82.,  98.,  114., 130., 6.,   22.,  38.,
      54.,  70.,  86.,  102., 118., 134., 10.,  26.,  42.,  58.,  74.,  90.,
      106., 122., 138., 14.,  30.,  46.,  62.,  78.,  94.,  110., 126., 142.,
      3.,   19.,  35.,  51.,  67.,  83.,  99.,  115., 131., 7.,   23.,  39.,
      55.,  71.,  87.,  103., 119., 135., 11.,  27.,  43.,  59.,  75.,  91.,
      107., 123., 139., 15.,  31.,  47.,  63.,  79.,  95.,  111., 127., 143.,
      4.,   20.,  36.,  52.,  68.,  84.,  100., 116., 132., 8.,   24.,  40.,
      56.,  72.,  88.,  104., 120., 136., 12.,  28.,  44.,  60.,  76.,  92.,
      108., 124., 140., 16.,  32.,  48.,  64.,  80.,  96.,  112., 128., 144.};
  const std::vector<int> sizes = {3, 3, 4, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x3x4x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  17., 65., 113., 33., 81., 129., 5.,  53., 101.,
      21., 69., 117., 37., 85., 133., 9.,  57., 105., 25., 73., 121.,
      41., 89., 137., 13., 61., 109., 29., 77., 125., 45., 93., 141.,
      2.,  50., 98.,  18., 66., 114., 34., 82., 130., 6.,  54., 102.,
      22., 70., 118., 38., 86., 134., 10., 58., 106., 26., 74., 122.,
      42., 90., 138., 14., 62., 110., 30., 78., 126., 46., 94., 142.,
      3.,  51., 99.,  19., 67., 115., 35., 83., 131., 7.,  55., 103.,
      23., 71., 119., 39., 87., 135., 11., 59., 107., 27., 75., 123.,
      43., 91., 139., 15., 63., 111., 31., 79., 127., 47., 95., 143.,
      4.,  52., 100., 20., 68., 116., 36., 84., 132., 8.,  56., 104.,
      24., 72., 120., 40., 88., 136., 12., 60., 108., 28., 76., 124.,
      44., 92., 140., 16., 64., 112., 32., 80., 128., 48., 96., 144.};
  const std::vector<int> sizes = {3, 3, 4, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.,
      25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.,
      37., 38., 39., 40., 41., 42., 43., 44., 45., 46., 47., 48.};
  const std::vector<int> sizes = {3, 4, 2, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  2.,  4.,  5.,  7.,  6.,  8.,  9.,  11., 10., 12.,
      13., 15., 14., 16., 17., 19., 18., 20., 21., 23., 22., 24.,
      25., 27., 26., 28., 29., 31., 30., 32., 33., 35., 34., 36.,
      37., 39., 38., 40., 41., 43., 42., 44., 45., 47., 46., 48.};
  const std::vector<int> sizes = {3, 4, 2, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  5.,  6.,  9.,  10., 13., 14., 3.,  4.,  7.,  8.,
      11., 12., 15., 16., 17., 18., 21., 22., 25., 26., 29., 30.,
      19., 20., 23., 24., 27., 28., 31., 32., 33., 34., 37., 38.,
      41., 42., 45., 46., 35., 36., 39., 40., 43., 44., 47., 48.};
  const std::vector<int> sizes = {3, 4, 2, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 2.,  6.,  10., 14., 3.,  7.,  11., 15.,
      4.,  8.,  12., 16., 17., 21., 25., 29., 18., 22., 26., 30.,
      19., 23., 27., 31., 20., 24., 28., 32., 33., 37., 41., 45.,
      34., 38., 42., 46., 35., 39., 43., 47., 36., 40., 44., 48.};
  const std::vector<int> sizes = {3, 4, 2, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 2.,  4.,  6.,  8.,
      10., 12., 14., 16., 17., 19., 21., 23., 25., 27., 29., 31.,
      18., 20., 22., 24., 26., 28., 30., 32., 33., 35., 37., 39.,
      41., 43., 45., 47., 34., 36., 38., 40., 42., 44., 46., 48.};
  const std::vector<int> sizes = {3, 4, 2, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 3.,  7.,  11., 15., 2.,  6.,  10., 14.,
      4.,  8.,  12., 16., 17., 21., 25., 29., 19., 23., 27., 31.,
      18., 22., 26., 30., 20., 24., 28., 32., 33., 37., 41., 45.,
      35., 39., 43., 47., 34., 38., 42., 46., 36., 40., 44., 48.};
  const std::vector<int> sizes = {3, 4, 2, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  17., 18., 19., 20., 33., 34., 35., 36.,
      5.,  6.,  7.,  8.,  21., 22., 23., 24., 37., 38., 39., 40.,
      9.,  10., 11., 12., 25., 26., 27., 28., 41., 42., 43., 44.,
      13., 14., 15., 16., 29., 30., 31., 32., 45., 46., 47., 48.};
  const std::vector<int> sizes = {3, 4, 2, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  2.,  4.,  17., 19., 18., 20., 33., 35., 34., 36.,
      5.,  7.,  6.,  8.,  21., 23., 22., 24., 37., 39., 38., 40.,
      9.,  11., 10., 12., 25., 27., 26., 28., 41., 43., 42., 44.,
      13., 15., 14., 16., 29., 31., 30., 32., 45., 47., 46., 48.};
  const std::vector<int> sizes = {3, 4, 2, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  17., 18., 33., 34., 3.,  4.,  19., 20., 35., 36.,
      5.,  6.,  21., 22., 37., 38., 7.,  8.,  23., 24., 39., 40.,
      9.,  10., 25., 26., 41., 42., 11., 12., 27., 28., 43., 44.,
      13., 14., 29., 30., 45., 46., 15., 16., 31., 32., 47., 48.};
  const std::vector<int> sizes = {3, 4, 2, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 2.,  18., 34., 3.,  19., 35., 4.,  20., 36.,
      5.,  21., 37., 6.,  22., 38., 7.,  23., 39., 8.,  24., 40.,
      9.,  25., 41., 10., 26., 42., 11., 27., 43., 12., 28., 44.,
      13., 29., 45., 14., 30., 46., 15., 31., 47., 16., 32., 48.};
  const std::vector<int> sizes = {3, 4, 2, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  17., 19., 33., 35., 2.,  4.,  18., 20., 34., 36.,
      5.,  7.,  21., 23., 37., 39., 6.,  8.,  22., 24., 38., 40.,
      9.,  11., 25., 27., 41., 43., 10., 12., 26., 28., 42., 44.,
      13., 15., 29., 31., 45., 47., 14., 16., 30., 32., 46., 48.};
  const std::vector<int> sizes = {3, 4, 2, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 3.,  19., 35., 2.,  18., 34., 4.,  20., 36.,
      5.,  21., 37., 7.,  23., 39., 6.,  22., 38., 8.,  24., 40.,
      9.,  25., 41., 11., 27., 43., 10., 26., 42., 12., 28., 44.,
      13., 29., 45., 15., 31., 47., 14., 30., 46., 16., 32., 48.};
  const std::vector<int> sizes = {3, 4, 2, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  5.,  6.,  9.,  10., 13., 14., 17., 18., 21., 22.,
      25., 26., 29., 30., 33., 34., 37., 38., 41., 42., 45., 46.,
      3.,  4.,  7.,  8.,  11., 12., 15., 16., 19., 20., 23., 24.,
      27., 28., 31., 32., 35., 36., 39., 40., 43., 44., 47., 48.};
  const std::vector<int> sizes = {3, 4, 2, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 2.,  6.,  10., 14., 17., 21., 25., 29.,
      18., 22., 26., 30., 33., 37., 41., 45., 34., 38., 42., 46.,
      3.,  7.,  11., 15., 4.,  8.,  12., 16., 19., 23., 27., 31.,
      20., 24., 28., 32., 35., 39., 43., 47., 36., 40., 44., 48.};
  const std::vector<int> sizes = {3, 4, 2, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  17., 18., 33., 34., 5.,  6.,  21., 22., 37., 38.,
      9.,  10., 25., 26., 41., 42., 13., 14., 29., 30., 45., 46.,
      3.,  4.,  19., 20., 35., 36., 7.,  8.,  23., 24., 39., 40.,
      11., 12., 27., 28., 43., 44., 15., 16., 31., 32., 47., 48.};
  const std::vector<int> sizes = {3, 4, 2, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 2.,  18., 34., 5.,  21., 37., 6.,  22., 38.,
      9.,  25., 41., 10., 26., 42., 13., 29., 45., 14., 30., 46.,
      3.,  19., 35., 4.,  20., 36., 7.,  23., 39., 8.,  24., 40.,
      11., 27., 43., 12., 28., 44., 15., 31., 47., 16., 32., 48.};
  const std::vector<int> sizes = {3, 4, 2, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 5., 9.,  13., 17., 21., 25., 29., 33., 37., 41., 45.,
      2., 6., 10., 14., 18., 22., 26., 30., 34., 38., 42., 46.,
      3., 7., 11., 15., 19., 23., 27., 31., 35., 39., 43., 47.,
      4., 8., 12., 16., 20., 24., 28., 32., 36., 40., 44., 48.};
  const std::vector<int> sizes = {3, 4, 2, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 17., 33., 5., 21., 37., 9.,  25., 41., 13., 29., 45.,
      2., 18., 34., 6., 22., 38., 10., 26., 42., 14., 30., 46.,
      3., 19., 35., 7., 23., 39., 11., 27., 43., 15., 31., 47.,
      4., 20., 36., 8., 24., 40., 12., 28., 44., 16., 32., 48.};
  const std::vector<int> sizes = {3, 4, 2, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23.,
      25., 27., 29., 31., 33., 35., 37., 39., 41., 43., 45., 47.,
      2.,  4.,  6.,  8.,  10., 12., 14., 16., 18., 20., 22., 24.,
      26., 28., 30., 32., 34., 36., 38., 40., 42., 44., 46., 48.};
  const std::vector<int> sizes = {3, 4, 2, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 3.,  7.,  11., 15., 17., 21., 25., 29.,
      19., 23., 27., 31., 33., 37., 41., 45., 35., 39., 43., 47.,
      2.,  6.,  10., 14., 4.,  8.,  12., 16., 18., 22., 26., 30.,
      20., 24., 28., 32., 34., 38., 42., 46., 36., 40., 44., 48.};
  const std::vector<int> sizes = {3, 4, 2, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  17., 19., 33., 35., 5.,  7.,  21., 23., 37., 39.,
      9.,  11., 25., 27., 41., 43., 13., 15., 29., 31., 45., 47.,
      2.,  4.,  18., 20., 34., 36., 6.,  8.,  22., 24., 38., 40.,
      10., 12., 26., 28., 42., 44., 14., 16., 30., 32., 46., 48.};
  const std::vector<int> sizes = {3, 4, 2, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 3.,  19., 35., 5.,  21., 37., 7.,  23., 39.,
      9.,  25., 41., 11., 27., 43., 13., 29., 45., 15., 31., 47.,
      2.,  18., 34., 4.,  20., 36., 6.,  22., 38., 8.,  24., 40.,
      10., 26., 42., 12., 28., 44., 14., 30., 46., 16., 32., 48.};
  const std::vector<int> sizes = {3, 4, 2, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 5., 9.,  13., 17., 21., 25., 29., 33., 37., 41., 45.,
      3., 7., 11., 15., 19., 23., 27., 31., 35., 39., 43., 47.,
      2., 6., 10., 14., 18., 22., 26., 30., 34., 38., 42., 46.,
      4., 8., 12., 16., 20., 24., 28., 32., 36., 40., 44., 48.};
  const std::vector<int> sizes = {3, 4, 2, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 17., 33., 5., 21., 37., 9.,  25., 41., 13., 29., 45.,
      3., 19., 35., 7., 23., 39., 11., 27., 43., 15., 31., 47.,
      2., 18., 34., 6., 22., 38., 10., 26., 42., 14., 30., 46.,
      4., 20., 36., 8., 24., 40., 12., 28., 44., 16., 32., 48.};
  const std::vector<int> sizes = {3, 4, 2, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14., 15.,
      16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 30.,
      31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42., 43., 44., 45.,
      46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56., 57., 58., 59., 60.,
      61., 62., 63., 64., 65., 66., 67., 68., 69., 70., 71., 72.};
  const std::vector<int> sizes = {3, 4, 2, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  2.,  5.,  3.,  6.,  7.,  10., 8.,  11., 9.,  12., 13., 16., 14.,
      17., 15., 18., 19., 22., 20., 23., 21., 24., 25., 28., 26., 29., 27., 30.,
      31., 34., 32., 35., 33., 36., 37., 40., 38., 41., 39., 42., 43., 46., 44.,
      47., 45., 48., 49., 52., 50., 53., 51., 54., 55., 58., 56., 59., 57., 60.,
      61., 64., 62., 65., 63., 66., 67., 70., 68., 71., 69., 72.};
  const std::vector<int> sizes = {3, 4, 2, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  7.,  8.,  9.,  13., 14., 15., 19., 20., 21., 4.,  5.,  6.,
      10., 11., 12., 16., 17., 18., 22., 23., 24., 25., 26., 27., 31., 32., 33.,
      37., 38., 39., 43., 44., 45., 28., 29., 30., 34., 35., 36., 40., 41., 42.,
      46., 47., 48., 49., 50., 51., 55., 56., 57., 61., 62., 63., 67., 68., 69.,
      52., 53., 54., 58., 59., 60., 64., 65., 66., 70., 71., 72.};
  const std::vector<int> sizes = {3, 4, 2, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 2.,  8.,  14., 20., 3.,  9.,  15., 21., 4.,  10., 16.,
      22., 5.,  11., 17., 23., 6.,  12., 18., 24., 25., 31., 37., 43., 26., 32.,
      38., 44., 27., 33., 39., 45., 28., 34., 40., 46., 29., 35., 41., 47., 30.,
      36., 42., 48., 49., 55., 61., 67., 50., 56., 62., 68., 51., 57., 63., 69.,
      52., 58., 64., 70., 53., 59., 65., 71., 54., 60., 66., 72.};
  const std::vector<int> sizes = {3, 4, 2, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 2.,  5.,  8.,  11., 14., 17., 20.,
      23., 3.,  6.,  9.,  12., 15., 18., 21., 24., 25., 28., 31., 34., 37., 40.,
      43., 46., 26., 29., 32., 35., 38., 41., 44., 47., 27., 30., 33., 36., 39.,
      42., 45., 48., 49., 52., 55., 58., 61., 64., 67., 70., 50., 53., 56., 59.,
      62., 65., 68., 71., 51., 54., 57., 60., 63., 66., 69., 72.};
  const std::vector<int> sizes = {3, 4, 2, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 4.,  10., 16., 22., 2.,  8.,  14., 20., 5.,  11., 17.,
      23., 3.,  9.,  15., 21., 6.,  12., 18., 24., 25., 31., 37., 43., 28., 34.,
      40., 46., 26., 32., 38., 44., 29., 35., 41., 47., 27., 33., 39., 45., 30.,
      36., 42., 48., 49., 55., 61., 67., 52., 58., 64., 70., 50., 56., 62., 68.,
      53., 59., 65., 71., 51., 57., 63., 69., 54., 60., 66., 72.};
  const std::vector<int> sizes = {3, 4, 2, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  25., 26., 27., 28., 29., 30., 49., 50., 51.,
      52., 53., 54., 7.,  8.,  9.,  10., 11., 12., 31., 32., 33., 34., 35., 36.,
      55., 56., 57., 58., 59., 60., 13., 14., 15., 16., 17., 18., 37., 38., 39.,
      40., 41., 42., 61., 62., 63., 64., 65., 66., 19., 20., 21., 22., 23., 24.,
      43., 44., 45., 46., 47., 48., 67., 68., 69., 70., 71., 72.};
  const std::vector<int> sizes = {3, 4, 2, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  2.,  5.,  3.,  6.,  25., 28., 26., 29., 27., 30., 49., 52., 50.,
      53., 51., 54., 7.,  10., 8.,  11., 9.,  12., 31., 34., 32., 35., 33., 36.,
      55., 58., 56., 59., 57., 60., 13., 16., 14., 17., 15., 18., 37., 40., 38.,
      41., 39., 42., 61., 64., 62., 65., 63., 66., 19., 22., 20., 23., 21., 24.,
      43., 46., 44., 47., 45., 48., 67., 70., 68., 71., 69., 72.};
  const std::vector<int> sizes = {3, 4, 2, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  25., 26., 27., 49., 50., 51., 4.,  5.,  6.,  28., 29., 30.,
      52., 53., 54., 7.,  8.,  9.,  31., 32., 33., 55., 56., 57., 10., 11., 12.,
      34., 35., 36., 58., 59., 60., 13., 14., 15., 37., 38., 39., 61., 62., 63.,
      16., 17., 18., 40., 41., 42., 64., 65., 66., 19., 20., 21., 43., 44., 45.,
      67., 68., 69., 22., 23., 24., 46., 47., 48., 70., 71., 72.};
  const std::vector<int> sizes = {3, 4, 2, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 2.,  26., 50., 3.,  27., 51., 4.,  28., 52., 5.,  29., 53.,
      6.,  30., 54., 7.,  31., 55., 8.,  32., 56., 9.,  33., 57., 10., 34., 58.,
      11., 35., 59., 12., 36., 60., 13., 37., 61., 14., 38., 62., 15., 39., 63.,
      16., 40., 64., 17., 41., 65., 18., 42., 66., 19., 43., 67., 20., 44., 68.,
      21., 45., 69., 22., 46., 70., 23., 47., 71., 24., 48., 72.};
  const std::vector<int> sizes = {3, 4, 2, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  25., 28., 49., 52., 2.,  5.,  26., 29., 50., 53., 3.,  6.,  27.,
      30., 51., 54., 7.,  10., 31., 34., 55., 58., 8.,  11., 32., 35., 56., 59.,
      9.,  12., 33., 36., 57., 60., 13., 16., 37., 40., 61., 64., 14., 17., 38.,
      41., 62., 65., 15., 18., 39., 42., 63., 66., 19., 22., 43., 46., 67., 70.,
      20., 23., 44., 47., 68., 71., 21., 24., 45., 48., 69., 72.};
  const std::vector<int> sizes = {3, 4, 2, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 4.,  28., 52., 2.,  26., 50., 5.,  29., 53., 3.,  27., 51.,
      6.,  30., 54., 7.,  31., 55., 10., 34., 58., 8.,  32., 56., 11., 35., 59.,
      9.,  33., 57., 12., 36., 60., 13., 37., 61., 16., 40., 64., 14., 38., 62.,
      17., 41., 65., 15., 39., 63., 18., 42., 66., 19., 43., 67., 22., 46., 70.,
      20., 44., 68., 23., 47., 71., 21., 45., 69., 24., 48., 72.};
  const std::vector<int> sizes = {3, 4, 2, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  7.,  8.,  9.,  13., 14., 15., 19., 20., 21., 25., 26., 27.,
      31., 32., 33., 37., 38., 39., 43., 44., 45., 49., 50., 51., 55., 56., 57.,
      61., 62., 63., 67., 68., 69., 4.,  5.,  6.,  10., 11., 12., 16., 17., 18.,
      22., 23., 24., 28., 29., 30., 34., 35., 36., 40., 41., 42., 46., 47., 48.,
      52., 53., 54., 58., 59., 60., 64., 65., 66., 70., 71., 72.};
  const std::vector<int> sizes = {3, 4, 2, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 2.,  8.,  14., 20., 3.,  9.,  15., 21., 25., 31., 37.,
      43., 26., 32., 38., 44., 27., 33., 39., 45., 49., 55., 61., 67., 50., 56.,
      62., 68., 51., 57., 63., 69., 4.,  10., 16., 22., 5.,  11., 17., 23., 6.,
      12., 18., 24., 28., 34., 40., 46., 29., 35., 41., 47., 30., 36., 42., 48.,
      52., 58., 64., 70., 53., 59., 65., 71., 54., 60., 66., 72.};
  const std::vector<int> sizes = {3, 4, 2, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  25., 26., 27., 49., 50., 51., 7.,  8.,  9.,  31., 32., 33.,
      55., 56., 57., 13., 14., 15., 37., 38., 39., 61., 62., 63., 19., 20., 21.,
      43., 44., 45., 67., 68., 69., 4.,  5.,  6.,  28., 29., 30., 52., 53., 54.,
      10., 11., 12., 34., 35., 36., 58., 59., 60., 16., 17., 18., 40., 41., 42.,
      64., 65., 66., 22., 23., 24., 46., 47., 48., 70., 71., 72.};
  const std::vector<int> sizes = {3, 4, 2, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 2.,  26., 50., 3.,  27., 51., 7.,  31., 55., 8.,  32., 56.,
      9.,  33., 57., 13., 37., 61., 14., 38., 62., 15., 39., 63., 19., 43., 67.,
      20., 44., 68., 21., 45., 69., 4.,  28., 52., 5.,  29., 53., 6.,  30., 54.,
      10., 34., 58., 11., 35., 59., 12., 36., 60., 16., 40., 64., 17., 41., 65.,
      18., 42., 66., 22., 46., 70., 23., 47., 71., 24., 48., 72.};
  const std::vector<int> sizes = {3, 4, 2, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 25., 31., 37., 43., 49., 55., 61., 67., 2.,  8.,  14.,
      20., 26., 32., 38., 44., 50., 56., 62., 68., 3.,  9.,  15., 21., 27., 33.,
      39., 45., 51., 57., 63., 69., 4.,  10., 16., 22., 28., 34., 40., 46., 52.,
      58., 64., 70., 5.,  11., 17., 23., 29., 35., 41., 47., 53., 59., 65., 71.,
      6.,  12., 18., 24., 30., 36., 42., 48., 54., 60., 66., 72.};
  const std::vector<int> sizes = {3, 4, 2, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 7.,  31., 55., 13., 37., 61., 19., 43., 67., 2.,  26., 50.,
      8.,  32., 56., 14., 38., 62., 20., 44., 68., 3.,  27., 51., 9.,  33., 57.,
      15., 39., 63., 21., 45., 69., 4.,  28., 52., 10., 34., 58., 16., 40., 64.,
      22., 46., 70., 5.,  29., 53., 11., 35., 59., 17., 41., 65., 23., 47., 71.,
      6.,  30., 54., 12., 36., 60., 18., 42., 66., 24., 48., 72.};
  const std::vector<int> sizes = {3, 4, 2, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 28., 31., 34., 37., 40., 43.,
      46., 49., 52., 55., 58., 61., 64., 67., 70., 2.,  5.,  8.,  11., 14., 17.,
      20., 23., 26., 29., 32., 35., 38., 41., 44., 47., 50., 53., 56., 59., 62.,
      65., 68., 71., 3.,  6.,  9.,  12., 15., 18., 21., 24., 27., 30., 33., 36.,
      39., 42., 45., 48., 51., 54., 57., 60., 63., 66., 69., 72.};
  const std::vector<int> sizes = {3, 4, 2, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 4.,  10., 16., 22., 25., 31., 37., 43., 28., 34., 40.,
      46., 49., 55., 61., 67., 52., 58., 64., 70., 2.,  8.,  14., 20., 5.,  11.,
      17., 23., 26., 32., 38., 44., 29., 35., 41., 47., 50., 56., 62., 68., 53.,
      59., 65., 71., 3.,  9.,  15., 21., 6.,  12., 18., 24., 27., 33., 39., 45.,
      30., 36., 42., 48., 51., 57., 63., 69., 54., 60., 66., 72.};
  const std::vector<int> sizes = {3, 4, 2, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  25., 28., 49., 52., 7.,  10., 31., 34., 55., 58., 13., 16., 37.,
      40., 61., 64., 19., 22., 43., 46., 67., 70., 2.,  5.,  26., 29., 50., 53.,
      8.,  11., 32., 35., 56., 59., 14., 17., 38., 41., 62., 65., 20., 23., 44.,
      47., 68., 71., 3.,  6.,  27., 30., 51., 54., 9.,  12., 33., 36., 57., 60.,
      15., 18., 39., 42., 63., 66., 21., 24., 45., 48., 69., 72.};
  const std::vector<int> sizes = {3, 4, 2, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 4.,  28., 52., 7.,  31., 55., 10., 34., 58., 13., 37., 61.,
      16., 40., 64., 19., 43., 67., 22., 46., 70., 2.,  26., 50., 5.,  29., 53.,
      8.,  32., 56., 11., 35., 59., 14., 38., 62., 17., 41., 65., 20., 44., 68.,
      23., 47., 71., 3.,  27., 51., 6.,  30., 54., 9.,  33., 57., 12., 36., 60.,
      15., 39., 63., 18., 42., 66., 21., 45., 69., 24., 48., 72.};
  const std::vector<int> sizes = {3, 4, 2, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 25., 31., 37., 43., 49., 55., 61., 67., 4.,  10., 16.,
      22., 28., 34., 40., 46., 52., 58., 64., 70., 2.,  8.,  14., 20., 26., 32.,
      38., 44., 50., 56., 62., 68., 5.,  11., 17., 23., 29., 35., 41., 47., 53.,
      59., 65., 71., 3.,  9.,  15., 21., 27., 33., 39., 45., 51., 57., 63., 69.,
      6.,  12., 18., 24., 30., 36., 42., 48., 54., 60., 66., 72.};
  const std::vector<int> sizes = {3, 4, 2, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 7.,  31., 55., 13., 37., 61., 19., 43., 67., 4.,  28., 52.,
      10., 34., 58., 16., 40., 64., 22., 46., 70., 2.,  26., 50., 8.,  32., 56.,
      14., 38., 62., 20., 44., 68., 5.,  29., 53., 11., 35., 59., 17., 41., 65.,
      23., 47., 71., 3.,  27., 51., 9.,  33., 57., 15., 39., 63., 21., 45., 69.,
      6.,  30., 54., 12., 36., 60., 18., 42., 66., 24., 48., 72.};
  const std::vector<int> sizes = {3, 4, 2, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14.,
      15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28.,
      29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42.,
      43., 44., 45., 46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56.,
      57., 58., 59., 60., 61., 62., 63., 64., 65., 66., 67., 68., 69., 70.,
      71., 72., 73., 74., 75., 76., 77., 78., 79., 80., 81., 82., 83., 84.,
      85., 86., 87., 88., 89., 90., 91., 92., 93., 94., 95., 96.};
  const std::vector<int> sizes = {3, 4, 2, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  2.,  6.,  3.,  7.,  4.,  8.,  9.,  13., 10., 14., 11., 15.,
      12., 16., 17., 21., 18., 22., 19., 23., 20., 24., 25., 29., 26., 30.,
      27., 31., 28., 32., 33., 37., 34., 38., 35., 39., 36., 40., 41., 45.,
      42., 46., 43., 47., 44., 48., 49., 53., 50., 54., 51., 55., 52., 56.,
      57., 61., 58., 62., 59., 63., 60., 64., 65., 69., 66., 70., 67., 71.,
      68., 72., 73., 77., 74., 78., 75., 79., 76., 80., 81., 85., 82., 86.,
      83., 87., 84., 88., 89., 93., 90., 94., 91., 95., 92., 96.};
  const std::vector<int> sizes = {3, 4, 2, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  9.,  10., 11., 12., 17., 18., 19., 20., 25., 26.,
      27., 28., 5.,  6.,  7.,  8.,  13., 14., 15., 16., 21., 22., 23., 24.,
      29., 30., 31., 32., 33., 34., 35., 36., 41., 42., 43., 44., 49., 50.,
      51., 52., 57., 58., 59., 60., 37., 38., 39., 40., 45., 46., 47., 48.,
      53., 54., 55., 56., 61., 62., 63., 64., 65., 66., 67., 68., 73., 74.,
      75., 76., 81., 82., 83., 84., 89., 90., 91., 92., 69., 70., 71., 72.,
      77., 78., 79., 80., 85., 86., 87., 88., 93., 94., 95., 96.};
  const std::vector<int> sizes = {3, 4, 2, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 2.,  10., 18., 26., 3.,  11., 19., 27., 4.,  12.,
      20., 28., 5.,  13., 21., 29., 6.,  14., 22., 30., 7.,  15., 23., 31.,
      8.,  16., 24., 32., 33., 41., 49., 57., 34., 42., 50., 58., 35., 43.,
      51., 59., 36., 44., 52., 60., 37., 45., 53., 61., 38., 46., 54., 62.,
      39., 47., 55., 63., 40., 48., 56., 64., 65., 73., 81., 89., 66., 74.,
      82., 90., 67., 75., 83., 91., 68., 76., 84., 92., 69., 77., 85., 93.,
      70., 78., 86., 94., 71., 79., 87., 95., 72., 80., 88., 96.};
  const std::vector<int> sizes = {3, 4, 2, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 25., 29., 2.,  6.,  10., 14., 18., 22.,
      26., 30., 3.,  7.,  11., 15., 19., 23., 27., 31., 4.,  8.,  12., 16.,
      20., 24., 28., 32., 33., 37., 41., 45., 49., 53., 57., 61., 34., 38.,
      42., 46., 50., 54., 58., 62., 35., 39., 43., 47., 51., 55., 59., 63.,
      36., 40., 44., 48., 52., 56., 60., 64., 65., 69., 73., 77., 81., 85.,
      89., 93., 66., 70., 74., 78., 82., 86., 90., 94., 67., 71., 75., 79.,
      83., 87., 91., 95., 68., 72., 76., 80., 84., 88., 92., 96.};
  const std::vector<int> sizes = {3, 4, 2, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 5.,  13., 21., 29., 2.,  10., 18., 26., 6.,  14.,
      22., 30., 3.,  11., 19., 27., 7.,  15., 23., 31., 4.,  12., 20., 28.,
      8.,  16., 24., 32., 33., 41., 49., 57., 37., 45., 53., 61., 34., 42.,
      50., 58., 38., 46., 54., 62., 35., 43., 51., 59., 39., 47., 55., 63.,
      36., 44., 52., 60., 40., 48., 56., 64., 65., 73., 81., 89., 69., 77.,
      85., 93., 66., 74., 82., 90., 70., 78., 86., 94., 67., 75., 83., 91.,
      71., 79., 87., 95., 68., 76., 84., 92., 72., 80., 88., 96.};
  const std::vector<int> sizes = {3, 4, 2, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  33., 34., 35., 36., 37., 38.,
      39., 40., 65., 66., 67., 68., 69., 70., 71., 72., 9.,  10., 11., 12.,
      13., 14., 15., 16., 41., 42., 43., 44., 45., 46., 47., 48., 73., 74.,
      75., 76., 77., 78., 79., 80., 17., 18., 19., 20., 21., 22., 23., 24.,
      49., 50., 51., 52., 53., 54., 55., 56., 81., 82., 83., 84., 85., 86.,
      87., 88., 25., 26., 27., 28., 29., 30., 31., 32., 57., 58., 59., 60.,
      61., 62., 63., 64., 89., 90., 91., 92., 93., 94., 95., 96.};
  const std::vector<int> sizes = {3, 4, 2, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  2.,  6.,  3.,  7.,  4.,  8.,  33., 37., 34., 38., 35., 39.,
      36., 40., 65., 69., 66., 70., 67., 71., 68., 72., 9.,  13., 10., 14.,
      11., 15., 12., 16., 41., 45., 42., 46., 43., 47., 44., 48., 73., 77.,
      74., 78., 75., 79., 76., 80., 17., 21., 18., 22., 19., 23., 20., 24.,
      49., 53., 50., 54., 51., 55., 52., 56., 81., 85., 82., 86., 83., 87.,
      84., 88., 25., 29., 26., 30., 27., 31., 28., 32., 57., 61., 58., 62.,
      59., 63., 60., 64., 89., 93., 90., 94., 91., 95., 92., 96.};
  const std::vector<int> sizes = {3, 4, 2, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  33., 34., 35., 36., 65., 66., 67., 68., 5.,  6.,
      7.,  8.,  37., 38., 39., 40., 69., 70., 71., 72., 9.,  10., 11., 12.,
      41., 42., 43., 44., 73., 74., 75., 76., 13., 14., 15., 16., 45., 46.,
      47., 48., 77., 78., 79., 80., 17., 18., 19., 20., 49., 50., 51., 52.,
      81., 82., 83., 84., 21., 22., 23., 24., 53., 54., 55., 56., 85., 86.,
      87., 88., 25., 26., 27., 28., 57., 58., 59., 60., 89., 90., 91., 92.,
      29., 30., 31., 32., 61., 62., 63., 64., 93., 94., 95., 96.};
  const std::vector<int> sizes = {3, 4, 2, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 2.,  34., 66., 3.,  35., 67., 4.,  36., 68., 5.,  37.,
      69., 6.,  38., 70., 7.,  39., 71., 8.,  40., 72., 9.,  41., 73., 10.,
      42., 74., 11., 43., 75., 12., 44., 76., 13., 45., 77., 14., 46., 78.,
      15., 47., 79., 16., 48., 80., 17., 49., 81., 18., 50., 82., 19., 51.,
      83., 20., 52., 84., 21., 53., 85., 22., 54., 86., 23., 55., 87., 24.,
      56., 88., 25., 57., 89., 26., 58., 90., 27., 59., 91., 28., 60., 92.,
      29., 61., 93., 30., 62., 94., 31., 63., 95., 32., 64., 96.};
  const std::vector<int> sizes = {3, 4, 2, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  33., 37., 65., 69., 2.,  6.,  34., 38., 66., 70., 3.,  7.,
      35., 39., 67., 71., 4.,  8.,  36., 40., 68., 72., 9.,  13., 41., 45.,
      73., 77., 10., 14., 42., 46., 74., 78., 11., 15., 43., 47., 75., 79.,
      12., 16., 44., 48., 76., 80., 17., 21., 49., 53., 81., 85., 18., 22.,
      50., 54., 82., 86., 19., 23., 51., 55., 83., 87., 20., 24., 52., 56.,
      84., 88., 25., 29., 57., 61., 89., 93., 26., 30., 58., 62., 90., 94.,
      27., 31., 59., 63., 91., 95., 28., 32., 60., 64., 92., 96.};
  const std::vector<int> sizes = {3, 4, 2, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 5.,  37., 69., 2.,  34., 66., 6.,  38., 70., 3.,  35.,
      67., 7.,  39., 71., 4.,  36., 68., 8.,  40., 72., 9.,  41., 73., 13.,
      45., 77., 10., 42., 74., 14., 46., 78., 11., 43., 75., 15., 47., 79.,
      12., 44., 76., 16., 48., 80., 17., 49., 81., 21., 53., 85., 18., 50.,
      82., 22., 54., 86., 19., 51., 83., 23., 55., 87., 20., 52., 84., 24.,
      56., 88., 25., 57., 89., 29., 61., 93., 26., 58., 90., 30., 62., 94.,
      27., 59., 91., 31., 63., 95., 28., 60., 92., 32., 64., 96.};
  const std::vector<int> sizes = {3, 4, 2, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  9.,  10., 11., 12., 17., 18., 19., 20., 25., 26.,
      27., 28., 33., 34., 35., 36., 41., 42., 43., 44., 49., 50., 51., 52.,
      57., 58., 59., 60., 65., 66., 67., 68., 73., 74., 75., 76., 81., 82.,
      83., 84., 89., 90., 91., 92., 5.,  6.,  7.,  8.,  13., 14., 15., 16.,
      21., 22., 23., 24., 29., 30., 31., 32., 37., 38., 39., 40., 45., 46.,
      47., 48., 53., 54., 55., 56., 61., 62., 63., 64., 69., 70., 71., 72.,
      77., 78., 79., 80., 85., 86., 87., 88., 93., 94., 95., 96.};
  const std::vector<int> sizes = {3, 4, 2, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 2.,  10., 18., 26., 3.,  11., 19., 27., 4.,  12.,
      20., 28., 33., 41., 49., 57., 34., 42., 50., 58., 35., 43., 51., 59.,
      36., 44., 52., 60., 65., 73., 81., 89., 66., 74., 82., 90., 67., 75.,
      83., 91., 68., 76., 84., 92., 5.,  13., 21., 29., 6.,  14., 22., 30.,
      7.,  15., 23., 31., 8.,  16., 24., 32., 37., 45., 53., 61., 38., 46.,
      54., 62., 39., 47., 55., 63., 40., 48., 56., 64., 69., 77., 85., 93.,
      70., 78., 86., 94., 71., 79., 87., 95., 72., 80., 88., 96.};
  const std::vector<int> sizes = {3, 4, 2, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  33., 34., 35., 36., 65., 66., 67., 68., 9.,  10.,
      11., 12., 41., 42., 43., 44., 73., 74., 75., 76., 17., 18., 19., 20.,
      49., 50., 51., 52., 81., 82., 83., 84., 25., 26., 27., 28., 57., 58.,
      59., 60., 89., 90., 91., 92., 5.,  6.,  7.,  8.,  37., 38., 39., 40.,
      69., 70., 71., 72., 13., 14., 15., 16., 45., 46., 47., 48., 77., 78.,
      79., 80., 21., 22., 23., 24., 53., 54., 55., 56., 85., 86., 87., 88.,
      29., 30., 31., 32., 61., 62., 63., 64., 93., 94., 95., 96.};
  const std::vector<int> sizes = {3, 4, 2, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 2.,  34., 66., 3.,  35., 67., 4.,  36., 68., 9.,  41.,
      73., 10., 42., 74., 11., 43., 75., 12., 44., 76., 17., 49., 81., 18.,
      50., 82., 19., 51., 83., 20., 52., 84., 25., 57., 89., 26., 58., 90.,
      27., 59., 91., 28., 60., 92., 5.,  37., 69., 6.,  38., 70., 7.,  39.,
      71., 8.,  40., 72., 13., 45., 77., 14., 46., 78., 15., 47., 79., 16.,
      48., 80., 21., 53., 85., 22., 54., 86., 23., 55., 87., 24., 56., 88.,
      29., 61., 93., 30., 62., 94., 31., 63., 95., 32., 64., 96.};
  const std::vector<int> sizes = {3, 4, 2, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 33., 41., 49., 57., 65., 73., 81., 89., 2.,  10.,
      18., 26., 34., 42., 50., 58., 66., 74., 82., 90., 3.,  11., 19., 27.,
      35., 43., 51., 59., 67., 75., 83., 91., 4.,  12., 20., 28., 36., 44.,
      52., 60., 68., 76., 84., 92., 5.,  13., 21., 29., 37., 45., 53., 61.,
      69., 77., 85., 93., 6.,  14., 22., 30., 38., 46., 54., 62., 70., 78.,
      86., 94., 7.,  15., 23., 31., 39., 47., 55., 63., 71., 79., 87., 95.,
      8.,  16., 24., 32., 40., 48., 56., 64., 72., 80., 88., 96.};
  const std::vector<int> sizes = {3, 4, 2, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 9.,  41., 73., 17., 49., 81., 25., 57., 89., 2.,  34.,
      66., 10., 42., 74., 18., 50., 82., 26., 58., 90., 3.,  35., 67., 11.,
      43., 75., 19., 51., 83., 27., 59., 91., 4.,  36., 68., 12., 44., 76.,
      20., 52., 84., 28., 60., 92., 5.,  37., 69., 13., 45., 77., 21., 53.,
      85., 29., 61., 93., 6.,  38., 70., 14., 46., 78., 22., 54., 86., 30.,
      62., 94., 7.,  39., 71., 15., 47., 79., 23., 55., 87., 31., 63., 95.,
      8.,  40., 72., 16., 48., 80., 24., 56., 88., 32., 64., 96.};
  const std::vector<int> sizes = {3, 4, 2, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 25., 29., 33., 37., 41., 45., 49., 53.,
      57., 61., 65., 69., 73., 77., 81., 85., 89., 93., 2.,  6.,  10., 14.,
      18., 22., 26., 30., 34., 38., 42., 46., 50., 54., 58., 62., 66., 70.,
      74., 78., 82., 86., 90., 94., 3.,  7.,  11., 15., 19., 23., 27., 31.,
      35., 39., 43., 47., 51., 55., 59., 63., 67., 71., 75., 79., 83., 87.,
      91., 95., 4.,  8.,  12., 16., 20., 24., 28., 32., 36., 40., 44., 48.,
      52., 56., 60., 64., 68., 72., 76., 80., 84., 88., 92., 96.};
  const std::vector<int> sizes = {3, 4, 2, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 5.,  13., 21., 29., 33., 41., 49., 57., 37., 45.,
      53., 61., 65., 73., 81., 89., 69., 77., 85., 93., 2.,  10., 18., 26.,
      6.,  14., 22., 30., 34., 42., 50., 58., 38., 46., 54., 62., 66., 74.,
      82., 90., 70., 78., 86., 94., 3.,  11., 19., 27., 7.,  15., 23., 31.,
      35., 43., 51., 59., 39., 47., 55., 63., 67., 75., 83., 91., 71., 79.,
      87., 95., 4.,  12., 20., 28., 8.,  16., 24., 32., 36., 44., 52., 60.,
      40., 48., 56., 64., 68., 76., 84., 92., 72., 80., 88., 96.};
  const std::vector<int> sizes = {3, 4, 2, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  33., 37., 65., 69., 9.,  13., 41., 45., 73., 77., 17., 21.,
      49., 53., 81., 85., 25., 29., 57., 61., 89., 93., 2.,  6.,  34., 38.,
      66., 70., 10., 14., 42., 46., 74., 78., 18., 22., 50., 54., 82., 86.,
      26., 30., 58., 62., 90., 94., 3.,  7.,  35., 39., 67., 71., 11., 15.,
      43., 47., 75., 79., 19., 23., 51., 55., 83., 87., 27., 31., 59., 63.,
      91., 95., 4.,  8.,  36., 40., 68., 72., 12., 16., 44., 48., 76., 80.,
      20., 24., 52., 56., 84., 88., 28., 32., 60., 64., 92., 96.};
  const std::vector<int> sizes = {3, 4, 2, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 5.,  37., 69., 9.,  41., 73., 13., 45., 77., 17., 49.,
      81., 21., 53., 85., 25., 57., 89., 29., 61., 93., 2.,  34., 66., 6.,
      38., 70., 10., 42., 74., 14., 46., 78., 18., 50., 82., 22., 54., 86.,
      26., 58., 90., 30., 62., 94., 3.,  35., 67., 7.,  39., 71., 11., 43.,
      75., 15., 47., 79., 19., 51., 83., 23., 55., 87., 27., 59., 91., 31.,
      63., 95., 4.,  36., 68., 8.,  40., 72., 12., 44., 76., 16., 48., 80.,
      20., 52., 84., 24., 56., 88., 28., 60., 92., 32., 64., 96.};
  const std::vector<int> sizes = {3, 4, 2, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 33., 41., 49., 57., 65., 73., 81., 89., 5.,  13.,
      21., 29., 37., 45., 53., 61., 69., 77., 85., 93., 2.,  10., 18., 26.,
      34., 42., 50., 58., 66., 74., 82., 90., 6.,  14., 22., 30., 38., 46.,
      54., 62., 70., 78., 86., 94., 3.,  11., 19., 27., 35., 43., 51., 59.,
      67., 75., 83., 91., 7.,  15., 23., 31., 39., 47., 55., 63., 71., 79.,
      87., 95., 4.,  12., 20., 28., 36., 44., 52., 60., 68., 76., 84., 92.,
      8.,  16., 24., 32., 40., 48., 56., 64., 72., 80., 88., 96.};
  const std::vector<int> sizes = {3, 4, 2, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x2x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 9.,  41., 73., 17., 49., 81., 25., 57., 89., 5.,  37.,
      69., 13., 45., 77., 21., 53., 85., 29., 61., 93., 2.,  34., 66., 10.,
      42., 74., 18., 50., 82., 26., 58., 90., 6.,  38., 70., 14., 46., 78.,
      22., 54., 86., 30., 62., 94., 3.,  35., 67., 11., 43., 75., 19., 51.,
      83., 27., 59., 91., 7.,  39., 71., 15., 47., 79., 23., 55., 87., 31.,
      63., 95., 4.,  36., 68., 12., 44., 76., 20., 52., 84., 28., 60., 92.,
      8.,  40., 72., 16., 48., 80., 24., 56., 88., 32., 64., 96.};
  const std::vector<int> sizes = {3, 4, 2, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14., 15.,
      16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 30.,
      31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42., 43., 44., 45.,
      46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56., 57., 58., 59., 60.,
      61., 62., 63., 64., 65., 66., 67., 68., 69., 70., 71., 72.};
  const std::vector<int> sizes = {3, 4, 3, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  2.,  4.,  6.,  7.,  9.,  11., 8.,  10., 12., 13., 15., 17.,
      14., 16., 18., 19., 21., 23., 20., 22., 24., 25., 27., 29., 26., 28., 30.,
      31., 33., 35., 32., 34., 36., 37., 39., 41., 38., 40., 42., 43., 45., 47.,
      44., 46., 48., 49., 51., 53., 50., 52., 54., 55., 57., 59., 56., 58., 60.,
      61., 63., 65., 62., 64., 66., 67., 69., 71., 68., 70., 72.};
  const std::vector<int> sizes = {3, 4, 3, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  7.,  8.,  13., 14., 19., 20., 3.,  4.,  9.,  10., 15., 16., 21.,
      22., 5.,  6.,  11., 12., 17., 18., 23., 24., 25., 26., 31., 32., 37., 38.,
      43., 44., 27., 28., 33., 34., 39., 40., 45., 46., 29., 30., 35., 36., 41.,
      42., 47., 48., 49., 50., 55., 56., 61., 62., 67., 68., 51., 52., 57., 58.,
      63., 64., 69., 70., 53., 54., 59., 60., 65., 66., 71., 72.};
  const std::vector<int> sizes = {3, 4, 3, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 2.,  8.,  14., 20., 3.,  9.,  15., 21., 4.,  10., 16.,
      22., 5.,  11., 17., 23., 6.,  12., 18., 24., 25., 31., 37., 43., 26., 32.,
      38., 44., 27., 33., 39., 45., 28., 34., 40., 46., 29., 35., 41., 47., 30.,
      36., 42., 48., 49., 55., 61., 67., 50., 56., 62., 68., 51., 57., 63., 69.,
      52., 58., 64., 70., 53., 59., 65., 71., 54., 60., 66., 72.};
  const std::vector<int> sizes = {3, 4, 3, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23., 2.,  4.,  6.,
      8.,  10., 12., 14., 16., 18., 20., 22., 24., 25., 27., 29., 31., 33., 35.,
      37., 39., 41., 43., 45., 47., 26., 28., 30., 32., 34., 36., 38., 40., 42.,
      44., 46., 48., 49., 51., 53., 55., 57., 59., 61., 63., 65., 67., 69., 71.,
      50., 52., 54., 56., 58., 60., 62., 64., 66., 68., 70., 72.};
  const std::vector<int> sizes = {3, 4, 3, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 3.,  9.,  15., 21., 5.,  11., 17., 23., 2.,  8.,  14.,
      20., 4.,  10., 16., 22., 6.,  12., 18., 24., 25., 31., 37., 43., 27., 33.,
      39., 45., 29., 35., 41., 47., 26., 32., 38., 44., 28., 34., 40., 46., 30.,
      36., 42., 48., 49., 55., 61., 67., 51., 57., 63., 69., 53., 59., 65., 71.,
      50., 56., 62., 68., 52., 58., 64., 70., 54., 60., 66., 72.};
  const std::vector<int> sizes = {3, 4, 3, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  25., 26., 27., 28., 29., 30., 49., 50., 51.,
      52., 53., 54., 7.,  8.,  9.,  10., 11., 12., 31., 32., 33., 34., 35., 36.,
      55., 56., 57., 58., 59., 60., 13., 14., 15., 16., 17., 18., 37., 38., 39.,
      40., 41., 42., 61., 62., 63., 64., 65., 66., 19., 20., 21., 22., 23., 24.,
      43., 44., 45., 46., 47., 48., 67., 68., 69., 70., 71., 72.};
  const std::vector<int> sizes = {3, 4, 3, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  2.,  4.,  6.,  25., 27., 29., 26., 28., 30., 49., 51., 53.,
      50., 52., 54., 7.,  9.,  11., 8.,  10., 12., 31., 33., 35., 32., 34., 36.,
      55., 57., 59., 56., 58., 60., 13., 15., 17., 14., 16., 18., 37., 39., 41.,
      38., 40., 42., 61., 63., 65., 62., 64., 66., 19., 21., 23., 20., 22., 24.,
      43., 45., 47., 44., 46., 48., 67., 69., 71., 68., 70., 72.};
  const std::vector<int> sizes = {3, 4, 3, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  25., 26., 49., 50., 3.,  4.,  27., 28., 51., 52., 5.,  6.,  29.,
      30., 53., 54., 7.,  8.,  31., 32., 55., 56., 9.,  10., 33., 34., 57., 58.,
      11., 12., 35., 36., 59., 60., 13., 14., 37., 38., 61., 62., 15., 16., 39.,
      40., 63., 64., 17., 18., 41., 42., 65., 66., 19., 20., 43., 44., 67., 68.,
      21., 22., 45., 46., 69., 70., 23., 24., 47., 48., 71., 72.};
  const std::vector<int> sizes = {3, 4, 3, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 2.,  26., 50., 3.,  27., 51., 4.,  28., 52., 5.,  29., 53.,
      6.,  30., 54., 7.,  31., 55., 8.,  32., 56., 9.,  33., 57., 10., 34., 58.,
      11., 35., 59., 12., 36., 60., 13., 37., 61., 14., 38., 62., 15., 39., 63.,
      16., 40., 64., 17., 41., 65., 18., 42., 66., 19., 43., 67., 20., 44., 68.,
      21., 45., 69., 22., 46., 70., 23., 47., 71., 24., 48., 72.};
  const std::vector<int> sizes = {3, 4, 3, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  25., 27., 29., 49., 51., 53., 2.,  4.,  6.,  26., 28., 30.,
      50., 52., 54., 7.,  9.,  11., 31., 33., 35., 55., 57., 59., 8.,  10., 12.,
      32., 34., 36., 56., 58., 60., 13., 15., 17., 37., 39., 41., 61., 63., 65.,
      14., 16., 18., 38., 40., 42., 62., 64., 66., 19., 21., 23., 43., 45., 47.,
      67., 69., 71., 20., 22., 24., 44., 46., 48., 68., 70., 72.};
  const std::vector<int> sizes = {3, 4, 3, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 3.,  27., 51., 5.,  29., 53., 2.,  26., 50., 4.,  28., 52.,
      6.,  30., 54., 7.,  31., 55., 9.,  33., 57., 11., 35., 59., 8.,  32., 56.,
      10., 34., 58., 12., 36., 60., 13., 37., 61., 15., 39., 63., 17., 41., 65.,
      14., 38., 62., 16., 40., 64., 18., 42., 66., 19., 43., 67., 21., 45., 69.,
      23., 47., 71., 20., 44., 68., 22., 46., 70., 24., 48., 72.};
  const std::vector<int> sizes = {3, 4, 3, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  7.,  8.,  13., 14., 19., 20., 25., 26., 31., 32., 37., 38., 43.,
      44., 49., 50., 55., 56., 61., 62., 67., 68., 3.,  4.,  9.,  10., 15., 16.,
      21., 22., 27., 28., 33., 34., 39., 40., 45., 46., 51., 52., 57., 58., 63.,
      64., 69., 70., 5.,  6.,  11., 12., 17., 18., 23., 24., 29., 30., 35., 36.,
      41., 42., 47., 48., 53., 54., 59., 60., 65., 66., 71., 72.};
  const std::vector<int> sizes = {3, 4, 3, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 2.,  8.,  14., 20., 25., 31., 37., 43., 26., 32., 38.,
      44., 49., 55., 61., 67., 50., 56., 62., 68., 3.,  9.,  15., 21., 4.,  10.,
      16., 22., 27., 33., 39., 45., 28., 34., 40., 46., 51., 57., 63., 69., 52.,
      58., 64., 70., 5.,  11., 17., 23., 6.,  12., 18., 24., 29., 35., 41., 47.,
      30., 36., 42., 48., 53., 59., 65., 71., 54., 60., 66., 72.};
  const std::vector<int> sizes = {3, 4, 3, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  25., 26., 49., 50., 7.,  8.,  31., 32., 55., 56., 13., 14., 37.,
      38., 61., 62., 19., 20., 43., 44., 67., 68., 3.,  4.,  27., 28., 51., 52.,
      9.,  10., 33., 34., 57., 58., 15., 16., 39., 40., 63., 64., 21., 22., 45.,
      46., 69., 70., 5.,  6.,  29., 30., 53., 54., 11., 12., 35., 36., 59., 60.,
      17., 18., 41., 42., 65., 66., 23., 24., 47., 48., 71., 72.};
  const std::vector<int> sizes = {3, 4, 3, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 2.,  26., 50., 7.,  31., 55., 8.,  32., 56., 13., 37., 61.,
      14., 38., 62., 19., 43., 67., 20., 44., 68., 3.,  27., 51., 4.,  28., 52.,
      9.,  33., 57., 10., 34., 58., 15., 39., 63., 16., 40., 64., 21., 45., 69.,
      22., 46., 70., 5.,  29., 53., 6.,  30., 54., 11., 35., 59., 12., 36., 60.,
      17., 41., 65., 18., 42., 66., 23., 47., 71., 24., 48., 72.};
  const std::vector<int> sizes = {3, 4, 3, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 25., 31., 37., 43., 49., 55., 61., 67., 2.,  8.,  14.,
      20., 26., 32., 38., 44., 50., 56., 62., 68., 3.,  9.,  15., 21., 27., 33.,
      39., 45., 51., 57., 63., 69., 4.,  10., 16., 22., 28., 34., 40., 46., 52.,
      58., 64., 70., 5.,  11., 17., 23., 29., 35., 41., 47., 53., 59., 65., 71.,
      6.,  12., 18., 24., 30., 36., 42., 48., 54., 60., 66., 72.};
  const std::vector<int> sizes = {3, 4, 3, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 7.,  31., 55., 13., 37., 61., 19., 43., 67., 2.,  26., 50.,
      8.,  32., 56., 14., 38., 62., 20., 44., 68., 3.,  27., 51., 9.,  33., 57.,
      15., 39., 63., 21., 45., 69., 4.,  28., 52., 10., 34., 58., 16., 40., 64.,
      22., 46., 70., 5.,  29., 53., 11., 35., 59., 17., 41., 65., 23., 47., 71.,
      6.,  30., 54., 12., 36., 60., 18., 42., 66., 24., 48., 72.};
  const std::vector<int> sizes = {3, 4, 3, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23., 25., 27., 29.,
      31., 33., 35., 37., 39., 41., 43., 45., 47., 49., 51., 53., 55., 57., 59.,
      61., 63., 65., 67., 69., 71., 2.,  4.,  6.,  8.,  10., 12., 14., 16., 18.,
      20., 22., 24., 26., 28., 30., 32., 34., 36., 38., 40., 42., 44., 46., 48.,
      50., 52., 54., 56., 58., 60., 62., 64., 66., 68., 70., 72.};
  const std::vector<int> sizes = {3, 4, 3, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 3.,  9.,  15., 21., 5.,  11., 17., 23., 25., 31., 37.,
      43., 27., 33., 39., 45., 29., 35., 41., 47., 49., 55., 61., 67., 51., 57.,
      63., 69., 53., 59., 65., 71., 2.,  8.,  14., 20., 4.,  10., 16., 22., 6.,
      12., 18., 24., 26., 32., 38., 44., 28., 34., 40., 46., 30., 36., 42., 48.,
      50., 56., 62., 68., 52., 58., 64., 70., 54., 60., 66., 72.};
  const std::vector<int> sizes = {3, 4, 3, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  25., 27., 29., 49., 51., 53., 7.,  9.,  11., 31., 33., 35.,
      55., 57., 59., 13., 15., 17., 37., 39., 41., 61., 63., 65., 19., 21., 23.,
      43., 45., 47., 67., 69., 71., 2.,  4.,  6.,  26., 28., 30., 50., 52., 54.,
      8.,  10., 12., 32., 34., 36., 56., 58., 60., 14., 16., 18., 38., 40., 42.,
      62., 64., 66., 20., 22., 24., 44., 46., 48., 68., 70., 72.};
  const std::vector<int> sizes = {3, 4, 3, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 3.,  27., 51., 5.,  29., 53., 7.,  31., 55., 9.,  33., 57.,
      11., 35., 59., 13., 37., 61., 15., 39., 63., 17., 41., 65., 19., 43., 67.,
      21., 45., 69., 23., 47., 71., 2.,  26., 50., 4.,  28., 52., 6.,  30., 54.,
      8.,  32., 56., 10., 34., 58., 12., 36., 60., 14., 38., 62., 16., 40., 64.,
      18., 42., 66., 20., 44., 68., 22., 46., 70., 24., 48., 72.};
  const std::vector<int> sizes = {3, 4, 3, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 25., 31., 37., 43., 49., 55., 61., 67., 3.,  9.,  15.,
      21., 27., 33., 39., 45., 51., 57., 63., 69., 5.,  11., 17., 23., 29., 35.,
      41., 47., 53., 59., 65., 71., 2.,  8.,  14., 20., 26., 32., 38., 44., 50.,
      56., 62., 68., 4.,  10., 16., 22., 28., 34., 40., 46., 52., 58., 64., 70.,
      6.,  12., 18., 24., 30., 36., 42., 48., 54., 60., 66., 72.};
  const std::vector<int> sizes = {3, 4, 3, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 7.,  31., 55., 13., 37., 61., 19., 43., 67., 3.,  27., 51.,
      9.,  33., 57., 15., 39., 63., 21., 45., 69., 5.,  29., 53., 11., 35., 59.,
      17., 41., 65., 23., 47., 71., 2.,  26., 50., 8.,  32., 56., 14., 38., 62.,
      20., 44., 68., 4.,  28., 52., 10., 34., 58., 16., 40., 64., 22., 46., 70.,
      6.,  30., 54., 12., 36., 60., 18., 42., 66., 24., 48., 72.};
  const std::vector<int> sizes = {3, 4, 3, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13., 14., 15., 16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      25., 26., 27., 28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      37., 38., 39., 40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      49., 50., 51., 52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      61., 62., 63., 64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      73., 74., 75., 76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      85., 86., 87., 88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      97., 98., 99., 100., 101., 102., 103., 104., 105., 106., 107., 108.};
  const std::vector<int> sizes = {3, 4, 3, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  2.,   5.,   8.,   3.,   6.,   9.,   10.,  13.,  16.,
      11., 14., 17., 12.,  15.,  18.,  19.,  22.,  25.,  20.,  23.,  26.,
      21., 24., 27., 28.,  31.,  34.,  29.,  32.,  35.,  30.,  33.,  36.,
      37., 40., 43., 38.,  41.,  44.,  39.,  42.,  45.,  46.,  49.,  52.,
      47., 50., 53., 48.,  51.,  54.,  55.,  58.,  61.,  56.,  59.,  62.,
      57., 60., 63., 64.,  67.,  70.,  65.,  68.,  71.,  66.,  69.,  72.,
      73., 76., 79., 74.,  77.,  80.,  75.,  78.,  81.,  82.,  85.,  88.,
      83., 86., 89., 84.,  87.,  90.,  91.,  94.,  97.,  92.,  95.,  98.,
      93., 96., 99., 100., 103., 106., 101., 104., 107., 102., 105., 108.};
  const std::vector<int> sizes = {3, 4, 3, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  10., 11., 12., 19., 20., 21., 28.,  29.,  30.,
      4.,  5.,  6.,  13., 14., 15., 22., 23., 24., 31.,  32.,  33.,
      7.,  8.,  9.,  16., 17., 18., 25., 26., 27., 34.,  35.,  36.,
      37., 38., 39., 46., 47., 48., 55., 56., 57., 64.,  65.,  66.,
      40., 41., 42., 49., 50., 51., 58., 59., 60., 67.,  68.,  69.,
      43., 44., 45., 52., 53., 54., 61., 62., 63., 70.,  71.,  72.,
      73., 74., 75., 82., 83., 84., 91., 92., 93., 100., 101., 102.,
      76., 77., 78., 85., 86., 87., 94., 95., 96., 103., 104., 105.,
      79., 80., 81., 88., 89., 90., 97., 98., 99., 106., 107., 108.};
  const std::vector<int> sizes = {3, 4, 3, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 28.,  2.,  11., 20., 29.,  3.,  12., 21., 30.,
      4.,  13., 22., 31.,  5.,  14., 23., 32.,  6.,  15., 24., 33.,
      7.,  16., 25., 34.,  8.,  17., 26., 35.,  9.,  18., 27., 36.,
      37., 46., 55., 64.,  38., 47., 56., 65.,  39., 48., 57., 66.,
      40., 49., 58., 67.,  41., 50., 59., 68.,  42., 51., 60., 69.,
      43., 52., 61., 70.,  44., 53., 62., 71.,  45., 54., 63., 72.,
      73., 82., 91., 100., 74., 83., 92., 101., 75., 84., 93., 102.,
      76., 85., 94., 103., 77., 86., 95., 104., 78., 87., 96., 105.,
      79., 88., 97., 106., 80., 89., 98., 107., 81., 90., 99., 108.};
  const std::vector<int> sizes = {3, 4, 3, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 28.,  31.,  34.,
      2.,  5.,  8.,  11., 14., 17., 20., 23., 26., 29.,  32.,  35.,
      3.,  6.,  9.,  12., 15., 18., 21., 24., 27., 30.,  33.,  36.,
      37., 40., 43., 46., 49., 52., 55., 58., 61., 64.,  67.,  70.,
      38., 41., 44., 47., 50., 53., 56., 59., 62., 65.,  68.,  71.,
      39., 42., 45., 48., 51., 54., 57., 60., 63., 66.,  69.,  72.,
      73., 76., 79., 82., 85., 88., 91., 94., 97., 100., 103., 106.,
      74., 77., 80., 83., 86., 89., 92., 95., 98., 101., 104., 107.,
      75., 78., 81., 84., 87., 90., 93., 96., 99., 102., 105., 108.};
  const std::vector<int> sizes = {3, 4, 3, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 28.,  4.,  13., 22., 31.,  7.,  16., 25., 34.,
      2.,  11., 20., 29.,  5.,  14., 23., 32.,  8.,  17., 26., 35.,
      3.,  12., 21., 30.,  6.,  15., 24., 33.,  9.,  18., 27., 36.,
      37., 46., 55., 64.,  40., 49., 58., 67.,  43., 52., 61., 70.,
      38., 47., 56., 65.,  41., 50., 59., 68.,  44., 53., 62., 71.,
      39., 48., 57., 66.,  42., 51., 60., 69.,  45., 54., 63., 72.,
      73., 82., 91., 100., 76., 85., 94., 103., 79., 88., 97., 106.,
      74., 83., 92., 101., 77., 86., 95., 104., 80., 89., 98., 107.,
      75., 84., 93., 102., 78., 87., 96., 105., 81., 90., 99., 108.};
  const std::vector<int> sizes = {3, 4, 3, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,   5.,   6.,   7.,   8.,   9.,   37.,  38.,  39.,
      40., 41., 42., 43.,  44.,  45.,  73.,  74.,  75.,  76.,  77.,  78.,
      79., 80., 81., 10.,  11.,  12.,  13.,  14.,  15.,  16.,  17.,  18.,
      46., 47., 48., 49.,  50.,  51.,  52.,  53.,  54.,  82.,  83.,  84.,
      85., 86., 87., 88.,  89.,  90.,  19.,  20.,  21.,  22.,  23.,  24.,
      25., 26., 27., 55.,  56.,  57.,  58.,  59.,  60.,  61.,  62.,  63.,
      91., 92., 93., 94.,  95.,  96.,  97.,  98.,  99.,  28.,  29.,  30.,
      31., 32., 33., 34.,  35.,  36.,  64.,  65.,  66.,  67.,  68.,  69.,
      70., 71., 72., 100., 101., 102., 103., 104., 105., 106., 107., 108.};
  const std::vector<int> sizes = {3, 4, 3, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  2.,   5.,   8.,   3.,   6.,   9.,   37.,  40.,  43.,
      38., 41., 44., 39.,  42.,  45.,  73.,  76.,  79.,  74.,  77.,  80.,
      75., 78., 81., 10.,  13.,  16.,  11.,  14.,  17.,  12.,  15.,  18.,
      46., 49., 52., 47.,  50.,  53.,  48.,  51.,  54.,  82.,  85.,  88.,
      83., 86., 89., 84.,  87.,  90.,  19.,  22.,  25.,  20.,  23.,  26.,
      21., 24., 27., 55.,  58.,  61.,  56.,  59.,  62.,  57.,  60.,  63.,
      91., 94., 97., 92.,  95.,  98.,  93.,  96.,  99.,  28.,  31.,  34.,
      29., 32., 35., 30.,  33.,  36.,  64.,  67.,  70.,  65.,  68.,  71.,
      66., 69., 72., 100., 103., 106., 101., 104., 107., 102., 105., 108.};
  const std::vector<int> sizes = {3, 4, 3, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   37.,  38.,  39.,  73., 74., 75., 4.,   5.,   6.,
      40.,  41.,  42.,  76.,  77.,  78.,  7.,  8.,  9.,  43.,  44.,  45.,
      79.,  80.,  81.,  10.,  11.,  12.,  46., 47., 48., 82.,  83.,  84.,
      13.,  14.,  15.,  49.,  50.,  51.,  85., 86., 87., 16.,  17.,  18.,
      52.,  53.,  54.,  88.,  89.,  90.,  19., 20., 21., 55.,  56.,  57.,
      91.,  92.,  93.,  22.,  23.,  24.,  58., 59., 60., 94.,  95.,  96.,
      25.,  26.,  27.,  61.,  62.,  63.,  97., 98., 99., 28.,  29.,  30.,
      64.,  65.,  66.,  100., 101., 102., 31., 32., 33., 67.,  68.,  69.,
      103., 104., 105., 34.,  35.,  36.,  70., 71., 72., 106., 107., 108.};
  const std::vector<int> sizes = {3, 4, 3, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  2.,  38., 74.,  3.,  39., 75.,  4.,  40., 76.,
      5.,  41., 77.,  6.,  42., 78.,  7.,  43., 79.,  8.,  44., 80.,
      9.,  45., 81.,  10., 46., 82.,  11., 47., 83.,  12., 48., 84.,
      13., 49., 85.,  14., 50., 86.,  15., 51., 87.,  16., 52., 88.,
      17., 53., 89.,  18., 54., 90.,  19., 55., 91.,  20., 56., 92.,
      21., 57., 93.,  22., 58., 94.,  23., 59., 95.,  24., 60., 96.,
      25., 61., 97.,  26., 62., 98.,  27., 63., 99.,  28., 64., 100.,
      29., 65., 101., 30., 66., 102., 31., 67., 103., 32., 68., 104.,
      33., 69., 105., 34., 70., 106., 35., 71., 107., 36., 72., 108.};
  const std::vector<int> sizes = {3, 4, 3, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   7.,   37.,  40.,  43.,  73., 76., 79., 2.,   5.,   8.,
      38.,  41.,  44.,  74.,  77.,  80.,  3.,  6.,  9.,  39.,  42.,  45.,
      75.,  78.,  81.,  10.,  13.,  16.,  46., 49., 52., 82.,  85.,  88.,
      11.,  14.,  17.,  47.,  50.,  53.,  83., 86., 89., 12.,  15.,  18.,
      48.,  51.,  54.,  84.,  87.,  90.,  19., 22., 25., 55.,  58.,  61.,
      91.,  94.,  97.,  20.,  23.,  26.,  56., 59., 62., 92.,  95.,  98.,
      21.,  24.,  27.,  57.,  60.,  63.,  93., 96., 99., 28.,  31.,  34.,
      64.,  67.,  70.,  100., 103., 106., 29., 32., 35., 65.,  68.,  71.,
      101., 104., 107., 30.,  33.,  36.,  66., 69., 72., 102., 105., 108.};
  const std::vector<int> sizes = {3, 4, 3, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  4.,  40., 76.,  7.,  43., 79.,  2.,  38., 74.,
      5.,  41., 77.,  8.,  44., 80.,  3.,  39., 75.,  6.,  42., 78.,
      9.,  45., 81.,  10., 46., 82.,  13., 49., 85.,  16., 52., 88.,
      11., 47., 83.,  14., 50., 86.,  17., 53., 89.,  12., 48., 84.,
      15., 51., 87.,  18., 54., 90.,  19., 55., 91.,  22., 58., 94.,
      25., 61., 97.,  20., 56., 92.,  23., 59., 95.,  26., 62., 98.,
      21., 57., 93.,  24., 60., 96.,  27., 63., 99.,  28., 64., 100.,
      31., 67., 103., 34., 70., 106., 29., 65., 101., 32., 68., 104.,
      35., 71., 107., 30., 66., 102., 33., 69., 105., 36., 72., 108.};
  const std::vector<int> sizes = {3, 4, 3, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  10., 11., 12., 19., 20., 21., 28.,  29.,  30.,
      37., 38., 39., 46., 47., 48., 55., 56., 57., 64.,  65.,  66.,
      73., 74., 75., 82., 83., 84., 91., 92., 93., 100., 101., 102.,
      4.,  5.,  6.,  13., 14., 15., 22., 23., 24., 31.,  32.,  33.,
      40., 41., 42., 49., 50., 51., 58., 59., 60., 67.,  68.,  69.,
      76., 77., 78., 85., 86., 87., 94., 95., 96., 103., 104., 105.,
      7.,  8.,  9.,  16., 17., 18., 25., 26., 27., 34.,  35.,  36.,
      43., 44., 45., 52., 53., 54., 61., 62., 63., 70.,  71.,  72.,
      79., 80., 81., 88., 89., 90., 97., 98., 99., 106., 107., 108.};
  const std::vector<int> sizes = {3, 4, 3, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 28.,  2.,  11., 20., 29.,  3.,  12., 21., 30.,
      37., 46., 55., 64.,  38., 47., 56., 65.,  39., 48., 57., 66.,
      73., 82., 91., 100., 74., 83., 92., 101., 75., 84., 93., 102.,
      4.,  13., 22., 31.,  5.,  14., 23., 32.,  6.,  15., 24., 33.,
      40., 49., 58., 67.,  41., 50., 59., 68.,  42., 51., 60., 69.,
      76., 85., 94., 103., 77., 86., 95., 104., 78., 87., 96., 105.,
      7.,  16., 25., 34.,  8.,  17., 26., 35.,  9.,  18., 27., 36.,
      43., 52., 61., 70.,  44., 53., 62., 71.,  45., 54., 63., 72.,
      79., 88., 97., 106., 80., 89., 98., 107., 81., 90., 99., 108.};
  const std::vector<int> sizes = {3, 4, 3, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  37., 38., 39., 73., 74., 75., 10.,  11.,  12.,
      46., 47., 48., 82., 83., 84., 19., 20., 21., 55.,  56.,  57.,
      91., 92., 93., 28., 29., 30., 64., 65., 66., 100., 101., 102.,
      4.,  5.,  6.,  40., 41., 42., 76., 77., 78., 13.,  14.,  15.,
      49., 50., 51., 85., 86., 87., 22., 23., 24., 58.,  59.,  60.,
      94., 95., 96., 31., 32., 33., 67., 68., 69., 103., 104., 105.,
      7.,  8.,  9.,  43., 44., 45., 79., 80., 81., 16.,  17.,  18.,
      52., 53., 54., 88., 89., 90., 25., 26., 27., 61.,  62.,  63.,
      97., 98., 99., 34., 35., 36., 70., 71., 72., 106., 107., 108.};
  const std::vector<int> sizes = {3, 4, 3, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73., 2.,  38., 74.,  3.,  39., 75.,  10., 46., 82.,
      11., 47., 83., 12., 48., 84.,  19., 55., 91.,  20., 56., 92.,
      21., 57., 93., 28., 64., 100., 29., 65., 101., 30., 66., 102.,
      4.,  40., 76., 5.,  41., 77.,  6.,  42., 78.,  13., 49., 85.,
      14., 50., 86., 15., 51., 87.,  22., 58., 94.,  23., 59., 95.,
      24., 60., 96., 31., 67., 103., 32., 68., 104., 33., 69., 105.,
      7.,  43., 79., 8.,  44., 80.,  9.,  45., 81.,  16., 52., 88.,
      17., 53., 89., 18., 54., 90.,  25., 61., 97.,  26., 62., 98.,
      27., 63., 99., 34., 70., 106., 35., 71., 107., 36., 72., 108.};
  const std::vector<int> sizes = {3, 4, 3, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 10., 19., 28., 37., 46., 55., 64., 73., 82., 91., 100.,
      2., 11., 20., 29., 38., 47., 56., 65., 74., 83., 92., 101.,
      3., 12., 21., 30., 39., 48., 57., 66., 75., 84., 93., 102.,
      4., 13., 22., 31., 40., 49., 58., 67., 76., 85., 94., 103.,
      5., 14., 23., 32., 41., 50., 59., 68., 77., 86., 95., 104.,
      6., 15., 24., 33., 42., 51., 60., 69., 78., 87., 96., 105.,
      7., 16., 25., 34., 43., 52., 61., 70., 79., 88., 97., 106.,
      8., 17., 26., 35., 44., 53., 62., 71., 80., 89., 98., 107.,
      9., 18., 27., 36., 45., 54., 63., 72., 81., 90., 99., 108.};
  const std::vector<int> sizes = {3, 4, 3, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 37., 73., 10., 46., 82., 19., 55., 91., 28., 64., 100.,
      2., 38., 74., 11., 47., 83., 20., 56., 92., 29., 65., 101.,
      3., 39., 75., 12., 48., 84., 21., 57., 93., 30., 66., 102.,
      4., 40., 76., 13., 49., 85., 22., 58., 94., 31., 67., 103.,
      5., 41., 77., 14., 50., 86., 23., 59., 95., 32., 68., 104.,
      6., 42., 78., 15., 51., 87., 24., 60., 96., 33., 69., 105.,
      7., 43., 79., 16., 52., 88., 25., 61., 97., 34., 70., 106.,
      8., 44., 80., 17., 53., 89., 26., 62., 98., 35., 71., 107.,
      9., 45., 81., 18., 54., 90., 27., 63., 99., 36., 72., 108.};
  const std::vector<int> sizes = {3, 4, 3, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 28.,  31.,  34.,
      37., 40., 43., 46., 49., 52., 55., 58., 61., 64.,  67.,  70.,
      73., 76., 79., 82., 85., 88., 91., 94., 97., 100., 103., 106.,
      2.,  5.,  8.,  11., 14., 17., 20., 23., 26., 29.,  32.,  35.,
      38., 41., 44., 47., 50., 53., 56., 59., 62., 65.,  68.,  71.,
      74., 77., 80., 83., 86., 89., 92., 95., 98., 101., 104., 107.,
      3.,  6.,  9.,  12., 15., 18., 21., 24., 27., 30.,  33.,  36.,
      39., 42., 45., 48., 51., 54., 57., 60., 63., 66.,  69.,  72.,
      75., 78., 81., 84., 87., 90., 93., 96., 99., 102., 105., 108.};
  const std::vector<int> sizes = {3, 4, 3, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 28.,  4.,  13., 22., 31.,  7.,  16., 25., 34.,
      37., 46., 55., 64.,  40., 49., 58., 67.,  43., 52., 61., 70.,
      73., 82., 91., 100., 76., 85., 94., 103., 79., 88., 97., 106.,
      2.,  11., 20., 29.,  5.,  14., 23., 32.,  8.,  17., 26., 35.,
      38., 47., 56., 65.,  41., 50., 59., 68.,  44., 53., 62., 71.,
      74., 83., 92., 101., 77., 86., 95., 104., 80., 89., 98., 107.,
      3.,  12., 21., 30.,  6.,  15., 24., 33.,  9.,  18., 27., 36.,
      39., 48., 57., 66.,  42., 51., 60., 69.,  45., 54., 63., 72.,
      75., 84., 93., 102., 78., 87., 96., 105., 81., 90., 99., 108.};
  const std::vector<int> sizes = {3, 4, 3, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  37., 40., 43., 73., 76., 79., 10.,  13.,  16.,
      46., 49., 52., 82., 85., 88., 19., 22., 25., 55.,  58.,  61.,
      91., 94., 97., 28., 31., 34., 64., 67., 70., 100., 103., 106.,
      2.,  5.,  8.,  38., 41., 44., 74., 77., 80., 11.,  14.,  17.,
      47., 50., 53., 83., 86., 89., 20., 23., 26., 56.,  59.,  62.,
      92., 95., 98., 29., 32., 35., 65., 68., 71., 101., 104., 107.,
      3.,  6.,  9.,  39., 42., 45., 75., 78., 81., 12.,  15.,  18.,
      48., 51., 54., 84., 87., 90., 21., 24., 27., 57.,  60.,  63.,
      93., 96., 99., 30., 33., 36., 66., 69., 72., 102., 105., 108.};
  const std::vector<int> sizes = {3, 4, 3, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73., 4.,  40., 76.,  7.,  43., 79.,  10., 46., 82.,
      13., 49., 85., 16., 52., 88.,  19., 55., 91.,  22., 58., 94.,
      25., 61., 97., 28., 64., 100., 31., 67., 103., 34., 70., 106.,
      2.,  38., 74., 5.,  41., 77.,  8.,  44., 80.,  11., 47., 83.,
      14., 50., 86., 17., 53., 89.,  20., 56., 92.,  23., 59., 95.,
      26., 62., 98., 29., 65., 101., 32., 68., 104., 35., 71., 107.,
      3.,  39., 75., 6.,  42., 78.,  9.,  45., 81.,  12., 48., 84.,
      15., 51., 87., 18., 54., 90.,  21., 57., 93.,  24., 60., 96.,
      27., 63., 99., 30., 66., 102., 33., 69., 105., 36., 72., 108.};
  const std::vector<int> sizes = {3, 4, 3, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 10., 19., 28., 37., 46., 55., 64., 73., 82., 91., 100.,
      4., 13., 22., 31., 40., 49., 58., 67., 76., 85., 94., 103.,
      7., 16., 25., 34., 43., 52., 61., 70., 79., 88., 97., 106.,
      2., 11., 20., 29., 38., 47., 56., 65., 74., 83., 92., 101.,
      5., 14., 23., 32., 41., 50., 59., 68., 77., 86., 95., 104.,
      8., 17., 26., 35., 44., 53., 62., 71., 80., 89., 98., 107.,
      3., 12., 21., 30., 39., 48., 57., 66., 75., 84., 93., 102.,
      6., 15., 24., 33., 42., 51., 60., 69., 78., 87., 96., 105.,
      9., 18., 27., 36., 45., 54., 63., 72., 81., 90., 99., 108.};
  const std::vector<int> sizes = {3, 4, 3, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 37., 73., 10., 46., 82., 19., 55., 91., 28., 64., 100.,
      4., 40., 76., 13., 49., 85., 22., 58., 94., 31., 67., 103.,
      7., 43., 79., 16., 52., 88., 25., 61., 97., 34., 70., 106.,
      2., 38., 74., 11., 47., 83., 20., 56., 92., 29., 65., 101.,
      5., 41., 77., 14., 50., 86., 23., 59., 95., 32., 68., 104.,
      8., 44., 80., 17., 53., 89., 26., 62., 98., 35., 71., 107.,
      3., 39., 75., 12., 48., 84., 21., 57., 93., 30., 66., 102.,
      6., 42., 78., 15., 51., 87., 24., 60., 96., 33., 69., 105.,
      9., 45., 81., 18., 54., 90., 27., 63., 99., 36., 72., 108.};
  const std::vector<int> sizes = {3, 4, 3, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13.,  14.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 105., 106., 107., 108.,
      109., 110., 111., 112., 113., 114., 115., 116., 117., 118., 119., 120.,
      121., 122., 123., 124., 125., 126., 127., 128., 129., 130., 131., 132.,
      133., 134., 135., 136., 137., 138., 139., 140., 141., 142., 143., 144.};
  const std::vector<int> sizes = {3, 4, 3, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   2.,   6.,   10.,  3.,   7.,   11.,  4.,   8.,   12.,
      13.,  17.,  21.,  14.,  18.,  22.,  15.,  19.,  23.,  16.,  20.,  24.,
      25.,  29.,  33.,  26.,  30.,  34.,  27.,  31.,  35.,  28.,  32.,  36.,
      37.,  41.,  45.,  38.,  42.,  46.,  39.,  43.,  47.,  40.,  44.,  48.,
      49.,  53.,  57.,  50.,  54.,  58.,  51.,  55.,  59.,  52.,  56.,  60.,
      61.,  65.,  69.,  62.,  66.,  70.,  63.,  67.,  71.,  64.,  68.,  72.,
      73.,  77.,  81.,  74.,  78.,  82.,  75.,  79.,  83.,  76.,  80.,  84.,
      85.,  89.,  93.,  86.,  90.,  94.,  87.,  91.,  95.,  88.,  92.,  96.,
      97.,  101., 105., 98.,  102., 106., 99.,  103., 107., 100., 104., 108.,
      109., 113., 117., 110., 114., 118., 111., 115., 119., 112., 116., 120.,
      121., 125., 129., 122., 126., 130., 123., 127., 131., 124., 128., 132.,
      133., 137., 141., 134., 138., 142., 135., 139., 143., 136., 140., 144.};
  const std::vector<int> sizes = {3, 4, 3, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   13.,  14.,  15.,  16.,  25.,  26.,  27.,  28.,
      37.,  38.,  39.,  40.,  5.,   6.,   7.,   8.,   17.,  18.,  19.,  20.,
      29.,  30.,  31.,  32.,  41.,  42.,  43.,  44.,  9.,   10.,  11.,  12.,
      21.,  22.,  23.,  24.,  33.,  34.,  35.,  36.,  45.,  46.,  47.,  48.,
      49.,  50.,  51.,  52.,  61.,  62.,  63.,  64.,  73.,  74.,  75.,  76.,
      85.,  86.,  87.,  88.,  53.,  54.,  55.,  56.,  65.,  66.,  67.,  68.,
      77.,  78.,  79.,  80.,  89.,  90.,  91.,  92.,  57.,  58.,  59.,  60.,
      69.,  70.,  71.,  72.,  81.,  82.,  83.,  84.,  93.,  94.,  95.,  96.,
      97.,  98.,  99.,  100., 109., 110., 111., 112., 121., 122., 123., 124.,
      133., 134., 135., 136., 101., 102., 103., 104., 113., 114., 115., 116.,
      125., 126., 127., 128., 137., 138., 139., 140., 105., 106., 107., 108.,
      117., 118., 119., 120., 129., 130., 131., 132., 141., 142., 143., 144.};
  const std::vector<int> sizes = {3, 4, 3, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  37.,  2.,   14.,  26.,  38.,  3.,   15.,  27.,  39.,
      4.,   16.,  28.,  40.,  5.,   17.,  29.,  41.,  6.,   18.,  30.,  42.,
      7.,   19.,  31.,  43.,  8.,   20.,  32.,  44.,  9.,   21.,  33.,  45.,
      10.,  22.,  34.,  46.,  11.,  23.,  35.,  47.,  12.,  24.,  36.,  48.,
      49.,  61.,  73.,  85.,  50.,  62.,  74.,  86.,  51.,  63.,  75.,  87.,
      52.,  64.,  76.,  88.,  53.,  65.,  77.,  89.,  54.,  66.,  78.,  90.,
      55.,  67.,  79.,  91.,  56.,  68.,  80.,  92.,  57.,  69.,  81.,  93.,
      58.,  70.,  82.,  94.,  59.,  71.,  83.,  95.,  60.,  72.,  84.,  96.,
      97.,  109., 121., 133., 98.,  110., 122., 134., 99.,  111., 123., 135.,
      100., 112., 124., 136., 101., 113., 125., 137., 102., 114., 126., 138.,
      103., 115., 127., 139., 104., 116., 128., 140., 105., 117., 129., 141.,
      106., 118., 130., 142., 107., 119., 131., 143., 108., 120., 132., 144.};
  const std::vector<int> sizes = {3, 4, 3, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  17.,  21.,  25.,  29.,  33.,  37.,  41.,  45.,
      2.,   6.,   10.,  14.,  18.,  22.,  26.,  30.,  34.,  38.,  42.,  46.,
      3.,   7.,   11.,  15.,  19.,  23.,  27.,  31.,  35.,  39.,  43.,  47.,
      4.,   8.,   12.,  16.,  20.,  24.,  28.,  32.,  36.,  40.,  44.,  48.,
      49.,  53.,  57.,  61.,  65.,  69.,  73.,  77.,  81.,  85.,  89.,  93.,
      50.,  54.,  58.,  62.,  66.,  70.,  74.,  78.,  82.,  86.,  90.,  94.,
      51.,  55.,  59.,  63.,  67.,  71.,  75.,  79.,  83.,  87.,  91.,  95.,
      52.,  56.,  60.,  64.,  68.,  72.,  76.,  80.,  84.,  88.,  92.,  96.,
      97.,  101., 105., 109., 113., 117., 121., 125., 129., 133., 137., 141.,
      98.,  102., 106., 110., 114., 118., 122., 126., 130., 134., 138., 142.,
      99.,  103., 107., 111., 115., 119., 123., 127., 131., 135., 139., 143.,
      100., 104., 108., 112., 116., 120., 124., 128., 132., 136., 140., 144.};
  const std::vector<int> sizes = {3, 4, 3, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  37.,  5.,   17.,  29.,  41.,  9.,   21.,  33.,  45.,
      2.,   14.,  26.,  38.,  6.,   18.,  30.,  42.,  10.,  22.,  34.,  46.,
      3.,   15.,  27.,  39.,  7.,   19.,  31.,  43.,  11.,  23.,  35.,  47.,
      4.,   16.,  28.,  40.,  8.,   20.,  32.,  44.,  12.,  24.,  36.,  48.,
      49.,  61.,  73.,  85.,  53.,  65.,  77.,  89.,  57.,  69.,  81.,  93.,
      50.,  62.,  74.,  86.,  54.,  66.,  78.,  90.,  58.,  70.,  82.,  94.,
      51.,  63.,  75.,  87.,  55.,  67.,  79.,  91.,  59.,  71.,  83.,  95.,
      52.,  64.,  76.,  88.,  56.,  68.,  80.,  92.,  60.,  72.,  84.,  96.,
      97.,  109., 121., 133., 101., 113., 125., 137., 105., 117., 129., 141.,
      98.,  110., 122., 134., 102., 114., 126., 138., 106., 118., 130., 142.,
      99.,  111., 123., 135., 103., 115., 127., 139., 107., 119., 131., 143.,
      100., 112., 124., 136., 104., 116., 128., 140., 108., 120., 132., 144.};
  const std::vector<int> sizes = {3, 4, 3, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 105., 106., 107., 108.,
      13.,  14.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      109., 110., 111., 112., 113., 114., 115., 116., 117., 118., 119., 120.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      121., 122., 123., 124., 125., 126., 127., 128., 129., 130., 131., 132.,
      37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      133., 134., 135., 136., 137., 138., 139., 140., 141., 142., 143., 144.};
  const std::vector<int> sizes = {3, 4, 3, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   2.,   6.,   10.,  3.,   7.,   11.,  4.,   8.,   12.,
      49.,  53.,  57.,  50.,  54.,  58.,  51.,  55.,  59.,  52.,  56.,  60.,
      97.,  101., 105., 98.,  102., 106., 99.,  103., 107., 100., 104., 108.,
      13.,  17.,  21.,  14.,  18.,  22.,  15.,  19.,  23.,  16.,  20.,  24.,
      61.,  65.,  69.,  62.,  66.,  70.,  63.,  67.,  71.,  64.,  68.,  72.,
      109., 113., 117., 110., 114., 118., 111., 115., 119., 112., 116., 120.,
      25.,  29.,  33.,  26.,  30.,  34.,  27.,  31.,  35.,  28.,  32.,  36.,
      73.,  77.,  81.,  74.,  78.,  82.,  75.,  79.,  83.,  76.,  80.,  84.,
      121., 125., 129., 122., 126., 130., 123., 127., 131., 124., 128., 132.,
      37.,  41.,  45.,  38.,  42.,  46.,  39.,  43.,  47.,  40.,  44.,  48.,
      85.,  89.,  93.,  86.,  90.,  94.,  87.,  91.,  95.,  88.,  92.,  96.,
      133., 137., 141., 134., 138., 142., 135., 139., 143., 136., 140., 144.};
  const std::vector<int> sizes = {3, 4, 3, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  49., 50., 51., 52., 97.,  98.,  99.,  100.,
      5.,  6.,  7.,  8.,  53., 54., 55., 56., 101., 102., 103., 104.,
      9.,  10., 11., 12., 57., 58., 59., 60., 105., 106., 107., 108.,
      13., 14., 15., 16., 61., 62., 63., 64., 109., 110., 111., 112.,
      17., 18., 19., 20., 65., 66., 67., 68., 113., 114., 115., 116.,
      21., 22., 23., 24., 69., 70., 71., 72., 117., 118., 119., 120.,
      25., 26., 27., 28., 73., 74., 75., 76., 121., 122., 123., 124.,
      29., 30., 31., 32., 77., 78., 79., 80., 125., 126., 127., 128.,
      33., 34., 35., 36., 81., 82., 83., 84., 129., 130., 131., 132.,
      37., 38., 39., 40., 85., 86., 87., 88., 133., 134., 135., 136.,
      41., 42., 43., 44., 89., 90., 91., 92., 137., 138., 139., 140.,
      45., 46., 47., 48., 93., 94., 95., 96., 141., 142., 143., 144.};
  const std::vector<int> sizes = {3, 4, 3, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  2.,  50., 98.,  3.,  51., 99.,  4.,  52., 100.,
      5.,  53., 101., 6.,  54., 102., 7.,  55., 103., 8.,  56., 104.,
      9.,  57., 105., 10., 58., 106., 11., 59., 107., 12., 60., 108.,
      13., 61., 109., 14., 62., 110., 15., 63., 111., 16., 64., 112.,
      17., 65., 113., 18., 66., 114., 19., 67., 115., 20., 68., 116.,
      21., 69., 117., 22., 70., 118., 23., 71., 119., 24., 72., 120.,
      25., 73., 121., 26., 74., 122., 27., 75., 123., 28., 76., 124.,
      29., 77., 125., 30., 78., 126., 31., 79., 127., 32., 80., 128.,
      33., 81., 129., 34., 82., 130., 35., 83., 131., 36., 84., 132.,
      37., 85., 133., 38., 86., 134., 39., 87., 135., 40., 88., 136.,
      41., 89., 137., 42., 90., 138., 43., 91., 139., 44., 92., 140.,
      45., 93., 141., 46., 94., 142., 47., 95., 143., 48., 96., 144.};
  const std::vector<int> sizes = {3, 4, 3, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   49.,  53.,  57.,  97.,  101., 105., 2.,   6.,   10.,
      50.,  54.,  58.,  98.,  102., 106., 3.,   7.,   11.,  51.,  55.,  59.,
      99.,  103., 107., 4.,   8.,   12.,  52.,  56.,  60.,  100., 104., 108.,
      13.,  17.,  21.,  61.,  65.,  69.,  109., 113., 117., 14.,  18.,  22.,
      62.,  66.,  70.,  110., 114., 118., 15.,  19.,  23.,  63.,  67.,  71.,
      111., 115., 119., 16.,  20.,  24.,  64.,  68.,  72.,  112., 116., 120.,
      25.,  29.,  33.,  73.,  77.,  81.,  121., 125., 129., 26.,  30.,  34.,
      74.,  78.,  82.,  122., 126., 130., 27.,  31.,  35.,  75.,  79.,  83.,
      123., 127., 131., 28.,  32.,  36.,  76.,  80.,  84.,  124., 128., 132.,
      37.,  41.,  45.,  85.,  89.,  93.,  133., 137., 141., 38.,  42.,  46.,
      86.,  90.,  94.,  134., 138., 142., 39.,  43.,  47.,  87.,  91.,  95.,
      135., 139., 143., 40.,  44.,  48.,  88.,  92.,  96.,  136., 140., 144.};
  const std::vector<int> sizes = {3, 4, 3, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  5.,  53., 101., 9.,  57., 105., 2.,  50., 98.,
      6.,  54., 102., 10., 58., 106., 3.,  51., 99.,  7.,  55., 103.,
      11., 59., 107., 4.,  52., 100., 8.,  56., 104., 12., 60., 108.,
      13., 61., 109., 17., 65., 113., 21., 69., 117., 14., 62., 110.,
      18., 66., 114., 22., 70., 118., 15., 63., 111., 19., 67., 115.,
      23., 71., 119., 16., 64., 112., 20., 68., 116., 24., 72., 120.,
      25., 73., 121., 29., 77., 125., 33., 81., 129., 26., 74., 122.,
      30., 78., 126., 34., 82., 130., 27., 75., 123., 31., 79., 127.,
      35., 83., 131., 28., 76., 124., 32., 80., 128., 36., 84., 132.,
      37., 85., 133., 41., 89., 137., 45., 93., 141., 38., 86., 134.,
      42., 90., 138., 46., 94., 142., 39., 87., 135., 43., 91., 139.,
      47., 95., 143., 40., 88., 136., 44., 92., 140., 48., 96., 144.};
  const std::vector<int> sizes = {3, 4, 3, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   13.,  14.,  15.,  16.,  25.,  26.,  27.,  28.,
      37.,  38.,  39.,  40.,  49.,  50.,  51.,  52.,  61.,  62.,  63.,  64.,
      73.,  74.,  75.,  76.,  85.,  86.,  87.,  88.,  97.,  98.,  99.,  100.,
      109., 110., 111., 112., 121., 122., 123., 124., 133., 134., 135., 136.,
      5.,   6.,   7.,   8.,   17.,  18.,  19.,  20.,  29.,  30.,  31.,  32.,
      41.,  42.,  43.,  44.,  53.,  54.,  55.,  56.,  65.,  66.,  67.,  68.,
      77.,  78.,  79.,  80.,  89.,  90.,  91.,  92.,  101., 102., 103., 104.,
      113., 114., 115., 116., 125., 126., 127., 128., 137., 138., 139., 140.,
      9.,   10.,  11.,  12.,  21.,  22.,  23.,  24.,  33.,  34.,  35.,  36.,
      45.,  46.,  47.,  48.,  57.,  58.,  59.,  60.,  69.,  70.,  71.,  72.,
      81.,  82.,  83.,  84.,  93.,  94.,  95.,  96.,  105., 106., 107., 108.,
      117., 118., 119., 120., 129., 130., 131., 132., 141., 142., 143., 144.};
  const std::vector<int> sizes = {3, 4, 3, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  37.,  2.,   14.,  26.,  38.,  3.,   15.,  27.,  39.,
      4.,   16.,  28.,  40.,  49.,  61.,  73.,  85.,  50.,  62.,  74.,  86.,
      51.,  63.,  75.,  87.,  52.,  64.,  76.,  88.,  97.,  109., 121., 133.,
      98.,  110., 122., 134., 99.,  111., 123., 135., 100., 112., 124., 136.,
      5.,   17.,  29.,  41.,  6.,   18.,  30.,  42.,  7.,   19.,  31.,  43.,
      8.,   20.,  32.,  44.,  53.,  65.,  77.,  89.,  54.,  66.,  78.,  90.,
      55.,  67.,  79.,  91.,  56.,  68.,  80.,  92.,  101., 113., 125., 137.,
      102., 114., 126., 138., 103., 115., 127., 139., 104., 116., 128., 140.,
      9.,   21.,  33.,  45.,  10.,  22.,  34.,  46.,  11.,  23.,  35.,  47.,
      12.,  24.,  36.,  48.,  57.,  69.,  81.,  93.,  58.,  70.,  82.,  94.,
      59.,  71.,  83.,  95.,  60.,  72.,  84.,  96.,  105., 117., 129., 141.,
      106., 118., 130., 142., 107., 119., 131., 143., 108., 120., 132., 144.};
  const std::vector<int> sizes = {3, 4, 3, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  49., 50., 51., 52., 97.,  98.,  99.,  100.,
      13., 14., 15., 16., 61., 62., 63., 64., 109., 110., 111., 112.,
      25., 26., 27., 28., 73., 74., 75., 76., 121., 122., 123., 124.,
      37., 38., 39., 40., 85., 86., 87., 88., 133., 134., 135., 136.,
      5.,  6.,  7.,  8.,  53., 54., 55., 56., 101., 102., 103., 104.,
      17., 18., 19., 20., 65., 66., 67., 68., 113., 114., 115., 116.,
      29., 30., 31., 32., 77., 78., 79., 80., 125., 126., 127., 128.,
      41., 42., 43., 44., 89., 90., 91., 92., 137., 138., 139., 140.,
      9.,  10., 11., 12., 57., 58., 59., 60., 105., 106., 107., 108.,
      21., 22., 23., 24., 69., 70., 71., 72., 117., 118., 119., 120.,
      33., 34., 35., 36., 81., 82., 83., 84., 129., 130., 131., 132.,
      45., 46., 47., 48., 93., 94., 95., 96., 141., 142., 143., 144.};
  const std::vector<int> sizes = {3, 4, 3, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  2.,  50., 98.,  3.,  51., 99.,  4.,  52., 100.,
      13., 61., 109., 14., 62., 110., 15., 63., 111., 16., 64., 112.,
      25., 73., 121., 26., 74., 122., 27., 75., 123., 28., 76., 124.,
      37., 85., 133., 38., 86., 134., 39., 87., 135., 40., 88., 136.,
      5.,  53., 101., 6.,  54., 102., 7.,  55., 103., 8.,  56., 104.,
      17., 65., 113., 18., 66., 114., 19., 67., 115., 20., 68., 116.,
      29., 77., 125., 30., 78., 126., 31., 79., 127., 32., 80., 128.,
      41., 89., 137., 42., 90., 138., 43., 91., 139., 44., 92., 140.,
      9.,  57., 105., 10., 58., 106., 11., 59., 107., 12., 60., 108.,
      21., 69., 117., 22., 70., 118., 23., 71., 119., 24., 72., 120.,
      33., 81., 129., 34., 82., 130., 35., 83., 131., 36., 84., 132.,
      45., 93., 141., 46., 94., 142., 47., 95., 143., 48., 96., 144.};
  const std::vector<int> sizes = {3, 4, 3, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 49., 61., 73., 85., 97.,  109., 121., 133.,
      2.,  14., 26., 38., 50., 62., 74., 86., 98.,  110., 122., 134.,
      3.,  15., 27., 39., 51., 63., 75., 87., 99.,  111., 123., 135.,
      4.,  16., 28., 40., 52., 64., 76., 88., 100., 112., 124., 136.,
      5.,  17., 29., 41., 53., 65., 77., 89., 101., 113., 125., 137.,
      6.,  18., 30., 42., 54., 66., 78., 90., 102., 114., 126., 138.,
      7.,  19., 31., 43., 55., 67., 79., 91., 103., 115., 127., 139.,
      8.,  20., 32., 44., 56., 68., 80., 92., 104., 116., 128., 140.,
      9.,  21., 33., 45., 57., 69., 81., 93., 105., 117., 129., 141.,
      10., 22., 34., 46., 58., 70., 82., 94., 106., 118., 130., 142.,
      11., 23., 35., 47., 59., 71., 83., 95., 107., 119., 131., 143.,
      12., 24., 36., 48., 60., 72., 84., 96., 108., 120., 132., 144.};
  const std::vector<int> sizes = {3, 4, 3, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  13., 61., 109., 25., 73., 121., 37., 85., 133.,
      2.,  50., 98.,  14., 62., 110., 26., 74., 122., 38., 86., 134.,
      3.,  51., 99.,  15., 63., 111., 27., 75., 123., 39., 87., 135.,
      4.,  52., 100., 16., 64., 112., 28., 76., 124., 40., 88., 136.,
      5.,  53., 101., 17., 65., 113., 29., 77., 125., 41., 89., 137.,
      6.,  54., 102., 18., 66., 114., 30., 78., 126., 42., 90., 138.,
      7.,  55., 103., 19., 67., 115., 31., 79., 127., 43., 91., 139.,
      8.,  56., 104., 20., 68., 116., 32., 80., 128., 44., 92., 140.,
      9.,  57., 105., 21., 69., 117., 33., 81., 129., 45., 93., 141.,
      10., 58., 106., 22., 70., 118., 34., 82., 130., 46., 94., 142.,
      11., 59., 107., 23., 71., 119., 35., 83., 131., 47., 95., 143.,
      12., 60., 108., 24., 72., 120., 36., 84., 132., 48., 96., 144.};
  const std::vector<int> sizes = {3, 4, 3, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  17.,  21.,  25.,  29.,  33.,  37.,  41.,  45.,
      49.,  53.,  57.,  61.,  65.,  69.,  73.,  77.,  81.,  85.,  89.,  93.,
      97.,  101., 105., 109., 113., 117., 121., 125., 129., 133., 137., 141.,
      2.,   6.,   10.,  14.,  18.,  22.,  26.,  30.,  34.,  38.,  42.,  46.,
      50.,  54.,  58.,  62.,  66.,  70.,  74.,  78.,  82.,  86.,  90.,  94.,
      98.,  102., 106., 110., 114., 118., 122., 126., 130., 134., 138., 142.,
      3.,   7.,   11.,  15.,  19.,  23.,  27.,  31.,  35.,  39.,  43.,  47.,
      51.,  55.,  59.,  63.,  67.,  71.,  75.,  79.,  83.,  87.,  91.,  95.,
      99.,  103., 107., 111., 115., 119., 123., 127., 131., 135., 139., 143.,
      4.,   8.,   12.,  16.,  20.,  24.,  28.,  32.,  36.,  40.,  44.,  48.,
      52.,  56.,  60.,  64.,  68.,  72.,  76.,  80.,  84.,  88.,  92.,  96.,
      100., 104., 108., 112., 116., 120., 124., 128., 132., 136., 140., 144.};
  const std::vector<int> sizes = {3, 4, 3, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  37.,  5.,   17.,  29.,  41.,  9.,   21.,  33.,  45.,
      49.,  61.,  73.,  85.,  53.,  65.,  77.,  89.,  57.,  69.,  81.,  93.,
      97.,  109., 121., 133., 101., 113., 125., 137., 105., 117., 129., 141.,
      2.,   14.,  26.,  38.,  6.,   18.,  30.,  42.,  10.,  22.,  34.,  46.,
      50.,  62.,  74.,  86.,  54.,  66.,  78.,  90.,  58.,  70.,  82.,  94.,
      98.,  110., 122., 134., 102., 114., 126., 138., 106., 118., 130., 142.,
      3.,   15.,  27.,  39.,  7.,   19.,  31.,  43.,  11.,  23.,  35.,  47.,
      51.,  63.,  75.,  87.,  55.,  67.,  79.,  91.,  59.,  71.,  83.,  95.,
      99.,  111., 123., 135., 103., 115., 127., 139., 107., 119., 131., 143.,
      4.,   16.,  28.,  40.,  8.,   20.,  32.,  44.,  12.,  24.,  36.,  48.,
      52.,  64.,  76.,  88.,  56.,  68.,  80.,  92.,  60.,  72.,  84.,  96.,
      100., 112., 124., 136., 104., 116., 128., 140., 108., 120., 132., 144.};
  const std::vector<int> sizes = {3, 4, 3, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   49.,  53.,  57.,  97.,  101., 105., 13.,  17.,  21.,
      61.,  65.,  69.,  109., 113., 117., 25.,  29.,  33.,  73.,  77.,  81.,
      121., 125., 129., 37.,  41.,  45.,  85.,  89.,  93.,  133., 137., 141.,
      2.,   6.,   10.,  50.,  54.,  58.,  98.,  102., 106., 14.,  18.,  22.,
      62.,  66.,  70.,  110., 114., 118., 26.,  30.,  34.,  74.,  78.,  82.,
      122., 126., 130., 38.,  42.,  46.,  86.,  90.,  94.,  134., 138., 142.,
      3.,   7.,   11.,  51.,  55.,  59.,  99.,  103., 107., 15.,  19.,  23.,
      63.,  67.,  71.,  111., 115., 119., 27.,  31.,  35.,  75.,  79.,  83.,
      123., 127., 131., 39.,  43.,  47.,  87.,  91.,  95.,  135., 139., 143.,
      4.,   8.,   12.,  52.,  56.,  60.,  100., 104., 108., 16.,  20.,  24.,
      64.,  68.,  72.,  112., 116., 120., 28.,  32.,  36.,  76.,  80.,  84.,
      124., 128., 132., 40.,  44.,  48.,  88.,  92.,  96.,  136., 140., 144.};
  const std::vector<int> sizes = {3, 4, 3, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  5.,  53., 101., 9.,  57., 105., 13., 61., 109.,
      17., 65., 113., 21., 69., 117., 25., 73., 121., 29., 77., 125.,
      33., 81., 129., 37., 85., 133., 41., 89., 137., 45., 93., 141.,
      2.,  50., 98.,  6.,  54., 102., 10., 58., 106., 14., 62., 110.,
      18., 66., 114., 22., 70., 118., 26., 74., 122., 30., 78., 126.,
      34., 82., 130., 38., 86., 134., 42., 90., 138., 46., 94., 142.,
      3.,  51., 99.,  7.,  55., 103., 11., 59., 107., 15., 63., 111.,
      19., 67., 115., 23., 71., 119., 27., 75., 123., 31., 79., 127.,
      35., 83., 131., 39., 87., 135., 43., 91., 139., 47., 95., 143.,
      4.,  52., 100., 8.,  56., 104., 12., 60., 108., 16., 64., 112.,
      20., 68., 116., 24., 72., 120., 28., 76., 124., 32., 80., 128.,
      36., 84., 132., 40., 88., 136., 44., 92., 140., 48., 96., 144.};
  const std::vector<int> sizes = {3, 4, 3, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 49., 61., 73., 85., 97.,  109., 121., 133.,
      5.,  17., 29., 41., 53., 65., 77., 89., 101., 113., 125., 137.,
      9.,  21., 33., 45., 57., 69., 81., 93., 105., 117., 129., 141.,
      2.,  14., 26., 38., 50., 62., 74., 86., 98.,  110., 122., 134.,
      6.,  18., 30., 42., 54., 66., 78., 90., 102., 114., 126., 138.,
      10., 22., 34., 46., 58., 70., 82., 94., 106., 118., 130., 142.,
      3.,  15., 27., 39., 51., 63., 75., 87., 99.,  111., 123., 135.,
      7.,  19., 31., 43., 55., 67., 79., 91., 103., 115., 127., 139.,
      11., 23., 35., 47., 59., 71., 83., 95., 107., 119., 131., 143.,
      4.,  16., 28., 40., 52., 64., 76., 88., 100., 112., 124., 136.,
      8.,  20., 32., 44., 56., 68., 80., 92., 104., 116., 128., 140.,
      12., 24., 36., 48., 60., 72., 84., 96., 108., 120., 132., 144.};
  const std::vector<int> sizes = {3, 4, 3, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x3x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  13., 61., 109., 25., 73., 121., 37., 85., 133.,
      5.,  53., 101., 17., 65., 113., 29., 77., 125., 41., 89., 137.,
      9.,  57., 105., 21., 69., 117., 33., 81., 129., 45., 93., 141.,
      2.,  50., 98.,  14., 62., 110., 26., 74., 122., 38., 86., 134.,
      6.,  54., 102., 18., 66., 114., 30., 78., 126., 42., 90., 138.,
      10., 58., 106., 22., 70., 118., 34., 82., 130., 46., 94., 142.,
      3.,  51., 99.,  15., 63., 111., 27., 75., 123., 39., 87., 135.,
      7.,  55., 103., 19., 67., 115., 31., 79., 127., 43., 91., 139.,
      11., 59., 107., 23., 71., 119., 35., 83., 131., 47., 95., 143.,
      4.,  52., 100., 16., 64., 112., 28., 76., 124., 40., 88., 136.,
      8.,  56., 104., 20., 68., 116., 32., 80., 128., 44., 92., 140.,
      12., 60., 108., 24., 72., 120., 36., 84., 132., 48., 96., 144.};
  const std::vector<int> sizes = {3, 4, 3, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14.,
      15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28.,
      29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42.,
      43., 44., 45., 46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56.,
      57., 58., 59., 60., 61., 62., 63., 64., 65., 66., 67., 68., 69., 70.,
      71., 72., 73., 74., 75., 76., 77., 78., 79., 80., 81., 82., 83., 84.,
      85., 86., 87., 88., 89., 90., 91., 92., 93., 94., 95., 96.};
  const std::vector<int> sizes = {3, 4, 4, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  2.,  4.,  6.,  8.,  9.,  11., 13., 15., 10., 12.,
      14., 16., 17., 19., 21., 23., 18., 20., 22., 24., 25., 27., 29., 31.,
      26., 28., 30., 32., 33., 35., 37., 39., 34., 36., 38., 40., 41., 43.,
      45., 47., 42., 44., 46., 48., 49., 51., 53., 55., 50., 52., 54., 56.,
      57., 59., 61., 63., 58., 60., 62., 64., 65., 67., 69., 71., 66., 68.,
      70., 72., 73., 75., 77., 79., 74., 76., 78., 80., 81., 83., 85., 87.,
      82., 84., 86., 88., 89., 91., 93., 95., 90., 92., 94., 96.};
  const std::vector<int> sizes = {3, 4, 4, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  9.,  10., 17., 18., 25., 26., 3.,  4.,  11., 12., 19., 20.,
      27., 28., 5.,  6.,  13., 14., 21., 22., 29., 30., 7.,  8.,  15., 16.,
      23., 24., 31., 32., 33., 34., 41., 42., 49., 50., 57., 58., 35., 36.,
      43., 44., 51., 52., 59., 60., 37., 38., 45., 46., 53., 54., 61., 62.,
      39., 40., 47., 48., 55., 56., 63., 64., 65., 66., 73., 74., 81., 82.,
      89., 90., 67., 68., 75., 76., 83., 84., 91., 92., 69., 70., 77., 78.,
      85., 86., 93., 94., 71., 72., 79., 80., 87., 88., 95., 96.};
  const std::vector<int> sizes = {3, 4, 4, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 2.,  10., 18., 26., 3.,  11., 19., 27., 4.,  12.,
      20., 28., 5.,  13., 21., 29., 6.,  14., 22., 30., 7.,  15., 23., 31.,
      8.,  16., 24., 32., 33., 41., 49., 57., 34., 42., 50., 58., 35., 43.,
      51., 59., 36., 44., 52., 60., 37., 45., 53., 61., 38., 46., 54., 62.,
      39., 47., 55., 63., 40., 48., 56., 64., 65., 73., 81., 89., 66., 74.,
      82., 90., 67., 75., 83., 91., 68., 76., 84., 92., 69., 77., 85., 93.,
      70., 78., 86., 94., 71., 79., 87., 95., 72., 80., 88., 96.};
  const std::vector<int> sizes = {3, 4, 4, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23., 25., 27.,
      29., 31., 2.,  4.,  6.,  8.,  10., 12., 14., 16., 18., 20., 22., 24.,
      26., 28., 30., 32., 33., 35., 37., 39., 41., 43., 45., 47., 49., 51.,
      53., 55., 57., 59., 61., 63., 34., 36., 38., 40., 42., 44., 46., 48.,
      50., 52., 54., 56., 58., 60., 62., 64., 65., 67., 69., 71., 73., 75.,
      77., 79., 81., 83., 85., 87., 89., 91., 93., 95., 66., 68., 70., 72.,
      74., 76., 78., 80., 82., 84., 86., 88., 90., 92., 94., 96.};
  const std::vector<int> sizes = {3, 4, 4, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 3.,  11., 19., 27., 5.,  13., 21., 29., 7.,  15.,
      23., 31., 2.,  10., 18., 26., 4.,  12., 20., 28., 6.,  14., 22., 30.,
      8.,  16., 24., 32., 33., 41., 49., 57., 35., 43., 51., 59., 37., 45.,
      53., 61., 39., 47., 55., 63., 34., 42., 50., 58., 36., 44., 52., 60.,
      38., 46., 54., 62., 40., 48., 56., 64., 65., 73., 81., 89., 67., 75.,
      83., 91., 69., 77., 85., 93., 71., 79., 87., 95., 66., 74., 82., 90.,
      68., 76., 84., 92., 70., 78., 86., 94., 72., 80., 88., 96.};
  const std::vector<int> sizes = {3, 4, 4, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  33., 34., 35., 36., 37., 38.,
      39., 40., 65., 66., 67., 68., 69., 70., 71., 72., 9.,  10., 11., 12.,
      13., 14., 15., 16., 41., 42., 43., 44., 45., 46., 47., 48., 73., 74.,
      75., 76., 77., 78., 79., 80., 17., 18., 19., 20., 21., 22., 23., 24.,
      49., 50., 51., 52., 53., 54., 55., 56., 81., 82., 83., 84., 85., 86.,
      87., 88., 25., 26., 27., 28., 29., 30., 31., 32., 57., 58., 59., 60.,
      61., 62., 63., 64., 89., 90., 91., 92., 93., 94., 95., 96.};
  const std::vector<int> sizes = {3, 4, 4, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  2.,  4.,  6.,  8.,  33., 35., 37., 39., 34., 36.,
      38., 40., 65., 67., 69., 71., 66., 68., 70., 72., 9.,  11., 13., 15.,
      10., 12., 14., 16., 41., 43., 45., 47., 42., 44., 46., 48., 73., 75.,
      77., 79., 74., 76., 78., 80., 17., 19., 21., 23., 18., 20., 22., 24.,
      49., 51., 53., 55., 50., 52., 54., 56., 81., 83., 85., 87., 82., 84.,
      86., 88., 25., 27., 29., 31., 26., 28., 30., 32., 57., 59., 61., 63.,
      58., 60., 62., 64., 89., 91., 93., 95., 90., 92., 94., 96.};
  const std::vector<int> sizes = {3, 4, 4, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  33., 34., 65., 66., 3.,  4.,  35., 36., 67., 68., 5.,  6.,
      37., 38., 69., 70., 7.,  8.,  39., 40., 71., 72., 9.,  10., 41., 42.,
      73., 74., 11., 12., 43., 44., 75., 76., 13., 14., 45., 46., 77., 78.,
      15., 16., 47., 48., 79., 80., 17., 18., 49., 50., 81., 82., 19., 20.,
      51., 52., 83., 84., 21., 22., 53., 54., 85., 86., 23., 24., 55., 56.,
      87., 88., 25., 26., 57., 58., 89., 90., 27., 28., 59., 60., 91., 92.,
      29., 30., 61., 62., 93., 94., 31., 32., 63., 64., 95., 96.};
  const std::vector<int> sizes = {3, 4, 4, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 2.,  34., 66., 3.,  35., 67., 4.,  36., 68., 5.,  37.,
      69., 6.,  38., 70., 7.,  39., 71., 8.,  40., 72., 9.,  41., 73., 10.,
      42., 74., 11., 43., 75., 12., 44., 76., 13., 45., 77., 14., 46., 78.,
      15., 47., 79., 16., 48., 80., 17., 49., 81., 18., 50., 82., 19., 51.,
      83., 20., 52., 84., 21., 53., 85., 22., 54., 86., 23., 55., 87., 24.,
      56., 88., 25., 57., 89., 26., 58., 90., 27., 59., 91., 28., 60., 92.,
      29., 61., 93., 30., 62., 94., 31., 63., 95., 32., 64., 96.};
  const std::vector<int> sizes = {3, 4, 4, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  33., 35., 37., 39., 65., 67., 69., 71., 2.,  4.,
      6.,  8.,  34., 36., 38., 40., 66., 68., 70., 72., 9.,  11., 13., 15.,
      41., 43., 45., 47., 73., 75., 77., 79., 10., 12., 14., 16., 42., 44.,
      46., 48., 74., 76., 78., 80., 17., 19., 21., 23., 49., 51., 53., 55.,
      81., 83., 85., 87., 18., 20., 22., 24., 50., 52., 54., 56., 82., 84.,
      86., 88., 25., 27., 29., 31., 57., 59., 61., 63., 89., 91., 93., 95.,
      26., 28., 30., 32., 58., 60., 62., 64., 90., 92., 94., 96.};
  const std::vector<int> sizes = {3, 4, 4, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 3.,  35., 67., 5.,  37., 69., 7.,  39., 71., 2.,  34.,
      66., 4.,  36., 68., 6.,  38., 70., 8.,  40., 72., 9.,  41., 73., 11.,
      43., 75., 13., 45., 77., 15., 47., 79., 10., 42., 74., 12., 44., 76.,
      14., 46., 78., 16., 48., 80., 17., 49., 81., 19., 51., 83., 21., 53.,
      85., 23., 55., 87., 18., 50., 82., 20., 52., 84., 22., 54., 86., 24.,
      56., 88., 25., 57., 89., 27., 59., 91., 29., 61., 93., 31., 63., 95.,
      26., 58., 90., 28., 60., 92., 30., 62., 94., 32., 64., 96.};
  const std::vector<int> sizes = {3, 4, 4, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  9.,  10., 17., 18., 25., 26., 33., 34., 41., 42., 49., 50.,
      57., 58., 65., 66., 73., 74., 81., 82., 89., 90., 3.,  4.,  11., 12.,
      19., 20., 27., 28., 35., 36., 43., 44., 51., 52., 59., 60., 67., 68.,
      75., 76., 83., 84., 91., 92., 5.,  6.,  13., 14., 21., 22., 29., 30.,
      37., 38., 45., 46., 53., 54., 61., 62., 69., 70., 77., 78., 85., 86.,
      93., 94., 7.,  8.,  15., 16., 23., 24., 31., 32., 39., 40., 47., 48.,
      55., 56., 63., 64., 71., 72., 79., 80., 87., 88., 95., 96.};
  const std::vector<int> sizes = {3, 4, 4, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 2.,  10., 18., 26., 33., 41., 49., 57., 34., 42.,
      50., 58., 65., 73., 81., 89., 66., 74., 82., 90., 3.,  11., 19., 27.,
      4.,  12., 20., 28., 35., 43., 51., 59., 36., 44., 52., 60., 67., 75.,
      83., 91., 68., 76., 84., 92., 5.,  13., 21., 29., 6.,  14., 22., 30.,
      37., 45., 53., 61., 38., 46., 54., 62., 69., 77., 85., 93., 70., 78.,
      86., 94., 7.,  15., 23., 31., 8.,  16., 24., 32., 39., 47., 55., 63.,
      40., 48., 56., 64., 71., 79., 87., 95., 72., 80., 88., 96.};
  const std::vector<int> sizes = {3, 4, 4, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  33., 34., 65., 66., 9.,  10., 41., 42., 73., 74., 17., 18.,
      49., 50., 81., 82., 25., 26., 57., 58., 89., 90., 3.,  4.,  35., 36.,
      67., 68., 11., 12., 43., 44., 75., 76., 19., 20., 51., 52., 83., 84.,
      27., 28., 59., 60., 91., 92., 5.,  6.,  37., 38., 69., 70., 13., 14.,
      45., 46., 77., 78., 21., 22., 53., 54., 85., 86., 29., 30., 61., 62.,
      93., 94., 7.,  8.,  39., 40., 71., 72., 15., 16., 47., 48., 79., 80.,
      23., 24., 55., 56., 87., 88., 31., 32., 63., 64., 95., 96.};
  const std::vector<int> sizes = {3, 4, 4, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 2.,  34., 66., 9.,  41., 73., 10., 42., 74., 17., 49.,
      81., 18., 50., 82., 25., 57., 89., 26., 58., 90., 3.,  35., 67., 4.,
      36., 68., 11., 43., 75., 12., 44., 76., 19., 51., 83., 20., 52., 84.,
      27., 59., 91., 28., 60., 92., 5.,  37., 69., 6.,  38., 70., 13., 45.,
      77., 14., 46., 78., 21., 53., 85., 22., 54., 86., 29., 61., 93., 30.,
      62., 94., 7.,  39., 71., 8.,  40., 72., 15., 47., 79., 16., 48., 80.,
      23., 55., 87., 24., 56., 88., 31., 63., 95., 32., 64., 96.};
  const std::vector<int> sizes = {3, 4, 4, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 33., 41., 49., 57., 65., 73., 81., 89., 2.,  10.,
      18., 26., 34., 42., 50., 58., 66., 74., 82., 90., 3.,  11., 19., 27.,
      35., 43., 51., 59., 67., 75., 83., 91., 4.,  12., 20., 28., 36., 44.,
      52., 60., 68., 76., 84., 92., 5.,  13., 21., 29., 37., 45., 53., 61.,
      69., 77., 85., 93., 6.,  14., 22., 30., 38., 46., 54., 62., 70., 78.,
      86., 94., 7.,  15., 23., 31., 39., 47., 55., 63., 71., 79., 87., 95.,
      8.,  16., 24., 32., 40., 48., 56., 64., 72., 80., 88., 96.};
  const std::vector<int> sizes = {3, 4, 4, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 9.,  41., 73., 17., 49., 81., 25., 57., 89., 2.,  34.,
      66., 10., 42., 74., 18., 50., 82., 26., 58., 90., 3.,  35., 67., 11.,
      43., 75., 19., 51., 83., 27., 59., 91., 4.,  36., 68., 12., 44., 76.,
      20., 52., 84., 28., 60., 92., 5.,  37., 69., 13., 45., 77., 21., 53.,
      85., 29., 61., 93., 6.,  38., 70., 14., 46., 78., 22., 54., 86., 30.,
      62., 94., 7.,  39., 71., 15., 47., 79., 23., 55., 87., 31., 63., 95.,
      8.,  40., 72., 16., 48., 80., 24., 56., 88., 32., 64., 96.};
  const std::vector<int> sizes = {3, 4, 4, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23., 25., 27.,
      29., 31., 33., 35., 37., 39., 41., 43., 45., 47., 49., 51., 53., 55.,
      57., 59., 61., 63., 65., 67., 69., 71., 73., 75., 77., 79., 81., 83.,
      85., 87., 89., 91., 93., 95., 2.,  4.,  6.,  8.,  10., 12., 14., 16.,
      18., 20., 22., 24., 26., 28., 30., 32., 34., 36., 38., 40., 42., 44.,
      46., 48., 50., 52., 54., 56., 58., 60., 62., 64., 66., 68., 70., 72.,
      74., 76., 78., 80., 82., 84., 86., 88., 90., 92., 94., 96.};
  const std::vector<int> sizes = {3, 4, 4, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 3.,  11., 19., 27., 5.,  13., 21., 29., 7.,  15.,
      23., 31., 33., 41., 49., 57., 35., 43., 51., 59., 37., 45., 53., 61.,
      39., 47., 55., 63., 65., 73., 81., 89., 67., 75., 83., 91., 69., 77.,
      85., 93., 71., 79., 87., 95., 2.,  10., 18., 26., 4.,  12., 20., 28.,
      6.,  14., 22., 30., 8.,  16., 24., 32., 34., 42., 50., 58., 36., 44.,
      52., 60., 38., 46., 54., 62., 40., 48., 56., 64., 66., 74., 82., 90.,
      68., 76., 84., 92., 70., 78., 86., 94., 72., 80., 88., 96.};
  const std::vector<int> sizes = {3, 4, 4, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  33., 35., 37., 39., 65., 67., 69., 71., 9.,  11.,
      13., 15., 41., 43., 45., 47., 73., 75., 77., 79., 17., 19., 21., 23.,
      49., 51., 53., 55., 81., 83., 85., 87., 25., 27., 29., 31., 57., 59.,
      61., 63., 89., 91., 93., 95., 2.,  4.,  6.,  8.,  34., 36., 38., 40.,
      66., 68., 70., 72., 10., 12., 14., 16., 42., 44., 46., 48., 74., 76.,
      78., 80., 18., 20., 22., 24., 50., 52., 54., 56., 82., 84., 86., 88.,
      26., 28., 30., 32., 58., 60., 62., 64., 90., 92., 94., 96.};
  const std::vector<int> sizes = {3, 4, 4, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 3.,  35., 67., 5.,  37., 69., 7.,  39., 71., 9.,  41.,
      73., 11., 43., 75., 13., 45., 77., 15., 47., 79., 17., 49., 81., 19.,
      51., 83., 21., 53., 85., 23., 55., 87., 25., 57., 89., 27., 59., 91.,
      29., 61., 93., 31., 63., 95., 2.,  34., 66., 4.,  36., 68., 6.,  38.,
      70., 8.,  40., 72., 10., 42., 74., 12., 44., 76., 14., 46., 78., 16.,
      48., 80., 18., 50., 82., 20., 52., 84., 22., 54., 86., 24., 56., 88.,
      26., 58., 90., 28., 60., 92., 30., 62., 94., 32., 64., 96.};
  const std::vector<int> sizes = {3, 4, 4, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 33., 41., 49., 57., 65., 73., 81., 89., 3.,  11.,
      19., 27., 35., 43., 51., 59., 67., 75., 83., 91., 5.,  13., 21., 29.,
      37., 45., 53., 61., 69., 77., 85., 93., 7.,  15., 23., 31., 39., 47.,
      55., 63., 71., 79., 87., 95., 2.,  10., 18., 26., 34., 42., 50., 58.,
      66., 74., 82., 90., 4.,  12., 20., 28., 36., 44., 52., 60., 68., 76.,
      84., 92., 6.,  14., 22., 30., 38., 46., 54., 62., 70., 78., 86., 94.,
      8.,  16., 24., 32., 40., 48., 56., 64., 72., 80., 88., 96.};
  const std::vector<int> sizes = {3, 4, 4, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 9.,  41., 73., 17., 49., 81., 25., 57., 89., 3.,  35.,
      67., 11., 43., 75., 19., 51., 83., 27., 59., 91., 5.,  37., 69., 13.,
      45., 77., 21., 53., 85., 29., 61., 93., 7.,  39., 71., 15., 47., 79.,
      23., 55., 87., 31., 63., 95., 2.,  34., 66., 10., 42., 74., 18., 50.,
      82., 26., 58., 90., 4.,  36., 68., 12., 44., 76., 20., 52., 84., 28.,
      60., 92., 6.,  38., 70., 14., 46., 78., 22., 54., 86., 30., 62., 94.,
      8.,  40., 72., 16., 48., 80., 24., 56., 88., 32., 64., 96.};
  const std::vector<int> sizes = {3, 4, 4, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13.,  14.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 105., 106., 107., 108.,
      109., 110., 111., 112., 113., 114., 115., 116., 117., 118., 119., 120.,
      121., 122., 123., 124., 125., 126., 127., 128., 129., 130., 131., 132.,
      133., 134., 135., 136., 137., 138., 139., 140., 141., 142., 143., 144.};
  const std::vector<int> sizes = {3, 4, 4, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   7.,   10.,  2.,   5.,   8.,   11.,  3.,   6.,   9.,   12.,
      13.,  16.,  19.,  22.,  14.,  17.,  20.,  23.,  15.,  18.,  21.,  24.,
      25.,  28.,  31.,  34.,  26.,  29.,  32.,  35.,  27.,  30.,  33.,  36.,
      37.,  40.,  43.,  46.,  38.,  41.,  44.,  47.,  39.,  42.,  45.,  48.,
      49.,  52.,  55.,  58.,  50.,  53.,  56.,  59.,  51.,  54.,  57.,  60.,
      61.,  64.,  67.,  70.,  62.,  65.,  68.,  71.,  63.,  66.,  69.,  72.,
      73.,  76.,  79.,  82.,  74.,  77.,  80.,  83.,  75.,  78.,  81.,  84.,
      85.,  88.,  91.,  94.,  86.,  89.,  92.,  95.,  87.,  90.,  93.,  96.,
      97.,  100., 103., 106., 98.,  101., 104., 107., 99.,  102., 105., 108.,
      109., 112., 115., 118., 110., 113., 116., 119., 111., 114., 117., 120.,
      121., 124., 127., 130., 122., 125., 128., 131., 123., 126., 129., 132.,
      133., 136., 139., 142., 134., 137., 140., 143., 135., 138., 141., 144.};
  const std::vector<int> sizes = {3, 4, 4, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   13.,  14.,  15.,  25.,  26.,  27.,  37.,  38.,  39.,
      4.,   5.,   6.,   16.,  17.,  18.,  28.,  29.,  30.,  40.,  41.,  42.,
      7.,   8.,   9.,   19.,  20.,  21.,  31.,  32.,  33.,  43.,  44.,  45.,
      10.,  11.,  12.,  22.,  23.,  24.,  34.,  35.,  36.,  46.,  47.,  48.,
      49.,  50.,  51.,  61.,  62.,  63.,  73.,  74.,  75.,  85.,  86.,  87.,
      52.,  53.,  54.,  64.,  65.,  66.,  76.,  77.,  78.,  88.,  89.,  90.,
      55.,  56.,  57.,  67.,  68.,  69.,  79.,  80.,  81.,  91.,  92.,  93.,
      58.,  59.,  60.,  70.,  71.,  72.,  82.,  83.,  84.,  94.,  95.,  96.,
      97.,  98.,  99.,  109., 110., 111., 121., 122., 123., 133., 134., 135.,
      100., 101., 102., 112., 113., 114., 124., 125., 126., 136., 137., 138.,
      103., 104., 105., 115., 116., 117., 127., 128., 129., 139., 140., 141.,
      106., 107., 108., 118., 119., 120., 130., 131., 132., 142., 143., 144.};
  const std::vector<int> sizes = {3, 4, 4, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  37.,  2.,   14.,  26.,  38.,  3.,   15.,  27.,  39.,
      4.,   16.,  28.,  40.,  5.,   17.,  29.,  41.,  6.,   18.,  30.,  42.,
      7.,   19.,  31.,  43.,  8.,   20.,  32.,  44.,  9.,   21.,  33.,  45.,
      10.,  22.,  34.,  46.,  11.,  23.,  35.,  47.,  12.,  24.,  36.,  48.,
      49.,  61.,  73.,  85.,  50.,  62.,  74.,  86.,  51.,  63.,  75.,  87.,
      52.,  64.,  76.,  88.,  53.,  65.,  77.,  89.,  54.,  66.,  78.,  90.,
      55.,  67.,  79.,  91.,  56.,  68.,  80.,  92.,  57.,  69.,  81.,  93.,
      58.,  70.,  82.,  94.,  59.,  71.,  83.,  95.,  60.,  72.,  84.,  96.,
      97.,  109., 121., 133., 98.,  110., 122., 134., 99.,  111., 123., 135.,
      100., 112., 124., 136., 101., 113., 125., 137., 102., 114., 126., 138.,
      103., 115., 127., 139., 104., 116., 128., 140., 105., 117., 129., 141.,
      106., 118., 130., 142., 107., 119., 131., 143., 108., 120., 132., 144.};
  const std::vector<int> sizes = {3, 4, 4, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   7.,   10.,  13.,  16.,  19.,  22.,  25.,  28.,  31.,  34.,
      37.,  40.,  43.,  46.,  2.,   5.,   8.,   11.,  14.,  17.,  20.,  23.,
      26.,  29.,  32.,  35.,  38.,  41.,  44.,  47.,  3.,   6.,   9.,   12.,
      15.,  18.,  21.,  24.,  27.,  30.,  33.,  36.,  39.,  42.,  45.,  48.,
      49.,  52.,  55.,  58.,  61.,  64.,  67.,  70.,  73.,  76.,  79.,  82.,
      85.,  88.,  91.,  94.,  50.,  53.,  56.,  59.,  62.,  65.,  68.,  71.,
      74.,  77.,  80.,  83.,  86.,  89.,  92.,  95.,  51.,  54.,  57.,  60.,
      63.,  66.,  69.,  72.,  75.,  78.,  81.,  84.,  87.,  90.,  93.,  96.,
      97.,  100., 103., 106., 109., 112., 115., 118., 121., 124., 127., 130.,
      133., 136., 139., 142., 98.,  101., 104., 107., 110., 113., 116., 119.,
      122., 125., 128., 131., 134., 137., 140., 143., 99.,  102., 105., 108.,
      111., 114., 117., 120., 123., 126., 129., 132., 135., 138., 141., 144.};
  const std::vector<int> sizes = {3, 4, 4, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  37.,  4.,   16.,  28.,  40.,  7.,   19.,  31.,  43.,
      10.,  22.,  34.,  46.,  2.,   14.,  26.,  38.,  5.,   17.,  29.,  41.,
      8.,   20.,  32.,  44.,  11.,  23.,  35.,  47.,  3.,   15.,  27.,  39.,
      6.,   18.,  30.,  42.,  9.,   21.,  33.,  45.,  12.,  24.,  36.,  48.,
      49.,  61.,  73.,  85.,  52.,  64.,  76.,  88.,  55.,  67.,  79.,  91.,
      58.,  70.,  82.,  94.,  50.,  62.,  74.,  86.,  53.,  65.,  77.,  89.,
      56.,  68.,  80.,  92.,  59.,  71.,  83.,  95.,  51.,  63.,  75.,  87.,
      54.,  66.,  78.,  90.,  57.,  69.,  81.,  93.,  60.,  72.,  84.,  96.,
      97.,  109., 121., 133., 100., 112., 124., 136., 103., 115., 127., 139.,
      106., 118., 130., 142., 98.,  110., 122., 134., 101., 113., 125., 137.,
      104., 116., 128., 140., 107., 119., 131., 143., 99.,  111., 123., 135.,
      102., 114., 126., 138., 105., 117., 129., 141., 108., 120., 132., 144.};
  const std::vector<int> sizes = {3, 4, 4, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 105., 106., 107., 108.,
      13.,  14.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      109., 110., 111., 112., 113., 114., 115., 116., 117., 118., 119., 120.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      121., 122., 123., 124., 125., 126., 127., 128., 129., 130., 131., 132.,
      37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      133., 134., 135., 136., 137., 138., 139., 140., 141., 142., 143., 144.};
  const std::vector<int> sizes = {3, 4, 4, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   7.,   10.,  2.,   5.,   8.,   11.,  3.,   6.,   9.,   12.,
      49.,  52.,  55.,  58.,  50.,  53.,  56.,  59.,  51.,  54.,  57.,  60.,
      97.,  100., 103., 106., 98.,  101., 104., 107., 99.,  102., 105., 108.,
      13.,  16.,  19.,  22.,  14.,  17.,  20.,  23.,  15.,  18.,  21.,  24.,
      61.,  64.,  67.,  70.,  62.,  65.,  68.,  71.,  63.,  66.,  69.,  72.,
      109., 112., 115., 118., 110., 113., 116., 119., 111., 114., 117., 120.,
      25.,  28.,  31.,  34.,  26.,  29.,  32.,  35.,  27.,  30.,  33.,  36.,
      73.,  76.,  79.,  82.,  74.,  77.,  80.,  83.,  75.,  78.,  81.,  84.,
      121., 124., 127., 130., 122., 125., 128., 131., 123., 126., 129., 132.,
      37.,  40.,  43.,  46.,  38.,  41.,  44.,  47.,  39.,  42.,  45.,  48.,
      85.,  88.,  91.,  94.,  86.,  89.,  92.,  95.,  87.,  90.,  93.,  96.,
      133., 136., 139., 142., 134., 137., 140., 143., 135., 138., 141., 144.};
  const std::vector<int> sizes = {3, 4, 4, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   49.,  50.,  51.,  97.,  98.,  99.,  4.,   5.,   6.,
      52.,  53.,  54.,  100., 101., 102., 7.,   8.,   9.,   55.,  56.,  57.,
      103., 104., 105., 10.,  11.,  12.,  58.,  59.,  60.,  106., 107., 108.,
      13.,  14.,  15.,  61.,  62.,  63.,  109., 110., 111., 16.,  17.,  18.,
      64.,  65.,  66.,  112., 113., 114., 19.,  20.,  21.,  67.,  68.,  69.,
      115., 116., 117., 22.,  23.,  24.,  70.,  71.,  72.,  118., 119., 120.,
      25.,  26.,  27.,  73.,  74.,  75.,  121., 122., 123., 28.,  29.,  30.,
      76.,  77.,  78.,  124., 125., 126., 31.,  32.,  33.,  79.,  80.,  81.,
      127., 128., 129., 34.,  35.,  36.,  82.,  83.,  84.,  130., 131., 132.,
      37.,  38.,  39.,  85.,  86.,  87.,  133., 134., 135., 40.,  41.,  42.,
      88.,  89.,  90.,  136., 137., 138., 43.,  44.,  45.,  91.,  92.,  93.,
      139., 140., 141., 46.,  47.,  48.,  94.,  95.,  96.,  142., 143., 144.};
  const std::vector<int> sizes = {3, 4, 4, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  2.,  50., 98.,  3.,  51., 99.,  4.,  52., 100.,
      5.,  53., 101., 6.,  54., 102., 7.,  55., 103., 8.,  56., 104.,
      9.,  57., 105., 10., 58., 106., 11., 59., 107., 12., 60., 108.,
      13., 61., 109., 14., 62., 110., 15., 63., 111., 16., 64., 112.,
      17., 65., 113., 18., 66., 114., 19., 67., 115., 20., 68., 116.,
      21., 69., 117., 22., 70., 118., 23., 71., 119., 24., 72., 120.,
      25., 73., 121., 26., 74., 122., 27., 75., 123., 28., 76., 124.,
      29., 77., 125., 30., 78., 126., 31., 79., 127., 32., 80., 128.,
      33., 81., 129., 34., 82., 130., 35., 83., 131., 36., 84., 132.,
      37., 85., 133., 38., 86., 134., 39., 87., 135., 40., 88., 136.,
      41., 89., 137., 42., 90., 138., 43., 91., 139., 44., 92., 140.,
      45., 93., 141., 46., 94., 142., 47., 95., 143., 48., 96., 144.};
  const std::vector<int> sizes = {3, 4, 4, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 49., 52., 55., 58., 97.,  100., 103., 106.,
      2.,  5.,  8.,  11., 50., 53., 56., 59., 98.,  101., 104., 107.,
      3.,  6.,  9.,  12., 51., 54., 57., 60., 99.,  102., 105., 108.,
      13., 16., 19., 22., 61., 64., 67., 70., 109., 112., 115., 118.,
      14., 17., 20., 23., 62., 65., 68., 71., 110., 113., 116., 119.,
      15., 18., 21., 24., 63., 66., 69., 72., 111., 114., 117., 120.,
      25., 28., 31., 34., 73., 76., 79., 82., 121., 124., 127., 130.,
      26., 29., 32., 35., 74., 77., 80., 83., 122., 125., 128., 131.,
      27., 30., 33., 36., 75., 78., 81., 84., 123., 126., 129., 132.,
      37., 40., 43., 46., 85., 88., 91., 94., 133., 136., 139., 142.,
      38., 41., 44., 47., 86., 89., 92., 95., 134., 137., 140., 143.,
      39., 42., 45., 48., 87., 90., 93., 96., 135., 138., 141., 144.};
  const std::vector<int> sizes = {3, 4, 4, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  4.,  52., 100., 7.,  55., 103., 10., 58., 106.,
      2.,  50., 98.,  5.,  53., 101., 8.,  56., 104., 11., 59., 107.,
      3.,  51., 99.,  6.,  54., 102., 9.,  57., 105., 12., 60., 108.,
      13., 61., 109., 16., 64., 112., 19., 67., 115., 22., 70., 118.,
      14., 62., 110., 17., 65., 113., 20., 68., 116., 23., 71., 119.,
      15., 63., 111., 18., 66., 114., 21., 69., 117., 24., 72., 120.,
      25., 73., 121., 28., 76., 124., 31., 79., 127., 34., 82., 130.,
      26., 74., 122., 29., 77., 125., 32., 80., 128., 35., 83., 131.,
      27., 75., 123., 30., 78., 126., 33., 81., 129., 36., 84., 132.,
      37., 85., 133., 40., 88., 136., 43., 91., 139., 46., 94., 142.,
      38., 86., 134., 41., 89., 137., 44., 92., 140., 47., 95., 143.,
      39., 87., 135., 42., 90., 138., 45., 93., 141., 48., 96., 144.};
  const std::vector<int> sizes = {3, 4, 4, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   13.,  14.,  15.,  25.,  26.,  27.,  37.,  38.,  39.,
      49.,  50.,  51.,  61.,  62.,  63.,  73.,  74.,  75.,  85.,  86.,  87.,
      97.,  98.,  99.,  109., 110., 111., 121., 122., 123., 133., 134., 135.,
      4.,   5.,   6.,   16.,  17.,  18.,  28.,  29.,  30.,  40.,  41.,  42.,
      52.,  53.,  54.,  64.,  65.,  66.,  76.,  77.,  78.,  88.,  89.,  90.,
      100., 101., 102., 112., 113., 114., 124., 125., 126., 136., 137., 138.,
      7.,   8.,   9.,   19.,  20.,  21.,  31.,  32.,  33.,  43.,  44.,  45.,
      55.,  56.,  57.,  67.,  68.,  69.,  79.,  80.,  81.,  91.,  92.,  93.,
      103., 104., 105., 115., 116., 117., 127., 128., 129., 139., 140., 141.,
      10.,  11.,  12.,  22.,  23.,  24.,  34.,  35.,  36.,  46.,  47.,  48.,
      58.,  59.,  60.,  70.,  71.,  72.,  82.,  83.,  84.,  94.,  95.,  96.,
      106., 107., 108., 118., 119., 120., 130., 131., 132., 142., 143., 144.};
  const std::vector<int> sizes = {3, 4, 4, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  37.,  2.,   14.,  26.,  38.,  3.,   15.,  27.,  39.,
      49.,  61.,  73.,  85.,  50.,  62.,  74.,  86.,  51.,  63.,  75.,  87.,
      97.,  109., 121., 133., 98.,  110., 122., 134., 99.,  111., 123., 135.,
      4.,   16.,  28.,  40.,  5.,   17.,  29.,  41.,  6.,   18.,  30.,  42.,
      52.,  64.,  76.,  88.,  53.,  65.,  77.,  89.,  54.,  66.,  78.,  90.,
      100., 112., 124., 136., 101., 113., 125., 137., 102., 114., 126., 138.,
      7.,   19.,  31.,  43.,  8.,   20.,  32.,  44.,  9.,   21.,  33.,  45.,
      55.,  67.,  79.,  91.,  56.,  68.,  80.,  92.,  57.,  69.,  81.,  93.,
      103., 115., 127., 139., 104., 116., 128., 140., 105., 117., 129., 141.,
      10.,  22.,  34.,  46.,  11.,  23.,  35.,  47.,  12.,  24.,  36.,  48.,
      58.,  70.,  82.,  94.,  59.,  71.,  83.,  95.,  60.,  72.,  84.,  96.,
      106., 118., 130., 142., 107., 119., 131., 143., 108., 120., 132., 144.};
  const std::vector<int> sizes = {3, 4, 4, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   49.,  50.,  51.,  97.,  98.,  99.,  13.,  14.,  15.,
      61.,  62.,  63.,  109., 110., 111., 25.,  26.,  27.,  73.,  74.,  75.,
      121., 122., 123., 37.,  38.,  39.,  85.,  86.,  87.,  133., 134., 135.,
      4.,   5.,   6.,   52.,  53.,  54.,  100., 101., 102., 16.,  17.,  18.,
      64.,  65.,  66.,  112., 113., 114., 28.,  29.,  30.,  76.,  77.,  78.,
      124., 125., 126., 40.,  41.,  42.,  88.,  89.,  90.,  136., 137., 138.,
      7.,   8.,   9.,   55.,  56.,  57.,  103., 104., 105., 19.,  20.,  21.,
      67.,  68.,  69.,  115., 116., 117., 31.,  32.,  33.,  79.,  80.,  81.,
      127., 128., 129., 43.,  44.,  45.,  91.,  92.,  93.,  139., 140., 141.,
      10.,  11.,  12.,  58.,  59.,  60.,  106., 107., 108., 22.,  23.,  24.,
      70.,  71.,  72.,  118., 119., 120., 34.,  35.,  36.,  82.,  83.,  84.,
      130., 131., 132., 46.,  47.,  48.,  94.,  95.,  96.,  142., 143., 144.};
  const std::vector<int> sizes = {3, 4, 4, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  2.,  50., 98.,  3.,  51., 99.,  13., 61., 109.,
      14., 62., 110., 15., 63., 111., 25., 73., 121., 26., 74., 122.,
      27., 75., 123., 37., 85., 133., 38., 86., 134., 39., 87., 135.,
      4.,  52., 100., 5.,  53., 101., 6.,  54., 102., 16., 64., 112.,
      17., 65., 113., 18., 66., 114., 28., 76., 124., 29., 77., 125.,
      30., 78., 126., 40., 88., 136., 41., 89., 137., 42., 90., 138.,
      7.,  55., 103., 8.,  56., 104., 9.,  57., 105., 19., 67., 115.,
      20., 68., 116., 21., 69., 117., 31., 79., 127., 32., 80., 128.,
      33., 81., 129., 43., 91., 139., 44., 92., 140., 45., 93., 141.,
      10., 58., 106., 11., 59., 107., 12., 60., 108., 22., 70., 118.,
      23., 71., 119., 24., 72., 120., 34., 82., 130., 35., 83., 131.,
      36., 84., 132., 46., 94., 142., 47., 95., 143., 48., 96., 144.};
  const std::vector<int> sizes = {3, 4, 4, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 49., 61., 73., 85., 97.,  109., 121., 133.,
      2.,  14., 26., 38., 50., 62., 74., 86., 98.,  110., 122., 134.,
      3.,  15., 27., 39., 51., 63., 75., 87., 99.,  111., 123., 135.,
      4.,  16., 28., 40., 52., 64., 76., 88., 100., 112., 124., 136.,
      5.,  17., 29., 41., 53., 65., 77., 89., 101., 113., 125., 137.,
      6.,  18., 30., 42., 54., 66., 78., 90., 102., 114., 126., 138.,
      7.,  19., 31., 43., 55., 67., 79., 91., 103., 115., 127., 139.,
      8.,  20., 32., 44., 56., 68., 80., 92., 104., 116., 128., 140.,
      9.,  21., 33., 45., 57., 69., 81., 93., 105., 117., 129., 141.,
      10., 22., 34., 46., 58., 70., 82., 94., 106., 118., 130., 142.,
      11., 23., 35., 47., 59., 71., 83., 95., 107., 119., 131., 143.,
      12., 24., 36., 48., 60., 72., 84., 96., 108., 120., 132., 144.};
  const std::vector<int> sizes = {3, 4, 4, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  13., 61., 109., 25., 73., 121., 37., 85., 133.,
      2.,  50., 98.,  14., 62., 110., 26., 74., 122., 38., 86., 134.,
      3.,  51., 99.,  15., 63., 111., 27., 75., 123., 39., 87., 135.,
      4.,  52., 100., 16., 64., 112., 28., 76., 124., 40., 88., 136.,
      5.,  53., 101., 17., 65., 113., 29., 77., 125., 41., 89., 137.,
      6.,  54., 102., 18., 66., 114., 30., 78., 126., 42., 90., 138.,
      7.,  55., 103., 19., 67., 115., 31., 79., 127., 43., 91., 139.,
      8.,  56., 104., 20., 68., 116., 32., 80., 128., 44., 92., 140.,
      9.,  57., 105., 21., 69., 117., 33., 81., 129., 45., 93., 141.,
      10., 58., 106., 22., 70., 118., 34., 82., 130., 46., 94., 142.,
      11., 59., 107., 23., 71., 119., 35., 83., 131., 47., 95., 143.,
      12., 60., 108., 24., 72., 120., 36., 84., 132., 48., 96., 144.};
  const std::vector<int> sizes = {3, 4, 4, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   7.,   10.,  13.,  16.,  19.,  22.,  25.,  28.,  31.,  34.,
      37.,  40.,  43.,  46.,  49.,  52.,  55.,  58.,  61.,  64.,  67.,  70.,
      73.,  76.,  79.,  82.,  85.,  88.,  91.,  94.,  97.,  100., 103., 106.,
      109., 112., 115., 118., 121., 124., 127., 130., 133., 136., 139., 142.,
      2.,   5.,   8.,   11.,  14.,  17.,  20.,  23.,  26.,  29.,  32.,  35.,
      38.,  41.,  44.,  47.,  50.,  53.,  56.,  59.,  62.,  65.,  68.,  71.,
      74.,  77.,  80.,  83.,  86.,  89.,  92.,  95.,  98.,  101., 104., 107.,
      110., 113., 116., 119., 122., 125., 128., 131., 134., 137., 140., 143.,
      3.,   6.,   9.,   12.,  15.,  18.,  21.,  24.,  27.,  30.,  33.,  36.,
      39.,  42.,  45.,  48.,  51.,  54.,  57.,  60.,  63.,  66.,  69.,  72.,
      75.,  78.,  81.,  84.,  87.,  90.,  93.,  96.,  99.,  102., 105., 108.,
      111., 114., 117., 120., 123., 126., 129., 132., 135., 138., 141., 144.};
  const std::vector<int> sizes = {3, 4, 4, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  37.,  4.,   16.,  28.,  40.,  7.,   19.,  31.,  43.,
      10.,  22.,  34.,  46.,  49.,  61.,  73.,  85.,  52.,  64.,  76.,  88.,
      55.,  67.,  79.,  91.,  58.,  70.,  82.,  94.,  97.,  109., 121., 133.,
      100., 112., 124., 136., 103., 115., 127., 139., 106., 118., 130., 142.,
      2.,   14.,  26.,  38.,  5.,   17.,  29.,  41.,  8.,   20.,  32.,  44.,
      11.,  23.,  35.,  47.,  50.,  62.,  74.,  86.,  53.,  65.,  77.,  89.,
      56.,  68.,  80.,  92.,  59.,  71.,  83.,  95.,  98.,  110., 122., 134.,
      101., 113., 125., 137., 104., 116., 128., 140., 107., 119., 131., 143.,
      3.,   15.,  27.,  39.,  6.,   18.,  30.,  42.,  9.,   21.,  33.,  45.,
      12.,  24.,  36.,  48.,  51.,  63.,  75.,  87.,  54.,  66.,  78.,  90.,
      57.,  69.,  81.,  93.,  60.,  72.,  84.,  96.,  99.,  111., 123., 135.,
      102., 114., 126., 138., 105., 117., 129., 141., 108., 120., 132., 144.};
  const std::vector<int> sizes = {3, 4, 4, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 49., 52., 55., 58., 97.,  100., 103., 106.,
      13., 16., 19., 22., 61., 64., 67., 70., 109., 112., 115., 118.,
      25., 28., 31., 34., 73., 76., 79., 82., 121., 124., 127., 130.,
      37., 40., 43., 46., 85., 88., 91., 94., 133., 136., 139., 142.,
      2.,  5.,  8.,  11., 50., 53., 56., 59., 98.,  101., 104., 107.,
      14., 17., 20., 23., 62., 65., 68., 71., 110., 113., 116., 119.,
      26., 29., 32., 35., 74., 77., 80., 83., 122., 125., 128., 131.,
      38., 41., 44., 47., 86., 89., 92., 95., 134., 137., 140., 143.,
      3.,  6.,  9.,  12., 51., 54., 57., 60., 99.,  102., 105., 108.,
      15., 18., 21., 24., 63., 66., 69., 72., 111., 114., 117., 120.,
      27., 30., 33., 36., 75., 78., 81., 84., 123., 126., 129., 132.,
      39., 42., 45., 48., 87., 90., 93., 96., 135., 138., 141., 144.};
  const std::vector<int> sizes = {3, 4, 4, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  4.,  52., 100., 7.,  55., 103., 10., 58., 106.,
      13., 61., 109., 16., 64., 112., 19., 67., 115., 22., 70., 118.,
      25., 73., 121., 28., 76., 124., 31., 79., 127., 34., 82., 130.,
      37., 85., 133., 40., 88., 136., 43., 91., 139., 46., 94., 142.,
      2.,  50., 98.,  5.,  53., 101., 8.,  56., 104., 11., 59., 107.,
      14., 62., 110., 17., 65., 113., 20., 68., 116., 23., 71., 119.,
      26., 74., 122., 29., 77., 125., 32., 80., 128., 35., 83., 131.,
      38., 86., 134., 41., 89., 137., 44., 92., 140., 47., 95., 143.,
      3.,  51., 99.,  6.,  54., 102., 9.,  57., 105., 12., 60., 108.,
      15., 63., 111., 18., 66., 114., 21., 69., 117., 24., 72., 120.,
      27., 75., 123., 30., 78., 126., 33., 81., 129., 36., 84., 132.,
      39., 87., 135., 42., 90., 138., 45., 93., 141., 48., 96., 144.};
  const std::vector<int> sizes = {3, 4, 4, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 49., 61., 73., 85., 97.,  109., 121., 133.,
      4.,  16., 28., 40., 52., 64., 76., 88., 100., 112., 124., 136.,
      7.,  19., 31., 43., 55., 67., 79., 91., 103., 115., 127., 139.,
      10., 22., 34., 46., 58., 70., 82., 94., 106., 118., 130., 142.,
      2.,  14., 26., 38., 50., 62., 74., 86., 98.,  110., 122., 134.,
      5.,  17., 29., 41., 53., 65., 77., 89., 101., 113., 125., 137.,
      8.,  20., 32., 44., 56., 68., 80., 92., 104., 116., 128., 140.,
      11., 23., 35., 47., 59., 71., 83., 95., 107., 119., 131., 143.,
      3.,  15., 27., 39., 51., 63., 75., 87., 99.,  111., 123., 135.,
      6.,  18., 30., 42., 54., 66., 78., 90., 102., 114., 126., 138.,
      9.,  21., 33., 45., 57., 69., 81., 93., 105., 117., 129., 141.,
      12., 24., 36., 48., 60., 72., 84., 96., 108., 120., 132., 144.};
  const std::vector<int> sizes = {3, 4, 4, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  13., 61., 109., 25., 73., 121., 37., 85., 133.,
      4.,  52., 100., 16., 64., 112., 28., 76., 124., 40., 88., 136.,
      7.,  55., 103., 19., 67., 115., 31., 79., 127., 43., 91., 139.,
      10., 58., 106., 22., 70., 118., 34., 82., 130., 46., 94., 142.,
      2.,  50., 98.,  14., 62., 110., 26., 74., 122., 38., 86., 134.,
      5.,  53., 101., 17., 65., 113., 29., 77., 125., 41., 89., 137.,
      8.,  56., 104., 20., 68., 116., 32., 80., 128., 44., 92., 140.,
      11., 59., 107., 23., 71., 119., 35., 83., 131., 47., 95., 143.,
      3.,  51., 99.,  15., 63., 111., 27., 75., 123., 39., 87., 135.,
      6.,  54., 102., 18., 66., 114., 30., 78., 126., 42., 90., 138.,
      9.,  57., 105., 21., 69., 117., 33., 81., 129., 45., 93., 141.,
      12., 60., 108., 24., 72., 120., 36., 84., 132., 48., 96., 144.};
  const std::vector<int> sizes = {3, 4, 4, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13.,  14.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 105., 106., 107., 108.,
      109., 110., 111., 112., 113., 114., 115., 116., 117., 118., 119., 120.,
      121., 122., 123., 124., 125., 126., 127., 128., 129., 130., 131., 132.,
      133., 134., 135., 136., 137., 138., 139., 140., 141., 142., 143., 144.,
      145., 146., 147., 148., 149., 150., 151., 152., 153., 154., 155., 156.,
      157., 158., 159., 160., 161., 162., 163., 164., 165., 166., 167., 168.,
      169., 170., 171., 172., 173., 174., 175., 176., 177., 178., 179., 180.,
      181., 182., 183., 184., 185., 186., 187., 188., 189., 190., 191., 192.};
  const std::vector<int> sizes = {3, 4, 4, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  2.,   6.,   10.,  14.,  3.,   7.,   11.,  15.,
      4.,   8.,   12.,  16.,  17.,  21.,  25.,  29.,  18.,  22.,  26.,  30.,
      19.,  23.,  27.,  31.,  20.,  24.,  28.,  32.,  33.,  37.,  41.,  45.,
      34.,  38.,  42.,  46.,  35.,  39.,  43.,  47.,  36.,  40.,  44.,  48.,
      49.,  53.,  57.,  61.,  50.,  54.,  58.,  62.,  51.,  55.,  59.,  63.,
      52.,  56.,  60.,  64.,  65.,  69.,  73.,  77.,  66.,  70.,  74.,  78.,
      67.,  71.,  75.,  79.,  68.,  72.,  76.,  80.,  81.,  85.,  89.,  93.,
      82.,  86.,  90.,  94.,  83.,  87.,  91.,  95.,  84.,  88.,  92.,  96.,
      97.,  101., 105., 109., 98.,  102., 106., 110., 99.,  103., 107., 111.,
      100., 104., 108., 112., 113., 117., 121., 125., 114., 118., 122., 126.,
      115., 119., 123., 127., 116., 120., 124., 128., 129., 133., 137., 141.,
      130., 134., 138., 142., 131., 135., 139., 143., 132., 136., 140., 144.,
      145., 149., 153., 157., 146., 150., 154., 158., 147., 151., 155., 159.,
      148., 152., 156., 160., 161., 165., 169., 173., 162., 166., 170., 174.,
      163., 167., 171., 175., 164., 168., 172., 176., 177., 181., 185., 189.,
      178., 182., 186., 190., 179., 183., 187., 191., 180., 184., 188., 192.};
  const std::vector<int> sizes = {3, 4, 4, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   17.,  18.,  19.,  20.,  33.,  34.,  35.,  36.,
      49.,  50.,  51.,  52.,  5.,   6.,   7.,   8.,   21.,  22.,  23.,  24.,
      37.,  38.,  39.,  40.,  53.,  54.,  55.,  56.,  9.,   10.,  11.,  12.,
      25.,  26.,  27.,  28.,  41.,  42.,  43.,  44.,  57.,  58.,  59.,  60.,
      13.,  14.,  15.,  16.,  29.,  30.,  31.,  32.,  45.,  46.,  47.,  48.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  81.,  82.,  83.,  84.,
      97.,  98.,  99.,  100., 113., 114., 115., 116., 69.,  70.,  71.,  72.,
      85.,  86.,  87.,  88.,  101., 102., 103., 104., 117., 118., 119., 120.,
      73.,  74.,  75.,  76.,  89.,  90.,  91.,  92.,  105., 106., 107., 108.,
      121., 122., 123., 124., 77.,  78.,  79.,  80.,  93.,  94.,  95.,  96.,
      109., 110., 111., 112., 125., 126., 127., 128., 129., 130., 131., 132.,
      145., 146., 147., 148., 161., 162., 163., 164., 177., 178., 179., 180.,
      133., 134., 135., 136., 149., 150., 151., 152., 165., 166., 167., 168.,
      181., 182., 183., 184., 137., 138., 139., 140., 153., 154., 155., 156.,
      169., 170., 171., 172., 185., 186., 187., 188., 141., 142., 143., 144.,
      157., 158., 159., 160., 173., 174., 175., 176., 189., 190., 191., 192.};
  const std::vector<int> sizes = {3, 4, 4, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   17.,  33.,  49.,  2.,   18.,  34.,  50.,  3.,   19.,  35.,  51.,
      4.,   20.,  36.,  52.,  5.,   21.,  37.,  53.,  6.,   22.,  38.,  54.,
      7.,   23.,  39.,  55.,  8.,   24.,  40.,  56.,  9.,   25.,  41.,  57.,
      10.,  26.,  42.,  58.,  11.,  27.,  43.,  59.,  12.,  28.,  44.,  60.,
      13.,  29.,  45.,  61.,  14.,  30.,  46.,  62.,  15.,  31.,  47.,  63.,
      16.,  32.,  48.,  64.,  65.,  81.,  97.,  113., 66.,  82.,  98.,  114.,
      67.,  83.,  99.,  115., 68.,  84.,  100., 116., 69.,  85.,  101., 117.,
      70.,  86.,  102., 118., 71.,  87.,  103., 119., 72.,  88.,  104., 120.,
      73.,  89.,  105., 121., 74.,  90.,  106., 122., 75.,  91.,  107., 123.,
      76.,  92.,  108., 124., 77.,  93.,  109., 125., 78.,  94.,  110., 126.,
      79.,  95.,  111., 127., 80.,  96.,  112., 128., 129., 145., 161., 177.,
      130., 146., 162., 178., 131., 147., 163., 179., 132., 148., 164., 180.,
      133., 149., 165., 181., 134., 150., 166., 182., 135., 151., 167., 183.,
      136., 152., 168., 184., 137., 153., 169., 185., 138., 154., 170., 186.,
      139., 155., 171., 187., 140., 156., 172., 188., 141., 157., 173., 189.,
      142., 158., 174., 190., 143., 159., 175., 191., 144., 160., 176., 192.};
  const std::vector<int> sizes = {3, 4, 4, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  17.,  21.,  25.,  29.,  33.,  37.,  41.,  45.,
      49.,  53.,  57.,  61.,  2.,   6.,   10.,  14.,  18.,  22.,  26.,  30.,
      34.,  38.,  42.,  46.,  50.,  54.,  58.,  62.,  3.,   7.,   11.,  15.,
      19.,  23.,  27.,  31.,  35.,  39.,  43.,  47.,  51.,  55.,  59.,  63.,
      4.,   8.,   12.,  16.,  20.,  24.,  28.,  32.,  36.,  40.,  44.,  48.,
      52.,  56.,  60.,  64.,  65.,  69.,  73.,  77.,  81.,  85.,  89.,  93.,
      97.,  101., 105., 109., 113., 117., 121., 125., 66.,  70.,  74.,  78.,
      82.,  86.,  90.,  94.,  98.,  102., 106., 110., 114., 118., 122., 126.,
      67.,  71.,  75.,  79.,  83.,  87.,  91.,  95.,  99.,  103., 107., 111.,
      115., 119., 123., 127., 68.,  72.,  76.,  80.,  84.,  88.,  92.,  96.,
      100., 104., 108., 112., 116., 120., 124., 128., 129., 133., 137., 141.,
      145., 149., 153., 157., 161., 165., 169., 173., 177., 181., 185., 189.,
      130., 134., 138., 142., 146., 150., 154., 158., 162., 166., 170., 174.,
      178., 182., 186., 190., 131., 135., 139., 143., 147., 151., 155., 159.,
      163., 167., 171., 175., 179., 183., 187., 191., 132., 136., 140., 144.,
      148., 152., 156., 160., 164., 168., 172., 176., 180., 184., 188., 192.};
  const std::vector<int> sizes = {3, 4, 4, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   17.,  33.,  49.,  5.,   21.,  37.,  53.,  9.,   25.,  41.,  57.,
      13.,  29.,  45.,  61.,  2.,   18.,  34.,  50.,  6.,   22.,  38.,  54.,
      10.,  26.,  42.,  58.,  14.,  30.,  46.,  62.,  3.,   19.,  35.,  51.,
      7.,   23.,  39.,  55.,  11.,  27.,  43.,  59.,  15.,  31.,  47.,  63.,
      4.,   20.,  36.,  52.,  8.,   24.,  40.,  56.,  12.,  28.,  44.,  60.,
      16.,  32.,  48.,  64.,  65.,  81.,  97.,  113., 69.,  85.,  101., 117.,
      73.,  89.,  105., 121., 77.,  93.,  109., 125., 66.,  82.,  98.,  114.,
      70.,  86.,  102., 118., 74.,  90.,  106., 122., 78.,  94.,  110., 126.,
      67.,  83.,  99.,  115., 71.,  87.,  103., 119., 75.,  91.,  107., 123.,
      79.,  95.,  111., 127., 68.,  84.,  100., 116., 72.,  88.,  104., 120.,
      76.,  92.,  108., 124., 80.,  96.,  112., 128., 129., 145., 161., 177.,
      133., 149., 165., 181., 137., 153., 169., 185., 141., 157., 173., 189.,
      130., 146., 162., 178., 134., 150., 166., 182., 138., 154., 170., 186.,
      142., 158., 174., 190., 131., 147., 163., 179., 135., 151., 167., 183.,
      139., 155., 171., 187., 143., 159., 175., 191., 132., 148., 164., 180.,
      136., 152., 168., 184., 140., 156., 172., 188., 144., 160., 176., 192.};
  const std::vector<int> sizes = {3, 4, 4, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13.,  14.,  15.,  16.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  129., 130., 131., 132.,
      133., 134., 135., 136., 137., 138., 139., 140., 141., 142., 143., 144.,
      17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,  25.,  26.,  27.,  28.,
      29.,  30.,  31.,  32.,  81.,  82.,  83.,  84.,  85.,  86.,  87.,  88.,
      89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,  145., 146., 147., 148.,
      149., 150., 151., 152., 153., 154., 155., 156., 157., 158., 159., 160.,
      33.,  34.,  35.,  36.,  37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,
      45.,  46.,  47.,  48.,  97.,  98.,  99.,  100., 101., 102., 103., 104.,
      105., 106., 107., 108., 109., 110., 111., 112., 161., 162., 163., 164.,
      165., 166., 167., 168., 169., 170., 171., 172., 173., 174., 175., 176.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      61.,  62.,  63.,  64.,  113., 114., 115., 116., 117., 118., 119., 120.,
      121., 122., 123., 124., 125., 126., 127., 128., 177., 178., 179., 180.,
      181., 182., 183., 184., 185., 186., 187., 188., 189., 190., 191., 192.};
  const std::vector<int> sizes = {3, 4, 4, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  2.,   6.,   10.,  14.,  3.,   7.,   11.,  15.,
      4.,   8.,   12.,  16.,  65.,  69.,  73.,  77.,  66.,  70.,  74.,  78.,
      67.,  71.,  75.,  79.,  68.,  72.,  76.,  80.,  129., 133., 137., 141.,
      130., 134., 138., 142., 131., 135., 139., 143., 132., 136., 140., 144.,
      17.,  21.,  25.,  29.,  18.,  22.,  26.,  30.,  19.,  23.,  27.,  31.,
      20.,  24.,  28.,  32.,  81.,  85.,  89.,  93.,  82.,  86.,  90.,  94.,
      83.,  87.,  91.,  95.,  84.,  88.,  92.,  96.,  145., 149., 153., 157.,
      146., 150., 154., 158., 147., 151., 155., 159., 148., 152., 156., 160.,
      33.,  37.,  41.,  45.,  34.,  38.,  42.,  46.,  35.,  39.,  43.,  47.,
      36.,  40.,  44.,  48.,  97.,  101., 105., 109., 98.,  102., 106., 110.,
      99.,  103., 107., 111., 100., 104., 108., 112., 161., 165., 169., 173.,
      162., 166., 170., 174., 163., 167., 171., 175., 164., 168., 172., 176.,
      49.,  53.,  57.,  61.,  50.,  54.,  58.,  62.,  51.,  55.,  59.,  63.,
      52.,  56.,  60.,  64.,  113., 117., 121., 125., 114., 118., 122., 126.,
      115., 119., 123., 127., 116., 120., 124., 128., 177., 181., 185., 189.,
      178., 182., 186., 190., 179., 183., 187., 191., 180., 184., 188., 192.};
  const std::vector<int> sizes = {3, 4, 4, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  65.,  66.,  67.,  68.,  129., 130., 131., 132.,
      5.,  6.,  7.,  8.,  69.,  70.,  71.,  72.,  133., 134., 135., 136.,
      9.,  10., 11., 12., 73.,  74.,  75.,  76.,  137., 138., 139., 140.,
      13., 14., 15., 16., 77.,  78.,  79.,  80.,  141., 142., 143., 144.,
      17., 18., 19., 20., 81.,  82.,  83.,  84.,  145., 146., 147., 148.,
      21., 22., 23., 24., 85.,  86.,  87.,  88.,  149., 150., 151., 152.,
      25., 26., 27., 28., 89.,  90.,  91.,  92.,  153., 154., 155., 156.,
      29., 30., 31., 32., 93.,  94.,  95.,  96.,  157., 158., 159., 160.,
      33., 34., 35., 36., 97.,  98.,  99.,  100., 161., 162., 163., 164.,
      37., 38., 39., 40., 101., 102., 103., 104., 165., 166., 167., 168.,
      41., 42., 43., 44., 105., 106., 107., 108., 169., 170., 171., 172.,
      45., 46., 47., 48., 109., 110., 111., 112., 173., 174., 175., 176.,
      49., 50., 51., 52., 113., 114., 115., 116., 177., 178., 179., 180.,
      53., 54., 55., 56., 117., 118., 119., 120., 181., 182., 183., 184.,
      57., 58., 59., 60., 121., 122., 123., 124., 185., 186., 187., 188.,
      61., 62., 63., 64., 125., 126., 127., 128., 189., 190., 191., 192.};
  const std::vector<int> sizes = {3, 4, 4, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  65.,  129., 2.,  66.,  130., 3.,  67.,  131., 4.,  68.,  132.,
      5.,  69.,  133., 6.,  70.,  134., 7.,  71.,  135., 8.,  72.,  136.,
      9.,  73.,  137., 10., 74.,  138., 11., 75.,  139., 12., 76.,  140.,
      13., 77.,  141., 14., 78.,  142., 15., 79.,  143., 16., 80.,  144.,
      17., 81.,  145., 18., 82.,  146., 19., 83.,  147., 20., 84.,  148.,
      21., 85.,  149., 22., 86.,  150., 23., 87.,  151., 24., 88.,  152.,
      25., 89.,  153., 26., 90.,  154., 27., 91.,  155., 28., 92.,  156.,
      29., 93.,  157., 30., 94.,  158., 31., 95.,  159., 32., 96.,  160.,
      33., 97.,  161., 34., 98.,  162., 35., 99.,  163., 36., 100., 164.,
      37., 101., 165., 38., 102., 166., 39., 103., 167., 40., 104., 168.,
      41., 105., 169., 42., 106., 170., 43., 107., 171., 44., 108., 172.,
      45., 109., 173., 46., 110., 174., 47., 111., 175., 48., 112., 176.,
      49., 113., 177., 50., 114., 178., 51., 115., 179., 52., 116., 180.,
      53., 117., 181., 54., 118., 182., 55., 119., 183., 56., 120., 184.,
      57., 121., 185., 58., 122., 186., 59., 123., 187., 60., 124., 188.,
      61., 125., 189., 62., 126., 190., 63., 127., 191., 64., 128., 192.};
  const std::vector<int> sizes = {3, 4, 4, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 65.,  69.,  73.,  77.,  129., 133., 137., 141.,
      2.,  6.,  10., 14., 66.,  70.,  74.,  78.,  130., 134., 138., 142.,
      3.,  7.,  11., 15., 67.,  71.,  75.,  79.,  131., 135., 139., 143.,
      4.,  8.,  12., 16., 68.,  72.,  76.,  80.,  132., 136., 140., 144.,
      17., 21., 25., 29., 81.,  85.,  89.,  93.,  145., 149., 153., 157.,
      18., 22., 26., 30., 82.,  86.,  90.,  94.,  146., 150., 154., 158.,
      19., 23., 27., 31., 83.,  87.,  91.,  95.,  147., 151., 155., 159.,
      20., 24., 28., 32., 84.,  88.,  92.,  96.,  148., 152., 156., 160.,
      33., 37., 41., 45., 97.,  101., 105., 109., 161., 165., 169., 173.,
      34., 38., 42., 46., 98.,  102., 106., 110., 162., 166., 170., 174.,
      35., 39., 43., 47., 99.,  103., 107., 111., 163., 167., 171., 175.,
      36., 40., 44., 48., 100., 104., 108., 112., 164., 168., 172., 176.,
      49., 53., 57., 61., 113., 117., 121., 125., 177., 181., 185., 189.,
      50., 54., 58., 62., 114., 118., 122., 126., 178., 182., 186., 190.,
      51., 55., 59., 63., 115., 119., 123., 127., 179., 183., 187., 191.,
      52., 56., 60., 64., 116., 120., 124., 128., 180., 184., 188., 192.};
  const std::vector<int> sizes = {3, 4, 4, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  65.,  129., 5.,  69.,  133., 9.,  73.,  137., 13., 77.,  141.,
      2.,  66.,  130., 6.,  70.,  134., 10., 74.,  138., 14., 78.,  142.,
      3.,  67.,  131., 7.,  71.,  135., 11., 75.,  139., 15., 79.,  143.,
      4.,  68.,  132., 8.,  72.,  136., 12., 76.,  140., 16., 80.,  144.,
      17., 81.,  145., 21., 85.,  149., 25., 89.,  153., 29., 93.,  157.,
      18., 82.,  146., 22., 86.,  150., 26., 90.,  154., 30., 94.,  158.,
      19., 83.,  147., 23., 87.,  151., 27., 91.,  155., 31., 95.,  159.,
      20., 84.,  148., 24., 88.,  152., 28., 92.,  156., 32., 96.,  160.,
      33., 97.,  161., 37., 101., 165., 41., 105., 169., 45., 109., 173.,
      34., 98.,  162., 38., 102., 166., 42., 106., 170., 46., 110., 174.,
      35., 99.,  163., 39., 103., 167., 43., 107., 171., 47., 111., 175.,
      36., 100., 164., 40., 104., 168., 44., 108., 172., 48., 112., 176.,
      49., 113., 177., 53., 117., 181., 57., 121., 185., 61., 125., 189.,
      50., 114., 178., 54., 118., 182., 58., 122., 186., 62., 126., 190.,
      51., 115., 179., 55., 119., 183., 59., 123., 187., 63., 127., 191.,
      52., 116., 180., 56., 120., 184., 60., 124., 188., 64., 128., 192.};
  const std::vector<int> sizes = {3, 4, 4, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   17.,  18.,  19.,  20.,  33.,  34.,  35.,  36.,
      49.,  50.,  51.,  52.,  65.,  66.,  67.,  68.,  81.,  82.,  83.,  84.,
      97.,  98.,  99.,  100., 113., 114., 115., 116., 129., 130., 131., 132.,
      145., 146., 147., 148., 161., 162., 163., 164., 177., 178., 179., 180.,
      5.,   6.,   7.,   8.,   21.,  22.,  23.,  24.,  37.,  38.,  39.,  40.,
      53.,  54.,  55.,  56.,  69.,  70.,  71.,  72.,  85.,  86.,  87.,  88.,
      101., 102., 103., 104., 117., 118., 119., 120., 133., 134., 135., 136.,
      149., 150., 151., 152., 165., 166., 167., 168., 181., 182., 183., 184.,
      9.,   10.,  11.,  12.,  25.,  26.,  27.,  28.,  41.,  42.,  43.,  44.,
      57.,  58.,  59.,  60.,  73.,  74.,  75.,  76.,  89.,  90.,  91.,  92.,
      105., 106., 107., 108., 121., 122., 123., 124., 137., 138., 139., 140.,
      153., 154., 155., 156., 169., 170., 171., 172., 185., 186., 187., 188.,
      13.,  14.,  15.,  16.,  29.,  30.,  31.,  32.,  45.,  46.,  47.,  48.,
      61.,  62.,  63.,  64.,  77.,  78.,  79.,  80.,  93.,  94.,  95.,  96.,
      109., 110., 111., 112., 125., 126., 127., 128., 141., 142., 143., 144.,
      157., 158., 159., 160., 173., 174., 175., 176., 189., 190., 191., 192.};
  const std::vector<int> sizes = {3, 4, 4, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   17.,  33.,  49.,  2.,   18.,  34.,  50.,  3.,   19.,  35.,  51.,
      4.,   20.,  36.,  52.,  65.,  81.,  97.,  113., 66.,  82.,  98.,  114.,
      67.,  83.,  99.,  115., 68.,  84.,  100., 116., 129., 145., 161., 177.,
      130., 146., 162., 178., 131., 147., 163., 179., 132., 148., 164., 180.,
      5.,   21.,  37.,  53.,  6.,   22.,  38.,  54.,  7.,   23.,  39.,  55.,
      8.,   24.,  40.,  56.,  69.,  85.,  101., 117., 70.,  86.,  102., 118.,
      71.,  87.,  103., 119., 72.,  88.,  104., 120., 133., 149., 165., 181.,
      134., 150., 166., 182., 135., 151., 167., 183., 136., 152., 168., 184.,
      9.,   25.,  41.,  57.,  10.,  26.,  42.,  58.,  11.,  27.,  43.,  59.,
      12.,  28.,  44.,  60.,  73.,  89.,  105., 121., 74.,  90.,  106., 122.,
      75.,  91.,  107., 123., 76.,  92.,  108., 124., 137., 153., 169., 185.,
      138., 154., 170., 186., 139., 155., 171., 187., 140., 156., 172., 188.,
      13.,  29.,  45.,  61.,  14.,  30.,  46.,  62.,  15.,  31.,  47.,  63.,
      16.,  32.,  48.,  64.,  77.,  93.,  109., 125., 78.,  94.,  110., 126.,
      79.,  95.,  111., 127., 80.,  96.,  112., 128., 141., 157., 173., 189.,
      142., 158., 174., 190., 143., 159., 175., 191., 144., 160., 176., 192.};
  const std::vector<int> sizes = {3, 4, 4, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  65.,  66.,  67.,  68.,  129., 130., 131., 132.,
      17., 18., 19., 20., 81.,  82.,  83.,  84.,  145., 146., 147., 148.,
      33., 34., 35., 36., 97.,  98.,  99.,  100., 161., 162., 163., 164.,
      49., 50., 51., 52., 113., 114., 115., 116., 177., 178., 179., 180.,
      5.,  6.,  7.,  8.,  69.,  70.,  71.,  72.,  133., 134., 135., 136.,
      21., 22., 23., 24., 85.,  86.,  87.,  88.,  149., 150., 151., 152.,
      37., 38., 39., 40., 101., 102., 103., 104., 165., 166., 167., 168.,
      53., 54., 55., 56., 117., 118., 119., 120., 181., 182., 183., 184.,
      9.,  10., 11., 12., 73.,  74.,  75.,  76.,  137., 138., 139., 140.,
      25., 26., 27., 28., 89.,  90.,  91.,  92.,  153., 154., 155., 156.,
      41., 42., 43., 44., 105., 106., 107., 108., 169., 170., 171., 172.,
      57., 58., 59., 60., 121., 122., 123., 124., 185., 186., 187., 188.,
      13., 14., 15., 16., 77.,  78.,  79.,  80.,  141., 142., 143., 144.,
      29., 30., 31., 32., 93.,  94.,  95.,  96.,  157., 158., 159., 160.,
      45., 46., 47., 48., 109., 110., 111., 112., 173., 174., 175., 176.,
      61., 62., 63., 64., 125., 126., 127., 128., 189., 190., 191., 192.};
  const std::vector<int> sizes = {3, 4, 4, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  65.,  129., 2.,  66.,  130., 3.,  67.,  131., 4.,  68.,  132.,
      17., 81.,  145., 18., 82.,  146., 19., 83.,  147., 20., 84.,  148.,
      33., 97.,  161., 34., 98.,  162., 35., 99.,  163., 36., 100., 164.,
      49., 113., 177., 50., 114., 178., 51., 115., 179., 52., 116., 180.,
      5.,  69.,  133., 6.,  70.,  134., 7.,  71.,  135., 8.,  72.,  136.,
      21., 85.,  149., 22., 86.,  150., 23., 87.,  151., 24., 88.,  152.,
      37., 101., 165., 38., 102., 166., 39., 103., 167., 40., 104., 168.,
      53., 117., 181., 54., 118., 182., 55., 119., 183., 56., 120., 184.,
      9.,  73.,  137., 10., 74.,  138., 11., 75.,  139., 12., 76.,  140.,
      25., 89.,  153., 26., 90.,  154., 27., 91.,  155., 28., 92.,  156.,
      41., 105., 169., 42., 106., 170., 43., 107., 171., 44., 108., 172.,
      57., 121., 185., 58., 122., 186., 59., 123., 187., 60., 124., 188.,
      13., 77.,  141., 14., 78.,  142., 15., 79.,  143., 16., 80.,  144.,
      29., 93.,  157., 30., 94.,  158., 31., 95.,  159., 32., 96.,  160.,
      45., 109., 173., 46., 110., 174., 47., 111., 175., 48., 112., 176.,
      61., 125., 189., 62., 126., 190., 63., 127., 191., 64., 128., 192.};
  const std::vector<int> sizes = {3, 4, 4, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 65., 81., 97.,  113., 129., 145., 161., 177.,
      2.,  18., 34., 50., 66., 82., 98.,  114., 130., 146., 162., 178.,
      3.,  19., 35., 51., 67., 83., 99.,  115., 131., 147., 163., 179.,
      4.,  20., 36., 52., 68., 84., 100., 116., 132., 148., 164., 180.,
      5.,  21., 37., 53., 69., 85., 101., 117., 133., 149., 165., 181.,
      6.,  22., 38., 54., 70., 86., 102., 118., 134., 150., 166., 182.,
      7.,  23., 39., 55., 71., 87., 103., 119., 135., 151., 167., 183.,
      8.,  24., 40., 56., 72., 88., 104., 120., 136., 152., 168., 184.,
      9.,  25., 41., 57., 73., 89., 105., 121., 137., 153., 169., 185.,
      10., 26., 42., 58., 74., 90., 106., 122., 138., 154., 170., 186.,
      11., 27., 43., 59., 75., 91., 107., 123., 139., 155., 171., 187.,
      12., 28., 44., 60., 76., 92., 108., 124., 140., 156., 172., 188.,
      13., 29., 45., 61., 77., 93., 109., 125., 141., 157., 173., 189.,
      14., 30., 46., 62., 78., 94., 110., 126., 142., 158., 174., 190.,
      15., 31., 47., 63., 79., 95., 111., 127., 143., 159., 175., 191.,
      16., 32., 48., 64., 80., 96., 112., 128., 144., 160., 176., 192.};
  const std::vector<int> sizes = {3, 4, 4, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  65., 129., 17., 81., 145., 33., 97.,  161., 49., 113., 177.,
      2.,  66., 130., 18., 82., 146., 34., 98.,  162., 50., 114., 178.,
      3.,  67., 131., 19., 83., 147., 35., 99.,  163., 51., 115., 179.,
      4.,  68., 132., 20., 84., 148., 36., 100., 164., 52., 116., 180.,
      5.,  69., 133., 21., 85., 149., 37., 101., 165., 53., 117., 181.,
      6.,  70., 134., 22., 86., 150., 38., 102., 166., 54., 118., 182.,
      7.,  71., 135., 23., 87., 151., 39., 103., 167., 55., 119., 183.,
      8.,  72., 136., 24., 88., 152., 40., 104., 168., 56., 120., 184.,
      9.,  73., 137., 25., 89., 153., 41., 105., 169., 57., 121., 185.,
      10., 74., 138., 26., 90., 154., 42., 106., 170., 58., 122., 186.,
      11., 75., 139., 27., 91., 155., 43., 107., 171., 59., 123., 187.,
      12., 76., 140., 28., 92., 156., 44., 108., 172., 60., 124., 188.,
      13., 77., 141., 29., 93., 157., 45., 109., 173., 61., 125., 189.,
      14., 78., 142., 30., 94., 158., 46., 110., 174., 62., 126., 190.,
      15., 79., 143., 31., 95., 159., 47., 111., 175., 63., 127., 191.,
      16., 80., 144., 32., 96., 160., 48., 112., 176., 64., 128., 192.};
  const std::vector<int> sizes = {3, 4, 4, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  17.,  21.,  25.,  29.,  33.,  37.,  41.,  45.,
      49.,  53.,  57.,  61.,  65.,  69.,  73.,  77.,  81.,  85.,  89.,  93.,
      97.,  101., 105., 109., 113., 117., 121., 125., 129., 133., 137., 141.,
      145., 149., 153., 157., 161., 165., 169., 173., 177., 181., 185., 189.,
      2.,   6.,   10.,  14.,  18.,  22.,  26.,  30.,  34.,  38.,  42.,  46.,
      50.,  54.,  58.,  62.,  66.,  70.,  74.,  78.,  82.,  86.,  90.,  94.,
      98.,  102., 106., 110., 114., 118., 122., 126., 130., 134., 138., 142.,
      146., 150., 154., 158., 162., 166., 170., 174., 178., 182., 186., 190.,
      3.,   7.,   11.,  15.,  19.,  23.,  27.,  31.,  35.,  39.,  43.,  47.,
      51.,  55.,  59.,  63.,  67.,  71.,  75.,  79.,  83.,  87.,  91.,  95.,
      99.,  103., 107., 111., 115., 119., 123., 127., 131., 135., 139., 143.,
      147., 151., 155., 159., 163., 167., 171., 175., 179., 183., 187., 191.,
      4.,   8.,   12.,  16.,  20.,  24.,  28.,  32.,  36.,  40.,  44.,  48.,
      52.,  56.,  60.,  64.,  68.,  72.,  76.,  80.,  84.,  88.,  92.,  96.,
      100., 104., 108., 112., 116., 120., 124., 128., 132., 136., 140., 144.,
      148., 152., 156., 160., 164., 168., 172., 176., 180., 184., 188., 192.};
  const std::vector<int> sizes = {3, 4, 4, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   17.,  33.,  49.,  5.,   21.,  37.,  53.,  9.,   25.,  41.,  57.,
      13.,  29.,  45.,  61.,  65.,  81.,  97.,  113., 69.,  85.,  101., 117.,
      73.,  89.,  105., 121., 77.,  93.,  109., 125., 129., 145., 161., 177.,
      133., 149., 165., 181., 137., 153., 169., 185., 141., 157., 173., 189.,
      2.,   18.,  34.,  50.,  6.,   22.,  38.,  54.,  10.,  26.,  42.,  58.,
      14.,  30.,  46.,  62.,  66.,  82.,  98.,  114., 70.,  86.,  102., 118.,
      74.,  90.,  106., 122., 78.,  94.,  110., 126., 130., 146., 162., 178.,
      134., 150., 166., 182., 138., 154., 170., 186., 142., 158., 174., 190.,
      3.,   19.,  35.,  51.,  7.,   23.,  39.,  55.,  11.,  27.,  43.,  59.,
      15.,  31.,  47.,  63.,  67.,  83.,  99.,  115., 71.,  87.,  103., 119.,
      75.,  91.,  107., 123., 79.,  95.,  111., 127., 131., 147., 163., 179.,
      135., 151., 167., 183., 139., 155., 171., 187., 143., 159., 175., 191.,
      4.,   20.,  36.,  52.,  8.,   24.,  40.,  56.,  12.,  28.,  44.,  60.,
      16.,  32.,  48.,  64.,  68.,  84.,  100., 116., 72.,  88.,  104., 120.,
      76.,  92.,  108., 124., 80.,  96.,  112., 128., 132., 148., 164., 180.,
      136., 152., 168., 184., 140., 156., 172., 188., 144., 160., 176., 192.};
  const std::vector<int> sizes = {3, 4, 4, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 65.,  69.,  73.,  77.,  129., 133., 137., 141.,
      17., 21., 25., 29., 81.,  85.,  89.,  93.,  145., 149., 153., 157.,
      33., 37., 41., 45., 97.,  101., 105., 109., 161., 165., 169., 173.,
      49., 53., 57., 61., 113., 117., 121., 125., 177., 181., 185., 189.,
      2.,  6.,  10., 14., 66.,  70.,  74.,  78.,  130., 134., 138., 142.,
      18., 22., 26., 30., 82.,  86.,  90.,  94.,  146., 150., 154., 158.,
      34., 38., 42., 46., 98.,  102., 106., 110., 162., 166., 170., 174.,
      50., 54., 58., 62., 114., 118., 122., 126., 178., 182., 186., 190.,
      3.,  7.,  11., 15., 67.,  71.,  75.,  79.,  131., 135., 139., 143.,
      19., 23., 27., 31., 83.,  87.,  91.,  95.,  147., 151., 155., 159.,
      35., 39., 43., 47., 99.,  103., 107., 111., 163., 167., 171., 175.,
      51., 55., 59., 63., 115., 119., 123., 127., 179., 183., 187., 191.,
      4.,  8.,  12., 16., 68.,  72.,  76.,  80.,  132., 136., 140., 144.,
      20., 24., 28., 32., 84.,  88.,  92.,  96.,  148., 152., 156., 160.,
      36., 40., 44., 48., 100., 104., 108., 112., 164., 168., 172., 176.,
      52., 56., 60., 64., 116., 120., 124., 128., 180., 184., 188., 192.};
  const std::vector<int> sizes = {3, 4, 4, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  65.,  129., 5.,  69.,  133., 9.,  73.,  137., 13., 77.,  141.,
      17., 81.,  145., 21., 85.,  149., 25., 89.,  153., 29., 93.,  157.,
      33., 97.,  161., 37., 101., 165., 41., 105., 169., 45., 109., 173.,
      49., 113., 177., 53., 117., 181., 57., 121., 185., 61., 125., 189.,
      2.,  66.,  130., 6.,  70.,  134., 10., 74.,  138., 14., 78.,  142.,
      18., 82.,  146., 22., 86.,  150., 26., 90.,  154., 30., 94.,  158.,
      34., 98.,  162., 38., 102., 166., 42., 106., 170., 46., 110., 174.,
      50., 114., 178., 54., 118., 182., 58., 122., 186., 62., 126., 190.,
      3.,  67.,  131., 7.,  71.,  135., 11., 75.,  139., 15., 79.,  143.,
      19., 83.,  147., 23., 87.,  151., 27., 91.,  155., 31., 95.,  159.,
      35., 99.,  163., 39., 103., 167., 43., 107., 171., 47., 111., 175.,
      51., 115., 179., 55., 119., 183., 59., 123., 187., 63., 127., 191.,
      4.,  68.,  132., 8.,  72.,  136., 12., 76.,  140., 16., 80.,  144.,
      20., 84.,  148., 24., 88.,  152., 28., 92.,  156., 32., 96.,  160.,
      36., 100., 164., 40., 104., 168., 44., 108., 172., 48., 112., 176.,
      52., 116., 180., 56., 120., 184., 60., 124., 188., 64., 128., 192.};
  const std::vector<int> sizes = {3, 4, 4, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 65., 81., 97.,  113., 129., 145., 161., 177.,
      5.,  21., 37., 53., 69., 85., 101., 117., 133., 149., 165., 181.,
      9.,  25., 41., 57., 73., 89., 105., 121., 137., 153., 169., 185.,
      13., 29., 45., 61., 77., 93., 109., 125., 141., 157., 173., 189.,
      2.,  18., 34., 50., 66., 82., 98.,  114., 130., 146., 162., 178.,
      6.,  22., 38., 54., 70., 86., 102., 118., 134., 150., 166., 182.,
      10., 26., 42., 58., 74., 90., 106., 122., 138., 154., 170., 186.,
      14., 30., 46., 62., 78., 94., 110., 126., 142., 158., 174., 190.,
      3.,  19., 35., 51., 67., 83., 99.,  115., 131., 147., 163., 179.,
      7.,  23., 39., 55., 71., 87., 103., 119., 135., 151., 167., 183.,
      11., 27., 43., 59., 75., 91., 107., 123., 139., 155., 171., 187.,
      15., 31., 47., 63., 79., 95., 111., 127., 143., 159., 175., 191.,
      4.,  20., 36., 52., 68., 84., 100., 116., 132., 148., 164., 180.,
      8.,  24., 40., 56., 72., 88., 104., 120., 136., 152., 168., 184.,
      12., 28., 44., 60., 76., 92., 108., 124., 140., 156., 172., 188.,
      16., 32., 48., 64., 80., 96., 112., 128., 144., 160., 176., 192.};
  const std::vector<int> sizes = {3, 4, 4, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_3x4x4x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  65., 129., 17., 81., 145., 33., 97.,  161., 49., 113., 177.,
      5.,  69., 133., 21., 85., 149., 37., 101., 165., 53., 117., 181.,
      9.,  73., 137., 25., 89., 153., 41., 105., 169., 57., 121., 185.,
      13., 77., 141., 29., 93., 157., 45., 109., 173., 61., 125., 189.,
      2.,  66., 130., 18., 82., 146., 34., 98.,  162., 50., 114., 178.,
      6.,  70., 134., 22., 86., 150., 38., 102., 166., 54., 118., 182.,
      10., 74., 138., 26., 90., 154., 42., 106., 170., 58., 122., 186.,
      14., 78., 142., 30., 94., 158., 46., 110., 174., 62., 126., 190.,
      3.,  67., 131., 19., 83., 147., 35., 99.,  163., 51., 115., 179.,
      7.,  71., 135., 23., 87., 151., 39., 103., 167., 55., 119., 183.,
      11., 75., 139., 27., 91., 155., 43., 107., 171., 59., 123., 187.,
      15., 79., 143., 31., 95., 159., 47., 111., 175., 63., 127., 191.,
      4.,  68., 132., 20., 84., 148., 36., 100., 164., 52., 116., 180.,
      8.,  72., 136., 24., 88., 152., 40., 104., 168., 56., 120., 184.,
      12., 76., 140., 28., 92., 156., 44., 108., 172., 60., 124., 188.,
      16., 80., 144., 32., 96., 160., 48., 112., 176., 64., 128., 192.};
  const std::vector<int> sizes = {3, 4, 4, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11.,
      12., 13., 14., 15., 16., 17., 18., 19., 20., 21., 22.,
      23., 24., 25., 26., 27., 28., 29., 30., 31., 32.};
  const std::vector<int> sizes = {4, 2, 2, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  2.,  4.,  5.,  7.,  6.,  8.,  9.,  11., 10.,
      12., 13., 15., 14., 16., 17., 19., 18., 20., 21., 23.,
      22., 24., 25., 27., 26., 28., 29., 31., 30., 32.};
  const std::vector<int> sizes = {4, 2, 2, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  5.,  6.,  3.,  4.,  7.,  8.,  9.,  10., 13.,
      14., 11., 12., 15., 16., 17., 18., 21., 22., 19., 20.,
      23., 24., 25., 26., 29., 30., 27., 28., 31., 32.};
  const std::vector<int> sizes = {4, 2, 2, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  2.,  6.,  3.,  7.,  4.,  8.,  9.,  13., 10.,
      14., 11., 15., 12., 16., 17., 21., 18., 22., 19., 23.,
      20., 24., 25., 29., 26., 30., 27., 31., 28., 32.};
  const std::vector<int> sizes = {4, 2, 2, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  2.,  4.,  6.,  8.,  9.,  11., 13.,
      15., 10., 12., 14., 16., 17., 19., 21., 23., 18., 20.,
      22., 24., 25., 27., 29., 31., 26., 28., 30., 32.};
  const std::vector<int> sizes = {4, 2, 2, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  3.,  7.,  2.,  6.,  4.,  8.,  9.,  13., 11.,
      15., 10., 14., 12., 16., 17., 21., 19., 23., 18., 22.,
      20., 24., 25., 29., 27., 31., 26., 30., 28., 32.};
  const std::vector<int> sizes = {4, 2, 2, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  9.,  10., 11., 12., 17., 18., 19.,
      20., 25., 26., 27., 28., 5.,  6.,  7.,  8.,  13., 14.,
      15., 16., 21., 22., 23., 24., 29., 30., 31., 32.};
  const std::vector<int> sizes = {4, 2, 2, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  2.,  4.,  9.,  11., 10., 12., 17., 19., 18.,
      20., 25., 27., 26., 28., 5.,  7.,  6.,  8.,  13., 15.,
      14., 16., 21., 23., 22., 24., 29., 31., 30., 32.};
  const std::vector<int> sizes = {4, 2, 2, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 2., 9.,  10., 17., 18., 25., 26.,
                                         3., 4., 11., 12., 19., 20., 27., 28.,
                                         5., 6., 13., 14., 21., 22., 29., 30.,
                                         7., 8., 15., 16., 23., 24., 31., 32.};
  const std::vector<int> sizes = {4, 2, 2, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 9.,  17., 25., 2., 10., 18., 26.,
                                         3., 11., 19., 27., 4., 12., 20., 28.,
                                         5., 13., 21., 29., 6., 14., 22., 30.,
                                         7., 15., 23., 31., 8., 16., 24., 32.};
  const std::vector<int> sizes = {4, 2, 2, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 3., 9.,  11., 17., 19., 25., 27.,
                                         2., 4., 10., 12., 18., 20., 26., 28.,
                                         5., 7., 13., 15., 21., 23., 29., 31.,
                                         6., 8., 14., 16., 22., 24., 30., 32.};
  const std::vector<int> sizes = {4, 2, 2, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 9.,  17., 25., 3., 11., 19., 27.,
                                         2., 10., 18., 26., 4., 12., 20., 28.,
                                         5., 13., 21., 29., 7., 15., 23., 31.,
                                         6., 14., 22., 30., 8., 16., 24., 32.};
  const std::vector<int> sizes = {4, 2, 2, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  5.,  6.,  9.,  10., 13., 14., 17., 18., 21.,
      22., 25., 26., 29., 30., 3.,  4.,  7.,  8.,  11., 12.,
      15., 16., 19., 20., 23., 24., 27., 28., 31., 32.};
  const std::vector<int> sizes = {4, 2, 2, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  2.,  6.,  9.,  13., 10., 14., 17., 21., 18.,
      22., 25., 29., 26., 30., 3.,  7.,  4.,  8.,  11., 15.,
      12., 16., 19., 23., 20., 24., 27., 31., 28., 32.};
  const std::vector<int> sizes = {4, 2, 2, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 2., 9.,  10., 17., 18., 25., 26.,
                                         5., 6., 13., 14., 21., 22., 29., 30.,
                                         3., 4., 11., 12., 19., 20., 27., 28.,
                                         7., 8., 15., 16., 23., 24., 31., 32.};
  const std::vector<int> sizes = {4, 2, 2, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 9.,  17., 25., 2., 10., 18., 26.,
                                         5., 13., 21., 29., 6., 14., 22., 30.,
                                         3., 11., 19., 27., 4., 12., 20., 28.,
                                         7., 15., 23., 31., 8., 16., 24., 32.};
  const std::vector<int> sizes = {4, 2, 2, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 5., 9.,  13., 17., 21., 25., 29.,
                                         2., 6., 10., 14., 18., 22., 26., 30.,
                                         3., 7., 11., 15., 19., 23., 27., 31.,
                                         4., 8., 12., 16., 20., 24., 28., 32.};
  const std::vector<int> sizes = {4, 2, 2, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 9.,  17., 25., 5., 13., 21., 29.,
                                         2., 10., 18., 26., 6., 14., 22., 30.,
                                         3., 11., 19., 27., 7., 15., 23., 31.,
                                         4., 12., 20., 28., 8., 16., 24., 32.};
  const std::vector<int> sizes = {4, 2, 2, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21.,
      23., 25., 27., 29., 31., 2.,  4.,  6.,  8.,  10., 12.,
      14., 16., 18., 20., 22., 24., 26., 28., 30., 32.};
  const std::vector<int> sizes = {4, 2, 2, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  3.,  7.,  9.,  13., 11., 15., 17., 21., 19.,
      23., 25., 29., 27., 31., 2.,  6.,  4.,  8.,  10., 14.,
      12., 16., 18., 22., 20., 24., 26., 30., 28., 32.};
  const std::vector<int> sizes = {4, 2, 2, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 3., 9.,  11., 17., 19., 25., 27.,
                                         5., 7., 13., 15., 21., 23., 29., 31.,
                                         2., 4., 10., 12., 18., 20., 26., 28.,
                                         6., 8., 14., 16., 22., 24., 30., 32.};
  const std::vector<int> sizes = {4, 2, 2, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 9.,  17., 25., 3., 11., 19., 27.,
                                         5., 13., 21., 29., 7., 15., 23., 31.,
                                         2., 10., 18., 26., 4., 12., 20., 28.,
                                         6., 14., 22., 30., 8., 16., 24., 32.};
  const std::vector<int> sizes = {4, 2, 2, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 5., 9.,  13., 17., 21., 25., 29.,
                                         3., 7., 11., 15., 19., 23., 27., 31.,
                                         2., 6., 10., 14., 18., 22., 26., 30.,
                                         4., 8., 12., 16., 20., 24., 28., 32.};
  const std::vector<int> sizes = {4, 2, 2, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 9.,  17., 25., 5., 13., 21., 29.,
                                         3., 11., 19., 27., 7., 15., 23., 31.,
                                         2., 10., 18., 26., 6., 14., 22., 30.,
                                         4., 12., 20., 28., 8., 16., 24., 32.};
  const std::vector<int> sizes = {4, 2, 2, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.,
      25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.,
      37., 38., 39., 40., 41., 42., 43., 44., 45., 46., 47., 48.};
  const std::vector<int> sizes = {4, 2, 2, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  2.,  5.,  3.,  6.,  7.,  10., 8.,  11., 9.,  12.,
      13., 16., 14., 17., 15., 18., 19., 22., 20., 23., 21., 24.,
      25., 28., 26., 29., 27., 30., 31., 34., 32., 35., 33., 36.,
      37., 40., 38., 41., 39., 42., 43., 46., 44., 47., 45., 48.};
  const std::vector<int> sizes = {4, 2, 2, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  7.,  8.,  9.,  4.,  5.,  6.,  10., 11., 12.,
      13., 14., 15., 19., 20., 21., 16., 17., 18., 22., 23., 24.,
      25., 26., 27., 31., 32., 33., 28., 29., 30., 34., 35., 36.,
      37., 38., 39., 43., 44., 45., 40., 41., 42., 46., 47., 48.};
  const std::vector<int> sizes = {4, 2, 2, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  2.,  8.,  3.,  9.,  4.,  10., 5.,  11., 6.,  12.,
      13., 19., 14., 20., 15., 21., 16., 22., 17., 23., 18., 24.,
      25., 31., 26., 32., 27., 33., 28., 34., 29., 35., 30., 36.,
      37., 43., 38., 44., 39., 45., 40., 46., 41., 47., 42., 48.};
  const std::vector<int> sizes = {4, 2, 2, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 2.,  5.,  8.,  11., 3.,  6.,  9.,  12.,
      13., 16., 19., 22., 14., 17., 20., 23., 15., 18., 21., 24.,
      25., 28., 31., 34., 26., 29., 32., 35., 27., 30., 33., 36.,
      37., 40., 43., 46., 38., 41., 44., 47., 39., 42., 45., 48.};
  const std::vector<int> sizes = {4, 2, 2, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  4.,  10., 2.,  8.,  5.,  11., 3.,  9.,  6.,  12.,
      13., 19., 16., 22., 14., 20., 17., 23., 15., 21., 18., 24.,
      25., 31., 28., 34., 26., 32., 29., 35., 27., 33., 30., 36.,
      37., 43., 40., 46., 38., 44., 41., 47., 39., 45., 42., 48.};
  const std::vector<int> sizes = {4, 2, 2, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  13., 14., 15., 16., 17., 18.,
      25., 26., 27., 28., 29., 30., 37., 38., 39., 40., 41., 42.,
      7.,  8.,  9.,  10., 11., 12., 19., 20., 21., 22., 23., 24.,
      31., 32., 33., 34., 35., 36., 43., 44., 45., 46., 47., 48.};
  const std::vector<int> sizes = {4, 2, 2, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  2.,  5.,  3.,  6.,  13., 16., 14., 17., 15., 18.,
      25., 28., 26., 29., 27., 30., 37., 40., 38., 41., 39., 42.,
      7.,  10., 8.,  11., 9.,  12., 19., 22., 20., 23., 21., 24.,
      31., 34., 32., 35., 33., 36., 43., 46., 44., 47., 45., 48.};
  const std::vector<int> sizes = {4, 2, 2, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  13., 14., 15., 25., 26., 27., 37., 38., 39.,
      4.,  5.,  6.,  16., 17., 18., 28., 29., 30., 40., 41., 42.,
      7.,  8.,  9.,  19., 20., 21., 31., 32., 33., 43., 44., 45.,
      10., 11., 12., 22., 23., 24., 34., 35., 36., 46., 47., 48.};
  const std::vector<int> sizes = {4, 2, 2, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 2.,  14., 26., 38., 3.,  15., 27., 39.,
      4.,  16., 28., 40., 5.,  17., 29., 41., 6.,  18., 30., 42.,
      7.,  19., 31., 43., 8.,  20., 32., 44., 9.,  21., 33., 45.,
      10., 22., 34., 46., 11., 23., 35., 47., 12., 24., 36., 48.};
  const std::vector<int> sizes = {4, 2, 2, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  13., 16., 25., 28., 37., 40., 2.,  5.,  14., 17.,
      26., 29., 38., 41., 3.,  6.,  15., 18., 27., 30., 39., 42.,
      7.,  10., 19., 22., 31., 34., 43., 46., 8.,  11., 20., 23.,
      32., 35., 44., 47., 9.,  12., 21., 24., 33., 36., 45., 48.};
  const std::vector<int> sizes = {4, 2, 2, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 4.,  16., 28., 40., 2.,  14., 26., 38.,
      5.,  17., 29., 41., 3.,  15., 27., 39., 6.,  18., 30., 42.,
      7.,  19., 31., 43., 10., 22., 34., 46., 8.,  20., 32., 44.,
      11., 23., 35., 47., 9.,  21., 33., 45., 12., 24., 36., 48.};
  const std::vector<int> sizes = {4, 2, 2, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  7.,  8.,  9.,  13., 14., 15., 19., 20., 21.,
      25., 26., 27., 31., 32., 33., 37., 38., 39., 43., 44., 45.,
      4.,  5.,  6.,  10., 11., 12., 16., 17., 18., 22., 23., 24.,
      28., 29., 30., 34., 35., 36., 40., 41., 42., 46., 47., 48.};
  const std::vector<int> sizes = {4, 2, 2, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  2.,  8.,  3.,  9.,  13., 19., 14., 20., 15., 21.,
      25., 31., 26., 32., 27., 33., 37., 43., 38., 44., 39., 45.,
      4.,  10., 5.,  11., 6.,  12., 16., 22., 17., 23., 18., 24.,
      28., 34., 29., 35., 30., 36., 40., 46., 41., 47., 42., 48.};
  const std::vector<int> sizes = {4, 2, 2, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  13., 14., 15., 25., 26., 27., 37., 38., 39.,
      7.,  8.,  9.,  19., 20., 21., 31., 32., 33., 43., 44., 45.,
      4.,  5.,  6.,  16., 17., 18., 28., 29., 30., 40., 41., 42.,
      10., 11., 12., 22., 23., 24., 34., 35., 36., 46., 47., 48.};
  const std::vector<int> sizes = {4, 2, 2, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 2.,  14., 26., 38., 3.,  15., 27., 39.,
      7.,  19., 31., 43., 8.,  20., 32., 44., 9.,  21., 33., 45.,
      4.,  16., 28., 40., 5.,  17., 29., 41., 6.,  18., 30., 42.,
      10., 22., 34., 46., 11., 23., 35., 47., 12., 24., 36., 48.};
  const std::vector<int> sizes = {4, 2, 2, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 25., 31., 37., 43., 2.,  8.,  14., 20.,
      26., 32., 38., 44., 3.,  9.,  15., 21., 27., 33., 39., 45.,
      4.,  10., 16., 22., 28., 34., 40., 46., 5.,  11., 17., 23.,
      29., 35., 41., 47., 6.,  12., 18., 24., 30., 36., 42., 48.};
  const std::vector<int> sizes = {4, 2, 2, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 7.,  19., 31., 43., 2.,  14., 26., 38.,
      8.,  20., 32., 44., 3.,  15., 27., 39., 9.,  21., 33., 45.,
      4.,  16., 28., 40., 10., 22., 34., 46., 5.,  17., 29., 41.,
      11., 23., 35., 47., 6.,  18., 30., 42., 12., 24., 36., 48.};
  const std::vector<int> sizes = {4, 2, 2, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 28., 31., 34.,
      37., 40., 43., 46., 2.,  5.,  8.,  11., 14., 17., 20., 23.,
      26., 29., 32., 35., 38., 41., 44., 47., 3.,  6.,  9.,  12.,
      15., 18., 21., 24., 27., 30., 33., 36., 39., 42., 45., 48.};
  const std::vector<int> sizes = {4, 2, 2, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  4.,  10., 13., 19., 16., 22., 25., 31., 28., 34.,
      37., 43., 40., 46., 2.,  8.,  5.,  11., 14., 20., 17., 23.,
      26., 32., 29., 35., 38., 44., 41., 47., 3.,  9.,  6.,  12.,
      15., 21., 18., 24., 27., 33., 30., 36., 39., 45., 42., 48.};
  const std::vector<int> sizes = {4, 2, 2, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  13., 16., 25., 28., 37., 40., 7.,  10., 19., 22.,
      31., 34., 43., 46., 2.,  5.,  14., 17., 26., 29., 38., 41.,
      8.,  11., 20., 23., 32., 35., 44., 47., 3.,  6.,  15., 18.,
      27., 30., 39., 42., 9.,  12., 21., 24., 33., 36., 45., 48.};
  const std::vector<int> sizes = {4, 2, 2, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 4.,  16., 28., 40., 7.,  19., 31., 43.,
      10., 22., 34., 46., 2.,  14., 26., 38., 5.,  17., 29., 41.,
      8.,  20., 32., 44., 11., 23., 35., 47., 3.,  15., 27., 39.,
      6.,  18., 30., 42., 9.,  21., 33., 45., 12., 24., 36., 48.};
  const std::vector<int> sizes = {4, 2, 2, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 25., 31., 37., 43., 4.,  10., 16., 22.,
      28., 34., 40., 46., 2.,  8.,  14., 20., 26., 32., 38., 44.,
      5.,  11., 17., 23., 29., 35., 41., 47., 3.,  9.,  15., 21.,
      27., 33., 39., 45., 6.,  12., 18., 24., 30., 36., 42., 48.};
  const std::vector<int> sizes = {4, 2, 2, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 7.,  19., 31., 43., 4.,  16., 28., 40.,
      10., 22., 34., 46., 2.,  14., 26., 38., 8.,  20., 32., 44.,
      5.,  17., 29., 41., 11., 23., 35., 47., 3.,  15., 27., 39.,
      9.,  21., 33., 45., 6.,  18., 30., 42., 12., 24., 36., 48.};
  const std::vector<int> sizes = {4, 2, 2, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13.,
      14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26.,
      27., 28., 29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39.,
      40., 41., 42., 43., 44., 45., 46., 47., 48., 49., 50., 51., 52.,
      53., 54., 55., 56., 57., 58., 59., 60., 61., 62., 63., 64.};
  const std::vector<int> sizes = {4, 2, 2, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  2.,  6.,  3.,  7.,  4.,  8.,  9.,  13., 10., 14., 11.,
      15., 12., 16., 17., 21., 18., 22., 19., 23., 20., 24., 25., 29.,
      26., 30., 27., 31., 28., 32., 33., 37., 34., 38., 35., 39., 36.,
      40., 41., 45., 42., 46., 43., 47., 44., 48., 49., 53., 50., 54.,
      51., 55., 52., 56., 57., 61., 58., 62., 59., 63., 60., 64.};
  const std::vector<int> sizes = {4, 2, 2, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  9.,  10., 11., 12., 5.,  6.,  7.,  8.,  13.,
      14., 15., 16., 17., 18., 19., 20., 25., 26., 27., 28., 21., 22.,
      23., 24., 29., 30., 31., 32., 33., 34., 35., 36., 41., 42., 43.,
      44., 37., 38., 39., 40., 45., 46., 47., 48., 49., 50., 51., 52.,
      57., 58., 59., 60., 53., 54., 55., 56., 61., 62., 63., 64.};
  const std::vector<int> sizes = {4, 2, 2, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  2.,  10., 3.,  11., 4.,  12., 5.,  13., 6.,  14., 7.,
      15., 8.,  16., 17., 25., 18., 26., 19., 27., 20., 28., 21., 29.,
      22., 30., 23., 31., 24., 32., 33., 41., 34., 42., 35., 43., 36.,
      44., 37., 45., 38., 46., 39., 47., 40., 48., 49., 57., 50., 58.,
      51., 59., 52., 60., 53., 61., 54., 62., 55., 63., 56., 64.};
  const std::vector<int> sizes = {4, 2, 2, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 2.,  6.,  10., 14., 3.,  7.,  11., 15., 4.,
      8.,  12., 16., 17., 21., 25., 29., 18., 22., 26., 30., 19., 23.,
      27., 31., 20., 24., 28., 32., 33., 37., 41., 45., 34., 38., 42.,
      46., 35., 39., 43., 47., 36., 40., 44., 48., 49., 53., 57., 61.,
      50., 54., 58., 62., 51., 55., 59., 63., 52., 56., 60., 64.};
  const std::vector<int> sizes = {4, 2, 2, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  5.,  13., 2.,  10., 6.,  14., 3.,  11., 7.,  15., 4.,
      12., 8.,  16., 17., 25., 21., 29., 18., 26., 22., 30., 19., 27.,
      23., 31., 20., 28., 24., 32., 33., 41., 37., 45., 34., 42., 38.,
      46., 35., 43., 39., 47., 36., 44., 40., 48., 49., 57., 53., 61.,
      50., 58., 54., 62., 51., 59., 55., 63., 52., 60., 56., 64.};
  const std::vector<int> sizes = {4, 2, 2, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  17., 18., 19., 20., 21.,
      22., 23., 24., 33., 34., 35., 36., 37., 38., 39., 40., 49., 50.,
      51., 52., 53., 54., 55., 56., 9.,  10., 11., 12., 13., 14., 15.,
      16., 25., 26., 27., 28., 29., 30., 31., 32., 41., 42., 43., 44.,
      45., 46., 47., 48., 57., 58., 59., 60., 61., 62., 63., 64.};
  const std::vector<int> sizes = {4, 2, 2, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  2.,  6.,  3.,  7.,  4.,  8.,  17., 21., 18., 22., 19.,
      23., 20., 24., 33., 37., 34., 38., 35., 39., 36., 40., 49., 53.,
      50., 54., 51., 55., 52., 56., 9.,  13., 10., 14., 11., 15., 12.,
      16., 25., 29., 26., 30., 27., 31., 28., 32., 41., 45., 42., 46.,
      43., 47., 44., 48., 57., 61., 58., 62., 59., 63., 60., 64.};
  const std::vector<int> sizes = {4, 2, 2, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  17., 18., 19., 20., 33., 34., 35., 36., 49.,
      50., 51., 52., 5.,  6.,  7.,  8.,  21., 22., 23., 24., 37., 38.,
      39., 40., 53., 54., 55., 56., 9.,  10., 11., 12., 25., 26., 27.,
      28., 41., 42., 43., 44., 57., 58., 59., 60., 13., 14., 15., 16.,
      29., 30., 31., 32., 45., 46., 47., 48., 61., 62., 63., 64.};
  const std::vector<int> sizes = {4, 2, 2, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 2.,  18., 34., 50., 3.,  19., 35., 51., 4.,
      20., 36., 52., 5.,  21., 37., 53., 6.,  22., 38., 54., 7.,  23.,
      39., 55., 8.,  24., 40., 56., 9.,  25., 41., 57., 10., 26., 42.,
      58., 11., 27., 43., 59., 12., 28., 44., 60., 13., 29., 45., 61.,
      14., 30., 46., 62., 15., 31., 47., 63., 16., 32., 48., 64.};
  const std::vector<int> sizes = {4, 2, 2, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  17., 21., 33., 37., 49., 53., 2.,  6.,  18., 22., 34.,
      38., 50., 54., 3.,  7.,  19., 23., 35., 39., 51., 55., 4.,  8.,
      20., 24., 36., 40., 52., 56., 9.,  13., 25., 29., 41., 45., 57.,
      61., 10., 14., 26., 30., 42., 46., 58., 62., 11., 15., 27., 31.,
      43., 47., 59., 63., 12., 16., 28., 32., 44., 48., 60., 64.};
  const std::vector<int> sizes = {4, 2, 2, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 5.,  21., 37., 53., 2.,  18., 34., 50., 6.,
      22., 38., 54., 3.,  19., 35., 51., 7.,  23., 39., 55., 4.,  20.,
      36., 52., 8.,  24., 40., 56., 9.,  25., 41., 57., 13., 29., 45.,
      61., 10., 26., 42., 58., 14., 30., 46., 62., 11., 27., 43., 59.,
      15., 31., 47., 63., 12., 28., 44., 60., 16., 32., 48., 64.};
  const std::vector<int> sizes = {4, 2, 2, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  9.,  10., 11., 12., 17., 18., 19., 20., 25.,
      26., 27., 28., 33., 34., 35., 36., 41., 42., 43., 44., 49., 50.,
      51., 52., 57., 58., 59., 60., 5.,  6.,  7.,  8.,  13., 14., 15.,
      16., 21., 22., 23., 24., 29., 30., 31., 32., 37., 38., 39., 40.,
      45., 46., 47., 48., 53., 54., 55., 56., 61., 62., 63., 64.};
  const std::vector<int> sizes = {4, 2, 2, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  2.,  10., 3.,  11., 4.,  12., 17., 25., 18., 26., 19.,
      27., 20., 28., 33., 41., 34., 42., 35., 43., 36., 44., 49., 57.,
      50., 58., 51., 59., 52., 60., 5.,  13., 6.,  14., 7.,  15., 8.,
      16., 21., 29., 22., 30., 23., 31., 24., 32., 37., 45., 38., 46.,
      39., 47., 40., 48., 53., 61., 54., 62., 55., 63., 56., 64.};
  const std::vector<int> sizes = {4, 2, 2, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  17., 18., 19., 20., 33., 34., 35., 36., 49.,
      50., 51., 52., 9.,  10., 11., 12., 25., 26., 27., 28., 41., 42.,
      43., 44., 57., 58., 59., 60., 5.,  6.,  7.,  8.,  21., 22., 23.,
      24., 37., 38., 39., 40., 53., 54., 55., 56., 13., 14., 15., 16.,
      29., 30., 31., 32., 45., 46., 47., 48., 61., 62., 63., 64.};
  const std::vector<int> sizes = {4, 2, 2, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 2.,  18., 34., 50., 3.,  19., 35., 51., 4.,
      20., 36., 52., 9.,  25., 41., 57., 10., 26., 42., 58., 11., 27.,
      43., 59., 12., 28., 44., 60., 5.,  21., 37., 53., 6.,  22., 38.,
      54., 7.,  23., 39., 55., 8.,  24., 40., 56., 13., 29., 45., 61.,
      14., 30., 46., 62., 15., 31., 47., 63., 16., 32., 48., 64.};
  const std::vector<int> sizes = {4, 2, 2, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 33., 41., 49., 57., 2.,  10., 18., 26., 34.,
      42., 50., 58., 3.,  11., 19., 27., 35., 43., 51., 59., 4.,  12.,
      20., 28., 36., 44., 52., 60., 5.,  13., 21., 29., 37., 45., 53.,
      61., 6.,  14., 22., 30., 38., 46., 54., 62., 7.,  15., 23., 31.,
      39., 47., 55., 63., 8.,  16., 24., 32., 40., 48., 56., 64.};
  const std::vector<int> sizes = {4, 2, 2, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 9.,  25., 41., 57., 2.,  18., 34., 50., 10.,
      26., 42., 58., 3.,  19., 35., 51., 11., 27., 43., 59., 4.,  20.,
      36., 52., 12., 28., 44., 60., 5.,  21., 37., 53., 13., 29., 45.,
      61., 6.,  22., 38., 54., 14., 30., 46., 62., 7.,  23., 39., 55.,
      15., 31., 47., 63., 8.,  24., 40., 56., 16., 32., 48., 64.};
  const std::vector<int> sizes = {4, 2, 2, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 25., 29., 33., 37., 41., 45., 49.,
      53., 57., 61., 2.,  6.,  10., 14., 18., 22., 26., 30., 34., 38.,
      42., 46., 50., 54., 58., 62., 3.,  7.,  11., 15., 19., 23., 27.,
      31., 35., 39., 43., 47., 51., 55., 59., 63., 4.,  8.,  12., 16.,
      20., 24., 28., 32., 36., 40., 44., 48., 52., 56., 60., 64.};
  const std::vector<int> sizes = {4, 2, 2, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  5.,  13., 17., 25., 21., 29., 33., 41., 37., 45., 49.,
      57., 53., 61., 2.,  10., 6.,  14., 18., 26., 22., 30., 34., 42.,
      38., 46., 50., 58., 54., 62., 3.,  11., 7.,  15., 19., 27., 23.,
      31., 35., 43., 39., 47., 51., 59., 55., 63., 4.,  12., 8.,  16.,
      20., 28., 24., 32., 36., 44., 40., 48., 52., 60., 56., 64.};
  const std::vector<int> sizes = {4, 2, 2, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  17., 21., 33., 37., 49., 53., 9.,  13., 25., 29., 41.,
      45., 57., 61., 2.,  6.,  18., 22., 34., 38., 50., 54., 10., 14.,
      26., 30., 42., 46., 58., 62., 3.,  7.,  19., 23., 35., 39., 51.,
      55., 11., 15., 27., 31., 43., 47., 59., 63., 4.,  8.,  20., 24.,
      36., 40., 52., 56., 12., 16., 28., 32., 44., 48., 60., 64.};
  const std::vector<int> sizes = {4, 2, 2, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 5.,  21., 37., 53., 9.,  25., 41., 57., 13.,
      29., 45., 61., 2.,  18., 34., 50., 6.,  22., 38., 54., 10., 26.,
      42., 58., 14., 30., 46., 62., 3.,  19., 35., 51., 7.,  23., 39.,
      55., 11., 27., 43., 59., 15., 31., 47., 63., 4.,  20., 36., 52.,
      8.,  24., 40., 56., 12., 28., 44., 60., 16., 32., 48., 64.};
  const std::vector<int> sizes = {4, 2, 2, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 33., 41., 49., 57., 5.,  13., 21., 29., 37.,
      45., 53., 61., 2.,  10., 18., 26., 34., 42., 50., 58., 6.,  14.,
      22., 30., 38., 46., 54., 62., 3.,  11., 19., 27., 35., 43., 51.,
      59., 7.,  15., 23., 31., 39., 47., 55., 63., 4.,  12., 20., 28.,
      36., 44., 52., 60., 8.,  16., 24., 32., 40., 48., 56., 64.};
  const std::vector<int> sizes = {4, 2, 2, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x2x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 9.,  25., 41., 57., 5.,  21., 37., 53., 13.,
      29., 45., 61., 2.,  18., 34., 50., 10., 26., 42., 58., 6.,  22.,
      38., 54., 14., 30., 46., 62., 3.,  19., 35., 51., 11., 27., 43.,
      59., 7.,  23., 39., 55., 15., 31., 47., 63., 4.,  20., 36., 52.,
      12., 28., 44., 60., 8.,  24., 40., 56., 16., 32., 48., 64.};
  const std::vector<int> sizes = {4, 2, 2, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.,
      25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.,
      37., 38., 39., 40., 41., 42., 43., 44., 45., 46., 47., 48.};
  const std::vector<int> sizes = {4, 2, 3, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  2.,  4.,  6.,  7.,  9.,  11., 8.,  10., 12.,
      13., 15., 17., 14., 16., 18., 19., 21., 23., 20., 22., 24.,
      25., 27., 29., 26., 28., 30., 31., 33., 35., 32., 34., 36.,
      37., 39., 41., 38., 40., 42., 43., 45., 47., 44., 46., 48.};
  const std::vector<int> sizes = {4, 2, 3, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  7.,  8.,  3.,  4.,  9.,  10., 5.,  6.,  11., 12.,
      13., 14., 19., 20., 15., 16., 21., 22., 17., 18., 23., 24.,
      25., 26., 31., 32., 27., 28., 33., 34., 29., 30., 35., 36.,
      37., 38., 43., 44., 39., 40., 45., 46., 41., 42., 47., 48.};
  const std::vector<int> sizes = {4, 2, 3, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  2.,  8.,  3.,  9.,  4.,  10., 5.,  11., 6.,  12.,
      13., 19., 14., 20., 15., 21., 16., 22., 17., 23., 18., 24.,
      25., 31., 26., 32., 27., 33., 28., 34., 29., 35., 30., 36.,
      37., 43., 38., 44., 39., 45., 40., 46., 41., 47., 42., 48.};
  const std::vector<int> sizes = {4, 2, 3, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 2.,  4.,  6.,  8.,  10., 12.,
      13., 15., 17., 19., 21., 23., 14., 16., 18., 20., 22., 24.,
      25., 27., 29., 31., 33., 35., 26., 28., 30., 32., 34., 36.,
      37., 39., 41., 43., 45., 47., 38., 40., 42., 44., 46., 48.};
  const std::vector<int> sizes = {4, 2, 3, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  3.,  9.,  5.,  11., 2.,  8.,  4.,  10., 6.,  12.,
      13., 19., 15., 21., 17., 23., 14., 20., 16., 22., 18., 24.,
      25., 31., 27., 33., 29., 35., 26., 32., 28., 34., 30., 36.,
      37., 43., 39., 45., 41., 47., 38., 44., 40., 46., 42., 48.};
  const std::vector<int> sizes = {4, 2, 3, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  13., 14., 15., 16., 17., 18.,
      25., 26., 27., 28., 29., 30., 37., 38., 39., 40., 41., 42.,
      7.,  8.,  9.,  10., 11., 12., 19., 20., 21., 22., 23., 24.,
      31., 32., 33., 34., 35., 36., 43., 44., 45., 46., 47., 48.};
  const std::vector<int> sizes = {4, 2, 3, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  2.,  4.,  6.,  13., 15., 17., 14., 16., 18.,
      25., 27., 29., 26., 28., 30., 37., 39., 41., 38., 40., 42.,
      7.,  9.,  11., 8.,  10., 12., 19., 21., 23., 20., 22., 24.,
      31., 33., 35., 32., 34., 36., 43., 45., 47., 44., 46., 48.};
  const std::vector<int> sizes = {4, 2, 3, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  13., 14., 25., 26., 37., 38., 3.,  4.,  15., 16.,
      27., 28., 39., 40., 5.,  6.,  17., 18., 29., 30., 41., 42.,
      7.,  8.,  19., 20., 31., 32., 43., 44., 9.,  10., 21., 22.,
      33., 34., 45., 46., 11., 12., 23., 24., 35., 36., 47., 48.};
  const std::vector<int> sizes = {4, 2, 3, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 2.,  14., 26., 38., 3.,  15., 27., 39.,
      4.,  16., 28., 40., 5.,  17., 29., 41., 6.,  18., 30., 42.,
      7.,  19., 31., 43., 8.,  20., 32., 44., 9.,  21., 33., 45.,
      10., 22., 34., 46., 11., 23., 35., 47., 12., 24., 36., 48.};
  const std::vector<int> sizes = {4, 2, 3, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 3.,  5.,  13., 15., 17., 25., 27., 29., 37., 39., 41.,
      2., 4.,  6.,  14., 16., 18., 26., 28., 30., 38., 40., 42.,
      7., 9.,  11., 19., 21., 23., 31., 33., 35., 43., 45., 47.,
      8., 10., 12., 20., 22., 24., 32., 34., 36., 44., 46., 48.};
  const std::vector<int> sizes = {4, 2, 3, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 13., 25., 37., 3.,  15., 27., 39., 5.,  17., 29., 41.,
      2., 14., 26., 38., 4.,  16., 28., 40., 6.,  18., 30., 42.,
      7., 19., 31., 43., 9.,  21., 33., 45., 11., 23., 35., 47.,
      8., 20., 32., 44., 10., 22., 34., 46., 12., 24., 36., 48.};
  const std::vector<int> sizes = {4, 2, 3, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  7.,  8.,  13., 14., 19., 20., 25., 26., 31., 32.,
      37., 38., 43., 44., 3.,  4.,  9.,  10., 15., 16., 21., 22.,
      27., 28., 33., 34., 39., 40., 45., 46., 5.,  6.,  11., 12.,
      17., 18., 23., 24., 29., 30., 35., 36., 41., 42., 47., 48.};
  const std::vector<int> sizes = {4, 2, 3, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  2.,  8.,  13., 19., 14., 20., 25., 31., 26., 32.,
      37., 43., 38., 44., 3.,  9.,  4.,  10., 15., 21., 16., 22.,
      27., 33., 28., 34., 39., 45., 40., 46., 5.,  11., 6.,  12.,
      17., 23., 18., 24., 29., 35., 30., 36., 41., 47., 42., 48.};
  const std::vector<int> sizes = {4, 2, 3, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  13., 14., 25., 26., 37., 38., 7.,  8.,  19., 20.,
      31., 32., 43., 44., 3.,  4.,  15., 16., 27., 28., 39., 40.,
      9.,  10., 21., 22., 33., 34., 45., 46., 5.,  6.,  17., 18.,
      29., 30., 41., 42., 11., 12., 23., 24., 35., 36., 47., 48.};
  const std::vector<int> sizes = {4, 2, 3, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 13., 25., 37., 2.,  14., 26., 38., 7.,  19., 31., 43.,
      8., 20., 32., 44., 3.,  15., 27., 39., 4.,  16., 28., 40.,
      9., 21., 33., 45., 10., 22., 34., 46., 5.,  17., 29., 41.,
      6., 18., 30., 42., 11., 23., 35., 47., 12., 24., 36., 48.};
  const std::vector<int> sizes = {4, 2, 3, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 25., 31., 37., 43., 2.,  8.,  14., 20.,
      26., 32., 38., 44., 3.,  9.,  15., 21., 27., 33., 39., 45.,
      4.,  10., 16., 22., 28., 34., 40., 46., 5.,  11., 17., 23.,
      29., 35., 41., 47., 6.,  12., 18., 24., 30., 36., 42., 48.};
  const std::vector<int> sizes = {4, 2, 3, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 7.,  19., 31., 43., 2.,  14., 26., 38.,
      8.,  20., 32., 44., 3.,  15., 27., 39., 9.,  21., 33., 45.,
      4.,  16., 28., 40., 10., 22., 34., 46., 5.,  17., 29., 41.,
      11., 23., 35., 47., 6.,  18., 30., 42., 12., 24., 36., 48.};
  const std::vector<int> sizes = {4, 2, 3, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23.,
      25., 27., 29., 31., 33., 35., 37., 39., 41., 43., 45., 47.,
      2.,  4.,  6.,  8.,  10., 12., 14., 16., 18., 20., 22., 24.,
      26., 28., 30., 32., 34., 36., 38., 40., 42., 44., 46., 48.};
  const std::vector<int> sizes = {4, 2, 3, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  3.,  9.,  5.,  11., 13., 19., 15., 21., 17., 23.,
      25., 31., 27., 33., 29., 35., 37., 43., 39., 45., 41., 47.,
      2.,  8.,  4.,  10., 6.,  12., 14., 20., 16., 22., 18., 24.,
      26., 32., 28., 34., 30., 36., 38., 44., 40., 46., 42., 48.};
  const std::vector<int> sizes = {4, 2, 3, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 3.,  5.,  13., 15., 17., 25., 27., 29., 37., 39., 41.,
      7., 9.,  11., 19., 21., 23., 31., 33., 35., 43., 45., 47.,
      2., 4.,  6.,  14., 16., 18., 26., 28., 30., 38., 40., 42.,
      8., 10., 12., 20., 22., 24., 32., 34., 36., 44., 46., 48.};
  const std::vector<int> sizes = {4, 2, 3, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 13., 25., 37., 3.,  15., 27., 39., 5.,  17., 29., 41.,
      7., 19., 31., 43., 9.,  21., 33., 45., 11., 23., 35., 47.,
      2., 14., 26., 38., 4.,  16., 28., 40., 6.,  18., 30., 42.,
      8., 20., 32., 44., 10., 22., 34., 46., 12., 24., 36., 48.};
  const std::vector<int> sizes = {4, 2, 3, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 25., 31., 37., 43., 3.,  9.,  15., 21.,
      27., 33., 39., 45., 5.,  11., 17., 23., 29., 35., 41., 47.,
      2.,  8.,  14., 20., 26., 32., 38., 44., 4.,  10., 16., 22.,
      28., 34., 40., 46., 6.,  12., 18., 24., 30., 36., 42., 48.};
  const std::vector<int> sizes = {4, 2, 3, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 7., 19., 31., 43., 3.,  15., 27., 39.,
      9.,  21., 33., 45., 5., 17., 29., 41., 11., 23., 35., 47.,
      2.,  14., 26., 38., 8., 20., 32., 44., 4.,  16., 28., 40.,
      10., 22., 34., 46., 6., 18., 30., 42., 12., 24., 36., 48.};
  const std::vector<int> sizes = {4, 2, 3, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14., 15.,
      16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 30.,
      31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42., 43., 44., 45.,
      46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56., 57., 58., 59., 60.,
      61., 62., 63., 64., 65., 66., 67., 68., 69., 70., 71., 72.};
  const std::vector<int> sizes = {4, 2, 3, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  2.,  5.,  8.,  3.,  6.,  9.,  10., 13., 16., 11., 14., 17.,
      12., 15., 18., 19., 22., 25., 20., 23., 26., 21., 24., 27., 28., 31., 34.,
      29., 32., 35., 30., 33., 36., 37., 40., 43., 38., 41., 44., 39., 42., 45.,
      46., 49., 52., 47., 50., 53., 48., 51., 54., 55., 58., 61., 56., 59., 62.,
      57., 60., 63., 64., 67., 70., 65., 68., 71., 66., 69., 72.};
  const std::vector<int> sizes = {4, 2, 3, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  10., 11., 12., 4.,  5.,  6.,  13., 14., 15., 7.,  8.,  9.,
      16., 17., 18., 19., 20., 21., 28., 29., 30., 22., 23., 24., 31., 32., 33.,
      25., 26., 27., 34., 35., 36., 37., 38., 39., 46., 47., 48., 40., 41., 42.,
      49., 50., 51., 43., 44., 45., 52., 53., 54., 55., 56., 57., 64., 65., 66.,
      58., 59., 60., 67., 68., 69., 61., 62., 63., 70., 71., 72.};
  const std::vector<int> sizes = {4, 2, 3, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 2.,  11., 3.,  12., 4.,  13., 5.,  14., 6.,  15., 7.,  16., 8.,
      17., 9.,  18., 19., 28., 20., 29., 21., 30., 22., 31., 23., 32., 24., 33.,
      25., 34., 26., 35., 27., 36., 37., 46., 38., 47., 39., 48., 40., 49., 41.,
      50., 42., 51., 43., 52., 44., 53., 45., 54., 55., 64., 56., 65., 57., 66.,
      58., 67., 59., 68., 60., 69., 61., 70., 62., 71., 63., 72.};
  const std::vector<int> sizes = {4, 2, 3, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 2.,  5.,  8.,  11., 14., 17., 3.,  6.,  9.,
      12., 15., 18., 19., 22., 25., 28., 31., 34., 20., 23., 26., 29., 32., 35.,
      21., 24., 27., 30., 33., 36., 37., 40., 43., 46., 49., 52., 38., 41., 44.,
      47., 50., 53., 39., 42., 45., 48., 51., 54., 55., 58., 61., 64., 67., 70.,
      56., 59., 62., 65., 68., 71., 57., 60., 63., 66., 69., 72.};
  const std::vector<int> sizes = {4, 2, 3, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 4.,  13., 7.,  16., 2.,  11., 5.,  14., 8.,  17., 3.,  12., 6.,
      15., 9.,  18., 19., 28., 22., 31., 25., 34., 20., 29., 23., 32., 26., 35.,
      21., 30., 24., 33., 27., 36., 37., 46., 40., 49., 43., 52., 38., 47., 41.,
      50., 44., 53., 39., 48., 42., 51., 45., 54., 55., 64., 58., 67., 61., 70.,
      56., 65., 59., 68., 62., 71., 57., 66., 60., 69., 63., 72.};
  const std::vector<int> sizes = {4, 2, 3, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  19., 20., 21., 22., 23., 24.,
      25., 26., 27., 37., 38., 39., 40., 41., 42., 43., 44., 45., 55., 56., 57.,
      58., 59., 60., 61., 62., 63., 10., 11., 12., 13., 14., 15., 16., 17., 18.,
      28., 29., 30., 31., 32., 33., 34., 35., 36., 46., 47., 48., 49., 50., 51.,
      52., 53., 54., 64., 65., 66., 67., 68., 69., 70., 71., 72.};
  const std::vector<int> sizes = {4, 2, 3, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  2.,  5.,  8.,  3.,  6.,  9.,  19., 22., 25., 20., 23., 26.,
      21., 24., 27., 37., 40., 43., 38., 41., 44., 39., 42., 45., 55., 58., 61.,
      56., 59., 62., 57., 60., 63., 10., 13., 16., 11., 14., 17., 12., 15., 18.,
      28., 31., 34., 29., 32., 35., 30., 33., 36., 46., 49., 52., 47., 50., 53.,
      48., 51., 54., 64., 67., 70., 65., 68., 71., 66., 69., 72.};
  const std::vector<int> sizes = {4, 2, 3, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  19., 20., 21., 37., 38., 39., 55., 56., 57., 4.,  5.,  6.,
      22., 23., 24., 40., 41., 42., 58., 59., 60., 7.,  8.,  9.,  25., 26., 27.,
      43., 44., 45., 61., 62., 63., 10., 11., 12., 28., 29., 30., 46., 47., 48.,
      64., 65., 66., 13., 14., 15., 31., 32., 33., 49., 50., 51., 67., 68., 69.,
      16., 17., 18., 34., 35., 36., 52., 53., 54., 70., 71., 72.};
  const std::vector<int> sizes = {4, 2, 3, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 55., 2.,  20., 38., 56., 3.,  21., 39., 57., 4.,  22., 40.,
      58., 5.,  23., 41., 59., 6.,  24., 42., 60., 7.,  25., 43., 61., 8.,  26.,
      44., 62., 9.,  27., 45., 63., 10., 28., 46., 64., 11., 29., 47., 65., 12.,
      30., 48., 66., 13., 31., 49., 67., 14., 32., 50., 68., 15., 33., 51., 69.,
      16., 34., 52., 70., 17., 35., 53., 71., 18., 36., 54., 72.};
  const std::vector<int> sizes = {4, 2, 3, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  19., 22., 25., 37., 40., 43., 55., 58., 61., 2.,  5.,  8.,
      20., 23., 26., 38., 41., 44., 56., 59., 62., 3.,  6.,  9.,  21., 24., 27.,
      39., 42., 45., 57., 60., 63., 10., 13., 16., 28., 31., 34., 46., 49., 52.,
      64., 67., 70., 11., 14., 17., 29., 32., 35., 47., 50., 53., 65., 68., 71.,
      12., 15., 18., 30., 33., 36., 48., 51., 54., 66., 69., 72.};
  const std::vector<int> sizes = {4, 2, 3, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 55., 4.,  22., 40., 58., 7.,  25., 43., 61., 2.,  20., 38.,
      56., 5.,  23., 41., 59., 8.,  26., 44., 62., 3.,  21., 39., 57., 6.,  24.,
      42., 60., 9.,  27., 45., 63., 10., 28., 46., 64., 13., 31., 49., 67., 16.,
      34., 52., 70., 11., 29., 47., 65., 14., 32., 50., 68., 17., 35., 53., 71.,
      12., 30., 48., 66., 15., 33., 51., 69., 18., 36., 54., 72.};
  const std::vector<int> sizes = {4, 2, 3, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  10., 11., 12., 19., 20., 21., 28., 29., 30., 37., 38., 39.,
      46., 47., 48., 55., 56., 57., 64., 65., 66., 4.,  5.,  6.,  13., 14., 15.,
      22., 23., 24., 31., 32., 33., 40., 41., 42., 49., 50., 51., 58., 59., 60.,
      67., 68., 69., 7.,  8.,  9.,  16., 17., 18., 25., 26., 27., 34., 35., 36.,
      43., 44., 45., 52., 53., 54., 61., 62., 63., 70., 71., 72.};
  const std::vector<int> sizes = {4, 2, 3, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 2.,  11., 3.,  12., 19., 28., 20., 29., 21., 30., 37., 46., 38.,
      47., 39., 48., 55., 64., 56., 65., 57., 66., 4.,  13., 5.,  14., 6.,  15.,
      22., 31., 23., 32., 24., 33., 40., 49., 41., 50., 42., 51., 58., 67., 59.,
      68., 60., 69., 7.,  16., 8.,  17., 9.,  18., 25., 34., 26., 35., 27., 36.,
      43., 52., 44., 53., 45., 54., 61., 70., 62., 71., 63., 72.};
  const std::vector<int> sizes = {4, 2, 3, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  19., 20., 21., 37., 38., 39., 55., 56., 57., 10., 11., 12.,
      28., 29., 30., 46., 47., 48., 64., 65., 66., 4.,  5.,  6.,  22., 23., 24.,
      40., 41., 42., 58., 59., 60., 13., 14., 15., 31., 32., 33., 49., 50., 51.,
      67., 68., 69., 7.,  8.,  9.,  25., 26., 27., 43., 44., 45., 61., 62., 63.,
      16., 17., 18., 34., 35., 36., 52., 53., 54., 70., 71., 72.};
  const std::vector<int> sizes = {4, 2, 3, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 55., 2.,  20., 38., 56., 3.,  21., 39., 57., 10., 28., 46.,
      64., 11., 29., 47., 65., 12., 30., 48., 66., 4.,  22., 40., 58., 5.,  23.,
      41., 59., 6.,  24., 42., 60., 13., 31., 49., 67., 14., 32., 50., 68., 15.,
      33., 51., 69., 7.,  25., 43., 61., 8.,  26., 44., 62., 9.,  27., 45., 63.,
      16., 34., 52., 70., 17., 35., 53., 71., 18., 36., 54., 72.};
  const std::vector<int> sizes = {4, 2, 3, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 28., 37., 46., 55., 64., 2.,  11., 20., 29., 38., 47., 56.,
      65., 3.,  12., 21., 30., 39., 48., 57., 66., 4.,  13., 22., 31., 40., 49.,
      58., 67., 5.,  14., 23., 32., 41., 50., 59., 68., 6.,  15., 24., 33., 42.,
      51., 60., 69., 7.,  16., 25., 34., 43., 52., 61., 70., 8.,  17., 26., 35.,
      44., 53., 62., 71., 9.,  18., 27., 36., 45., 54., 63., 72.};
  const std::vector<int> sizes = {4, 2, 3, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 55., 10., 28., 46., 64., 2.,  20., 38., 56., 11., 29., 47.,
      65., 3.,  21., 39., 57., 12., 30., 48., 66., 4.,  22., 40., 58., 13., 31.,
      49., 67., 5.,  23., 41., 59., 14., 32., 50., 68., 6.,  24., 42., 60., 15.,
      33., 51., 69., 7.,  25., 43., 61., 16., 34., 52., 70., 8.,  26., 44., 62.,
      17., 35., 53., 71., 9.,  27., 45., 63., 18., 36., 54., 72.};
  const std::vector<int> sizes = {4, 2, 3, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 28., 31., 34., 37., 40., 43.,
      46., 49., 52., 55., 58., 61., 64., 67., 70., 2.,  5.,  8.,  11., 14., 17.,
      20., 23., 26., 29., 32., 35., 38., 41., 44., 47., 50., 53., 56., 59., 62.,
      65., 68., 71., 3.,  6.,  9.,  12., 15., 18., 21., 24., 27., 30., 33., 36.,
      39., 42., 45., 48., 51., 54., 57., 60., 63., 66., 69., 72.};
  const std::vector<int> sizes = {4, 2, 3, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 4.,  13., 7.,  16., 19., 28., 22., 31., 25., 34., 37., 46., 40.,
      49., 43., 52., 55., 64., 58., 67., 61., 70., 2.,  11., 5.,  14., 8.,  17.,
      20., 29., 23., 32., 26., 35., 38., 47., 41., 50., 44., 53., 56., 65., 59.,
      68., 62., 71., 3.,  12., 6.,  15., 9.,  18., 21., 30., 24., 33., 27., 36.,
      39., 48., 42., 51., 45., 54., 57., 66., 60., 69., 63., 72.};
  const std::vector<int> sizes = {4, 2, 3, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  19., 22., 25., 37., 40., 43., 55., 58., 61., 10., 13., 16.,
      28., 31., 34., 46., 49., 52., 64., 67., 70., 2.,  5.,  8.,  20., 23., 26.,
      38., 41., 44., 56., 59., 62., 11., 14., 17., 29., 32., 35., 47., 50., 53.,
      65., 68., 71., 3.,  6.,  9.,  21., 24., 27., 39., 42., 45., 57., 60., 63.,
      12., 15., 18., 30., 33., 36., 48., 51., 54., 66., 69., 72.};
  const std::vector<int> sizes = {4, 2, 3, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 55., 4.,  22., 40., 58., 7.,  25., 43., 61., 10., 28., 46.,
      64., 13., 31., 49., 67., 16., 34., 52., 70., 2.,  20., 38., 56., 5.,  23.,
      41., 59., 8.,  26., 44., 62., 11., 29., 47., 65., 14., 32., 50., 68., 17.,
      35., 53., 71., 3.,  21., 39., 57., 6.,  24., 42., 60., 9.,  27., 45., 63.,
      12., 30., 48., 66., 15., 33., 51., 69., 18., 36., 54., 72.};
  const std::vector<int> sizes = {4, 2, 3, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 28., 37., 46., 55., 64., 4.,  13., 22., 31., 40., 49., 58.,
      67., 7.,  16., 25., 34., 43., 52., 61., 70., 2.,  11., 20., 29., 38., 47.,
      56., 65., 5.,  14., 23., 32., 41., 50., 59., 68., 8.,  17., 26., 35., 44.,
      53., 62., 71., 3.,  12., 21., 30., 39., 48., 57., 66., 6.,  15., 24., 33.,
      42., 51., 60., 69., 9.,  18., 27., 36., 45., 54., 63., 72.};
  const std::vector<int> sizes = {4, 2, 3, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 55., 10., 28., 46., 64., 4.,  22., 40., 58., 13., 31., 49.,
      67., 7.,  25., 43., 61., 16., 34., 52., 70., 2.,  20., 38., 56., 11., 29.,
      47., 65., 5.,  23., 41., 59., 14., 32., 50., 68., 8.,  26., 44., 62., 17.,
      35., 53., 71., 3.,  21., 39., 57., 12., 30., 48., 66., 6.,  24., 42., 60.,
      15., 33., 51., 69., 9.,  27., 45., 63., 18., 36., 54., 72.};
  const std::vector<int> sizes = {4, 2, 3, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14.,
      15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28.,
      29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42.,
      43., 44., 45., 46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56.,
      57., 58., 59., 60., 61., 62., 63., 64., 65., 66., 67., 68., 69., 70.,
      71., 72., 73., 74., 75., 76., 77., 78., 79., 80., 81., 82., 83., 84.,
      85., 86., 87., 88., 89., 90., 91., 92., 93., 94., 95., 96.};
  const std::vector<int> sizes = {4, 2, 3, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  2.,  6.,  10., 3.,  7.,  11., 4.,  8.,  12., 13., 17.,
      21., 14., 18., 22., 15., 19., 23., 16., 20., 24., 25., 29., 33., 26.,
      30., 34., 27., 31., 35., 28., 32., 36., 37., 41., 45., 38., 42., 46.,
      39., 43., 47., 40., 44., 48., 49., 53., 57., 50., 54., 58., 51., 55.,
      59., 52., 56., 60., 61., 65., 69., 62., 66., 70., 63., 67., 71., 64.,
      68., 72., 73., 77., 81., 74., 78., 82., 75., 79., 83., 76., 80., 84.,
      85., 89., 93., 86., 90., 94., 87., 91., 95., 88., 92., 96.};
  const std::vector<int> sizes = {4, 2, 3, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  13., 14., 15., 16., 5.,  6.,  7.,  8.,  17., 18.,
      19., 20., 9.,  10., 11., 12., 21., 22., 23., 24., 25., 26., 27., 28.,
      37., 38., 39., 40., 29., 30., 31., 32., 41., 42., 43., 44., 33., 34.,
      35., 36., 45., 46., 47., 48., 49., 50., 51., 52., 61., 62., 63., 64.,
      53., 54., 55., 56., 65., 66., 67., 68., 57., 58., 59., 60., 69., 70.,
      71., 72., 73., 74., 75., 76., 85., 86., 87., 88., 77., 78., 79., 80.,
      89., 90., 91., 92., 81., 82., 83., 84., 93., 94., 95., 96.};
  const std::vector<int> sizes = {4, 2, 3, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 2.,  14., 3.,  15., 4.,  16., 5.,  17., 6.,  18., 7.,  19.,
      8.,  20., 9.,  21., 10., 22., 11., 23., 12., 24., 25., 37., 26., 38.,
      27., 39., 28., 40., 29., 41., 30., 42., 31., 43., 32., 44., 33., 45.,
      34., 46., 35., 47., 36., 48., 49., 61., 50., 62., 51., 63., 52., 64.,
      53., 65., 54., 66., 55., 67., 56., 68., 57., 69., 58., 70., 59., 71.,
      60., 72., 73., 85., 74., 86., 75., 87., 76., 88., 77., 89., 78., 90.,
      79., 91., 80., 92., 81., 93., 82., 94., 83., 95., 84., 96.};
  const std::vector<int> sizes = {4, 2, 3, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 2.,  6.,  10., 14., 18., 22., 3.,  7.,
      11., 15., 19., 23., 4.,  8.,  12., 16., 20., 24., 25., 29., 33., 37.,
      41., 45., 26., 30., 34., 38., 42., 46., 27., 31., 35., 39., 43., 47.,
      28., 32., 36., 40., 44., 48., 49., 53., 57., 61., 65., 69., 50., 54.,
      58., 62., 66., 70., 51., 55., 59., 63., 67., 71., 52., 56., 60., 64.,
      68., 72., 73., 77., 81., 85., 89., 93., 74., 78., 82., 86., 90., 94.,
      75., 79., 83., 87., 91., 95., 76., 80., 84., 88., 92., 96.};
  const std::vector<int> sizes = {4, 2, 3, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 5.,  17., 9.,  21., 2.,  14., 6.,  18., 10., 22., 3.,  15.,
      7.,  19., 11., 23., 4.,  16., 8.,  20., 12., 24., 25., 37., 29., 41.,
      33., 45., 26., 38., 30., 42., 34., 46., 27., 39., 31., 43., 35., 47.,
      28., 40., 32., 44., 36., 48., 49., 61., 53., 65., 57., 69., 50., 62.,
      54., 66., 58., 70., 51., 63., 55., 67., 59., 71., 52., 64., 56., 68.,
      60., 72., 73., 85., 77., 89., 81., 93., 74., 86., 78., 90., 82., 94.,
      75., 87., 79., 91., 83., 95., 76., 88., 80., 92., 84., 96.};
  const std::vector<int> sizes = {4, 2, 3, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 25., 26.,
      27., 28., 29., 30., 31., 32., 33., 34., 35., 36., 49., 50., 51., 52.,
      53., 54., 55., 56., 57., 58., 59., 60., 73., 74., 75., 76., 77., 78.,
      79., 80., 81., 82., 83., 84., 13., 14., 15., 16., 17., 18., 19., 20.,
      21., 22., 23., 24., 37., 38., 39., 40., 41., 42., 43., 44., 45., 46.,
      47., 48., 61., 62., 63., 64., 65., 66., 67., 68., 69., 70., 71., 72.,
      85., 86., 87., 88., 89., 90., 91., 92., 93., 94., 95., 96.};
  const std::vector<int> sizes = {4, 2, 3, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  2.,  6.,  10., 3.,  7.,  11., 4.,  8.,  12., 25., 29.,
      33., 26., 30., 34., 27., 31., 35., 28., 32., 36., 49., 53., 57., 50.,
      54., 58., 51., 55., 59., 52., 56., 60., 73., 77., 81., 74., 78., 82.,
      75., 79., 83., 76., 80., 84., 13., 17., 21., 14., 18., 22., 15., 19.,
      23., 16., 20., 24., 37., 41., 45., 38., 42., 46., 39., 43., 47., 40.,
      44., 48., 61., 65., 69., 62., 66., 70., 63., 67., 71., 64., 68., 72.,
      85., 89., 93., 86., 90., 94., 87., 91., 95., 88., 92., 96.};
  const std::vector<int> sizes = {4, 2, 3, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  25., 26., 27., 28., 49., 50., 51., 52., 73., 74.,
      75., 76., 5.,  6.,  7.,  8.,  29., 30., 31., 32., 53., 54., 55., 56.,
      77., 78., 79., 80., 9.,  10., 11., 12., 33., 34., 35., 36., 57., 58.,
      59., 60., 81., 82., 83., 84., 13., 14., 15., 16., 37., 38., 39., 40.,
      61., 62., 63., 64., 85., 86., 87., 88., 17., 18., 19., 20., 41., 42.,
      43., 44., 65., 66., 67., 68., 89., 90., 91., 92., 21., 22., 23., 24.,
      45., 46., 47., 48., 69., 70., 71., 72., 93., 94., 95., 96.};
  const std::vector<int> sizes = {4, 2, 3, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 2.,  26., 50., 74., 3.,  27., 51., 75., 4.,  28.,
      52., 76., 5.,  29., 53., 77., 6.,  30., 54., 78., 7.,  31., 55., 79.,
      8.,  32., 56., 80., 9.,  33., 57., 81., 10., 34., 58., 82., 11., 35.,
      59., 83., 12., 36., 60., 84., 13., 37., 61., 85., 14., 38., 62., 86.,
      15., 39., 63., 87., 16., 40., 64., 88., 17., 41., 65., 89., 18., 42.,
      66., 90., 19., 43., 67., 91., 20., 44., 68., 92., 21., 45., 69., 93.,
      22., 46., 70., 94., 23., 47., 71., 95., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 2, 3, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  25., 29., 33., 49., 53., 57., 73., 77., 81., 2.,  6.,
      10., 26., 30., 34., 50., 54., 58., 74., 78., 82., 3.,  7.,  11., 27.,
      31., 35., 51., 55., 59., 75., 79., 83., 4.,  8.,  12., 28., 32., 36.,
      52., 56., 60., 76., 80., 84., 13., 17., 21., 37., 41., 45., 61., 65.,
      69., 85., 89., 93., 14., 18., 22., 38., 42., 46., 62., 66., 70., 86.,
      90., 94., 15., 19., 23., 39., 43., 47., 63., 67., 71., 87., 91., 95.,
      16., 20., 24., 40., 44., 48., 64., 68., 72., 88., 92., 96.};
  const std::vector<int> sizes = {4, 2, 3, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 5.,  29., 53., 77., 9.,  33., 57., 81., 2.,  26.,
      50., 74., 6.,  30., 54., 78., 10., 34., 58., 82., 3.,  27., 51., 75.,
      7.,  31., 55., 79., 11., 35., 59., 83., 4.,  28., 52., 76., 8.,  32.,
      56., 80., 12., 36., 60., 84., 13., 37., 61., 85., 17., 41., 65., 89.,
      21., 45., 69., 93., 14., 38., 62., 86., 18., 42., 66., 90., 22., 46.,
      70., 94., 15., 39., 63., 87., 19., 43., 67., 91., 23., 47., 71., 95.,
      16., 40., 64., 88., 20., 44., 68., 92., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 2, 3, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  13., 14., 15., 16., 25., 26., 27., 28., 37., 38.,
      39., 40., 49., 50., 51., 52., 61., 62., 63., 64., 73., 74., 75., 76.,
      85., 86., 87., 88., 5.,  6.,  7.,  8.,  17., 18., 19., 20., 29., 30.,
      31., 32., 41., 42., 43., 44., 53., 54., 55., 56., 65., 66., 67., 68.,
      77., 78., 79., 80., 89., 90., 91., 92., 9.,  10., 11., 12., 21., 22.,
      23., 24., 33., 34., 35., 36., 45., 46., 47., 48., 57., 58., 59., 60.,
      69., 70., 71., 72., 81., 82., 83., 84., 93., 94., 95., 96.};
  const std::vector<int> sizes = {4, 2, 3, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 2.,  14., 3.,  15., 4.,  16., 25., 37., 26., 38., 27., 39.,
      28., 40., 49., 61., 50., 62., 51., 63., 52., 64., 73., 85., 74., 86.,
      75., 87., 76., 88., 5.,  17., 6.,  18., 7.,  19., 8.,  20., 29., 41.,
      30., 42., 31., 43., 32., 44., 53., 65., 54., 66., 55., 67., 56., 68.,
      77., 89., 78., 90., 79., 91., 80., 92., 9.,  21., 10., 22., 11., 23.,
      12., 24., 33., 45., 34., 46., 35., 47., 36., 48., 57., 69., 58., 70.,
      59., 71., 60., 72., 81., 93., 82., 94., 83., 95., 84., 96.};
  const std::vector<int> sizes = {4, 2, 3, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  25., 26., 27., 28., 49., 50., 51., 52., 73., 74.,
      75., 76., 13., 14., 15., 16., 37., 38., 39., 40., 61., 62., 63., 64.,
      85., 86., 87., 88., 5.,  6.,  7.,  8.,  29., 30., 31., 32., 53., 54.,
      55., 56., 77., 78., 79., 80., 17., 18., 19., 20., 41., 42., 43., 44.,
      65., 66., 67., 68., 89., 90., 91., 92., 9.,  10., 11., 12., 33., 34.,
      35., 36., 57., 58., 59., 60., 81., 82., 83., 84., 21., 22., 23., 24.,
      45., 46., 47., 48., 69., 70., 71., 72., 93., 94., 95., 96.};
  const std::vector<int> sizes = {4, 2, 3, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 2.,  26., 50., 74., 3.,  27., 51., 75., 4.,  28.,
      52., 76., 13., 37., 61., 85., 14., 38., 62., 86., 15., 39., 63., 87.,
      16., 40., 64., 88., 5.,  29., 53., 77., 6.,  30., 54., 78., 7.,  31.,
      55., 79., 8.,  32., 56., 80., 17., 41., 65., 89., 18., 42., 66., 90.,
      19., 43., 67., 91., 20., 44., 68., 92., 9.,  33., 57., 81., 10., 34.,
      58., 82., 11., 35., 59., 83., 12., 36., 60., 84., 21., 45., 69., 93.,
      22., 46., 70., 94., 23., 47., 71., 95., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 2, 3, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 49., 61., 73., 85., 2.,  14., 26., 38., 50., 62.,
      74., 86., 3.,  15., 27., 39., 51., 63., 75., 87., 4.,  16., 28., 40.,
      52., 64., 76., 88., 5.,  17., 29., 41., 53., 65., 77., 89., 6.,  18.,
      30., 42., 54., 66., 78., 90., 7.,  19., 31., 43., 55., 67., 79., 91.,
      8.,  20., 32., 44., 56., 68., 80., 92., 9.,  21., 33., 45., 57., 69.,
      81., 93., 10., 22., 34., 46., 58., 70., 82., 94., 11., 23., 35., 47.,
      59., 71., 83., 95., 12., 24., 36., 48., 60., 72., 84., 96.};
  const std::vector<int> sizes = {4, 2, 3, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 13., 37., 61., 85., 2.,  26., 50., 74., 14., 38.,
      62., 86., 3.,  27., 51., 75., 15., 39., 63., 87., 4.,  28., 52., 76.,
      16., 40., 64., 88., 5.,  29., 53., 77., 17., 41., 65., 89., 6.,  30.,
      54., 78., 18., 42., 66., 90., 7.,  31., 55., 79., 19., 43., 67., 91.,
      8.,  32., 56., 80., 20., 44., 68., 92., 9.,  33., 57., 81., 21., 45.,
      69., 93., 10., 34., 58., 82., 22., 46., 70., 94., 11., 35., 59., 83.,
      23., 47., 71., 95., 12., 36., 60., 84., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 2, 3, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 25., 29., 33., 37., 41., 45., 49., 53.,
      57., 61., 65., 69., 73., 77., 81., 85., 89., 93., 2.,  6.,  10., 14.,
      18., 22., 26., 30., 34., 38., 42., 46., 50., 54., 58., 62., 66., 70.,
      74., 78., 82., 86., 90., 94., 3.,  7.,  11., 15., 19., 23., 27., 31.,
      35., 39., 43., 47., 51., 55., 59., 63., 67., 71., 75., 79., 83., 87.,
      91., 95., 4.,  8.,  12., 16., 20., 24., 28., 32., 36., 40., 44., 48.,
      52., 56., 60., 64., 68., 72., 76., 80., 84., 88., 92., 96.};
  const std::vector<int> sizes = {4, 2, 3, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 5.,  17., 9.,  21., 25., 37., 29., 41., 33., 45., 49., 61.,
      53., 65., 57., 69., 73., 85., 77., 89., 81., 93., 2.,  14., 6.,  18.,
      10., 22., 26., 38., 30., 42., 34., 46., 50., 62., 54., 66., 58., 70.,
      74., 86., 78., 90., 82., 94., 3.,  15., 7.,  19., 11., 23., 27., 39.,
      31., 43., 35., 47., 51., 63., 55., 67., 59., 71., 75., 87., 79., 91.,
      83., 95., 4.,  16., 8.,  20., 12., 24., 28., 40., 32., 44., 36., 48.,
      52., 64., 56., 68., 60., 72., 76., 88., 80., 92., 84., 96.};
  const std::vector<int> sizes = {4, 2, 3, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  25., 29., 33., 49., 53., 57., 73., 77., 81., 13., 17.,
      21., 37., 41., 45., 61., 65., 69., 85., 89., 93., 2.,  6.,  10., 26.,
      30., 34., 50., 54., 58., 74., 78., 82., 14., 18., 22., 38., 42., 46.,
      62., 66., 70., 86., 90., 94., 3.,  7.,  11., 27., 31., 35., 51., 55.,
      59., 75., 79., 83., 15., 19., 23., 39., 43., 47., 63., 67., 71., 87.,
      91., 95., 4.,  8.,  12., 28., 32., 36., 52., 56., 60., 76., 80., 84.,
      16., 20., 24., 40., 44., 48., 64., 68., 72., 88., 92., 96.};
  const std::vector<int> sizes = {4, 2, 3, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 5.,  29., 53., 77., 9.,  33., 57., 81., 13., 37.,
      61., 85., 17., 41., 65., 89., 21., 45., 69., 93., 2.,  26., 50., 74.,
      6.,  30., 54., 78., 10., 34., 58., 82., 14., 38., 62., 86., 18., 42.,
      66., 90., 22., 46., 70., 94., 3.,  27., 51., 75., 7.,  31., 55., 79.,
      11., 35., 59., 83., 15., 39., 63., 87., 19., 43., 67., 91., 23., 47.,
      71., 95., 4.,  28., 52., 76., 8.,  32., 56., 80., 12., 36., 60., 84.,
      16., 40., 64., 88., 20., 44., 68., 92., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 2, 3, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 49., 61., 73., 85., 5.,  17., 29., 41., 53., 65.,
      77., 89., 9.,  21., 33., 45., 57., 69., 81., 93., 2.,  14., 26., 38.,
      50., 62., 74., 86., 6.,  18., 30., 42., 54., 66., 78., 90., 10., 22.,
      34., 46., 58., 70., 82., 94., 3.,  15., 27., 39., 51., 63., 75., 87.,
      7.,  19., 31., 43., 55., 67., 79., 91., 11., 23., 35., 47., 59., 71.,
      83., 95., 4.,  16., 28., 40., 52., 64., 76., 88., 8.,  20., 32., 44.,
      56., 68., 80., 92., 12., 24., 36., 48., 60., 72., 84., 96.};
  const std::vector<int> sizes = {4, 2, 3, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x3x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 13., 37., 61., 85., 5.,  29., 53., 77., 17., 41.,
      65., 89., 9.,  33., 57., 81., 21., 45., 69., 93., 2.,  26., 50., 74.,
      14., 38., 62., 86., 6.,  30., 54., 78., 18., 42., 66., 90., 10., 34.,
      58., 82., 22., 46., 70., 94., 3.,  27., 51., 75., 15., 39., 63., 87.,
      7.,  31., 55., 79., 19., 43., 67., 91., 11., 35., 59., 83., 23., 47.,
      71., 95., 4.,  28., 52., 76., 16., 40., 64., 88., 8.,  32., 56., 80.,
      20., 44., 68., 92., 12., 36., 60., 84., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 2, 3, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13.,
      14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26.,
      27., 28., 29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39.,
      40., 41., 42., 43., 44., 45., 46., 47., 48., 49., 50., 51., 52.,
      53., 54., 55., 56., 57., 58., 59., 60., 61., 62., 63., 64.};
  const std::vector<int> sizes = {4, 2, 4, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  2.,  4.,  6.,  8.,  9.,  11., 13., 15., 10.,
      12., 14., 16., 17., 19., 21., 23., 18., 20., 22., 24., 25., 27.,
      29., 31., 26., 28., 30., 32., 33., 35., 37., 39., 34., 36., 38.,
      40., 41., 43., 45., 47., 42., 44., 46., 48., 49., 51., 53., 55.,
      50., 52., 54., 56., 57., 59., 61., 63., 58., 60., 62., 64.};
  const std::vector<int> sizes = {4, 2, 4, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  9.,  10., 3.,  4.,  11., 12., 5.,  6.,  13., 14., 7.,
      8.,  15., 16., 17., 18., 25., 26., 19., 20., 27., 28., 21., 22.,
      29., 30., 23., 24., 31., 32., 33., 34., 41., 42., 35., 36., 43.,
      44., 37., 38., 45., 46., 39., 40., 47., 48., 49., 50., 57., 58.,
      51., 52., 59., 60., 53., 54., 61., 62., 55., 56., 63., 64.};
  const std::vector<int> sizes = {4, 2, 4, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  2.,  10., 3.,  11., 4.,  12., 5.,  13., 6.,  14., 7.,
      15., 8.,  16., 17., 25., 18., 26., 19., 27., 20., 28., 21., 29.,
      22., 30., 23., 31., 24., 32., 33., 41., 34., 42., 35., 43., 36.,
      44., 37., 45., 38., 46., 39., 47., 40., 48., 49., 57., 50., 58.,
      51., 59., 52., 60., 53., 61., 54., 62., 55., 63., 56., 64.};
  const std::vector<int> sizes = {4, 2, 4, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 2.,  4.,  6.,  8.,  10.,
      12., 14., 16., 17., 19., 21., 23., 25., 27., 29., 31., 18., 20.,
      22., 24., 26., 28., 30., 32., 33., 35., 37., 39., 41., 43., 45.,
      47., 34., 36., 38., 40., 42., 44., 46., 48., 49., 51., 53., 55.,
      57., 59., 61., 63., 50., 52., 54., 56., 58., 60., 62., 64.};
  const std::vector<int> sizes = {4, 2, 4, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  3.,  11., 5.,  13., 7.,  15., 2.,  10., 4.,  12., 6.,
      14., 8.,  16., 17., 25., 19., 27., 21., 29., 23., 31., 18., 26.,
      20., 28., 22., 30., 24., 32., 33., 41., 35., 43., 37., 45., 39.,
      47., 34., 42., 36., 44., 38., 46., 40., 48., 49., 57., 51., 59.,
      53., 61., 55., 63., 50., 58., 52., 60., 54., 62., 56., 64.};
  const std::vector<int> sizes = {4, 2, 4, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  17., 18., 19., 20., 21.,
      22., 23., 24., 33., 34., 35., 36., 37., 38., 39., 40., 49., 50.,
      51., 52., 53., 54., 55., 56., 9.,  10., 11., 12., 13., 14., 15.,
      16., 25., 26., 27., 28., 29., 30., 31., 32., 41., 42., 43., 44.,
      45., 46., 47., 48., 57., 58., 59., 60., 61., 62., 63., 64.};
  const std::vector<int> sizes = {4, 2, 4, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  2.,  4.,  6.,  8.,  17., 19., 21., 23., 18.,
      20., 22., 24., 33., 35., 37., 39., 34., 36., 38., 40., 49., 51.,
      53., 55., 50., 52., 54., 56., 9.,  11., 13., 15., 10., 12., 14.,
      16., 25., 27., 29., 31., 26., 28., 30., 32., 41., 43., 45., 47.,
      42., 44., 46., 48., 57., 59., 61., 63., 58., 60., 62., 64.};
  const std::vector<int> sizes = {4, 2, 4, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  17., 18., 33., 34., 49., 50., 3.,  4.,  19., 20., 35.,
      36., 51., 52., 5.,  6.,  21., 22., 37., 38., 53., 54., 7.,  8.,
      23., 24., 39., 40., 55., 56., 9.,  10., 25., 26., 41., 42., 57.,
      58., 11., 12., 27., 28., 43., 44., 59., 60., 13., 14., 29., 30.,
      45., 46., 61., 62., 15., 16., 31., 32., 47., 48., 63., 64.};
  const std::vector<int> sizes = {4, 2, 4, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 2.,  18., 34., 50., 3.,  19., 35., 51., 4.,
      20., 36., 52., 5.,  21., 37., 53., 6.,  22., 38., 54., 7.,  23.,
      39., 55., 8.,  24., 40., 56., 9.,  25., 41., 57., 10., 26., 42.,
      58., 11., 27., 43., 59., 12., 28., 44., 60., 13., 29., 45., 61.,
      14., 30., 46., 62., 15., 31., 47., 63., 16., 32., 48., 64.};
  const std::vector<int> sizes = {4, 2, 4, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  17., 19., 21., 23., 33., 35., 37., 39., 49.,
      51., 53., 55., 2.,  4.,  6.,  8.,  18., 20., 22., 24., 34., 36.,
      38., 40., 50., 52., 54., 56., 9.,  11., 13., 15., 25., 27., 29.,
      31., 41., 43., 45., 47., 57., 59., 61., 63., 10., 12., 14., 16.,
      26., 28., 30., 32., 42., 44., 46., 48., 58., 60., 62., 64.};
  const std::vector<int> sizes = {4, 2, 4, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 3.,  19., 35., 51., 5.,  21., 37., 53., 7.,
      23., 39., 55., 2.,  18., 34., 50., 4.,  20., 36., 52., 6.,  22.,
      38., 54., 8.,  24., 40., 56., 9.,  25., 41., 57., 11., 27., 43.,
      59., 13., 29., 45., 61., 15., 31., 47., 63., 10., 26., 42., 58.,
      12., 28., 44., 60., 14., 30., 46., 62., 16., 32., 48., 64.};
  const std::vector<int> sizes = {4, 2, 4, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  9.,  10., 17., 18., 25., 26., 33., 34., 41., 42., 49.,
      50., 57., 58., 3.,  4.,  11., 12., 19., 20., 27., 28., 35., 36.,
      43., 44., 51., 52., 59., 60., 5.,  6.,  13., 14., 21., 22., 29.,
      30., 37., 38., 45., 46., 53., 54., 61., 62., 7.,  8.,  15., 16.,
      23., 24., 31., 32., 39., 40., 47., 48., 55., 56., 63., 64.};
  const std::vector<int> sizes = {4, 2, 4, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  2.,  10., 17., 25., 18., 26., 33., 41., 34., 42., 49.,
      57., 50., 58., 3.,  11., 4.,  12., 19., 27., 20., 28., 35., 43.,
      36., 44., 51., 59., 52., 60., 5.,  13., 6.,  14., 21., 29., 22.,
      30., 37., 45., 38., 46., 53., 61., 54., 62., 7.,  15., 8.,  16.,
      23., 31., 24., 32., 39., 47., 40., 48., 55., 63., 56., 64.};
  const std::vector<int> sizes = {4, 2, 4, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  17., 18., 33., 34., 49., 50., 9.,  10., 25., 26., 41.,
      42., 57., 58., 3.,  4.,  19., 20., 35., 36., 51., 52., 11., 12.,
      27., 28., 43., 44., 59., 60., 5.,  6.,  21., 22., 37., 38., 53.,
      54., 13., 14., 29., 30., 45., 46., 61., 62., 7.,  8.,  23., 24.,
      39., 40., 55., 56., 15., 16., 31., 32., 47., 48., 63., 64.};
  const std::vector<int> sizes = {4, 2, 4, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 2.,  18., 34., 50., 9.,  25., 41., 57., 10.,
      26., 42., 58., 3.,  19., 35., 51., 4.,  20., 36., 52., 11., 27.,
      43., 59., 12., 28., 44., 60., 5.,  21., 37., 53., 6.,  22., 38.,
      54., 13., 29., 45., 61., 14., 30., 46., 62., 7.,  23., 39., 55.,
      8.,  24., 40., 56., 15., 31., 47., 63., 16., 32., 48., 64.};
  const std::vector<int> sizes = {4, 2, 4, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 33., 41., 49., 57., 2.,  10., 18., 26., 34.,
      42., 50., 58., 3.,  11., 19., 27., 35., 43., 51., 59., 4.,  12.,
      20., 28., 36., 44., 52., 60., 5.,  13., 21., 29., 37., 45., 53.,
      61., 6.,  14., 22., 30., 38., 46., 54., 62., 7.,  15., 23., 31.,
      39., 47., 55., 63., 8.,  16., 24., 32., 40., 48., 56., 64.};
  const std::vector<int> sizes = {4, 2, 4, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 9.,  25., 41., 57., 2.,  18., 34., 50., 10.,
      26., 42., 58., 3.,  19., 35., 51., 11., 27., 43., 59., 4.,  20.,
      36., 52., 12., 28., 44., 60., 5.,  21., 37., 53., 13., 29., 45.,
      61., 6.,  22., 38., 54., 14., 30., 46., 62., 7.,  23., 39., 55.,
      15., 31., 47., 63., 8.,  24., 40., 56., 16., 32., 48., 64.};
  const std::vector<int> sizes = {4, 2, 4, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23., 25.,
      27., 29., 31., 33., 35., 37., 39., 41., 43., 45., 47., 49., 51.,
      53., 55., 57., 59., 61., 63., 2.,  4.,  6.,  8.,  10., 12., 14.,
      16., 18., 20., 22., 24., 26., 28., 30., 32., 34., 36., 38., 40.,
      42., 44., 46., 48., 50., 52., 54., 56., 58., 60., 62., 64.};
  const std::vector<int> sizes = {4, 2, 4, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  3.,  11., 5.,  13., 7.,  15., 17., 25., 19., 27., 21.,
      29., 23., 31., 33., 41., 35., 43., 37., 45., 39., 47., 49., 57.,
      51., 59., 53., 61., 55., 63., 2.,  10., 4.,  12., 6.,  14., 8.,
      16., 18., 26., 20., 28., 22., 30., 24., 32., 34., 42., 36., 44.,
      38., 46., 40., 48., 50., 58., 52., 60., 54., 62., 56., 64.};
  const std::vector<int> sizes = {4, 2, 4, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  17., 19., 21., 23., 33., 35., 37., 39., 49.,
      51., 53., 55., 9.,  11., 13., 15., 25., 27., 29., 31., 41., 43.,
      45., 47., 57., 59., 61., 63., 2.,  4.,  6.,  8.,  18., 20., 22.,
      24., 34., 36., 38., 40., 50., 52., 54., 56., 10., 12., 14., 16.,
      26., 28., 30., 32., 42., 44., 46., 48., 58., 60., 62., 64.};
  const std::vector<int> sizes = {4, 2, 4, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 3.,  19., 35., 51., 5.,  21., 37., 53., 7.,
      23., 39., 55., 9.,  25., 41., 57., 11., 27., 43., 59., 13., 29.,
      45., 61., 15., 31., 47., 63., 2.,  18., 34., 50., 4.,  20., 36.,
      52., 6.,  22., 38., 54., 8.,  24., 40., 56., 10., 26., 42., 58.,
      12., 28., 44., 60., 14., 30., 46., 62., 16., 32., 48., 64.};
  const std::vector<int> sizes = {4, 2, 4, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 33., 41., 49., 57., 3.,  11., 19., 27., 35.,
      43., 51., 59., 5.,  13., 21., 29., 37., 45., 53., 61., 7.,  15.,
      23., 31., 39., 47., 55., 63., 2.,  10., 18., 26., 34., 42., 50.,
      58., 4.,  12., 20., 28., 36., 44., 52., 60., 6.,  14., 22., 30.,
      38., 46., 54., 62., 8.,  16., 24., 32., 40., 48., 56., 64.};
  const std::vector<int> sizes = {4, 2, 4, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 9.,  25., 41., 57., 3.,  19., 35., 51., 11.,
      27., 43., 59., 5.,  21., 37., 53., 13., 29., 45., 61., 7.,  23.,
      39., 55., 15., 31., 47., 63., 2.,  18., 34., 50., 10., 26., 42.,
      58., 4.,  20., 36., 52., 12., 28., 44., 60., 6.,  22., 38., 54.,
      14., 30., 46., 62., 8.,  24., 40., 56., 16., 32., 48., 64.};
  const std::vector<int> sizes = {4, 2, 4, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14.,
      15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28.,
      29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42.,
      43., 44., 45., 46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56.,
      57., 58., 59., 60., 61., 62., 63., 64., 65., 66., 67., 68., 69., 70.,
      71., 72., 73., 74., 75., 76., 77., 78., 79., 80., 81., 82., 83., 84.,
      85., 86., 87., 88., 89., 90., 91., 92., 93., 94., 95., 96.};
  const std::vector<int> sizes = {4, 2, 4, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 2.,  5.,  8.,  11., 3.,  6.,  9.,  12., 13., 16.,
      19., 22., 14., 17., 20., 23., 15., 18., 21., 24., 25., 28., 31., 34.,
      26., 29., 32., 35., 27., 30., 33., 36., 37., 40., 43., 46., 38., 41.,
      44., 47., 39., 42., 45., 48., 49., 52., 55., 58., 50., 53., 56., 59.,
      51., 54., 57., 60., 61., 64., 67., 70., 62., 65., 68., 71., 63., 66.,
      69., 72., 73., 76., 79., 82., 74., 77., 80., 83., 75., 78., 81., 84.,
      85., 88., 91., 94., 86., 89., 92., 95., 87., 90., 93., 96.};
  const std::vector<int> sizes = {4, 2, 4, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  13., 14., 15., 4.,  5.,  6.,  16., 17., 18., 7.,  8.,
      9.,  19., 20., 21., 10., 11., 12., 22., 23., 24., 25., 26., 27., 37.,
      38., 39., 28., 29., 30., 40., 41., 42., 31., 32., 33., 43., 44., 45.,
      34., 35., 36., 46., 47., 48., 49., 50., 51., 61., 62., 63., 52., 53.,
      54., 64., 65., 66., 55., 56., 57., 67., 68., 69., 58., 59., 60., 70.,
      71., 72., 73., 74., 75., 85., 86., 87., 76., 77., 78., 88., 89., 90.,
      79., 80., 81., 91., 92., 93., 82., 83., 84., 94., 95., 96.};
  const std::vector<int> sizes = {4, 2, 4, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 2.,  14., 3.,  15., 4.,  16., 5.,  17., 6.,  18., 7.,  19.,
      8.,  20., 9.,  21., 10., 22., 11., 23., 12., 24., 25., 37., 26., 38.,
      27., 39., 28., 40., 29., 41., 30., 42., 31., 43., 32., 44., 33., 45.,
      34., 46., 35., 47., 36., 48., 49., 61., 50., 62., 51., 63., 52., 64.,
      53., 65., 54., 66., 55., 67., 56., 68., 57., 69., 58., 70., 59., 71.,
      60., 72., 73., 85., 74., 86., 75., 87., 76., 88., 77., 89., 78., 90.,
      79., 91., 80., 92., 81., 93., 82., 94., 83., 95., 84., 96.};
  const std::vector<int> sizes = {4, 2, 4, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 2.,  5.,  8.,  11., 14., 17.,
      20., 23., 3.,  6.,  9.,  12., 15., 18., 21., 24., 25., 28., 31., 34.,
      37., 40., 43., 46., 26., 29., 32., 35., 38., 41., 44., 47., 27., 30.,
      33., 36., 39., 42., 45., 48., 49., 52., 55., 58., 61., 64., 67., 70.,
      50., 53., 56., 59., 62., 65., 68., 71., 51., 54., 57., 60., 63., 66.,
      69., 72., 73., 76., 79., 82., 85., 88., 91., 94., 74., 77., 80., 83.,
      86., 89., 92., 95., 75., 78., 81., 84., 87., 90., 93., 96.};
  const std::vector<int> sizes = {4, 2, 4, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 4.,  16., 7.,  19., 10., 22., 2.,  14., 5.,  17., 8.,  20.,
      11., 23., 3.,  15., 6.,  18., 9.,  21., 12., 24., 25., 37., 28., 40.,
      31., 43., 34., 46., 26., 38., 29., 41., 32., 44., 35., 47., 27., 39.,
      30., 42., 33., 45., 36., 48., 49., 61., 52., 64., 55., 67., 58., 70.,
      50., 62., 53., 65., 56., 68., 59., 71., 51., 63., 54., 66., 57., 69.,
      60., 72., 73., 85., 76., 88., 79., 91., 82., 94., 74., 86., 77., 89.,
      80., 92., 83., 95., 75., 87., 78., 90., 81., 93., 84., 96.};
  const std::vector<int> sizes = {4, 2, 4, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 25., 26.,
      27., 28., 29., 30., 31., 32., 33., 34., 35., 36., 49., 50., 51., 52.,
      53., 54., 55., 56., 57., 58., 59., 60., 73., 74., 75., 76., 77., 78.,
      79., 80., 81., 82., 83., 84., 13., 14., 15., 16., 17., 18., 19., 20.,
      21., 22., 23., 24., 37., 38., 39., 40., 41., 42., 43., 44., 45., 46.,
      47., 48., 61., 62., 63., 64., 65., 66., 67., 68., 69., 70., 71., 72.,
      85., 86., 87., 88., 89., 90., 91., 92., 93., 94., 95., 96.};
  const std::vector<int> sizes = {4, 2, 4, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 2.,  5.,  8.,  11., 3.,  6.,  9.,  12., 25., 28.,
      31., 34., 26., 29., 32., 35., 27., 30., 33., 36., 49., 52., 55., 58.,
      50., 53., 56., 59., 51., 54., 57., 60., 73., 76., 79., 82., 74., 77.,
      80., 83., 75., 78., 81., 84., 13., 16., 19., 22., 14., 17., 20., 23.,
      15., 18., 21., 24., 37., 40., 43., 46., 38., 41., 44., 47., 39., 42.,
      45., 48., 61., 64., 67., 70., 62., 65., 68., 71., 63., 66., 69., 72.,
      85., 88., 91., 94., 86., 89., 92., 95., 87., 90., 93., 96.};
  const std::vector<int> sizes = {4, 2, 4, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  25., 26., 27., 49., 50., 51., 73., 74., 75., 4.,  5.,
      6.,  28., 29., 30., 52., 53., 54., 76., 77., 78., 7.,  8.,  9.,  31.,
      32., 33., 55., 56., 57., 79., 80., 81., 10., 11., 12., 34., 35., 36.,
      58., 59., 60., 82., 83., 84., 13., 14., 15., 37., 38., 39., 61., 62.,
      63., 85., 86., 87., 16., 17., 18., 40., 41., 42., 64., 65., 66., 88.,
      89., 90., 19., 20., 21., 43., 44., 45., 67., 68., 69., 91., 92., 93.,
      22., 23., 24., 46., 47., 48., 70., 71., 72., 94., 95., 96.};
  const std::vector<int> sizes = {4, 2, 4, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 2.,  26., 50., 74., 3.,  27., 51., 75., 4.,  28.,
      52., 76., 5.,  29., 53., 77., 6.,  30., 54., 78., 7.,  31., 55., 79.,
      8.,  32., 56., 80., 9.,  33., 57., 81., 10., 34., 58., 82., 11., 35.,
      59., 83., 12., 36., 60., 84., 13., 37., 61., 85., 14., 38., 62., 86.,
      15., 39., 63., 87., 16., 40., 64., 88., 17., 41., 65., 89., 18., 42.,
      66., 90., 19., 43., 67., 91., 20., 44., 68., 92., 21., 45., 69., 93.,
      22., 46., 70., 94., 23., 47., 71., 95., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 2, 4, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 25., 28., 31., 34., 49., 52., 55., 58., 73., 76.,
      79., 82., 2.,  5.,  8.,  11., 26., 29., 32., 35., 50., 53., 56., 59.,
      74., 77., 80., 83., 3.,  6.,  9.,  12., 27., 30., 33., 36., 51., 54.,
      57., 60., 75., 78., 81., 84., 13., 16., 19., 22., 37., 40., 43., 46.,
      61., 64., 67., 70., 85., 88., 91., 94., 14., 17., 20., 23., 38., 41.,
      44., 47., 62., 65., 68., 71., 86., 89., 92., 95., 15., 18., 21., 24.,
      39., 42., 45., 48., 63., 66., 69., 72., 87., 90., 93., 96.};
  const std::vector<int> sizes = {4, 2, 4, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 4.,  28., 52., 76., 7.,  31., 55., 79., 10., 34.,
      58., 82., 2.,  26., 50., 74., 5.,  29., 53., 77., 8.,  32., 56., 80.,
      11., 35., 59., 83., 3.,  27., 51., 75., 6.,  30., 54., 78., 9.,  33.,
      57., 81., 12., 36., 60., 84., 13., 37., 61., 85., 16., 40., 64., 88.,
      19., 43., 67., 91., 22., 46., 70., 94., 14., 38., 62., 86., 17., 41.,
      65., 89., 20., 44., 68., 92., 23., 47., 71., 95., 15., 39., 63., 87.,
      18., 42., 66., 90., 21., 45., 69., 93., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 2, 4, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  13., 14., 15., 25., 26., 27., 37., 38., 39., 49., 50.,
      51., 61., 62., 63., 73., 74., 75., 85., 86., 87., 4.,  5.,  6.,  16.,
      17., 18., 28., 29., 30., 40., 41., 42., 52., 53., 54., 64., 65., 66.,
      76., 77., 78., 88., 89., 90., 7.,  8.,  9.,  19., 20., 21., 31., 32.,
      33., 43., 44., 45., 55., 56., 57., 67., 68., 69., 79., 80., 81., 91.,
      92., 93., 10., 11., 12., 22., 23., 24., 34., 35., 36., 46., 47., 48.,
      58., 59., 60., 70., 71., 72., 82., 83., 84., 94., 95., 96.};
  const std::vector<int> sizes = {4, 2, 4, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 2.,  14., 3.,  15., 25., 37., 26., 38., 27., 39., 49., 61.,
      50., 62., 51., 63., 73., 85., 74., 86., 75., 87., 4.,  16., 5.,  17.,
      6.,  18., 28., 40., 29., 41., 30., 42., 52., 64., 53., 65., 54., 66.,
      76., 88., 77., 89., 78., 90., 7.,  19., 8.,  20., 9.,  21., 31., 43.,
      32., 44., 33., 45., 55., 67., 56., 68., 57., 69., 79., 91., 80., 92.,
      81., 93., 10., 22., 11., 23., 12., 24., 34., 46., 35., 47., 36., 48.,
      58., 70., 59., 71., 60., 72., 82., 94., 83., 95., 84., 96.};
  const std::vector<int> sizes = {4, 2, 4, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  25., 26., 27., 49., 50., 51., 73., 74., 75., 13., 14.,
      15., 37., 38., 39., 61., 62., 63., 85., 86., 87., 4.,  5.,  6.,  28.,
      29., 30., 52., 53., 54., 76., 77., 78., 16., 17., 18., 40., 41., 42.,
      64., 65., 66., 88., 89., 90., 7.,  8.,  9.,  31., 32., 33., 55., 56.,
      57., 79., 80., 81., 19., 20., 21., 43., 44., 45., 67., 68., 69., 91.,
      92., 93., 10., 11., 12., 34., 35., 36., 58., 59., 60., 82., 83., 84.,
      22., 23., 24., 46., 47., 48., 70., 71., 72., 94., 95., 96.};
  const std::vector<int> sizes = {4, 2, 4, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 2.,  26., 50., 74., 3.,  27., 51., 75., 13., 37.,
      61., 85., 14., 38., 62., 86., 15., 39., 63., 87., 4.,  28., 52., 76.,
      5.,  29., 53., 77., 6.,  30., 54., 78., 16., 40., 64., 88., 17., 41.,
      65., 89., 18., 42., 66., 90., 7.,  31., 55., 79., 8.,  32., 56., 80.,
      9.,  33., 57., 81., 19., 43., 67., 91., 20., 44., 68., 92., 21., 45.,
      69., 93., 10., 34., 58., 82., 11., 35., 59., 83., 12., 36., 60., 84.,
      22., 46., 70., 94., 23., 47., 71., 95., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 2, 4, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 49., 61., 73., 85., 2.,  14., 26., 38., 50., 62.,
      74., 86., 3.,  15., 27., 39., 51., 63., 75., 87., 4.,  16., 28., 40.,
      52., 64., 76., 88., 5.,  17., 29., 41., 53., 65., 77., 89., 6.,  18.,
      30., 42., 54., 66., 78., 90., 7.,  19., 31., 43., 55., 67., 79., 91.,
      8.,  20., 32., 44., 56., 68., 80., 92., 9.,  21., 33., 45., 57., 69.,
      81., 93., 10., 22., 34., 46., 58., 70., 82., 94., 11., 23., 35., 47.,
      59., 71., 83., 95., 12., 24., 36., 48., 60., 72., 84., 96.};
  const std::vector<int> sizes = {4, 2, 4, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 13., 37., 61., 85., 2.,  26., 50., 74., 14., 38.,
      62., 86., 3.,  27., 51., 75., 15., 39., 63., 87., 4.,  28., 52., 76.,
      16., 40., 64., 88., 5.,  29., 53., 77., 17., 41., 65., 89., 6.,  30.,
      54., 78., 18., 42., 66., 90., 7.,  31., 55., 79., 19., 43., 67., 91.,
      8.,  32., 56., 80., 20., 44., 68., 92., 9.,  33., 57., 81., 21., 45.,
      69., 93., 10., 34., 58., 82., 22., 46., 70., 94., 11., 35., 59., 83.,
      23., 47., 71., 95., 12., 36., 60., 84., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 2, 4, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 28., 31., 34., 37., 40.,
      43., 46., 49., 52., 55., 58., 61., 64., 67., 70., 73., 76., 79., 82.,
      85., 88., 91., 94., 2.,  5.,  8.,  11., 14., 17., 20., 23., 26., 29.,
      32., 35., 38., 41., 44., 47., 50., 53., 56., 59., 62., 65., 68., 71.,
      74., 77., 80., 83., 86., 89., 92., 95., 3.,  6.,  9.,  12., 15., 18.,
      21., 24., 27., 30., 33., 36., 39., 42., 45., 48., 51., 54., 57., 60.,
      63., 66., 69., 72., 75., 78., 81., 84., 87., 90., 93., 96.};
  const std::vector<int> sizes = {4, 2, 4, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 4.,  16., 7.,  19., 10., 22., 25., 37., 28., 40., 31., 43.,
      34., 46., 49., 61., 52., 64., 55., 67., 58., 70., 73., 85., 76., 88.,
      79., 91., 82., 94., 2.,  14., 5.,  17., 8.,  20., 11., 23., 26., 38.,
      29., 41., 32., 44., 35., 47., 50., 62., 53., 65., 56., 68., 59., 71.,
      74., 86., 77., 89., 80., 92., 83., 95., 3.,  15., 6.,  18., 9.,  21.,
      12., 24., 27., 39., 30., 42., 33., 45., 36., 48., 51., 63., 54., 66.,
      57., 69., 60., 72., 75., 87., 78., 90., 81., 93., 84., 96.};
  const std::vector<int> sizes = {4, 2, 4, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 25., 28., 31., 34., 49., 52., 55., 58., 73., 76.,
      79., 82., 13., 16., 19., 22., 37., 40., 43., 46., 61., 64., 67., 70.,
      85., 88., 91., 94., 2.,  5.,  8.,  11., 26., 29., 32., 35., 50., 53.,
      56., 59., 74., 77., 80., 83., 14., 17., 20., 23., 38., 41., 44., 47.,
      62., 65., 68., 71., 86., 89., 92., 95., 3.,  6.,  9.,  12., 27., 30.,
      33., 36., 51., 54., 57., 60., 75., 78., 81., 84., 15., 18., 21., 24.,
      39., 42., 45., 48., 63., 66., 69., 72., 87., 90., 93., 96.};
  const std::vector<int> sizes = {4, 2, 4, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 4.,  28., 52., 76., 7.,  31., 55., 79., 10., 34.,
      58., 82., 13., 37., 61., 85., 16., 40., 64., 88., 19., 43., 67., 91.,
      22., 46., 70., 94., 2.,  26., 50., 74., 5.,  29., 53., 77., 8.,  32.,
      56., 80., 11., 35., 59., 83., 14., 38., 62., 86., 17., 41., 65., 89.,
      20., 44., 68., 92., 23., 47., 71., 95., 3.,  27., 51., 75., 6.,  30.,
      54., 78., 9.,  33., 57., 81., 12., 36., 60., 84., 15., 39., 63., 87.,
      18., 42., 66., 90., 21., 45., 69., 93., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 2, 4, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 49., 61., 73., 85., 4.,  16., 28., 40., 52., 64.,
      76., 88., 7.,  19., 31., 43., 55., 67., 79., 91., 10., 22., 34., 46.,
      58., 70., 82., 94., 2.,  14., 26., 38., 50., 62., 74., 86., 5.,  17.,
      29., 41., 53., 65., 77., 89., 8.,  20., 32., 44., 56., 68., 80., 92.,
      11., 23., 35., 47., 59., 71., 83., 95., 3.,  15., 27., 39., 51., 63.,
      75., 87., 6.,  18., 30., 42., 54., 66., 78., 90., 9.,  21., 33., 45.,
      57., 69., 81., 93., 12., 24., 36., 48., 60., 72., 84., 96.};
  const std::vector<int> sizes = {4, 2, 4, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 13., 37., 61., 85., 4.,  28., 52., 76., 16., 40.,
      64., 88., 7.,  31., 55., 79., 19., 43., 67., 91., 10., 34., 58., 82.,
      22., 46., 70., 94., 2.,  26., 50., 74., 14., 38., 62., 86., 5.,  29.,
      53., 77., 17., 41., 65., 89., 8.,  32., 56., 80., 20., 44., 68., 92.,
      11., 35., 59., 83., 23., 47., 71., 95., 3.,  27., 51., 75., 15., 39.,
      63., 87., 6.,  30., 54., 78., 18., 42., 66., 90., 9.,  33., 57., 81.,
      21., 45., 69., 93., 12., 36., 60., 84., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 2, 4, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13.,  14.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 105., 106., 107., 108.,
      109., 110., 111., 112., 113., 114., 115., 116., 117., 118., 119., 120.,
      121., 122., 123., 124., 125., 126., 127., 128.};
  const std::vector<int> sizes = {4, 2, 4, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  2.,   6.,   10.,  14.,  3.,   7.,   11.,  15.,
      4.,   8.,   12.,  16.,  17.,  21.,  25.,  29.,  18.,  22.,  26.,  30.,
      19.,  23.,  27.,  31.,  20.,  24.,  28.,  32.,  33.,  37.,  41.,  45.,
      34.,  38.,  42.,  46.,  35.,  39.,  43.,  47.,  36.,  40.,  44.,  48.,
      49.,  53.,  57.,  61.,  50.,  54.,  58.,  62.,  51.,  55.,  59.,  63.,
      52.,  56.,  60.,  64.,  65.,  69.,  73.,  77.,  66.,  70.,  74.,  78.,
      67.,  71.,  75.,  79.,  68.,  72.,  76.,  80.,  81.,  85.,  89.,  93.,
      82.,  86.,  90.,  94.,  83.,  87.,  91.,  95.,  84.,  88.,  92.,  96.,
      97.,  101., 105., 109., 98.,  102., 106., 110., 99.,  103., 107., 111.,
      100., 104., 108., 112., 113., 117., 121., 125., 114., 118., 122., 126.,
      115., 119., 123., 127., 116., 120., 124., 128.};
  const std::vector<int> sizes = {4, 2, 4, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   17.,  18.,  19.,  20.,  5.,   6.,   7.,   8.,
      21.,  22.,  23.,  24.,  9.,   10.,  11.,  12.,  25.,  26.,  27.,  28.,
      13.,  14.,  15.,  16.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      49.,  50.,  51.,  52.,  37.,  38.,  39.,  40.,  53.,  54.,  55.,  56.,
      41.,  42.,  43.,  44.,  57.,  58.,  59.,  60.,  45.,  46.,  47.,  48.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  81.,  82.,  83.,  84.,
      69.,  70.,  71.,  72.,  85.,  86.,  87.,  88.,  73.,  74.,  75.,  76.,
      89.,  90.,  91.,  92.,  77.,  78.,  79.,  80.,  93.,  94.,  95.,  96.,
      97.,  98.,  99.,  100., 113., 114., 115., 116., 101., 102., 103., 104.,
      117., 118., 119., 120., 105., 106., 107., 108., 121., 122., 123., 124.,
      109., 110., 111., 112., 125., 126., 127., 128.};
  const std::vector<int> sizes = {4, 2, 4, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   17.,  2.,   18.,  3.,   19.,  4.,   20.,  5.,   21.,  6.,   22.,
      7.,   23.,  8.,   24.,  9.,   25.,  10.,  26.,  11.,  27.,  12.,  28.,
      13.,  29.,  14.,  30.,  15.,  31.,  16.,  32.,  33.,  49.,  34.,  50.,
      35.,  51.,  36.,  52.,  37.,  53.,  38.,  54.,  39.,  55.,  40.,  56.,
      41.,  57.,  42.,  58.,  43.,  59.,  44.,  60.,  45.,  61.,  46.,  62.,
      47.,  63.,  48.,  64.,  65.,  81.,  66.,  82.,  67.,  83.,  68.,  84.,
      69.,  85.,  70.,  86.,  71.,  87.,  72.,  88.,  73.,  89.,  74.,  90.,
      75.,  91.,  76.,  92.,  77.,  93.,  78.,  94.,  79.,  95.,  80.,  96.,
      97.,  113., 98.,  114., 99.,  115., 100., 116., 101., 117., 102., 118.,
      103., 119., 104., 120., 105., 121., 106., 122., 107., 123., 108., 124.,
      109., 125., 110., 126., 111., 127., 112., 128.};
  const std::vector<int> sizes = {4, 2, 4, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  17.,  21.,  25.,  29.,  2.,   6.,   10.,  14.,
      18.,  22.,  26.,  30.,  3.,   7.,   11.,  15.,  19.,  23.,  27.,  31.,
      4.,   8.,   12.,  16.,  20.,  24.,  28.,  32.,  33.,  37.,  41.,  45.,
      49.,  53.,  57.,  61.,  34.,  38.,  42.,  46.,  50.,  54.,  58.,  62.,
      35.,  39.,  43.,  47.,  51.,  55.,  59.,  63.,  36.,  40.,  44.,  48.,
      52.,  56.,  60.,  64.,  65.,  69.,  73.,  77.,  81.,  85.,  89.,  93.,
      66.,  70.,  74.,  78.,  82.,  86.,  90.,  94.,  67.,  71.,  75.,  79.,
      83.,  87.,  91.,  95.,  68.,  72.,  76.,  80.,  84.,  88.,  92.,  96.,
      97.,  101., 105., 109., 113., 117., 121., 125., 98.,  102., 106., 110.,
      114., 118., 122., 126., 99.,  103., 107., 111., 115., 119., 123., 127.,
      100., 104., 108., 112., 116., 120., 124., 128.};
  const std::vector<int> sizes = {4, 2, 4, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   17.,  5.,   21.,  9.,   25.,  13.,  29.,  2.,   18.,  6.,   22.,
      10.,  26.,  14.,  30.,  3.,   19.,  7.,   23.,  11.,  27.,  15.,  31.,
      4.,   20.,  8.,   24.,  12.,  28.,  16.,  32.,  33.,  49.,  37.,  53.,
      41.,  57.,  45.,  61.,  34.,  50.,  38.,  54.,  42.,  58.,  46.,  62.,
      35.,  51.,  39.,  55.,  43.,  59.,  47.,  63.,  36.,  52.,  40.,  56.,
      44.,  60.,  48.,  64.,  65.,  81.,  69.,  85.,  73.,  89.,  77.,  93.,
      66.,  82.,  70.,  86.,  74.,  90.,  78.,  94.,  67.,  83.,  71.,  87.,
      75.,  91.,  79.,  95.,  68.,  84.,  72.,  88.,  76.,  92.,  80.,  96.,
      97.,  113., 101., 117., 105., 121., 109., 125., 98.,  114., 102., 118.,
      106., 122., 110., 126., 99.,  115., 103., 119., 107., 123., 111., 127.,
      100., 116., 104., 120., 108., 124., 112., 128.};
  const std::vector<int> sizes = {4, 2, 4, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13.,  14.,  15.,  16.,  33.,  34.,  35.,  36.,  37.,  38.,  39.,  40.,
      41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,  65.,  66.,  67.,  68.,
      69.,  70.,  71.,  72.,  73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 105., 106., 107., 108.,
      109., 110., 111., 112., 17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  49.,  50.,  51.,  52.,
      53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,  61.,  62.,  63.,  64.,
      81.,  82.,  83.,  84.,  85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,
      93.,  94.,  95.,  96.,  113., 114., 115., 116., 117., 118., 119., 120.,
      121., 122., 123., 124., 125., 126., 127., 128.};
  const std::vector<int> sizes = {4, 2, 4, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  2.,   6.,   10.,  14.,  3.,   7.,   11.,  15.,
      4.,   8.,   12.,  16.,  33.,  37.,  41.,  45.,  34.,  38.,  42.,  46.,
      35.,  39.,  43.,  47.,  36.,  40.,  44.,  48.,  65.,  69.,  73.,  77.,
      66.,  70.,  74.,  78.,  67.,  71.,  75.,  79.,  68.,  72.,  76.,  80.,
      97.,  101., 105., 109., 98.,  102., 106., 110., 99.,  103., 107., 111.,
      100., 104., 108., 112., 17.,  21.,  25.,  29.,  18.,  22.,  26.,  30.,
      19.,  23.,  27.,  31.,  20.,  24.,  28.,  32.,  49.,  53.,  57.,  61.,
      50.,  54.,  58.,  62.,  51.,  55.,  59.,  63.,  52.,  56.,  60.,  64.,
      81.,  85.,  89.,  93.,  82.,  86.,  90.,  94.,  83.,  87.,  91.,  95.,
      84.,  88.,  92.,  96.,  113., 117., 121., 125., 114., 118., 122., 126.,
      115., 119., 123., 127., 116., 120., 124., 128.};
  const std::vector<int> sizes = {4, 2, 4, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   33.,  34.,  35.,  36.,  65.,  66.,  67.,  68.,
      97.,  98.,  99.,  100., 5.,   6.,   7.,   8.,   37.,  38.,  39.,  40.,
      69.,  70.,  71.,  72.,  101., 102., 103., 104., 9.,   10.,  11.,  12.,
      41.,  42.,  43.,  44.,  73.,  74.,  75.,  76.,  105., 106., 107., 108.,
      13.,  14.,  15.,  16.,  45.,  46.,  47.,  48.,  77.,  78.,  79.,  80.,
      109., 110., 111., 112., 17.,  18.,  19.,  20.,  49.,  50.,  51.,  52.,
      81.,  82.,  83.,  84.,  113., 114., 115., 116., 21.,  22.,  23.,  24.,
      53.,  54.,  55.,  56.,  85.,  86.,  87.,  88.,  117., 118., 119., 120.,
      25.,  26.,  27.,  28.,  57.,  58.,  59.,  60.,  89.,  90.,  91.,  92.,
      121., 122., 123., 124., 29.,  30.,  31.,  32.,  61.,  62.,  63.,  64.,
      93.,  94.,  95.,  96.,  125., 126., 127., 128.};
  const std::vector<int> sizes = {4, 2, 4, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 97.,  2.,  34., 66., 98.,  3.,  35., 67., 99.,
      4.,  36., 68., 100., 5.,  37., 69., 101., 6.,  38., 70., 102.,
      7.,  39., 71., 103., 8.,  40., 72., 104., 9.,  41., 73., 105.,
      10., 42., 74., 106., 11., 43., 75., 107., 12., 44., 76., 108.,
      13., 45., 77., 109., 14., 46., 78., 110., 15., 47., 79., 111.,
      16., 48., 80., 112., 17., 49., 81., 113., 18., 50., 82., 114.,
      19., 51., 83., 115., 20., 52., 84., 116., 21., 53., 85., 117.,
      22., 54., 86., 118., 23., 55., 87., 119., 24., 56., 88., 120.,
      25., 57., 89., 121., 26., 58., 90., 122., 27., 59., 91., 123.,
      28., 60., 92., 124., 29., 61., 93., 125., 30., 62., 94., 126.,
      31., 63., 95., 127., 32., 64., 96., 128.};
  const std::vector<int> sizes = {4, 2, 4, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  33.,  37.,  41.,  45.,  65.,  69.,  73.,  77.,
      97.,  101., 105., 109., 2.,   6.,   10.,  14.,  34.,  38.,  42.,  46.,
      66.,  70.,  74.,  78.,  98.,  102., 106., 110., 3.,   7.,   11.,  15.,
      35.,  39.,  43.,  47.,  67.,  71.,  75.,  79.,  99.,  103., 107., 111.,
      4.,   8.,   12.,  16.,  36.,  40.,  44.,  48.,  68.,  72.,  76.,  80.,
      100., 104., 108., 112., 17.,  21.,  25.,  29.,  49.,  53.,  57.,  61.,
      81.,  85.,  89.,  93.,  113., 117., 121., 125., 18.,  22.,  26.,  30.,
      50.,  54.,  58.,  62.,  82.,  86.,  90.,  94.,  114., 118., 122., 126.,
      19.,  23.,  27.,  31.,  51.,  55.,  59.,  63.,  83.,  87.,  91.,  95.,
      115., 119., 123., 127., 20.,  24.,  28.,  32.,  52.,  56.,  60.,  64.,
      84.,  88.,  92.,  96.,  116., 120., 124., 128.};
  const std::vector<int> sizes = {4, 2, 4, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 97.,  5.,  37., 69., 101., 9.,  41., 73., 105.,
      13., 45., 77., 109., 2.,  34., 66., 98.,  6.,  38., 70., 102.,
      10., 42., 74., 106., 14., 46., 78., 110., 3.,  35., 67., 99.,
      7.,  39., 71., 103., 11., 43., 75., 107., 15., 47., 79., 111.,
      4.,  36., 68., 100., 8.,  40., 72., 104., 12., 44., 76., 108.,
      16., 48., 80., 112., 17., 49., 81., 113., 21., 53., 85., 117.,
      25., 57., 89., 121., 29., 61., 93., 125., 18., 50., 82., 114.,
      22., 54., 86., 118., 26., 58., 90., 122., 30., 62., 94., 126.,
      19., 51., 83., 115., 23., 55., 87., 119., 27., 59., 91., 123.,
      31., 63., 95., 127., 20., 52., 84., 116., 24., 56., 88., 120.,
      28., 60., 92., 124., 32., 64., 96., 128.};
  const std::vector<int> sizes = {4, 2, 4, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   17.,  18.,  19.,  20.,  33.,  34.,  35.,  36.,
      49.,  50.,  51.,  52.,  65.,  66.,  67.,  68.,  81.,  82.,  83.,  84.,
      97.,  98.,  99.,  100., 113., 114., 115., 116., 5.,   6.,   7.,   8.,
      21.,  22.,  23.,  24.,  37.,  38.,  39.,  40.,  53.,  54.,  55.,  56.,
      69.,  70.,  71.,  72.,  85.,  86.,  87.,  88.,  101., 102., 103., 104.,
      117., 118., 119., 120., 9.,   10.,  11.,  12.,  25.,  26.,  27.,  28.,
      41.,  42.,  43.,  44.,  57.,  58.,  59.,  60.,  73.,  74.,  75.,  76.,
      89.,  90.,  91.,  92.,  105., 106., 107., 108., 121., 122., 123., 124.,
      13.,  14.,  15.,  16.,  29.,  30.,  31.,  32.,  45.,  46.,  47.,  48.,
      61.,  62.,  63.,  64.,  77.,  78.,  79.,  80.,  93.,  94.,  95.,  96.,
      109., 110., 111., 112., 125., 126., 127., 128.};
  const std::vector<int> sizes = {4, 2, 4, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   17.,  2.,   18.,  3.,   19.,  4.,   20.,  33.,  49.,  34.,  50.,
      35.,  51.,  36.,  52.,  65.,  81.,  66.,  82.,  67.,  83.,  68.,  84.,
      97.,  113., 98.,  114., 99.,  115., 100., 116., 5.,   21.,  6.,   22.,
      7.,   23.,  8.,   24.,  37.,  53.,  38.,  54.,  39.,  55.,  40.,  56.,
      69.,  85.,  70.,  86.,  71.,  87.,  72.,  88.,  101., 117., 102., 118.,
      103., 119., 104., 120., 9.,   25.,  10.,  26.,  11.,  27.,  12.,  28.,
      41.,  57.,  42.,  58.,  43.,  59.,  44.,  60.,  73.,  89.,  74.,  90.,
      75.,  91.,  76.,  92.,  105., 121., 106., 122., 107., 123., 108., 124.,
      13.,  29.,  14.,  30.,  15.,  31.,  16.,  32.,  45.,  61.,  46.,  62.,
      47.,  63.,  48.,  64.,  77.,  93.,  78.,  94.,  79.,  95.,  80.,  96.,
      109., 125., 110., 126., 111., 127., 112., 128.};
  const std::vector<int> sizes = {4, 2, 4, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   33.,  34.,  35.,  36.,  65.,  66.,  67.,  68.,
      97.,  98.,  99.,  100., 17.,  18.,  19.,  20.,  49.,  50.,  51.,  52.,
      81.,  82.,  83.,  84.,  113., 114., 115., 116., 5.,   6.,   7.,   8.,
      37.,  38.,  39.,  40.,  69.,  70.,  71.,  72.,  101., 102., 103., 104.,
      21.,  22.,  23.,  24.,  53.,  54.,  55.,  56.,  85.,  86.,  87.,  88.,
      117., 118., 119., 120., 9.,   10.,  11.,  12.,  41.,  42.,  43.,  44.,
      73.,  74.,  75.,  76.,  105., 106., 107., 108., 25.,  26.,  27.,  28.,
      57.,  58.,  59.,  60.,  89.,  90.,  91.,  92.,  121., 122., 123., 124.,
      13.,  14.,  15.,  16.,  45.,  46.,  47.,  48.,  77.,  78.,  79.,  80.,
      109., 110., 111., 112., 29.,  30.,  31.,  32.,  61.,  62.,  63.,  64.,
      93.,  94.,  95.,  96.,  125., 126., 127., 128.};
  const std::vector<int> sizes = {4, 2, 4, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 97.,  2.,  34., 66., 98.,  3.,  35., 67., 99.,
      4.,  36., 68., 100., 17., 49., 81., 113., 18., 50., 82., 114.,
      19., 51., 83., 115., 20., 52., 84., 116., 5.,  37., 69., 101.,
      6.,  38., 70., 102., 7.,  39., 71., 103., 8.,  40., 72., 104.,
      21., 53., 85., 117., 22., 54., 86., 118., 23., 55., 87., 119.,
      24., 56., 88., 120., 9.,  41., 73., 105., 10., 42., 74., 106.,
      11., 43., 75., 107., 12., 44., 76., 108., 25., 57., 89., 121.,
      26., 58., 90., 122., 27., 59., 91., 123., 28., 60., 92., 124.,
      13., 45., 77., 109., 14., 46., 78., 110., 15., 47., 79., 111.,
      16., 48., 80., 112., 29., 61., 93., 125., 30., 62., 94., 126.,
      31., 63., 95., 127., 32., 64., 96., 128.};
  const std::vector<int> sizes = {4, 2, 4, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33.,  49.,  65., 81., 97.,  113., 2.,  18., 34.,  50.,
      66., 82., 98.,  114., 3.,  19., 35.,  51.,  67., 83., 99.,  115.,
      4.,  20., 36.,  52.,  68., 84., 100., 116., 5.,  21., 37.,  53.,
      69., 85., 101., 117., 6.,  22., 38.,  54.,  70., 86., 102., 118.,
      7.,  23., 39.,  55.,  71., 87., 103., 119., 8.,  24., 40.,  56.,
      72., 88., 104., 120., 9.,  25., 41.,  57.,  73., 89., 105., 121.,
      10., 26., 42.,  58.,  74., 90., 106., 122., 11., 27., 43.,  59.,
      75., 91., 107., 123., 12., 28., 44.,  60.,  76., 92., 108., 124.,
      13., 29., 45.,  61.,  77., 93., 109., 125., 14., 30., 46.,  62.,
      78., 94., 110., 126., 15., 31., 47.,  63.,  79., 95., 111., 127.,
      16., 32., 48.,  64.,  80., 96., 112., 128.};
  const std::vector<int> sizes = {4, 2, 4, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 97.,  17., 49., 81., 113., 2.,  34., 66., 98.,
      18., 50., 82., 114., 3.,  35., 67., 99.,  19., 51., 83., 115.,
      4.,  36., 68., 100., 20., 52., 84., 116., 5.,  37., 69., 101.,
      21., 53., 85., 117., 6.,  38., 70., 102., 22., 54., 86., 118.,
      7.,  39., 71., 103., 23., 55., 87., 119., 8.,  40., 72., 104.,
      24., 56., 88., 120., 9.,  41., 73., 105., 25., 57., 89., 121.,
      10., 42., 74., 106., 26., 58., 90., 122., 11., 43., 75., 107.,
      27., 59., 91., 123., 12., 44., 76., 108., 28., 60., 92., 124.,
      13., 45., 77., 109., 29., 61., 93., 125., 14., 46., 78., 110.,
      30., 62., 94., 126., 15., 47., 79., 111., 31., 63., 95., 127.,
      16., 48., 80., 112., 32., 64., 96., 128.};
  const std::vector<int> sizes = {4, 2, 4, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  17.,  21.,  25.,  29.,  33.,  37.,  41.,  45.,
      49.,  53.,  57.,  61.,  65.,  69.,  73.,  77.,  81.,  85.,  89.,  93.,
      97.,  101., 105., 109., 113., 117., 121., 125., 2.,   6.,   10.,  14.,
      18.,  22.,  26.,  30.,  34.,  38.,  42.,  46.,  50.,  54.,  58.,  62.,
      66.,  70.,  74.,  78.,  82.,  86.,  90.,  94.,  98.,  102., 106., 110.,
      114., 118., 122., 126., 3.,   7.,   11.,  15.,  19.,  23.,  27.,  31.,
      35.,  39.,  43.,  47.,  51.,  55.,  59.,  63.,  67.,  71.,  75.,  79.,
      83.,  87.,  91.,  95.,  99.,  103., 107., 111., 115., 119., 123., 127.,
      4.,   8.,   12.,  16.,  20.,  24.,  28.,  32.,  36.,  40.,  44.,  48.,
      52.,  56.,  60.,  64.,  68.,  72.,  76.,  80.,  84.,  88.,  92.,  96.,
      100., 104., 108., 112., 116., 120., 124., 128.};
  const std::vector<int> sizes = {4, 2, 4, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   17.,  5.,   21.,  9.,   25.,  13.,  29.,  33.,  49.,  37.,  53.,
      41.,  57.,  45.,  61.,  65.,  81.,  69.,  85.,  73.,  89.,  77.,  93.,
      97.,  113., 101., 117., 105., 121., 109., 125., 2.,   18.,  6.,   22.,
      10.,  26.,  14.,  30.,  34.,  50.,  38.,  54.,  42.,  58.,  46.,  62.,
      66.,  82.,  70.,  86.,  74.,  90.,  78.,  94.,  98.,  114., 102., 118.,
      106., 122., 110., 126., 3.,   19.,  7.,   23.,  11.,  27.,  15.,  31.,
      35.,  51.,  39.,  55.,  43.,  59.,  47.,  63.,  67.,  83.,  71.,  87.,
      75.,  91.,  79.,  95.,  99.,  115., 103., 119., 107., 123., 111., 127.,
      4.,   20.,  8.,   24.,  12.,  28.,  16.,  32.,  36.,  52.,  40.,  56.,
      44.,  60.,  48.,  64.,  68.,  84.,  72.,  88.,  76.,  92.,  80.,  96.,
      100., 116., 104., 120., 108., 124., 112., 128.};
  const std::vector<int> sizes = {4, 2, 4, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  33.,  37.,  41.,  45.,  65.,  69.,  73.,  77.,
      97.,  101., 105., 109., 17.,  21.,  25.,  29.,  49.,  53.,  57.,  61.,
      81.,  85.,  89.,  93.,  113., 117., 121., 125., 2.,   6.,   10.,  14.,
      34.,  38.,  42.,  46.,  66.,  70.,  74.,  78.,  98.,  102., 106., 110.,
      18.,  22.,  26.,  30.,  50.,  54.,  58.,  62.,  82.,  86.,  90.,  94.,
      114., 118., 122., 126., 3.,   7.,   11.,  15.,  35.,  39.,  43.,  47.,
      67.,  71.,  75.,  79.,  99.,  103., 107., 111., 19.,  23.,  27.,  31.,
      51.,  55.,  59.,  63.,  83.,  87.,  91.,  95.,  115., 119., 123., 127.,
      4.,   8.,   12.,  16.,  36.,  40.,  44.,  48.,  68.,  72.,  76.,  80.,
      100., 104., 108., 112., 20.,  24.,  28.,  32.,  52.,  56.,  60.,  64.,
      84.,  88.,  92.,  96.,  116., 120., 124., 128.};
  const std::vector<int> sizes = {4, 2, 4, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 97.,  5.,  37., 69., 101., 9.,  41., 73., 105.,
      13., 45., 77., 109., 17., 49., 81., 113., 21., 53., 85., 117.,
      25., 57., 89., 121., 29., 61., 93., 125., 2.,  34., 66., 98.,
      6.,  38., 70., 102., 10., 42., 74., 106., 14., 46., 78., 110.,
      18., 50., 82., 114., 22., 54., 86., 118., 26., 58., 90., 122.,
      30., 62., 94., 126., 3.,  35., 67., 99.,  7.,  39., 71., 103.,
      11., 43., 75., 107., 15., 47., 79., 111., 19., 51., 83., 115.,
      23., 55., 87., 119., 27., 59., 91., 123., 31., 63., 95., 127.,
      4.,  36., 68., 100., 8.,  40., 72., 104., 12., 44., 76., 108.,
      16., 48., 80., 112., 20., 52., 84., 116., 24., 56., 88., 120.,
      28., 60., 92., 124., 32., 64., 96., 128.};
  const std::vector<int> sizes = {4, 2, 4, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33.,  49.,  65., 81., 97.,  113., 5.,  21., 37.,  53.,
      69., 85., 101., 117., 9.,  25., 41.,  57.,  73., 89., 105., 121.,
      13., 29., 45.,  61.,  77., 93., 109., 125., 2.,  18., 34.,  50.,
      66., 82., 98.,  114., 6.,  22., 38.,  54.,  70., 86., 102., 118.,
      10., 26., 42.,  58.,  74., 90., 106., 122., 14., 30., 46.,  62.,
      78., 94., 110., 126., 3.,  19., 35.,  51.,  67., 83., 99.,  115.,
      7.,  23., 39.,  55.,  71., 87., 103., 119., 11., 27., 43.,  59.,
      75., 91., 107., 123., 15., 31., 47.,  63.,  79., 95., 111., 127.,
      4.,  20., 36.,  52.,  68., 84., 100., 116., 8.,  24., 40.,  56.,
      72., 88., 104., 120., 12., 28., 44.,  60.,  76., 92., 108., 124.,
      16., 32., 48.,  64.,  80., 96., 112., 128.};
  const std::vector<int> sizes = {4, 2, 4, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x2x4x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 97.,  17., 49., 81., 113., 5.,  37., 69., 101.,
      21., 53., 85., 117., 9.,  41., 73., 105., 25., 57., 89., 121.,
      13., 45., 77., 109., 29., 61., 93., 125., 2.,  34., 66., 98.,
      18., 50., 82., 114., 6.,  38., 70., 102., 22., 54., 86., 118.,
      10., 42., 74., 106., 26., 58., 90., 122., 14., 46., 78., 110.,
      30., 62., 94., 126., 3.,  35., 67., 99.,  19., 51., 83., 115.,
      7.,  39., 71., 103., 23., 55., 87., 119., 11., 43., 75., 107.,
      27., 59., 91., 123., 15., 47., 79., 111., 31., 63., 95., 127.,
      4.,  36., 68., 100., 20., 52., 84., 116., 8.,  40., 72., 104.,
      24., 56., 88., 120., 12., 44., 76., 108., 28., 60., 92., 124.,
      16., 48., 80., 112., 32., 64., 96., 128.};
  const std::vector<int> sizes = {4, 2, 4, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.,
      25., 26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36.,
      37., 38., 39., 40., 41., 42., 43., 44., 45., 46., 47., 48.};
  const std::vector<int> sizes = {4, 3, 2, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  2.,  4.,  5.,  7.,  6.,  8.,  9.,  11., 10., 12.,
      13., 15., 14., 16., 17., 19., 18., 20., 21., 23., 22., 24.,
      25., 27., 26., 28., 29., 31., 30., 32., 33., 35., 34., 36.,
      37., 39., 38., 40., 41., 43., 42., 44., 45., 47., 46., 48.};
  const std::vector<int> sizes = {4, 3, 2, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  5.,  6.,  9.,  10., 3.,  4.,  7.,  8.,  11., 12.,
      13., 14., 17., 18., 21., 22., 15., 16., 19., 20., 23., 24.,
      25., 26., 29., 30., 33., 34., 27., 28., 31., 32., 35., 36.,
      37., 38., 41., 42., 45., 46., 39., 40., 43., 44., 47., 48.};
  const std::vector<int> sizes = {4, 3, 2, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  2.,  6.,  10., 3.,  7.,  11., 4.,  8.,  12.,
      13., 17., 21., 14., 18., 22., 15., 19., 23., 16., 20., 24.,
      25., 29., 33., 26., 30., 34., 27., 31., 35., 28., 32., 36.,
      37., 41., 45., 38., 42., 46., 39., 43., 47., 40., 44., 48.};
  const std::vector<int> sizes = {4, 3, 2, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 2.,  4.,  6.,  8.,  10., 12.,
      13., 15., 17., 19., 21., 23., 14., 16., 18., 20., 22., 24.,
      25., 27., 29., 31., 33., 35., 26., 28., 30., 32., 34., 36.,
      37., 39., 41., 43., 45., 47., 38., 40., 42., 44., 46., 48.};
  const std::vector<int> sizes = {4, 3, 2, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  3.,  7.,  11., 2.,  6.,  10., 4.,  8.,  12.,
      13., 17., 21., 15., 19., 23., 14., 18., 22., 16., 20., 24.,
      25., 29., 33., 27., 31., 35., 26., 30., 34., 28., 32., 36.,
      37., 41., 45., 39., 43., 47., 38., 42., 46., 40., 44., 48.};
  const std::vector<int> sizes = {4, 3, 2, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  13., 14., 15., 16., 25., 26., 27., 28.,
      37., 38., 39., 40., 5.,  6.,  7.,  8.,  17., 18., 19., 20.,
      29., 30., 31., 32., 41., 42., 43., 44., 9.,  10., 11., 12.,
      21., 22., 23., 24., 33., 34., 35., 36., 45., 46., 47., 48.};
  const std::vector<int> sizes = {4, 3, 2, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  2.,  4.,  13., 15., 14., 16., 25., 27., 26., 28.,
      37., 39., 38., 40., 5.,  7.,  6.,  8.,  17., 19., 18., 20.,
      29., 31., 30., 32., 41., 43., 42., 44., 9.,  11., 10., 12.,
      21., 23., 22., 24., 33., 35., 34., 36., 45., 47., 46., 48.};
  const std::vector<int> sizes = {4, 3, 2, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  13., 14., 25., 26., 37., 38., 3.,  4.,  15., 16.,
      27., 28., 39., 40., 5.,  6.,  17., 18., 29., 30., 41., 42.,
      7.,  8.,  19., 20., 31., 32., 43., 44., 9.,  10., 21., 22.,
      33., 34., 45., 46., 11., 12., 23., 24., 35., 36., 47., 48.};
  const std::vector<int> sizes = {4, 3, 2, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 2.,  14., 26., 38., 3.,  15., 27., 39.,
      4.,  16., 28., 40., 5.,  17., 29., 41., 6.,  18., 30., 42.,
      7.,  19., 31., 43., 8.,  20., 32., 44., 9.,  21., 33., 45.,
      10., 22., 34., 46., 11., 23., 35., 47., 12., 24., 36., 48.};
  const std::vector<int> sizes = {4, 3, 2, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  13., 15., 25., 27., 37., 39., 2.,  4.,  14., 16.,
      26., 28., 38., 40., 5.,  7.,  17., 19., 29., 31., 41., 43.,
      6.,  8.,  18., 20., 30., 32., 42., 44., 9.,  11., 21., 23.,
      33., 35., 45., 47., 10., 12., 22., 24., 34., 36., 46., 48.};
  const std::vector<int> sizes = {4, 3, 2, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 3.,  15., 27., 39., 2.,  14., 26., 38.,
      4.,  16., 28., 40., 5.,  17., 29., 41., 7.,  19., 31., 43.,
      6.,  18., 30., 42., 8.,  20., 32., 44., 9.,  21., 33., 45.,
      11., 23., 35., 47., 10., 22., 34., 46., 12., 24., 36., 48.};
  const std::vector<int> sizes = {4, 3, 2, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  5.,  6.,  9.,  10., 13., 14., 17., 18., 21., 22.,
      25., 26., 29., 30., 33., 34., 37., 38., 41., 42., 45., 46.,
      3.,  4.,  7.,  8.,  11., 12., 15., 16., 19., 20., 23., 24.,
      27., 28., 31., 32., 35., 36., 39., 40., 43., 44., 47., 48.};
  const std::vector<int> sizes = {4, 3, 2, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  2.,  6.,  10., 13., 17., 21., 14., 18., 22.,
      25., 29., 33., 26., 30., 34., 37., 41., 45., 38., 42., 46.,
      3.,  7.,  11., 4.,  8.,  12., 15., 19., 23., 16., 20., 24.,
      27., 31., 35., 28., 32., 36., 39., 43., 47., 40., 44., 48.};
  const std::vector<int> sizes = {4, 3, 2, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  13., 14., 25., 26., 37., 38., 5.,  6.,  17., 18.,
      29., 30., 41., 42., 9.,  10., 21., 22., 33., 34., 45., 46.,
      3.,  4.,  15., 16., 27., 28., 39., 40., 7.,  8.,  19., 20.,
      31., 32., 43., 44., 11., 12., 23., 24., 35., 36., 47., 48.};
  const std::vector<int> sizes = {4, 3, 2, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 13., 25., 37., 2.,  14., 26., 38., 5.,  17., 29., 41.,
      6., 18., 30., 42., 9.,  21., 33., 45., 10., 22., 34., 46.,
      3., 15., 27., 39., 4.,  16., 28., 40., 7.,  19., 31., 43.,
      8., 20., 32., 44., 11., 23., 35., 47., 12., 24., 36., 48.};
  const std::vector<int> sizes = {4, 3, 2, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 5., 9.,  13., 17., 21., 25., 29., 33., 37., 41., 45.,
      2., 6., 10., 14., 18., 22., 26., 30., 34., 38., 42., 46.,
      3., 7., 11., 15., 19., 23., 27., 31., 35., 39., 43., 47.,
      4., 8., 12., 16., 20., 24., 28., 32., 36., 40., 44., 48.};
  const std::vector<int> sizes = {4, 3, 2, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 13., 25., 37., 5., 17., 29., 41., 9.,  21., 33., 45.,
      2., 14., 26., 38., 6., 18., 30., 42., 10., 22., 34., 46.,
      3., 15., 27., 39., 7., 19., 31., 43., 11., 23., 35., 47.,
      4., 16., 28., 40., 8., 20., 32., 44., 12., 24., 36., 48.};
  const std::vector<int> sizes = {4, 3, 2, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23.,
      25., 27., 29., 31., 33., 35., 37., 39., 41., 43., 45., 47.,
      2.,  4.,  6.,  8.,  10., 12., 14., 16., 18., 20., 22., 24.,
      26., 28., 30., 32., 34., 36., 38., 40., 42., 44., 46., 48.};
  const std::vector<int> sizes = {4, 3, 2, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  3.,  7.,  11., 13., 17., 21., 15., 19., 23.,
      25., 29., 33., 27., 31., 35., 37., 41., 45., 39., 43., 47.,
      2.,  6.,  10., 4.,  8.,  12., 14., 18., 22., 16., 20., 24.,
      26., 30., 34., 28., 32., 36., 38., 42., 46., 40., 44., 48.};
  const std::vector<int> sizes = {4, 3, 2, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  13., 15., 25., 27., 37., 39., 5.,  7.,  17., 19.,
      29., 31., 41., 43., 9.,  11., 21., 23., 33., 35., 45., 47.,
      2.,  4.,  14., 16., 26., 28., 38., 40., 6.,  8.,  18., 20.,
      30., 32., 42., 44., 10., 12., 22., 24., 34., 36., 46., 48.};
  const std::vector<int> sizes = {4, 3, 2, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 13., 25., 37., 3.,  15., 27., 39., 5.,  17., 29., 41.,
      7., 19., 31., 43., 9.,  21., 33., 45., 11., 23., 35., 47.,
      2., 14., 26., 38., 4.,  16., 28., 40., 6.,  18., 30., 42.,
      8., 20., 32., 44., 10., 22., 34., 46., 12., 24., 36., 48.};
  const std::vector<int> sizes = {4, 3, 2, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 5., 9.,  13., 17., 21., 25., 29., 33., 37., 41., 45.,
      3., 7., 11., 15., 19., 23., 27., 31., 35., 39., 43., 47.,
      2., 6., 10., 14., 18., 22., 26., 30., 34., 38., 42., 46.,
      4., 8., 12., 16., 20., 24., 28., 32., 36., 40., 44., 48.};
  const std::vector<int> sizes = {4, 3, 2, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 13., 25., 37., 5., 17., 29., 41., 9.,  21., 33., 45.,
      3., 15., 27., 39., 7., 19., 31., 43., 11., 23., 35., 47.,
      2., 14., 26., 38., 6., 18., 30., 42., 10., 22., 34., 46.,
      4., 16., 28., 40., 8., 20., 32., 44., 12., 24., 36., 48.};
  const std::vector<int> sizes = {4, 3, 2, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14., 15.,
      16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 30.,
      31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42., 43., 44., 45.,
      46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56., 57., 58., 59., 60.,
      61., 62., 63., 64., 65., 66., 67., 68., 69., 70., 71., 72.};
  const std::vector<int> sizes = {4, 3, 2, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  2.,  5.,  3.,  6.,  7.,  10., 8.,  11., 9.,  12., 13., 16., 14.,
      17., 15., 18., 19., 22., 20., 23., 21., 24., 25., 28., 26., 29., 27., 30.,
      31., 34., 32., 35., 33., 36., 37., 40., 38., 41., 39., 42., 43., 46., 44.,
      47., 45., 48., 49., 52., 50., 53., 51., 54., 55., 58., 56., 59., 57., 60.,
      61., 64., 62., 65., 63., 66., 67., 70., 68., 71., 69., 72.};
  const std::vector<int> sizes = {4, 3, 2, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  7.,  8.,  9.,  13., 14., 15., 4.,  5.,  6.,  10., 11., 12.,
      16., 17., 18., 19., 20., 21., 25., 26., 27., 31., 32., 33., 22., 23., 24.,
      28., 29., 30., 34., 35., 36., 37., 38., 39., 43., 44., 45., 49., 50., 51.,
      40., 41., 42., 46., 47., 48., 52., 53., 54., 55., 56., 57., 61., 62., 63.,
      67., 68., 69., 58., 59., 60., 64., 65., 66., 70., 71., 72.};
  const std::vector<int> sizes = {4, 3, 2, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 2.,  8.,  14., 3.,  9.,  15., 4.,  10., 16., 5.,  11., 17.,
      6.,  12., 18., 19., 25., 31., 20., 26., 32., 21., 27., 33., 22., 28., 34.,
      23., 29., 35., 24., 30., 36., 37., 43., 49., 38., 44., 50., 39., 45., 51.,
      40., 46., 52., 41., 47., 53., 42., 48., 54., 55., 61., 67., 56., 62., 68.,
      57., 63., 69., 58., 64., 70., 59., 65., 71., 60., 66., 72.};
  const std::vector<int> sizes = {4, 3, 2, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 2.,  5.,  8.,  11., 14., 17., 3.,  6.,  9.,
      12., 15., 18., 19., 22., 25., 28., 31., 34., 20., 23., 26., 29., 32., 35.,
      21., 24., 27., 30., 33., 36., 37., 40., 43., 46., 49., 52., 38., 41., 44.,
      47., 50., 53., 39., 42., 45., 48., 51., 54., 55., 58., 61., 64., 67., 70.,
      56., 59., 62., 65., 68., 71., 57., 60., 63., 66., 69., 72.};
  const std::vector<int> sizes = {4, 3, 2, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 4.,  10., 16., 2.,  8.,  14., 5.,  11., 17., 3.,  9.,  15.,
      6.,  12., 18., 19., 25., 31., 22., 28., 34., 20., 26., 32., 23., 29., 35.,
      21., 27., 33., 24., 30., 36., 37., 43., 49., 40., 46., 52., 38., 44., 50.,
      41., 47., 53., 39., 45., 51., 42., 48., 54., 55., 61., 67., 58., 64., 70.,
      56., 62., 68., 59., 65., 71., 57., 63., 69., 60., 66., 72.};
  const std::vector<int> sizes = {4, 3, 2, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  19., 20., 21., 22., 23., 24., 37., 38., 39.,
      40., 41., 42., 55., 56., 57., 58., 59., 60., 7.,  8.,  9.,  10., 11., 12.,
      25., 26., 27., 28., 29., 30., 43., 44., 45., 46., 47., 48., 61., 62., 63.,
      64., 65., 66., 13., 14., 15., 16., 17., 18., 31., 32., 33., 34., 35., 36.,
      49., 50., 51., 52., 53., 54., 67., 68., 69., 70., 71., 72.};
  const std::vector<int> sizes = {4, 3, 2, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  2.,  5.,  3.,  6.,  19., 22., 20., 23., 21., 24., 37., 40., 38.,
      41., 39., 42., 55., 58., 56., 59., 57., 60., 7.,  10., 8.,  11., 9.,  12.,
      25., 28., 26., 29., 27., 30., 43., 46., 44., 47., 45., 48., 61., 64., 62.,
      65., 63., 66., 13., 16., 14., 17., 15., 18., 31., 34., 32., 35., 33., 36.,
      49., 52., 50., 53., 51., 54., 67., 70., 68., 71., 69., 72.};
  const std::vector<int> sizes = {4, 3, 2, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  19., 20., 21., 37., 38., 39., 55., 56., 57., 4.,  5.,  6.,
      22., 23., 24., 40., 41., 42., 58., 59., 60., 7.,  8.,  9.,  25., 26., 27.,
      43., 44., 45., 61., 62., 63., 10., 11., 12., 28., 29., 30., 46., 47., 48.,
      64., 65., 66., 13., 14., 15., 31., 32., 33., 49., 50., 51., 67., 68., 69.,
      16., 17., 18., 34., 35., 36., 52., 53., 54., 70., 71., 72.};
  const std::vector<int> sizes = {4, 3, 2, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 55., 2.,  20., 38., 56., 3.,  21., 39., 57., 4.,  22., 40.,
      58., 5.,  23., 41., 59., 6.,  24., 42., 60., 7.,  25., 43., 61., 8.,  26.,
      44., 62., 9.,  27., 45., 63., 10., 28., 46., 64., 11., 29., 47., 65., 12.,
      30., 48., 66., 13., 31., 49., 67., 14., 32., 50., 68., 15., 33., 51., 69.,
      16., 34., 52., 70., 17., 35., 53., 71., 18., 36., 54., 72.};
  const std::vector<int> sizes = {4, 3, 2, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  19., 22., 37., 40., 55., 58., 2.,  5.,  20., 23., 38., 41., 56.,
      59., 3.,  6.,  21., 24., 39., 42., 57., 60., 7.,  10., 25., 28., 43., 46.,
      61., 64., 8.,  11., 26., 29., 44., 47., 62., 65., 9.,  12., 27., 30., 45.,
      48., 63., 66., 13., 16., 31., 34., 49., 52., 67., 70., 14., 17., 32., 35.,
      50., 53., 68., 71., 15., 18., 33., 36., 51., 54., 69., 72.};
  const std::vector<int> sizes = {4, 3, 2, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 55., 4.,  22., 40., 58., 2.,  20., 38., 56., 5.,  23., 41.,
      59., 3.,  21., 39., 57., 6.,  24., 42., 60., 7.,  25., 43., 61., 10., 28.,
      46., 64., 8.,  26., 44., 62., 11., 29., 47., 65., 9.,  27., 45., 63., 12.,
      30., 48., 66., 13., 31., 49., 67., 16., 34., 52., 70., 14., 32., 50., 68.,
      17., 35., 53., 71., 15., 33., 51., 69., 18., 36., 54., 72.};
  const std::vector<int> sizes = {4, 3, 2, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  7.,  8.,  9.,  13., 14., 15., 19., 20., 21., 25., 26., 27.,
      31., 32., 33., 37., 38., 39., 43., 44., 45., 49., 50., 51., 55., 56., 57.,
      61., 62., 63., 67., 68., 69., 4.,  5.,  6.,  10., 11., 12., 16., 17., 18.,
      22., 23., 24., 28., 29., 30., 34., 35., 36., 40., 41., 42., 46., 47., 48.,
      52., 53., 54., 58., 59., 60., 64., 65., 66., 70., 71., 72.};
  const std::vector<int> sizes = {4, 3, 2, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 2.,  8.,  14., 3.,  9.,  15., 19., 25., 31., 20., 26., 32.,
      21., 27., 33., 37., 43., 49., 38., 44., 50., 39., 45., 51., 55., 61., 67.,
      56., 62., 68., 57., 63., 69., 4.,  10., 16., 5.,  11., 17., 6.,  12., 18.,
      22., 28., 34., 23., 29., 35., 24., 30., 36., 40., 46., 52., 41., 47., 53.,
      42., 48., 54., 58., 64., 70., 59., 65., 71., 60., 66., 72.};
  const std::vector<int> sizes = {4, 3, 2, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  19., 20., 21., 37., 38., 39., 55., 56., 57., 7.,  8.,  9.,
      25., 26., 27., 43., 44., 45., 61., 62., 63., 13., 14., 15., 31., 32., 33.,
      49., 50., 51., 67., 68., 69., 4.,  5.,  6.,  22., 23., 24., 40., 41., 42.,
      58., 59., 60., 10., 11., 12., 28., 29., 30., 46., 47., 48., 64., 65., 66.,
      16., 17., 18., 34., 35., 36., 52., 53., 54., 70., 71., 72.};
  const std::vector<int> sizes = {4, 3, 2, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 55., 2.,  20., 38., 56., 3.,  21., 39., 57., 7.,  25., 43.,
      61., 8.,  26., 44., 62., 9.,  27., 45., 63., 13., 31., 49., 67., 14., 32.,
      50., 68., 15., 33., 51., 69., 4.,  22., 40., 58., 5.,  23., 41., 59., 6.,
      24., 42., 60., 10., 28., 46., 64., 11., 29., 47., 65., 12., 30., 48., 66.,
      16., 34., 52., 70., 17., 35., 53., 71., 18., 36., 54., 72.};
  const std::vector<int> sizes = {4, 3, 2, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 25., 31., 37., 43., 49., 55., 61., 67., 2.,  8.,  14.,
      20., 26., 32., 38., 44., 50., 56., 62., 68., 3.,  9.,  15., 21., 27., 33.,
      39., 45., 51., 57., 63., 69., 4.,  10., 16., 22., 28., 34., 40., 46., 52.,
      58., 64., 70., 5.,  11., 17., 23., 29., 35., 41., 47., 53., 59., 65., 71.,
      6.,  12., 18., 24., 30., 36., 42., 48., 54., 60., 66., 72.};
  const std::vector<int> sizes = {4, 3, 2, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 55., 7.,  25., 43., 61., 13., 31., 49., 67., 2.,  20., 38.,
      56., 8.,  26., 44., 62., 14., 32., 50., 68., 3.,  21., 39., 57., 9.,  27.,
      45., 63., 15., 33., 51., 69., 4.,  22., 40., 58., 10., 28., 46., 64., 16.,
      34., 52., 70., 5.,  23., 41., 59., 11., 29., 47., 65., 17., 35., 53., 71.,
      6.,  24., 42., 60., 12., 30., 48., 66., 18., 36., 54., 72.};
  const std::vector<int> sizes = {4, 3, 2, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 28., 31., 34., 37., 40., 43.,
      46., 49., 52., 55., 58., 61., 64., 67., 70., 2.,  5.,  8.,  11., 14., 17.,
      20., 23., 26., 29., 32., 35., 38., 41., 44., 47., 50., 53., 56., 59., 62.,
      65., 68., 71., 3.,  6.,  9.,  12., 15., 18., 21., 24., 27., 30., 33., 36.,
      39., 42., 45., 48., 51., 54., 57., 60., 63., 66., 69., 72.};
  const std::vector<int> sizes = {4, 3, 2, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 4.,  10., 16., 19., 25., 31., 22., 28., 34., 37., 43., 49.,
      40., 46., 52., 55., 61., 67., 58., 64., 70., 2.,  8.,  14., 5.,  11., 17.,
      20., 26., 32., 23., 29., 35., 38., 44., 50., 41., 47., 53., 56., 62., 68.,
      59., 65., 71., 3.,  9.,  15., 6.,  12., 18., 21., 27., 33., 24., 30., 36.,
      39., 45., 51., 42., 48., 54., 57., 63., 69., 60., 66., 72.};
  const std::vector<int> sizes = {4, 3, 2, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  19., 22., 37., 40., 55., 58., 7.,  10., 25., 28., 43., 46., 61.,
      64., 13., 16., 31., 34., 49., 52., 67., 70., 2.,  5.,  20., 23., 38., 41.,
      56., 59., 8.,  11., 26., 29., 44., 47., 62., 65., 14., 17., 32., 35., 50.,
      53., 68., 71., 3.,  6.,  21., 24., 39., 42., 57., 60., 9.,  12., 27., 30.,
      45., 48., 63., 66., 15., 18., 33., 36., 51., 54., 69., 72.};
  const std::vector<int> sizes = {4, 3, 2, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 55., 4.,  22., 40., 58., 7.,  25., 43., 61., 10., 28., 46.,
      64., 13., 31., 49., 67., 16., 34., 52., 70., 2.,  20., 38., 56., 5.,  23.,
      41., 59., 8.,  26., 44., 62., 11., 29., 47., 65., 14., 32., 50., 68., 17.,
      35., 53., 71., 3.,  21., 39., 57., 6.,  24., 42., 60., 9.,  27., 45., 63.,
      12., 30., 48., 66., 15., 33., 51., 69., 18., 36., 54., 72.};
  const std::vector<int> sizes = {4, 3, 2, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 25., 31., 37., 43., 49., 55., 61., 67., 4.,  10., 16.,
      22., 28., 34., 40., 46., 52., 58., 64., 70., 2.,  8.,  14., 20., 26., 32.,
      38., 44., 50., 56., 62., 68., 5.,  11., 17., 23., 29., 35., 41., 47., 53.,
      59., 65., 71., 3.,  9.,  15., 21., 27., 33., 39., 45., 51., 57., 63., 69.,
      6.,  12., 18., 24., 30., 36., 42., 48., 54., 60., 66., 72.};
  const std::vector<int> sizes = {4, 3, 2, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 55., 7.,  25., 43., 61., 13., 31., 49., 67., 4.,  22., 40.,
      58., 10., 28., 46., 64., 16., 34., 52., 70., 2.,  20., 38., 56., 8.,  26.,
      44., 62., 14., 32., 50., 68., 5.,  23., 41., 59., 11., 29., 47., 65., 17.,
      35., 53., 71., 3.,  21., 39., 57., 9.,  27., 45., 63., 15., 33., 51., 69.,
      6.,  24., 42., 60., 12., 30., 48., 66., 18., 36., 54., 72.};
  const std::vector<int> sizes = {4, 3, 2, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14.,
      15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28.,
      29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42.,
      43., 44., 45., 46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56.,
      57., 58., 59., 60., 61., 62., 63., 64., 65., 66., 67., 68., 69., 70.,
      71., 72., 73., 74., 75., 76., 77., 78., 79., 80., 81., 82., 83., 84.,
      85., 86., 87., 88., 89., 90., 91., 92., 93., 94., 95., 96.};
  const std::vector<int> sizes = {4, 3, 2, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  2.,  6.,  3.,  7.,  4.,  8.,  9.,  13., 10., 14., 11., 15.,
      12., 16., 17., 21., 18., 22., 19., 23., 20., 24., 25., 29., 26., 30.,
      27., 31., 28., 32., 33., 37., 34., 38., 35., 39., 36., 40., 41., 45.,
      42., 46., 43., 47., 44., 48., 49., 53., 50., 54., 51., 55., 52., 56.,
      57., 61., 58., 62., 59., 63., 60., 64., 65., 69., 66., 70., 67., 71.,
      68., 72., 73., 77., 74., 78., 75., 79., 76., 80., 81., 85., 82., 86.,
      83., 87., 84., 88., 89., 93., 90., 94., 91., 95., 92., 96.};
  const std::vector<int> sizes = {4, 3, 2, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  9.,  10., 11., 12., 17., 18., 19., 20., 5.,  6.,
      7.,  8.,  13., 14., 15., 16., 21., 22., 23., 24., 25., 26., 27., 28.,
      33., 34., 35., 36., 41., 42., 43., 44., 29., 30., 31., 32., 37., 38.,
      39., 40., 45., 46., 47., 48., 49., 50., 51., 52., 57., 58., 59., 60.,
      65., 66., 67., 68., 53., 54., 55., 56., 61., 62., 63., 64., 69., 70.,
      71., 72., 73., 74., 75., 76., 81., 82., 83., 84., 89., 90., 91., 92.,
      77., 78., 79., 80., 85., 86., 87., 88., 93., 94., 95., 96.};
  const std::vector<int> sizes = {4, 3, 2, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 2.,  10., 18., 3.,  11., 19., 4.,  12., 20., 5.,  13.,
      21., 6.,  14., 22., 7.,  15., 23., 8.,  16., 24., 25., 33., 41., 26.,
      34., 42., 27., 35., 43., 28., 36., 44., 29., 37., 45., 30., 38., 46.,
      31., 39., 47., 32., 40., 48., 49., 57., 65., 50., 58., 66., 51., 59.,
      67., 52., 60., 68., 53., 61., 69., 54., 62., 70., 55., 63., 71., 56.,
      64., 72., 73., 81., 89., 74., 82., 90., 75., 83., 91., 76., 84., 92.,
      77., 85., 93., 78., 86., 94., 79., 87., 95., 80., 88., 96.};
  const std::vector<int> sizes = {4, 3, 2, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 2.,  6.,  10., 14., 18., 22., 3.,  7.,
      11., 15., 19., 23., 4.,  8.,  12., 16., 20., 24., 25., 29., 33., 37.,
      41., 45., 26., 30., 34., 38., 42., 46., 27., 31., 35., 39., 43., 47.,
      28., 32., 36., 40., 44., 48., 49., 53., 57., 61., 65., 69., 50., 54.,
      58., 62., 66., 70., 51., 55., 59., 63., 67., 71., 52., 56., 60., 64.,
      68., 72., 73., 77., 81., 85., 89., 93., 74., 78., 82., 86., 90., 94.,
      75., 79., 83., 87., 91., 95., 76., 80., 84., 88., 92., 96.};
  const std::vector<int> sizes = {4, 3, 2, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 5.,  13., 21., 2.,  10., 18., 6.,  14., 22., 3.,  11.,
      19., 7.,  15., 23., 4.,  12., 20., 8.,  16., 24., 25., 33., 41., 29.,
      37., 45., 26., 34., 42., 30., 38., 46., 27., 35., 43., 31., 39., 47.,
      28., 36., 44., 32., 40., 48., 49., 57., 65., 53., 61., 69., 50., 58.,
      66., 54., 62., 70., 51., 59., 67., 55., 63., 71., 52., 60., 68., 56.,
      64., 72., 73., 81., 89., 77., 85., 93., 74., 82., 90., 78., 86., 94.,
      75., 83., 91., 79., 87., 95., 76., 84., 92., 80., 88., 96.};
  const std::vector<int> sizes = {4, 3, 2, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  25., 26., 27., 28., 29., 30.,
      31., 32., 49., 50., 51., 52., 53., 54., 55., 56., 73., 74., 75., 76.,
      77., 78., 79., 80., 9.,  10., 11., 12., 13., 14., 15., 16., 33., 34.,
      35., 36., 37., 38., 39., 40., 57., 58., 59., 60., 61., 62., 63., 64.,
      81., 82., 83., 84., 85., 86., 87., 88., 17., 18., 19., 20., 21., 22.,
      23., 24., 41., 42., 43., 44., 45., 46., 47., 48., 65., 66., 67., 68.,
      69., 70., 71., 72., 89., 90., 91., 92., 93., 94., 95., 96.};
  const std::vector<int> sizes = {4, 3, 2, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  2.,  6.,  3.,  7.,  4.,  8.,  25., 29., 26., 30., 27., 31.,
      28., 32., 49., 53., 50., 54., 51., 55., 52., 56., 73., 77., 74., 78.,
      75., 79., 76., 80., 9.,  13., 10., 14., 11., 15., 12., 16., 33., 37.,
      34., 38., 35., 39., 36., 40., 57., 61., 58., 62., 59., 63., 60., 64.,
      81., 85., 82., 86., 83., 87., 84., 88., 17., 21., 18., 22., 19., 23.,
      20., 24., 41., 45., 42., 46., 43., 47., 44., 48., 65., 69., 66., 70.,
      67., 71., 68., 72., 89., 93., 90., 94., 91., 95., 92., 96.};
  const std::vector<int> sizes = {4, 3, 2, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  25., 26., 27., 28., 49., 50., 51., 52., 73., 74.,
      75., 76., 5.,  6.,  7.,  8.,  29., 30., 31., 32., 53., 54., 55., 56.,
      77., 78., 79., 80., 9.,  10., 11., 12., 33., 34., 35., 36., 57., 58.,
      59., 60., 81., 82., 83., 84., 13., 14., 15., 16., 37., 38., 39., 40.,
      61., 62., 63., 64., 85., 86., 87., 88., 17., 18., 19., 20., 41., 42.,
      43., 44., 65., 66., 67., 68., 89., 90., 91., 92., 21., 22., 23., 24.,
      45., 46., 47., 48., 69., 70., 71., 72., 93., 94., 95., 96.};
  const std::vector<int> sizes = {4, 3, 2, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 2.,  26., 50., 74., 3.,  27., 51., 75., 4.,  28.,
      52., 76., 5.,  29., 53., 77., 6.,  30., 54., 78., 7.,  31., 55., 79.,
      8.,  32., 56., 80., 9.,  33., 57., 81., 10., 34., 58., 82., 11., 35.,
      59., 83., 12., 36., 60., 84., 13., 37., 61., 85., 14., 38., 62., 86.,
      15., 39., 63., 87., 16., 40., 64., 88., 17., 41., 65., 89., 18., 42.,
      66., 90., 19., 43., 67., 91., 20., 44., 68., 92., 21., 45., 69., 93.,
      22., 46., 70., 94., 23., 47., 71., 95., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 3, 2, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  25., 29., 49., 53., 73., 77., 2.,  6.,  26., 30., 50., 54.,
      74., 78., 3.,  7.,  27., 31., 51., 55., 75., 79., 4.,  8.,  28., 32.,
      52., 56., 76., 80., 9.,  13., 33., 37., 57., 61., 81., 85., 10., 14.,
      34., 38., 58., 62., 82., 86., 11., 15., 35., 39., 59., 63., 83., 87.,
      12., 16., 36., 40., 60., 64., 84., 88., 17., 21., 41., 45., 65., 69.,
      89., 93., 18., 22., 42., 46., 66., 70., 90., 94., 19., 23., 43., 47.,
      67., 71., 91., 95., 20., 24., 44., 48., 68., 72., 92., 96.};
  const std::vector<int> sizes = {4, 3, 2, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 5.,  29., 53., 77., 2.,  26., 50., 74., 6.,  30.,
      54., 78., 3.,  27., 51., 75., 7.,  31., 55., 79., 4.,  28., 52., 76.,
      8.,  32., 56., 80., 9.,  33., 57., 81., 13., 37., 61., 85., 10., 34.,
      58., 82., 14., 38., 62., 86., 11., 35., 59., 83., 15., 39., 63., 87.,
      12., 36., 60., 84., 16., 40., 64., 88., 17., 41., 65., 89., 21., 45.,
      69., 93., 18., 42., 66., 90., 22., 46., 70., 94., 19., 43., 67., 91.,
      23., 47., 71., 95., 20., 44., 68., 92., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 3, 2, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  9.,  10., 11., 12., 17., 18., 19., 20., 25., 26.,
      27., 28., 33., 34., 35., 36., 41., 42., 43., 44., 49., 50., 51., 52.,
      57., 58., 59., 60., 65., 66., 67., 68., 73., 74., 75., 76., 81., 82.,
      83., 84., 89., 90., 91., 92., 5.,  6.,  7.,  8.,  13., 14., 15., 16.,
      21., 22., 23., 24., 29., 30., 31., 32., 37., 38., 39., 40., 45., 46.,
      47., 48., 53., 54., 55., 56., 61., 62., 63., 64., 69., 70., 71., 72.,
      77., 78., 79., 80., 85., 86., 87., 88., 93., 94., 95., 96.};
  const std::vector<int> sizes = {4, 3, 2, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 2.,  10., 18., 3.,  11., 19., 4.,  12., 20., 25., 33.,
      41., 26., 34., 42., 27., 35., 43., 28., 36., 44., 49., 57., 65., 50.,
      58., 66., 51., 59., 67., 52., 60., 68., 73., 81., 89., 74., 82., 90.,
      75., 83., 91., 76., 84., 92., 5.,  13., 21., 6.,  14., 22., 7.,  15.,
      23., 8.,  16., 24., 29., 37., 45., 30., 38., 46., 31., 39., 47., 32.,
      40., 48., 53., 61., 69., 54., 62., 70., 55., 63., 71., 56., 64., 72.,
      77., 85., 93., 78., 86., 94., 79., 87., 95., 80., 88., 96.};
  const std::vector<int> sizes = {4, 3, 2, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  25., 26., 27., 28., 49., 50., 51., 52., 73., 74.,
      75., 76., 9.,  10., 11., 12., 33., 34., 35., 36., 57., 58., 59., 60.,
      81., 82., 83., 84., 17., 18., 19., 20., 41., 42., 43., 44., 65., 66.,
      67., 68., 89., 90., 91., 92., 5.,  6.,  7.,  8.,  29., 30., 31., 32.,
      53., 54., 55., 56., 77., 78., 79., 80., 13., 14., 15., 16., 37., 38.,
      39., 40., 61., 62., 63., 64., 85., 86., 87., 88., 21., 22., 23., 24.,
      45., 46., 47., 48., 69., 70., 71., 72., 93., 94., 95., 96.};
  const std::vector<int> sizes = {4, 3, 2, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 2.,  26., 50., 74., 3.,  27., 51., 75., 4.,  28.,
      52., 76., 9.,  33., 57., 81., 10., 34., 58., 82., 11., 35., 59., 83.,
      12., 36., 60., 84., 17., 41., 65., 89., 18., 42., 66., 90., 19., 43.,
      67., 91., 20., 44., 68., 92., 5.,  29., 53., 77., 6.,  30., 54., 78.,
      7.,  31., 55., 79., 8.,  32., 56., 80., 13., 37., 61., 85., 14., 38.,
      62., 86., 15., 39., 63., 87., 16., 40., 64., 88., 21., 45., 69., 93.,
      22., 46., 70., 94., 23., 47., 71., 95., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 3, 2, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 33., 41., 49., 57., 65., 73., 81., 89., 2.,  10.,
      18., 26., 34., 42., 50., 58., 66., 74., 82., 90., 3.,  11., 19., 27.,
      35., 43., 51., 59., 67., 75., 83., 91., 4.,  12., 20., 28., 36., 44.,
      52., 60., 68., 76., 84., 92., 5.,  13., 21., 29., 37., 45., 53., 61.,
      69., 77., 85., 93., 6.,  14., 22., 30., 38., 46., 54., 62., 70., 78.,
      86., 94., 7.,  15., 23., 31., 39., 47., 55., 63., 71., 79., 87., 95.,
      8.,  16., 24., 32., 40., 48., 56., 64., 72., 80., 88., 96.};
  const std::vector<int> sizes = {4, 3, 2, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 9.,  33., 57., 81., 17., 41., 65., 89., 2.,  26.,
      50., 74., 10., 34., 58., 82., 18., 42., 66., 90., 3.,  27., 51., 75.,
      11., 35., 59., 83., 19., 43., 67., 91., 4.,  28., 52., 76., 12., 36.,
      60., 84., 20., 44., 68., 92., 5.,  29., 53., 77., 13., 37., 61., 85.,
      21., 45., 69., 93., 6.,  30., 54., 78., 14., 38., 62., 86., 22., 46.,
      70., 94., 7.,  31., 55., 79., 15., 39., 63., 87., 23., 47., 71., 95.,
      8.,  32., 56., 80., 16., 40., 64., 88., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 3, 2, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 25., 29., 33., 37., 41., 45., 49., 53.,
      57., 61., 65., 69., 73., 77., 81., 85., 89., 93., 2.,  6.,  10., 14.,
      18., 22., 26., 30., 34., 38., 42., 46., 50., 54., 58., 62., 66., 70.,
      74., 78., 82., 86., 90., 94., 3.,  7.,  11., 15., 19., 23., 27., 31.,
      35., 39., 43., 47., 51., 55., 59., 63., 67., 71., 75., 79., 83., 87.,
      91., 95., 4.,  8.,  12., 16., 20., 24., 28., 32., 36., 40., 44., 48.,
      52., 56., 60., 64., 68., 72., 76., 80., 84., 88., 92., 96.};
  const std::vector<int> sizes = {4, 3, 2, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 5.,  13., 21., 25., 33., 41., 29., 37., 45., 49., 57.,
      65., 53., 61., 69., 73., 81., 89., 77., 85., 93., 2.,  10., 18., 6.,
      14., 22., 26., 34., 42., 30., 38., 46., 50., 58., 66., 54., 62., 70.,
      74., 82., 90., 78., 86., 94., 3.,  11., 19., 7.,  15., 23., 27., 35.,
      43., 31., 39., 47., 51., 59., 67., 55., 63., 71., 75., 83., 91., 79.,
      87., 95., 4.,  12., 20., 8.,  16., 24., 28., 36., 44., 32., 40., 48.,
      52., 60., 68., 56., 64., 72., 76., 84., 92., 80., 88., 96.};
  const std::vector<int> sizes = {4, 3, 2, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  25., 29., 49., 53., 73., 77., 9.,  13., 33., 37., 57., 61.,
      81., 85., 17., 21., 41., 45., 65., 69., 89., 93., 2.,  6.,  26., 30.,
      50., 54., 74., 78., 10., 14., 34., 38., 58., 62., 82., 86., 18., 22.,
      42., 46., 66., 70., 90., 94., 3.,  7.,  27., 31., 51., 55., 75., 79.,
      11., 15., 35., 39., 59., 63., 83., 87., 19., 23., 43., 47., 67., 71.,
      91., 95., 4.,  8.,  28., 32., 52., 56., 76., 80., 12., 16., 36., 40.,
      60., 64., 84., 88., 20., 24., 44., 48., 68., 72., 92., 96.};
  const std::vector<int> sizes = {4, 3, 2, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 5.,  29., 53., 77., 9.,  33., 57., 81., 13., 37.,
      61., 85., 17., 41., 65., 89., 21., 45., 69., 93., 2.,  26., 50., 74.,
      6.,  30., 54., 78., 10., 34., 58., 82., 14., 38., 62., 86., 18., 42.,
      66., 90., 22., 46., 70., 94., 3.,  27., 51., 75., 7.,  31., 55., 79.,
      11., 35., 59., 83., 15., 39., 63., 87., 19., 43., 67., 91., 23., 47.,
      71., 95., 4.,  28., 52., 76., 8.,  32., 56., 80., 12., 36., 60., 84.,
      16., 40., 64., 88., 20., 44., 68., 92., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 3, 2, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 33., 41., 49., 57., 65., 73., 81., 89., 5.,  13.,
      21., 29., 37., 45., 53., 61., 69., 77., 85., 93., 2.,  10., 18., 26.,
      34., 42., 50., 58., 66., 74., 82., 90., 6.,  14., 22., 30., 38., 46.,
      54., 62., 70., 78., 86., 94., 3.,  11., 19., 27., 35., 43., 51., 59.,
      67., 75., 83., 91., 7.,  15., 23., 31., 39., 47., 55., 63., 71., 79.,
      87., 95., 4.,  12., 20., 28., 36., 44., 52., 60., 68., 76., 84., 92.,
      8.,  16., 24., 32., 40., 48., 56., 64., 72., 80., 88., 96.};
  const std::vector<int> sizes = {4, 3, 2, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x2x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 9.,  33., 57., 81., 17., 41., 65., 89., 5.,  29.,
      53., 77., 13., 37., 61., 85., 21., 45., 69., 93., 2.,  26., 50., 74.,
      10., 34., 58., 82., 18., 42., 66., 90., 6.,  30., 54., 78., 14., 38.,
      62., 86., 22., 46., 70., 94., 3.,  27., 51., 75., 11., 35., 59., 83.,
      19., 43., 67., 91., 7.,  31., 55., 79., 15., 39., 63., 87., 23., 47.,
      71., 95., 4.,  28., 52., 76., 12., 36., 60., 84., 20., 44., 68., 92.,
      8.,  32., 56., 80., 16., 40., 64., 88., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 3, 2, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14., 15.,
      16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 30.,
      31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42., 43., 44., 45.,
      46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56., 57., 58., 59., 60.,
      61., 62., 63., 64., 65., 66., 67., 68., 69., 70., 71., 72.};
  const std::vector<int> sizes = {4, 3, 3, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  2.,  4.,  6.,  7.,  9.,  11., 8.,  10., 12., 13., 15., 17.,
      14., 16., 18., 19., 21., 23., 20., 22., 24., 25., 27., 29., 26., 28., 30.,
      31., 33., 35., 32., 34., 36., 37., 39., 41., 38., 40., 42., 43., 45., 47.,
      44., 46., 48., 49., 51., 53., 50., 52., 54., 55., 57., 59., 56., 58., 60.,
      61., 63., 65., 62., 64., 66., 67., 69., 71., 68., 70., 72.};
  const std::vector<int> sizes = {4, 3, 3, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  7.,  8.,  13., 14., 3.,  4.,  9.,  10., 15., 16., 5.,  6.,  11.,
      12., 17., 18., 19., 20., 25., 26., 31., 32., 21., 22., 27., 28., 33., 34.,
      23., 24., 29., 30., 35., 36., 37., 38., 43., 44., 49., 50., 39., 40., 45.,
      46., 51., 52., 41., 42., 47., 48., 53., 54., 55., 56., 61., 62., 67., 68.,
      57., 58., 63., 64., 69., 70., 59., 60., 65., 66., 71., 72.};
  const std::vector<int> sizes = {4, 3, 3, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 2.,  8.,  14., 3.,  9.,  15., 4.,  10., 16., 5.,  11., 17.,
      6.,  12., 18., 19., 25., 31., 20., 26., 32., 21., 27., 33., 22., 28., 34.,
      23., 29., 35., 24., 30., 36., 37., 43., 49., 38., 44., 50., 39., 45., 51.,
      40., 46., 52., 41., 47., 53., 42., 48., 54., 55., 61., 67., 56., 62., 68.,
      57., 63., 69., 58., 64., 70., 59., 65., 71., 60., 66., 72.};
  const std::vector<int> sizes = {4, 3, 3, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 2.,  4.,  6.,  8.,  10., 12.,
      14., 16., 18., 19., 21., 23., 25., 27., 29., 31., 33., 35., 20., 22., 24.,
      26., 28., 30., 32., 34., 36., 37., 39., 41., 43., 45., 47., 49., 51., 53.,
      38., 40., 42., 44., 46., 48., 50., 52., 54., 55., 57., 59., 61., 63., 65.,
      67., 69., 71., 56., 58., 60., 62., 64., 66., 68., 70., 72.};
  const std::vector<int> sizes = {4, 3, 3, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 3.,  9.,  15., 5.,  11., 17., 2.,  8.,  14., 4.,  10., 16.,
      6.,  12., 18., 19., 25., 31., 21., 27., 33., 23., 29., 35., 20., 26., 32.,
      22., 28., 34., 24., 30., 36., 37., 43., 49., 39., 45., 51., 41., 47., 53.,
      38., 44., 50., 40., 46., 52., 42., 48., 54., 55., 61., 67., 57., 63., 69.,
      59., 65., 71., 56., 62., 68., 58., 64., 70., 60., 66., 72.};
  const std::vector<int> sizes = {4, 3, 3, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  19., 20., 21., 22., 23., 24., 37., 38., 39.,
      40., 41., 42., 55., 56., 57., 58., 59., 60., 7.,  8.,  9.,  10., 11., 12.,
      25., 26., 27., 28., 29., 30., 43., 44., 45., 46., 47., 48., 61., 62., 63.,
      64., 65., 66., 13., 14., 15., 16., 17., 18., 31., 32., 33., 34., 35., 36.,
      49., 50., 51., 52., 53., 54., 67., 68., 69., 70., 71., 72.};
  const std::vector<int> sizes = {4, 3, 3, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  2.,  4.,  6.,  19., 21., 23., 20., 22., 24., 37., 39., 41.,
      38., 40., 42., 55., 57., 59., 56., 58., 60., 7.,  9.,  11., 8.,  10., 12.,
      25., 27., 29., 26., 28., 30., 43., 45., 47., 44., 46., 48., 61., 63., 65.,
      62., 64., 66., 13., 15., 17., 14., 16., 18., 31., 33., 35., 32., 34., 36.,
      49., 51., 53., 50., 52., 54., 67., 69., 71., 68., 70., 72.};
  const std::vector<int> sizes = {4, 3, 3, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  19., 20., 37., 38., 55., 56., 3.,  4.,  21., 22., 39., 40., 57.,
      58., 5.,  6.,  23., 24., 41., 42., 59., 60., 7.,  8.,  25., 26., 43., 44.,
      61., 62., 9.,  10., 27., 28., 45., 46., 63., 64., 11., 12., 29., 30., 47.,
      48., 65., 66., 13., 14., 31., 32., 49., 50., 67., 68., 15., 16., 33., 34.,
      51., 52., 69., 70., 17., 18., 35., 36., 53., 54., 71., 72.};
  const std::vector<int> sizes = {4, 3, 3, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 55., 2.,  20., 38., 56., 3.,  21., 39., 57., 4.,  22., 40.,
      58., 5.,  23., 41., 59., 6.,  24., 42., 60., 7.,  25., 43., 61., 8.,  26.,
      44., 62., 9.,  27., 45., 63., 10., 28., 46., 64., 11., 29., 47., 65., 12.,
      30., 48., 66., 13., 31., 49., 67., 14., 32., 50., 68., 15., 33., 51., 69.,
      16., 34., 52., 70., 17., 35., 53., 71., 18., 36., 54., 72.};
  const std::vector<int> sizes = {4, 3, 3, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  19., 21., 23., 37., 39., 41., 55., 57., 59., 2.,  4.,  6.,
      20., 22., 24., 38., 40., 42., 56., 58., 60., 7.,  9.,  11., 25., 27., 29.,
      43., 45., 47., 61., 63., 65., 8.,  10., 12., 26., 28., 30., 44., 46., 48.,
      62., 64., 66., 13., 15., 17., 31., 33., 35., 49., 51., 53., 67., 69., 71.,
      14., 16., 18., 32., 34., 36., 50., 52., 54., 68., 70., 72.};
  const std::vector<int> sizes = {4, 3, 3, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 55., 3.,  21., 39., 57., 5.,  23., 41., 59., 2.,  20., 38.,
      56., 4.,  22., 40., 58., 6.,  24., 42., 60., 7.,  25., 43., 61., 9.,  27.,
      45., 63., 11., 29., 47., 65., 8.,  26., 44., 62., 10., 28., 46., 64., 12.,
      30., 48., 66., 13., 31., 49., 67., 15., 33., 51., 69., 17., 35., 53., 71.,
      14., 32., 50., 68., 16., 34., 52., 70., 18., 36., 54., 72.};
  const std::vector<int> sizes = {4, 3, 3, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  7.,  8.,  13., 14., 19., 20., 25., 26., 31., 32., 37., 38., 43.,
      44., 49., 50., 55., 56., 61., 62., 67., 68., 3.,  4.,  9.,  10., 15., 16.,
      21., 22., 27., 28., 33., 34., 39., 40., 45., 46., 51., 52., 57., 58., 63.,
      64., 69., 70., 5.,  6.,  11., 12., 17., 18., 23., 24., 29., 30., 35., 36.,
      41., 42., 47., 48., 53., 54., 59., 60., 65., 66., 71., 72.};
  const std::vector<int> sizes = {4, 3, 3, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 2.,  8.,  14., 19., 25., 31., 20., 26., 32., 37., 43., 49.,
      38., 44., 50., 55., 61., 67., 56., 62., 68., 3.,  9.,  15., 4.,  10., 16.,
      21., 27., 33., 22., 28., 34., 39., 45., 51., 40., 46., 52., 57., 63., 69.,
      58., 64., 70., 5.,  11., 17., 6.,  12., 18., 23., 29., 35., 24., 30., 36.,
      41., 47., 53., 42., 48., 54., 59., 65., 71., 60., 66., 72.};
  const std::vector<int> sizes = {4, 3, 3, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  19., 20., 37., 38., 55., 56., 7.,  8.,  25., 26., 43., 44., 61.,
      62., 13., 14., 31., 32., 49., 50., 67., 68., 3.,  4.,  21., 22., 39., 40.,
      57., 58., 9.,  10., 27., 28., 45., 46., 63., 64., 15., 16., 33., 34., 51.,
      52., 69., 70., 5.,  6.,  23., 24., 41., 42., 59., 60., 11., 12., 29., 30.,
      47., 48., 65., 66., 17., 18., 35., 36., 53., 54., 71., 72.};
  const std::vector<int> sizes = {4, 3, 3, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 55., 2.,  20., 38., 56., 7.,  25., 43., 61., 8.,  26., 44.,
      62., 13., 31., 49., 67., 14., 32., 50., 68., 3.,  21., 39., 57., 4.,  22.,
      40., 58., 9.,  27., 45., 63., 10., 28., 46., 64., 15., 33., 51., 69., 16.,
      34., 52., 70., 5.,  23., 41., 59., 6.,  24., 42., 60., 11., 29., 47., 65.,
      12., 30., 48., 66., 17., 35., 53., 71., 18., 36., 54., 72.};
  const std::vector<int> sizes = {4, 3, 3, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 25., 31., 37., 43., 49., 55., 61., 67., 2.,  8.,  14.,
      20., 26., 32., 38., 44., 50., 56., 62., 68., 3.,  9.,  15., 21., 27., 33.,
      39., 45., 51., 57., 63., 69., 4.,  10., 16., 22., 28., 34., 40., 46., 52.,
      58., 64., 70., 5.,  11., 17., 23., 29., 35., 41., 47., 53., 59., 65., 71.,
      6.,  12., 18., 24., 30., 36., 42., 48., 54., 60., 66., 72.};
  const std::vector<int> sizes = {4, 3, 3, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 55., 7.,  25., 43., 61., 13., 31., 49., 67., 2.,  20., 38.,
      56., 8.,  26., 44., 62., 14., 32., 50., 68., 3.,  21., 39., 57., 9.,  27.,
      45., 63., 15., 33., 51., 69., 4.,  22., 40., 58., 10., 28., 46., 64., 16.,
      34., 52., 70., 5.,  23., 41., 59., 11., 29., 47., 65., 17., 35., 53., 71.,
      6.,  24., 42., 60., 12., 30., 48., 66., 18., 36., 54., 72.};
  const std::vector<int> sizes = {4, 3, 3, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23., 25., 27., 29.,
      31., 33., 35., 37., 39., 41., 43., 45., 47., 49., 51., 53., 55., 57., 59.,
      61., 63., 65., 67., 69., 71., 2.,  4.,  6.,  8.,  10., 12., 14., 16., 18.,
      20., 22., 24., 26., 28., 30., 32., 34., 36., 38., 40., 42., 44., 46., 48.,
      50., 52., 54., 56., 58., 60., 62., 64., 66., 68., 70., 72.};
  const std::vector<int> sizes = {4, 3, 3, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 3.,  9.,  15., 5.,  11., 17., 19., 25., 31., 21., 27., 33.,
      23., 29., 35., 37., 43., 49., 39., 45., 51., 41., 47., 53., 55., 61., 67.,
      57., 63., 69., 59., 65., 71., 2.,  8.,  14., 4.,  10., 16., 6.,  12., 18.,
      20., 26., 32., 22., 28., 34., 24., 30., 36., 38., 44., 50., 40., 46., 52.,
      42., 48., 54., 56., 62., 68., 58., 64., 70., 60., 66., 72.};
  const std::vector<int> sizes = {4, 3, 3, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  19., 21., 23., 37., 39., 41., 55., 57., 59., 7.,  9.,  11.,
      25., 27., 29., 43., 45., 47., 61., 63., 65., 13., 15., 17., 31., 33., 35.,
      49., 51., 53., 67., 69., 71., 2.,  4.,  6.,  20., 22., 24., 38., 40., 42.,
      56., 58., 60., 8.,  10., 12., 26., 28., 30., 44., 46., 48., 62., 64., 66.,
      14., 16., 18., 32., 34., 36., 50., 52., 54., 68., 70., 72.};
  const std::vector<int> sizes = {4, 3, 3, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 55., 3.,  21., 39., 57., 5.,  23., 41., 59., 7.,  25., 43.,
      61., 9.,  27., 45., 63., 11., 29., 47., 65., 13., 31., 49., 67., 15., 33.,
      51., 69., 17., 35., 53., 71., 2.,  20., 38., 56., 4.,  22., 40., 58., 6.,
      24., 42., 60., 8.,  26., 44., 62., 10., 28., 46., 64., 12., 30., 48., 66.,
      14., 32., 50., 68., 16., 34., 52., 70., 18., 36., 54., 72.};
  const std::vector<int> sizes = {4, 3, 3, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 25., 31., 37., 43., 49., 55., 61., 67., 3.,  9.,  15.,
      21., 27., 33., 39., 45., 51., 57., 63., 69., 5.,  11., 17., 23., 29., 35.,
      41., 47., 53., 59., 65., 71., 2.,  8.,  14., 20., 26., 32., 38., 44., 50.,
      56., 62., 68., 4.,  10., 16., 22., 28., 34., 40., 46., 52., 58., 64., 70.,
      6.,  12., 18., 24., 30., 36., 42., 48., 54., 60., 66., 72.};
  const std::vector<int> sizes = {4, 3, 3, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  19., 37., 55., 7.,  25., 43., 61., 13., 31., 49., 67., 3.,  21., 39.,
      57., 9.,  27., 45., 63., 15., 33., 51., 69., 5.,  23., 41., 59., 11., 29.,
      47., 65., 17., 35., 53., 71., 2.,  20., 38., 56., 8.,  26., 44., 62., 14.,
      32., 50., 68., 4.,  22., 40., 58., 10., 28., 46., 64., 16., 34., 52., 70.,
      6.,  24., 42., 60., 12., 30., 48., 66., 18., 36., 54., 72.};
  const std::vector<int> sizes = {4, 3, 3, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13., 14., 15., 16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      25., 26., 27., 28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      37., 38., 39., 40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      49., 50., 51., 52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      61., 62., 63., 64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      73., 74., 75., 76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      85., 86., 87., 88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      97., 98., 99., 100., 101., 102., 103., 104., 105., 106., 107., 108.};
  const std::vector<int> sizes = {4, 3, 3, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  2.,   5.,   8.,   3.,   6.,   9.,   10.,  13.,  16.,
      11., 14., 17., 12.,  15.,  18.,  19.,  22.,  25.,  20.,  23.,  26.,
      21., 24., 27., 28.,  31.,  34.,  29.,  32.,  35.,  30.,  33.,  36.,
      37., 40., 43., 38.,  41.,  44.,  39.,  42.,  45.,  46.,  49.,  52.,
      47., 50., 53., 48.,  51.,  54.,  55.,  58.,  61.,  56.,  59.,  62.,
      57., 60., 63., 64.,  67.,  70.,  65.,  68.,  71.,  66.,  69.,  72.,
      73., 76., 79., 74.,  77.,  80.,  75.,  78.,  81.,  82.,  85.,  88.,
      83., 86., 89., 84.,  87.,  90.,  91.,  94.,  97.,  92.,  95.,  98.,
      93., 96., 99., 100., 103., 106., 101., 104., 107., 102., 105., 108.};
  const std::vector<int> sizes = {4, 3, 3, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   10.,  11.,  12.,  19., 20., 21., 4.,   5.,   6.,
      13.,  14.,  15.,  22.,  23.,  24.,  7.,  8.,  9.,  16.,  17.,  18.,
      25.,  26.,  27.,  28.,  29.,  30.,  37., 38., 39., 46.,  47.,  48.,
      31.,  32.,  33.,  40.,  41.,  42.,  49., 50., 51., 34.,  35.,  36.,
      43.,  44.,  45.,  52.,  53.,  54.,  55., 56., 57., 64.,  65.,  66.,
      73.,  74.,  75.,  58.,  59.,  60.,  67., 68., 69., 76.,  77.,  78.,
      61.,  62.,  63.,  70.,  71.,  72.,  79., 80., 81., 82.,  83.,  84.,
      91.,  92.,  93.,  100., 101., 102., 85., 86., 87., 94.,  95.,  96.,
      103., 104., 105., 88.,  89.,  90.,  97., 98., 99., 106., 107., 108.};
  const std::vector<int> sizes = {4, 3, 3, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19.,  2.,  11., 20.,  3.,  12., 21.,  4.,  13., 22.,
      5.,  14., 23.,  6.,  15., 24.,  7.,  16., 25.,  8.,  17., 26.,
      9.,  18., 27.,  28., 37., 46.,  29., 38., 47.,  30., 39., 48.,
      31., 40., 49.,  32., 41., 50.,  33., 42., 51.,  34., 43., 52.,
      35., 44., 53.,  36., 45., 54.,  55., 64., 73.,  56., 65., 74.,
      57., 66., 75.,  58., 67., 76.,  59., 68., 77.,  60., 69., 78.,
      61., 70., 79.,  62., 71., 80.,  63., 72., 81.,  82., 91., 100.,
      83., 92., 101., 84., 93., 102., 85., 94., 103., 86., 95., 104.,
      87., 96., 105., 88., 97., 106., 89., 98., 107., 90., 99., 108.};
  const std::vector<int> sizes = {4, 3, 3, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   7.,   10.,  13.,  16.,  19., 22., 25., 2.,   5.,   8.,
      11.,  14.,  17.,  20.,  23.,  26.,  3.,  6.,  9.,  12.,  15.,  18.,
      21.,  24.,  27.,  28.,  31.,  34.,  37., 40., 43., 46.,  49.,  52.,
      29.,  32.,  35.,  38.,  41.,  44.,  47., 50., 53., 30.,  33.,  36.,
      39.,  42.,  45.,  48.,  51.,  54.,  55., 58., 61., 64.,  67.,  70.,
      73.,  76.,  79.,  56.,  59.,  62.,  65., 68., 71., 74.,  77.,  80.,
      57.,  60.,  63.,  66.,  69.,  72.,  75., 78., 81., 82.,  85.,  88.,
      91.,  94.,  97.,  100., 103., 106., 83., 86., 89., 92.,  95.,  98.,
      101., 104., 107., 84.,  87.,  90.,  93., 96., 99., 102., 105., 108.};
  const std::vector<int> sizes = {4, 3, 3, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19.,  4.,  13., 22.,  7.,  16., 25.,  2.,  11., 20.,
      5.,  14., 23.,  8.,  17., 26.,  3.,  12., 21.,  6.,  15., 24.,
      9.,  18., 27.,  28., 37., 46.,  31., 40., 49.,  34., 43., 52.,
      29., 38., 47.,  32., 41., 50.,  35., 44., 53.,  30., 39., 48.,
      33., 42., 51.,  36., 45., 54.,  55., 64., 73.,  58., 67., 76.,
      61., 70., 79.,  56., 65., 74.,  59., 68., 77.,  62., 71., 80.,
      57., 66., 75.,  60., 69., 78.,  63., 72., 81.,  82., 91., 100.,
      85., 94., 103., 88., 97., 106., 83., 92., 101., 86., 95., 104.,
      89., 98., 107., 84., 93., 102., 87., 96., 105., 90., 99., 108.};
  const std::vector<int> sizes = {4, 3, 3, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,   5.,   6.,   7.,   8.,   9.,   28.,  29.,  30.,
      31., 32., 33., 34.,  35.,  36.,  55.,  56.,  57.,  58.,  59.,  60.,
      61., 62., 63., 82.,  83.,  84.,  85.,  86.,  87.,  88.,  89.,  90.,
      10., 11., 12., 13.,  14.,  15.,  16.,  17.,  18.,  37.,  38.,  39.,
      40., 41., 42., 43.,  44.,  45.,  64.,  65.,  66.,  67.,  68.,  69.,
      70., 71., 72., 91.,  92.,  93.,  94.,  95.,  96.,  97.,  98.,  99.,
      19., 20., 21., 22.,  23.,  24.,  25.,  26.,  27.,  46.,  47.,  48.,
      49., 50., 51., 52.,  53.,  54.,  73.,  74.,  75.,  76.,  77.,  78.,
      79., 80., 81., 100., 101., 102., 103., 104., 105., 106., 107., 108.};
  const std::vector<int> sizes = {4, 3, 3, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  2.,   5.,   8.,   3.,   6.,   9.,   28.,  31.,  34.,
      29., 32., 35., 30.,  33.,  36.,  55.,  58.,  61.,  56.,  59.,  62.,
      57., 60., 63., 82.,  85.,  88.,  83.,  86.,  89.,  84.,  87.,  90.,
      10., 13., 16., 11.,  14.,  17.,  12.,  15.,  18.,  37.,  40.,  43.,
      38., 41., 44., 39.,  42.,  45.,  64.,  67.,  70.,  65.,  68.,  71.,
      66., 69., 72., 91.,  94.,  97.,  92.,  95.,  98.,  93.,  96.,  99.,
      19., 22., 25., 20.,  23.,  26.,  21.,  24.,  27.,  46.,  49.,  52.,
      47., 50., 53., 48.,  51.,  54.,  73.,  76.,  79.,  74.,  77.,  80.,
      75., 78., 81., 100., 103., 106., 101., 104., 107., 102., 105., 108.};
  const std::vector<int> sizes = {4, 3, 3, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  28., 29., 30., 55., 56., 57., 82.,  83.,  84.,
      4.,  5.,  6.,  31., 32., 33., 58., 59., 60., 85.,  86.,  87.,
      7.,  8.,  9.,  34., 35., 36., 61., 62., 63., 88.,  89.,  90.,
      10., 11., 12., 37., 38., 39., 64., 65., 66., 91.,  92.,  93.,
      13., 14., 15., 40., 41., 42., 67., 68., 69., 94.,  95.,  96.,
      16., 17., 18., 43., 44., 45., 70., 71., 72., 97.,  98.,  99.,
      19., 20., 21., 46., 47., 48., 73., 74., 75., 100., 101., 102.,
      22., 23., 24., 49., 50., 51., 76., 77., 78., 103., 104., 105.,
      25., 26., 27., 52., 53., 54., 79., 80., 81., 106., 107., 108.};
  const std::vector<int> sizes = {4, 3, 3, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  28., 55., 82.,  2.,  29., 56., 83.,  3.,  30., 57., 84.,
      4.,  31., 58., 85.,  5.,  32., 59., 86.,  6.,  33., 60., 87.,
      7.,  34., 61., 88.,  8.,  35., 62., 89.,  9.,  36., 63., 90.,
      10., 37., 64., 91.,  11., 38., 65., 92.,  12., 39., 66., 93.,
      13., 40., 67., 94.,  14., 41., 68., 95.,  15., 42., 69., 96.,
      16., 43., 70., 97.,  17., 44., 71., 98.,  18., 45., 72., 99.,
      19., 46., 73., 100., 20., 47., 74., 101., 21., 48., 75., 102.,
      22., 49., 76., 103., 23., 50., 77., 104., 24., 51., 78., 105.,
      25., 52., 79., 106., 26., 53., 80., 107., 27., 54., 81., 108.};
  const std::vector<int> sizes = {4, 3, 3, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  28., 31., 34., 55., 58., 61., 82.,  85.,  88.,
      2.,  5.,  8.,  29., 32., 35., 56., 59., 62., 83.,  86.,  89.,
      3.,  6.,  9.,  30., 33., 36., 57., 60., 63., 84.,  87.,  90.,
      10., 13., 16., 37., 40., 43., 64., 67., 70., 91.,  94.,  97.,
      11., 14., 17., 38., 41., 44., 65., 68., 71., 92.,  95.,  98.,
      12., 15., 18., 39., 42., 45., 66., 69., 72., 93.,  96.,  99.,
      19., 22., 25., 46., 49., 52., 73., 76., 79., 100., 103., 106.,
      20., 23., 26., 47., 50., 53., 74., 77., 80., 101., 104., 107.,
      21., 24., 27., 48., 51., 54., 75., 78., 81., 102., 105., 108.};
  const std::vector<int> sizes = {4, 3, 3, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  28., 55., 82.,  4.,  31., 58., 85.,  7.,  34., 61., 88.,
      2.,  29., 56., 83.,  5.,  32., 59., 86.,  8.,  35., 62., 89.,
      3.,  30., 57., 84.,  6.,  33., 60., 87.,  9.,  36., 63., 90.,
      10., 37., 64., 91.,  13., 40., 67., 94.,  16., 43., 70., 97.,
      11., 38., 65., 92.,  14., 41., 68., 95.,  17., 44., 71., 98.,
      12., 39., 66., 93.,  15., 42., 69., 96.,  18., 45., 72., 99.,
      19., 46., 73., 100., 22., 49., 76., 103., 25., 52., 79., 106.,
      20., 47., 74., 101., 23., 50., 77., 104., 26., 53., 80., 107.,
      21., 48., 75., 102., 24., 51., 78., 105., 27., 54., 81., 108.};
  const std::vector<int> sizes = {4, 3, 3, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  10., 11., 12., 19., 20., 21., 28.,  29.,  30.,
      37., 38., 39., 46., 47., 48., 55., 56., 57., 64.,  65.,  66.,
      73., 74., 75., 82., 83., 84., 91., 92., 93., 100., 101., 102.,
      4.,  5.,  6.,  13., 14., 15., 22., 23., 24., 31.,  32.,  33.,
      40., 41., 42., 49., 50., 51., 58., 59., 60., 67.,  68.,  69.,
      76., 77., 78., 85., 86., 87., 94., 95., 96., 103., 104., 105.,
      7.,  8.,  9.,  16., 17., 18., 25., 26., 27., 34.,  35.,  36.,
      43., 44., 45., 52., 53., 54., 61., 62., 63., 70.,  71.,  72.,
      79., 80., 81., 88., 89., 90., 97., 98., 99., 106., 107., 108.};
  const std::vector<int> sizes = {4, 3, 3, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 2.,  11., 20.,  3.,  12., 21.,  28., 37., 46.,
      29., 38., 47., 30., 39., 48.,  55., 64., 73.,  56., 65., 74.,
      57., 66., 75., 82., 91., 100., 83., 92., 101., 84., 93., 102.,
      4.,  13., 22., 5.,  14., 23.,  6.,  15., 24.,  31., 40., 49.,
      32., 41., 50., 33., 42., 51.,  58., 67., 76.,  59., 68., 77.,
      60., 69., 78., 85., 94., 103., 86., 95., 104., 87., 96., 105.,
      7.,  16., 25., 8.,  17., 26.,  9.,  18., 27.,  34., 43., 52.,
      35., 44., 53., 36., 45., 54.,  61., 70., 79.,  62., 71., 80.,
      63., 72., 81., 88., 97., 106., 89., 98., 107., 90., 99., 108.};
  const std::vector<int> sizes = {4, 3, 3, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  28., 29., 30., 55., 56., 57., 82.,  83.,  84.,
      10., 11., 12., 37., 38., 39., 64., 65., 66., 91.,  92.,  93.,
      19., 20., 21., 46., 47., 48., 73., 74., 75., 100., 101., 102.,
      4.,  5.,  6.,  31., 32., 33., 58., 59., 60., 85.,  86.,  87.,
      13., 14., 15., 40., 41., 42., 67., 68., 69., 94.,  95.,  96.,
      22., 23., 24., 49., 50., 51., 76., 77., 78., 103., 104., 105.,
      7.,  8.,  9.,  34., 35., 36., 61., 62., 63., 88.,  89.,  90.,
      16., 17., 18., 43., 44., 45., 70., 71., 72., 97.,  98.,  99.,
      25., 26., 27., 52., 53., 54., 79., 80., 81., 106., 107., 108.};
  const std::vector<int> sizes = {4, 3, 3, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  28., 55., 82.,  2.,  29., 56., 83.,  3.,  30., 57., 84.,
      10., 37., 64., 91.,  11., 38., 65., 92.,  12., 39., 66., 93.,
      19., 46., 73., 100., 20., 47., 74., 101., 21., 48., 75., 102.,
      4.,  31., 58., 85.,  5.,  32., 59., 86.,  6.,  33., 60., 87.,
      13., 40., 67., 94.,  14., 41., 68., 95.,  15., 42., 69., 96.,
      22., 49., 76., 103., 23., 50., 77., 104., 24., 51., 78., 105.,
      7.,  34., 61., 88.,  8.,  35., 62., 89.,  9.,  36., 63., 90.,
      16., 43., 70., 97.,  17., 44., 71., 98.,  18., 45., 72., 99.,
      25., 52., 79., 106., 26., 53., 80., 107., 27., 54., 81., 108.};
  const std::vector<int> sizes = {4, 3, 3, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 10., 19., 28., 37., 46., 55., 64., 73., 82., 91., 100.,
      2., 11., 20., 29., 38., 47., 56., 65., 74., 83., 92., 101.,
      3., 12., 21., 30., 39., 48., 57., 66., 75., 84., 93., 102.,
      4., 13., 22., 31., 40., 49., 58., 67., 76., 85., 94., 103.,
      5., 14., 23., 32., 41., 50., 59., 68., 77., 86., 95., 104.,
      6., 15., 24., 33., 42., 51., 60., 69., 78., 87., 96., 105.,
      7., 16., 25., 34., 43., 52., 61., 70., 79., 88., 97., 106.,
      8., 17., 26., 35., 44., 53., 62., 71., 80., 89., 98., 107.,
      9., 18., 27., 36., 45., 54., 63., 72., 81., 90., 99., 108.};
  const std::vector<int> sizes = {4, 3, 3, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 28., 55., 82., 10., 37., 64., 91., 19., 46., 73., 100.,
      2., 29., 56., 83., 11., 38., 65., 92., 20., 47., 74., 101.,
      3., 30., 57., 84., 12., 39., 66., 93., 21., 48., 75., 102.,
      4., 31., 58., 85., 13., 40., 67., 94., 22., 49., 76., 103.,
      5., 32., 59., 86., 14., 41., 68., 95., 23., 50., 77., 104.,
      6., 33., 60., 87., 15., 42., 69., 96., 24., 51., 78., 105.,
      7., 34., 61., 88., 16., 43., 70., 97., 25., 52., 79., 106.,
      8., 35., 62., 89., 17., 44., 71., 98., 26., 53., 80., 107.,
      9., 36., 63., 90., 18., 45., 72., 99., 27., 54., 81., 108.};
  const std::vector<int> sizes = {4, 3, 3, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 28.,  31.,  34.,
      37., 40., 43., 46., 49., 52., 55., 58., 61., 64.,  67.,  70.,
      73., 76., 79., 82., 85., 88., 91., 94., 97., 100., 103., 106.,
      2.,  5.,  8.,  11., 14., 17., 20., 23., 26., 29.,  32.,  35.,
      38., 41., 44., 47., 50., 53., 56., 59., 62., 65.,  68.,  71.,
      74., 77., 80., 83., 86., 89., 92., 95., 98., 101., 104., 107.,
      3.,  6.,  9.,  12., 15., 18., 21., 24., 27., 30.,  33.,  36.,
      39., 42., 45., 48., 51., 54., 57., 60., 63., 66.,  69.,  72.,
      75., 78., 81., 84., 87., 90., 93., 96., 99., 102., 105., 108.};
  const std::vector<int> sizes = {4, 3, 3, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  10., 19., 4.,  13., 22.,  7.,  16., 25.,  28., 37., 46.,
      31., 40., 49., 34., 43., 52.,  55., 64., 73.,  58., 67., 76.,
      61., 70., 79., 82., 91., 100., 85., 94., 103., 88., 97., 106.,
      2.,  11., 20., 5.,  14., 23.,  8.,  17., 26.,  29., 38., 47.,
      32., 41., 50., 35., 44., 53.,  56., 65., 74.,  59., 68., 77.,
      62., 71., 80., 83., 92., 101., 86., 95., 104., 89., 98., 107.,
      3.,  12., 21., 6.,  15., 24.,  9.,  18., 27.,  30., 39., 48.,
      33., 42., 51., 36., 45., 54.,  57., 66., 75.,  60., 69., 78.,
      63., 72., 81., 84., 93., 102., 87., 96., 105., 90., 99., 108.};
  const std::vector<int> sizes = {4, 3, 3, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  28., 31., 34., 55., 58., 61., 82.,  85.,  88.,
      10., 13., 16., 37., 40., 43., 64., 67., 70., 91.,  94.,  97.,
      19., 22., 25., 46., 49., 52., 73., 76., 79., 100., 103., 106.,
      2.,  5.,  8.,  29., 32., 35., 56., 59., 62., 83.,  86.,  89.,
      11., 14., 17., 38., 41., 44., 65., 68., 71., 92.,  95.,  98.,
      20., 23., 26., 47., 50., 53., 74., 77., 80., 101., 104., 107.,
      3.,  6.,  9.,  30., 33., 36., 57., 60., 63., 84.,  87.,  90.,
      12., 15., 18., 39., 42., 45., 66., 69., 72., 93.,  96.,  99.,
      21., 24., 27., 48., 51., 54., 75., 78., 81., 102., 105., 108.};
  const std::vector<int> sizes = {4, 3, 3, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  28., 55., 82.,  4.,  31., 58., 85.,  7.,  34., 61., 88.,
      10., 37., 64., 91.,  13., 40., 67., 94.,  16., 43., 70., 97.,
      19., 46., 73., 100., 22., 49., 76., 103., 25., 52., 79., 106.,
      2.,  29., 56., 83.,  5.,  32., 59., 86.,  8.,  35., 62., 89.,
      11., 38., 65., 92.,  14., 41., 68., 95.,  17., 44., 71., 98.,
      20., 47., 74., 101., 23., 50., 77., 104., 26., 53., 80., 107.,
      3.,  30., 57., 84.,  6.,  33., 60., 87.,  9.,  36., 63., 90.,
      12., 39., 66., 93.,  15., 42., 69., 96.,  18., 45., 72., 99.,
      21., 48., 75., 102., 24., 51., 78., 105., 27., 54., 81., 108.};
  const std::vector<int> sizes = {4, 3, 3, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 10., 19., 28., 37., 46., 55., 64., 73., 82., 91., 100.,
      4., 13., 22., 31., 40., 49., 58., 67., 76., 85., 94., 103.,
      7., 16., 25., 34., 43., 52., 61., 70., 79., 88., 97., 106.,
      2., 11., 20., 29., 38., 47., 56., 65., 74., 83., 92., 101.,
      5., 14., 23., 32., 41., 50., 59., 68., 77., 86., 95., 104.,
      8., 17., 26., 35., 44., 53., 62., 71., 80., 89., 98., 107.,
      3., 12., 21., 30., 39., 48., 57., 66., 75., 84., 93., 102.,
      6., 15., 24., 33., 42., 51., 60., 69., 78., 87., 96., 105.,
      9., 18., 27., 36., 45., 54., 63., 72., 81., 90., 99., 108.};
  const std::vector<int> sizes = {4, 3, 3, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1., 28., 55., 82., 10., 37., 64., 91., 19., 46., 73., 100.,
      4., 31., 58., 85., 13., 40., 67., 94., 22., 49., 76., 103.,
      7., 34., 61., 88., 16., 43., 70., 97., 25., 52., 79., 106.,
      2., 29., 56., 83., 11., 38., 65., 92., 20., 47., 74., 101.,
      5., 32., 59., 86., 14., 41., 68., 95., 23., 50., 77., 104.,
      8., 35., 62., 89., 17., 44., 71., 98., 26., 53., 80., 107.,
      3., 30., 57., 84., 12., 39., 66., 93., 21., 48., 75., 102.,
      6., 33., 60., 87., 15., 42., 69., 96., 24., 51., 78., 105.,
      9., 36., 63., 90., 18., 45., 72., 99., 27., 54., 81., 108.};
  const std::vector<int> sizes = {4, 3, 3, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13.,  14.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 105., 106., 107., 108.,
      109., 110., 111., 112., 113., 114., 115., 116., 117., 118., 119., 120.,
      121., 122., 123., 124., 125., 126., 127., 128., 129., 130., 131., 132.,
      133., 134., 135., 136., 137., 138., 139., 140., 141., 142., 143., 144.};
  const std::vector<int> sizes = {4, 3, 3, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   2.,   6.,   10.,  3.,   7.,   11.,  4.,   8.,   12.,
      13.,  17.,  21.,  14.,  18.,  22.,  15.,  19.,  23.,  16.,  20.,  24.,
      25.,  29.,  33.,  26.,  30.,  34.,  27.,  31.,  35.,  28.,  32.,  36.,
      37.,  41.,  45.,  38.,  42.,  46.,  39.,  43.,  47.,  40.,  44.,  48.,
      49.,  53.,  57.,  50.,  54.,  58.,  51.,  55.,  59.,  52.,  56.,  60.,
      61.,  65.,  69.,  62.,  66.,  70.,  63.,  67.,  71.,  64.,  68.,  72.,
      73.,  77.,  81.,  74.,  78.,  82.,  75.,  79.,  83.,  76.,  80.,  84.,
      85.,  89.,  93.,  86.,  90.,  94.,  87.,  91.,  95.,  88.,  92.,  96.,
      97.,  101., 105., 98.,  102., 106., 99.,  103., 107., 100., 104., 108.,
      109., 113., 117., 110., 114., 118., 111., 115., 119., 112., 116., 120.,
      121., 125., 129., 122., 126., 130., 123., 127., 131., 124., 128., 132.,
      133., 137., 141., 134., 138., 142., 135., 139., 143., 136., 140., 144.};
  const std::vector<int> sizes = {4, 3, 3, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   13.,  14.,  15.,  16.,  25.,  26.,  27.,  28.,
      5.,   6.,   7.,   8.,   17.,  18.,  19.,  20.,  29.,  30.,  31.,  32.,
      9.,   10.,  11.,  12.,  21.,  22.,  23.,  24.,  33.,  34.,  35.,  36.,
      37.,  38.,  39.,  40.,  49.,  50.,  51.,  52.,  61.,  62.,  63.,  64.,
      41.,  42.,  43.,  44.,  53.,  54.,  55.,  56.,  65.,  66.,  67.,  68.,
      45.,  46.,  47.,  48.,  57.,  58.,  59.,  60.,  69.,  70.,  71.,  72.,
      73.,  74.,  75.,  76.,  85.,  86.,  87.,  88.,  97.,  98.,  99.,  100.,
      77.,  78.,  79.,  80.,  89.,  90.,  91.,  92.,  101., 102., 103., 104.,
      81.,  82.,  83.,  84.,  93.,  94.,  95.,  96.,  105., 106., 107., 108.,
      109., 110., 111., 112., 121., 122., 123., 124., 133., 134., 135., 136.,
      113., 114., 115., 116., 125., 126., 127., 128., 137., 138., 139., 140.,
      117., 118., 119., 120., 129., 130., 131., 132., 141., 142., 143., 144.};
  const std::vector<int> sizes = {4, 3, 3, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  2.,   14.,  26.,  3.,   15.,  27.,  4.,   16.,  28.,
      5.,   17.,  29.,  6.,   18.,  30.,  7.,   19.,  31.,  8.,   20.,  32.,
      9.,   21.,  33.,  10.,  22.,  34.,  11.,  23.,  35.,  12.,  24.,  36.,
      37.,  49.,  61.,  38.,  50.,  62.,  39.,  51.,  63.,  40.,  52.,  64.,
      41.,  53.,  65.,  42.,  54.,  66.,  43.,  55.,  67.,  44.,  56.,  68.,
      45.,  57.,  69.,  46.,  58.,  70.,  47.,  59.,  71.,  48.,  60.,  72.,
      73.,  85.,  97.,  74.,  86.,  98.,  75.,  87.,  99.,  76.,  88.,  100.,
      77.,  89.,  101., 78.,  90.,  102., 79.,  91.,  103., 80.,  92.,  104.,
      81.,  93.,  105., 82.,  94.,  106., 83.,  95.,  107., 84.,  96.,  108.,
      109., 121., 133., 110., 122., 134., 111., 123., 135., 112., 124., 136.,
      113., 125., 137., 114., 126., 138., 115., 127., 139., 116., 128., 140.,
      117., 129., 141., 118., 130., 142., 119., 131., 143., 120., 132., 144.};
  const std::vector<int> sizes = {4, 3, 3, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  17.,  21.,  25.,  29.,  33.,  2.,   6.,   10.,
      14.,  18.,  22.,  26.,  30.,  34.,  3.,   7.,   11.,  15.,  19.,  23.,
      27.,  31.,  35.,  4.,   8.,   12.,  16.,  20.,  24.,  28.,  32.,  36.,
      37.,  41.,  45.,  49.,  53.,  57.,  61.,  65.,  69.,  38.,  42.,  46.,
      50.,  54.,  58.,  62.,  66.,  70.,  39.,  43.,  47.,  51.,  55.,  59.,
      63.,  67.,  71.,  40.,  44.,  48.,  52.,  56.,  60.,  64.,  68.,  72.,
      73.,  77.,  81.,  85.,  89.,  93.,  97.,  101., 105., 74.,  78.,  82.,
      86.,  90.,  94.,  98.,  102., 106., 75.,  79.,  83.,  87.,  91.,  95.,
      99.,  103., 107., 76.,  80.,  84.,  88.,  92.,  96.,  100., 104., 108.,
      109., 113., 117., 121., 125., 129., 133., 137., 141., 110., 114., 118.,
      122., 126., 130., 134., 138., 142., 111., 115., 119., 123., 127., 131.,
      135., 139., 143., 112., 116., 120., 124., 128., 132., 136., 140., 144.};
  const std::vector<int> sizes = {4, 3, 3, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  5.,   17.,  29.,  9.,   21.,  33.,  2.,   14.,  26.,
      6.,   18.,  30.,  10.,  22.,  34.,  3.,   15.,  27.,  7.,   19.,  31.,
      11.,  23.,  35.,  4.,   16.,  28.,  8.,   20.,  32.,  12.,  24.,  36.,
      37.,  49.,  61.,  41.,  53.,  65.,  45.,  57.,  69.,  38.,  50.,  62.,
      42.,  54.,  66.,  46.,  58.,  70.,  39.,  51.,  63.,  43.,  55.,  67.,
      47.,  59.,  71.,  40.,  52.,  64.,  44.,  56.,  68.,  48.,  60.,  72.,
      73.,  85.,  97.,  77.,  89.,  101., 81.,  93.,  105., 74.,  86.,  98.,
      78.,  90.,  102., 82.,  94.,  106., 75.,  87.,  99.,  79.,  91.,  103.,
      83.,  95.,  107., 76.,  88.,  100., 80.,  92.,  104., 84.,  96.,  108.,
      109., 121., 133., 113., 125., 137., 117., 129., 141., 110., 122., 134.,
      114., 126., 138., 118., 130., 142., 111., 123., 135., 115., 127., 139.,
      119., 131., 143., 112., 124., 136., 116., 128., 140., 120., 132., 144.};
  const std::vector<int> sizes = {4, 3, 3, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      109., 110., 111., 112., 113., 114., 115., 116., 117., 118., 119., 120.,
      13.,  14.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      121., 122., 123., 124., 125., 126., 127., 128., 129., 130., 131., 132.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 105., 106., 107., 108.,
      133., 134., 135., 136., 137., 138., 139., 140., 141., 142., 143., 144.};
  const std::vector<int> sizes = {4, 3, 3, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   2.,   6.,   10.,  3.,   7.,   11.,  4.,   8.,   12.,
      37.,  41.,  45.,  38.,  42.,  46.,  39.,  43.,  47.,  40.,  44.,  48.,
      73.,  77.,  81.,  74.,  78.,  82.,  75.,  79.,  83.,  76.,  80.,  84.,
      109., 113., 117., 110., 114., 118., 111., 115., 119., 112., 116., 120.,
      13.,  17.,  21.,  14.,  18.,  22.,  15.,  19.,  23.,  16.,  20.,  24.,
      49.,  53.,  57.,  50.,  54.,  58.,  51.,  55.,  59.,  52.,  56.,  60.,
      85.,  89.,  93.,  86.,  90.,  94.,  87.,  91.,  95.,  88.,  92.,  96.,
      121., 125., 129., 122., 126., 130., 123., 127., 131., 124., 128., 132.,
      25.,  29.,  33.,  26.,  30.,  34.,  27.,  31.,  35.,  28.,  32.,  36.,
      61.,  65.,  69.,  62.,  66.,  70.,  63.,  67.,  71.,  64.,  68.,  72.,
      97.,  101., 105., 98.,  102., 106., 99.,  103., 107., 100., 104., 108.,
      133., 137., 141., 134., 138., 142., 135., 139., 143., 136., 140., 144.};
  const std::vector<int> sizes = {4, 3, 3, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   37.,  38.,  39.,  40.,  73.,  74.,  75.,  76.,
      109., 110., 111., 112., 5.,   6.,   7.,   8.,   41.,  42.,  43.,  44.,
      77.,  78.,  79.,  80.,  113., 114., 115., 116., 9.,   10.,  11.,  12.,
      45.,  46.,  47.,  48.,  81.,  82.,  83.,  84.,  117., 118., 119., 120.,
      13.,  14.,  15.,  16.,  49.,  50.,  51.,  52.,  85.,  86.,  87.,  88.,
      121., 122., 123., 124., 17.,  18.,  19.,  20.,  53.,  54.,  55.,  56.,
      89.,  90.,  91.,  92.,  125., 126., 127., 128., 21.,  22.,  23.,  24.,
      57.,  58.,  59.,  60.,  93.,  94.,  95.,  96.,  129., 130., 131., 132.,
      25.,  26.,  27.,  28.,  61.,  62.,  63.,  64.,  97.,  98.,  99.,  100.,
      133., 134., 135., 136., 29.,  30.,  31.,  32.,  65.,  66.,  67.,  68.,
      101., 102., 103., 104., 137., 138., 139., 140., 33.,  34.,  35.,  36.,
      69.,  70.,  71.,  72.,  105., 106., 107., 108., 141., 142., 143., 144.};
  const std::vector<int> sizes = {4, 3, 3, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  109., 2.,  38., 74.,  110., 3.,  39., 75.,  111.,
      4.,  40., 76.,  112., 5.,  41., 77.,  113., 6.,  42., 78.,  114.,
      7.,  43., 79.,  115., 8.,  44., 80.,  116., 9.,  45., 81.,  117.,
      10., 46., 82.,  118., 11., 47., 83.,  119., 12., 48., 84.,  120.,
      13., 49., 85.,  121., 14., 50., 86.,  122., 15., 51., 87.,  123.,
      16., 52., 88.,  124., 17., 53., 89.,  125., 18., 54., 90.,  126.,
      19., 55., 91.,  127., 20., 56., 92.,  128., 21., 57., 93.,  129.,
      22., 58., 94.,  130., 23., 59., 95.,  131., 24., 60., 96.,  132.,
      25., 61., 97.,  133., 26., 62., 98.,  134., 27., 63., 99.,  135.,
      28., 64., 100., 136., 29., 65., 101., 137., 30., 66., 102., 138.,
      31., 67., 103., 139., 32., 68., 104., 140., 33., 69., 105., 141.,
      34., 70., 106., 142., 35., 71., 107., 143., 36., 72., 108., 144.};
  const std::vector<int> sizes = {4, 3, 3, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  37., 41., 45., 73.,  77.,  81.,  109., 113., 117.,
      2.,  6.,  10., 38., 42., 46., 74.,  78.,  82.,  110., 114., 118.,
      3.,  7.,  11., 39., 43., 47., 75.,  79.,  83.,  111., 115., 119.,
      4.,  8.,  12., 40., 44., 48., 76.,  80.,  84.,  112., 116., 120.,
      13., 17., 21., 49., 53., 57., 85.,  89.,  93.,  121., 125., 129.,
      14., 18., 22., 50., 54., 58., 86.,  90.,  94.,  122., 126., 130.,
      15., 19., 23., 51., 55., 59., 87.,  91.,  95.,  123., 127., 131.,
      16., 20., 24., 52., 56., 60., 88.,  92.,  96.,  124., 128., 132.,
      25., 29., 33., 61., 65., 69., 97.,  101., 105., 133., 137., 141.,
      26., 30., 34., 62., 66., 70., 98.,  102., 106., 134., 138., 142.,
      27., 31., 35., 63., 67., 71., 99.,  103., 107., 135., 139., 143.,
      28., 32., 36., 64., 68., 72., 100., 104., 108., 136., 140., 144.};
  const std::vector<int> sizes = {4, 3, 3, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  109., 5.,  41., 77.,  113., 9.,  45., 81.,  117.,
      2.,  38., 74.,  110., 6.,  42., 78.,  114., 10., 46., 82.,  118.,
      3.,  39., 75.,  111., 7.,  43., 79.,  115., 11., 47., 83.,  119.,
      4.,  40., 76.,  112., 8.,  44., 80.,  116., 12., 48., 84.,  120.,
      13., 49., 85.,  121., 17., 53., 89.,  125., 21., 57., 93.,  129.,
      14., 50., 86.,  122., 18., 54., 90.,  126., 22., 58., 94.,  130.,
      15., 51., 87.,  123., 19., 55., 91.,  127., 23., 59., 95.,  131.,
      16., 52., 88.,  124., 20., 56., 92.,  128., 24., 60., 96.,  132.,
      25., 61., 97.,  133., 29., 65., 101., 137., 33., 69., 105., 141.,
      26., 62., 98.,  134., 30., 66., 102., 138., 34., 70., 106., 142.,
      27., 63., 99.,  135., 31., 67., 103., 139., 35., 71., 107., 143.,
      28., 64., 100., 136., 32., 68., 104., 140., 36., 72., 108., 144.};
  const std::vector<int> sizes = {4, 3, 3, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   13.,  14.,  15.,  16.,  25.,  26.,  27.,  28.,
      37.,  38.,  39.,  40.,  49.,  50.,  51.,  52.,  61.,  62.,  63.,  64.,
      73.,  74.,  75.,  76.,  85.,  86.,  87.,  88.,  97.,  98.,  99.,  100.,
      109., 110., 111., 112., 121., 122., 123., 124., 133., 134., 135., 136.,
      5.,   6.,   7.,   8.,   17.,  18.,  19.,  20.,  29.,  30.,  31.,  32.,
      41.,  42.,  43.,  44.,  53.,  54.,  55.,  56.,  65.,  66.,  67.,  68.,
      77.,  78.,  79.,  80.,  89.,  90.,  91.,  92.,  101., 102., 103., 104.,
      113., 114., 115., 116., 125., 126., 127., 128., 137., 138., 139., 140.,
      9.,   10.,  11.,  12.,  21.,  22.,  23.,  24.,  33.,  34.,  35.,  36.,
      45.,  46.,  47.,  48.,  57.,  58.,  59.,  60.,  69.,  70.,  71.,  72.,
      81.,  82.,  83.,  84.,  93.,  94.,  95.,  96.,  105., 106., 107., 108.,
      117., 118., 119., 120., 129., 130., 131., 132., 141., 142., 143., 144.};
  const std::vector<int> sizes = {4, 3, 3, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  2.,   14.,  26.,  3.,   15.,  27.,  4.,   16.,  28.,
      37.,  49.,  61.,  38.,  50.,  62.,  39.,  51.,  63.,  40.,  52.,  64.,
      73.,  85.,  97.,  74.,  86.,  98.,  75.,  87.,  99.,  76.,  88.,  100.,
      109., 121., 133., 110., 122., 134., 111., 123., 135., 112., 124., 136.,
      5.,   17.,  29.,  6.,   18.,  30.,  7.,   19.,  31.,  8.,   20.,  32.,
      41.,  53.,  65.,  42.,  54.,  66.,  43.,  55.,  67.,  44.,  56.,  68.,
      77.,  89.,  101., 78.,  90.,  102., 79.,  91.,  103., 80.,  92.,  104.,
      113., 125., 137., 114., 126., 138., 115., 127., 139., 116., 128., 140.,
      9.,   21.,  33.,  10.,  22.,  34.,  11.,  23.,  35.,  12.,  24.,  36.,
      45.,  57.,  69.,  46.,  58.,  70.,  47.,  59.,  71.,  48.,  60.,  72.,
      81.,  93.,  105., 82.,  94.,  106., 83.,  95.,  107., 84.,  96.,  108.,
      117., 129., 141., 118., 130., 142., 119., 131., 143., 120., 132., 144.};
  const std::vector<int> sizes = {4, 3, 3, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   37.,  38.,  39.,  40.,  73.,  74.,  75.,  76.,
      109., 110., 111., 112., 13.,  14.,  15.,  16.,  49.,  50.,  51.,  52.,
      85.,  86.,  87.,  88.,  121., 122., 123., 124., 25.,  26.,  27.,  28.,
      61.,  62.,  63.,  64.,  97.,  98.,  99.,  100., 133., 134., 135., 136.,
      5.,   6.,   7.,   8.,   41.,  42.,  43.,  44.,  77.,  78.,  79.,  80.,
      113., 114., 115., 116., 17.,  18.,  19.,  20.,  53.,  54.,  55.,  56.,
      89.,  90.,  91.,  92.,  125., 126., 127., 128., 29.,  30.,  31.,  32.,
      65.,  66.,  67.,  68.,  101., 102., 103., 104., 137., 138., 139., 140.,
      9.,   10.,  11.,  12.,  45.,  46.,  47.,  48.,  81.,  82.,  83.,  84.,
      117., 118., 119., 120., 21.,  22.,  23.,  24.,  57.,  58.,  59.,  60.,
      93.,  94.,  95.,  96.,  129., 130., 131., 132., 33.,  34.,  35.,  36.,
      69.,  70.,  71.,  72.,  105., 106., 107., 108., 141., 142., 143., 144.};
  const std::vector<int> sizes = {4, 3, 3, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  109., 2.,  38., 74.,  110., 3.,  39., 75.,  111.,
      4.,  40., 76.,  112., 13., 49., 85.,  121., 14., 50., 86.,  122.,
      15., 51., 87.,  123., 16., 52., 88.,  124., 25., 61., 97.,  133.,
      26., 62., 98.,  134., 27., 63., 99.,  135., 28., 64., 100., 136.,
      5.,  41., 77.,  113., 6.,  42., 78.,  114., 7.,  43., 79.,  115.,
      8.,  44., 80.,  116., 17., 53., 89.,  125., 18., 54., 90.,  126.,
      19., 55., 91.,  127., 20., 56., 92.,  128., 29., 65., 101., 137.,
      30., 66., 102., 138., 31., 67., 103., 139., 32., 68., 104., 140.,
      9.,  45., 81.,  117., 10., 46., 82.,  118., 11., 47., 83.,  119.,
      12., 48., 84.,  120., 21., 57., 93.,  129., 22., 58., 94.,  130.,
      23., 59., 95.,  131., 24., 60., 96.,  132., 33., 69., 105., 141.,
      34., 70., 106., 142., 35., 71., 107., 143., 36., 72., 108., 144.};
  const std::vector<int> sizes = {4, 3, 3, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 49., 61., 73., 85., 97.,  109., 121., 133.,
      2.,  14., 26., 38., 50., 62., 74., 86., 98.,  110., 122., 134.,
      3.,  15., 27., 39., 51., 63., 75., 87., 99.,  111., 123., 135.,
      4.,  16., 28., 40., 52., 64., 76., 88., 100., 112., 124., 136.,
      5.,  17., 29., 41., 53., 65., 77., 89., 101., 113., 125., 137.,
      6.,  18., 30., 42., 54., 66., 78., 90., 102., 114., 126., 138.,
      7.,  19., 31., 43., 55., 67., 79., 91., 103., 115., 127., 139.,
      8.,  20., 32., 44., 56., 68., 80., 92., 104., 116., 128., 140.,
      9.,  21., 33., 45., 57., 69., 81., 93., 105., 117., 129., 141.,
      10., 22., 34., 46., 58., 70., 82., 94., 106., 118., 130., 142.,
      11., 23., 35., 47., 59., 71., 83., 95., 107., 119., 131., 143.,
      12., 24., 36., 48., 60., 72., 84., 96., 108., 120., 132., 144.};
  const std::vector<int> sizes = {4, 3, 3, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73., 109., 13., 49., 85., 121., 25., 61., 97.,  133.,
      2.,  38., 74., 110., 14., 50., 86., 122., 26., 62., 98.,  134.,
      3.,  39., 75., 111., 15., 51., 87., 123., 27., 63., 99.,  135.,
      4.,  40., 76., 112., 16., 52., 88., 124., 28., 64., 100., 136.,
      5.,  41., 77., 113., 17., 53., 89., 125., 29., 65., 101., 137.,
      6.,  42., 78., 114., 18., 54., 90., 126., 30., 66., 102., 138.,
      7.,  43., 79., 115., 19., 55., 91., 127., 31., 67., 103., 139.,
      8.,  44., 80., 116., 20., 56., 92., 128., 32., 68., 104., 140.,
      9.,  45., 81., 117., 21., 57., 93., 129., 33., 69., 105., 141.,
      10., 46., 82., 118., 22., 58., 94., 130., 34., 70., 106., 142.,
      11., 47., 83., 119., 23., 59., 95., 131., 35., 71., 107., 143.,
      12., 48., 84., 120., 24., 60., 96., 132., 36., 72., 108., 144.};
  const std::vector<int> sizes = {4, 3, 3, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  17.,  21.,  25.,  29.,  33.,  37.,  41.,  45.,
      49.,  53.,  57.,  61.,  65.,  69.,  73.,  77.,  81.,  85.,  89.,  93.,
      97.,  101., 105., 109., 113., 117., 121., 125., 129., 133., 137., 141.,
      2.,   6.,   10.,  14.,  18.,  22.,  26.,  30.,  34.,  38.,  42.,  46.,
      50.,  54.,  58.,  62.,  66.,  70.,  74.,  78.,  82.,  86.,  90.,  94.,
      98.,  102., 106., 110., 114., 118., 122., 126., 130., 134., 138., 142.,
      3.,   7.,   11.,  15.,  19.,  23.,  27.,  31.,  35.,  39.,  43.,  47.,
      51.,  55.,  59.,  63.,  67.,  71.,  75.,  79.,  83.,  87.,  91.,  95.,
      99.,  103., 107., 111., 115., 119., 123., 127., 131., 135., 139., 143.,
      4.,   8.,   12.,  16.,  20.,  24.,  28.,  32.,  36.,  40.,  44.,  48.,
      52.,  56.,  60.,  64.,  68.,  72.,  76.,  80.,  84.,  88.,  92.,  96.,
      100., 104., 108., 112., 116., 120., 124., 128., 132., 136., 140., 144.};
  const std::vector<int> sizes = {4, 3, 3, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25.,  5.,   17.,  29.,  9.,   21.,  33.,  37.,  49.,  61.,
      41., 53., 65.,  45.,  57.,  69.,  73.,  85.,  97.,  77.,  89.,  101.,
      81., 93., 105., 109., 121., 133., 113., 125., 137., 117., 129., 141.,
      2.,  14., 26.,  6.,   18.,  30.,  10.,  22.,  34.,  38.,  50.,  62.,
      42., 54., 66.,  46.,  58.,  70.,  74.,  86.,  98.,  78.,  90.,  102.,
      82., 94., 106., 110., 122., 134., 114., 126., 138., 118., 130., 142.,
      3.,  15., 27.,  7.,   19.,  31.,  11.,  23.,  35.,  39.,  51.,  63.,
      43., 55., 67.,  47.,  59.,  71.,  75.,  87.,  99.,  79.,  91.,  103.,
      83., 95., 107., 111., 123., 135., 115., 127., 139., 119., 131., 143.,
      4.,  16., 28.,  8.,   20.,  32.,  12.,  24.,  36.,  40.,  52.,  64.,
      44., 56., 68.,  48.,  60.,  72.,  76.,  88.,  100., 80.,  92.,  104.,
      84., 96., 108., 112., 124., 136., 116., 128., 140., 120., 132., 144.};
  const std::vector<int> sizes = {4, 3, 3, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  37., 41., 45., 73.,  77.,  81.,  109., 113., 117.,
      13., 17., 21., 49., 53., 57., 85.,  89.,  93.,  121., 125., 129.,
      25., 29., 33., 61., 65., 69., 97.,  101., 105., 133., 137., 141.,
      2.,  6.,  10., 38., 42., 46., 74.,  78.,  82.,  110., 114., 118.,
      14., 18., 22., 50., 54., 58., 86.,  90.,  94.,  122., 126., 130.,
      26., 30., 34., 62., 66., 70., 98.,  102., 106., 134., 138., 142.,
      3.,  7.,  11., 39., 43., 47., 75.,  79.,  83.,  111., 115., 119.,
      15., 19., 23., 51., 55., 59., 87.,  91.,  95.,  123., 127., 131.,
      27., 31., 35., 63., 67., 71., 99.,  103., 107., 135., 139., 143.,
      4.,  8.,  12., 40., 44., 48., 76.,  80.,  84.,  112., 116., 120.,
      16., 20., 24., 52., 56., 60., 88.,  92.,  96.,  124., 128., 132.,
      28., 32., 36., 64., 68., 72., 100., 104., 108., 136., 140., 144.};
  const std::vector<int> sizes = {4, 3, 3, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  109., 5.,  41., 77.,  113., 9.,  45., 81.,  117.,
      13., 49., 85.,  121., 17., 53., 89.,  125., 21., 57., 93.,  129.,
      25., 61., 97.,  133., 29., 65., 101., 137., 33., 69., 105., 141.,
      2.,  38., 74.,  110., 6.,  42., 78.,  114., 10., 46., 82.,  118.,
      14., 50., 86.,  122., 18., 54., 90.,  126., 22., 58., 94.,  130.,
      26., 62., 98.,  134., 30., 66., 102., 138., 34., 70., 106., 142.,
      3.,  39., 75.,  111., 7.,  43., 79.,  115., 11., 47., 83.,  119.,
      15., 51., 87.,  123., 19., 55., 91.,  127., 23., 59., 95.,  131.,
      27., 63., 99.,  135., 31., 67., 103., 139., 35., 71., 107., 143.,
      4.,  40., 76.,  112., 8.,  44., 80.,  116., 12., 48., 84.,  120.,
      16., 52., 88.,  124., 20., 56., 92.,  128., 24., 60., 96.,  132.,
      28., 64., 100., 136., 32., 68., 104., 140., 36., 72., 108., 144.};
  const std::vector<int> sizes = {4, 3, 3, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 49., 61., 73., 85., 97.,  109., 121., 133.,
      5.,  17., 29., 41., 53., 65., 77., 89., 101., 113., 125., 137.,
      9.,  21., 33., 45., 57., 69., 81., 93., 105., 117., 129., 141.,
      2.,  14., 26., 38., 50., 62., 74., 86., 98.,  110., 122., 134.,
      6.,  18., 30., 42., 54., 66., 78., 90., 102., 114., 126., 138.,
      10., 22., 34., 46., 58., 70., 82., 94., 106., 118., 130., 142.,
      3.,  15., 27., 39., 51., 63., 75., 87., 99.,  111., 123., 135.,
      7.,  19., 31., 43., 55., 67., 79., 91., 103., 115., 127., 139.,
      11., 23., 35., 47., 59., 71., 83., 95., 107., 119., 131., 143.,
      4.,  16., 28., 40., 52., 64., 76., 88., 100., 112., 124., 136.,
      8.,  20., 32., 44., 56., 68., 80., 92., 104., 116., 128., 140.,
      12., 24., 36., 48., 60., 72., 84., 96., 108., 120., 132., 144.};
  const std::vector<int> sizes = {4, 3, 3, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x3x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73., 109., 13., 49., 85., 121., 25., 61., 97.,  133.,
      5.,  41., 77., 113., 17., 53., 89., 125., 29., 65., 101., 137.,
      9.,  45., 81., 117., 21., 57., 93., 129., 33., 69., 105., 141.,
      2.,  38., 74., 110., 14., 50., 86., 122., 26., 62., 98.,  134.,
      6.,  42., 78., 114., 18., 54., 90., 126., 30., 66., 102., 138.,
      10., 46., 82., 118., 22., 58., 94., 130., 34., 70., 106., 142.,
      3.,  39., 75., 111., 15., 51., 87., 123., 27., 63., 99.,  135.,
      7.,  43., 79., 115., 19., 55., 91., 127., 31., 67., 103., 139.,
      11., 47., 83., 119., 23., 59., 95., 131., 35., 71., 107., 143.,
      4.,  40., 76., 112., 16., 52., 88., 124., 28., 64., 100., 136.,
      8.,  44., 80., 116., 20., 56., 92., 128., 32., 68., 104., 140.,
      12., 48., 84., 120., 24., 60., 96., 132., 36., 72., 108., 144.};
  const std::vector<int> sizes = {4, 3, 3, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14.,
      15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28.,
      29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42.,
      43., 44., 45., 46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56.,
      57., 58., 59., 60., 61., 62., 63., 64., 65., 66., 67., 68., 69., 70.,
      71., 72., 73., 74., 75., 76., 77., 78., 79., 80., 81., 82., 83., 84.,
      85., 86., 87., 88., 89., 90., 91., 92., 93., 94., 95., 96.};
  const std::vector<int> sizes = {4, 3, 4, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  2.,  4.,  6.,  8.,  9.,  11., 13., 15., 10., 12.,
      14., 16., 17., 19., 21., 23., 18., 20., 22., 24., 25., 27., 29., 31.,
      26., 28., 30., 32., 33., 35., 37., 39., 34., 36., 38., 40., 41., 43.,
      45., 47., 42., 44., 46., 48., 49., 51., 53., 55., 50., 52., 54., 56.,
      57., 59., 61., 63., 58., 60., 62., 64., 65., 67., 69., 71., 66., 68.,
      70., 72., 73., 75., 77., 79., 74., 76., 78., 80., 81., 83., 85., 87.,
      82., 84., 86., 88., 89., 91., 93., 95., 90., 92., 94., 96.};
  const std::vector<int> sizes = {4, 3, 4, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  9.,  10., 17., 18., 3.,  4.,  11., 12., 19., 20., 5.,  6.,
      13., 14., 21., 22., 7.,  8.,  15., 16., 23., 24., 25., 26., 33., 34.,
      41., 42., 27., 28., 35., 36., 43., 44., 29., 30., 37., 38., 45., 46.,
      31., 32., 39., 40., 47., 48., 49., 50., 57., 58., 65., 66., 51., 52.,
      59., 60., 67., 68., 53., 54., 61., 62., 69., 70., 55., 56., 63., 64.,
      71., 72., 73., 74., 81., 82., 89., 90., 75., 76., 83., 84., 91., 92.,
      77., 78., 85., 86., 93., 94., 79., 80., 87., 88., 95., 96.};
  const std::vector<int> sizes = {4, 3, 4, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 2.,  10., 18., 3.,  11., 19., 4.,  12., 20., 5.,  13.,
      21., 6.,  14., 22., 7.,  15., 23., 8.,  16., 24., 25., 33., 41., 26.,
      34., 42., 27., 35., 43., 28., 36., 44., 29., 37., 45., 30., 38., 46.,
      31., 39., 47., 32., 40., 48., 49., 57., 65., 50., 58., 66., 51., 59.,
      67., 52., 60., 68., 53., 61., 69., 54., 62., 70., 55., 63., 71., 56.,
      64., 72., 73., 81., 89., 74., 82., 90., 75., 83., 91., 76., 84., 92.,
      77., 85., 93., 78., 86., 94., 79., 87., 95., 80., 88., 96.};
  const std::vector<int> sizes = {4, 3, 4, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23., 2.,  4.,
      6.,  8.,  10., 12., 14., 16., 18., 20., 22., 24., 25., 27., 29., 31.,
      33., 35., 37., 39., 41., 43., 45., 47., 26., 28., 30., 32., 34., 36.,
      38., 40., 42., 44., 46., 48., 49., 51., 53., 55., 57., 59., 61., 63.,
      65., 67., 69., 71., 50., 52., 54., 56., 58., 60., 62., 64., 66., 68.,
      70., 72., 73., 75., 77., 79., 81., 83., 85., 87., 89., 91., 93., 95.,
      74., 76., 78., 80., 82., 84., 86., 88., 90., 92., 94., 96.};
  const std::vector<int> sizes = {4, 3, 4, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 3.,  11., 19., 5.,  13., 21., 7.,  15., 23., 2.,  10.,
      18., 4.,  12., 20., 6.,  14., 22., 8.,  16., 24., 25., 33., 41., 27.,
      35., 43., 29., 37., 45., 31., 39., 47., 26., 34., 42., 28., 36., 44.,
      30., 38., 46., 32., 40., 48., 49., 57., 65., 51., 59., 67., 53., 61.,
      69., 55., 63., 71., 50., 58., 66., 52., 60., 68., 54., 62., 70., 56.,
      64., 72., 73., 81., 89., 75., 83., 91., 77., 85., 93., 79., 87., 95.,
      74., 82., 90., 76., 84., 92., 78., 86., 94., 80., 88., 96.};
  const std::vector<int> sizes = {4, 3, 4, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  25., 26., 27., 28., 29., 30.,
      31., 32., 49., 50., 51., 52., 53., 54., 55., 56., 73., 74., 75., 76.,
      77., 78., 79., 80., 9.,  10., 11., 12., 13., 14., 15., 16., 33., 34.,
      35., 36., 37., 38., 39., 40., 57., 58., 59., 60., 61., 62., 63., 64.,
      81., 82., 83., 84., 85., 86., 87., 88., 17., 18., 19., 20., 21., 22.,
      23., 24., 41., 42., 43., 44., 45., 46., 47., 48., 65., 66., 67., 68.,
      69., 70., 71., 72., 89., 90., 91., 92., 93., 94., 95., 96.};
  const std::vector<int> sizes = {4, 3, 4, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  2.,  4.,  6.,  8.,  25., 27., 29., 31., 26., 28.,
      30., 32., 49., 51., 53., 55., 50., 52., 54., 56., 73., 75., 77., 79.,
      74., 76., 78., 80., 9.,  11., 13., 15., 10., 12., 14., 16., 33., 35.,
      37., 39., 34., 36., 38., 40., 57., 59., 61., 63., 58., 60., 62., 64.,
      81., 83., 85., 87., 82., 84., 86., 88., 17., 19., 21., 23., 18., 20.,
      22., 24., 41., 43., 45., 47., 42., 44., 46., 48., 65., 67., 69., 71.,
      66., 68., 70., 72., 89., 91., 93., 95., 90., 92., 94., 96.};
  const std::vector<int> sizes = {4, 3, 4, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  25., 26., 49., 50., 73., 74., 3.,  4.,  27., 28., 51., 52.,
      75., 76., 5.,  6.,  29., 30., 53., 54., 77., 78., 7.,  8.,  31., 32.,
      55., 56., 79., 80., 9.,  10., 33., 34., 57., 58., 81., 82., 11., 12.,
      35., 36., 59., 60., 83., 84., 13., 14., 37., 38., 61., 62., 85., 86.,
      15., 16., 39., 40., 63., 64., 87., 88., 17., 18., 41., 42., 65., 66.,
      89., 90., 19., 20., 43., 44., 67., 68., 91., 92., 21., 22., 45., 46.,
      69., 70., 93., 94., 23., 24., 47., 48., 71., 72., 95., 96.};
  const std::vector<int> sizes = {4, 3, 4, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 2.,  26., 50., 74., 3.,  27., 51., 75., 4.,  28.,
      52., 76., 5.,  29., 53., 77., 6.,  30., 54., 78., 7.,  31., 55., 79.,
      8.,  32., 56., 80., 9.,  33., 57., 81., 10., 34., 58., 82., 11., 35.,
      59., 83., 12., 36., 60., 84., 13., 37., 61., 85., 14., 38., 62., 86.,
      15., 39., 63., 87., 16., 40., 64., 88., 17., 41., 65., 89., 18., 42.,
      66., 90., 19., 43., 67., 91., 20., 44., 68., 92., 21., 45., 69., 93.,
      22., 46., 70., 94., 23., 47., 71., 95., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 3, 4, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  25., 27., 29., 31., 49., 51., 53., 55., 73., 75.,
      77., 79., 2.,  4.,  6.,  8.,  26., 28., 30., 32., 50., 52., 54., 56.,
      74., 76., 78., 80., 9.,  11., 13., 15., 33., 35., 37., 39., 57., 59.,
      61., 63., 81., 83., 85., 87., 10., 12., 14., 16., 34., 36., 38., 40.,
      58., 60., 62., 64., 82., 84., 86., 88., 17., 19., 21., 23., 41., 43.,
      45., 47., 65., 67., 69., 71., 89., 91., 93., 95., 18., 20., 22., 24.,
      42., 44., 46., 48., 66., 68., 70., 72., 90., 92., 94., 96.};
  const std::vector<int> sizes = {4, 3, 4, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 3.,  27., 51., 75., 5.,  29., 53., 77., 7.,  31.,
      55., 79., 2.,  26., 50., 74., 4.,  28., 52., 76., 6.,  30., 54., 78.,
      8.,  32., 56., 80., 9.,  33., 57., 81., 11., 35., 59., 83., 13., 37.,
      61., 85., 15., 39., 63., 87., 10., 34., 58., 82., 12., 36., 60., 84.,
      14., 38., 62., 86., 16., 40., 64., 88., 17., 41., 65., 89., 19., 43.,
      67., 91., 21., 45., 69., 93., 23., 47., 71., 95., 18., 42., 66., 90.,
      20., 44., 68., 92., 22., 46., 70., 94., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 3, 4, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  9.,  10., 17., 18., 25., 26., 33., 34., 41., 42., 49., 50.,
      57., 58., 65., 66., 73., 74., 81., 82., 89., 90., 3.,  4.,  11., 12.,
      19., 20., 27., 28., 35., 36., 43., 44., 51., 52., 59., 60., 67., 68.,
      75., 76., 83., 84., 91., 92., 5.,  6.,  13., 14., 21., 22., 29., 30.,
      37., 38., 45., 46., 53., 54., 61., 62., 69., 70., 77., 78., 85., 86.,
      93., 94., 7.,  8.,  15., 16., 23., 24., 31., 32., 39., 40., 47., 48.,
      55., 56., 63., 64., 71., 72., 79., 80., 87., 88., 95., 96.};
  const std::vector<int> sizes = {4, 3, 4, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 2.,  10., 18., 25., 33., 41., 26., 34., 42., 49., 57.,
      65., 50., 58., 66., 73., 81., 89., 74., 82., 90., 3.,  11., 19., 4.,
      12., 20., 27., 35., 43., 28., 36., 44., 51., 59., 67., 52., 60., 68.,
      75., 83., 91., 76., 84., 92., 5.,  13., 21., 6.,  14., 22., 29., 37.,
      45., 30., 38., 46., 53., 61., 69., 54., 62., 70., 77., 85., 93., 78.,
      86., 94., 7.,  15., 23., 8.,  16., 24., 31., 39., 47., 32., 40., 48.,
      55., 63., 71., 56., 64., 72., 79., 87., 95., 80., 88., 96.};
  const std::vector<int> sizes = {4, 3, 4, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  25., 26., 49., 50., 73., 74., 9.,  10., 33., 34., 57., 58.,
      81., 82., 17., 18., 41., 42., 65., 66., 89., 90., 3.,  4.,  27., 28.,
      51., 52., 75., 76., 11., 12., 35., 36., 59., 60., 83., 84., 19., 20.,
      43., 44., 67., 68., 91., 92., 5.,  6.,  29., 30., 53., 54., 77., 78.,
      13., 14., 37., 38., 61., 62., 85., 86., 21., 22., 45., 46., 69., 70.,
      93., 94., 7.,  8.,  31., 32., 55., 56., 79., 80., 15., 16., 39., 40.,
      63., 64., 87., 88., 23., 24., 47., 48., 71., 72., 95., 96.};
  const std::vector<int> sizes = {4, 3, 4, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 2.,  26., 50., 74., 9.,  33., 57., 81., 10., 34.,
      58., 82., 17., 41., 65., 89., 18., 42., 66., 90., 3.,  27., 51., 75.,
      4.,  28., 52., 76., 11., 35., 59., 83., 12., 36., 60., 84., 19., 43.,
      67., 91., 20., 44., 68., 92., 5.,  29., 53., 77., 6.,  30., 54., 78.,
      13., 37., 61., 85., 14., 38., 62., 86., 21., 45., 69., 93., 22., 46.,
      70., 94., 7.,  31., 55., 79., 8.,  32., 56., 80., 15., 39., 63., 87.,
      16., 40., 64., 88., 23., 47., 71., 95., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 3, 4, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 33., 41., 49., 57., 65., 73., 81., 89., 2.,  10.,
      18., 26., 34., 42., 50., 58., 66., 74., 82., 90., 3.,  11., 19., 27.,
      35., 43., 51., 59., 67., 75., 83., 91., 4.,  12., 20., 28., 36., 44.,
      52., 60., 68., 76., 84., 92., 5.,  13., 21., 29., 37., 45., 53., 61.,
      69., 77., 85., 93., 6.,  14., 22., 30., 38., 46., 54., 62., 70., 78.,
      86., 94., 7.,  15., 23., 31., 39., 47., 55., 63., 71., 79., 87., 95.,
      8.,  16., 24., 32., 40., 48., 56., 64., 72., 80., 88., 96.};
  const std::vector<int> sizes = {4, 3, 4, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 9.,  33., 57., 81., 17., 41., 65., 89., 2.,  26.,
      50., 74., 10., 34., 58., 82., 18., 42., 66., 90., 3.,  27., 51., 75.,
      11., 35., 59., 83., 19., 43., 67., 91., 4.,  28., 52., 76., 12., 36.,
      60., 84., 20., 44., 68., 92., 5.,  29., 53., 77., 13., 37., 61., 85.,
      21., 45., 69., 93., 6.,  30., 54., 78., 14., 38., 62., 86., 22., 46.,
      70., 94., 7.,  31., 55., 79., 15., 39., 63., 87., 23., 47., 71., 95.,
      8.,  32., 56., 80., 16., 40., 64., 88., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 3, 4, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23., 25., 27.,
      29., 31., 33., 35., 37., 39., 41., 43., 45., 47., 49., 51., 53., 55.,
      57., 59., 61., 63., 65., 67., 69., 71., 73., 75., 77., 79., 81., 83.,
      85., 87., 89., 91., 93., 95., 2.,  4.,  6.,  8.,  10., 12., 14., 16.,
      18., 20., 22., 24., 26., 28., 30., 32., 34., 36., 38., 40., 42., 44.,
      46., 48., 50., 52., 54., 56., 58., 60., 62., 64., 66., 68., 70., 72.,
      74., 76., 78., 80., 82., 84., 86., 88., 90., 92., 94., 96.};
  const std::vector<int> sizes = {4, 3, 4, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 3.,  11., 19., 5.,  13., 21., 7.,  15., 23., 25., 33.,
      41., 27., 35., 43., 29., 37., 45., 31., 39., 47., 49., 57., 65., 51.,
      59., 67., 53., 61., 69., 55., 63., 71., 73., 81., 89., 75., 83., 91.,
      77., 85., 93., 79., 87., 95., 2.,  10., 18., 4.,  12., 20., 6.,  14.,
      22., 8.,  16., 24., 26., 34., 42., 28., 36., 44., 30., 38., 46., 32.,
      40., 48., 50., 58., 66., 52., 60., 68., 54., 62., 70., 56., 64., 72.,
      74., 82., 90., 76., 84., 92., 78., 86., 94., 80., 88., 96.};
  const std::vector<int> sizes = {4, 3, 4, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  25., 27., 29., 31., 49., 51., 53., 55., 73., 75.,
      77., 79., 9.,  11., 13., 15., 33., 35., 37., 39., 57., 59., 61., 63.,
      81., 83., 85., 87., 17., 19., 21., 23., 41., 43., 45., 47., 65., 67.,
      69., 71., 89., 91., 93., 95., 2.,  4.,  6.,  8.,  26., 28., 30., 32.,
      50., 52., 54., 56., 74., 76., 78., 80., 10., 12., 14., 16., 34., 36.,
      38., 40., 58., 60., 62., 64., 82., 84., 86., 88., 18., 20., 22., 24.,
      42., 44., 46., 48., 66., 68., 70., 72., 90., 92., 94., 96.};
  const std::vector<int> sizes = {4, 3, 4, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 3.,  27., 51., 75., 5.,  29., 53., 77., 7.,  31.,
      55., 79., 9.,  33., 57., 81., 11., 35., 59., 83., 13., 37., 61., 85.,
      15., 39., 63., 87., 17., 41., 65., 89., 19., 43., 67., 91., 21., 45.,
      69., 93., 23., 47., 71., 95., 2.,  26., 50., 74., 4.,  28., 52., 76.,
      6.,  30., 54., 78., 8.,  32., 56., 80., 10., 34., 58., 82., 12., 36.,
      60., 84., 14., 38., 62., 86., 16., 40., 64., 88., 18., 42., 66., 90.,
      20., 44., 68., 92., 22., 46., 70., 94., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 3, 4, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  9.,  17., 25., 33., 41., 49., 57., 65., 73., 81., 89., 3.,  11.,
      19., 27., 35., 43., 51., 59., 67., 75., 83., 91., 5.,  13., 21., 29.,
      37., 45., 53., 61., 69., 77., 85., 93., 7.,  15., 23., 31., 39., 47.,
      55., 63., 71., 79., 87., 95., 2.,  10., 18., 26., 34., 42., 50., 58.,
      66., 74., 82., 90., 4.,  12., 20., 28., 36., 44., 52., 60., 68., 76.,
      84., 92., 6.,  14., 22., 30., 38., 46., 54., 62., 70., 78., 86., 94.,
      8.,  16., 24., 32., 40., 48., 56., 64., 72., 80., 88., 96.};
  const std::vector<int> sizes = {4, 3, 4, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 9.,  33., 57., 81., 17., 41., 65., 89., 3.,  27.,
      51., 75., 11., 35., 59., 83., 19., 43., 67., 91., 5.,  29., 53., 77.,
      13., 37., 61., 85., 21., 45., 69., 93., 7.,  31., 55., 79., 15., 39.,
      63., 87., 23., 47., 71., 95., 2.,  26., 50., 74., 10., 34., 58., 82.,
      18., 42., 66., 90., 4.,  28., 52., 76., 12., 36., 60., 84., 20., 44.,
      68., 92., 6.,  30., 54., 78., 14., 38., 62., 86., 22., 46., 70., 94.,
      8.,  32., 56., 80., 16., 40., 64., 88., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 3, 4, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13.,  14.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 105., 106., 107., 108.,
      109., 110., 111., 112., 113., 114., 115., 116., 117., 118., 119., 120.,
      121., 122., 123., 124., 125., 126., 127., 128., 129., 130., 131., 132.,
      133., 134., 135., 136., 137., 138., 139., 140., 141., 142., 143., 144.};
  const std::vector<int> sizes = {4, 3, 4, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   7.,   10.,  2.,   5.,   8.,   11.,  3.,   6.,   9.,   12.,
      13.,  16.,  19.,  22.,  14.,  17.,  20.,  23.,  15.,  18.,  21.,  24.,
      25.,  28.,  31.,  34.,  26.,  29.,  32.,  35.,  27.,  30.,  33.,  36.,
      37.,  40.,  43.,  46.,  38.,  41.,  44.,  47.,  39.,  42.,  45.,  48.,
      49.,  52.,  55.,  58.,  50.,  53.,  56.,  59.,  51.,  54.,  57.,  60.,
      61.,  64.,  67.,  70.,  62.,  65.,  68.,  71.,  63.,  66.,  69.,  72.,
      73.,  76.,  79.,  82.,  74.,  77.,  80.,  83.,  75.,  78.,  81.,  84.,
      85.,  88.,  91.,  94.,  86.,  89.,  92.,  95.,  87.,  90.,  93.,  96.,
      97.,  100., 103., 106., 98.,  101., 104., 107., 99.,  102., 105., 108.,
      109., 112., 115., 118., 110., 113., 116., 119., 111., 114., 117., 120.,
      121., 124., 127., 130., 122., 125., 128., 131., 123., 126., 129., 132.,
      133., 136., 139., 142., 134., 137., 140., 143., 135., 138., 141., 144.};
  const std::vector<int> sizes = {4, 3, 4, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   13.,  14.,  15.,  25.,  26.,  27.,  4.,   5.,   6.,
      16.,  17.,  18.,  28.,  29.,  30.,  7.,   8.,   9.,   19.,  20.,  21.,
      31.,  32.,  33.,  10.,  11.,  12.,  22.,  23.,  24.,  34.,  35.,  36.,
      37.,  38.,  39.,  49.,  50.,  51.,  61.,  62.,  63.,  40.,  41.,  42.,
      52.,  53.,  54.,  64.,  65.,  66.,  43.,  44.,  45.,  55.,  56.,  57.,
      67.,  68.,  69.,  46.,  47.,  48.,  58.,  59.,  60.,  70.,  71.,  72.,
      73.,  74.,  75.,  85.,  86.,  87.,  97.,  98.,  99.,  76.,  77.,  78.,
      88.,  89.,  90.,  100., 101., 102., 79.,  80.,  81.,  91.,  92.,  93.,
      103., 104., 105., 82.,  83.,  84.,  94.,  95.,  96.,  106., 107., 108.,
      109., 110., 111., 121., 122., 123., 133., 134., 135., 112., 113., 114.,
      124., 125., 126., 136., 137., 138., 115., 116., 117., 127., 128., 129.,
      139., 140., 141., 118., 119., 120., 130., 131., 132., 142., 143., 144.};
  const std::vector<int> sizes = {4, 3, 4, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  2.,   14.,  26.,  3.,   15.,  27.,  4.,   16.,  28.,
      5.,   17.,  29.,  6.,   18.,  30.,  7.,   19.,  31.,  8.,   20.,  32.,
      9.,   21.,  33.,  10.,  22.,  34.,  11.,  23.,  35.,  12.,  24.,  36.,
      37.,  49.,  61.,  38.,  50.,  62.,  39.,  51.,  63.,  40.,  52.,  64.,
      41.,  53.,  65.,  42.,  54.,  66.,  43.,  55.,  67.,  44.,  56.,  68.,
      45.,  57.,  69.,  46.,  58.,  70.,  47.,  59.,  71.,  48.,  60.,  72.,
      73.,  85.,  97.,  74.,  86.,  98.,  75.,  87.,  99.,  76.,  88.,  100.,
      77.,  89.,  101., 78.,  90.,  102., 79.,  91.,  103., 80.,  92.,  104.,
      81.,  93.,  105., 82.,  94.,  106., 83.,  95.,  107., 84.,  96.,  108.,
      109., 121., 133., 110., 122., 134., 111., 123., 135., 112., 124., 136.,
      113., 125., 137., 114., 126., 138., 115., 127., 139., 116., 128., 140.,
      117., 129., 141., 118., 130., 142., 119., 131., 143., 120., 132., 144.};
  const std::vector<int> sizes = {4, 3, 4, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   7.,   10.,  13.,  16.,  19.,  22.,  25.,  28.,  31.,  34.,
      2.,   5.,   8.,   11.,  14.,  17.,  20.,  23.,  26.,  29.,  32.,  35.,
      3.,   6.,   9.,   12.,  15.,  18.,  21.,  24.,  27.,  30.,  33.,  36.,
      37.,  40.,  43.,  46.,  49.,  52.,  55.,  58.,  61.,  64.,  67.,  70.,
      38.,  41.,  44.,  47.,  50.,  53.,  56.,  59.,  62.,  65.,  68.,  71.,
      39.,  42.,  45.,  48.,  51.,  54.,  57.,  60.,  63.,  66.,  69.,  72.,
      73.,  76.,  79.,  82.,  85.,  88.,  91.,  94.,  97.,  100., 103., 106.,
      74.,  77.,  80.,  83.,  86.,  89.,  92.,  95.,  98.,  101., 104., 107.,
      75.,  78.,  81.,  84.,  87.,  90.,  93.,  96.,  99.,  102., 105., 108.,
      109., 112., 115., 118., 121., 124., 127., 130., 133., 136., 139., 142.,
      110., 113., 116., 119., 122., 125., 128., 131., 134., 137., 140., 143.,
      111., 114., 117., 120., 123., 126., 129., 132., 135., 138., 141., 144.};
  const std::vector<int> sizes = {4, 3, 4, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  4.,   16.,  28.,  7.,   19.,  31.,  10.,  22.,  34.,
      2.,   14.,  26.,  5.,   17.,  29.,  8.,   20.,  32.,  11.,  23.,  35.,
      3.,   15.,  27.,  6.,   18.,  30.,  9.,   21.,  33.,  12.,  24.,  36.,
      37.,  49.,  61.,  40.,  52.,  64.,  43.,  55.,  67.,  46.,  58.,  70.,
      38.,  50.,  62.,  41.,  53.,  65.,  44.,  56.,  68.,  47.,  59.,  71.,
      39.,  51.,  63.,  42.,  54.,  66.,  45.,  57.,  69.,  48.,  60.,  72.,
      73.,  85.,  97.,  76.,  88.,  100., 79.,  91.,  103., 82.,  94.,  106.,
      74.,  86.,  98.,  77.,  89.,  101., 80.,  92.,  104., 83.,  95.,  107.,
      75.,  87.,  99.,  78.,  90.,  102., 81.,  93.,  105., 84.,  96.,  108.,
      109., 121., 133., 112., 124., 136., 115., 127., 139., 118., 130., 142.,
      110., 122., 134., 113., 125., 137., 116., 128., 140., 119., 131., 143.,
      111., 123., 135., 114., 126., 138., 117., 129., 141., 120., 132., 144.};
  const std::vector<int> sizes = {4, 3, 4, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      109., 110., 111., 112., 113., 114., 115., 116., 117., 118., 119., 120.,
      13.,  14.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      121., 122., 123., 124., 125., 126., 127., 128., 129., 130., 131., 132.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 105., 106., 107., 108.,
      133., 134., 135., 136., 137., 138., 139., 140., 141., 142., 143., 144.};
  const std::vector<int> sizes = {4, 3, 4, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   7.,   10.,  2.,   5.,   8.,   11.,  3.,   6.,   9.,   12.,
      37.,  40.,  43.,  46.,  38.,  41.,  44.,  47.,  39.,  42.,  45.,  48.,
      73.,  76.,  79.,  82.,  74.,  77.,  80.,  83.,  75.,  78.,  81.,  84.,
      109., 112., 115., 118., 110., 113., 116., 119., 111., 114., 117., 120.,
      13.,  16.,  19.,  22.,  14.,  17.,  20.,  23.,  15.,  18.,  21.,  24.,
      49.,  52.,  55.,  58.,  50.,  53.,  56.,  59.,  51.,  54.,  57.,  60.,
      85.,  88.,  91.,  94.,  86.,  89.,  92.,  95.,  87.,  90.,  93.,  96.,
      121., 124., 127., 130., 122., 125., 128., 131., 123., 126., 129., 132.,
      25.,  28.,  31.,  34.,  26.,  29.,  32.,  35.,  27.,  30.,  33.,  36.,
      61.,  64.,  67.,  70.,  62.,  65.,  68.,  71.,  63.,  66.,  69.,  72.,
      97.,  100., 103., 106., 98.,  101., 104., 107., 99.,  102., 105., 108.,
      133., 136., 139., 142., 134., 137., 140., 143., 135., 138., 141., 144.};
  const std::vector<int> sizes = {4, 3, 4, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  37., 38., 39., 73.,  74.,  75.,  109., 110., 111.,
      4.,  5.,  6.,  40., 41., 42., 76.,  77.,  78.,  112., 113., 114.,
      7.,  8.,  9.,  43., 44., 45., 79.,  80.,  81.,  115., 116., 117.,
      10., 11., 12., 46., 47., 48., 82.,  83.,  84.,  118., 119., 120.,
      13., 14., 15., 49., 50., 51., 85.,  86.,  87.,  121., 122., 123.,
      16., 17., 18., 52., 53., 54., 88.,  89.,  90.,  124., 125., 126.,
      19., 20., 21., 55., 56., 57., 91.,  92.,  93.,  127., 128., 129.,
      22., 23., 24., 58., 59., 60., 94.,  95.,  96.,  130., 131., 132.,
      25., 26., 27., 61., 62., 63., 97.,  98.,  99.,  133., 134., 135.,
      28., 29., 30., 64., 65., 66., 100., 101., 102., 136., 137., 138.,
      31., 32., 33., 67., 68., 69., 103., 104., 105., 139., 140., 141.,
      34., 35., 36., 70., 71., 72., 106., 107., 108., 142., 143., 144.};
  const std::vector<int> sizes = {4, 3, 4, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  109., 2.,  38., 74.,  110., 3.,  39., 75.,  111.,
      4.,  40., 76.,  112., 5.,  41., 77.,  113., 6.,  42., 78.,  114.,
      7.,  43., 79.,  115., 8.,  44., 80.,  116., 9.,  45., 81.,  117.,
      10., 46., 82.,  118., 11., 47., 83.,  119., 12., 48., 84.,  120.,
      13., 49., 85.,  121., 14., 50., 86.,  122., 15., 51., 87.,  123.,
      16., 52., 88.,  124., 17., 53., 89.,  125., 18., 54., 90.,  126.,
      19., 55., 91.,  127., 20., 56., 92.,  128., 21., 57., 93.,  129.,
      22., 58., 94.,  130., 23., 59., 95.,  131., 24., 60., 96.,  132.,
      25., 61., 97.,  133., 26., 62., 98.,  134., 27., 63., 99.,  135.,
      28., 64., 100., 136., 29., 65., 101., 137., 30., 66., 102., 138.,
      31., 67., 103., 139., 32., 68., 104., 140., 33., 69., 105., 141.,
      34., 70., 106., 142., 35., 71., 107., 143., 36., 72., 108., 144.};
  const std::vector<int> sizes = {4, 3, 4, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   7.,   10.,  37.,  40.,  43.,  46.,  73.,  76.,  79.,  82.,
      109., 112., 115., 118., 2.,   5.,   8.,   11.,  38.,  41.,  44.,  47.,
      74.,  77.,  80.,  83.,  110., 113., 116., 119., 3.,   6.,   9.,   12.,
      39.,  42.,  45.,  48.,  75.,  78.,  81.,  84.,  111., 114., 117., 120.,
      13.,  16.,  19.,  22.,  49.,  52.,  55.,  58.,  85.,  88.,  91.,  94.,
      121., 124., 127., 130., 14.,  17.,  20.,  23.,  50.,  53.,  56.,  59.,
      86.,  89.,  92.,  95.,  122., 125., 128., 131., 15.,  18.,  21.,  24.,
      51.,  54.,  57.,  60.,  87.,  90.,  93.,  96.,  123., 126., 129., 132.,
      25.,  28.,  31.,  34.,  61.,  64.,  67.,  70.,  97.,  100., 103., 106.,
      133., 136., 139., 142., 26.,  29.,  32.,  35.,  62.,  65.,  68.,  71.,
      98.,  101., 104., 107., 134., 137., 140., 143., 27.,  30.,  33.,  36.,
      63.,  66.,  69.,  72.,  99.,  102., 105., 108., 135., 138., 141., 144.};
  const std::vector<int> sizes = {4, 3, 4, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  109., 4.,  40., 76.,  112., 7.,  43., 79.,  115.,
      10., 46., 82.,  118., 2.,  38., 74.,  110., 5.,  41., 77.,  113.,
      8.,  44., 80.,  116., 11., 47., 83.,  119., 3.,  39., 75.,  111.,
      6.,  42., 78.,  114., 9.,  45., 81.,  117., 12., 48., 84.,  120.,
      13., 49., 85.,  121., 16., 52., 88.,  124., 19., 55., 91.,  127.,
      22., 58., 94.,  130., 14., 50., 86.,  122., 17., 53., 89.,  125.,
      20., 56., 92.,  128., 23., 59., 95.,  131., 15., 51., 87.,  123.,
      18., 54., 90.,  126., 21., 57., 93.,  129., 24., 60., 96.,  132.,
      25., 61., 97.,  133., 28., 64., 100., 136., 31., 67., 103., 139.,
      34., 70., 106., 142., 26., 62., 98.,  134., 29., 65., 101., 137.,
      32., 68., 104., 140., 35., 71., 107., 143., 27., 63., 99.,  135.,
      30., 66., 102., 138., 33., 69., 105., 141., 36., 72., 108., 144.};
  const std::vector<int> sizes = {4, 3, 4, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   13.,  14.,  15.,  25.,  26.,  27.,  37.,  38.,  39.,
      49.,  50.,  51.,  61.,  62.,  63.,  73.,  74.,  75.,  85.,  86.,  87.,
      97.,  98.,  99.,  109., 110., 111., 121., 122., 123., 133., 134., 135.,
      4.,   5.,   6.,   16.,  17.,  18.,  28.,  29.,  30.,  40.,  41.,  42.,
      52.,  53.,  54.,  64.,  65.,  66.,  76.,  77.,  78.,  88.,  89.,  90.,
      100., 101., 102., 112., 113., 114., 124., 125., 126., 136., 137., 138.,
      7.,   8.,   9.,   19.,  20.,  21.,  31.,  32.,  33.,  43.,  44.,  45.,
      55.,  56.,  57.,  67.,  68.,  69.,  79.,  80.,  81.,  91.,  92.,  93.,
      103., 104., 105., 115., 116., 117., 127., 128., 129., 139., 140., 141.,
      10.,  11.,  12.,  22.,  23.,  24.,  34.,  35.,  36.,  46.,  47.,  48.,
      58.,  59.,  60.,  70.,  71.,  72.,  82.,  83.,  84.,  94.,  95.,  96.,
      106., 107., 108., 118., 119., 120., 130., 131., 132., 142., 143., 144.};
  const std::vector<int> sizes = {4, 3, 4, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25.,  2.,   14.,  26.,  3.,   15.,  27.,  37.,  49.,  61.,
      38., 50., 62.,  39.,  51.,  63.,  73.,  85.,  97.,  74.,  86.,  98.,
      75., 87., 99.,  109., 121., 133., 110., 122., 134., 111., 123., 135.,
      4.,  16., 28.,  5.,   17.,  29.,  6.,   18.,  30.,  40.,  52.,  64.,
      41., 53., 65.,  42.,  54.,  66.,  76.,  88.,  100., 77.,  89.,  101.,
      78., 90., 102., 112., 124., 136., 113., 125., 137., 114., 126., 138.,
      7.,  19., 31.,  8.,   20.,  32.,  9.,   21.,  33.,  43.,  55.,  67.,
      44., 56., 68.,  45.,  57.,  69.,  79.,  91.,  103., 80.,  92.,  104.,
      81., 93., 105., 115., 127., 139., 116., 128., 140., 117., 129., 141.,
      10., 22., 34.,  11.,  23.,  35.,  12.,  24.,  36.,  46.,  58.,  70.,
      47., 59., 71.,  48.,  60.,  72.,  82.,  94.,  106., 83.,  95.,  107.,
      84., 96., 108., 118., 130., 142., 119., 131., 143., 120., 132., 144.};
  const std::vector<int> sizes = {4, 3, 4, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  37., 38., 39., 73.,  74.,  75.,  109., 110., 111.,
      13., 14., 15., 49., 50., 51., 85.,  86.,  87.,  121., 122., 123.,
      25., 26., 27., 61., 62., 63., 97.,  98.,  99.,  133., 134., 135.,
      4.,  5.,  6.,  40., 41., 42., 76.,  77.,  78.,  112., 113., 114.,
      16., 17., 18., 52., 53., 54., 88.,  89.,  90.,  124., 125., 126.,
      28., 29., 30., 64., 65., 66., 100., 101., 102., 136., 137., 138.,
      7.,  8.,  9.,  43., 44., 45., 79.,  80.,  81.,  115., 116., 117.,
      19., 20., 21., 55., 56., 57., 91.,  92.,  93.,  127., 128., 129.,
      31., 32., 33., 67., 68., 69., 103., 104., 105., 139., 140., 141.,
      10., 11., 12., 46., 47., 48., 82.,  83.,  84.,  118., 119., 120.,
      22., 23., 24., 58., 59., 60., 94.,  95.,  96.,  130., 131., 132.,
      34., 35., 36., 70., 71., 72., 106., 107., 108., 142., 143., 144.};
  const std::vector<int> sizes = {4, 3, 4, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  109., 2.,  38., 74.,  110., 3.,  39., 75.,  111.,
      13., 49., 85.,  121., 14., 50., 86.,  122., 15., 51., 87.,  123.,
      25., 61., 97.,  133., 26., 62., 98.,  134., 27., 63., 99.,  135.,
      4.,  40., 76.,  112., 5.,  41., 77.,  113., 6.,  42., 78.,  114.,
      16., 52., 88.,  124., 17., 53., 89.,  125., 18., 54., 90.,  126.,
      28., 64., 100., 136., 29., 65., 101., 137., 30., 66., 102., 138.,
      7.,  43., 79.,  115., 8.,  44., 80.,  116., 9.,  45., 81.,  117.,
      19., 55., 91.,  127., 20., 56., 92.,  128., 21., 57., 93.,  129.,
      31., 67., 103., 139., 32., 68., 104., 140., 33., 69., 105., 141.,
      10., 46., 82.,  118., 11., 47., 83.,  119., 12., 48., 84.,  120.,
      22., 58., 94.,  130., 23., 59., 95.,  131., 24., 60., 96.,  132.,
      34., 70., 106., 142., 35., 71., 107., 143., 36., 72., 108., 144.};
  const std::vector<int> sizes = {4, 3, 4, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 49., 61., 73., 85., 97.,  109., 121., 133.,
      2.,  14., 26., 38., 50., 62., 74., 86., 98.,  110., 122., 134.,
      3.,  15., 27., 39., 51., 63., 75., 87., 99.,  111., 123., 135.,
      4.,  16., 28., 40., 52., 64., 76., 88., 100., 112., 124., 136.,
      5.,  17., 29., 41., 53., 65., 77., 89., 101., 113., 125., 137.,
      6.,  18., 30., 42., 54., 66., 78., 90., 102., 114., 126., 138.,
      7.,  19., 31., 43., 55., 67., 79., 91., 103., 115., 127., 139.,
      8.,  20., 32., 44., 56., 68., 80., 92., 104., 116., 128., 140.,
      9.,  21., 33., 45., 57., 69., 81., 93., 105., 117., 129., 141.,
      10., 22., 34., 46., 58., 70., 82., 94., 106., 118., 130., 142.,
      11., 23., 35., 47., 59., 71., 83., 95., 107., 119., 131., 143.,
      12., 24., 36., 48., 60., 72., 84., 96., 108., 120., 132., 144.};
  const std::vector<int> sizes = {4, 3, 4, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73., 109., 13., 49., 85., 121., 25., 61., 97.,  133.,
      2.,  38., 74., 110., 14., 50., 86., 122., 26., 62., 98.,  134.,
      3.,  39., 75., 111., 15., 51., 87., 123., 27., 63., 99.,  135.,
      4.,  40., 76., 112., 16., 52., 88., 124., 28., 64., 100., 136.,
      5.,  41., 77., 113., 17., 53., 89., 125., 29., 65., 101., 137.,
      6.,  42., 78., 114., 18., 54., 90., 126., 30., 66., 102., 138.,
      7.,  43., 79., 115., 19., 55., 91., 127., 31., 67., 103., 139.,
      8.,  44., 80., 116., 20., 56., 92., 128., 32., 68., 104., 140.,
      9.,  45., 81., 117., 21., 57., 93., 129., 33., 69., 105., 141.,
      10., 46., 82., 118., 22., 58., 94., 130., 34., 70., 106., 142.,
      11., 47., 83., 119., 23., 59., 95., 131., 35., 71., 107., 143.,
      12., 48., 84., 120., 24., 60., 96., 132., 36., 72., 108., 144.};
  const std::vector<int> sizes = {4, 3, 4, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   7.,   10.,  13.,  16.,  19.,  22.,  25.,  28.,  31.,  34.,
      37.,  40.,  43.,  46.,  49.,  52.,  55.,  58.,  61.,  64.,  67.,  70.,
      73.,  76.,  79.,  82.,  85.,  88.,  91.,  94.,  97.,  100., 103., 106.,
      109., 112., 115., 118., 121., 124., 127., 130., 133., 136., 139., 142.,
      2.,   5.,   8.,   11.,  14.,  17.,  20.,  23.,  26.,  29.,  32.,  35.,
      38.,  41.,  44.,  47.,  50.,  53.,  56.,  59.,  62.,  65.,  68.,  71.,
      74.,  77.,  80.,  83.,  86.,  89.,  92.,  95.,  98.,  101., 104., 107.,
      110., 113., 116., 119., 122., 125., 128., 131., 134., 137., 140., 143.,
      3.,   6.,   9.,   12.,  15.,  18.,  21.,  24.,  27.,  30.,  33.,  36.,
      39.,  42.,  45.,  48.,  51.,  54.,  57.,  60.,  63.,  66.,  69.,  72.,
      75.,  78.,  81.,  84.,  87.,  90.,  93.,  96.,  99.,  102., 105., 108.,
      111., 114., 117., 120., 123., 126., 129., 132., 135., 138., 141., 144.};
  const std::vector<int> sizes = {4, 3, 4, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  4.,   16.,  28.,  7.,   19.,  31.,  10.,  22.,  34.,
      37.,  49.,  61.,  40.,  52.,  64.,  43.,  55.,  67.,  46.,  58.,  70.,
      73.,  85.,  97.,  76.,  88.,  100., 79.,  91.,  103., 82.,  94.,  106.,
      109., 121., 133., 112., 124., 136., 115., 127., 139., 118., 130., 142.,
      2.,   14.,  26.,  5.,   17.,  29.,  8.,   20.,  32.,  11.,  23.,  35.,
      38.,  50.,  62.,  41.,  53.,  65.,  44.,  56.,  68.,  47.,  59.,  71.,
      74.,  86.,  98.,  77.,  89.,  101., 80.,  92.,  104., 83.,  95.,  107.,
      110., 122., 134., 113., 125., 137., 116., 128., 140., 119., 131., 143.,
      3.,   15.,  27.,  6.,   18.,  30.,  9.,   21.,  33.,  12.,  24.,  36.,
      39.,  51.,  63.,  42.,  54.,  66.,  45.,  57.,  69.,  48.,  60.,  72.,
      75.,  87.,  99.,  78.,  90.,  102., 81.,  93.,  105., 84.,  96.,  108.,
      111., 123., 135., 114., 126., 138., 117., 129., 141., 120., 132., 144.};
  const std::vector<int> sizes = {4, 3, 4, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   7.,   10.,  37.,  40.,  43.,  46.,  73.,  76.,  79.,  82.,
      109., 112., 115., 118., 13.,  16.,  19.,  22.,  49.,  52.,  55.,  58.,
      85.,  88.,  91.,  94.,  121., 124., 127., 130., 25.,  28.,  31.,  34.,
      61.,  64.,  67.,  70.,  97.,  100., 103., 106., 133., 136., 139., 142.,
      2.,   5.,   8.,   11.,  38.,  41.,  44.,  47.,  74.,  77.,  80.,  83.,
      110., 113., 116., 119., 14.,  17.,  20.,  23.,  50.,  53.,  56.,  59.,
      86.,  89.,  92.,  95.,  122., 125., 128., 131., 26.,  29.,  32.,  35.,
      62.,  65.,  68.,  71.,  98.,  101., 104., 107., 134., 137., 140., 143.,
      3.,   6.,   9.,   12.,  39.,  42.,  45.,  48.,  75.,  78.,  81.,  84.,
      111., 114., 117., 120., 15.,  18.,  21.,  24.,  51.,  54.,  57.,  60.,
      87.,  90.,  93.,  96.,  123., 126., 129., 132., 27.,  30.,  33.,  36.,
      63.,  66.,  69.,  72.,  99.,  102., 105., 108., 135., 138., 141., 144.};
  const std::vector<int> sizes = {4, 3, 4, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  109., 4.,  40., 76.,  112., 7.,  43., 79.,  115.,
      10., 46., 82.,  118., 13., 49., 85.,  121., 16., 52., 88.,  124.,
      19., 55., 91.,  127., 22., 58., 94.,  130., 25., 61., 97.,  133.,
      28., 64., 100., 136., 31., 67., 103., 139., 34., 70., 106., 142.,
      2.,  38., 74.,  110., 5.,  41., 77.,  113., 8.,  44., 80.,  116.,
      11., 47., 83.,  119., 14., 50., 86.,  122., 17., 53., 89.,  125.,
      20., 56., 92.,  128., 23., 59., 95.,  131., 26., 62., 98.,  134.,
      29., 65., 101., 137., 32., 68., 104., 140., 35., 71., 107., 143.,
      3.,  39., 75.,  111., 6.,  42., 78.,  114., 9.,  45., 81.,  117.,
      12., 48., 84.,  120., 15., 51., 87.,  123., 18., 54., 90.,  126.,
      21., 57., 93.,  129., 24., 60., 96.,  132., 27., 63., 99.,  135.,
      30., 66., 102., 138., 33., 69., 105., 141., 36., 72., 108., 144.};
  const std::vector<int> sizes = {4, 3, 4, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  13., 25., 37., 49., 61., 73., 85., 97.,  109., 121., 133.,
      4.,  16., 28., 40., 52., 64., 76., 88., 100., 112., 124., 136.,
      7.,  19., 31., 43., 55., 67., 79., 91., 103., 115., 127., 139.,
      10., 22., 34., 46., 58., 70., 82., 94., 106., 118., 130., 142.,
      2.,  14., 26., 38., 50., 62., 74., 86., 98.,  110., 122., 134.,
      5.,  17., 29., 41., 53., 65., 77., 89., 101., 113., 125., 137.,
      8.,  20., 32., 44., 56., 68., 80., 92., 104., 116., 128., 140.,
      11., 23., 35., 47., 59., 71., 83., 95., 107., 119., 131., 143.,
      3.,  15., 27., 39., 51., 63., 75., 87., 99.,  111., 123., 135.,
      6.,  18., 30., 42., 54., 66., 78., 90., 102., 114., 126., 138.,
      9.,  21., 33., 45., 57., 69., 81., 93., 105., 117., 129., 141.,
      12., 24., 36., 48., 60., 72., 84., 96., 108., 120., 132., 144.};
  const std::vector<int> sizes = {4, 3, 4, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73., 109., 13., 49., 85., 121., 25., 61., 97.,  133.,
      4.,  40., 76., 112., 16., 52., 88., 124., 28., 64., 100., 136.,
      7.,  43., 79., 115., 19., 55., 91., 127., 31., 67., 103., 139.,
      10., 46., 82., 118., 22., 58., 94., 130., 34., 70., 106., 142.,
      2.,  38., 74., 110., 14., 50., 86., 122., 26., 62., 98.,  134.,
      5.,  41., 77., 113., 17., 53., 89., 125., 29., 65., 101., 137.,
      8.,  44., 80., 116., 20., 56., 92., 128., 32., 68., 104., 140.,
      11., 47., 83., 119., 23., 59., 95., 131., 35., 71., 107., 143.,
      3.,  39., 75., 111., 15., 51., 87., 123., 27., 63., 99.,  135.,
      6.,  42., 78., 114., 18., 54., 90., 126., 30., 66., 102., 138.,
      9.,  45., 81., 117., 21., 57., 93., 129., 33., 69., 105., 141.,
      12., 48., 84., 120., 24., 60., 96., 132., 36., 72., 108., 144.};
  const std::vector<int> sizes = {4, 3, 4, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13.,  14.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 105., 106., 107., 108.,
      109., 110., 111., 112., 113., 114., 115., 116., 117., 118., 119., 120.,
      121., 122., 123., 124., 125., 126., 127., 128., 129., 130., 131., 132.,
      133., 134., 135., 136., 137., 138., 139., 140., 141., 142., 143., 144.,
      145., 146., 147., 148., 149., 150., 151., 152., 153., 154., 155., 156.,
      157., 158., 159., 160., 161., 162., 163., 164., 165., 166., 167., 168.,
      169., 170., 171., 172., 173., 174., 175., 176., 177., 178., 179., 180.,
      181., 182., 183., 184., 185., 186., 187., 188., 189., 190., 191., 192.};
  const std::vector<int> sizes = {4, 3, 4, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  2.,   6.,   10.,  14.,  3.,   7.,   11.,  15.,
      4.,   8.,   12.,  16.,  17.,  21.,  25.,  29.,  18.,  22.,  26.,  30.,
      19.,  23.,  27.,  31.,  20.,  24.,  28.,  32.,  33.,  37.,  41.,  45.,
      34.,  38.,  42.,  46.,  35.,  39.,  43.,  47.,  36.,  40.,  44.,  48.,
      49.,  53.,  57.,  61.,  50.,  54.,  58.,  62.,  51.,  55.,  59.,  63.,
      52.,  56.,  60.,  64.,  65.,  69.,  73.,  77.,  66.,  70.,  74.,  78.,
      67.,  71.,  75.,  79.,  68.,  72.,  76.,  80.,  81.,  85.,  89.,  93.,
      82.,  86.,  90.,  94.,  83.,  87.,  91.,  95.,  84.,  88.,  92.,  96.,
      97.,  101., 105., 109., 98.,  102., 106., 110., 99.,  103., 107., 111.,
      100., 104., 108., 112., 113., 117., 121., 125., 114., 118., 122., 126.,
      115., 119., 123., 127., 116., 120., 124., 128., 129., 133., 137., 141.,
      130., 134., 138., 142., 131., 135., 139., 143., 132., 136., 140., 144.,
      145., 149., 153., 157., 146., 150., 154., 158., 147., 151., 155., 159.,
      148., 152., 156., 160., 161., 165., 169., 173., 162., 166., 170., 174.,
      163., 167., 171., 175., 164., 168., 172., 176., 177., 181., 185., 189.,
      178., 182., 186., 190., 179., 183., 187., 191., 180., 184., 188., 192.};
  const std::vector<int> sizes = {4, 3, 4, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   17.,  18.,  19.,  20.,  33.,  34.,  35.,  36.,
      5.,   6.,   7.,   8.,   21.,  22.,  23.,  24.,  37.,  38.,  39.,  40.,
      9.,   10.,  11.,  12.,  25.,  26.,  27.,  28.,  41.,  42.,  43.,  44.,
      13.,  14.,  15.,  16.,  29.,  30.,  31.,  32.,  45.,  46.,  47.,  48.,
      49.,  50.,  51.,  52.,  65.,  66.,  67.,  68.,  81.,  82.,  83.,  84.,
      53.,  54.,  55.,  56.,  69.,  70.,  71.,  72.,  85.,  86.,  87.,  88.,
      57.,  58.,  59.,  60.,  73.,  74.,  75.,  76.,  89.,  90.,  91.,  92.,
      61.,  62.,  63.,  64.,  77.,  78.,  79.,  80.,  93.,  94.,  95.,  96.,
      97.,  98.,  99.,  100., 113., 114., 115., 116., 129., 130., 131., 132.,
      101., 102., 103., 104., 117., 118., 119., 120., 133., 134., 135., 136.,
      105., 106., 107., 108., 121., 122., 123., 124., 137., 138., 139., 140.,
      109., 110., 111., 112., 125., 126., 127., 128., 141., 142., 143., 144.,
      145., 146., 147., 148., 161., 162., 163., 164., 177., 178., 179., 180.,
      149., 150., 151., 152., 165., 166., 167., 168., 181., 182., 183., 184.,
      153., 154., 155., 156., 169., 170., 171., 172., 185., 186., 187., 188.,
      157., 158., 159., 160., 173., 174., 175., 176., 189., 190., 191., 192.};
  const std::vector<int> sizes = {4, 3, 4, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   17.,  33.,  2.,   18.,  34.,  3.,   19.,  35.,  4.,   20.,  36.,
      5.,   21.,  37.,  6.,   22.,  38.,  7.,   23.,  39.,  8.,   24.,  40.,
      9.,   25.,  41.,  10.,  26.,  42.,  11.,  27.,  43.,  12.,  28.,  44.,
      13.,  29.,  45.,  14.,  30.,  46.,  15.,  31.,  47.,  16.,  32.,  48.,
      49.,  65.,  81.,  50.,  66.,  82.,  51.,  67.,  83.,  52.,  68.,  84.,
      53.,  69.,  85.,  54.,  70.,  86.,  55.,  71.,  87.,  56.,  72.,  88.,
      57.,  73.,  89.,  58.,  74.,  90.,  59.,  75.,  91.,  60.,  76.,  92.,
      61.,  77.,  93.,  62.,  78.,  94.,  63.,  79.,  95.,  64.,  80.,  96.,
      97.,  113., 129., 98.,  114., 130., 99.,  115., 131., 100., 116., 132.,
      101., 117., 133., 102., 118., 134., 103., 119., 135., 104., 120., 136.,
      105., 121., 137., 106., 122., 138., 107., 123., 139., 108., 124., 140.,
      109., 125., 141., 110., 126., 142., 111., 127., 143., 112., 128., 144.,
      145., 161., 177., 146., 162., 178., 147., 163., 179., 148., 164., 180.,
      149., 165., 181., 150., 166., 182., 151., 167., 183., 152., 168., 184.,
      153., 169., 185., 154., 170., 186., 155., 171., 187., 156., 172., 188.,
      157., 173., 189., 158., 174., 190., 159., 175., 191., 160., 176., 192.};
  const std::vector<int> sizes = {4, 3, 4, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  17.,  21.,  25.,  29.,  33.,  37.,  41.,  45.,
      2.,   6.,   10.,  14.,  18.,  22.,  26.,  30.,  34.,  38.,  42.,  46.,
      3.,   7.,   11.,  15.,  19.,  23.,  27.,  31.,  35.,  39.,  43.,  47.,
      4.,   8.,   12.,  16.,  20.,  24.,  28.,  32.,  36.,  40.,  44.,  48.,
      49.,  53.,  57.,  61.,  65.,  69.,  73.,  77.,  81.,  85.,  89.,  93.,
      50.,  54.,  58.,  62.,  66.,  70.,  74.,  78.,  82.,  86.,  90.,  94.,
      51.,  55.,  59.,  63.,  67.,  71.,  75.,  79.,  83.,  87.,  91.,  95.,
      52.,  56.,  60.,  64.,  68.,  72.,  76.,  80.,  84.,  88.,  92.,  96.,
      97.,  101., 105., 109., 113., 117., 121., 125., 129., 133., 137., 141.,
      98.,  102., 106., 110., 114., 118., 122., 126., 130., 134., 138., 142.,
      99.,  103., 107., 111., 115., 119., 123., 127., 131., 135., 139., 143.,
      100., 104., 108., 112., 116., 120., 124., 128., 132., 136., 140., 144.,
      145., 149., 153., 157., 161., 165., 169., 173., 177., 181., 185., 189.,
      146., 150., 154., 158., 162., 166., 170., 174., 178., 182., 186., 190.,
      147., 151., 155., 159., 163., 167., 171., 175., 179., 183., 187., 191.,
      148., 152., 156., 160., 164., 168., 172., 176., 180., 184., 188., 192.};
  const std::vector<int> sizes = {4, 3, 4, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   17.,  33.,  5.,   21.,  37.,  9.,   25.,  41.,  13.,  29.,  45.,
      2.,   18.,  34.,  6.,   22.,  38.,  10.,  26.,  42.,  14.,  30.,  46.,
      3.,   19.,  35.,  7.,   23.,  39.,  11.,  27.,  43.,  15.,  31.,  47.,
      4.,   20.,  36.,  8.,   24.,  40.,  12.,  28.,  44.,  16.,  32.,  48.,
      49.,  65.,  81.,  53.,  69.,  85.,  57.,  73.,  89.,  61.,  77.,  93.,
      50.,  66.,  82.,  54.,  70.,  86.,  58.,  74.,  90.,  62.,  78.,  94.,
      51.,  67.,  83.,  55.,  71.,  87.,  59.,  75.,  91.,  63.,  79.,  95.,
      52.,  68.,  84.,  56.,  72.,  88.,  60.,  76.,  92.,  64.,  80.,  96.,
      97.,  113., 129., 101., 117., 133., 105., 121., 137., 109., 125., 141.,
      98.,  114., 130., 102., 118., 134., 106., 122., 138., 110., 126., 142.,
      99.,  115., 131., 103., 119., 135., 107., 123., 139., 111., 127., 143.,
      100., 116., 132., 104., 120., 136., 108., 124., 140., 112., 128., 144.,
      145., 161., 177., 149., 165., 181., 153., 169., 185., 157., 173., 189.,
      146., 162., 178., 150., 166., 182., 154., 170., 186., 158., 174., 190.,
      147., 163., 179., 151., 167., 183., 155., 171., 187., 159., 175., 191.,
      148., 164., 180., 152., 168., 184., 156., 172., 188., 160., 176., 192.};
  const std::vector<int> sizes = {4, 3, 4, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13.,  14.,  15.,  16.,  49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,
      57.,  58.,  59.,  60.,  61.,  62.,  63.,  64.,  97.,  98.,  99.,  100.,
      101., 102., 103., 104., 105., 106., 107., 108., 109., 110., 111., 112.,
      145., 146., 147., 148., 149., 150., 151., 152., 153., 154., 155., 156.,
      157., 158., 159., 160., 17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  65.,  66.,  67.,  68.,
      69.,  70.,  71.,  72.,  73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,
      113., 114., 115., 116., 117., 118., 119., 120., 121., 122., 123., 124.,
      125., 126., 127., 128., 161., 162., 163., 164., 165., 166., 167., 168.,
      169., 170., 171., 172., 173., 174., 175., 176., 33.,  34.,  35.,  36.,
      37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      81.,  82.,  83.,  84.,  85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,
      93.,  94.,  95.,  96.,  129., 130., 131., 132., 133., 134., 135., 136.,
      137., 138., 139., 140., 141., 142., 143., 144., 177., 178., 179., 180.,
      181., 182., 183., 184., 185., 186., 187., 188., 189., 190., 191., 192.};
  const std::vector<int> sizes = {4, 3, 4, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  2.,   6.,   10.,  14.,  3.,   7.,   11.,  15.,
      4.,   8.,   12.,  16.,  49.,  53.,  57.,  61.,  50.,  54.,  58.,  62.,
      51.,  55.,  59.,  63.,  52.,  56.,  60.,  64.,  97.,  101., 105., 109.,
      98.,  102., 106., 110., 99.,  103., 107., 111., 100., 104., 108., 112.,
      145., 149., 153., 157., 146., 150., 154., 158., 147., 151., 155., 159.,
      148., 152., 156., 160., 17.,  21.,  25.,  29.,  18.,  22.,  26.,  30.,
      19.,  23.,  27.,  31.,  20.,  24.,  28.,  32.,  65.,  69.,  73.,  77.,
      66.,  70.,  74.,  78.,  67.,  71.,  75.,  79.,  68.,  72.,  76.,  80.,
      113., 117., 121., 125., 114., 118., 122., 126., 115., 119., 123., 127.,
      116., 120., 124., 128., 161., 165., 169., 173., 162., 166., 170., 174.,
      163., 167., 171., 175., 164., 168., 172., 176., 33.,  37.,  41.,  45.,
      34.,  38.,  42.,  46.,  35.,  39.,  43.,  47.,  36.,  40.,  44.,  48.,
      81.,  85.,  89.,  93.,  82.,  86.,  90.,  94.,  83.,  87.,  91.,  95.,
      84.,  88.,  92.,  96.,  129., 133., 137., 141., 130., 134., 138., 142.,
      131., 135., 139., 143., 132., 136., 140., 144., 177., 181., 185., 189.,
      178., 182., 186., 190., 179., 183., 187., 191., 180., 184., 188., 192.};
  const std::vector<int> sizes = {4, 3, 4, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   49.,  50.,  51.,  52.,  97.,  98.,  99.,  100.,
      145., 146., 147., 148., 5.,   6.,   7.,   8.,   53.,  54.,  55.,  56.,
      101., 102., 103., 104., 149., 150., 151., 152., 9.,   10.,  11.,  12.,
      57.,  58.,  59.,  60.,  105., 106., 107., 108., 153., 154., 155., 156.,
      13.,  14.,  15.,  16.,  61.,  62.,  63.,  64.,  109., 110., 111., 112.,
      157., 158., 159., 160., 17.,  18.,  19.,  20.,  65.,  66.,  67.,  68.,
      113., 114., 115., 116., 161., 162., 163., 164., 21.,  22.,  23.,  24.,
      69.,  70.,  71.,  72.,  117., 118., 119., 120., 165., 166., 167., 168.,
      25.,  26.,  27.,  28.,  73.,  74.,  75.,  76.,  121., 122., 123., 124.,
      169., 170., 171., 172., 29.,  30.,  31.,  32.,  77.,  78.,  79.,  80.,
      125., 126., 127., 128., 173., 174., 175., 176., 33.,  34.,  35.,  36.,
      81.,  82.,  83.,  84.,  129., 130., 131., 132., 177., 178., 179., 180.,
      37.,  38.,  39.,  40.,  85.,  86.,  87.,  88.,  133., 134., 135., 136.,
      181., 182., 183., 184., 41.,  42.,  43.,  44.,  89.,  90.,  91.,  92.,
      137., 138., 139., 140., 185., 186., 187., 188., 45.,  46.,  47.,  48.,
      93.,  94.,  95.,  96.,  141., 142., 143., 144., 189., 190., 191., 192.};
  const std::vector<int> sizes = {4, 3, 4, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  145., 2.,  50., 98.,  146., 3.,  51., 99.,  147.,
      4.,  52., 100., 148., 5.,  53., 101., 149., 6.,  54., 102., 150.,
      7.,  55., 103., 151., 8.,  56., 104., 152., 9.,  57., 105., 153.,
      10., 58., 106., 154., 11., 59., 107., 155., 12., 60., 108., 156.,
      13., 61., 109., 157., 14., 62., 110., 158., 15., 63., 111., 159.,
      16., 64., 112., 160., 17., 65., 113., 161., 18., 66., 114., 162.,
      19., 67., 115., 163., 20., 68., 116., 164., 21., 69., 117., 165.,
      22., 70., 118., 166., 23., 71., 119., 167., 24., 72., 120., 168.,
      25., 73., 121., 169., 26., 74., 122., 170., 27., 75., 123., 171.,
      28., 76., 124., 172., 29., 77., 125., 173., 30., 78., 126., 174.,
      31., 79., 127., 175., 32., 80., 128., 176., 33., 81., 129., 177.,
      34., 82., 130., 178., 35., 83., 131., 179., 36., 84., 132., 180.,
      37., 85., 133., 181., 38., 86., 134., 182., 39., 87., 135., 183.,
      40., 88., 136., 184., 41., 89., 137., 185., 42., 90., 138., 186.,
      43., 91., 139., 187., 44., 92., 140., 188., 45., 93., 141., 189.,
      46., 94., 142., 190., 47., 95., 143., 191., 48., 96., 144., 192.};
  const std::vector<int> sizes = {4, 3, 4, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  49.,  53.,  57.,  61.,  97.,  101., 105., 109.,
      145., 149., 153., 157., 2.,   6.,   10.,  14.,  50.,  54.,  58.,  62.,
      98.,  102., 106., 110., 146., 150., 154., 158., 3.,   7.,   11.,  15.,
      51.,  55.,  59.,  63.,  99.,  103., 107., 111., 147., 151., 155., 159.,
      4.,   8.,   12.,  16.,  52.,  56.,  60.,  64.,  100., 104., 108., 112.,
      148., 152., 156., 160., 17.,  21.,  25.,  29.,  65.,  69.,  73.,  77.,
      113., 117., 121., 125., 161., 165., 169., 173., 18.,  22.,  26.,  30.,
      66.,  70.,  74.,  78.,  114., 118., 122., 126., 162., 166., 170., 174.,
      19.,  23.,  27.,  31.,  67.,  71.,  75.,  79.,  115., 119., 123., 127.,
      163., 167., 171., 175., 20.,  24.,  28.,  32.,  68.,  72.,  76.,  80.,
      116., 120., 124., 128., 164., 168., 172., 176., 33.,  37.,  41.,  45.,
      81.,  85.,  89.,  93.,  129., 133., 137., 141., 177., 181., 185., 189.,
      34.,  38.,  42.,  46.,  82.,  86.,  90.,  94.,  130., 134., 138., 142.,
      178., 182., 186., 190., 35.,  39.,  43.,  47.,  83.,  87.,  91.,  95.,
      131., 135., 139., 143., 179., 183., 187., 191., 36.,  40.,  44.,  48.,
      84.,  88.,  92.,  96.,  132., 136., 140., 144., 180., 184., 188., 192.};
  const std::vector<int> sizes = {4, 3, 4, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  145., 5.,  53., 101., 149., 9.,  57., 105., 153.,
      13., 61., 109., 157., 2.,  50., 98.,  146., 6.,  54., 102., 150.,
      10., 58., 106., 154., 14., 62., 110., 158., 3.,  51., 99.,  147.,
      7.,  55., 103., 151., 11., 59., 107., 155., 15., 63., 111., 159.,
      4.,  52., 100., 148., 8.,  56., 104., 152., 12., 60., 108., 156.,
      16., 64., 112., 160., 17., 65., 113., 161., 21., 69., 117., 165.,
      25., 73., 121., 169., 29., 77., 125., 173., 18., 66., 114., 162.,
      22., 70., 118., 166., 26., 74., 122., 170., 30., 78., 126., 174.,
      19., 67., 115., 163., 23., 71., 119., 167., 27., 75., 123., 171.,
      31., 79., 127., 175., 20., 68., 116., 164., 24., 72., 120., 168.,
      28., 76., 124., 172., 32., 80., 128., 176., 33., 81., 129., 177.,
      37., 85., 133., 181., 41., 89., 137., 185., 45., 93., 141., 189.,
      34., 82., 130., 178., 38., 86., 134., 182., 42., 90., 138., 186.,
      46., 94., 142., 190., 35., 83., 131., 179., 39., 87., 135., 183.,
      43., 91., 139., 187., 47., 95., 143., 191., 36., 84., 132., 180.,
      40., 88., 136., 184., 44., 92., 140., 188., 48., 96., 144., 192.};
  const std::vector<int> sizes = {4, 3, 4, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   17.,  18.,  19.,  20.,  33.,  34.,  35.,  36.,
      49.,  50.,  51.,  52.,  65.,  66.,  67.,  68.,  81.,  82.,  83.,  84.,
      97.,  98.,  99.,  100., 113., 114., 115., 116., 129., 130., 131., 132.,
      145., 146., 147., 148., 161., 162., 163., 164., 177., 178., 179., 180.,
      5.,   6.,   7.,   8.,   21.,  22.,  23.,  24.,  37.,  38.,  39.,  40.,
      53.,  54.,  55.,  56.,  69.,  70.,  71.,  72.,  85.,  86.,  87.,  88.,
      101., 102., 103., 104., 117., 118., 119., 120., 133., 134., 135., 136.,
      149., 150., 151., 152., 165., 166., 167., 168., 181., 182., 183., 184.,
      9.,   10.,  11.,  12.,  25.,  26.,  27.,  28.,  41.,  42.,  43.,  44.,
      57.,  58.,  59.,  60.,  73.,  74.,  75.,  76.,  89.,  90.,  91.,  92.,
      105., 106., 107., 108., 121., 122., 123., 124., 137., 138., 139., 140.,
      153., 154., 155., 156., 169., 170., 171., 172., 185., 186., 187., 188.,
      13.,  14.,  15.,  16.,  29.,  30.,  31.,  32.,  45.,  46.,  47.,  48.,
      61.,  62.,  63.,  64.,  77.,  78.,  79.,  80.,  93.,  94.,  95.,  96.,
      109., 110., 111., 112., 125., 126., 127., 128., 141., 142., 143., 144.,
      157., 158., 159., 160., 173., 174., 175., 176., 189., 190., 191., 192.};
  const std::vector<int> sizes = {4, 3, 4, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   17.,  33.,  2.,   18.,  34.,  3.,   19.,  35.,  4.,   20.,  36.,
      49.,  65.,  81.,  50.,  66.,  82.,  51.,  67.,  83.,  52.,  68.,  84.,
      97.,  113., 129., 98.,  114., 130., 99.,  115., 131., 100., 116., 132.,
      145., 161., 177., 146., 162., 178., 147., 163., 179., 148., 164., 180.,
      5.,   21.,  37.,  6.,   22.,  38.,  7.,   23.,  39.,  8.,   24.,  40.,
      53.,  69.,  85.,  54.,  70.,  86.,  55.,  71.,  87.,  56.,  72.,  88.,
      101., 117., 133., 102., 118., 134., 103., 119., 135., 104., 120., 136.,
      149., 165., 181., 150., 166., 182., 151., 167., 183., 152., 168., 184.,
      9.,   25.,  41.,  10.,  26.,  42.,  11.,  27.,  43.,  12.,  28.,  44.,
      57.,  73.,  89.,  58.,  74.,  90.,  59.,  75.,  91.,  60.,  76.,  92.,
      105., 121., 137., 106., 122., 138., 107., 123., 139., 108., 124., 140.,
      153., 169., 185., 154., 170., 186., 155., 171., 187., 156., 172., 188.,
      13.,  29.,  45.,  14.,  30.,  46.,  15.,  31.,  47.,  16.,  32.,  48.,
      61.,  77.,  93.,  62.,  78.,  94.,  63.,  79.,  95.,  64.,  80.,  96.,
      109., 125., 141., 110., 126., 142., 111., 127., 143., 112., 128., 144.,
      157., 173., 189., 158., 174., 190., 159., 175., 191., 160., 176., 192.};
  const std::vector<int> sizes = {4, 3, 4, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   49.,  50.,  51.,  52.,  97.,  98.,  99.,  100.,
      145., 146., 147., 148., 17.,  18.,  19.,  20.,  65.,  66.,  67.,  68.,
      113., 114., 115., 116., 161., 162., 163., 164., 33.,  34.,  35.,  36.,
      81.,  82.,  83.,  84.,  129., 130., 131., 132., 177., 178., 179., 180.,
      5.,   6.,   7.,   8.,   53.,  54.,  55.,  56.,  101., 102., 103., 104.,
      149., 150., 151., 152., 21.,  22.,  23.,  24.,  69.,  70.,  71.,  72.,
      117., 118., 119., 120., 165., 166., 167., 168., 37.,  38.,  39.,  40.,
      85.,  86.,  87.,  88.,  133., 134., 135., 136., 181., 182., 183., 184.,
      9.,   10.,  11.,  12.,  57.,  58.,  59.,  60.,  105., 106., 107., 108.,
      153., 154., 155., 156., 25.,  26.,  27.,  28.,  73.,  74.,  75.,  76.,
      121., 122., 123., 124., 169., 170., 171., 172., 41.,  42.,  43.,  44.,
      89.,  90.,  91.,  92.,  137., 138., 139., 140., 185., 186., 187., 188.,
      13.,  14.,  15.,  16.,  61.,  62.,  63.,  64.,  109., 110., 111., 112.,
      157., 158., 159., 160., 29.,  30.,  31.,  32.,  77.,  78.,  79.,  80.,
      125., 126., 127., 128., 173., 174., 175., 176., 45.,  46.,  47.,  48.,
      93.,  94.,  95.,  96.,  141., 142., 143., 144., 189., 190., 191., 192.};
  const std::vector<int> sizes = {4, 3, 4, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  145., 2.,  50., 98.,  146., 3.,  51., 99.,  147.,
      4.,  52., 100., 148., 17., 65., 113., 161., 18., 66., 114., 162.,
      19., 67., 115., 163., 20., 68., 116., 164., 33., 81., 129., 177.,
      34., 82., 130., 178., 35., 83., 131., 179., 36., 84., 132., 180.,
      5.,  53., 101., 149., 6.,  54., 102., 150., 7.,  55., 103., 151.,
      8.,  56., 104., 152., 21., 69., 117., 165., 22., 70., 118., 166.,
      23., 71., 119., 167., 24., 72., 120., 168., 37., 85., 133., 181.,
      38., 86., 134., 182., 39., 87., 135., 183., 40., 88., 136., 184.,
      9.,  57., 105., 153., 10., 58., 106., 154., 11., 59., 107., 155.,
      12., 60., 108., 156., 25., 73., 121., 169., 26., 74., 122., 170.,
      27., 75., 123., 171., 28., 76., 124., 172., 41., 89., 137., 185.,
      42., 90., 138., 186., 43., 91., 139., 187., 44., 92., 140., 188.,
      13., 61., 109., 157., 14., 62., 110., 158., 15., 63., 111., 159.,
      16., 64., 112., 160., 29., 77., 125., 173., 30., 78., 126., 174.,
      31., 79., 127., 175., 32., 80., 128., 176., 45., 93., 141., 189.,
      46., 94., 142., 190., 47., 95., 143., 191., 48., 96., 144., 192.};
  const std::vector<int> sizes = {4, 3, 4, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 65., 81., 97.,  113., 129., 145., 161., 177.,
      2.,  18., 34., 50., 66., 82., 98.,  114., 130., 146., 162., 178.,
      3.,  19., 35., 51., 67., 83., 99.,  115., 131., 147., 163., 179.,
      4.,  20., 36., 52., 68., 84., 100., 116., 132., 148., 164., 180.,
      5.,  21., 37., 53., 69., 85., 101., 117., 133., 149., 165., 181.,
      6.,  22., 38., 54., 70., 86., 102., 118., 134., 150., 166., 182.,
      7.,  23., 39., 55., 71., 87., 103., 119., 135., 151., 167., 183.,
      8.,  24., 40., 56., 72., 88., 104., 120., 136., 152., 168., 184.,
      9.,  25., 41., 57., 73., 89., 105., 121., 137., 153., 169., 185.,
      10., 26., 42., 58., 74., 90., 106., 122., 138., 154., 170., 186.,
      11., 27., 43., 59., 75., 91., 107., 123., 139., 155., 171., 187.,
      12., 28., 44., 60., 76., 92., 108., 124., 140., 156., 172., 188.,
      13., 29., 45., 61., 77., 93., 109., 125., 141., 157., 173., 189.,
      14., 30., 46., 62., 78., 94., 110., 126., 142., 158., 174., 190.,
      15., 31., 47., 63., 79., 95., 111., 127., 143., 159., 175., 191.,
      16., 32., 48., 64., 80., 96., 112., 128., 144., 160., 176., 192.};
  const std::vector<int> sizes = {4, 3, 4, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  145., 17., 65., 113., 161., 33., 81., 129., 177.,
      2.,  50., 98.,  146., 18., 66., 114., 162., 34., 82., 130., 178.,
      3.,  51., 99.,  147., 19., 67., 115., 163., 35., 83., 131., 179.,
      4.,  52., 100., 148., 20., 68., 116., 164., 36., 84., 132., 180.,
      5.,  53., 101., 149., 21., 69., 117., 165., 37., 85., 133., 181.,
      6.,  54., 102., 150., 22., 70., 118., 166., 38., 86., 134., 182.,
      7.,  55., 103., 151., 23., 71., 119., 167., 39., 87., 135., 183.,
      8.,  56., 104., 152., 24., 72., 120., 168., 40., 88., 136., 184.,
      9.,  57., 105., 153., 25., 73., 121., 169., 41., 89., 137., 185.,
      10., 58., 106., 154., 26., 74., 122., 170., 42., 90., 138., 186.,
      11., 59., 107., 155., 27., 75., 123., 171., 43., 91., 139., 187.,
      12., 60., 108., 156., 28., 76., 124., 172., 44., 92., 140., 188.,
      13., 61., 109., 157., 29., 77., 125., 173., 45., 93., 141., 189.,
      14., 62., 110., 158., 30., 78., 126., 174., 46., 94., 142., 190.,
      15., 63., 111., 159., 31., 79., 127., 175., 47., 95., 143., 191.,
      16., 64., 112., 160., 32., 80., 128., 176., 48., 96., 144., 192.};
  const std::vector<int> sizes = {4, 3, 4, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  17.,  21.,  25.,  29.,  33.,  37.,  41.,  45.,
      49.,  53.,  57.,  61.,  65.,  69.,  73.,  77.,  81.,  85.,  89.,  93.,
      97.,  101., 105., 109., 113., 117., 121., 125., 129., 133., 137., 141.,
      145., 149., 153., 157., 161., 165., 169., 173., 177., 181., 185., 189.,
      2.,   6.,   10.,  14.,  18.,  22.,  26.,  30.,  34.,  38.,  42.,  46.,
      50.,  54.,  58.,  62.,  66.,  70.,  74.,  78.,  82.,  86.,  90.,  94.,
      98.,  102., 106., 110., 114., 118., 122., 126., 130., 134., 138., 142.,
      146., 150., 154., 158., 162., 166., 170., 174., 178., 182., 186., 190.,
      3.,   7.,   11.,  15.,  19.,  23.,  27.,  31.,  35.,  39.,  43.,  47.,
      51.,  55.,  59.,  63.,  67.,  71.,  75.,  79.,  83.,  87.,  91.,  95.,
      99.,  103., 107., 111., 115., 119., 123., 127., 131., 135., 139., 143.,
      147., 151., 155., 159., 163., 167., 171., 175., 179., 183., 187., 191.,
      4.,   8.,   12.,  16.,  20.,  24.,  28.,  32.,  36.,  40.,  44.,  48.,
      52.,  56.,  60.,  64.,  68.,  72.,  76.,  80.,  84.,  88.,  92.,  96.,
      100., 104., 108., 112., 116., 120., 124., 128., 132., 136., 140., 144.,
      148., 152., 156., 160., 164., 168., 172., 176., 180., 184., 188., 192.};
  const std::vector<int> sizes = {4, 3, 4, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   17.,  33.,  5.,   21.,  37.,  9.,   25.,  41.,  13.,  29.,  45.,
      49.,  65.,  81.,  53.,  69.,  85.,  57.,  73.,  89.,  61.,  77.,  93.,
      97.,  113., 129., 101., 117., 133., 105., 121., 137., 109., 125., 141.,
      145., 161., 177., 149., 165., 181., 153., 169., 185., 157., 173., 189.,
      2.,   18.,  34.,  6.,   22.,  38.,  10.,  26.,  42.,  14.,  30.,  46.,
      50.,  66.,  82.,  54.,  70.,  86.,  58.,  74.,  90.,  62.,  78.,  94.,
      98.,  114., 130., 102., 118., 134., 106., 122., 138., 110., 126., 142.,
      146., 162., 178., 150., 166., 182., 154., 170., 186., 158., 174., 190.,
      3.,   19.,  35.,  7.,   23.,  39.,  11.,  27.,  43.,  15.,  31.,  47.,
      51.,  67.,  83.,  55.,  71.,  87.,  59.,  75.,  91.,  63.,  79.,  95.,
      99.,  115., 131., 103., 119., 135., 107., 123., 139., 111., 127., 143.,
      147., 163., 179., 151., 167., 183., 155., 171., 187., 159., 175., 191.,
      4.,   20.,  36.,  8.,   24.,  40.,  12.,  28.,  44.,  16.,  32.,  48.,
      52.,  68.,  84.,  56.,  72.,  88.,  60.,  76.,  92.,  64.,  80.,  96.,
      100., 116., 132., 104., 120., 136., 108., 124., 140., 112., 128., 144.,
      148., 164., 180., 152., 168., 184., 156., 172., 188., 160., 176., 192.};
  const std::vector<int> sizes = {4, 3, 4, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  49.,  53.,  57.,  61.,  97.,  101., 105., 109.,
      145., 149., 153., 157., 17.,  21.,  25.,  29.,  65.,  69.,  73.,  77.,
      113., 117., 121., 125., 161., 165., 169., 173., 33.,  37.,  41.,  45.,
      81.,  85.,  89.,  93.,  129., 133., 137., 141., 177., 181., 185., 189.,
      2.,   6.,   10.,  14.,  50.,  54.,  58.,  62.,  98.,  102., 106., 110.,
      146., 150., 154., 158., 18.,  22.,  26.,  30.,  66.,  70.,  74.,  78.,
      114., 118., 122., 126., 162., 166., 170., 174., 34.,  38.,  42.,  46.,
      82.,  86.,  90.,  94.,  130., 134., 138., 142., 178., 182., 186., 190.,
      3.,   7.,   11.,  15.,  51.,  55.,  59.,  63.,  99.,  103., 107., 111.,
      147., 151., 155., 159., 19.,  23.,  27.,  31.,  67.,  71.,  75.,  79.,
      115., 119., 123., 127., 163., 167., 171., 175., 35.,  39.,  43.,  47.,
      83.,  87.,  91.,  95.,  131., 135., 139., 143., 179., 183., 187., 191.,
      4.,   8.,   12.,  16.,  52.,  56.,  60.,  64.,  100., 104., 108., 112.,
      148., 152., 156., 160., 20.,  24.,  28.,  32.,  68.,  72.,  76.,  80.,
      116., 120., 124., 128., 164., 168., 172., 176., 36.,  40.,  44.,  48.,
      84.,  88.,  92.,  96.,  132., 136., 140., 144., 180., 184., 188., 192.};
  const std::vector<int> sizes = {4, 3, 4, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  145., 5.,  53., 101., 149., 9.,  57., 105., 153.,
      13., 61., 109., 157., 17., 65., 113., 161., 21., 69., 117., 165.,
      25., 73., 121., 169., 29., 77., 125., 173., 33., 81., 129., 177.,
      37., 85., 133., 181., 41., 89., 137., 185., 45., 93., 141., 189.,
      2.,  50., 98.,  146., 6.,  54., 102., 150., 10., 58., 106., 154.,
      14., 62., 110., 158., 18., 66., 114., 162., 22., 70., 118., 166.,
      26., 74., 122., 170., 30., 78., 126., 174., 34., 82., 130., 178.,
      38., 86., 134., 182., 42., 90., 138., 186., 46., 94., 142., 190.,
      3.,  51., 99.,  147., 7.,  55., 103., 151., 11., 59., 107., 155.,
      15., 63., 111., 159., 19., 67., 115., 163., 23., 71., 119., 167.,
      27., 75., 123., 171., 31., 79., 127., 175., 35., 83., 131., 179.,
      39., 87., 135., 183., 43., 91., 139., 187., 47., 95., 143., 191.,
      4.,  52., 100., 148., 8.,  56., 104., 152., 12., 60., 108., 156.,
      16., 64., 112., 160., 20., 68., 116., 164., 24., 72., 120., 168.,
      28., 76., 124., 172., 32., 80., 128., 176., 36., 84., 132., 180.,
      40., 88., 136., 184., 44., 92., 140., 188., 48., 96., 144., 192.};
  const std::vector<int> sizes = {4, 3, 4, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 65., 81., 97.,  113., 129., 145., 161., 177.,
      5.,  21., 37., 53., 69., 85., 101., 117., 133., 149., 165., 181.,
      9.,  25., 41., 57., 73., 89., 105., 121., 137., 153., 169., 185.,
      13., 29., 45., 61., 77., 93., 109., 125., 141., 157., 173., 189.,
      2.,  18., 34., 50., 66., 82., 98.,  114., 130., 146., 162., 178.,
      6.,  22., 38., 54., 70., 86., 102., 118., 134., 150., 166., 182.,
      10., 26., 42., 58., 74., 90., 106., 122., 138., 154., 170., 186.,
      14., 30., 46., 62., 78., 94., 110., 126., 142., 158., 174., 190.,
      3.,  19., 35., 51., 67., 83., 99.,  115., 131., 147., 163., 179.,
      7.,  23., 39., 55., 71., 87., 103., 119., 135., 151., 167., 183.,
      11., 27., 43., 59., 75., 91., 107., 123., 139., 155., 171., 187.,
      15., 31., 47., 63., 79., 95., 111., 127., 143., 159., 175., 191.,
      4.,  20., 36., 52., 68., 84., 100., 116., 132., 148., 164., 180.,
      8.,  24., 40., 56., 72., 88., 104., 120., 136., 152., 168., 184.,
      12., 28., 44., 60., 76., 92., 108., 124., 140., 156., 172., 188.,
      16., 32., 48., 64., 80., 96., 112., 128., 144., 160., 176., 192.};
  const std::vector<int> sizes = {4, 3, 4, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x3x4x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  145., 17., 65., 113., 161., 33., 81., 129., 177.,
      5.,  53., 101., 149., 21., 69., 117., 165., 37., 85., 133., 181.,
      9.,  57., 105., 153., 25., 73., 121., 169., 41., 89., 137., 185.,
      13., 61., 109., 157., 29., 77., 125., 173., 45., 93., 141., 189.,
      2.,  50., 98.,  146., 18., 66., 114., 162., 34., 82., 130., 178.,
      6.,  54., 102., 150., 22., 70., 118., 166., 38., 86., 134., 182.,
      10., 58., 106., 154., 26., 74., 122., 170., 42., 90., 138., 186.,
      14., 62., 110., 158., 30., 78., 126., 174., 46., 94., 142., 190.,
      3.,  51., 99.,  147., 19., 67., 115., 163., 35., 83., 131., 179.,
      7.,  55., 103., 151., 23., 71., 119., 167., 39., 87., 135., 183.,
      11., 59., 107., 155., 27., 75., 123., 171., 43., 91., 139., 187.,
      15., 63., 111., 159., 31., 79., 127., 175., 47., 95., 143., 191.,
      4.,  52., 100., 148., 20., 68., 116., 164., 36., 84., 132., 180.,
      8.,  56., 104., 152., 24., 72., 120., 168., 40., 88., 136., 184.,
      12., 60., 108., 156., 28., 76., 124., 172., 44., 92., 140., 188.,
      16., 64., 112., 160., 32., 80., 128., 176., 48., 96., 144., 192.};
  const std::vector<int> sizes = {4, 3, 4, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13.,
      14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26.,
      27., 28., 29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39.,
      40., 41., 42., 43., 44., 45., 46., 47., 48., 49., 50., 51., 52.,
      53., 54., 55., 56., 57., 58., 59., 60., 61., 62., 63., 64.};
  const std::vector<int> sizes = {4, 4, 2, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  2.,  4.,  5.,  7.,  6.,  8.,  9.,  11., 10., 12., 13.,
      15., 14., 16., 17., 19., 18., 20., 21., 23., 22., 24., 25., 27.,
      26., 28., 29., 31., 30., 32., 33., 35., 34., 36., 37., 39., 38.,
      40., 41., 43., 42., 44., 45., 47., 46., 48., 49., 51., 50., 52.,
      53., 55., 54., 56., 57., 59., 58., 60., 61., 63., 62., 64.};
  const std::vector<int> sizes = {4, 4, 2, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  5.,  6.,  9.,  10., 13., 14., 3.,  4.,  7.,  8.,  11.,
      12., 15., 16., 17., 18., 21., 22., 25., 26., 29., 30., 19., 20.,
      23., 24., 27., 28., 31., 32., 33., 34., 37., 38., 41., 42., 45.,
      46., 35., 36., 39., 40., 43., 44., 47., 48., 49., 50., 53., 54.,
      57., 58., 61., 62., 51., 52., 55., 56., 59., 60., 63., 64.};
  const std::vector<int> sizes = {4, 4, 2, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 2.,  6.,  10., 14., 3.,  7.,  11., 15., 4.,
      8.,  12., 16., 17., 21., 25., 29., 18., 22., 26., 30., 19., 23.,
      27., 31., 20., 24., 28., 32., 33., 37., 41., 45., 34., 38., 42.,
      46., 35., 39., 43., 47., 36., 40., 44., 48., 49., 53., 57., 61.,
      50., 54., 58., 62., 51., 55., 59., 63., 52., 56., 60., 64.};
  const std::vector<int> sizes = {4, 4, 2, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 2.,  4.,  6.,  8.,  10.,
      12., 14., 16., 17., 19., 21., 23., 25., 27., 29., 31., 18., 20.,
      22., 24., 26., 28., 30., 32., 33., 35., 37., 39., 41., 43., 45.,
      47., 34., 36., 38., 40., 42., 44., 46., 48., 49., 51., 53., 55.,
      57., 59., 61., 63., 50., 52., 54., 56., 58., 60., 62., 64.};
  const std::vector<int> sizes = {4, 4, 2, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 3.,  7.,  11., 15., 2.,  6.,  10., 14., 4.,
      8.,  12., 16., 17., 21., 25., 29., 19., 23., 27., 31., 18., 22.,
      26., 30., 20., 24., 28., 32., 33., 37., 41., 45., 35., 39., 43.,
      47., 34., 38., 42., 46., 36., 40., 44., 48., 49., 53., 57., 61.,
      51., 55., 59., 63., 50., 54., 58., 62., 52., 56., 60., 64.};
  const std::vector<int> sizes = {4, 4, 2, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  17., 18., 19., 20., 33., 34., 35., 36., 49.,
      50., 51., 52., 5.,  6.,  7.,  8.,  21., 22., 23., 24., 37., 38.,
      39., 40., 53., 54., 55., 56., 9.,  10., 11., 12., 25., 26., 27.,
      28., 41., 42., 43., 44., 57., 58., 59., 60., 13., 14., 15., 16.,
      29., 30., 31., 32., 45., 46., 47., 48., 61., 62., 63., 64.};
  const std::vector<int> sizes = {4, 4, 2, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  2.,  4.,  17., 19., 18., 20., 33., 35., 34., 36., 49.,
      51., 50., 52., 5.,  7.,  6.,  8.,  21., 23., 22., 24., 37., 39.,
      38., 40., 53., 55., 54., 56., 9.,  11., 10., 12., 25., 27., 26.,
      28., 41., 43., 42., 44., 57., 59., 58., 60., 13., 15., 14., 16.,
      29., 31., 30., 32., 45., 47., 46., 48., 61., 63., 62., 64.};
  const std::vector<int> sizes = {4, 4, 2, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  17., 18., 33., 34., 49., 50., 3.,  4.,  19., 20., 35.,
      36., 51., 52., 5.,  6.,  21., 22., 37., 38., 53., 54., 7.,  8.,
      23., 24., 39., 40., 55., 56., 9.,  10., 25., 26., 41., 42., 57.,
      58., 11., 12., 27., 28., 43., 44., 59., 60., 13., 14., 29., 30.,
      45., 46., 61., 62., 15., 16., 31., 32., 47., 48., 63., 64.};
  const std::vector<int> sizes = {4, 4, 2, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 2.,  18., 34., 50., 3.,  19., 35., 51., 4.,
      20., 36., 52., 5.,  21., 37., 53., 6.,  22., 38., 54., 7.,  23.,
      39., 55., 8.,  24., 40., 56., 9.,  25., 41., 57., 10., 26., 42.,
      58., 11., 27., 43., 59., 12., 28., 44., 60., 13., 29., 45., 61.,
      14., 30., 46., 62., 15., 31., 47., 63., 16., 32., 48., 64.};
  const std::vector<int> sizes = {4, 4, 2, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  17., 19., 33., 35., 49., 51., 2.,  4.,  18., 20., 34.,
      36., 50., 52., 5.,  7.,  21., 23., 37., 39., 53., 55., 6.,  8.,
      22., 24., 38., 40., 54., 56., 9.,  11., 25., 27., 41., 43., 57.,
      59., 10., 12., 26., 28., 42., 44., 58., 60., 13., 15., 29., 31.,
      45., 47., 61., 63., 14., 16., 30., 32., 46., 48., 62., 64.};
  const std::vector<int> sizes = {4, 4, 2, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 3.,  19., 35., 51., 2.,  18., 34., 50., 4.,
      20., 36., 52., 5.,  21., 37., 53., 7.,  23., 39., 55., 6.,  22.,
      38., 54., 8.,  24., 40., 56., 9.,  25., 41., 57., 11., 27., 43.,
      59., 10., 26., 42., 58., 12., 28., 44., 60., 13., 29., 45., 61.,
      15., 31., 47., 63., 14., 30., 46., 62., 16., 32., 48., 64.};
  const std::vector<int> sizes = {4, 4, 2, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  5.,  6.,  9.,  10., 13., 14., 17., 18., 21., 22., 25.,
      26., 29., 30., 33., 34., 37., 38., 41., 42., 45., 46., 49., 50.,
      53., 54., 57., 58., 61., 62., 3.,  4.,  7.,  8.,  11., 12., 15.,
      16., 19., 20., 23., 24., 27., 28., 31., 32., 35., 36., 39., 40.,
      43., 44., 47., 48., 51., 52., 55., 56., 59., 60., 63., 64.};
  const std::vector<int> sizes = {4, 4, 2, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 2.,  6.,  10., 14., 17., 21., 25., 29., 18.,
      22., 26., 30., 33., 37., 41., 45., 34., 38., 42., 46., 49., 53.,
      57., 61., 50., 54., 58., 62., 3.,  7.,  11., 15., 4.,  8.,  12.,
      16., 19., 23., 27., 31., 20., 24., 28., 32., 35., 39., 43., 47.,
      36., 40., 44., 48., 51., 55., 59., 63., 52., 56., 60., 64.};
  const std::vector<int> sizes = {4, 4, 2, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  17., 18., 33., 34., 49., 50., 5.,  6.,  21., 22., 37.,
      38., 53., 54., 9.,  10., 25., 26., 41., 42., 57., 58., 13., 14.,
      29., 30., 45., 46., 61., 62., 3.,  4.,  19., 20., 35., 36., 51.,
      52., 7.,  8.,  23., 24., 39., 40., 55., 56., 11., 12., 27., 28.,
      43., 44., 59., 60., 15., 16., 31., 32., 47., 48., 63., 64.};
  const std::vector<int> sizes = {4, 4, 2, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 2.,  18., 34., 50., 5.,  21., 37., 53., 6.,
      22., 38., 54., 9.,  25., 41., 57., 10., 26., 42., 58., 13., 29.,
      45., 61., 14., 30., 46., 62., 3.,  19., 35., 51., 4.,  20., 36.,
      52., 7.,  23., 39., 55., 8.,  24., 40., 56., 11., 27., 43., 59.,
      12., 28., 44., 60., 15., 31., 47., 63., 16., 32., 48., 64.};
  const std::vector<int> sizes = {4, 4, 2, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 25., 29., 33., 37., 41., 45., 49.,
      53., 57., 61., 2.,  6.,  10., 14., 18., 22., 26., 30., 34., 38.,
      42., 46., 50., 54., 58., 62., 3.,  7.,  11., 15., 19., 23., 27.,
      31., 35., 39., 43., 47., 51., 55., 59., 63., 4.,  8.,  12., 16.,
      20., 24., 28., 32., 36., 40., 44., 48., 52., 56., 60., 64.};
  const std::vector<int> sizes = {4, 4, 2, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 5.,  21., 37., 53., 9.,  25., 41., 57., 13.,
      29., 45., 61., 2.,  18., 34., 50., 6.,  22., 38., 54., 10., 26.,
      42., 58., 14., 30., 46., 62., 3.,  19., 35., 51., 7.,  23., 39.,
      55., 11., 27., 43., 59., 15., 31., 47., 63., 4.,  20., 36., 52.,
      8.,  24., 40., 56., 12., 28., 44., 60., 16., 32., 48., 64.};
  const std::vector<int> sizes = {4, 4, 2, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23., 25.,
      27., 29., 31., 33., 35., 37., 39., 41., 43., 45., 47., 49., 51.,
      53., 55., 57., 59., 61., 63., 2.,  4.,  6.,  8.,  10., 12., 14.,
      16., 18., 20., 22., 24., 26., 28., 30., 32., 34., 36., 38., 40.,
      42., 44., 46., 48., 50., 52., 54., 56., 58., 60., 62., 64.};
  const std::vector<int> sizes = {4, 4, 2, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 3.,  7.,  11., 15., 17., 21., 25., 29., 19.,
      23., 27., 31., 33., 37., 41., 45., 35., 39., 43., 47., 49., 53.,
      57., 61., 51., 55., 59., 63., 2.,  6.,  10., 14., 4.,  8.,  12.,
      16., 18., 22., 26., 30., 20., 24., 28., 32., 34., 38., 42., 46.,
      36., 40., 44., 48., 50., 54., 58., 62., 52., 56., 60., 64.};
  const std::vector<int> sizes = {4, 4, 2, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  17., 19., 33., 35., 49., 51., 5.,  7.,  21., 23., 37.,
      39., 53., 55., 9.,  11., 25., 27., 41., 43., 57., 59., 13., 15.,
      29., 31., 45., 47., 61., 63., 2.,  4.,  18., 20., 34., 36., 50.,
      52., 6.,  8.,  22., 24., 38., 40., 54., 56., 10., 12., 26., 28.,
      42., 44., 58., 60., 14., 16., 30., 32., 46., 48., 62., 64.};
  const std::vector<int> sizes = {4, 4, 2, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 3.,  19., 35., 51., 5.,  21., 37., 53., 7.,
      23., 39., 55., 9.,  25., 41., 57., 11., 27., 43., 59., 13., 29.,
      45., 61., 15., 31., 47., 63., 2.,  18., 34., 50., 4.,  20., 36.,
      52., 6.,  22., 38., 54., 8.,  24., 40., 56., 10., 26., 42., 58.,
      12., 28., 44., 60., 14., 30., 46., 62., 16., 32., 48., 64.};
  const std::vector<int> sizes = {4, 4, 2, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  13., 17., 21., 25., 29., 33., 37., 41., 45., 49.,
      53., 57., 61., 3.,  7.,  11., 15., 19., 23., 27., 31., 35., 39.,
      43., 47., 51., 55., 59., 63., 2.,  6.,  10., 14., 18., 22., 26.,
      30., 34., 38., 42., 46., 50., 54., 58., 62., 4.,  8.,  12., 16.,
      20., 24., 28., 32., 36., 40., 44., 48., 52., 56., 60., 64.};
  const std::vector<int> sizes = {4, 4, 2, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  17., 33., 49., 5.,  21., 37., 53., 9.,  25., 41., 57., 13.,
      29., 45., 61., 3.,  19., 35., 51., 7.,  23., 39., 55., 11., 27.,
      43., 59., 15., 31., 47., 63., 2.,  18., 34., 50., 6.,  22., 38.,
      54., 10., 26., 42., 58., 14., 30., 46., 62., 4.,  20., 36., 52.,
      8.,  24., 40., 56., 12., 28., 44., 60., 16., 32., 48., 64.};
  const std::vector<int> sizes = {4, 4, 2, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14.,
      15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28.,
      29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42.,
      43., 44., 45., 46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56.,
      57., 58., 59., 60., 61., 62., 63., 64., 65., 66., 67., 68., 69., 70.,
      71., 72., 73., 74., 75., 76., 77., 78., 79., 80., 81., 82., 83., 84.,
      85., 86., 87., 88., 89., 90., 91., 92., 93., 94., 95., 96.};
  const std::vector<int> sizes = {4, 4, 2, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  2.,  5.,  3.,  6.,  7.,  10., 8.,  11., 9.,  12., 13., 16.,
      14., 17., 15., 18., 19., 22., 20., 23., 21., 24., 25., 28., 26., 29.,
      27., 30., 31., 34., 32., 35., 33., 36., 37., 40., 38., 41., 39., 42.,
      43., 46., 44., 47., 45., 48., 49., 52., 50., 53., 51., 54., 55., 58.,
      56., 59., 57., 60., 61., 64., 62., 65., 63., 66., 67., 70., 68., 71.,
      69., 72., 73., 76., 74., 77., 75., 78., 79., 82., 80., 83., 81., 84.,
      85., 88., 86., 89., 87., 90., 91., 94., 92., 95., 93., 96.};
  const std::vector<int> sizes = {4, 4, 2, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  7.,  8.,  9.,  13., 14., 15., 19., 20., 21., 4.,  5.,
      6.,  10., 11., 12., 16., 17., 18., 22., 23., 24., 25., 26., 27., 31.,
      32., 33., 37., 38., 39., 43., 44., 45., 28., 29., 30., 34., 35., 36.,
      40., 41., 42., 46., 47., 48., 49., 50., 51., 55., 56., 57., 61., 62.,
      63., 67., 68., 69., 52., 53., 54., 58., 59., 60., 64., 65., 66., 70.,
      71., 72., 73., 74., 75., 79., 80., 81., 85., 86., 87., 91., 92., 93.,
      76., 77., 78., 82., 83., 84., 88., 89., 90., 94., 95., 96.};
  const std::vector<int> sizes = {4, 4, 2, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 2.,  8.,  14., 20., 3.,  9.,  15., 21., 4.,  10.,
      16., 22., 5.,  11., 17., 23., 6.,  12., 18., 24., 25., 31., 37., 43.,
      26., 32., 38., 44., 27., 33., 39., 45., 28., 34., 40., 46., 29., 35.,
      41., 47., 30., 36., 42., 48., 49., 55., 61., 67., 50., 56., 62., 68.,
      51., 57., 63., 69., 52., 58., 64., 70., 53., 59., 65., 71., 54., 60.,
      66., 72., 73., 79., 85., 91., 74., 80., 86., 92., 75., 81., 87., 93.,
      76., 82., 88., 94., 77., 83., 89., 95., 78., 84., 90., 96.};
  const std::vector<int> sizes = {4, 4, 2, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 2.,  5.,  8.,  11., 14., 17.,
      20., 23., 3.,  6.,  9.,  12., 15., 18., 21., 24., 25., 28., 31., 34.,
      37., 40., 43., 46., 26., 29., 32., 35., 38., 41., 44., 47., 27., 30.,
      33., 36., 39., 42., 45., 48., 49., 52., 55., 58., 61., 64., 67., 70.,
      50., 53., 56., 59., 62., 65., 68., 71., 51., 54., 57., 60., 63., 66.,
      69., 72., 73., 76., 79., 82., 85., 88., 91., 94., 74., 77., 80., 83.,
      86., 89., 92., 95., 75., 78., 81., 84., 87., 90., 93., 96.};
  const std::vector<int> sizes = {4, 4, 2, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 4.,  10., 16., 22., 2.,  8.,  14., 20., 5.,  11.,
      17., 23., 3.,  9.,  15., 21., 6.,  12., 18., 24., 25., 31., 37., 43.,
      28., 34., 40., 46., 26., 32., 38., 44., 29., 35., 41., 47., 27., 33.,
      39., 45., 30., 36., 42., 48., 49., 55., 61., 67., 52., 58., 64., 70.,
      50., 56., 62., 68., 53., 59., 65., 71., 51., 57., 63., 69., 54., 60.,
      66., 72., 73., 79., 85., 91., 76., 82., 88., 94., 74., 80., 86., 92.,
      77., 83., 89., 95., 75., 81., 87., 93., 78., 84., 90., 96.};
  const std::vector<int> sizes = {4, 4, 2, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  25., 26., 27., 28., 29., 30., 49., 50.,
      51., 52., 53., 54., 73., 74., 75., 76., 77., 78., 7.,  8.,  9.,  10.,
      11., 12., 31., 32., 33., 34., 35., 36., 55., 56., 57., 58., 59., 60.,
      79., 80., 81., 82., 83., 84., 13., 14., 15., 16., 17., 18., 37., 38.,
      39., 40., 41., 42., 61., 62., 63., 64., 65., 66., 85., 86., 87., 88.,
      89., 90., 19., 20., 21., 22., 23., 24., 43., 44., 45., 46., 47., 48.,
      67., 68., 69., 70., 71., 72., 91., 92., 93., 94., 95., 96.};
  const std::vector<int> sizes = {4, 4, 2, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  2.,  5.,  3.,  6.,  25., 28., 26., 29., 27., 30., 49., 52.,
      50., 53., 51., 54., 73., 76., 74., 77., 75., 78., 7.,  10., 8.,  11.,
      9.,  12., 31., 34., 32., 35., 33., 36., 55., 58., 56., 59., 57., 60.,
      79., 82., 80., 83., 81., 84., 13., 16., 14., 17., 15., 18., 37., 40.,
      38., 41., 39., 42., 61., 64., 62., 65., 63., 66., 85., 88., 86., 89.,
      87., 90., 19., 22., 20., 23., 21., 24., 43., 46., 44., 47., 45., 48.,
      67., 70., 68., 71., 69., 72., 91., 94., 92., 95., 93., 96.};
  const std::vector<int> sizes = {4, 4, 2, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  25., 26., 27., 49., 50., 51., 73., 74., 75., 4.,  5.,
      6.,  28., 29., 30., 52., 53., 54., 76., 77., 78., 7.,  8.,  9.,  31.,
      32., 33., 55., 56., 57., 79., 80., 81., 10., 11., 12., 34., 35., 36.,
      58., 59., 60., 82., 83., 84., 13., 14., 15., 37., 38., 39., 61., 62.,
      63., 85., 86., 87., 16., 17., 18., 40., 41., 42., 64., 65., 66., 88.,
      89., 90., 19., 20., 21., 43., 44., 45., 67., 68., 69., 91., 92., 93.,
      22., 23., 24., 46., 47., 48., 70., 71., 72., 94., 95., 96.};
  const std::vector<int> sizes = {4, 4, 2, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 2.,  26., 50., 74., 3.,  27., 51., 75., 4.,  28.,
      52., 76., 5.,  29., 53., 77., 6.,  30., 54., 78., 7.,  31., 55., 79.,
      8.,  32., 56., 80., 9.,  33., 57., 81., 10., 34., 58., 82., 11., 35.,
      59., 83., 12., 36., 60., 84., 13., 37., 61., 85., 14., 38., 62., 86.,
      15., 39., 63., 87., 16., 40., 64., 88., 17., 41., 65., 89., 18., 42.,
      66., 90., 19., 43., 67., 91., 20., 44., 68., 92., 21., 45., 69., 93.,
      22., 46., 70., 94., 23., 47., 71., 95., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 4, 2, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  25., 28., 49., 52., 73., 76., 2.,  5.,  26., 29., 50., 53.,
      74., 77., 3.,  6.,  27., 30., 51., 54., 75., 78., 7.,  10., 31., 34.,
      55., 58., 79., 82., 8.,  11., 32., 35., 56., 59., 80., 83., 9.,  12.,
      33., 36., 57., 60., 81., 84., 13., 16., 37., 40., 61., 64., 85., 88.,
      14., 17., 38., 41., 62., 65., 86., 89., 15., 18., 39., 42., 63., 66.,
      87., 90., 19., 22., 43., 46., 67., 70., 91., 94., 20., 23., 44., 47.,
      68., 71., 92., 95., 21., 24., 45., 48., 69., 72., 93., 96.};
  const std::vector<int> sizes = {4, 4, 2, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 4.,  28., 52., 76., 2.,  26., 50., 74., 5.,  29.,
      53., 77., 3.,  27., 51., 75., 6.,  30., 54., 78., 7.,  31., 55., 79.,
      10., 34., 58., 82., 8.,  32., 56., 80., 11., 35., 59., 83., 9.,  33.,
      57., 81., 12., 36., 60., 84., 13., 37., 61., 85., 16., 40., 64., 88.,
      14., 38., 62., 86., 17., 41., 65., 89., 15., 39., 63., 87., 18., 42.,
      66., 90., 19., 43., 67., 91., 22., 46., 70., 94., 20., 44., 68., 92.,
      23., 47., 71., 95., 21., 45., 69., 93., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 4, 2, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  7.,  8.,  9.,  13., 14., 15., 19., 20., 21., 25., 26.,
      27., 31., 32., 33., 37., 38., 39., 43., 44., 45., 49., 50., 51., 55.,
      56., 57., 61., 62., 63., 67., 68., 69., 73., 74., 75., 79., 80., 81.,
      85., 86., 87., 91., 92., 93., 4.,  5.,  6.,  10., 11., 12., 16., 17.,
      18., 22., 23., 24., 28., 29., 30., 34., 35., 36., 40., 41., 42., 46.,
      47., 48., 52., 53., 54., 58., 59., 60., 64., 65., 66., 70., 71., 72.,
      76., 77., 78., 82., 83., 84., 88., 89., 90., 94., 95., 96.};
  const std::vector<int> sizes = {4, 4, 2, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 2.,  8.,  14., 20., 3.,  9.,  15., 21., 25., 31.,
      37., 43., 26., 32., 38., 44., 27., 33., 39., 45., 49., 55., 61., 67.,
      50., 56., 62., 68., 51., 57., 63., 69., 73., 79., 85., 91., 74., 80.,
      86., 92., 75., 81., 87., 93., 4.,  10., 16., 22., 5.,  11., 17., 23.,
      6.,  12., 18., 24., 28., 34., 40., 46., 29., 35., 41., 47., 30., 36.,
      42., 48., 52., 58., 64., 70., 53., 59., 65., 71., 54., 60., 66., 72.,
      76., 82., 88., 94., 77., 83., 89., 95., 78., 84., 90., 96.};
  const std::vector<int> sizes = {4, 4, 2, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  25., 26., 27., 49., 50., 51., 73., 74., 75., 7.,  8.,
      9.,  31., 32., 33., 55., 56., 57., 79., 80., 81., 13., 14., 15., 37.,
      38., 39., 61., 62., 63., 85., 86., 87., 19., 20., 21., 43., 44., 45.,
      67., 68., 69., 91., 92., 93., 4.,  5.,  6.,  28., 29., 30., 52., 53.,
      54., 76., 77., 78., 10., 11., 12., 34., 35., 36., 58., 59., 60., 82.,
      83., 84., 16., 17., 18., 40., 41., 42., 64., 65., 66., 88., 89., 90.,
      22., 23., 24., 46., 47., 48., 70., 71., 72., 94., 95., 96.};
  const std::vector<int> sizes = {4, 4, 2, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 2.,  26., 50., 74., 3.,  27., 51., 75., 7.,  31.,
      55., 79., 8.,  32., 56., 80., 9.,  33., 57., 81., 13., 37., 61., 85.,
      14., 38., 62., 86., 15., 39., 63., 87., 19., 43., 67., 91., 20., 44.,
      68., 92., 21., 45., 69., 93., 4.,  28., 52., 76., 5.,  29., 53., 77.,
      6.,  30., 54., 78., 10., 34., 58., 82., 11., 35., 59., 83., 12., 36.,
      60., 84., 16., 40., 64., 88., 17., 41., 65., 89., 18., 42., 66., 90.,
      22., 46., 70., 94., 23., 47., 71., 95., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 4, 2, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 25., 31., 37., 43., 49., 55., 61., 67., 73., 79.,
      85., 91., 2.,  8.,  14., 20., 26., 32., 38., 44., 50., 56., 62., 68.,
      74., 80., 86., 92., 3.,  9.,  15., 21., 27., 33., 39., 45., 51., 57.,
      63., 69., 75., 81., 87., 93., 4.,  10., 16., 22., 28., 34., 40., 46.,
      52., 58., 64., 70., 76., 82., 88., 94., 5.,  11., 17., 23., 29., 35.,
      41., 47., 53., 59., 65., 71., 77., 83., 89., 95., 6.,  12., 18., 24.,
      30., 36., 42., 48., 54., 60., 66., 72., 78., 84., 90., 96.};
  const std::vector<int> sizes = {4, 4, 2, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 7.,  31., 55., 79., 13., 37., 61., 85., 19., 43.,
      67., 91., 2.,  26., 50., 74., 8.,  32., 56., 80., 14., 38., 62., 86.,
      20., 44., 68., 92., 3.,  27., 51., 75., 9.,  33., 57., 81., 15., 39.,
      63., 87., 21., 45., 69., 93., 4.,  28., 52., 76., 10., 34., 58., 82.,
      16., 40., 64., 88., 22., 46., 70., 94., 5.,  29., 53., 77., 11., 35.,
      59., 83., 17., 41., 65., 89., 23., 47., 71., 95., 6.,  30., 54., 78.,
      12., 36., 60., 84., 18., 42., 66., 90., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 4, 2, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  10., 13., 16., 19., 22., 25., 28., 31., 34., 37., 40.,
      43., 46., 49., 52., 55., 58., 61., 64., 67., 70., 73., 76., 79., 82.,
      85., 88., 91., 94., 2.,  5.,  8.,  11., 14., 17., 20., 23., 26., 29.,
      32., 35., 38., 41., 44., 47., 50., 53., 56., 59., 62., 65., 68., 71.,
      74., 77., 80., 83., 86., 89., 92., 95., 3.,  6.,  9.,  12., 15., 18.,
      21., 24., 27., 30., 33., 36., 39., 42., 45., 48., 51., 54., 57., 60.,
      63., 66., 69., 72., 75., 78., 81., 84., 87., 90., 93., 96.};
  const std::vector<int> sizes = {4, 4, 2, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 4.,  10., 16., 22., 25., 31., 37., 43., 28., 34.,
      40., 46., 49., 55., 61., 67., 52., 58., 64., 70., 73., 79., 85., 91.,
      76., 82., 88., 94., 2.,  8.,  14., 20., 5.,  11., 17., 23., 26., 32.,
      38., 44., 29., 35., 41., 47., 50., 56., 62., 68., 53., 59., 65., 71.,
      74., 80., 86., 92., 77., 83., 89., 95., 3.,  9.,  15., 21., 6.,  12.,
      18., 24., 27., 33., 39., 45., 30., 36., 42., 48., 51., 57., 63., 69.,
      54., 60., 66., 72., 75., 81., 87., 93., 78., 84., 90., 96.};
  const std::vector<int> sizes = {4, 4, 2, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  25., 28., 49., 52., 73., 76., 7.,  10., 31., 34., 55., 58.,
      79., 82., 13., 16., 37., 40., 61., 64., 85., 88., 19., 22., 43., 46.,
      67., 70., 91., 94., 2.,  5.,  26., 29., 50., 53., 74., 77., 8.,  11.,
      32., 35., 56., 59., 80., 83., 14., 17., 38., 41., 62., 65., 86., 89.,
      20., 23., 44., 47., 68., 71., 92., 95., 3.,  6.,  27., 30., 51., 54.,
      75., 78., 9.,  12., 33., 36., 57., 60., 81., 84., 15., 18., 39., 42.,
      63., 66., 87., 90., 21., 24., 45., 48., 69., 72., 93., 96.};
  const std::vector<int> sizes = {4, 4, 2, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 4.,  28., 52., 76., 7.,  31., 55., 79., 10., 34.,
      58., 82., 13., 37., 61., 85., 16., 40., 64., 88., 19., 43., 67., 91.,
      22., 46., 70., 94., 2.,  26., 50., 74., 5.,  29., 53., 77., 8.,  32.,
      56., 80., 11., 35., 59., 83., 14., 38., 62., 86., 17., 41., 65., 89.,
      20., 44., 68., 92., 23., 47., 71., 95., 3.,  27., 51., 75., 6.,  30.,
      54., 78., 9.,  33., 57., 81., 12., 36., 60., 84., 15., 39., 63., 87.,
      18., 42., 66., 90., 21., 45., 69., 93., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 4, 2, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 25., 31., 37., 43., 49., 55., 61., 67., 73., 79.,
      85., 91., 4.,  10., 16., 22., 28., 34., 40., 46., 52., 58., 64., 70.,
      76., 82., 88., 94., 2.,  8.,  14., 20., 26., 32., 38., 44., 50., 56.,
      62., 68., 74., 80., 86., 92., 5.,  11., 17., 23., 29., 35., 41., 47.,
      53., 59., 65., 71., 77., 83., 89., 95., 3.,  9.,  15., 21., 27., 33.,
      39., 45., 51., 57., 63., 69., 75., 81., 87., 93., 6.,  12., 18., 24.,
      30., 36., 42., 48., 54., 60., 66., 72., 78., 84., 90., 96.};
  const std::vector<int> sizes = {4, 4, 2, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 7.,  31., 55., 79., 13., 37., 61., 85., 19., 43.,
      67., 91., 4.,  28., 52., 76., 10., 34., 58., 82., 16., 40., 64., 88.,
      22., 46., 70., 94., 2.,  26., 50., 74., 8.,  32., 56., 80., 14., 38.,
      62., 86., 20., 44., 68., 92., 5.,  29., 53., 77., 11., 35., 59., 83.,
      17., 41., 65., 89., 23., 47., 71., 95., 3.,  27., 51., 75., 9.,  33.,
      57., 81., 15., 39., 63., 87., 21., 45., 69., 93., 6.,  30., 54., 78.,
      12., 36., 60., 84., 18., 42., 66., 90., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 4, 2, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13.,  14.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 105., 106., 107., 108.,
      109., 110., 111., 112., 113., 114., 115., 116., 117., 118., 119., 120.,
      121., 122., 123., 124., 125., 126., 127., 128.};
  const std::vector<int> sizes = {4, 4, 2, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   2.,   6.,   3.,   7.,   4.,   8.,   9.,   13.,  10.,  14.,
      11.,  15.,  12.,  16.,  17.,  21.,  18.,  22.,  19.,  23.,  20.,  24.,
      25.,  29.,  26.,  30.,  27.,  31.,  28.,  32.,  33.,  37.,  34.,  38.,
      35.,  39.,  36.,  40.,  41.,  45.,  42.,  46.,  43.,  47.,  44.,  48.,
      49.,  53.,  50.,  54.,  51.,  55.,  52.,  56.,  57.,  61.,  58.,  62.,
      59.,  63.,  60.,  64.,  65.,  69.,  66.,  70.,  67.,  71.,  68.,  72.,
      73.,  77.,  74.,  78.,  75.,  79.,  76.,  80.,  81.,  85.,  82.,  86.,
      83.,  87.,  84.,  88.,  89.,  93.,  90.,  94.,  91.,  95.,  92.,  96.,
      97.,  101., 98.,  102., 99.,  103., 100., 104., 105., 109., 106., 110.,
      107., 111., 108., 112., 113., 117., 114., 118., 115., 119., 116., 120.,
      121., 125., 122., 126., 123., 127., 124., 128.};
  const std::vector<int> sizes = {4, 4, 2, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   9.,   10.,  11.,  12.,  17.,  18.,  19.,  20.,
      25.,  26.,  27.,  28.,  5.,   6.,   7.,   8.,   13.,  14.,  15.,  16.,
      21.,  22.,  23.,  24.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      41.,  42.,  43.,  44.,  49.,  50.,  51.,  52.,  57.,  58.,  59.,  60.,
      37.,  38.,  39.,  40.,  45.,  46.,  47.,  48.,  53.,  54.,  55.,  56.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  73.,  74.,  75.,  76.,
      81.,  82.,  83.,  84.,  89.,  90.,  91.,  92.,  69.,  70.,  71.,  72.,
      77.,  78.,  79.,  80.,  85.,  86.,  87.,  88.,  93.,  94.,  95.,  96.,
      97.,  98.,  99.,  100., 105., 106., 107., 108., 113., 114., 115., 116.,
      121., 122., 123., 124., 101., 102., 103., 104., 109., 110., 111., 112.,
      117., 118., 119., 120., 125., 126., 127., 128.};
  const std::vector<int> sizes = {4, 4, 2, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   9.,   17.,  25.,  2.,   10.,  18.,  26.,  3.,   11.,  19.,  27.,
      4.,   12.,  20.,  28.,  5.,   13.,  21.,  29.,  6.,   14.,  22.,  30.,
      7.,   15.,  23.,  31.,  8.,   16.,  24.,  32.,  33.,  41.,  49.,  57.,
      34.,  42.,  50.,  58.,  35.,  43.,  51.,  59.,  36.,  44.,  52.,  60.,
      37.,  45.,  53.,  61.,  38.,  46.,  54.,  62.,  39.,  47.,  55.,  63.,
      40.,  48.,  56.,  64.,  65.,  73.,  81.,  89.,  66.,  74.,  82.,  90.,
      67.,  75.,  83.,  91.,  68.,  76.,  84.,  92.,  69.,  77.,  85.,  93.,
      70.,  78.,  86.,  94.,  71.,  79.,  87.,  95.,  72.,  80.,  88.,  96.,
      97.,  105., 113., 121., 98.,  106., 114., 122., 99.,  107., 115., 123.,
      100., 108., 116., 124., 101., 109., 117., 125., 102., 110., 118., 126.,
      103., 111., 119., 127., 104., 112., 120., 128.};
  const std::vector<int> sizes = {4, 4, 2, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  17.,  21.,  25.,  29.,  2.,   6.,   10.,  14.,
      18.,  22.,  26.,  30.,  3.,   7.,   11.,  15.,  19.,  23.,  27.,  31.,
      4.,   8.,   12.,  16.,  20.,  24.,  28.,  32.,  33.,  37.,  41.,  45.,
      49.,  53.,  57.,  61.,  34.,  38.,  42.,  46.,  50.,  54.,  58.,  62.,
      35.,  39.,  43.,  47.,  51.,  55.,  59.,  63.,  36.,  40.,  44.,  48.,
      52.,  56.,  60.,  64.,  65.,  69.,  73.,  77.,  81.,  85.,  89.,  93.,
      66.,  70.,  74.,  78.,  82.,  86.,  90.,  94.,  67.,  71.,  75.,  79.,
      83.,  87.,  91.,  95.,  68.,  72.,  76.,  80.,  84.,  88.,  92.,  96.,
      97.,  101., 105., 109., 113., 117., 121., 125., 98.,  102., 106., 110.,
      114., 118., 122., 126., 99.,  103., 107., 111., 115., 119., 123., 127.,
      100., 104., 108., 112., 116., 120., 124., 128.};
  const std::vector<int> sizes = {4, 4, 2, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   9.,   17.,  25.,  5.,   13.,  21.,  29.,  2.,   10.,  18.,  26.,
      6.,   14.,  22.,  30.,  3.,   11.,  19.,  27.,  7.,   15.,  23.,  31.,
      4.,   12.,  20.,  28.,  8.,   16.,  24.,  32.,  33.,  41.,  49.,  57.,
      37.,  45.,  53.,  61.,  34.,  42.,  50.,  58.,  38.,  46.,  54.,  62.,
      35.,  43.,  51.,  59.,  39.,  47.,  55.,  63.,  36.,  44.,  52.,  60.,
      40.,  48.,  56.,  64.,  65.,  73.,  81.,  89.,  69.,  77.,  85.,  93.,
      66.,  74.,  82.,  90.,  70.,  78.,  86.,  94.,  67.,  75.,  83.,  91.,
      71.,  79.,  87.,  95.,  68.,  76.,  84.,  92.,  72.,  80.,  88.,  96.,
      97.,  105., 113., 121., 101., 109., 117., 125., 98.,  106., 114., 122.,
      102., 110., 118., 126., 99.,  107., 115., 123., 103., 111., 119., 127.,
      100., 108., 116., 124., 104., 112., 120., 128.};
  const std::vector<int> sizes = {4, 4, 2, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   33.,  34.,  35.,  36.,
      37.,  38.,  39.,  40.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 9.,   10.,  11.,  12.,
      13.,  14.,  15.,  16.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  105., 106., 107., 108.,
      109., 110., 111., 112., 17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  81.,  82.,  83.,  84.,
      85.,  86.,  87.,  88.,  113., 114., 115., 116., 117., 118., 119., 120.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  57.,  58.,  59.,  60.,
      61.,  62.,  63.,  64.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      121., 122., 123., 124., 125., 126., 127., 128.};
  const std::vector<int> sizes = {4, 4, 2, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   2.,   6.,   3.,   7.,   4.,   8.,   33.,  37.,  34.,  38.,
      35.,  39.,  36.,  40.,  65.,  69.,  66.,  70.,  67.,  71.,  68.,  72.,
      97.,  101., 98.,  102., 99.,  103., 100., 104., 9.,   13.,  10.,  14.,
      11.,  15.,  12.,  16.,  41.,  45.,  42.,  46.,  43.,  47.,  44.,  48.,
      73.,  77.,  74.,  78.,  75.,  79.,  76.,  80.,  105., 109., 106., 110.,
      107., 111., 108., 112., 17.,  21.,  18.,  22.,  19.,  23.,  20.,  24.,
      49.,  53.,  50.,  54.,  51.,  55.,  52.,  56.,  81.,  85.,  82.,  86.,
      83.,  87.,  84.,  88.,  113., 117., 114., 118., 115., 119., 116., 120.,
      25.,  29.,  26.,  30.,  27.,  31.,  28.,  32.,  57.,  61.,  58.,  62.,
      59.,  63.,  60.,  64.,  89.,  93.,  90.,  94.,  91.,  95.,  92.,  96.,
      121., 125., 122., 126., 123., 127., 124., 128.};
  const std::vector<int> sizes = {4, 4, 2, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   33.,  34.,  35.,  36.,  65.,  66.,  67.,  68.,
      97.,  98.,  99.,  100., 5.,   6.,   7.,   8.,   37.,  38.,  39.,  40.,
      69.,  70.,  71.,  72.,  101., 102., 103., 104., 9.,   10.,  11.,  12.,
      41.,  42.,  43.,  44.,  73.,  74.,  75.,  76.,  105., 106., 107., 108.,
      13.,  14.,  15.,  16.,  45.,  46.,  47.,  48.,  77.,  78.,  79.,  80.,
      109., 110., 111., 112., 17.,  18.,  19.,  20.,  49.,  50.,  51.,  52.,
      81.,  82.,  83.,  84.,  113., 114., 115., 116., 21.,  22.,  23.,  24.,
      53.,  54.,  55.,  56.,  85.,  86.,  87.,  88.,  117., 118., 119., 120.,
      25.,  26.,  27.,  28.,  57.,  58.,  59.,  60.,  89.,  90.,  91.,  92.,
      121., 122., 123., 124., 29.,  30.,  31.,  32.,  61.,  62.,  63.,  64.,
      93.,  94.,  95.,  96.,  125., 126., 127., 128.};
  const std::vector<int> sizes = {4, 4, 2, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 97.,  2.,  34., 66., 98.,  3.,  35., 67., 99.,
      4.,  36., 68., 100., 5.,  37., 69., 101., 6.,  38., 70., 102.,
      7.,  39., 71., 103., 8.,  40., 72., 104., 9.,  41., 73., 105.,
      10., 42., 74., 106., 11., 43., 75., 107., 12., 44., 76., 108.,
      13., 45., 77., 109., 14., 46., 78., 110., 15., 47., 79., 111.,
      16., 48., 80., 112., 17., 49., 81., 113., 18., 50., 82., 114.,
      19., 51., 83., 115., 20., 52., 84., 116., 21., 53., 85., 117.,
      22., 54., 86., 118., 23., 55., 87., 119., 24., 56., 88., 120.,
      25., 57., 89., 121., 26., 58., 90., 122., 27., 59., 91., 123.,
      28., 60., 92., 124., 29., 61., 93., 125., 30., 62., 94., 126.,
      31., 63., 95., 127., 32., 64., 96., 128.};
  const std::vector<int> sizes = {4, 4, 2, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  33.,  37.,  65., 69., 97.,  101., 2.,  6.,  34.,  38.,
      66., 70., 98.,  102., 3.,  7.,  35.,  39.,  67., 71., 99.,  103.,
      4.,  8.,  36.,  40.,  68., 72., 100., 104., 9.,  13., 41.,  45.,
      73., 77., 105., 109., 10., 14., 42.,  46.,  74., 78., 106., 110.,
      11., 15., 43.,  47.,  75., 79., 107., 111., 12., 16., 44.,  48.,
      76., 80., 108., 112., 17., 21., 49.,  53.,  81., 85., 113., 117.,
      18., 22., 50.,  54.,  82., 86., 114., 118., 19., 23., 51.,  55.,
      83., 87., 115., 119., 20., 24., 52.,  56.,  84., 88., 116., 120.,
      25., 29., 57.,  61.,  89., 93., 121., 125., 26., 30., 58.,  62.,
      90., 94., 122., 126., 27., 31., 59.,  63.,  91., 95., 123., 127.,
      28., 32., 60.,  64.,  92., 96., 124., 128.};
  const std::vector<int> sizes = {4, 4, 2, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 97.,  5.,  37., 69., 101., 2.,  34., 66., 98.,
      6.,  38., 70., 102., 3.,  35., 67., 99.,  7.,  39., 71., 103.,
      4.,  36., 68., 100., 8.,  40., 72., 104., 9.,  41., 73., 105.,
      13., 45., 77., 109., 10., 42., 74., 106., 14., 46., 78., 110.,
      11., 43., 75., 107., 15., 47., 79., 111., 12., 44., 76., 108.,
      16., 48., 80., 112., 17., 49., 81., 113., 21., 53., 85., 117.,
      18., 50., 82., 114., 22., 54., 86., 118., 19., 51., 83., 115.,
      23., 55., 87., 119., 20., 52., 84., 116., 24., 56., 88., 120.,
      25., 57., 89., 121., 29., 61., 93., 125., 26., 58., 90., 122.,
      30., 62., 94., 126., 27., 59., 91., 123., 31., 63., 95., 127.,
      28., 60., 92., 124., 32., 64., 96., 128.};
  const std::vector<int> sizes = {4, 4, 2, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   9.,   10.,  11.,  12.,  17.,  18.,  19.,  20.,
      25.,  26.,  27.,  28.,  33.,  34.,  35.,  36.,  41.,  42.,  43.,  44.,
      49.,  50.,  51.,  52.,  57.,  58.,  59.,  60.,  65.,  66.,  67.,  68.,
      73.,  74.,  75.,  76.,  81.,  82.,  83.,  84.,  89.,  90.,  91.,  92.,
      97.,  98.,  99.,  100., 105., 106., 107., 108., 113., 114., 115., 116.,
      121., 122., 123., 124., 5.,   6.,   7.,   8.,   13.,  14.,  15.,  16.,
      21.,  22.,  23.,  24.,  29.,  30.,  31.,  32.,  37.,  38.,  39.,  40.,
      45.,  46.,  47.,  48.,  53.,  54.,  55.,  56.,  61.,  62.,  63.,  64.,
      69.,  70.,  71.,  72.,  77.,  78.,  79.,  80.,  85.,  86.,  87.,  88.,
      93.,  94.,  95.,  96.,  101., 102., 103., 104., 109., 110., 111., 112.,
      117., 118., 119., 120., 125., 126., 127., 128.};
  const std::vector<int> sizes = {4, 4, 2, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   9.,   17.,  25.,  2.,   10.,  18.,  26.,  3.,   11.,  19.,  27.,
      4.,   12.,  20.,  28.,  33.,  41.,  49.,  57.,  34.,  42.,  50.,  58.,
      35.,  43.,  51.,  59.,  36.,  44.,  52.,  60.,  65.,  73.,  81.,  89.,
      66.,  74.,  82.,  90.,  67.,  75.,  83.,  91.,  68.,  76.,  84.,  92.,
      97.,  105., 113., 121., 98.,  106., 114., 122., 99.,  107., 115., 123.,
      100., 108., 116., 124., 5.,   13.,  21.,  29.,  6.,   14.,  22.,  30.,
      7.,   15.,  23.,  31.,  8.,   16.,  24.,  32.,  37.,  45.,  53.,  61.,
      38.,  46.,  54.,  62.,  39.,  47.,  55.,  63.,  40.,  48.,  56.,  64.,
      69.,  77.,  85.,  93.,  70.,  78.,  86.,  94.,  71.,  79.,  87.,  95.,
      72.,  80.,  88.,  96.,  101., 109., 117., 125., 102., 110., 118., 126.,
      103., 111., 119., 127., 104., 112., 120., 128.};
  const std::vector<int> sizes = {4, 4, 2, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   33.,  34.,  35.,  36.,  65.,  66.,  67.,  68.,
      97.,  98.,  99.,  100., 9.,   10.,  11.,  12.,  41.,  42.,  43.,  44.,
      73.,  74.,  75.,  76.,  105., 106., 107., 108., 17.,  18.,  19.,  20.,
      49.,  50.,  51.,  52.,  81.,  82.,  83.,  84.,  113., 114., 115., 116.,
      25.,  26.,  27.,  28.,  57.,  58.,  59.,  60.,  89.,  90.,  91.,  92.,
      121., 122., 123., 124., 5.,   6.,   7.,   8.,   37.,  38.,  39.,  40.,
      69.,  70.,  71.,  72.,  101., 102., 103., 104., 13.,  14.,  15.,  16.,
      45.,  46.,  47.,  48.,  77.,  78.,  79.,  80.,  109., 110., 111., 112.,
      21.,  22.,  23.,  24.,  53.,  54.,  55.,  56.,  85.,  86.,  87.,  88.,
      117., 118., 119., 120., 29.,  30.,  31.,  32.,  61.,  62.,  63.,  64.,
      93.,  94.,  95.,  96.,  125., 126., 127., 128.};
  const std::vector<int> sizes = {4, 4, 2, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 97.,  2.,  34., 66., 98.,  3.,  35., 67., 99.,
      4.,  36., 68., 100., 9.,  41., 73., 105., 10., 42., 74., 106.,
      11., 43., 75., 107., 12., 44., 76., 108., 17., 49., 81., 113.,
      18., 50., 82., 114., 19., 51., 83., 115., 20., 52., 84., 116.,
      25., 57., 89., 121., 26., 58., 90., 122., 27., 59., 91., 123.,
      28., 60., 92., 124., 5.,  37., 69., 101., 6.,  38., 70., 102.,
      7.,  39., 71., 103., 8.,  40., 72., 104., 13., 45., 77., 109.,
      14., 46., 78., 110., 15., 47., 79., 111., 16., 48., 80., 112.,
      21., 53., 85., 117., 22., 54., 86., 118., 23., 55., 87., 119.,
      24., 56., 88., 120., 29., 61., 93., 125., 30., 62., 94., 126.,
      31., 63., 95., 127., 32., 64., 96., 128.};
  const std::vector<int> sizes = {4, 4, 2, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   9.,   17.,  25.,  33.,  41.,  49.,  57.,  65.,  73.,  81.,  89.,
      97.,  105., 113., 121., 2.,   10.,  18.,  26.,  34.,  42.,  50.,  58.,
      66.,  74.,  82.,  90.,  98.,  106., 114., 122., 3.,   11.,  19.,  27.,
      35.,  43.,  51.,  59.,  67.,  75.,  83.,  91.,  99.,  107., 115., 123.,
      4.,   12.,  20.,  28.,  36.,  44.,  52.,  60.,  68.,  76.,  84.,  92.,
      100., 108., 116., 124., 5.,   13.,  21.,  29.,  37.,  45.,  53.,  61.,
      69.,  77.,  85.,  93.,  101., 109., 117., 125., 6.,   14.,  22.,  30.,
      38.,  46.,  54.,  62.,  70.,  78.,  86.,  94.,  102., 110., 118., 126.,
      7.,   15.,  23.,  31.,  39.,  47.,  55.,  63.,  71.,  79.,  87.,  95.,
      103., 111., 119., 127., 8.,   16.,  24.,  32.,  40.,  48.,  56.,  64.,
      72.,  80.,  88.,  96.,  104., 112., 120., 128.};
  const std::vector<int> sizes = {4, 4, 2, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 97.,  9.,  41., 73., 105., 17., 49., 81., 113.,
      25., 57., 89., 121., 2.,  34., 66., 98.,  10., 42., 74., 106.,
      18., 50., 82., 114., 26., 58., 90., 122., 3.,  35., 67., 99.,
      11., 43., 75., 107., 19., 51., 83., 115., 27., 59., 91., 123.,
      4.,  36., 68., 100., 12., 44., 76., 108., 20., 52., 84., 116.,
      28., 60., 92., 124., 5.,  37., 69., 101., 13., 45., 77., 109.,
      21., 53., 85., 117., 29., 61., 93., 125., 6.,  38., 70., 102.,
      14., 46., 78., 110., 22., 54., 86., 118., 30., 62., 94., 126.,
      7.,  39., 71., 103., 15., 47., 79., 111., 23., 55., 87., 119.,
      31., 63., 95., 127., 8.,  40., 72., 104., 16., 48., 80., 112.,
      24., 56., 88., 120., 32., 64., 96., 128.};
  const std::vector<int> sizes = {4, 4, 2, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  17.,  21.,  25.,  29.,  33.,  37.,  41.,  45.,
      49.,  53.,  57.,  61.,  65.,  69.,  73.,  77.,  81.,  85.,  89.,  93.,
      97.,  101., 105., 109., 113., 117., 121., 125., 2.,   6.,   10.,  14.,
      18.,  22.,  26.,  30.,  34.,  38.,  42.,  46.,  50.,  54.,  58.,  62.,
      66.,  70.,  74.,  78.,  82.,  86.,  90.,  94.,  98.,  102., 106., 110.,
      114., 118., 122., 126., 3.,   7.,   11.,  15.,  19.,  23.,  27.,  31.,
      35.,  39.,  43.,  47.,  51.,  55.,  59.,  63.,  67.,  71.,  75.,  79.,
      83.,  87.,  91.,  95.,  99.,  103., 107., 111., 115., 119., 123., 127.,
      4.,   8.,   12.,  16.,  20.,  24.,  28.,  32.,  36.,  40.,  44.,  48.,
      52.,  56.,  60.,  64.,  68.,  72.,  76.,  80.,  84.,  88.,  92.,  96.,
      100., 104., 108., 112., 116., 120., 124., 128.};
  const std::vector<int> sizes = {4, 4, 2, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   9.,   17.,  25.,  5.,   13.,  21.,  29.,  33.,  41.,  49.,  57.,
      37.,  45.,  53.,  61.,  65.,  73.,  81.,  89.,  69.,  77.,  85.,  93.,
      97.,  105., 113., 121., 101., 109., 117., 125., 2.,   10.,  18.,  26.,
      6.,   14.,  22.,  30.,  34.,  42.,  50.,  58.,  38.,  46.,  54.,  62.,
      66.,  74.,  82.,  90.,  70.,  78.,  86.,  94.,  98.,  106., 114., 122.,
      102., 110., 118., 126., 3.,   11.,  19.,  27.,  7.,   15.,  23.,  31.,
      35.,  43.,  51.,  59.,  39.,  47.,  55.,  63.,  67.,  75.,  83.,  91.,
      71.,  79.,  87.,  95.,  99.,  107., 115., 123., 103., 111., 119., 127.,
      4.,   12.,  20.,  28.,  8.,   16.,  24.,  32.,  36.,  44.,  52.,  60.,
      40.,  48.,  56.,  64.,  68.,  76.,  84.,  92.,  72.,  80.,  88.,  96.,
      100., 108., 116., 124., 104., 112., 120., 128.};
  const std::vector<int> sizes = {4, 4, 2, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  33.,  37.,  65., 69., 97.,  101., 9.,  13., 41.,  45.,
      73., 77., 105., 109., 17., 21., 49.,  53.,  81., 85., 113., 117.,
      25., 29., 57.,  61.,  89., 93., 121., 125., 2.,  6.,  34.,  38.,
      66., 70., 98.,  102., 10., 14., 42.,  46.,  74., 78., 106., 110.,
      18., 22., 50.,  54.,  82., 86., 114., 118., 26., 30., 58.,  62.,
      90., 94., 122., 126., 3.,  7.,  35.,  39.,  67., 71., 99.,  103.,
      11., 15., 43.,  47.,  75., 79., 107., 111., 19., 23., 51.,  55.,
      83., 87., 115., 119., 27., 31., 59.,  63.,  91., 95., 123., 127.,
      4.,  8.,  36.,  40.,  68., 72., 100., 104., 12., 16., 44.,  48.,
      76., 80., 108., 112., 20., 24., 52.,  56.,  84., 88., 116., 120.,
      28., 32., 60.,  64.,  92., 96., 124., 128.};
  const std::vector<int> sizes = {4, 4, 2, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 97.,  5.,  37., 69., 101., 9.,  41., 73., 105.,
      13., 45., 77., 109., 17., 49., 81., 113., 21., 53., 85., 117.,
      25., 57., 89., 121., 29., 61., 93., 125., 2.,  34., 66., 98.,
      6.,  38., 70., 102., 10., 42., 74., 106., 14., 46., 78., 110.,
      18., 50., 82., 114., 22., 54., 86., 118., 26., 58., 90., 122.,
      30., 62., 94., 126., 3.,  35., 67., 99.,  7.,  39., 71., 103.,
      11., 43., 75., 107., 15., 47., 79., 111., 19., 51., 83., 115.,
      23., 55., 87., 119., 27., 59., 91., 123., 31., 63., 95., 127.,
      4.,  36., 68., 100., 8.,  40., 72., 104., 12., 44., 76., 108.,
      16., 48., 80., 112., 20., 52., 84., 116., 24., 56., 88., 120.,
      28., 60., 92., 124., 32., 64., 96., 128.};
  const std::vector<int> sizes = {4, 4, 2, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   9.,   17.,  25.,  33.,  41.,  49.,  57.,  65.,  73.,  81.,  89.,
      97.,  105., 113., 121., 5.,   13.,  21.,  29.,  37.,  45.,  53.,  61.,
      69.,  77.,  85.,  93.,  101., 109., 117., 125., 2.,   10.,  18.,  26.,
      34.,  42.,  50.,  58.,  66.,  74.,  82.,  90.,  98.,  106., 114., 122.,
      6.,   14.,  22.,  30.,  38.,  46.,  54.,  62.,  70.,  78.,  86.,  94.,
      102., 110., 118., 126., 3.,   11.,  19.,  27.,  35.,  43.,  51.,  59.,
      67.,  75.,  83.,  91.,  99.,  107., 115., 123., 7.,   15.,  23.,  31.,
      39.,  47.,  55.,  63.,  71.,  79.,  87.,  95.,  103., 111., 119., 127.,
      4.,   12.,  20.,  28.,  36.,  44.,  52.,  60.,  68.,  76.,  84.,  92.,
      100., 108., 116., 124., 8.,   16.,  24.,  32.,  40.,  48.,  56.,  64.,
      72.,  80.,  88.,  96.,  104., 112., 120., 128.};
  const std::vector<int> sizes = {4, 4, 2, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x2x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 97.,  9.,  41., 73., 105., 17., 49., 81., 113.,
      25., 57., 89., 121., 5.,  37., 69., 101., 13., 45., 77., 109.,
      21., 53., 85., 117., 29., 61., 93., 125., 2.,  34., 66., 98.,
      10., 42., 74., 106., 18., 50., 82., 114., 26., 58., 90., 122.,
      6.,  38., 70., 102., 14., 46., 78., 110., 22., 54., 86., 118.,
      30., 62., 94., 126., 3.,  35., 67., 99.,  11., 43., 75., 107.,
      19., 51., 83., 115., 27., 59., 91., 123., 7.,  39., 71., 103.,
      15., 47., 79., 111., 23., 55., 87., 119., 31., 63., 95., 127.,
      4.,  36., 68., 100., 12., 44., 76., 108., 20., 52., 84., 116.,
      28., 60., 92., 124., 8.,  40., 72., 104., 16., 48., 80., 112.,
      24., 56., 88., 120., 32., 64., 96., 128.};
  const std::vector<int> sizes = {4, 4, 2, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14.,
      15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28.,
      29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42.,
      43., 44., 45., 46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56.,
      57., 58., 59., 60., 61., 62., 63., 64., 65., 66., 67., 68., 69., 70.,
      71., 72., 73., 74., 75., 76., 77., 78., 79., 80., 81., 82., 83., 84.,
      85., 86., 87., 88., 89., 90., 91., 92., 93., 94., 95., 96.};
  const std::vector<int> sizes = {4, 4, 3, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  2.,  4.,  6.,  7.,  9.,  11., 8.,  10., 12., 13., 15.,
      17., 14., 16., 18., 19., 21., 23., 20., 22., 24., 25., 27., 29., 26.,
      28., 30., 31., 33., 35., 32., 34., 36., 37., 39., 41., 38., 40., 42.,
      43., 45., 47., 44., 46., 48., 49., 51., 53., 50., 52., 54., 55., 57.,
      59., 56., 58., 60., 61., 63., 65., 62., 64., 66., 67., 69., 71., 68.,
      70., 72., 73., 75., 77., 74., 76., 78., 79., 81., 83., 80., 82., 84.,
      85., 87., 89., 86., 88., 90., 91., 93., 95., 92., 94., 96.};
  const std::vector<int> sizes = {4, 4, 3, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  7.,  8.,  13., 14., 19., 20., 3.,  4.,  9.,  10., 15., 16.,
      21., 22., 5.,  6.,  11., 12., 17., 18., 23., 24., 25., 26., 31., 32.,
      37., 38., 43., 44., 27., 28., 33., 34., 39., 40., 45., 46., 29., 30.,
      35., 36., 41., 42., 47., 48., 49., 50., 55., 56., 61., 62., 67., 68.,
      51., 52., 57., 58., 63., 64., 69., 70., 53., 54., 59., 60., 65., 66.,
      71., 72., 73., 74., 79., 80., 85., 86., 91., 92., 75., 76., 81., 82.,
      87., 88., 93., 94., 77., 78., 83., 84., 89., 90., 95., 96.};
  const std::vector<int> sizes = {4, 4, 3, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 2.,  8.,  14., 20., 3.,  9.,  15., 21., 4.,  10.,
      16., 22., 5.,  11., 17., 23., 6.,  12., 18., 24., 25., 31., 37., 43.,
      26., 32., 38., 44., 27., 33., 39., 45., 28., 34., 40., 46., 29., 35.,
      41., 47., 30., 36., 42., 48., 49., 55., 61., 67., 50., 56., 62., 68.,
      51., 57., 63., 69., 52., 58., 64., 70., 53., 59., 65., 71., 54., 60.,
      66., 72., 73., 79., 85., 91., 74., 80., 86., 92., 75., 81., 87., 93.,
      76., 82., 88., 94., 77., 83., 89., 95., 78., 84., 90., 96.};
  const std::vector<int> sizes = {4, 4, 3, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23., 2.,  4.,
      6.,  8.,  10., 12., 14., 16., 18., 20., 22., 24., 25., 27., 29., 31.,
      33., 35., 37., 39., 41., 43., 45., 47., 26., 28., 30., 32., 34., 36.,
      38., 40., 42., 44., 46., 48., 49., 51., 53., 55., 57., 59., 61., 63.,
      65., 67., 69., 71., 50., 52., 54., 56., 58., 60., 62., 64., 66., 68.,
      70., 72., 73., 75., 77., 79., 81., 83., 85., 87., 89., 91., 93., 95.,
      74., 76., 78., 80., 82., 84., 86., 88., 90., 92., 94., 96.};
  const std::vector<int> sizes = {4, 4, 3, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 3.,  9.,  15., 21., 5.,  11., 17., 23., 2.,  8.,
      14., 20., 4.,  10., 16., 22., 6.,  12., 18., 24., 25., 31., 37., 43.,
      27., 33., 39., 45., 29., 35., 41., 47., 26., 32., 38., 44., 28., 34.,
      40., 46., 30., 36., 42., 48., 49., 55., 61., 67., 51., 57., 63., 69.,
      53., 59., 65., 71., 50., 56., 62., 68., 52., 58., 64., 70., 54., 60.,
      66., 72., 73., 79., 85., 91., 75., 81., 87., 93., 77., 83., 89., 95.,
      74., 80., 86., 92., 76., 82., 88., 94., 78., 84., 90., 96.};
  const std::vector<int> sizes = {4, 4, 3, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  25., 26., 27., 28., 29., 30., 49., 50.,
      51., 52., 53., 54., 73., 74., 75., 76., 77., 78., 7.,  8.,  9.,  10.,
      11., 12., 31., 32., 33., 34., 35., 36., 55., 56., 57., 58., 59., 60.,
      79., 80., 81., 82., 83., 84., 13., 14., 15., 16., 17., 18., 37., 38.,
      39., 40., 41., 42., 61., 62., 63., 64., 65., 66., 85., 86., 87., 88.,
      89., 90., 19., 20., 21., 22., 23., 24., 43., 44., 45., 46., 47., 48.,
      67., 68., 69., 70., 71., 72., 91., 92., 93., 94., 95., 96.};
  const std::vector<int> sizes = {4, 4, 3, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  2.,  4.,  6.,  25., 27., 29., 26., 28., 30., 49., 51.,
      53., 50., 52., 54., 73., 75., 77., 74., 76., 78., 7.,  9.,  11., 8.,
      10., 12., 31., 33., 35., 32., 34., 36., 55., 57., 59., 56., 58., 60.,
      79., 81., 83., 80., 82., 84., 13., 15., 17., 14., 16., 18., 37., 39.,
      41., 38., 40., 42., 61., 63., 65., 62., 64., 66., 85., 87., 89., 86.,
      88., 90., 19., 21., 23., 20., 22., 24., 43., 45., 47., 44., 46., 48.,
      67., 69., 71., 68., 70., 72., 91., 93., 95., 92., 94., 96.};
  const std::vector<int> sizes = {4, 4, 3, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  25., 26., 49., 50., 73., 74., 3.,  4.,  27., 28., 51., 52.,
      75., 76., 5.,  6.,  29., 30., 53., 54., 77., 78., 7.,  8.,  31., 32.,
      55., 56., 79., 80., 9.,  10., 33., 34., 57., 58., 81., 82., 11., 12.,
      35., 36., 59., 60., 83., 84., 13., 14., 37., 38., 61., 62., 85., 86.,
      15., 16., 39., 40., 63., 64., 87., 88., 17., 18., 41., 42., 65., 66.,
      89., 90., 19., 20., 43., 44., 67., 68., 91., 92., 21., 22., 45., 46.,
      69., 70., 93., 94., 23., 24., 47., 48., 71., 72., 95., 96.};
  const std::vector<int> sizes = {4, 4, 3, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 2.,  26., 50., 74., 3.,  27., 51., 75., 4.,  28.,
      52., 76., 5.,  29., 53., 77., 6.,  30., 54., 78., 7.,  31., 55., 79.,
      8.,  32., 56., 80., 9.,  33., 57., 81., 10., 34., 58., 82., 11., 35.,
      59., 83., 12., 36., 60., 84., 13., 37., 61., 85., 14., 38., 62., 86.,
      15., 39., 63., 87., 16., 40., 64., 88., 17., 41., 65., 89., 18., 42.,
      66., 90., 19., 43., 67., 91., 20., 44., 68., 92., 21., 45., 69., 93.,
      22., 46., 70., 94., 23., 47., 71., 95., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 4, 3, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  25., 27., 29., 49., 51., 53., 73., 75., 77., 2.,  4.,
      6.,  26., 28., 30., 50., 52., 54., 74., 76., 78., 7.,  9.,  11., 31.,
      33., 35., 55., 57., 59., 79., 81., 83., 8.,  10., 12., 32., 34., 36.,
      56., 58., 60., 80., 82., 84., 13., 15., 17., 37., 39., 41., 61., 63.,
      65., 85., 87., 89., 14., 16., 18., 38., 40., 42., 62., 64., 66., 86.,
      88., 90., 19., 21., 23., 43., 45., 47., 67., 69., 71., 91., 93., 95.,
      20., 22., 24., 44., 46., 48., 68., 70., 72., 92., 94., 96.};
  const std::vector<int> sizes = {4, 4, 3, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 3.,  27., 51., 75., 5.,  29., 53., 77., 2.,  26.,
      50., 74., 4.,  28., 52., 76., 6.,  30., 54., 78., 7.,  31., 55., 79.,
      9.,  33., 57., 81., 11., 35., 59., 83., 8.,  32., 56., 80., 10., 34.,
      58., 82., 12., 36., 60., 84., 13., 37., 61., 85., 15., 39., 63., 87.,
      17., 41., 65., 89., 14., 38., 62., 86., 16., 40., 64., 88., 18., 42.,
      66., 90., 19., 43., 67., 91., 21., 45., 69., 93., 23., 47., 71., 95.,
      20., 44., 68., 92., 22., 46., 70., 94., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 4, 3, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  7.,  8.,  13., 14., 19., 20., 25., 26., 31., 32., 37., 38.,
      43., 44., 49., 50., 55., 56., 61., 62., 67., 68., 73., 74., 79., 80.,
      85., 86., 91., 92., 3.,  4.,  9.,  10., 15., 16., 21., 22., 27., 28.,
      33., 34., 39., 40., 45., 46., 51., 52., 57., 58., 63., 64., 69., 70.,
      75., 76., 81., 82., 87., 88., 93., 94., 5.,  6.,  11., 12., 17., 18.,
      23., 24., 29., 30., 35., 36., 41., 42., 47., 48., 53., 54., 59., 60.,
      65., 66., 71., 72., 77., 78., 83., 84., 89., 90., 95., 96.};
  const std::vector<int> sizes = {4, 4, 3, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 2.,  8.,  14., 20., 25., 31., 37., 43., 26., 32.,
      38., 44., 49., 55., 61., 67., 50., 56., 62., 68., 73., 79., 85., 91.,
      74., 80., 86., 92., 3.,  9.,  15., 21., 4.,  10., 16., 22., 27., 33.,
      39., 45., 28., 34., 40., 46., 51., 57., 63., 69., 52., 58., 64., 70.,
      75., 81., 87., 93., 76., 82., 88., 94., 5.,  11., 17., 23., 6.,  12.,
      18., 24., 29., 35., 41., 47., 30., 36., 42., 48., 53., 59., 65., 71.,
      54., 60., 66., 72., 77., 83., 89., 95., 78., 84., 90., 96.};
  const std::vector<int> sizes = {4, 4, 3, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  25., 26., 49., 50., 73., 74., 7.,  8.,  31., 32., 55., 56.,
      79., 80., 13., 14., 37., 38., 61., 62., 85., 86., 19., 20., 43., 44.,
      67., 68., 91., 92., 3.,  4.,  27., 28., 51., 52., 75., 76., 9.,  10.,
      33., 34., 57., 58., 81., 82., 15., 16., 39., 40., 63., 64., 87., 88.,
      21., 22., 45., 46., 69., 70., 93., 94., 5.,  6.,  29., 30., 53., 54.,
      77., 78., 11., 12., 35., 36., 59., 60., 83., 84., 17., 18., 41., 42.,
      65., 66., 89., 90., 23., 24., 47., 48., 71., 72., 95., 96.};
  const std::vector<int> sizes = {4, 4, 3, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 2.,  26., 50., 74., 7.,  31., 55., 79., 8.,  32.,
      56., 80., 13., 37., 61., 85., 14., 38., 62., 86., 19., 43., 67., 91.,
      20., 44., 68., 92., 3.,  27., 51., 75., 4.,  28., 52., 76., 9.,  33.,
      57., 81., 10., 34., 58., 82., 15., 39., 63., 87., 16., 40., 64., 88.,
      21., 45., 69., 93., 22., 46., 70., 94., 5.,  29., 53., 77., 6.,  30.,
      54., 78., 11., 35., 59., 83., 12., 36., 60., 84., 17., 41., 65., 89.,
      18., 42., 66., 90., 23., 47., 71., 95., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 4, 3, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 25., 31., 37., 43., 49., 55., 61., 67., 73., 79.,
      85., 91., 2.,  8.,  14., 20., 26., 32., 38., 44., 50., 56., 62., 68.,
      74., 80., 86., 92., 3.,  9.,  15., 21., 27., 33., 39., 45., 51., 57.,
      63., 69., 75., 81., 87., 93., 4.,  10., 16., 22., 28., 34., 40., 46.,
      52., 58., 64., 70., 76., 82., 88., 94., 5.,  11., 17., 23., 29., 35.,
      41., 47., 53., 59., 65., 71., 77., 83., 89., 95., 6.,  12., 18., 24.,
      30., 36., 42., 48., 54., 60., 66., 72., 78., 84., 90., 96.};
  const std::vector<int> sizes = {4, 4, 3, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 7.,  31., 55., 79., 13., 37., 61., 85., 19., 43.,
      67., 91., 2.,  26., 50., 74., 8.,  32., 56., 80., 14., 38., 62., 86.,
      20., 44., 68., 92., 3.,  27., 51., 75., 9.,  33., 57., 81., 15., 39.,
      63., 87., 21., 45., 69., 93., 4.,  28., 52., 76., 10., 34., 58., 82.,
      16., 40., 64., 88., 22., 46., 70., 94., 5.,  29., 53., 77., 11., 35.,
      59., 83., 17., 41., 65., 89., 23., 47., 71., 95., 6.,  30., 54., 78.,
      12., 36., 60., 84., 18., 42., 66., 90., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 4, 3, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  7.,  9.,  11., 13., 15., 17., 19., 21., 23., 25., 27.,
      29., 31., 33., 35., 37., 39., 41., 43., 45., 47., 49., 51., 53., 55.,
      57., 59., 61., 63., 65., 67., 69., 71., 73., 75., 77., 79., 81., 83.,
      85., 87., 89., 91., 93., 95., 2.,  4.,  6.,  8.,  10., 12., 14., 16.,
      18., 20., 22., 24., 26., 28., 30., 32., 34., 36., 38., 40., 42., 44.,
      46., 48., 50., 52., 54., 56., 58., 60., 62., 64., 66., 68., 70., 72.,
      74., 76., 78., 80., 82., 84., 86., 88., 90., 92., 94., 96.};
  const std::vector<int> sizes = {4, 4, 3, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 3.,  9.,  15., 21., 5.,  11., 17., 23., 25., 31.,
      37., 43., 27., 33., 39., 45., 29., 35., 41., 47., 49., 55., 61., 67.,
      51., 57., 63., 69., 53., 59., 65., 71., 73., 79., 85., 91., 75., 81.,
      87., 93., 77., 83., 89., 95., 2.,  8.,  14., 20., 4.,  10., 16., 22.,
      6.,  12., 18., 24., 26., 32., 38., 44., 28., 34., 40., 46., 30., 36.,
      42., 48., 50., 56., 62., 68., 52., 58., 64., 70., 54., 60., 66., 72.,
      74., 80., 86., 92., 76., 82., 88., 94., 78., 84., 90., 96.};
  const std::vector<int> sizes = {4, 4, 3, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  3.,  5.,  25., 27., 29., 49., 51., 53., 73., 75., 77., 7.,  9.,
      11., 31., 33., 35., 55., 57., 59., 79., 81., 83., 13., 15., 17., 37.,
      39., 41., 61., 63., 65., 85., 87., 89., 19., 21., 23., 43., 45., 47.,
      67., 69., 71., 91., 93., 95., 2.,  4.,  6.,  26., 28., 30., 50., 52.,
      54., 74., 76., 78., 8.,  10., 12., 32., 34., 36., 56., 58., 60., 80.,
      82., 84., 14., 16., 18., 38., 40., 42., 62., 64., 66., 86., 88., 90.,
      20., 22., 24., 44., 46., 48., 68., 70., 72., 92., 94., 96.};
  const std::vector<int> sizes = {4, 4, 3, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 3.,  27., 51., 75., 5.,  29., 53., 77., 7.,  31.,
      55., 79., 9.,  33., 57., 81., 11., 35., 59., 83., 13., 37., 61., 85.,
      15., 39., 63., 87., 17., 41., 65., 89., 19., 43., 67., 91., 21., 45.,
      69., 93., 23., 47., 71., 95., 2.,  26., 50., 74., 4.,  28., 52., 76.,
      6.,  30., 54., 78., 8.,  32., 56., 80., 10., 34., 58., 82., 12., 36.,
      60., 84., 14., 38., 62., 86., 16., 40., 64., 88., 18., 42., 66., 90.,
      20., 44., 68., 92., 22., 46., 70., 94., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 4, 3, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  7.,  13., 19., 25., 31., 37., 43., 49., 55., 61., 67., 73., 79.,
      85., 91., 3.,  9.,  15., 21., 27., 33., 39., 45., 51., 57., 63., 69.,
      75., 81., 87., 93., 5.,  11., 17., 23., 29., 35., 41., 47., 53., 59.,
      65., 71., 77., 83., 89., 95., 2.,  8.,  14., 20., 26., 32., 38., 44.,
      50., 56., 62., 68., 74., 80., 86., 92., 4.,  10., 16., 22., 28., 34.,
      40., 46., 52., 58., 64., 70., 76., 82., 88., 94., 6.,  12., 18., 24.,
      30., 36., 42., 48., 54., 60., 66., 72., 78., 84., 90., 96.};
  const std::vector<int> sizes = {4, 4, 3, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  25., 49., 73., 7.,  31., 55., 79., 13., 37., 61., 85., 19., 43.,
      67., 91., 3.,  27., 51., 75., 9.,  33., 57., 81., 15., 39., 63., 87.,
      21., 45., 69., 93., 5.,  29., 53., 77., 11., 35., 59., 83., 17., 41.,
      65., 89., 23., 47., 71., 95., 2.,  26., 50., 74., 8.,  32., 56., 80.,
      14., 38., 62., 86., 20., 44., 68., 92., 4.,  28., 52., 76., 10., 34.,
      58., 82., 16., 40., 64., 88., 22., 46., 70., 94., 6.,  30., 54., 78.,
      12., 36., 60., 84., 18., 42., 66., 90., 24., 48., 72., 96.};
  const std::vector<int> sizes = {4, 4, 3, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13.,  14.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 105., 106., 107., 108.,
      109., 110., 111., 112., 113., 114., 115., 116., 117., 118., 119., 120.,
      121., 122., 123., 124., 125., 126., 127., 128., 129., 130., 131., 132.,
      133., 134., 135., 136., 137., 138., 139., 140., 141., 142., 143., 144.};
  const std::vector<int> sizes = {4, 4, 3, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   7.,   2.,   5.,   8.,   3.,   6.,   9.,   10.,  13.,  16.,
      11.,  14.,  17.,  12.,  15.,  18.,  19.,  22.,  25.,  20.,  23.,  26.,
      21.,  24.,  27.,  28.,  31.,  34.,  29.,  32.,  35.,  30.,  33.,  36.,
      37.,  40.,  43.,  38.,  41.,  44.,  39.,  42.,  45.,  46.,  49.,  52.,
      47.,  50.,  53.,  48.,  51.,  54.,  55.,  58.,  61.,  56.,  59.,  62.,
      57.,  60.,  63.,  64.,  67.,  70.,  65.,  68.,  71.,  66.,  69.,  72.,
      73.,  76.,  79.,  74.,  77.,  80.,  75.,  78.,  81.,  82.,  85.,  88.,
      83.,  86.,  89.,  84.,  87.,  90.,  91.,  94.,  97.,  92.,  95.,  98.,
      93.,  96.,  99.,  100., 103., 106., 101., 104., 107., 102., 105., 108.,
      109., 112., 115., 110., 113., 116., 111., 114., 117., 118., 121., 124.,
      119., 122., 125., 120., 123., 126., 127., 130., 133., 128., 131., 134.,
      129., 132., 135., 136., 139., 142., 137., 140., 143., 138., 141., 144.};
  const std::vector<int> sizes = {4, 4, 3, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   10.,  11.,  12.,  19.,  20.,  21.,  28.,  29.,  30.,
      4.,   5.,   6.,   13.,  14.,  15.,  22.,  23.,  24.,  31.,  32.,  33.,
      7.,   8.,   9.,   16.,  17.,  18.,  25.,  26.,  27.,  34.,  35.,  36.,
      37.,  38.,  39.,  46.,  47.,  48.,  55.,  56.,  57.,  64.,  65.,  66.,
      40.,  41.,  42.,  49.,  50.,  51.,  58.,  59.,  60.,  67.,  68.,  69.,
      43.,  44.,  45.,  52.,  53.,  54.,  61.,  62.,  63.,  70.,  71.,  72.,
      73.,  74.,  75.,  82.,  83.,  84.,  91.,  92.,  93.,  100., 101., 102.,
      76.,  77.,  78.,  85.,  86.,  87.,  94.,  95.,  96.,  103., 104., 105.,
      79.,  80.,  81.,  88.,  89.,  90.,  97.,  98.,  99.,  106., 107., 108.,
      109., 110., 111., 118., 119., 120., 127., 128., 129., 136., 137., 138.,
      112., 113., 114., 121., 122., 123., 130., 131., 132., 139., 140., 141.,
      115., 116., 117., 124., 125., 126., 133., 134., 135., 142., 143., 144.};
  const std::vector<int> sizes = {4, 4, 3, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   10.,  19.,  28.,  2.,   11.,  20.,  29.,  3.,   12.,  21.,  30.,
      4.,   13.,  22.,  31.,  5.,   14.,  23.,  32.,  6.,   15.,  24.,  33.,
      7.,   16.,  25.,  34.,  8.,   17.,  26.,  35.,  9.,   18.,  27.,  36.,
      37.,  46.,  55.,  64.,  38.,  47.,  56.,  65.,  39.,  48.,  57.,  66.,
      40.,  49.,  58.,  67.,  41.,  50.,  59.,  68.,  42.,  51.,  60.,  69.,
      43.,  52.,  61.,  70.,  44.,  53.,  62.,  71.,  45.,  54.,  63.,  72.,
      73.,  82.,  91.,  100., 74.,  83.,  92.,  101., 75.,  84.,  93.,  102.,
      76.,  85.,  94.,  103., 77.,  86.,  95.,  104., 78.,  87.,  96.,  105.,
      79.,  88.,  97.,  106., 80.,  89.,  98.,  107., 81.,  90.,  99.,  108.,
      109., 118., 127., 136., 110., 119., 128., 137., 111., 120., 129., 138.,
      112., 121., 130., 139., 113., 122., 131., 140., 114., 123., 132., 141.,
      115., 124., 133., 142., 116., 125., 134., 143., 117., 126., 135., 144.};
  const std::vector<int> sizes = {4, 4, 3, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   7.,   10.,  13.,  16.,  19.,  22.,  25.,  28.,  31.,  34.,
      2.,   5.,   8.,   11.,  14.,  17.,  20.,  23.,  26.,  29.,  32.,  35.,
      3.,   6.,   9.,   12.,  15.,  18.,  21.,  24.,  27.,  30.,  33.,  36.,
      37.,  40.,  43.,  46.,  49.,  52.,  55.,  58.,  61.,  64.,  67.,  70.,
      38.,  41.,  44.,  47.,  50.,  53.,  56.,  59.,  62.,  65.,  68.,  71.,
      39.,  42.,  45.,  48.,  51.,  54.,  57.,  60.,  63.,  66.,  69.,  72.,
      73.,  76.,  79.,  82.,  85.,  88.,  91.,  94.,  97.,  100., 103., 106.,
      74.,  77.,  80.,  83.,  86.,  89.,  92.,  95.,  98.,  101., 104., 107.,
      75.,  78.,  81.,  84.,  87.,  90.,  93.,  96.,  99.,  102., 105., 108.,
      109., 112., 115., 118., 121., 124., 127., 130., 133., 136., 139., 142.,
      110., 113., 116., 119., 122., 125., 128., 131., 134., 137., 140., 143.,
      111., 114., 117., 120., 123., 126., 129., 132., 135., 138., 141., 144.};
  const std::vector<int> sizes = {4, 4, 3, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   10.,  19.,  28.,  4.,   13.,  22.,  31.,  7.,   16.,  25.,  34.,
      2.,   11.,  20.,  29.,  5.,   14.,  23.,  32.,  8.,   17.,  26.,  35.,
      3.,   12.,  21.,  30.,  6.,   15.,  24.,  33.,  9.,   18.,  27.,  36.,
      37.,  46.,  55.,  64.,  40.,  49.,  58.,  67.,  43.,  52.,  61.,  70.,
      38.,  47.,  56.,  65.,  41.,  50.,  59.,  68.,  44.,  53.,  62.,  71.,
      39.,  48.,  57.,  66.,  42.,  51.,  60.,  69.,  45.,  54.,  63.,  72.,
      73.,  82.,  91.,  100., 76.,  85.,  94.,  103., 79.,  88.,  97.,  106.,
      74.,  83.,  92.,  101., 77.,  86.,  95.,  104., 80.,  89.,  98.,  107.,
      75.,  84.,  93.,  102., 78.,  87.,  96.,  105., 81.,  90.,  99.,  108.,
      109., 118., 127., 136., 112., 121., 130., 139., 115., 124., 133., 142.,
      110., 119., 128., 137., 113., 122., 131., 140., 116., 125., 134., 143.,
      111., 120., 129., 138., 114., 123., 132., 141., 117., 126., 135., 144.};
  const std::vector<int> sizes = {4, 4, 3, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   37.,  38.,  39.,
      40.,  41.,  42.,  43.,  44.,  45.,  73.,  74.,  75.,  76.,  77.,  78.,
      79.,  80.,  81.,  109., 110., 111., 112., 113., 114., 115., 116., 117.,
      10.,  11.,  12.,  13.,  14.,  15.,  16.,  17.,  18.,  46.,  47.,  48.,
      49.,  50.,  51.,  52.,  53.,  54.,  82.,  83.,  84.,  85.,  86.,  87.,
      88.,  89.,  90.,  118., 119., 120., 121., 122., 123., 124., 125., 126.,
      19.,  20.,  21.,  22.,  23.,  24.,  25.,  26.,  27.,  55.,  56.,  57.,
      58.,  59.,  60.,  61.,  62.,  63.,  91.,  92.,  93.,  94.,  95.,  96.,
      97.,  98.,  99.,  127., 128., 129., 130., 131., 132., 133., 134., 135.,
      28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,  64.,  65.,  66.,
      67.,  68.,  69.,  70.,  71.,  72.,  100., 101., 102., 103., 104., 105.,
      106., 107., 108., 136., 137., 138., 139., 140., 141., 142., 143., 144.};
  const std::vector<int> sizes = {4, 4, 3, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   7.,   2.,   5.,   8.,   3.,   6.,   9.,   37.,  40.,  43.,
      38.,  41.,  44.,  39.,  42.,  45.,  73.,  76.,  79.,  74.,  77.,  80.,
      75.,  78.,  81.,  109., 112., 115., 110., 113., 116., 111., 114., 117.,
      10.,  13.,  16.,  11.,  14.,  17.,  12.,  15.,  18.,  46.,  49.,  52.,
      47.,  50.,  53.,  48.,  51.,  54.,  82.,  85.,  88.,  83.,  86.,  89.,
      84.,  87.,  90.,  118., 121., 124., 119., 122., 125., 120., 123., 126.,
      19.,  22.,  25.,  20.,  23.,  26.,  21.,  24.,  27.,  55.,  58.,  61.,
      56.,  59.,  62.,  57.,  60.,  63.,  91.,  94.,  97.,  92.,  95.,  98.,
      93.,  96.,  99.,  127., 130., 133., 128., 131., 134., 129., 132., 135.,
      28.,  31.,  34.,  29.,  32.,  35.,  30.,  33.,  36.,  64.,  67.,  70.,
      65.,  68.,  71.,  66.,  69.,  72.,  100., 103., 106., 101., 104., 107.,
      102., 105., 108., 136., 139., 142., 137., 140., 143., 138., 141., 144.};
  const std::vector<int> sizes = {4, 4, 3, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  37., 38., 39., 73.,  74.,  75.,  109., 110., 111.,
      4.,  5.,  6.,  40., 41., 42., 76.,  77.,  78.,  112., 113., 114.,
      7.,  8.,  9.,  43., 44., 45., 79.,  80.,  81.,  115., 116., 117.,
      10., 11., 12., 46., 47., 48., 82.,  83.,  84.,  118., 119., 120.,
      13., 14., 15., 49., 50., 51., 85.,  86.,  87.,  121., 122., 123.,
      16., 17., 18., 52., 53., 54., 88.,  89.,  90.,  124., 125., 126.,
      19., 20., 21., 55., 56., 57., 91.,  92.,  93.,  127., 128., 129.,
      22., 23., 24., 58., 59., 60., 94.,  95.,  96.,  130., 131., 132.,
      25., 26., 27., 61., 62., 63., 97.,  98.,  99.,  133., 134., 135.,
      28., 29., 30., 64., 65., 66., 100., 101., 102., 136., 137., 138.,
      31., 32., 33., 67., 68., 69., 103., 104., 105., 139., 140., 141.,
      34., 35., 36., 70., 71., 72., 106., 107., 108., 142., 143., 144.};
  const std::vector<int> sizes = {4, 4, 3, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  109., 2.,  38., 74.,  110., 3.,  39., 75.,  111.,
      4.,  40., 76.,  112., 5.,  41., 77.,  113., 6.,  42., 78.,  114.,
      7.,  43., 79.,  115., 8.,  44., 80.,  116., 9.,  45., 81.,  117.,
      10., 46., 82.,  118., 11., 47., 83.,  119., 12., 48., 84.,  120.,
      13., 49., 85.,  121., 14., 50., 86.,  122., 15., 51., 87.,  123.,
      16., 52., 88.,  124., 17., 53., 89.,  125., 18., 54., 90.,  126.,
      19., 55., 91.,  127., 20., 56., 92.,  128., 21., 57., 93.,  129.,
      22., 58., 94.,  130., 23., 59., 95.,  131., 24., 60., 96.,  132.,
      25., 61., 97.,  133., 26., 62., 98.,  134., 27., 63., 99.,  135.,
      28., 64., 100., 136., 29., 65., 101., 137., 30., 66., 102., 138.,
      31., 67., 103., 139., 32., 68., 104., 140., 33., 69., 105., 141.,
      34., 70., 106., 142., 35., 71., 107., 143., 36., 72., 108., 144.};
  const std::vector<int> sizes = {4, 4, 3, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  37., 40., 43., 73.,  76.,  79.,  109., 112., 115.,
      2.,  5.,  8.,  38., 41., 44., 74.,  77.,  80.,  110., 113., 116.,
      3.,  6.,  9.,  39., 42., 45., 75.,  78.,  81.,  111., 114., 117.,
      10., 13., 16., 46., 49., 52., 82.,  85.,  88.,  118., 121., 124.,
      11., 14., 17., 47., 50., 53., 83.,  86.,  89.,  119., 122., 125.,
      12., 15., 18., 48., 51., 54., 84.,  87.,  90.,  120., 123., 126.,
      19., 22., 25., 55., 58., 61., 91.,  94.,  97.,  127., 130., 133.,
      20., 23., 26., 56., 59., 62., 92.,  95.,  98.,  128., 131., 134.,
      21., 24., 27., 57., 60., 63., 93.,  96.,  99.,  129., 132., 135.,
      28., 31., 34., 64., 67., 70., 100., 103., 106., 136., 139., 142.,
      29., 32., 35., 65., 68., 71., 101., 104., 107., 137., 140., 143.,
      30., 33., 36., 66., 69., 72., 102., 105., 108., 138., 141., 144.};
  const std::vector<int> sizes = {4, 4, 3, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  109., 4.,  40., 76.,  112., 7.,  43., 79.,  115.,
      2.,  38., 74.,  110., 5.,  41., 77.,  113., 8.,  44., 80.,  116.,
      3.,  39., 75.,  111., 6.,  42., 78.,  114., 9.,  45., 81.,  117.,
      10., 46., 82.,  118., 13., 49., 85.,  121., 16., 52., 88.,  124.,
      11., 47., 83.,  119., 14., 50., 86.,  122., 17., 53., 89.,  125.,
      12., 48., 84.,  120., 15., 51., 87.,  123., 18., 54., 90.,  126.,
      19., 55., 91.,  127., 22., 58., 94.,  130., 25., 61., 97.,  133.,
      20., 56., 92.,  128., 23., 59., 95.,  131., 26., 62., 98.,  134.,
      21., 57., 93.,  129., 24., 60., 96.,  132., 27., 63., 99.,  135.,
      28., 64., 100., 136., 31., 67., 103., 139., 34., 70., 106., 142.,
      29., 65., 101., 137., 32., 68., 104., 140., 35., 71., 107., 143.,
      30., 66., 102., 138., 33., 69., 105., 141., 36., 72., 108., 144.};
  const std::vector<int> sizes = {4, 4, 3, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   10.,  11.,  12.,  19.,  20.,  21.,  28.,  29.,  30.,
      37.,  38.,  39.,  46.,  47.,  48.,  55.,  56.,  57.,  64.,  65.,  66.,
      73.,  74.,  75.,  82.,  83.,  84.,  91.,  92.,  93.,  100., 101., 102.,
      109., 110., 111., 118., 119., 120., 127., 128., 129., 136., 137., 138.,
      4.,   5.,   6.,   13.,  14.,  15.,  22.,  23.,  24.,  31.,  32.,  33.,
      40.,  41.,  42.,  49.,  50.,  51.,  58.,  59.,  60.,  67.,  68.,  69.,
      76.,  77.,  78.,  85.,  86.,  87.,  94.,  95.,  96.,  103., 104., 105.,
      112., 113., 114., 121., 122., 123., 130., 131., 132., 139., 140., 141.,
      7.,   8.,   9.,   16.,  17.,  18.,  25.,  26.,  27.,  34.,  35.,  36.,
      43.,  44.,  45.,  52.,  53.,  54.,  61.,  62.,  63.,  70.,  71.,  72.,
      79.,  80.,  81.,  88.,  89.,  90.,  97.,  98.,  99.,  106., 107., 108.,
      115., 116., 117., 124., 125., 126., 133., 134., 135., 142., 143., 144.};
  const std::vector<int> sizes = {4, 4, 3, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   10.,  19.,  28.,  2.,   11.,  20.,  29.,  3.,   12.,  21.,  30.,
      37.,  46.,  55.,  64.,  38.,  47.,  56.,  65.,  39.,  48.,  57.,  66.,
      73.,  82.,  91.,  100., 74.,  83.,  92.,  101., 75.,  84.,  93.,  102.,
      109., 118., 127., 136., 110., 119., 128., 137., 111., 120., 129., 138.,
      4.,   13.,  22.,  31.,  5.,   14.,  23.,  32.,  6.,   15.,  24.,  33.,
      40.,  49.,  58.,  67.,  41.,  50.,  59.,  68.,  42.,  51.,  60.,  69.,
      76.,  85.,  94.,  103., 77.,  86.,  95.,  104., 78.,  87.,  96.,  105.,
      112., 121., 130., 139., 113., 122., 131., 140., 114., 123., 132., 141.,
      7.,   16.,  25.,  34.,  8.,   17.,  26.,  35.,  9.,   18.,  27.,  36.,
      43.,  52.,  61.,  70.,  44.,  53.,  62.,  71.,  45.,  54.,  63.,  72.,
      79.,  88.,  97.,  106., 80.,  89.,  98.,  107., 81.,  90.,  99.,  108.,
      115., 124., 133., 142., 116., 125., 134., 143., 117., 126., 135., 144.};
  const std::vector<int> sizes = {4, 4, 3, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  37., 38., 39., 73.,  74.,  75.,  109., 110., 111.,
      10., 11., 12., 46., 47., 48., 82.,  83.,  84.,  118., 119., 120.,
      19., 20., 21., 55., 56., 57., 91.,  92.,  93.,  127., 128., 129.,
      28., 29., 30., 64., 65., 66., 100., 101., 102., 136., 137., 138.,
      4.,  5.,  6.,  40., 41., 42., 76.,  77.,  78.,  112., 113., 114.,
      13., 14., 15., 49., 50., 51., 85.,  86.,  87.,  121., 122., 123.,
      22., 23., 24., 58., 59., 60., 94.,  95.,  96.,  130., 131., 132.,
      31., 32., 33., 67., 68., 69., 103., 104., 105., 139., 140., 141.,
      7.,  8.,  9.,  43., 44., 45., 79.,  80.,  81.,  115., 116., 117.,
      16., 17., 18., 52., 53., 54., 88.,  89.,  90.,  124., 125., 126.,
      25., 26., 27., 61., 62., 63., 97.,  98.,  99.,  133., 134., 135.,
      34., 35., 36., 70., 71., 72., 106., 107., 108., 142., 143., 144.};
  const std::vector<int> sizes = {4, 4, 3, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  109., 2.,  38., 74.,  110., 3.,  39., 75.,  111.,
      10., 46., 82.,  118., 11., 47., 83.,  119., 12., 48., 84.,  120.,
      19., 55., 91.,  127., 20., 56., 92.,  128., 21., 57., 93.,  129.,
      28., 64., 100., 136., 29., 65., 101., 137., 30., 66., 102., 138.,
      4.,  40., 76.,  112., 5.,  41., 77.,  113., 6.,  42., 78.,  114.,
      13., 49., 85.,  121., 14., 50., 86.,  122., 15., 51., 87.,  123.,
      22., 58., 94.,  130., 23., 59., 95.,  131., 24., 60., 96.,  132.,
      31., 67., 103., 139., 32., 68., 104., 140., 33., 69., 105., 141.,
      7.,  43., 79.,  115., 8.,  44., 80.,  116., 9.,  45., 81.,  117.,
      16., 52., 88.,  124., 17., 53., 89.,  125., 18., 54., 90.,  126.,
      25., 61., 97.,  133., 26., 62., 98.,  134., 27., 63., 99.,  135.,
      34., 70., 106., 142., 35., 71., 107., 143., 36., 72., 108., 144.};
  const std::vector<int> sizes = {4, 4, 3, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   10.,  19.,  28.,  37.,  46.,  55.,  64.,  73.,  82.,  91.,  100.,
      109., 118., 127., 136., 2.,   11.,  20.,  29.,  38.,  47.,  56.,  65.,
      74.,  83.,  92.,  101., 110., 119., 128., 137., 3.,   12.,  21.,  30.,
      39.,  48.,  57.,  66.,  75.,  84.,  93.,  102., 111., 120., 129., 138.,
      4.,   13.,  22.,  31.,  40.,  49.,  58.,  67.,  76.,  85.,  94.,  103.,
      112., 121., 130., 139., 5.,   14.,  23.,  32.,  41.,  50.,  59.,  68.,
      77.,  86.,  95.,  104., 113., 122., 131., 140., 6.,   15.,  24.,  33.,
      42.,  51.,  60.,  69.,  78.,  87.,  96.,  105., 114., 123., 132., 141.,
      7.,   16.,  25.,  34.,  43.,  52.,  61.,  70.,  79.,  88.,  97.,  106.,
      115., 124., 133., 142., 8.,   17.,  26.,  35.,  44.,  53.,  62.,  71.,
      80.,  89.,  98.,  107., 116., 125., 134., 143., 9.,   18.,  27.,  36.,
      45.,  54.,  63.,  72.,  81.,  90.,  99.,  108., 117., 126., 135., 144.};
  const std::vector<int> sizes = {4, 4, 3, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  109., 10., 46., 82.,  118., 19., 55., 91.,  127.,
      28., 64., 100., 136., 2.,  38., 74.,  110., 11., 47., 83.,  119.,
      20., 56., 92.,  128., 29., 65., 101., 137., 3.,  39., 75.,  111.,
      12., 48., 84.,  120., 21., 57., 93.,  129., 30., 66., 102., 138.,
      4.,  40., 76.,  112., 13., 49., 85.,  121., 22., 58., 94.,  130.,
      31., 67., 103., 139., 5.,  41., 77.,  113., 14., 50., 86.,  122.,
      23., 59., 95.,  131., 32., 68., 104., 140., 6.,  42., 78.,  114.,
      15., 51., 87.,  123., 24., 60., 96.,  132., 33., 69., 105., 141.,
      7.,  43., 79.,  115., 16., 52., 88.,  124., 25., 61., 97.,  133.,
      34., 70., 106., 142., 8.,  44., 80.,  116., 17., 53., 89.,  125.,
      26., 62., 98.,  134., 35., 71., 107., 143., 9.,  45., 81.,  117.,
      18., 54., 90.,  126., 27., 63., 99.,  135., 36., 72., 108., 144.};
  const std::vector<int> sizes = {4, 4, 3, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   7.,   10.,  13.,  16.,  19.,  22.,  25.,  28.,  31.,  34.,
      37.,  40.,  43.,  46.,  49.,  52.,  55.,  58.,  61.,  64.,  67.,  70.,
      73.,  76.,  79.,  82.,  85.,  88.,  91.,  94.,  97.,  100., 103., 106.,
      109., 112., 115., 118., 121., 124., 127., 130., 133., 136., 139., 142.,
      2.,   5.,   8.,   11.,  14.,  17.,  20.,  23.,  26.,  29.,  32.,  35.,
      38.,  41.,  44.,  47.,  50.,  53.,  56.,  59.,  62.,  65.,  68.,  71.,
      74.,  77.,  80.,  83.,  86.,  89.,  92.,  95.,  98.,  101., 104., 107.,
      110., 113., 116., 119., 122., 125., 128., 131., 134., 137., 140., 143.,
      3.,   6.,   9.,   12.,  15.,  18.,  21.,  24.,  27.,  30.,  33.,  36.,
      39.,  42.,  45.,  48.,  51.,  54.,  57.,  60.,  63.,  66.,  69.,  72.,
      75.,  78.,  81.,  84.,  87.,  90.,  93.,  96.,  99.,  102., 105., 108.,
      111., 114., 117., 120., 123., 126., 129., 132., 135., 138., 141., 144.};
  const std::vector<int> sizes = {4, 4, 3, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   10.,  19.,  28.,  4.,   13.,  22.,  31.,  7.,   16.,  25.,  34.,
      37.,  46.,  55.,  64.,  40.,  49.,  58.,  67.,  43.,  52.,  61.,  70.,
      73.,  82.,  91.,  100., 76.,  85.,  94.,  103., 79.,  88.,  97.,  106.,
      109., 118., 127., 136., 112., 121., 130., 139., 115., 124., 133., 142.,
      2.,   11.,  20.,  29.,  5.,   14.,  23.,  32.,  8.,   17.,  26.,  35.,
      38.,  47.,  56.,  65.,  41.,  50.,  59.,  68.,  44.,  53.,  62.,  71.,
      74.,  83.,  92.,  101., 77.,  86.,  95.,  104., 80.,  89.,  98.,  107.,
      110., 119., 128., 137., 113., 122., 131., 140., 116., 125., 134., 143.,
      3.,   12.,  21.,  30.,  6.,   15.,  24.,  33.,  9.,   18.,  27.,  36.,
      39.,  48.,  57.,  66.,  42.,  51.,  60.,  69.,  45.,  54.,  63.,  72.,
      75.,  84.,  93.,  102., 78.,  87.,  96.,  105., 81.,  90.,  99.,  108.,
      111., 120., 129., 138., 114., 123., 132., 141., 117., 126., 135., 144.};
  const std::vector<int> sizes = {4, 4, 3, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  4.,  7.,  37., 40., 43., 73.,  76.,  79.,  109., 112., 115.,
      10., 13., 16., 46., 49., 52., 82.,  85.,  88.,  118., 121., 124.,
      19., 22., 25., 55., 58., 61., 91.,  94.,  97.,  127., 130., 133.,
      28., 31., 34., 64., 67., 70., 100., 103., 106., 136., 139., 142.,
      2.,  5.,  8.,  38., 41., 44., 74.,  77.,  80.,  110., 113., 116.,
      11., 14., 17., 47., 50., 53., 83.,  86.,  89.,  119., 122., 125.,
      20., 23., 26., 56., 59., 62., 92.,  95.,  98.,  128., 131., 134.,
      29., 32., 35., 65., 68., 71., 101., 104., 107., 137., 140., 143.,
      3.,  6.,  9.,  39., 42., 45., 75.,  78.,  81.,  111., 114., 117.,
      12., 15., 18., 48., 51., 54., 84.,  87.,  90.,  120., 123., 126.,
      21., 24., 27., 57., 60., 63., 93.,  96.,  99.,  129., 132., 135.,
      30., 33., 36., 66., 69., 72., 102., 105., 108., 138., 141., 144.};
  const std::vector<int> sizes = {4, 4, 3, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  109., 4.,  40., 76.,  112., 7.,  43., 79.,  115.,
      10., 46., 82.,  118., 13., 49., 85.,  121., 16., 52., 88.,  124.,
      19., 55., 91.,  127., 22., 58., 94.,  130., 25., 61., 97.,  133.,
      28., 64., 100., 136., 31., 67., 103., 139., 34., 70., 106., 142.,
      2.,  38., 74.,  110., 5.,  41., 77.,  113., 8.,  44., 80.,  116.,
      11., 47., 83.,  119., 14., 50., 86.,  122., 17., 53., 89.,  125.,
      20., 56., 92.,  128., 23., 59., 95.,  131., 26., 62., 98.,  134.,
      29., 65., 101., 137., 32., 68., 104., 140., 35., 71., 107., 143.,
      3.,  39., 75.,  111., 6.,  42., 78.,  114., 9.,  45., 81.,  117.,
      12., 48., 84.,  120., 15., 51., 87.,  123., 18., 54., 90.,  126.,
      21., 57., 93.,  129., 24., 60., 96.,  132., 27., 63., 99.,  135.,
      30., 66., 102., 138., 33., 69., 105., 141., 36., 72., 108., 144.};
  const std::vector<int> sizes = {4, 4, 3, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   10.,  19.,  28.,  37.,  46.,  55.,  64.,  73.,  82.,  91.,  100.,
      109., 118., 127., 136., 4.,   13.,  22.,  31.,  40.,  49.,  58.,  67.,
      76.,  85.,  94.,  103., 112., 121., 130., 139., 7.,   16.,  25.,  34.,
      43.,  52.,  61.,  70.,  79.,  88.,  97.,  106., 115., 124., 133., 142.,
      2.,   11.,  20.,  29.,  38.,  47.,  56.,  65.,  74.,  83.,  92.,  101.,
      110., 119., 128., 137., 5.,   14.,  23.,  32.,  41.,  50.,  59.,  68.,
      77.,  86.,  95.,  104., 113., 122., 131., 140., 8.,   17.,  26.,  35.,
      44.,  53.,  62.,  71.,  80.,  89.,  98.,  107., 116., 125., 134., 143.,
      3.,   12.,  21.,  30.,  39.,  48.,  57.,  66.,  75.,  84.,  93.,  102.,
      111., 120., 129., 138., 6.,   15.,  24.,  33.,  42.,  51.,  60.,  69.,
      78.,  87.,  96.,  105., 114., 123., 132., 141., 9.,   18.,  27.,  36.,
      45.,  54.,  63.,  72.,  81.,  90.,  99.,  108., 117., 126., 135., 144.};
  const std::vector<int> sizes = {4, 4, 3, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  37., 73.,  109., 10., 46., 82.,  118., 19., 55., 91.,  127.,
      28., 64., 100., 136., 4.,  40., 76.,  112., 13., 49., 85.,  121.,
      22., 58., 94.,  130., 31., 67., 103., 139., 7.,  43., 79.,  115.,
      16., 52., 88.,  124., 25., 61., 97.,  133., 34., 70., 106., 142.,
      2.,  38., 74.,  110., 11., 47., 83.,  119., 20., 56., 92.,  128.,
      29., 65., 101., 137., 5.,  41., 77.,  113., 14., 50., 86.,  122.,
      23., 59., 95.,  131., 32., 68., 104., 140., 8.,  44., 80.,  116.,
      17., 53., 89.,  125., 26., 62., 98.,  134., 35., 71., 107., 143.,
      3.,  39., 75.,  111., 12., 48., 84.,  120., 21., 57., 93.,  129.,
      30., 66., 102., 138., 6.,  42., 78.,  114., 15., 51., 87.,  123.,
      24., 60., 96.,  132., 33., 69., 105., 141., 9.,  45., 81.,  117.,
      18., 54., 90.,  126., 27., 63., 99.,  135., 36., 72., 108., 144.};
  const std::vector<int> sizes = {4, 4, 3, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13.,  14.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 105., 106., 107., 108.,
      109., 110., 111., 112., 113., 114., 115., 116., 117., 118., 119., 120.,
      121., 122., 123., 124., 125., 126., 127., 128., 129., 130., 131., 132.,
      133., 134., 135., 136., 137., 138., 139., 140., 141., 142., 143., 144.,
      145., 146., 147., 148., 149., 150., 151., 152., 153., 154., 155., 156.,
      157., 158., 159., 160., 161., 162., 163., 164., 165., 166., 167., 168.,
      169., 170., 171., 172., 173., 174., 175., 176., 177., 178., 179., 180.,
      181., 182., 183., 184., 185., 186., 187., 188., 189., 190., 191., 192.};
  const std::vector<int> sizes = {4, 4, 3, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   2.,   6.,   10.,  3.,   7.,   11.,  4.,   8.,   12.,
      13.,  17.,  21.,  14.,  18.,  22.,  15.,  19.,  23.,  16.,  20.,  24.,
      25.,  29.,  33.,  26.,  30.,  34.,  27.,  31.,  35.,  28.,  32.,  36.,
      37.,  41.,  45.,  38.,  42.,  46.,  39.,  43.,  47.,  40.,  44.,  48.,
      49.,  53.,  57.,  50.,  54.,  58.,  51.,  55.,  59.,  52.,  56.,  60.,
      61.,  65.,  69.,  62.,  66.,  70.,  63.,  67.,  71.,  64.,  68.,  72.,
      73.,  77.,  81.,  74.,  78.,  82.,  75.,  79.,  83.,  76.,  80.,  84.,
      85.,  89.,  93.,  86.,  90.,  94.,  87.,  91.,  95.,  88.,  92.,  96.,
      97.,  101., 105., 98.,  102., 106., 99.,  103., 107., 100., 104., 108.,
      109., 113., 117., 110., 114., 118., 111., 115., 119., 112., 116., 120.,
      121., 125., 129., 122., 126., 130., 123., 127., 131., 124., 128., 132.,
      133., 137., 141., 134., 138., 142., 135., 139., 143., 136., 140., 144.,
      145., 149., 153., 146., 150., 154., 147., 151., 155., 148., 152., 156.,
      157., 161., 165., 158., 162., 166., 159., 163., 167., 160., 164., 168.,
      169., 173., 177., 170., 174., 178., 171., 175., 179., 172., 176., 180.,
      181., 185., 189., 182., 186., 190., 183., 187., 191., 184., 188., 192.};
  const std::vector<int> sizes = {4, 4, 3, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   13.,  14.,  15.,  16.,  25.,  26.,  27.,  28.,
      37.,  38.,  39.,  40.,  5.,   6.,   7.,   8.,   17.,  18.,  19.,  20.,
      29.,  30.,  31.,  32.,  41.,  42.,  43.,  44.,  9.,   10.,  11.,  12.,
      21.,  22.,  23.,  24.,  33.,  34.,  35.,  36.,  45.,  46.,  47.,  48.,
      49.,  50.,  51.,  52.,  61.,  62.,  63.,  64.,  73.,  74.,  75.,  76.,
      85.,  86.,  87.,  88.,  53.,  54.,  55.,  56.,  65.,  66.,  67.,  68.,
      77.,  78.,  79.,  80.,  89.,  90.,  91.,  92.,  57.,  58.,  59.,  60.,
      69.,  70.,  71.,  72.,  81.,  82.,  83.,  84.,  93.,  94.,  95.,  96.,
      97.,  98.,  99.,  100., 109., 110., 111., 112., 121., 122., 123., 124.,
      133., 134., 135., 136., 101., 102., 103., 104., 113., 114., 115., 116.,
      125., 126., 127., 128., 137., 138., 139., 140., 105., 106., 107., 108.,
      117., 118., 119., 120., 129., 130., 131., 132., 141., 142., 143., 144.,
      145., 146., 147., 148., 157., 158., 159., 160., 169., 170., 171., 172.,
      181., 182., 183., 184., 149., 150., 151., 152., 161., 162., 163., 164.,
      173., 174., 175., 176., 185., 186., 187., 188., 153., 154., 155., 156.,
      165., 166., 167., 168., 177., 178., 179., 180., 189., 190., 191., 192.};
  const std::vector<int> sizes = {4, 4, 3, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  37.,  2.,   14.,  26.,  38.,  3.,   15.,  27.,  39.,
      4.,   16.,  28.,  40.,  5.,   17.,  29.,  41.,  6.,   18.,  30.,  42.,
      7.,   19.,  31.,  43.,  8.,   20.,  32.,  44.,  9.,   21.,  33.,  45.,
      10.,  22.,  34.,  46.,  11.,  23.,  35.,  47.,  12.,  24.,  36.,  48.,
      49.,  61.,  73.,  85.,  50.,  62.,  74.,  86.,  51.,  63.,  75.,  87.,
      52.,  64.,  76.,  88.,  53.,  65.,  77.,  89.,  54.,  66.,  78.,  90.,
      55.,  67.,  79.,  91.,  56.,  68.,  80.,  92.,  57.,  69.,  81.,  93.,
      58.,  70.,  82.,  94.,  59.,  71.,  83.,  95.,  60.,  72.,  84.,  96.,
      97.,  109., 121., 133., 98.,  110., 122., 134., 99.,  111., 123., 135.,
      100., 112., 124., 136., 101., 113., 125., 137., 102., 114., 126., 138.,
      103., 115., 127., 139., 104., 116., 128., 140., 105., 117., 129., 141.,
      106., 118., 130., 142., 107., 119., 131., 143., 108., 120., 132., 144.,
      145., 157., 169., 181., 146., 158., 170., 182., 147., 159., 171., 183.,
      148., 160., 172., 184., 149., 161., 173., 185., 150., 162., 174., 186.,
      151., 163., 175., 187., 152., 164., 176., 188., 153., 165., 177., 189.,
      154., 166., 178., 190., 155., 167., 179., 191., 156., 168., 180., 192.};
  const std::vector<int> sizes = {4, 4, 3, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  17.,  21.,  25.,  29.,  33.,  37.,  41.,  45.,
      2.,   6.,   10.,  14.,  18.,  22.,  26.,  30.,  34.,  38.,  42.,  46.,
      3.,   7.,   11.,  15.,  19.,  23.,  27.,  31.,  35.,  39.,  43.,  47.,
      4.,   8.,   12.,  16.,  20.,  24.,  28.,  32.,  36.,  40.,  44.,  48.,
      49.,  53.,  57.,  61.,  65.,  69.,  73.,  77.,  81.,  85.,  89.,  93.,
      50.,  54.,  58.,  62.,  66.,  70.,  74.,  78.,  82.,  86.,  90.,  94.,
      51.,  55.,  59.,  63.,  67.,  71.,  75.,  79.,  83.,  87.,  91.,  95.,
      52.,  56.,  60.,  64.,  68.,  72.,  76.,  80.,  84.,  88.,  92.,  96.,
      97.,  101., 105., 109., 113., 117., 121., 125., 129., 133., 137., 141.,
      98.,  102., 106., 110., 114., 118., 122., 126., 130., 134., 138., 142.,
      99.,  103., 107., 111., 115., 119., 123., 127., 131., 135., 139., 143.,
      100., 104., 108., 112., 116., 120., 124., 128., 132., 136., 140., 144.,
      145., 149., 153., 157., 161., 165., 169., 173., 177., 181., 185., 189.,
      146., 150., 154., 158., 162., 166., 170., 174., 178., 182., 186., 190.,
      147., 151., 155., 159., 163., 167., 171., 175., 179., 183., 187., 191.,
      148., 152., 156., 160., 164., 168., 172., 176., 180., 184., 188., 192.};
  const std::vector<int> sizes = {4, 4, 3, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  37.,  5.,   17.,  29.,  41.,  9.,   21.,  33.,  45.,
      2.,   14.,  26.,  38.,  6.,   18.,  30.,  42.,  10.,  22.,  34.,  46.,
      3.,   15.,  27.,  39.,  7.,   19.,  31.,  43.,  11.,  23.,  35.,  47.,
      4.,   16.,  28.,  40.,  8.,   20.,  32.,  44.,  12.,  24.,  36.,  48.,
      49.,  61.,  73.,  85.,  53.,  65.,  77.,  89.,  57.,  69.,  81.,  93.,
      50.,  62.,  74.,  86.,  54.,  66.,  78.,  90.,  58.,  70.,  82.,  94.,
      51.,  63.,  75.,  87.,  55.,  67.,  79.,  91.,  59.,  71.,  83.,  95.,
      52.,  64.,  76.,  88.,  56.,  68.,  80.,  92.,  60.,  72.,  84.,  96.,
      97.,  109., 121., 133., 101., 113., 125., 137., 105., 117., 129., 141.,
      98.,  110., 122., 134., 102., 114., 126., 138., 106., 118., 130., 142.,
      99.,  111., 123., 135., 103., 115., 127., 139., 107., 119., 131., 143.,
      100., 112., 124., 136., 104., 116., 128., 140., 108., 120., 132., 144.,
      145., 157., 169., 181., 149., 161., 173., 185., 153., 165., 177., 189.,
      146., 158., 170., 182., 150., 162., 174., 186., 154., 166., 178., 190.,
      147., 159., 171., 183., 151., 163., 175., 187., 155., 167., 179., 191.,
      148., 160., 172., 184., 152., 164., 176., 188., 156., 168., 180., 192.};
  const std::vector<int> sizes = {4, 4, 3, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 105., 106., 107., 108.,
      145., 146., 147., 148., 149., 150., 151., 152., 153., 154., 155., 156.,
      13.,  14.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      109., 110., 111., 112., 113., 114., 115., 116., 117., 118., 119., 120.,
      157., 158., 159., 160., 161., 162., 163., 164., 165., 166., 167., 168.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      121., 122., 123., 124., 125., 126., 127., 128., 129., 130., 131., 132.,
      169., 170., 171., 172., 173., 174., 175., 176., 177., 178., 179., 180.,
      37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      133., 134., 135., 136., 137., 138., 139., 140., 141., 142., 143., 144.,
      181., 182., 183., 184., 185., 186., 187., 188., 189., 190., 191., 192.};
  const std::vector<int> sizes = {4, 4, 3, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   2.,   6.,   10.,  3.,   7.,   11.,  4.,   8.,   12.,
      49.,  53.,  57.,  50.,  54.,  58.,  51.,  55.,  59.,  52.,  56.,  60.,
      97.,  101., 105., 98.,  102., 106., 99.,  103., 107., 100., 104., 108.,
      145., 149., 153., 146., 150., 154., 147., 151., 155., 148., 152., 156.,
      13.,  17.,  21.,  14.,  18.,  22.,  15.,  19.,  23.,  16.,  20.,  24.,
      61.,  65.,  69.,  62.,  66.,  70.,  63.,  67.,  71.,  64.,  68.,  72.,
      109., 113., 117., 110., 114., 118., 111., 115., 119., 112., 116., 120.,
      157., 161., 165., 158., 162., 166., 159., 163., 167., 160., 164., 168.,
      25.,  29.,  33.,  26.,  30.,  34.,  27.,  31.,  35.,  28.,  32.,  36.,
      73.,  77.,  81.,  74.,  78.,  82.,  75.,  79.,  83.,  76.,  80.,  84.,
      121., 125., 129., 122., 126., 130., 123., 127., 131., 124., 128., 132.,
      169., 173., 177., 170., 174., 178., 171., 175., 179., 172., 176., 180.,
      37.,  41.,  45.,  38.,  42.,  46.,  39.,  43.,  47.,  40.,  44.,  48.,
      85.,  89.,  93.,  86.,  90.,  94.,  87.,  91.,  95.,  88.,  92.,  96.,
      133., 137., 141., 134., 138., 142., 135., 139., 143., 136., 140., 144.,
      181., 185., 189., 182., 186., 190., 183., 187., 191., 184., 188., 192.};
  const std::vector<int> sizes = {4, 4, 3, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   49.,  50.,  51.,  52.,  97.,  98.,  99.,  100.,
      145., 146., 147., 148., 5.,   6.,   7.,   8.,   53.,  54.,  55.,  56.,
      101., 102., 103., 104., 149., 150., 151., 152., 9.,   10.,  11.,  12.,
      57.,  58.,  59.,  60.,  105., 106., 107., 108., 153., 154., 155., 156.,
      13.,  14.,  15.,  16.,  61.,  62.,  63.,  64.,  109., 110., 111., 112.,
      157., 158., 159., 160., 17.,  18.,  19.,  20.,  65.,  66.,  67.,  68.,
      113., 114., 115., 116., 161., 162., 163., 164., 21.,  22.,  23.,  24.,
      69.,  70.,  71.,  72.,  117., 118., 119., 120., 165., 166., 167., 168.,
      25.,  26.,  27.,  28.,  73.,  74.,  75.,  76.,  121., 122., 123., 124.,
      169., 170., 171., 172., 29.,  30.,  31.,  32.,  77.,  78.,  79.,  80.,
      125., 126., 127., 128., 173., 174., 175., 176., 33.,  34.,  35.,  36.,
      81.,  82.,  83.,  84.,  129., 130., 131., 132., 177., 178., 179., 180.,
      37.,  38.,  39.,  40.,  85.,  86.,  87.,  88.,  133., 134., 135., 136.,
      181., 182., 183., 184., 41.,  42.,  43.,  44.,  89.,  90.,  91.,  92.,
      137., 138., 139., 140., 185., 186., 187., 188., 45.,  46.,  47.,  48.,
      93.,  94.,  95.,  96.,  141., 142., 143., 144., 189., 190., 191., 192.};
  const std::vector<int> sizes = {4, 4, 3, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  145., 2.,  50., 98.,  146., 3.,  51., 99.,  147.,
      4.,  52., 100., 148., 5.,  53., 101., 149., 6.,  54., 102., 150.,
      7.,  55., 103., 151., 8.,  56., 104., 152., 9.,  57., 105., 153.,
      10., 58., 106., 154., 11., 59., 107., 155., 12., 60., 108., 156.,
      13., 61., 109., 157., 14., 62., 110., 158., 15., 63., 111., 159.,
      16., 64., 112., 160., 17., 65., 113., 161., 18., 66., 114., 162.,
      19., 67., 115., 163., 20., 68., 116., 164., 21., 69., 117., 165.,
      22., 70., 118., 166., 23., 71., 119., 167., 24., 72., 120., 168.,
      25., 73., 121., 169., 26., 74., 122., 170., 27., 75., 123., 171.,
      28., 76., 124., 172., 29., 77., 125., 173., 30., 78., 126., 174.,
      31., 79., 127., 175., 32., 80., 128., 176., 33., 81., 129., 177.,
      34., 82., 130., 178., 35., 83., 131., 179., 36., 84., 132., 180.,
      37., 85., 133., 181., 38., 86., 134., 182., 39., 87., 135., 183.,
      40., 88., 136., 184., 41., 89., 137., 185., 42., 90., 138., 186.,
      43., 91., 139., 187., 44., 92., 140., 188., 45., 93., 141., 189.,
      46., 94., 142., 190., 47., 95., 143., 191., 48., 96., 144., 192.};
  const std::vector<int> sizes = {4, 4, 3, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  49., 53., 57., 97.,  101., 105., 145., 149., 153.,
      2.,  6.,  10., 50., 54., 58., 98.,  102., 106., 146., 150., 154.,
      3.,  7.,  11., 51., 55., 59., 99.,  103., 107., 147., 151., 155.,
      4.,  8.,  12., 52., 56., 60., 100., 104., 108., 148., 152., 156.,
      13., 17., 21., 61., 65., 69., 109., 113., 117., 157., 161., 165.,
      14., 18., 22., 62., 66., 70., 110., 114., 118., 158., 162., 166.,
      15., 19., 23., 63., 67., 71., 111., 115., 119., 159., 163., 167.,
      16., 20., 24., 64., 68., 72., 112., 116., 120., 160., 164., 168.,
      25., 29., 33., 73., 77., 81., 121., 125., 129., 169., 173., 177.,
      26., 30., 34., 74., 78., 82., 122., 126., 130., 170., 174., 178.,
      27., 31., 35., 75., 79., 83., 123., 127., 131., 171., 175., 179.,
      28., 32., 36., 76., 80., 84., 124., 128., 132., 172., 176., 180.,
      37., 41., 45., 85., 89., 93., 133., 137., 141., 181., 185., 189.,
      38., 42., 46., 86., 90., 94., 134., 138., 142., 182., 186., 190.,
      39., 43., 47., 87., 91., 95., 135., 139., 143., 183., 187., 191.,
      40., 44., 48., 88., 92., 96., 136., 140., 144., 184., 188., 192.};
  const std::vector<int> sizes = {4, 4, 3, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  145., 5.,  53., 101., 149., 9.,  57., 105., 153.,
      2.,  50., 98.,  146., 6.,  54., 102., 150., 10., 58., 106., 154.,
      3.,  51., 99.,  147., 7.,  55., 103., 151., 11., 59., 107., 155.,
      4.,  52., 100., 148., 8.,  56., 104., 152., 12., 60., 108., 156.,
      13., 61., 109., 157., 17., 65., 113., 161., 21., 69., 117., 165.,
      14., 62., 110., 158., 18., 66., 114., 162., 22., 70., 118., 166.,
      15., 63., 111., 159., 19., 67., 115., 163., 23., 71., 119., 167.,
      16., 64., 112., 160., 20., 68., 116., 164., 24., 72., 120., 168.,
      25., 73., 121., 169., 29., 77., 125., 173., 33., 81., 129., 177.,
      26., 74., 122., 170., 30., 78., 126., 174., 34., 82., 130., 178.,
      27., 75., 123., 171., 31., 79., 127., 175., 35., 83., 131., 179.,
      28., 76., 124., 172., 32., 80., 128., 176., 36., 84., 132., 180.,
      37., 85., 133., 181., 41., 89., 137., 185., 45., 93., 141., 189.,
      38., 86., 134., 182., 42., 90., 138., 186., 46., 94., 142., 190.,
      39., 87., 135., 183., 43., 91., 139., 187., 47., 95., 143., 191.,
      40., 88., 136., 184., 44., 92., 140., 188., 48., 96., 144., 192.};
  const std::vector<int> sizes = {4, 4, 3, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   13.,  14.,  15.,  16.,  25.,  26.,  27.,  28.,
      37.,  38.,  39.,  40.,  49.,  50.,  51.,  52.,  61.,  62.,  63.,  64.,
      73.,  74.,  75.,  76.,  85.,  86.,  87.,  88.,  97.,  98.,  99.,  100.,
      109., 110., 111., 112., 121., 122., 123., 124., 133., 134., 135., 136.,
      145., 146., 147., 148., 157., 158., 159., 160., 169., 170., 171., 172.,
      181., 182., 183., 184., 5.,   6.,   7.,   8.,   17.,  18.,  19.,  20.,
      29.,  30.,  31.,  32.,  41.,  42.,  43.,  44.,  53.,  54.,  55.,  56.,
      65.,  66.,  67.,  68.,  77.,  78.,  79.,  80.,  89.,  90.,  91.,  92.,
      101., 102., 103., 104., 113., 114., 115., 116., 125., 126., 127., 128.,
      137., 138., 139., 140., 149., 150., 151., 152., 161., 162., 163., 164.,
      173., 174., 175., 176., 185., 186., 187., 188., 9.,   10.,  11.,  12.,
      21.,  22.,  23.,  24.,  33.,  34.,  35.,  36.,  45.,  46.,  47.,  48.,
      57.,  58.,  59.,  60.,  69.,  70.,  71.,  72.,  81.,  82.,  83.,  84.,
      93.,  94.,  95.,  96.,  105., 106., 107., 108., 117., 118., 119., 120.,
      129., 130., 131., 132., 141., 142., 143., 144., 153., 154., 155., 156.,
      165., 166., 167., 168., 177., 178., 179., 180., 189., 190., 191., 192.};
  const std::vector<int> sizes = {4, 4, 3, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  37.,  2.,   14.,  26.,  38.,  3.,   15.,  27.,  39.,
      4.,   16.,  28.,  40.,  49.,  61.,  73.,  85.,  50.,  62.,  74.,  86.,
      51.,  63.,  75.,  87.,  52.,  64.,  76.,  88.,  97.,  109., 121., 133.,
      98.,  110., 122., 134., 99.,  111., 123., 135., 100., 112., 124., 136.,
      145., 157., 169., 181., 146., 158., 170., 182., 147., 159., 171., 183.,
      148., 160., 172., 184., 5.,   17.,  29.,  41.,  6.,   18.,  30.,  42.,
      7.,   19.,  31.,  43.,  8.,   20.,  32.,  44.,  53.,  65.,  77.,  89.,
      54.,  66.,  78.,  90.,  55.,  67.,  79.,  91.,  56.,  68.,  80.,  92.,
      101., 113., 125., 137., 102., 114., 126., 138., 103., 115., 127., 139.,
      104., 116., 128., 140., 149., 161., 173., 185., 150., 162., 174., 186.,
      151., 163., 175., 187., 152., 164., 176., 188., 9.,   21.,  33.,  45.,
      10.,  22.,  34.,  46.,  11.,  23.,  35.,  47.,  12.,  24.,  36.,  48.,
      57.,  69.,  81.,  93.,  58.,  70.,  82.,  94.,  59.,  71.,  83.,  95.,
      60.,  72.,  84.,  96.,  105., 117., 129., 141., 106., 118., 130., 142.,
      107., 119., 131., 143., 108., 120., 132., 144., 153., 165., 177., 189.,
      154., 166., 178., 190., 155., 167., 179., 191., 156., 168., 180., 192.};
  const std::vector<int> sizes = {4, 4, 3, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   49.,  50.,  51.,  52.,  97.,  98.,  99.,  100.,
      145., 146., 147., 148., 13.,  14.,  15.,  16.,  61.,  62.,  63.,  64.,
      109., 110., 111., 112., 157., 158., 159., 160., 25.,  26.,  27.,  28.,
      73.,  74.,  75.,  76.,  121., 122., 123., 124., 169., 170., 171., 172.,
      37.,  38.,  39.,  40.,  85.,  86.,  87.,  88.,  133., 134., 135., 136.,
      181., 182., 183., 184., 5.,   6.,   7.,   8.,   53.,  54.,  55.,  56.,
      101., 102., 103., 104., 149., 150., 151., 152., 17.,  18.,  19.,  20.,
      65.,  66.,  67.,  68.,  113., 114., 115., 116., 161., 162., 163., 164.,
      29.,  30.,  31.,  32.,  77.,  78.,  79.,  80.,  125., 126., 127., 128.,
      173., 174., 175., 176., 41.,  42.,  43.,  44.,  89.,  90.,  91.,  92.,
      137., 138., 139., 140., 185., 186., 187., 188., 9.,   10.,  11.,  12.,
      57.,  58.,  59.,  60.,  105., 106., 107., 108., 153., 154., 155., 156.,
      21.,  22.,  23.,  24.,  69.,  70.,  71.,  72.,  117., 118., 119., 120.,
      165., 166., 167., 168., 33.,  34.,  35.,  36.,  81.,  82.,  83.,  84.,
      129., 130., 131., 132., 177., 178., 179., 180., 45.,  46.,  47.,  48.,
      93.,  94.,  95.,  96.,  141., 142., 143., 144., 189., 190., 191., 192.};
  const std::vector<int> sizes = {4, 4, 3, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  145., 2.,  50., 98.,  146., 3.,  51., 99.,  147.,
      4.,  52., 100., 148., 13., 61., 109., 157., 14., 62., 110., 158.,
      15., 63., 111., 159., 16., 64., 112., 160., 25., 73., 121., 169.,
      26., 74., 122., 170., 27., 75., 123., 171., 28., 76., 124., 172.,
      37., 85., 133., 181., 38., 86., 134., 182., 39., 87., 135., 183.,
      40., 88., 136., 184., 5.,  53., 101., 149., 6.,  54., 102., 150.,
      7.,  55., 103., 151., 8.,  56., 104., 152., 17., 65., 113., 161.,
      18., 66., 114., 162., 19., 67., 115., 163., 20., 68., 116., 164.,
      29., 77., 125., 173., 30., 78., 126., 174., 31., 79., 127., 175.,
      32., 80., 128., 176., 41., 89., 137., 185., 42., 90., 138., 186.,
      43., 91., 139., 187., 44., 92., 140., 188., 9.,  57., 105., 153.,
      10., 58., 106., 154., 11., 59., 107., 155., 12., 60., 108., 156.,
      21., 69., 117., 165., 22., 70., 118., 166., 23., 71., 119., 167.,
      24., 72., 120., 168., 33., 81., 129., 177., 34., 82., 130., 178.,
      35., 83., 131., 179., 36., 84., 132., 180., 45., 93., 141., 189.,
      46., 94., 142., 190., 47., 95., 143., 191., 48., 96., 144., 192.};
  const std::vector<int> sizes = {4, 4, 3, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  37.,  49.,  61.,  73.,  85.,  97.,  109., 121., 133.,
      145., 157., 169., 181., 2.,   14.,  26.,  38.,  50.,  62.,  74.,  86.,
      98.,  110., 122., 134., 146., 158., 170., 182., 3.,   15.,  27.,  39.,
      51.,  63.,  75.,  87.,  99.,  111., 123., 135., 147., 159., 171., 183.,
      4.,   16.,  28.,  40.,  52.,  64.,  76.,  88.,  100., 112., 124., 136.,
      148., 160., 172., 184., 5.,   17.,  29.,  41.,  53.,  65.,  77.,  89.,
      101., 113., 125., 137., 149., 161., 173., 185., 6.,   18.,  30.,  42.,
      54.,  66.,  78.,  90.,  102., 114., 126., 138., 150., 162., 174., 186.,
      7.,   19.,  31.,  43.,  55.,  67.,  79.,  91.,  103., 115., 127., 139.,
      151., 163., 175., 187., 8.,   20.,  32.,  44.,  56.,  68.,  80.,  92.,
      104., 116., 128., 140., 152., 164., 176., 188., 9.,   21.,  33.,  45.,
      57.,  69.,  81.,  93.,  105., 117., 129., 141., 153., 165., 177., 189.,
      10.,  22.,  34.,  46.,  58.,  70.,  82.,  94.,  106., 118., 130., 142.,
      154., 166., 178., 190., 11.,  23.,  35.,  47.,  59.,  71.,  83.,  95.,
      107., 119., 131., 143., 155., 167., 179., 191., 12.,  24.,  36.,  48.,
      60.,  72.,  84.,  96.,  108., 120., 132., 144., 156., 168., 180., 192.};
  const std::vector<int> sizes = {4, 4, 3, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  145., 13., 61., 109., 157., 25., 73., 121., 169.,
      37., 85., 133., 181., 2.,  50., 98.,  146., 14., 62., 110., 158.,
      26., 74., 122., 170., 38., 86., 134., 182., 3.,  51., 99.,  147.,
      15., 63., 111., 159., 27., 75., 123., 171., 39., 87., 135., 183.,
      4.,  52., 100., 148., 16., 64., 112., 160., 28., 76., 124., 172.,
      40., 88., 136., 184., 5.,  53., 101., 149., 17., 65., 113., 161.,
      29., 77., 125., 173., 41., 89., 137., 185., 6.,  54., 102., 150.,
      18., 66., 114., 162., 30., 78., 126., 174., 42., 90., 138., 186.,
      7.,  55., 103., 151., 19., 67., 115., 163., 31., 79., 127., 175.,
      43., 91., 139., 187., 8.,  56., 104., 152., 20., 68., 116., 164.,
      32., 80., 128., 176., 44., 92., 140., 188., 9.,  57., 105., 153.,
      21., 69., 117., 165., 33., 81., 129., 177., 45., 93., 141., 189.,
      10., 58., 106., 154., 22., 70., 118., 166., 34., 82., 130., 178.,
      46., 94., 142., 190., 11., 59., 107., 155., 23., 71., 119., 167.,
      35., 83., 131., 179., 47., 95., 143., 191., 12., 60., 108., 156.,
      24., 72., 120., 168., 36., 84., 132., 180., 48., 96., 144., 192.};
  const std::vector<int> sizes = {4, 4, 3, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  17.,  21.,  25.,  29.,  33.,  37.,  41.,  45.,
      49.,  53.,  57.,  61.,  65.,  69.,  73.,  77.,  81.,  85.,  89.,  93.,
      97.,  101., 105., 109., 113., 117., 121., 125., 129., 133., 137., 141.,
      145., 149., 153., 157., 161., 165., 169., 173., 177., 181., 185., 189.,
      2.,   6.,   10.,  14.,  18.,  22.,  26.,  30.,  34.,  38.,  42.,  46.,
      50.,  54.,  58.,  62.,  66.,  70.,  74.,  78.,  82.,  86.,  90.,  94.,
      98.,  102., 106., 110., 114., 118., 122., 126., 130., 134., 138., 142.,
      146., 150., 154., 158., 162., 166., 170., 174., 178., 182., 186., 190.,
      3.,   7.,   11.,  15.,  19.,  23.,  27.,  31.,  35.,  39.,  43.,  47.,
      51.,  55.,  59.,  63.,  67.,  71.,  75.,  79.,  83.,  87.,  91.,  95.,
      99.,  103., 107., 111., 115., 119., 123., 127., 131., 135., 139., 143.,
      147., 151., 155., 159., 163., 167., 171., 175., 179., 183., 187., 191.,
      4.,   8.,   12.,  16.,  20.,  24.,  28.,  32.,  36.,  40.,  44.,  48.,
      52.,  56.,  60.,  64.,  68.,  72.,  76.,  80.,  84.,  88.,  92.,  96.,
      100., 104., 108., 112., 116., 120., 124., 128., 132., 136., 140., 144.,
      148., 152., 156., 160., 164., 168., 172., 176., 180., 184., 188., 192.};
  const std::vector<int> sizes = {4, 4, 3, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  37.,  5.,   17.,  29.,  41.,  9.,   21.,  33.,  45.,
      49.,  61.,  73.,  85.,  53.,  65.,  77.,  89.,  57.,  69.,  81.,  93.,
      97.,  109., 121., 133., 101., 113., 125., 137., 105., 117., 129., 141.,
      145., 157., 169., 181., 149., 161., 173., 185., 153., 165., 177., 189.,
      2.,   14.,  26.,  38.,  6.,   18.,  30.,  42.,  10.,  22.,  34.,  46.,
      50.,  62.,  74.,  86.,  54.,  66.,  78.,  90.,  58.,  70.,  82.,  94.,
      98.,  110., 122., 134., 102., 114., 126., 138., 106., 118., 130., 142.,
      146., 158., 170., 182., 150., 162., 174., 186., 154., 166., 178., 190.,
      3.,   15.,  27.,  39.,  7.,   19.,  31.,  43.,  11.,  23.,  35.,  47.,
      51.,  63.,  75.,  87.,  55.,  67.,  79.,  91.,  59.,  71.,  83.,  95.,
      99.,  111., 123., 135., 103., 115., 127., 139., 107., 119., 131., 143.,
      147., 159., 171., 183., 151., 163., 175., 187., 155., 167., 179., 191.,
      4.,   16.,  28.,  40.,  8.,   20.,  32.,  44.,  12.,  24.,  36.,  48.,
      52.,  64.,  76.,  88.,  56.,  68.,  80.,  92.,  60.,  72.,  84.,  96.,
      100., 112., 124., 136., 104., 116., 128., 140., 108., 120., 132., 144.,
      148., 160., 172., 184., 152., 164., 176., 188., 156., 168., 180., 192.};
  const std::vector<int> sizes = {4, 4, 3, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  5.,  9.,  49., 53., 57., 97.,  101., 105., 145., 149., 153.,
      13., 17., 21., 61., 65., 69., 109., 113., 117., 157., 161., 165.,
      25., 29., 33., 73., 77., 81., 121., 125., 129., 169., 173., 177.,
      37., 41., 45., 85., 89., 93., 133., 137., 141., 181., 185., 189.,
      2.,  6.,  10., 50., 54., 58., 98.,  102., 106., 146., 150., 154.,
      14., 18., 22., 62., 66., 70., 110., 114., 118., 158., 162., 166.,
      26., 30., 34., 74., 78., 82., 122., 126., 130., 170., 174., 178.,
      38., 42., 46., 86., 90., 94., 134., 138., 142., 182., 186., 190.,
      3.,  7.,  11., 51., 55., 59., 99.,  103., 107., 147., 151., 155.,
      15., 19., 23., 63., 67., 71., 111., 115., 119., 159., 163., 167.,
      27., 31., 35., 75., 79., 83., 123., 127., 131., 171., 175., 179.,
      39., 43., 47., 87., 91., 95., 135., 139., 143., 183., 187., 191.,
      4.,  8.,  12., 52., 56., 60., 100., 104., 108., 148., 152., 156.,
      16., 20., 24., 64., 68., 72., 112., 116., 120., 160., 164., 168.,
      28., 32., 36., 76., 80., 84., 124., 128., 132., 172., 176., 180.,
      40., 44., 48., 88., 92., 96., 136., 140., 144., 184., 188., 192.};
  const std::vector<int> sizes = {4, 4, 3, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  145., 5.,  53., 101., 149., 9.,  57., 105., 153.,
      13., 61., 109., 157., 17., 65., 113., 161., 21., 69., 117., 165.,
      25., 73., 121., 169., 29., 77., 125., 173., 33., 81., 129., 177.,
      37., 85., 133., 181., 41., 89., 137., 185., 45., 93., 141., 189.,
      2.,  50., 98.,  146., 6.,  54., 102., 150., 10., 58., 106., 154.,
      14., 62., 110., 158., 18., 66., 114., 162., 22., 70., 118., 166.,
      26., 74., 122., 170., 30., 78., 126., 174., 34., 82., 130., 178.,
      38., 86., 134., 182., 42., 90., 138., 186., 46., 94., 142., 190.,
      3.,  51., 99.,  147., 7.,  55., 103., 151., 11., 59., 107., 155.,
      15., 63., 111., 159., 19., 67., 115., 163., 23., 71., 119., 167.,
      27., 75., 123., 171., 31., 79., 127., 175., 35., 83., 131., 179.,
      39., 87., 135., 183., 43., 91., 139., 187., 47., 95., 143., 191.,
      4.,  52., 100., 148., 8.,  56., 104., 152., 12., 60., 108., 156.,
      16., 64., 112., 160., 20., 68., 116., 164., 24., 72., 120., 168.,
      28., 76., 124., 172., 32., 80., 128., 176., 36., 84., 132., 180.,
      40., 88., 136., 184., 44., 92., 140., 188., 48., 96., 144., 192.};
  const std::vector<int> sizes = {4, 4, 3, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  37.,  49.,  61.,  73.,  85.,  97.,  109., 121., 133.,
      145., 157., 169., 181., 5.,   17.,  29.,  41.,  53.,  65.,  77.,  89.,
      101., 113., 125., 137., 149., 161., 173., 185., 9.,   21.,  33.,  45.,
      57.,  69.,  81.,  93.,  105., 117., 129., 141., 153., 165., 177., 189.,
      2.,   14.,  26.,  38.,  50.,  62.,  74.,  86.,  98.,  110., 122., 134.,
      146., 158., 170., 182., 6.,   18.,  30.,  42.,  54.,  66.,  78.,  90.,
      102., 114., 126., 138., 150., 162., 174., 186., 10.,  22.,  34.,  46.,
      58.,  70.,  82.,  94.,  106., 118., 130., 142., 154., 166., 178., 190.,
      3.,   15.,  27.,  39.,  51.,  63.,  75.,  87.,  99.,  111., 123., 135.,
      147., 159., 171., 183., 7.,   19.,  31.,  43.,  55.,  67.,  79.,  91.,
      103., 115., 127., 139., 151., 163., 175., 187., 11.,  23.,  35.,  47.,
      59.,  71.,  83.,  95.,  107., 119., 131., 143., 155., 167., 179., 191.,
      4.,   16.,  28.,  40.,  52.,  64.,  76.,  88.,  100., 112., 124., 136.,
      148., 160., 172., 184., 8.,   20.,  32.,  44.,  56.,  68.,  80.,  92.,
      104., 116., 128., 140., 152., 164., 176., 188., 12.,  24.,  36.,  48.,
      60.,  72.,  84.,  96.,  108., 120., 132., 144., 156., 168., 180., 192.};
  const std::vector<int> sizes = {4, 4, 3, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x3x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  145., 13., 61., 109., 157., 25., 73., 121., 169.,
      37., 85., 133., 181., 5.,  53., 101., 149., 17., 65., 113., 161.,
      29., 77., 125., 173., 41., 89., 137., 185., 9.,  57., 105., 153.,
      21., 69., 117., 165., 33., 81., 129., 177., 45., 93., 141., 189.,
      2.,  50., 98.,  146., 14., 62., 110., 158., 26., 74., 122., 170.,
      38., 86., 134., 182., 6.,  54., 102., 150., 18., 66., 114., 162.,
      30., 78., 126., 174., 42., 90., 138., 186., 10., 58., 106., 154.,
      22., 70., 118., 166., 34., 82., 130., 178., 46., 94., 142., 190.,
      3.,  51., 99.,  147., 15., 63., 111., 159., 27., 75., 123., 171.,
      39., 87., 135., 183., 7.,  55., 103., 151., 19., 67., 115., 163.,
      31., 79., 127., 175., 43., 91., 139., 187., 11., 59., 107., 155.,
      23., 71., 119., 167., 35., 83., 131., 179., 47., 95., 143., 191.,
      4.,  52., 100., 148., 16., 64., 112., 160., 28., 76., 124., 172.,
      40., 88., 136., 184., 8.,  56., 104., 152., 20., 68., 116., 164.,
      32., 80., 128., 176., 44., 92., 140., 188., 12., 60., 108., 156.,
      24., 72., 120., 168., 36., 84., 132., 180., 48., 96., 144., 192.};
  const std::vector<int> sizes = {4, 4, 3, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x2_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13.,  14.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 105., 106., 107., 108.,
      109., 110., 111., 112., 113., 114., 115., 116., 117., 118., 119., 120.,
      121., 122., 123., 124., 125., 126., 127., 128.};
  const std::vector<int> sizes = {4, 4, 4, 2};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x2_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   3.,   5.,   7.,   2.,   4.,   6.,   8.,   9.,   11.,  13.,  15.,
      10.,  12.,  14.,  16.,  17.,  19.,  21.,  23.,  18.,  20.,  22.,  24.,
      25.,  27.,  29.,  31.,  26.,  28.,  30.,  32.,  33.,  35.,  37.,  39.,
      34.,  36.,  38.,  40.,  41.,  43.,  45.,  47.,  42.,  44.,  46.,  48.,
      49.,  51.,  53.,  55.,  50.,  52.,  54.,  56.,  57.,  59.,  61.,  63.,
      58.,  60.,  62.,  64.,  65.,  67.,  69.,  71.,  66.,  68.,  70.,  72.,
      73.,  75.,  77.,  79.,  74.,  76.,  78.,  80.,  81.,  83.,  85.,  87.,
      82.,  84.,  86.,  88.,  89.,  91.,  93.,  95.,  90.,  92.,  94.,  96.,
      97.,  99.,  101., 103., 98.,  100., 102., 104., 105., 107., 109., 111.,
      106., 108., 110., 112., 113., 115., 117., 119., 114., 116., 118., 120.,
      121., 123., 125., 127., 122., 124., 126., 128.};
  const std::vector<int> sizes = {4, 4, 4, 2};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x2_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   9.,   10.,  17.,  18.,  25.,  26.,  3.,   4.,   11.,  12.,
      19.,  20.,  27.,  28.,  5.,   6.,   13.,  14.,  21.,  22.,  29.,  30.,
      7.,   8.,   15.,  16.,  23.,  24.,  31.,  32.,  33.,  34.,  41.,  42.,
      49.,  50.,  57.,  58.,  35.,  36.,  43.,  44.,  51.,  52.,  59.,  60.,
      37.,  38.,  45.,  46.,  53.,  54.,  61.,  62.,  39.,  40.,  47.,  48.,
      55.,  56.,  63.,  64.,  65.,  66.,  73.,  74.,  81.,  82.,  89.,  90.,
      67.,  68.,  75.,  76.,  83.,  84.,  91.,  92.,  69.,  70.,  77.,  78.,
      85.,  86.,  93.,  94.,  71.,  72.,  79.,  80.,  87.,  88.,  95.,  96.,
      97.,  98.,  105., 106., 113., 114., 121., 122., 99.,  100., 107., 108.,
      115., 116., 123., 124., 101., 102., 109., 110., 117., 118., 125., 126.,
      103., 104., 111., 112., 119., 120., 127., 128.};
  const std::vector<int> sizes = {4, 4, 4, 2};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x2_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   9.,   17.,  25.,  2.,   10.,  18.,  26.,  3.,   11.,  19.,  27.,
      4.,   12.,  20.,  28.,  5.,   13.,  21.,  29.,  6.,   14.,  22.,  30.,
      7.,   15.,  23.,  31.,  8.,   16.,  24.,  32.,  33.,  41.,  49.,  57.,
      34.,  42.,  50.,  58.,  35.,  43.,  51.,  59.,  36.,  44.,  52.,  60.,
      37.,  45.,  53.,  61.,  38.,  46.,  54.,  62.,  39.,  47.,  55.,  63.,
      40.,  48.,  56.,  64.,  65.,  73.,  81.,  89.,  66.,  74.,  82.,  90.,
      67.,  75.,  83.,  91.,  68.,  76.,  84.,  92.,  69.,  77.,  85.,  93.,
      70.,  78.,  86.,  94.,  71.,  79.,  87.,  95.,  72.,  80.,  88.,  96.,
      97.,  105., 113., 121., 98.,  106., 114., 122., 99.,  107., 115., 123.,
      100., 108., 116., 124., 101., 109., 117., 125., 102., 110., 118., 126.,
      103., 111., 119., 127., 104., 112., 120., 128.};
  const std::vector<int> sizes = {4, 4, 4, 2};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x2_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   3.,   5.,   7.,   9.,   11.,  13.,  15.,  17.,  19.,  21.,  23.,
      25.,  27.,  29.,  31.,  2.,   4.,   6.,   8.,   10.,  12.,  14.,  16.,
      18.,  20.,  22.,  24.,  26.,  28.,  30.,  32.,  33.,  35.,  37.,  39.,
      41.,  43.,  45.,  47.,  49.,  51.,  53.,  55.,  57.,  59.,  61.,  63.,
      34.,  36.,  38.,  40.,  42.,  44.,  46.,  48.,  50.,  52.,  54.,  56.,
      58.,  60.,  62.,  64.,  65.,  67.,  69.,  71.,  73.,  75.,  77.,  79.,
      81.,  83.,  85.,  87.,  89.,  91.,  93.,  95.,  66.,  68.,  70.,  72.,
      74.,  76.,  78.,  80.,  82.,  84.,  86.,  88.,  90.,  92.,  94.,  96.,
      97.,  99.,  101., 103., 105., 107., 109., 111., 113., 115., 117., 119.,
      121., 123., 125., 127., 98.,  100., 102., 104., 106., 108., 110., 112.,
      114., 116., 118., 120., 122., 124., 126., 128.};
  const std::vector<int> sizes = {4, 4, 4, 2};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x2_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   9.,   17.,  25.,  3.,   11.,  19.,  27.,  5.,   13.,  21.,  29.,
      7.,   15.,  23.,  31.,  2.,   10.,  18.,  26.,  4.,   12.,  20.,  28.,
      6.,   14.,  22.,  30.,  8.,   16.,  24.,  32.,  33.,  41.,  49.,  57.,
      35.,  43.,  51.,  59.,  37.,  45.,  53.,  61.,  39.,  47.,  55.,  63.,
      34.,  42.,  50.,  58.,  36.,  44.,  52.,  60.,  38.,  46.,  54.,  62.,
      40.,  48.,  56.,  64.,  65.,  73.,  81.,  89.,  67.,  75.,  83.,  91.,
      69.,  77.,  85.,  93.,  71.,  79.,  87.,  95.,  66.,  74.,  82.,  90.,
      68.,  76.,  84.,  92.,  70.,  78.,  86.,  94.,  72.,  80.,  88.,  96.,
      97.,  105., 113., 121., 99.,  107., 115., 123., 101., 109., 117., 125.,
      103., 111., 119., 127., 98.,  106., 114., 122., 100., 108., 116., 124.,
      102., 110., 118., 126., 104., 112., 120., 128.};
  const std::vector<int> sizes = {4, 4, 4, 2};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x2_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   33.,  34.,  35.,  36.,
      37.,  38.,  39.,  40.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 9.,   10.,  11.,  12.,
      13.,  14.,  15.,  16.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  105., 106., 107., 108.,
      109., 110., 111., 112., 17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  81.,  82.,  83.,  84.,
      85.,  86.,  87.,  88.,  113., 114., 115., 116., 117., 118., 119., 120.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  57.,  58.,  59.,  60.,
      61.,  62.,  63.,  64.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      121., 122., 123., 124., 125., 126., 127., 128.};
  const std::vector<int> sizes = {4, 4, 4, 2};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x2_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   3.,   5.,   7.,   2.,   4.,   6.,   8.,   33.,  35.,  37.,  39.,
      34.,  36.,  38.,  40.,  65.,  67.,  69.,  71.,  66.,  68.,  70.,  72.,
      97.,  99.,  101., 103., 98.,  100., 102., 104., 9.,   11.,  13.,  15.,
      10.,  12.,  14.,  16.,  41.,  43.,  45.,  47.,  42.,  44.,  46.,  48.,
      73.,  75.,  77.,  79.,  74.,  76.,  78.,  80.,  105., 107., 109., 111.,
      106., 108., 110., 112., 17.,  19.,  21.,  23.,  18.,  20.,  22.,  24.,
      49.,  51.,  53.,  55.,  50.,  52.,  54.,  56.,  81.,  83.,  85.,  87.,
      82.,  84.,  86.,  88.,  113., 115., 117., 119., 114., 116., 118., 120.,
      25.,  27.,  29.,  31.,  26.,  28.,  30.,  32.,  57.,  59.,  61.,  63.,
      58.,  60.,  62.,  64.,  89.,  91.,  93.,  95.,  90.,  92.,  94.,  96.,
      121., 123., 125., 127., 122., 124., 126., 128.};
  const std::vector<int> sizes = {4, 4, 4, 2};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x2_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  33.,  34.,  65., 66., 97.,  98.,  3.,  4.,  35.,  36.,
      67., 68., 99.,  100., 5.,  6.,  37.,  38.,  69., 70., 101., 102.,
      7.,  8.,  39.,  40.,  71., 72., 103., 104., 9.,  10., 41.,  42.,
      73., 74., 105., 106., 11., 12., 43.,  44.,  75., 76., 107., 108.,
      13., 14., 45.,  46.,  77., 78., 109., 110., 15., 16., 47.,  48.,
      79., 80., 111., 112., 17., 18., 49.,  50.,  81., 82., 113., 114.,
      19., 20., 51.,  52.,  83., 84., 115., 116., 21., 22., 53.,  54.,
      85., 86., 117., 118., 23., 24., 55.,  56.,  87., 88., 119., 120.,
      25., 26., 57.,  58.,  89., 90., 121., 122., 27., 28., 59.,  60.,
      91., 92., 123., 124., 29., 30., 61.,  62.,  93., 94., 125., 126.,
      31., 32., 63.,  64.,  95., 96., 127., 128.};
  const std::vector<int> sizes = {4, 4, 4, 2};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x2_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 97.,  2.,  34., 66., 98.,  3.,  35., 67., 99.,
      4.,  36., 68., 100., 5.,  37., 69., 101., 6.,  38., 70., 102.,
      7.,  39., 71., 103., 8.,  40., 72., 104., 9.,  41., 73., 105.,
      10., 42., 74., 106., 11., 43., 75., 107., 12., 44., 76., 108.,
      13., 45., 77., 109., 14., 46., 78., 110., 15., 47., 79., 111.,
      16., 48., 80., 112., 17., 49., 81., 113., 18., 50., 82., 114.,
      19., 51., 83., 115., 20., 52., 84., 116., 21., 53., 85., 117.,
      22., 54., 86., 118., 23., 55., 87., 119., 24., 56., 88., 120.,
      25., 57., 89., 121., 26., 58., 90., 122., 27., 59., 91., 123.,
      28., 60., 92., 124., 29., 61., 93., 125., 30., 62., 94., 126.,
      31., 63., 95., 127., 32., 64., 96., 128.};
  const std::vector<int> sizes = {4, 4, 4, 2};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x2_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   3.,   5.,   7.,   33.,  35.,  37.,  39.,  65.,  67.,  69.,  71.,
      97.,  99.,  101., 103., 2.,   4.,   6.,   8.,   34.,  36.,  38.,  40.,
      66.,  68.,  70.,  72.,  98.,  100., 102., 104., 9.,   11.,  13.,  15.,
      41.,  43.,  45.,  47.,  73.,  75.,  77.,  79.,  105., 107., 109., 111.,
      10.,  12.,  14.,  16.,  42.,  44.,  46.,  48.,  74.,  76.,  78.,  80.,
      106., 108., 110., 112., 17.,  19.,  21.,  23.,  49.,  51.,  53.,  55.,
      81.,  83.,  85.,  87.,  113., 115., 117., 119., 18.,  20.,  22.,  24.,
      50.,  52.,  54.,  56.,  82.,  84.,  86.,  88.,  114., 116., 118., 120.,
      25.,  27.,  29.,  31.,  57.,  59.,  61.,  63.,  89.,  91.,  93.,  95.,
      121., 123., 125., 127., 26.,  28.,  30.,  32.,  58.,  60.,  62.,  64.,
      90.,  92.,  94.,  96.,  122., 124., 126., 128.};
  const std::vector<int> sizes = {4, 4, 4, 2};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x2_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 97.,  3.,  35., 67., 99.,  5.,  37., 69., 101.,
      7.,  39., 71., 103., 2.,  34., 66., 98.,  4.,  36., 68., 100.,
      6.,  38., 70., 102., 8.,  40., 72., 104., 9.,  41., 73., 105.,
      11., 43., 75., 107., 13., 45., 77., 109., 15., 47., 79., 111.,
      10., 42., 74., 106., 12., 44., 76., 108., 14., 46., 78., 110.,
      16., 48., 80., 112., 17., 49., 81., 113., 19., 51., 83., 115.,
      21., 53., 85., 117., 23., 55., 87., 119., 18., 50., 82., 114.,
      20., 52., 84., 116., 22., 54., 86., 118., 24., 56., 88., 120.,
      25., 57., 89., 121., 27., 59., 91., 123., 29., 61., 93., 125.,
      31., 63., 95., 127., 26., 58., 90., 122., 28., 60., 92., 124.,
      30., 62., 94., 126., 32., 64., 96., 128.};
  const std::vector<int> sizes = {4, 4, 4, 2};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x2_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   9.,   10.,  17.,  18.,  25.,  26.,  33.,  34.,  41.,  42.,
      49.,  50.,  57.,  58.,  65.,  66.,  73.,  74.,  81.,  82.,  89.,  90.,
      97.,  98.,  105., 106., 113., 114., 121., 122., 3.,   4.,   11.,  12.,
      19.,  20.,  27.,  28.,  35.,  36.,  43.,  44.,  51.,  52.,  59.,  60.,
      67.,  68.,  75.,  76.,  83.,  84.,  91.,  92.,  99.,  100., 107., 108.,
      115., 116., 123., 124., 5.,   6.,   13.,  14.,  21.,  22.,  29.,  30.,
      37.,  38.,  45.,  46.,  53.,  54.,  61.,  62.,  69.,  70.,  77.,  78.,
      85.,  86.,  93.,  94.,  101., 102., 109., 110., 117., 118., 125., 126.,
      7.,   8.,   15.,  16.,  23.,  24.,  31.,  32.,  39.,  40.,  47.,  48.,
      55.,  56.,  63.,  64.,  71.,  72.,  79.,  80.,  87.,  88.,  95.,  96.,
      103., 104., 111., 112., 119., 120., 127., 128.};
  const std::vector<int> sizes = {4, 4, 4, 2};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x2_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   9.,   17.,  25.,  2.,   10.,  18.,  26.,  33.,  41.,  49.,  57.,
      34.,  42.,  50.,  58.,  65.,  73.,  81.,  89.,  66.,  74.,  82.,  90.,
      97.,  105., 113., 121., 98.,  106., 114., 122., 3.,   11.,  19.,  27.,
      4.,   12.,  20.,  28.,  35.,  43.,  51.,  59.,  36.,  44.,  52.,  60.,
      67.,  75.,  83.,  91.,  68.,  76.,  84.,  92.,  99.,  107., 115., 123.,
      100., 108., 116., 124., 5.,   13.,  21.,  29.,  6.,   14.,  22.,  30.,
      37.,  45.,  53.,  61.,  38.,  46.,  54.,  62.,  69.,  77.,  85.,  93.,
      70.,  78.,  86.,  94.,  101., 109., 117., 125., 102., 110., 118., 126.,
      7.,   15.,  23.,  31.,  8.,   16.,  24.,  32.,  39.,  47.,  55.,  63.,
      40.,  48.,  56.,  64.,  71.,  79.,  87.,  95.,  72.,  80.,  88.,  96.,
      103., 111., 119., 127., 104., 112., 120., 128.};
  const std::vector<int> sizes = {4, 4, 4, 2};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x2_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  33.,  34.,  65., 66., 97.,  98.,  9.,  10., 41.,  42.,
      73., 74., 105., 106., 17., 18., 49.,  50.,  81., 82., 113., 114.,
      25., 26., 57.,  58.,  89., 90., 121., 122., 3.,  4.,  35.,  36.,
      67., 68., 99.,  100., 11., 12., 43.,  44.,  75., 76., 107., 108.,
      19., 20., 51.,  52.,  83., 84., 115., 116., 27., 28., 59.,  60.,
      91., 92., 123., 124., 5.,  6.,  37.,  38.,  69., 70., 101., 102.,
      13., 14., 45.,  46.,  77., 78., 109., 110., 21., 22., 53.,  54.,
      85., 86., 117., 118., 29., 30., 61.,  62.,  93., 94., 125., 126.,
      7.,  8.,  39.,  40.,  71., 72., 103., 104., 15., 16., 47.,  48.,
      79., 80., 111., 112., 23., 24., 55.,  56.,  87., 88., 119., 120.,
      31., 32., 63.,  64.,  95., 96., 127., 128.};
  const std::vector<int> sizes = {4, 4, 4, 2};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x2_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 97.,  2.,  34., 66., 98.,  9.,  41., 73., 105.,
      10., 42., 74., 106., 17., 49., 81., 113., 18., 50., 82., 114.,
      25., 57., 89., 121., 26., 58., 90., 122., 3.,  35., 67., 99.,
      4.,  36., 68., 100., 11., 43., 75., 107., 12., 44., 76., 108.,
      19., 51., 83., 115., 20., 52., 84., 116., 27., 59., 91., 123.,
      28., 60., 92., 124., 5.,  37., 69., 101., 6.,  38., 70., 102.,
      13., 45., 77., 109., 14., 46., 78., 110., 21., 53., 85., 117.,
      22., 54., 86., 118., 29., 61., 93., 125., 30., 62., 94., 126.,
      7.,  39., 71., 103., 8.,  40., 72., 104., 15., 47., 79., 111.,
      16., 48., 80., 112., 23., 55., 87., 119., 24., 56., 88., 120.,
      31., 63., 95., 127., 32., 64., 96., 128.};
  const std::vector<int> sizes = {4, 4, 4, 2};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x2_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   9.,   17.,  25.,  33.,  41.,  49.,  57.,  65.,  73.,  81.,  89.,
      97.,  105., 113., 121., 2.,   10.,  18.,  26.,  34.,  42.,  50.,  58.,
      66.,  74.,  82.,  90.,  98.,  106., 114., 122., 3.,   11.,  19.,  27.,
      35.,  43.,  51.,  59.,  67.,  75.,  83.,  91.,  99.,  107., 115., 123.,
      4.,   12.,  20.,  28.,  36.,  44.,  52.,  60.,  68.,  76.,  84.,  92.,
      100., 108., 116., 124., 5.,   13.,  21.,  29.,  37.,  45.,  53.,  61.,
      69.,  77.,  85.,  93.,  101., 109., 117., 125., 6.,   14.,  22.,  30.,
      38.,  46.,  54.,  62.,  70.,  78.,  86.,  94.,  102., 110., 118., 126.,
      7.,   15.,  23.,  31.,  39.,  47.,  55.,  63.,  71.,  79.,  87.,  95.,
      103., 111., 119., 127., 8.,   16.,  24.,  32.,  40.,  48.,  56.,  64.,
      72.,  80.,  88.,  96.,  104., 112., 120., 128.};
  const std::vector<int> sizes = {4, 4, 4, 2};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x2_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 97.,  9.,  41., 73., 105., 17., 49., 81., 113.,
      25., 57., 89., 121., 2.,  34., 66., 98.,  10., 42., 74., 106.,
      18., 50., 82., 114., 26., 58., 90., 122., 3.,  35., 67., 99.,
      11., 43., 75., 107., 19., 51., 83., 115., 27., 59., 91., 123.,
      4.,  36., 68., 100., 12., 44., 76., 108., 20., 52., 84., 116.,
      28., 60., 92., 124., 5.,  37., 69., 101., 13., 45., 77., 109.,
      21., 53., 85., 117., 29., 61., 93., 125., 6.,  38., 70., 102.,
      14., 46., 78., 110., 22., 54., 86., 118., 30., 62., 94., 126.,
      7.,  39., 71., 103., 15., 47., 79., 111., 23., 55., 87., 119.,
      31., 63., 95., 127., 8.,  40., 72., 104., 16., 48., 80., 112.,
      24., 56., 88., 120., 32., 64., 96., 128.};
  const std::vector<int> sizes = {4, 4, 4, 2};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x2_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   3.,   5.,   7.,   9.,   11.,  13.,  15.,  17.,  19.,  21.,  23.,
      25.,  27.,  29.,  31.,  33.,  35.,  37.,  39.,  41.,  43.,  45.,  47.,
      49.,  51.,  53.,  55.,  57.,  59.,  61.,  63.,  65.,  67.,  69.,  71.,
      73.,  75.,  77.,  79.,  81.,  83.,  85.,  87.,  89.,  91.,  93.,  95.,
      97.,  99.,  101., 103., 105., 107., 109., 111., 113., 115., 117., 119.,
      121., 123., 125., 127., 2.,   4.,   6.,   8.,   10.,  12.,  14.,  16.,
      18.,  20.,  22.,  24.,  26.,  28.,  30.,  32.,  34.,  36.,  38.,  40.,
      42.,  44.,  46.,  48.,  50.,  52.,  54.,  56.,  58.,  60.,  62.,  64.,
      66.,  68.,  70.,  72.,  74.,  76.,  78.,  80.,  82.,  84.,  86.,  88.,
      90.,  92.,  94.,  96.,  98.,  100., 102., 104., 106., 108., 110., 112.,
      114., 116., 118., 120., 122., 124., 126., 128.};
  const std::vector<int> sizes = {4, 4, 4, 2};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x2_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   9.,   17.,  25.,  3.,   11.,  19.,  27.,  5.,   13.,  21.,  29.,
      7.,   15.,  23.,  31.,  33.,  41.,  49.,  57.,  35.,  43.,  51.,  59.,
      37.,  45.,  53.,  61.,  39.,  47.,  55.,  63.,  65.,  73.,  81.,  89.,
      67.,  75.,  83.,  91.,  69.,  77.,  85.,  93.,  71.,  79.,  87.,  95.,
      97.,  105., 113., 121., 99.,  107., 115., 123., 101., 109., 117., 125.,
      103., 111., 119., 127., 2.,   10.,  18.,  26.,  4.,   12.,  20.,  28.,
      6.,   14.,  22.,  30.,  8.,   16.,  24.,  32.,  34.,  42.,  50.,  58.,
      36.,  44.,  52.,  60.,  38.,  46.,  54.,  62.,  40.,  48.,  56.,  64.,
      66.,  74.,  82.,  90.,  68.,  76.,  84.,  92.,  70.,  78.,  86.,  94.,
      72.,  80.,  88.,  96.,  98.,  106., 114., 122., 100., 108., 116., 124.,
      102., 110., 118., 126., 104., 112., 120., 128.};
  const std::vector<int> sizes = {4, 4, 4, 2};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x2_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   3.,   5.,   7.,   33.,  35.,  37.,  39.,  65.,  67.,  69.,  71.,
      97.,  99.,  101., 103., 9.,   11.,  13.,  15.,  41.,  43.,  45.,  47.,
      73.,  75.,  77.,  79.,  105., 107., 109., 111., 17.,  19.,  21.,  23.,
      49.,  51.,  53.,  55.,  81.,  83.,  85.,  87.,  113., 115., 117., 119.,
      25.,  27.,  29.,  31.,  57.,  59.,  61.,  63.,  89.,  91.,  93.,  95.,
      121., 123., 125., 127., 2.,   4.,   6.,   8.,   34.,  36.,  38.,  40.,
      66.,  68.,  70.,  72.,  98.,  100., 102., 104., 10.,  12.,  14.,  16.,
      42.,  44.,  46.,  48.,  74.,  76.,  78.,  80.,  106., 108., 110., 112.,
      18.,  20.,  22.,  24.,  50.,  52.,  54.,  56.,  82.,  84.,  86.,  88.,
      114., 116., 118., 120., 26.,  28.,  30.,  32.,  58.,  60.,  62.,  64.,
      90.,  92.,  94.,  96.,  122., 124., 126., 128.};
  const std::vector<int> sizes = {4, 4, 4, 2};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x2_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 97.,  3.,  35., 67., 99.,  5.,  37., 69., 101.,
      7.,  39., 71., 103., 9.,  41., 73., 105., 11., 43., 75., 107.,
      13., 45., 77., 109., 15., 47., 79., 111., 17., 49., 81., 113.,
      19., 51., 83., 115., 21., 53., 85., 117., 23., 55., 87., 119.,
      25., 57., 89., 121., 27., 59., 91., 123., 29., 61., 93., 125.,
      31., 63., 95., 127., 2.,  34., 66., 98.,  4.,  36., 68., 100.,
      6.,  38., 70., 102., 8.,  40., 72., 104., 10., 42., 74., 106.,
      12., 44., 76., 108., 14., 46., 78., 110., 16., 48., 80., 112.,
      18., 50., 82., 114., 20., 52., 84., 116., 22., 54., 86., 118.,
      24., 56., 88., 120., 26., 58., 90., 122., 28., 60., 92., 124.,
      30., 62., 94., 126., 32., 64., 96., 128.};
  const std::vector<int> sizes = {4, 4, 4, 2};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x2_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   9.,   17.,  25.,  33.,  41.,  49.,  57.,  65.,  73.,  81.,  89.,
      97.,  105., 113., 121., 3.,   11.,  19.,  27.,  35.,  43.,  51.,  59.,
      67.,  75.,  83.,  91.,  99.,  107., 115., 123., 5.,   13.,  21.,  29.,
      37.,  45.,  53.,  61.,  69.,  77.,  85.,  93.,  101., 109., 117., 125.,
      7.,   15.,  23.,  31.,  39.,  47.,  55.,  63.,  71.,  79.,  87.,  95.,
      103., 111., 119., 127., 2.,   10.,  18.,  26.,  34.,  42.,  50.,  58.,
      66.,  74.,  82.,  90.,  98.,  106., 114., 122., 4.,   12.,  20.,  28.,
      36.,  44.,  52.,  60.,  68.,  76.,  84.,  92.,  100., 108., 116., 124.,
      6.,   14.,  22.,  30.,  38.,  46.,  54.,  62.,  70.,  78.,  86.,  94.,
      102., 110., 118., 126., 8.,   16.,  24.,  32.,  40.,  48.,  56.,  64.,
      72.,  80.,  88.,  96.,  104., 112., 120., 128.};
  const std::vector<int> sizes = {4, 4, 4, 2};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x2_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  33., 65., 97.,  9.,  41., 73., 105., 17., 49., 81., 113.,
      25., 57., 89., 121., 3.,  35., 67., 99.,  11., 43., 75., 107.,
      19., 51., 83., 115., 27., 59., 91., 123., 5.,  37., 69., 101.,
      13., 45., 77., 109., 21., 53., 85., 117., 29., 61., 93., 125.,
      7.,  39., 71., 103., 15., 47., 79., 111., 23., 55., 87., 119.,
      31., 63., 95., 127., 2.,  34., 66., 98.,  10., 42., 74., 106.,
      18., 50., 82., 114., 26., 58., 90., 122., 4.,  36., 68., 100.,
      12., 44., 76., 108., 20., 52., 84., 116., 28., 60., 92., 124.,
      6.,  38., 70., 102., 14., 46., 78., 110., 22., 54., 86., 118.,
      30., 62., 94., 126., 8.,  40., 72., 104., 16., 48., 80., 112.,
      24., 56., 88., 120., 32., 64., 96., 128.};
  const std::vector<int> sizes = {4, 4, 4, 2};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x3_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13.,  14.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 105., 106., 107., 108.,
      109., 110., 111., 112., 113., 114., 115., 116., 117., 118., 119., 120.,
      121., 122., 123., 124., 125., 126., 127., 128., 129., 130., 131., 132.,
      133., 134., 135., 136., 137., 138., 139., 140., 141., 142., 143., 144.,
      145., 146., 147., 148., 149., 150., 151., 152., 153., 154., 155., 156.,
      157., 158., 159., 160., 161., 162., 163., 164., 165., 166., 167., 168.,
      169., 170., 171., 172., 173., 174., 175., 176., 177., 178., 179., 180.,
      181., 182., 183., 184., 185., 186., 187., 188., 189., 190., 191., 192.};
  const std::vector<int> sizes = {4, 4, 4, 3};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x3_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   7.,   10.,  2.,   5.,   8.,   11.,  3.,   6.,   9.,   12.,
      13.,  16.,  19.,  22.,  14.,  17.,  20.,  23.,  15.,  18.,  21.,  24.,
      25.,  28.,  31.,  34.,  26.,  29.,  32.,  35.,  27.,  30.,  33.,  36.,
      37.,  40.,  43.,  46.,  38.,  41.,  44.,  47.,  39.,  42.,  45.,  48.,
      49.,  52.,  55.,  58.,  50.,  53.,  56.,  59.,  51.,  54.,  57.,  60.,
      61.,  64.,  67.,  70.,  62.,  65.,  68.,  71.,  63.,  66.,  69.,  72.,
      73.,  76.,  79.,  82.,  74.,  77.,  80.,  83.,  75.,  78.,  81.,  84.,
      85.,  88.,  91.,  94.,  86.,  89.,  92.,  95.,  87.,  90.,  93.,  96.,
      97.,  100., 103., 106., 98.,  101., 104., 107., 99.,  102., 105., 108.,
      109., 112., 115., 118., 110., 113., 116., 119., 111., 114., 117., 120.,
      121., 124., 127., 130., 122., 125., 128., 131., 123., 126., 129., 132.,
      133., 136., 139., 142., 134., 137., 140., 143., 135., 138., 141., 144.,
      145., 148., 151., 154., 146., 149., 152., 155., 147., 150., 153., 156.,
      157., 160., 163., 166., 158., 161., 164., 167., 159., 162., 165., 168.,
      169., 172., 175., 178., 170., 173., 176., 179., 171., 174., 177., 180.,
      181., 184., 187., 190., 182., 185., 188., 191., 183., 186., 189., 192.};
  const std::vector<int> sizes = {4, 4, 4, 3};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x3_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   13.,  14.,  15.,  25.,  26.,  27.,  37.,  38.,  39.,
      4.,   5.,   6.,   16.,  17.,  18.,  28.,  29.,  30.,  40.,  41.,  42.,
      7.,   8.,   9.,   19.,  20.,  21.,  31.,  32.,  33.,  43.,  44.,  45.,
      10.,  11.,  12.,  22.,  23.,  24.,  34.,  35.,  36.,  46.,  47.,  48.,
      49.,  50.,  51.,  61.,  62.,  63.,  73.,  74.,  75.,  85.,  86.,  87.,
      52.,  53.,  54.,  64.,  65.,  66.,  76.,  77.,  78.,  88.,  89.,  90.,
      55.,  56.,  57.,  67.,  68.,  69.,  79.,  80.,  81.,  91.,  92.,  93.,
      58.,  59.,  60.,  70.,  71.,  72.,  82.,  83.,  84.,  94.,  95.,  96.,
      97.,  98.,  99.,  109., 110., 111., 121., 122., 123., 133., 134., 135.,
      100., 101., 102., 112., 113., 114., 124., 125., 126., 136., 137., 138.,
      103., 104., 105., 115., 116., 117., 127., 128., 129., 139., 140., 141.,
      106., 107., 108., 118., 119., 120., 130., 131., 132., 142., 143., 144.,
      145., 146., 147., 157., 158., 159., 169., 170., 171., 181., 182., 183.,
      148., 149., 150., 160., 161., 162., 172., 173., 174., 184., 185., 186.,
      151., 152., 153., 163., 164., 165., 175., 176., 177., 187., 188., 189.,
      154., 155., 156., 166., 167., 168., 178., 179., 180., 190., 191., 192.};
  const std::vector<int> sizes = {4, 4, 4, 3};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x3_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  37.,  2.,   14.,  26.,  38.,  3.,   15.,  27.,  39.,
      4.,   16.,  28.,  40.,  5.,   17.,  29.,  41.,  6.,   18.,  30.,  42.,
      7.,   19.,  31.,  43.,  8.,   20.,  32.,  44.,  9.,   21.,  33.,  45.,
      10.,  22.,  34.,  46.,  11.,  23.,  35.,  47.,  12.,  24.,  36.,  48.,
      49.,  61.,  73.,  85.,  50.,  62.,  74.,  86.,  51.,  63.,  75.,  87.,
      52.,  64.,  76.,  88.,  53.,  65.,  77.,  89.,  54.,  66.,  78.,  90.,
      55.,  67.,  79.,  91.,  56.,  68.,  80.,  92.,  57.,  69.,  81.,  93.,
      58.,  70.,  82.,  94.,  59.,  71.,  83.,  95.,  60.,  72.,  84.,  96.,
      97.,  109., 121., 133., 98.,  110., 122., 134., 99.,  111., 123., 135.,
      100., 112., 124., 136., 101., 113., 125., 137., 102., 114., 126., 138.,
      103., 115., 127., 139., 104., 116., 128., 140., 105., 117., 129., 141.,
      106., 118., 130., 142., 107., 119., 131., 143., 108., 120., 132., 144.,
      145., 157., 169., 181., 146., 158., 170., 182., 147., 159., 171., 183.,
      148., 160., 172., 184., 149., 161., 173., 185., 150., 162., 174., 186.,
      151., 163., 175., 187., 152., 164., 176., 188., 153., 165., 177., 189.,
      154., 166., 178., 190., 155., 167., 179., 191., 156., 168., 180., 192.};
  const std::vector<int> sizes = {4, 4, 4, 3};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x3_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   7.,   10.,  13.,  16.,  19.,  22.,  25.,  28.,  31.,  34.,
      37.,  40.,  43.,  46.,  2.,   5.,   8.,   11.,  14.,  17.,  20.,  23.,
      26.,  29.,  32.,  35.,  38.,  41.,  44.,  47.,  3.,   6.,   9.,   12.,
      15.,  18.,  21.,  24.,  27.,  30.,  33.,  36.,  39.,  42.,  45.,  48.,
      49.,  52.,  55.,  58.,  61.,  64.,  67.,  70.,  73.,  76.,  79.,  82.,
      85.,  88.,  91.,  94.,  50.,  53.,  56.,  59.,  62.,  65.,  68.,  71.,
      74.,  77.,  80.,  83.,  86.,  89.,  92.,  95.,  51.,  54.,  57.,  60.,
      63.,  66.,  69.,  72.,  75.,  78.,  81.,  84.,  87.,  90.,  93.,  96.,
      97.,  100., 103., 106., 109., 112., 115., 118., 121., 124., 127., 130.,
      133., 136., 139., 142., 98.,  101., 104., 107., 110., 113., 116., 119.,
      122., 125., 128., 131., 134., 137., 140., 143., 99.,  102., 105., 108.,
      111., 114., 117., 120., 123., 126., 129., 132., 135., 138., 141., 144.,
      145., 148., 151., 154., 157., 160., 163., 166., 169., 172., 175., 178.,
      181., 184., 187., 190., 146., 149., 152., 155., 158., 161., 164., 167.,
      170., 173., 176., 179., 182., 185., 188., 191., 147., 150., 153., 156.,
      159., 162., 165., 168., 171., 174., 177., 180., 183., 186., 189., 192.};
  const std::vector<int> sizes = {4, 4, 4, 3};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x3_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  37.,  4.,   16.,  28.,  40.,  7.,   19.,  31.,  43.,
      10.,  22.,  34.,  46.,  2.,   14.,  26.,  38.,  5.,   17.,  29.,  41.,
      8.,   20.,  32.,  44.,  11.,  23.,  35.,  47.,  3.,   15.,  27.,  39.,
      6.,   18.,  30.,  42.,  9.,   21.,  33.,  45.,  12.,  24.,  36.,  48.,
      49.,  61.,  73.,  85.,  52.,  64.,  76.,  88.,  55.,  67.,  79.,  91.,
      58.,  70.,  82.,  94.,  50.,  62.,  74.,  86.,  53.,  65.,  77.,  89.,
      56.,  68.,  80.,  92.,  59.,  71.,  83.,  95.,  51.,  63.,  75.,  87.,
      54.,  66.,  78.,  90.,  57.,  69.,  81.,  93.,  60.,  72.,  84.,  96.,
      97.,  109., 121., 133., 100., 112., 124., 136., 103., 115., 127., 139.,
      106., 118., 130., 142., 98.,  110., 122., 134., 101., 113., 125., 137.,
      104., 116., 128., 140., 107., 119., 131., 143., 99.,  111., 123., 135.,
      102., 114., 126., 138., 105., 117., 129., 141., 108., 120., 132., 144.,
      145., 157., 169., 181., 148., 160., 172., 184., 151., 163., 175., 187.,
      154., 166., 178., 190., 146., 158., 170., 182., 149., 161., 173., 185.,
      152., 164., 176., 188., 155., 167., 179., 191., 147., 159., 171., 183.,
      150., 162., 174., 186., 153., 165., 177., 189., 156., 168., 180., 192.};
  const std::vector<int> sizes = {4, 4, 4, 3};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x3_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 105., 106., 107., 108.,
      145., 146., 147., 148., 149., 150., 151., 152., 153., 154., 155., 156.,
      13.,  14.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      109., 110., 111., 112., 113., 114., 115., 116., 117., 118., 119., 120.,
      157., 158., 159., 160., 161., 162., 163., 164., 165., 166., 167., 168.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      121., 122., 123., 124., 125., 126., 127., 128., 129., 130., 131., 132.,
      169., 170., 171., 172., 173., 174., 175., 176., 177., 178., 179., 180.,
      37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      133., 134., 135., 136., 137., 138., 139., 140., 141., 142., 143., 144.,
      181., 182., 183., 184., 185., 186., 187., 188., 189., 190., 191., 192.};
  const std::vector<int> sizes = {4, 4, 4, 3};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x3_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   7.,   10.,  2.,   5.,   8.,   11.,  3.,   6.,   9.,   12.,
      49.,  52.,  55.,  58.,  50.,  53.,  56.,  59.,  51.,  54.,  57.,  60.,
      97.,  100., 103., 106., 98.,  101., 104., 107., 99.,  102., 105., 108.,
      145., 148., 151., 154., 146., 149., 152., 155., 147., 150., 153., 156.,
      13.,  16.,  19.,  22.,  14.,  17.,  20.,  23.,  15.,  18.,  21.,  24.,
      61.,  64.,  67.,  70.,  62.,  65.,  68.,  71.,  63.,  66.,  69.,  72.,
      109., 112., 115., 118., 110., 113., 116., 119., 111., 114., 117., 120.,
      157., 160., 163., 166., 158., 161., 164., 167., 159., 162., 165., 168.,
      25.,  28.,  31.,  34.,  26.,  29.,  32.,  35.,  27.,  30.,  33.,  36.,
      73.,  76.,  79.,  82.,  74.,  77.,  80.,  83.,  75.,  78.,  81.,  84.,
      121., 124., 127., 130., 122., 125., 128., 131., 123., 126., 129., 132.,
      169., 172., 175., 178., 170., 173., 176., 179., 171., 174., 177., 180.,
      37.,  40.,  43.,  46.,  38.,  41.,  44.,  47.,  39.,  42.,  45.,  48.,
      85.,  88.,  91.,  94.,  86.,  89.,  92.,  95.,  87.,  90.,  93.,  96.,
      133., 136., 139., 142., 134., 137., 140., 143., 135., 138., 141., 144.,
      181., 184., 187., 190., 182., 185., 188., 191., 183., 186., 189., 192.};
  const std::vector<int> sizes = {4, 4, 4, 3};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x3_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  49., 50., 51., 97.,  98.,  99.,  145., 146., 147.,
      4.,  5.,  6.,  52., 53., 54., 100., 101., 102., 148., 149., 150.,
      7.,  8.,  9.,  55., 56., 57., 103., 104., 105., 151., 152., 153.,
      10., 11., 12., 58., 59., 60., 106., 107., 108., 154., 155., 156.,
      13., 14., 15., 61., 62., 63., 109., 110., 111., 157., 158., 159.,
      16., 17., 18., 64., 65., 66., 112., 113., 114., 160., 161., 162.,
      19., 20., 21., 67., 68., 69., 115., 116., 117., 163., 164., 165.,
      22., 23., 24., 70., 71., 72., 118., 119., 120., 166., 167., 168.,
      25., 26., 27., 73., 74., 75., 121., 122., 123., 169., 170., 171.,
      28., 29., 30., 76., 77., 78., 124., 125., 126., 172., 173., 174.,
      31., 32., 33., 79., 80., 81., 127., 128., 129., 175., 176., 177.,
      34., 35., 36., 82., 83., 84., 130., 131., 132., 178., 179., 180.,
      37., 38., 39., 85., 86., 87., 133., 134., 135., 181., 182., 183.,
      40., 41., 42., 88., 89., 90., 136., 137., 138., 184., 185., 186.,
      43., 44., 45., 91., 92., 93., 139., 140., 141., 187., 188., 189.,
      46., 47., 48., 94., 95., 96., 142., 143., 144., 190., 191., 192.};
  const std::vector<int> sizes = {4, 4, 4, 3};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x3_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  145., 2.,  50., 98.,  146., 3.,  51., 99.,  147.,
      4.,  52., 100., 148., 5.,  53., 101., 149., 6.,  54., 102., 150.,
      7.,  55., 103., 151., 8.,  56., 104., 152., 9.,  57., 105., 153.,
      10., 58., 106., 154., 11., 59., 107., 155., 12., 60., 108., 156.,
      13., 61., 109., 157., 14., 62., 110., 158., 15., 63., 111., 159.,
      16., 64., 112., 160., 17., 65., 113., 161., 18., 66., 114., 162.,
      19., 67., 115., 163., 20., 68., 116., 164., 21., 69., 117., 165.,
      22., 70., 118., 166., 23., 71., 119., 167., 24., 72., 120., 168.,
      25., 73., 121., 169., 26., 74., 122., 170., 27., 75., 123., 171.,
      28., 76., 124., 172., 29., 77., 125., 173., 30., 78., 126., 174.,
      31., 79., 127., 175., 32., 80., 128., 176., 33., 81., 129., 177.,
      34., 82., 130., 178., 35., 83., 131., 179., 36., 84., 132., 180.,
      37., 85., 133., 181., 38., 86., 134., 182., 39., 87., 135., 183.,
      40., 88., 136., 184., 41., 89., 137., 185., 42., 90., 138., 186.,
      43., 91., 139., 187., 44., 92., 140., 188., 45., 93., 141., 189.,
      46., 94., 142., 190., 47., 95., 143., 191., 48., 96., 144., 192.};
  const std::vector<int> sizes = {4, 4, 4, 3};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x3_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   7.,   10.,  49.,  52.,  55.,  58.,  97.,  100., 103., 106.,
      145., 148., 151., 154., 2.,   5.,   8.,   11.,  50.,  53.,  56.,  59.,
      98.,  101., 104., 107., 146., 149., 152., 155., 3.,   6.,   9.,   12.,
      51.,  54.,  57.,  60.,  99.,  102., 105., 108., 147., 150., 153., 156.,
      13.,  16.,  19.,  22.,  61.,  64.,  67.,  70.,  109., 112., 115., 118.,
      157., 160., 163., 166., 14.,  17.,  20.,  23.,  62.,  65.,  68.,  71.,
      110., 113., 116., 119., 158., 161., 164., 167., 15.,  18.,  21.,  24.,
      63.,  66.,  69.,  72.,  111., 114., 117., 120., 159., 162., 165., 168.,
      25.,  28.,  31.,  34.,  73.,  76.,  79.,  82.,  121., 124., 127., 130.,
      169., 172., 175., 178., 26.,  29.,  32.,  35.,  74.,  77.,  80.,  83.,
      122., 125., 128., 131., 170., 173., 176., 179., 27.,  30.,  33.,  36.,
      75.,  78.,  81.,  84.,  123., 126., 129., 132., 171., 174., 177., 180.,
      37.,  40.,  43.,  46.,  85.,  88.,  91.,  94.,  133., 136., 139., 142.,
      181., 184., 187., 190., 38.,  41.,  44.,  47.,  86.,  89.,  92.,  95.,
      134., 137., 140., 143., 182., 185., 188., 191., 39.,  42.,  45.,  48.,
      87.,  90.,  93.,  96.,  135., 138., 141., 144., 183., 186., 189., 192.};
  const std::vector<int> sizes = {4, 4, 4, 3};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x3_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  145., 4.,  52., 100., 148., 7.,  55., 103., 151.,
      10., 58., 106., 154., 2.,  50., 98.,  146., 5.,  53., 101., 149.,
      8.,  56., 104., 152., 11., 59., 107., 155., 3.,  51., 99.,  147.,
      6.,  54., 102., 150., 9.,  57., 105., 153., 12., 60., 108., 156.,
      13., 61., 109., 157., 16., 64., 112., 160., 19., 67., 115., 163.,
      22., 70., 118., 166., 14., 62., 110., 158., 17., 65., 113., 161.,
      20., 68., 116., 164., 23., 71., 119., 167., 15., 63., 111., 159.,
      18., 66., 114., 162., 21., 69., 117., 165., 24., 72., 120., 168.,
      25., 73., 121., 169., 28., 76., 124., 172., 31., 79., 127., 175.,
      34., 82., 130., 178., 26., 74., 122., 170., 29., 77., 125., 173.,
      32., 80., 128., 176., 35., 83., 131., 179., 27., 75., 123., 171.,
      30., 78., 126., 174., 33., 81., 129., 177., 36., 84., 132., 180.,
      37., 85., 133., 181., 40., 88., 136., 184., 43., 91., 139., 187.,
      46., 94., 142., 190., 38., 86., 134., 182., 41., 89., 137., 185.,
      44., 92., 140., 188., 47., 95., 143., 191., 39., 87., 135., 183.,
      42., 90., 138., 186., 45., 93., 141., 189., 48., 96., 144., 192.};
  const std::vector<int> sizes = {4, 4, 4, 3};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x3_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   13.,  14.,  15.,  25.,  26.,  27.,  37.,  38.,  39.,
      49.,  50.,  51.,  61.,  62.,  63.,  73.,  74.,  75.,  85.,  86.,  87.,
      97.,  98.,  99.,  109., 110., 111., 121., 122., 123., 133., 134., 135.,
      145., 146., 147., 157., 158., 159., 169., 170., 171., 181., 182., 183.,
      4.,   5.,   6.,   16.,  17.,  18.,  28.,  29.,  30.,  40.,  41.,  42.,
      52.,  53.,  54.,  64.,  65.,  66.,  76.,  77.,  78.,  88.,  89.,  90.,
      100., 101., 102., 112., 113., 114., 124., 125., 126., 136., 137., 138.,
      148., 149., 150., 160., 161., 162., 172., 173., 174., 184., 185., 186.,
      7.,   8.,   9.,   19.,  20.,  21.,  31.,  32.,  33.,  43.,  44.,  45.,
      55.,  56.,  57.,  67.,  68.,  69.,  79.,  80.,  81.,  91.,  92.,  93.,
      103., 104., 105., 115., 116., 117., 127., 128., 129., 139., 140., 141.,
      151., 152., 153., 163., 164., 165., 175., 176., 177., 187., 188., 189.,
      10.,  11.,  12.,  22.,  23.,  24.,  34.,  35.,  36.,  46.,  47.,  48.,
      58.,  59.,  60.,  70.,  71.,  72.,  82.,  83.,  84.,  94.,  95.,  96.,
      106., 107., 108., 118., 119., 120., 130., 131., 132., 142., 143., 144.,
      154., 155., 156., 166., 167., 168., 178., 179., 180., 190., 191., 192.};
  const std::vector<int> sizes = {4, 4, 4, 3};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x3_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  37.,  2.,   14.,  26.,  38.,  3.,   15.,  27.,  39.,
      49.,  61.,  73.,  85.,  50.,  62.,  74.,  86.,  51.,  63.,  75.,  87.,
      97.,  109., 121., 133., 98.,  110., 122., 134., 99.,  111., 123., 135.,
      145., 157., 169., 181., 146., 158., 170., 182., 147., 159., 171., 183.,
      4.,   16.,  28.,  40.,  5.,   17.,  29.,  41.,  6.,   18.,  30.,  42.,
      52.,  64.,  76.,  88.,  53.,  65.,  77.,  89.,  54.,  66.,  78.,  90.,
      100., 112., 124., 136., 101., 113., 125., 137., 102., 114., 126., 138.,
      148., 160., 172., 184., 149., 161., 173., 185., 150., 162., 174., 186.,
      7.,   19.,  31.,  43.,  8.,   20.,  32.,  44.,  9.,   21.,  33.,  45.,
      55.,  67.,  79.,  91.,  56.,  68.,  80.,  92.,  57.,  69.,  81.,  93.,
      103., 115., 127., 139., 104., 116., 128., 140., 105., 117., 129., 141.,
      151., 163., 175., 187., 152., 164., 176., 188., 153., 165., 177., 189.,
      10.,  22.,  34.,  46.,  11.,  23.,  35.,  47.,  12.,  24.,  36.,  48.,
      58.,  70.,  82.,  94.,  59.,  71.,  83.,  95.,  60.,  72.,  84.,  96.,
      106., 118., 130., 142., 107., 119., 131., 143., 108., 120., 132., 144.,
      154., 166., 178., 190., 155., 167., 179., 191., 156., 168., 180., 192.};
  const std::vector<int> sizes = {4, 4, 4, 3};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x3_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  49., 50., 51., 97.,  98.,  99.,  145., 146., 147.,
      13., 14., 15., 61., 62., 63., 109., 110., 111., 157., 158., 159.,
      25., 26., 27., 73., 74., 75., 121., 122., 123., 169., 170., 171.,
      37., 38., 39., 85., 86., 87., 133., 134., 135., 181., 182., 183.,
      4.,  5.,  6.,  52., 53., 54., 100., 101., 102., 148., 149., 150.,
      16., 17., 18., 64., 65., 66., 112., 113., 114., 160., 161., 162.,
      28., 29., 30., 76., 77., 78., 124., 125., 126., 172., 173., 174.,
      40., 41., 42., 88., 89., 90., 136., 137., 138., 184., 185., 186.,
      7.,  8.,  9.,  55., 56., 57., 103., 104., 105., 151., 152., 153.,
      19., 20., 21., 67., 68., 69., 115., 116., 117., 163., 164., 165.,
      31., 32., 33., 79., 80., 81., 127., 128., 129., 175., 176., 177.,
      43., 44., 45., 91., 92., 93., 139., 140., 141., 187., 188., 189.,
      10., 11., 12., 58., 59., 60., 106., 107., 108., 154., 155., 156.,
      22., 23., 24., 70., 71., 72., 118., 119., 120., 166., 167., 168.,
      34., 35., 36., 82., 83., 84., 130., 131., 132., 178., 179., 180.,
      46., 47., 48., 94., 95., 96., 142., 143., 144., 190., 191., 192.};
  const std::vector<int> sizes = {4, 4, 4, 3};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x3_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  145., 2.,  50., 98.,  146., 3.,  51., 99.,  147.,
      13., 61., 109., 157., 14., 62., 110., 158., 15., 63., 111., 159.,
      25., 73., 121., 169., 26., 74., 122., 170., 27., 75., 123., 171.,
      37., 85., 133., 181., 38., 86., 134., 182., 39., 87., 135., 183.,
      4.,  52., 100., 148., 5.,  53., 101., 149., 6.,  54., 102., 150.,
      16., 64., 112., 160., 17., 65., 113., 161., 18., 66., 114., 162.,
      28., 76., 124., 172., 29., 77., 125., 173., 30., 78., 126., 174.,
      40., 88., 136., 184., 41., 89., 137., 185., 42., 90., 138., 186.,
      7.,  55., 103., 151., 8.,  56., 104., 152., 9.,  57., 105., 153.,
      19., 67., 115., 163., 20., 68., 116., 164., 21., 69., 117., 165.,
      31., 79., 127., 175., 32., 80., 128., 176., 33., 81., 129., 177.,
      43., 91., 139., 187., 44., 92., 140., 188., 45., 93., 141., 189.,
      10., 58., 106., 154., 11., 59., 107., 155., 12., 60., 108., 156.,
      22., 70., 118., 166., 23., 71., 119., 167., 24., 72., 120., 168.,
      34., 82., 130., 178., 35., 83., 131., 179., 36., 84., 132., 180.,
      46., 94., 142., 190., 47., 95., 143., 191., 48., 96., 144., 192.};
  const std::vector<int> sizes = {4, 4, 4, 3};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x3_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  37.,  49.,  61.,  73.,  85.,  97.,  109., 121., 133.,
      145., 157., 169., 181., 2.,   14.,  26.,  38.,  50.,  62.,  74.,  86.,
      98.,  110., 122., 134., 146., 158., 170., 182., 3.,   15.,  27.,  39.,
      51.,  63.,  75.,  87.,  99.,  111., 123., 135., 147., 159., 171., 183.,
      4.,   16.,  28.,  40.,  52.,  64.,  76.,  88.,  100., 112., 124., 136.,
      148., 160., 172., 184., 5.,   17.,  29.,  41.,  53.,  65.,  77.,  89.,
      101., 113., 125., 137., 149., 161., 173., 185., 6.,   18.,  30.,  42.,
      54.,  66.,  78.,  90.,  102., 114., 126., 138., 150., 162., 174., 186.,
      7.,   19.,  31.,  43.,  55.,  67.,  79.,  91.,  103., 115., 127., 139.,
      151., 163., 175., 187., 8.,   20.,  32.,  44.,  56.,  68.,  80.,  92.,
      104., 116., 128., 140., 152., 164., 176., 188., 9.,   21.,  33.,  45.,
      57.,  69.,  81.,  93.,  105., 117., 129., 141., 153., 165., 177., 189.,
      10.,  22.,  34.,  46.,  58.,  70.,  82.,  94.,  106., 118., 130., 142.,
      154., 166., 178., 190., 11.,  23.,  35.,  47.,  59.,  71.,  83.,  95.,
      107., 119., 131., 143., 155., 167., 179., 191., 12.,  24.,  36.,  48.,
      60.,  72.,  84.,  96.,  108., 120., 132., 144., 156., 168., 180., 192.};
  const std::vector<int> sizes = {4, 4, 4, 3};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x3_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  145., 13., 61., 109., 157., 25., 73., 121., 169.,
      37., 85., 133., 181., 2.,  50., 98.,  146., 14., 62., 110., 158.,
      26., 74., 122., 170., 38., 86., 134., 182., 3.,  51., 99.,  147.,
      15., 63., 111., 159., 27., 75., 123., 171., 39., 87., 135., 183.,
      4.,  52., 100., 148., 16., 64., 112., 160., 28., 76., 124., 172.,
      40., 88., 136., 184., 5.,  53., 101., 149., 17., 65., 113., 161.,
      29., 77., 125., 173., 41., 89., 137., 185., 6.,  54., 102., 150.,
      18., 66., 114., 162., 30., 78., 126., 174., 42., 90., 138., 186.,
      7.,  55., 103., 151., 19., 67., 115., 163., 31., 79., 127., 175.,
      43., 91., 139., 187., 8.,  56., 104., 152., 20., 68., 116., 164.,
      32., 80., 128., 176., 44., 92., 140., 188., 9.,  57., 105., 153.,
      21., 69., 117., 165., 33., 81., 129., 177., 45., 93., 141., 189.,
      10., 58., 106., 154., 22., 70., 118., 166., 34., 82., 130., 178.,
      46., 94., 142., 190., 11., 59., 107., 155., 23., 71., 119., 167.,
      35., 83., 131., 179., 47., 95., 143., 191., 12., 60., 108., 156.,
      24., 72., 120., 168., 36., 84., 132., 180., 48., 96., 144., 192.};
  const std::vector<int> sizes = {4, 4, 4, 3};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x3_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   7.,   10.,  13.,  16.,  19.,  22.,  25.,  28.,  31.,  34.,
      37.,  40.,  43.,  46.,  49.,  52.,  55.,  58.,  61.,  64.,  67.,  70.,
      73.,  76.,  79.,  82.,  85.,  88.,  91.,  94.,  97.,  100., 103., 106.,
      109., 112., 115., 118., 121., 124., 127., 130., 133., 136., 139., 142.,
      145., 148., 151., 154., 157., 160., 163., 166., 169., 172., 175., 178.,
      181., 184., 187., 190., 2.,   5.,   8.,   11.,  14.,  17.,  20.,  23.,
      26.,  29.,  32.,  35.,  38.,  41.,  44.,  47.,  50.,  53.,  56.,  59.,
      62.,  65.,  68.,  71.,  74.,  77.,  80.,  83.,  86.,  89.,  92.,  95.,
      98.,  101., 104., 107., 110., 113., 116., 119., 122., 125., 128., 131.,
      134., 137., 140., 143., 146., 149., 152., 155., 158., 161., 164., 167.,
      170., 173., 176., 179., 182., 185., 188., 191., 3.,   6.,   9.,   12.,
      15.,  18.,  21.,  24.,  27.,  30.,  33.,  36.,  39.,  42.,  45.,  48.,
      51.,  54.,  57.,  60.,  63.,  66.,  69.,  72.,  75.,  78.,  81.,  84.,
      87.,  90.,  93.,  96.,  99.,  102., 105., 108., 111., 114., 117., 120.,
      123., 126., 129., 132., 135., 138., 141., 144., 147., 150., 153., 156.,
      159., 162., 165., 168., 171., 174., 177., 180., 183., 186., 189., 192.};
  const std::vector<int> sizes = {4, 4, 4, 3};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x3_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  37.,  4.,   16.,  28.,  40.,  7.,   19.,  31.,  43.,
      10.,  22.,  34.,  46.,  49.,  61.,  73.,  85.,  52.,  64.,  76.,  88.,
      55.,  67.,  79.,  91.,  58.,  70.,  82.,  94.,  97.,  109., 121., 133.,
      100., 112., 124., 136., 103., 115., 127., 139., 106., 118., 130., 142.,
      145., 157., 169., 181., 148., 160., 172., 184., 151., 163., 175., 187.,
      154., 166., 178., 190., 2.,   14.,  26.,  38.,  5.,   17.,  29.,  41.,
      8.,   20.,  32.,  44.,  11.,  23.,  35.,  47.,  50.,  62.,  74.,  86.,
      53.,  65.,  77.,  89.,  56.,  68.,  80.,  92.,  59.,  71.,  83.,  95.,
      98.,  110., 122., 134., 101., 113., 125., 137., 104., 116., 128., 140.,
      107., 119., 131., 143., 146., 158., 170., 182., 149., 161., 173., 185.,
      152., 164., 176., 188., 155., 167., 179., 191., 3.,   15.,  27.,  39.,
      6.,   18.,  30.,  42.,  9.,   21.,  33.,  45.,  12.,  24.,  36.,  48.,
      51.,  63.,  75.,  87.,  54.,  66.,  78.,  90.,  57.,  69.,  81.,  93.,
      60.,  72.,  84.,  96.,  99.,  111., 123., 135., 102., 114., 126., 138.,
      105., 117., 129., 141., 108., 120., 132., 144., 147., 159., 171., 183.,
      150., 162., 174., 186., 153., 165., 177., 189., 156., 168., 180., 192.};
  const std::vector<int> sizes = {4, 4, 4, 3};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x3_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   7.,   10.,  49.,  52.,  55.,  58.,  97.,  100., 103., 106.,
      145., 148., 151., 154., 13.,  16.,  19.,  22.,  61.,  64.,  67.,  70.,
      109., 112., 115., 118., 157., 160., 163., 166., 25.,  28.,  31.,  34.,
      73.,  76.,  79.,  82.,  121., 124., 127., 130., 169., 172., 175., 178.,
      37.,  40.,  43.,  46.,  85.,  88.,  91.,  94.,  133., 136., 139., 142.,
      181., 184., 187., 190., 2.,   5.,   8.,   11.,  50.,  53.,  56.,  59.,
      98.,  101., 104., 107., 146., 149., 152., 155., 14.,  17.,  20.,  23.,
      62.,  65.,  68.,  71.,  110., 113., 116., 119., 158., 161., 164., 167.,
      26.,  29.,  32.,  35.,  74.,  77.,  80.,  83.,  122., 125., 128., 131.,
      170., 173., 176., 179., 38.,  41.,  44.,  47.,  86.,  89.,  92.,  95.,
      134., 137., 140., 143., 182., 185., 188., 191., 3.,   6.,   9.,   12.,
      51.,  54.,  57.,  60.,  99.,  102., 105., 108., 147., 150., 153., 156.,
      15.,  18.,  21.,  24.,  63.,  66.,  69.,  72.,  111., 114., 117., 120.,
      159., 162., 165., 168., 27.,  30.,  33.,  36.,  75.,  78.,  81.,  84.,
      123., 126., 129., 132., 171., 174., 177., 180., 39.,  42.,  45.,  48.,
      87.,  90.,  93.,  96.,  135., 138., 141., 144., 183., 186., 189., 192.};
  const std::vector<int> sizes = {4, 4, 4, 3};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x3_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  145., 4.,  52., 100., 148., 7.,  55., 103., 151.,
      10., 58., 106., 154., 13., 61., 109., 157., 16., 64., 112., 160.,
      19., 67., 115., 163., 22., 70., 118., 166., 25., 73., 121., 169.,
      28., 76., 124., 172., 31., 79., 127., 175., 34., 82., 130., 178.,
      37., 85., 133., 181., 40., 88., 136., 184., 43., 91., 139., 187.,
      46., 94., 142., 190., 2.,  50., 98.,  146., 5.,  53., 101., 149.,
      8.,  56., 104., 152., 11., 59., 107., 155., 14., 62., 110., 158.,
      17., 65., 113., 161., 20., 68., 116., 164., 23., 71., 119., 167.,
      26., 74., 122., 170., 29., 77., 125., 173., 32., 80., 128., 176.,
      35., 83., 131., 179., 38., 86., 134., 182., 41., 89., 137., 185.,
      44., 92., 140., 188., 47., 95., 143., 191., 3.,  51., 99.,  147.,
      6.,  54., 102., 150., 9.,  57., 105., 153., 12., 60., 108., 156.,
      15., 63., 111., 159., 18., 66., 114., 162., 21., 69., 117., 165.,
      24., 72., 120., 168., 27., 75., 123., 171., 30., 78., 126., 174.,
      33., 81., 129., 177., 36., 84., 132., 180., 39., 87., 135., 183.,
      42., 90., 138., 186., 45., 93., 141., 189., 48., 96., 144., 192.};
  const std::vector<int> sizes = {4, 4, 4, 3};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x3_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   13.,  25.,  37.,  49.,  61.,  73.,  85.,  97.,  109., 121., 133.,
      145., 157., 169., 181., 4.,   16.,  28.,  40.,  52.,  64.,  76.,  88.,
      100., 112., 124., 136., 148., 160., 172., 184., 7.,   19.,  31.,  43.,
      55.,  67.,  79.,  91.,  103., 115., 127., 139., 151., 163., 175., 187.,
      10.,  22.,  34.,  46.,  58.,  70.,  82.,  94.,  106., 118., 130., 142.,
      154., 166., 178., 190., 2.,   14.,  26.,  38.,  50.,  62.,  74.,  86.,
      98.,  110., 122., 134., 146., 158., 170., 182., 5.,   17.,  29.,  41.,
      53.,  65.,  77.,  89.,  101., 113., 125., 137., 149., 161., 173., 185.,
      8.,   20.,  32.,  44.,  56.,  68.,  80.,  92.,  104., 116., 128., 140.,
      152., 164., 176., 188., 11.,  23.,  35.,  47.,  59.,  71.,  83.,  95.,
      107., 119., 131., 143., 155., 167., 179., 191., 3.,   15.,  27.,  39.,
      51.,  63.,  75.,  87.,  99.,  111., 123., 135., 147., 159., 171., 183.,
      6.,   18.,  30.,  42.,  54.,  66.,  78.,  90.,  102., 114., 126., 138.,
      150., 162., 174., 186., 9.,   21.,  33.,  45.,  57.,  69.,  81.,  93.,
      105., 117., 129., 141., 153., 165., 177., 189., 12.,  24.,  36.,  48.,
      60.,  72.,  84.,  96.,  108., 120., 132., 144., 156., 168., 180., 192.};
  const std::vector<int> sizes = {4, 4, 4, 3};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x3_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  49., 97.,  145., 13., 61., 109., 157., 25., 73., 121., 169.,
      37., 85., 133., 181., 4.,  52., 100., 148., 16., 64., 112., 160.,
      28., 76., 124., 172., 40., 88., 136., 184., 7.,  55., 103., 151.,
      19., 67., 115., 163., 31., 79., 127., 175., 43., 91., 139., 187.,
      10., 58., 106., 154., 22., 70., 118., 166., 34., 82., 130., 178.,
      46., 94., 142., 190., 2.,  50., 98.,  146., 14., 62., 110., 158.,
      26., 74., 122., 170., 38., 86., 134., 182., 5.,  53., 101., 149.,
      17., 65., 113., 161., 29., 77., 125., 173., 41., 89., 137., 185.,
      8.,  56., 104., 152., 20., 68., 116., 164., 32., 80., 128., 176.,
      44., 92., 140., 188., 11., 59., 107., 155., 23., 71., 119., 167.,
      35., 83., 131., 179., 47., 95., 143., 191., 3.,  51., 99.,  147.,
      15., 63., 111., 159., 27., 75., 123., 171., 39., 87., 135., 183.,
      6.,  54., 102., 150., 18., 66., 114., 162., 30., 78., 126., 174.,
      42., 90., 138., 186., 9.,  57., 105., 153., 21., 69., 117., 165.,
      33., 81., 129., 177., 45., 93., 141., 189., 12., 60., 108., 156.,
      24., 72., 120., 168., 36., 84., 132., 180., 48., 96., 144., 192.};
  const std::vector<int> sizes = {4, 4, 4, 3};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x4_0x1x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13.,  14.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,
      37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,
      85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 105., 106., 107., 108.,
      109., 110., 111., 112., 113., 114., 115., 116., 117., 118., 119., 120.,
      121., 122., 123., 124., 125., 126., 127., 128., 129., 130., 131., 132.,
      133., 134., 135., 136., 137., 138., 139., 140., 141., 142., 143., 144.,
      145., 146., 147., 148., 149., 150., 151., 152., 153., 154., 155., 156.,
      157., 158., 159., 160., 161., 162., 163., 164., 165., 166., 167., 168.,
      169., 170., 171., 172., 173., 174., 175., 176., 177., 178., 179., 180.,
      181., 182., 183., 184., 185., 186., 187., 188., 189., 190., 191., 192.,
      193., 194., 195., 196., 197., 198., 199., 200., 201., 202., 203., 204.,
      205., 206., 207., 208., 209., 210., 211., 212., 213., 214., 215., 216.,
      217., 218., 219., 220., 221., 222., 223., 224., 225., 226., 227., 228.,
      229., 230., 231., 232., 233., 234., 235., 236., 237., 238., 239., 240.,
      241., 242., 243., 244., 245., 246., 247., 248., 249., 250., 251., 252.,
      253., 254., 255., 256.};
  const std::vector<int> sizes = {4, 4, 4, 4};
  const std::vector<int> perm = {0, 1, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x4_0x1x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  2.,   6.,   10.,  14.,  3.,   7.,   11.,  15.,
      4.,   8.,   12.,  16.,  17.,  21.,  25.,  29.,  18.,  22.,  26.,  30.,
      19.,  23.,  27.,  31.,  20.,  24.,  28.,  32.,  33.,  37.,  41.,  45.,
      34.,  38.,  42.,  46.,  35.,  39.,  43.,  47.,  36.,  40.,  44.,  48.,
      49.,  53.,  57.,  61.,  50.,  54.,  58.,  62.,  51.,  55.,  59.,  63.,
      52.,  56.,  60.,  64.,  65.,  69.,  73.,  77.,  66.,  70.,  74.,  78.,
      67.,  71.,  75.,  79.,  68.,  72.,  76.,  80.,  81.,  85.,  89.,  93.,
      82.,  86.,  90.,  94.,  83.,  87.,  91.,  95.,  84.,  88.,  92.,  96.,
      97.,  101., 105., 109., 98.,  102., 106., 110., 99.,  103., 107., 111.,
      100., 104., 108., 112., 113., 117., 121., 125., 114., 118., 122., 126.,
      115., 119., 123., 127., 116., 120., 124., 128., 129., 133., 137., 141.,
      130., 134., 138., 142., 131., 135., 139., 143., 132., 136., 140., 144.,
      145., 149., 153., 157., 146., 150., 154., 158., 147., 151., 155., 159.,
      148., 152., 156., 160., 161., 165., 169., 173., 162., 166., 170., 174.,
      163., 167., 171., 175., 164., 168., 172., 176., 177., 181., 185., 189.,
      178., 182., 186., 190., 179., 183., 187., 191., 180., 184., 188., 192.,
      193., 197., 201., 205., 194., 198., 202., 206., 195., 199., 203., 207.,
      196., 200., 204., 208., 209., 213., 217., 221., 210., 214., 218., 222.,
      211., 215., 219., 223., 212., 216., 220., 224., 225., 229., 233., 237.,
      226., 230., 234., 238., 227., 231., 235., 239., 228., 232., 236., 240.,
      241., 245., 249., 253., 242., 246., 250., 254., 243., 247., 251., 255.,
      244., 248., 252., 256.};
  const std::vector<int> sizes = {4, 4, 4, 4};
  const std::vector<int> perm = {0, 1, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x4_0x2x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   17.,  18.,  19.,  20.,  33.,  34.,  35.,  36.,
      49.,  50.,  51.,  52.,  5.,   6.,   7.,   8.,   21.,  22.,  23.,  24.,
      37.,  38.,  39.,  40.,  53.,  54.,  55.,  56.,  9.,   10.,  11.,  12.,
      25.,  26.,  27.,  28.,  41.,  42.,  43.,  44.,  57.,  58.,  59.,  60.,
      13.,  14.,  15.,  16.,  29.,  30.,  31.,  32.,  45.,  46.,  47.,  48.,
      61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  81.,  82.,  83.,  84.,
      97.,  98.,  99.,  100., 113., 114., 115., 116., 69.,  70.,  71.,  72.,
      85.,  86.,  87.,  88.,  101., 102., 103., 104., 117., 118., 119., 120.,
      73.,  74.,  75.,  76.,  89.,  90.,  91.,  92.,  105., 106., 107., 108.,
      121., 122., 123., 124., 77.,  78.,  79.,  80.,  93.,  94.,  95.,  96.,
      109., 110., 111., 112., 125., 126., 127., 128., 129., 130., 131., 132.,
      145., 146., 147., 148., 161., 162., 163., 164., 177., 178., 179., 180.,
      133., 134., 135., 136., 149., 150., 151., 152., 165., 166., 167., 168.,
      181., 182., 183., 184., 137., 138., 139., 140., 153., 154., 155., 156.,
      169., 170., 171., 172., 185., 186., 187., 188., 141., 142., 143., 144.,
      157., 158., 159., 160., 173., 174., 175., 176., 189., 190., 191., 192.,
      193., 194., 195., 196., 209., 210., 211., 212., 225., 226., 227., 228.,
      241., 242., 243., 244., 197., 198., 199., 200., 213., 214., 215., 216.,
      229., 230., 231., 232., 245., 246., 247., 248., 201., 202., 203., 204.,
      217., 218., 219., 220., 233., 234., 235., 236., 249., 250., 251., 252.,
      205., 206., 207., 208., 221., 222., 223., 224., 237., 238., 239., 240.,
      253., 254., 255., 256.};
  const std::vector<int> sizes = {4, 4, 4, 4};
  const std::vector<int> perm = {0, 2, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x4_0x2x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   17.,  33.,  49.,  2.,   18.,  34.,  50.,  3.,   19.,  35.,  51.,
      4.,   20.,  36.,  52.,  5.,   21.,  37.,  53.,  6.,   22.,  38.,  54.,
      7.,   23.,  39.,  55.,  8.,   24.,  40.,  56.,  9.,   25.,  41.,  57.,
      10.,  26.,  42.,  58.,  11.,  27.,  43.,  59.,  12.,  28.,  44.,  60.,
      13.,  29.,  45.,  61.,  14.,  30.,  46.,  62.,  15.,  31.,  47.,  63.,
      16.,  32.,  48.,  64.,  65.,  81.,  97.,  113., 66.,  82.,  98.,  114.,
      67.,  83.,  99.,  115., 68.,  84.,  100., 116., 69.,  85.,  101., 117.,
      70.,  86.,  102., 118., 71.,  87.,  103., 119., 72.,  88.,  104., 120.,
      73.,  89.,  105., 121., 74.,  90.,  106., 122., 75.,  91.,  107., 123.,
      76.,  92.,  108., 124., 77.,  93.,  109., 125., 78.,  94.,  110., 126.,
      79.,  95.,  111., 127., 80.,  96.,  112., 128., 129., 145., 161., 177.,
      130., 146., 162., 178., 131., 147., 163., 179., 132., 148., 164., 180.,
      133., 149., 165., 181., 134., 150., 166., 182., 135., 151., 167., 183.,
      136., 152., 168., 184., 137., 153., 169., 185., 138., 154., 170., 186.,
      139., 155., 171., 187., 140., 156., 172., 188., 141., 157., 173., 189.,
      142., 158., 174., 190., 143., 159., 175., 191., 144., 160., 176., 192.,
      193., 209., 225., 241., 194., 210., 226., 242., 195., 211., 227., 243.,
      196., 212., 228., 244., 197., 213., 229., 245., 198., 214., 230., 246.,
      199., 215., 231., 247., 200., 216., 232., 248., 201., 217., 233., 249.,
      202., 218., 234., 250., 203., 219., 235., 251., 204., 220., 236., 252.,
      205., 221., 237., 253., 206., 222., 238., 254., 207., 223., 239., 255.,
      208., 224., 240., 256.};
  const std::vector<int> sizes = {4, 4, 4, 4};
  const std::vector<int> perm = {0, 2, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x4_0x3x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  17.,  21.,  25.,  29.,  33.,  37.,  41.,  45.,
      49.,  53.,  57.,  61.,  2.,   6.,   10.,  14.,  18.,  22.,  26.,  30.,
      34.,  38.,  42.,  46.,  50.,  54.,  58.,  62.,  3.,   7.,   11.,  15.,
      19.,  23.,  27.,  31.,  35.,  39.,  43.,  47.,  51.,  55.,  59.,  63.,
      4.,   8.,   12.,  16.,  20.,  24.,  28.,  32.,  36.,  40.,  44.,  48.,
      52.,  56.,  60.,  64.,  65.,  69.,  73.,  77.,  81.,  85.,  89.,  93.,
      97.,  101., 105., 109., 113., 117., 121., 125., 66.,  70.,  74.,  78.,
      82.,  86.,  90.,  94.,  98.,  102., 106., 110., 114., 118., 122., 126.,
      67.,  71.,  75.,  79.,  83.,  87.,  91.,  95.,  99.,  103., 107., 111.,
      115., 119., 123., 127., 68.,  72.,  76.,  80.,  84.,  88.,  92.,  96.,
      100., 104., 108., 112., 116., 120., 124., 128., 129., 133., 137., 141.,
      145., 149., 153., 157., 161., 165., 169., 173., 177., 181., 185., 189.,
      130., 134., 138., 142., 146., 150., 154., 158., 162., 166., 170., 174.,
      178., 182., 186., 190., 131., 135., 139., 143., 147., 151., 155., 159.,
      163., 167., 171., 175., 179., 183., 187., 191., 132., 136., 140., 144.,
      148., 152., 156., 160., 164., 168., 172., 176., 180., 184., 188., 192.,
      193., 197., 201., 205., 209., 213., 217., 221., 225., 229., 233., 237.,
      241., 245., 249., 253., 194., 198., 202., 206., 210., 214., 218., 222.,
      226., 230., 234., 238., 242., 246., 250., 254., 195., 199., 203., 207.,
      211., 215., 219., 223., 227., 231., 235., 239., 243., 247., 251., 255.,
      196., 200., 204., 208., 212., 216., 220., 224., 228., 232., 236., 240.,
      244., 248., 252., 256.};
  const std::vector<int> sizes = {4, 4, 4, 4};
  const std::vector<int> perm = {0, 3, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x4_0x3x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   17.,  33.,  49.,  5.,   21.,  37.,  53.,  9.,   25.,  41.,  57.,
      13.,  29.,  45.,  61.,  2.,   18.,  34.,  50.,  6.,   22.,  38.,  54.,
      10.,  26.,  42.,  58.,  14.,  30.,  46.,  62.,  3.,   19.,  35.,  51.,
      7.,   23.,  39.,  55.,  11.,  27.,  43.,  59.,  15.,  31.,  47.,  63.,
      4.,   20.,  36.,  52.,  8.,   24.,  40.,  56.,  12.,  28.,  44.,  60.,
      16.,  32.,  48.,  64.,  65.,  81.,  97.,  113., 69.,  85.,  101., 117.,
      73.,  89.,  105., 121., 77.,  93.,  109., 125., 66.,  82.,  98.,  114.,
      70.,  86.,  102., 118., 74.,  90.,  106., 122., 78.,  94.,  110., 126.,
      67.,  83.,  99.,  115., 71.,  87.,  103., 119., 75.,  91.,  107., 123.,
      79.,  95.,  111., 127., 68.,  84.,  100., 116., 72.,  88.,  104., 120.,
      76.,  92.,  108., 124., 80.,  96.,  112., 128., 129., 145., 161., 177.,
      133., 149., 165., 181., 137., 153., 169., 185., 141., 157., 173., 189.,
      130., 146., 162., 178., 134., 150., 166., 182., 138., 154., 170., 186.,
      142., 158., 174., 190., 131., 147., 163., 179., 135., 151., 167., 183.,
      139., 155., 171., 187., 143., 159., 175., 191., 132., 148., 164., 180.,
      136., 152., 168., 184., 140., 156., 172., 188., 144., 160., 176., 192.,
      193., 209., 225., 241., 197., 213., 229., 245., 201., 217., 233., 249.,
      205., 221., 237., 253., 194., 210., 226., 242., 198., 214., 230., 246.,
      202., 218., 234., 250., 206., 222., 238., 254., 195., 211., 227., 243.,
      199., 215., 231., 247., 203., 219., 235., 251., 207., 223., 239., 255.,
      196., 212., 228., 244., 200., 216., 232., 248., 204., 220., 236., 252.,
      208., 224., 240., 256.};
  const std::vector<int> sizes = {4, 4, 4, 4};
  const std::vector<int> perm = {0, 3, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x4_1x0x2x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,   10.,  11.,  12.,
      13.,  14.,  15.,  16.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,  72.,
      73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  129., 130., 131., 132.,
      133., 134., 135., 136., 137., 138., 139., 140., 141., 142., 143., 144.,
      193., 194., 195., 196., 197., 198., 199., 200., 201., 202., 203., 204.,
      205., 206., 207., 208., 17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,
      25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  81.,  82.,  83.,  84.,
      85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,
      145., 146., 147., 148., 149., 150., 151., 152., 153., 154., 155., 156.,
      157., 158., 159., 160., 209., 210., 211., 212., 213., 214., 215., 216.,
      217., 218., 219., 220., 221., 222., 223., 224., 33.,  34.,  35.,  36.,
      37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,
      97.,  98.,  99.,  100., 101., 102., 103., 104., 105., 106., 107., 108.,
      109., 110., 111., 112., 161., 162., 163., 164., 165., 166., 167., 168.,
      169., 170., 171., 172., 173., 174., 175., 176., 225., 226., 227., 228.,
      229., 230., 231., 232., 233., 234., 235., 236., 237., 238., 239., 240.,
      49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,  60.,
      61.,  62.,  63.,  64.,  113., 114., 115., 116., 117., 118., 119., 120.,
      121., 122., 123., 124., 125., 126., 127., 128., 177., 178., 179., 180.,
      181., 182., 183., 184., 185., 186., 187., 188., 189., 190., 191., 192.,
      241., 242., 243., 244., 245., 246., 247., 248., 249., 250., 251., 252.,
      253., 254., 255., 256.};
  const std::vector<int> sizes = {4, 4, 4, 4};
  const std::vector<int> perm = {1, 0, 2, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x4_1x0x3x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  2.,   6.,   10.,  14.,  3.,   7.,   11.,  15.,
      4.,   8.,   12.,  16.,  65.,  69.,  73.,  77.,  66.,  70.,  74.,  78.,
      67.,  71.,  75.,  79.,  68.,  72.,  76.,  80.,  129., 133., 137., 141.,
      130., 134., 138., 142., 131., 135., 139., 143., 132., 136., 140., 144.,
      193., 197., 201., 205., 194., 198., 202., 206., 195., 199., 203., 207.,
      196., 200., 204., 208., 17.,  21.,  25.,  29.,  18.,  22.,  26.,  30.,
      19.,  23.,  27.,  31.,  20.,  24.,  28.,  32.,  81.,  85.,  89.,  93.,
      82.,  86.,  90.,  94.,  83.,  87.,  91.,  95.,  84.,  88.,  92.,  96.,
      145., 149., 153., 157., 146., 150., 154., 158., 147., 151., 155., 159.,
      148., 152., 156., 160., 209., 213., 217., 221., 210., 214., 218., 222.,
      211., 215., 219., 223., 212., 216., 220., 224., 33.,  37.,  41.,  45.,
      34.,  38.,  42.,  46.,  35.,  39.,  43.,  47.,  36.,  40.,  44.,  48.,
      97.,  101., 105., 109., 98.,  102., 106., 110., 99.,  103., 107., 111.,
      100., 104., 108., 112., 161., 165., 169., 173., 162., 166., 170., 174.,
      163., 167., 171., 175., 164., 168., 172., 176., 225., 229., 233., 237.,
      226., 230., 234., 238., 227., 231., 235., 239., 228., 232., 236., 240.,
      49.,  53.,  57.,  61.,  50.,  54.,  58.,  62.,  51.,  55.,  59.,  63.,
      52.,  56.,  60.,  64.,  113., 117., 121., 125., 114., 118., 122., 126.,
      115., 119., 123., 127., 116., 120., 124., 128., 177., 181., 185., 189.,
      178., 182., 186., 190., 179., 183., 187., 191., 180., 184., 188., 192.,
      241., 245., 249., 253., 242., 246., 250., 254., 243., 247., 251., 255.,
      244., 248., 252., 256.};
  const std::vector<int> sizes = {4, 4, 4, 4};
  const std::vector<int> perm = {1, 0, 3, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x4_1x2x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   65.,  66.,  67.,  68.,  129., 130., 131., 132.,
      193., 194., 195., 196., 5.,   6.,   7.,   8.,   69.,  70.,  71.,  72.,
      133., 134., 135., 136., 197., 198., 199., 200., 9.,   10.,  11.,  12.,
      73.,  74.,  75.,  76.,  137., 138., 139., 140., 201., 202., 203., 204.,
      13.,  14.,  15.,  16.,  77.,  78.,  79.,  80.,  141., 142., 143., 144.,
      205., 206., 207., 208., 17.,  18.,  19.,  20.,  81.,  82.,  83.,  84.,
      145., 146., 147., 148., 209., 210., 211., 212., 21.,  22.,  23.,  24.,
      85.,  86.,  87.,  88.,  149., 150., 151., 152., 213., 214., 215., 216.,
      25.,  26.,  27.,  28.,  89.,  90.,  91.,  92.,  153., 154., 155., 156.,
      217., 218., 219., 220., 29.,  30.,  31.,  32.,  93.,  94.,  95.,  96.,
      157., 158., 159., 160., 221., 222., 223., 224., 33.,  34.,  35.,  36.,
      97.,  98.,  99.,  100., 161., 162., 163., 164., 225., 226., 227., 228.,
      37.,  38.,  39.,  40.,  101., 102., 103., 104., 165., 166., 167., 168.,
      229., 230., 231., 232., 41.,  42.,  43.,  44.,  105., 106., 107., 108.,
      169., 170., 171., 172., 233., 234., 235., 236., 45.,  46.,  47.,  48.,
      109., 110., 111., 112., 173., 174., 175., 176., 237., 238., 239., 240.,
      49.,  50.,  51.,  52.,  113., 114., 115., 116., 177., 178., 179., 180.,
      241., 242., 243., 244., 53.,  54.,  55.,  56.,  117., 118., 119., 120.,
      181., 182., 183., 184., 245., 246., 247., 248., 57.,  58.,  59.,  60.,
      121., 122., 123., 124., 185., 186., 187., 188., 249., 250., 251., 252.,
      61.,  62.,  63.,  64.,  125., 126., 127., 128., 189., 190., 191., 192.,
      253., 254., 255., 256.};
  const std::vector<int> sizes = {4, 4, 4, 4};
  const std::vector<int> perm = {1, 2, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x4_1x2x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  65.,  129., 193., 2.,  66.,  130., 194., 3.,  67.,  131., 195.,
      4.,  68.,  132., 196., 5.,  69.,  133., 197., 6.,  70.,  134., 198.,
      7.,  71.,  135., 199., 8.,  72.,  136., 200., 9.,  73.,  137., 201.,
      10., 74.,  138., 202., 11., 75.,  139., 203., 12., 76.,  140., 204.,
      13., 77.,  141., 205., 14., 78.,  142., 206., 15., 79.,  143., 207.,
      16., 80.,  144., 208., 17., 81.,  145., 209., 18., 82.,  146., 210.,
      19., 83.,  147., 211., 20., 84.,  148., 212., 21., 85.,  149., 213.,
      22., 86.,  150., 214., 23., 87.,  151., 215., 24., 88.,  152., 216.,
      25., 89.,  153., 217., 26., 90.,  154., 218., 27., 91.,  155., 219.,
      28., 92.,  156., 220., 29., 93.,  157., 221., 30., 94.,  158., 222.,
      31., 95.,  159., 223., 32., 96.,  160., 224., 33., 97.,  161., 225.,
      34., 98.,  162., 226., 35., 99.,  163., 227., 36., 100., 164., 228.,
      37., 101., 165., 229., 38., 102., 166., 230., 39., 103., 167., 231.,
      40., 104., 168., 232., 41., 105., 169., 233., 42., 106., 170., 234.,
      43., 107., 171., 235., 44., 108., 172., 236., 45., 109., 173., 237.,
      46., 110., 174., 238., 47., 111., 175., 239., 48., 112., 176., 240.,
      49., 113., 177., 241., 50., 114., 178., 242., 51., 115., 179., 243.,
      52., 116., 180., 244., 53., 117., 181., 245., 54., 118., 182., 246.,
      55., 119., 183., 247., 56., 120., 184., 248., 57., 121., 185., 249.,
      58., 122., 186., 250., 59., 123., 187., 251., 60., 124., 188., 252.,
      61., 125., 189., 253., 62., 126., 190., 254., 63., 127., 191., 255.,
      64., 128., 192., 256.};
  const std::vector<int> sizes = {4, 4, 4, 4};
  const std::vector<int> perm = {1, 2, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x4_1x3x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  65.,  69.,  73.,  77.,  129., 133., 137., 141.,
      193., 197., 201., 205., 2.,   6.,   10.,  14.,  66.,  70.,  74.,  78.,
      130., 134., 138., 142., 194., 198., 202., 206., 3.,   7.,   11.,  15.,
      67.,  71.,  75.,  79.,  131., 135., 139., 143., 195., 199., 203., 207.,
      4.,   8.,   12.,  16.,  68.,  72.,  76.,  80.,  132., 136., 140., 144.,
      196., 200., 204., 208., 17.,  21.,  25.,  29.,  81.,  85.,  89.,  93.,
      145., 149., 153., 157., 209., 213., 217., 221., 18.,  22.,  26.,  30.,
      82.,  86.,  90.,  94.,  146., 150., 154., 158., 210., 214., 218., 222.,
      19.,  23.,  27.,  31.,  83.,  87.,  91.,  95.,  147., 151., 155., 159.,
      211., 215., 219., 223., 20.,  24.,  28.,  32.,  84.,  88.,  92.,  96.,
      148., 152., 156., 160., 212., 216., 220., 224., 33.,  37.,  41.,  45.,
      97.,  101., 105., 109., 161., 165., 169., 173., 225., 229., 233., 237.,
      34.,  38.,  42.,  46.,  98.,  102., 106., 110., 162., 166., 170., 174.,
      226., 230., 234., 238., 35.,  39.,  43.,  47.,  99.,  103., 107., 111.,
      163., 167., 171., 175., 227., 231., 235., 239., 36.,  40.,  44.,  48.,
      100., 104., 108., 112., 164., 168., 172., 176., 228., 232., 236., 240.,
      49.,  53.,  57.,  61.,  113., 117., 121., 125., 177., 181., 185., 189.,
      241., 245., 249., 253., 50.,  54.,  58.,  62.,  114., 118., 122., 126.,
      178., 182., 186., 190., 242., 246., 250., 254., 51.,  55.,  59.,  63.,
      115., 119., 123., 127., 179., 183., 187., 191., 243., 247., 251., 255.,
      52.,  56.,  60.,  64.,  116., 120., 124., 128., 180., 184., 188., 192.,
      244., 248., 252., 256.};
  const std::vector<int> sizes = {4, 4, 4, 4};
  const std::vector<int> perm = {1, 3, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x4_1x3x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  65.,  129., 193., 5.,  69.,  133., 197., 9.,  73.,  137., 201.,
      13., 77.,  141., 205., 2.,  66.,  130., 194., 6.,  70.,  134., 198.,
      10., 74.,  138., 202., 14., 78.,  142., 206., 3.,  67.,  131., 195.,
      7.,  71.,  135., 199., 11., 75.,  139., 203., 15., 79.,  143., 207.,
      4.,  68.,  132., 196., 8.,  72.,  136., 200., 12., 76.,  140., 204.,
      16., 80.,  144., 208., 17., 81.,  145., 209., 21., 85.,  149., 213.,
      25., 89.,  153., 217., 29., 93.,  157., 221., 18., 82.,  146., 210.,
      22., 86.,  150., 214., 26., 90.,  154., 218., 30., 94.,  158., 222.,
      19., 83.,  147., 211., 23., 87.,  151., 215., 27., 91.,  155., 219.,
      31., 95.,  159., 223., 20., 84.,  148., 212., 24., 88.,  152., 216.,
      28., 92.,  156., 220., 32., 96.,  160., 224., 33., 97.,  161., 225.,
      37., 101., 165., 229., 41., 105., 169., 233., 45., 109., 173., 237.,
      34., 98.,  162., 226., 38., 102., 166., 230., 42., 106., 170., 234.,
      46., 110., 174., 238., 35., 99.,  163., 227., 39., 103., 167., 231.,
      43., 107., 171., 235., 47., 111., 175., 239., 36., 100., 164., 228.,
      40., 104., 168., 232., 44., 108., 172., 236., 48., 112., 176., 240.,
      49., 113., 177., 241., 53., 117., 181., 245., 57., 121., 185., 249.,
      61., 125., 189., 253., 50., 114., 178., 242., 54., 118., 182., 246.,
      58., 122., 186., 250., 62., 126., 190., 254., 51., 115., 179., 243.,
      55., 119., 183., 247., 59., 123., 187., 251., 63., 127., 191., 255.,
      52., 116., 180., 244., 56., 120., 184., 248., 60., 124., 188., 252.,
      64., 128., 192., 256.};
  const std::vector<int> sizes = {4, 4, 4, 4};
  const std::vector<int> perm = {1, 3, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x4_2x0x1x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   17.,  18.,  19.,  20.,  33.,  34.,  35.,  36.,
      49.,  50.,  51.,  52.,  65.,  66.,  67.,  68.,  81.,  82.,  83.,  84.,
      97.,  98.,  99.,  100., 113., 114., 115., 116., 129., 130., 131., 132.,
      145., 146., 147., 148., 161., 162., 163., 164., 177., 178., 179., 180.,
      193., 194., 195., 196., 209., 210., 211., 212., 225., 226., 227., 228.,
      241., 242., 243., 244., 5.,   6.,   7.,   8.,   21.,  22.,  23.,  24.,
      37.,  38.,  39.,  40.,  53.,  54.,  55.,  56.,  69.,  70.,  71.,  72.,
      85.,  86.,  87.,  88.,  101., 102., 103., 104., 117., 118., 119., 120.,
      133., 134., 135., 136., 149., 150., 151., 152., 165., 166., 167., 168.,
      181., 182., 183., 184., 197., 198., 199., 200., 213., 214., 215., 216.,
      229., 230., 231., 232., 245., 246., 247., 248., 9.,   10.,  11.,  12.,
      25.,  26.,  27.,  28.,  41.,  42.,  43.,  44.,  57.,  58.,  59.,  60.,
      73.,  74.,  75.,  76.,  89.,  90.,  91.,  92.,  105., 106., 107., 108.,
      121., 122., 123., 124., 137., 138., 139., 140., 153., 154., 155., 156.,
      169., 170., 171., 172., 185., 186., 187., 188., 201., 202., 203., 204.,
      217., 218., 219., 220., 233., 234., 235., 236., 249., 250., 251., 252.,
      13.,  14.,  15.,  16.,  29.,  30.,  31.,  32.,  45.,  46.,  47.,  48.,
      61.,  62.,  63.,  64.,  77.,  78.,  79.,  80.,  93.,  94.,  95.,  96.,
      109., 110., 111., 112., 125., 126., 127., 128., 141., 142., 143., 144.,
      157., 158., 159., 160., 173., 174., 175., 176., 189., 190., 191., 192.,
      205., 206., 207., 208., 221., 222., 223., 224., 237., 238., 239., 240.,
      253., 254., 255., 256.};
  const std::vector<int> sizes = {4, 4, 4, 4};
  const std::vector<int> perm = {2, 0, 1, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x4_2x0x3x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   17.,  33.,  49.,  2.,   18.,  34.,  50.,  3.,   19.,  35.,  51.,
      4.,   20.,  36.,  52.,  65.,  81.,  97.,  113., 66.,  82.,  98.,  114.,
      67.,  83.,  99.,  115., 68.,  84.,  100., 116., 129., 145., 161., 177.,
      130., 146., 162., 178., 131., 147., 163., 179., 132., 148., 164., 180.,
      193., 209., 225., 241., 194., 210., 226., 242., 195., 211., 227., 243.,
      196., 212., 228., 244., 5.,   21.,  37.,  53.,  6.,   22.,  38.,  54.,
      7.,   23.,  39.,  55.,  8.,   24.,  40.,  56.,  69.,  85.,  101., 117.,
      70.,  86.,  102., 118., 71.,  87.,  103., 119., 72.,  88.,  104., 120.,
      133., 149., 165., 181., 134., 150., 166., 182., 135., 151., 167., 183.,
      136., 152., 168., 184., 197., 213., 229., 245., 198., 214., 230., 246.,
      199., 215., 231., 247., 200., 216., 232., 248., 9.,   25.,  41.,  57.,
      10.,  26.,  42.,  58.,  11.,  27.,  43.,  59.,  12.,  28.,  44.,  60.,
      73.,  89.,  105., 121., 74.,  90.,  106., 122., 75.,  91.,  107., 123.,
      76.,  92.,  108., 124., 137., 153., 169., 185., 138., 154., 170., 186.,
      139., 155., 171., 187., 140., 156., 172., 188., 201., 217., 233., 249.,
      202., 218., 234., 250., 203., 219., 235., 251., 204., 220., 236., 252.,
      13.,  29.,  45.,  61.,  14.,  30.,  46.,  62.,  15.,  31.,  47.,  63.,
      16.,  32.,  48.,  64.,  77.,  93.,  109., 125., 78.,  94.,  110., 126.,
      79.,  95.,  111., 127., 80.,  96.,  112., 128., 141., 157., 173., 189.,
      142., 158., 174., 190., 143., 159., 175., 191., 144., 160., 176., 192.,
      205., 221., 237., 253., 206., 222., 238., 254., 207., 223., 239., 255.,
      208., 224., 240., 256.};
  const std::vector<int> sizes = {4, 4, 4, 4};
  const std::vector<int> perm = {2, 0, 3, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x4_2x1x0x3) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   2.,   3.,   4.,   65.,  66.,  67.,  68.,  129., 130., 131., 132.,
      193., 194., 195., 196., 17.,  18.,  19.,  20.,  81.,  82.,  83.,  84.,
      145., 146., 147., 148., 209., 210., 211., 212., 33.,  34.,  35.,  36.,
      97.,  98.,  99.,  100., 161., 162., 163., 164., 225., 226., 227., 228.,
      49.,  50.,  51.,  52.,  113., 114., 115., 116., 177., 178., 179., 180.,
      241., 242., 243., 244., 5.,   6.,   7.,   8.,   69.,  70.,  71.,  72.,
      133., 134., 135., 136., 197., 198., 199., 200., 21.,  22.,  23.,  24.,
      85.,  86.,  87.,  88.,  149., 150., 151., 152., 213., 214., 215., 216.,
      37.,  38.,  39.,  40.,  101., 102., 103., 104., 165., 166., 167., 168.,
      229., 230., 231., 232., 53.,  54.,  55.,  56.,  117., 118., 119., 120.,
      181., 182., 183., 184., 245., 246., 247., 248., 9.,   10.,  11.,  12.,
      73.,  74.,  75.,  76.,  137., 138., 139., 140., 201., 202., 203., 204.,
      25.,  26.,  27.,  28.,  89.,  90.,  91.,  92.,  153., 154., 155., 156.,
      217., 218., 219., 220., 41.,  42.,  43.,  44.,  105., 106., 107., 108.,
      169., 170., 171., 172., 233., 234., 235., 236., 57.,  58.,  59.,  60.,
      121., 122., 123., 124., 185., 186., 187., 188., 249., 250., 251., 252.,
      13.,  14.,  15.,  16.,  77.,  78.,  79.,  80.,  141., 142., 143., 144.,
      205., 206., 207., 208., 29.,  30.,  31.,  32.,  93.,  94.,  95.,  96.,
      157., 158., 159., 160., 221., 222., 223., 224., 45.,  46.,  47.,  48.,
      109., 110., 111., 112., 173., 174., 175., 176., 237., 238., 239., 240.,
      61.,  62.,  63.,  64.,  125., 126., 127., 128., 189., 190., 191., 192.,
      253., 254., 255., 256.};
  const std::vector<int> sizes = {4, 4, 4, 4};
  const std::vector<int> perm = {2, 1, 0, 3};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x4_2x1x3x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  65.,  129., 193., 2.,  66.,  130., 194., 3.,  67.,  131., 195.,
      4.,  68.,  132., 196., 17., 81.,  145., 209., 18., 82.,  146., 210.,
      19., 83.,  147., 211., 20., 84.,  148., 212., 33., 97.,  161., 225.,
      34., 98.,  162., 226., 35., 99.,  163., 227., 36., 100., 164., 228.,
      49., 113., 177., 241., 50., 114., 178., 242., 51., 115., 179., 243.,
      52., 116., 180., 244., 5.,  69.,  133., 197., 6.,  70.,  134., 198.,
      7.,  71.,  135., 199., 8.,  72.,  136., 200., 21., 85.,  149., 213.,
      22., 86.,  150., 214., 23., 87.,  151., 215., 24., 88.,  152., 216.,
      37., 101., 165., 229., 38., 102., 166., 230., 39., 103., 167., 231.,
      40., 104., 168., 232., 53., 117., 181., 245., 54., 118., 182., 246.,
      55., 119., 183., 247., 56., 120., 184., 248., 9.,  73.,  137., 201.,
      10., 74.,  138., 202., 11., 75.,  139., 203., 12., 76.,  140., 204.,
      25., 89.,  153., 217., 26., 90.,  154., 218., 27., 91.,  155., 219.,
      28., 92.,  156., 220., 41., 105., 169., 233., 42., 106., 170., 234.,
      43., 107., 171., 235., 44., 108., 172., 236., 57., 121., 185., 249.,
      58., 122., 186., 250., 59., 123., 187., 251., 60., 124., 188., 252.,
      13., 77.,  141., 205., 14., 78.,  142., 206., 15., 79.,  143., 207.,
      16., 80.,  144., 208., 29., 93.,  157., 221., 30., 94.,  158., 222.,
      31., 95.,  159., 223., 32., 96.,  160., 224., 45., 109., 173., 237.,
      46., 110., 174., 238., 47., 111., 175., 239., 48., 112., 176., 240.,
      61., 125., 189., 253., 62., 126., 190., 254., 63., 127., 191., 255.,
      64., 128., 192., 256.};
  const std::vector<int> sizes = {4, 4, 4, 4};
  const std::vector<int> perm = {2, 1, 3, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x4_2x3x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   17.,  33.,  49.,  65.,  81.,  97.,  113., 129., 145., 161., 177.,
      193., 209., 225., 241., 2.,   18.,  34.,  50.,  66.,  82.,  98.,  114.,
      130., 146., 162., 178., 194., 210., 226., 242., 3.,   19.,  35.,  51.,
      67.,  83.,  99.,  115., 131., 147., 163., 179., 195., 211., 227., 243.,
      4.,   20.,  36.,  52.,  68.,  84.,  100., 116., 132., 148., 164., 180.,
      196., 212., 228., 244., 5.,   21.,  37.,  53.,  69.,  85.,  101., 117.,
      133., 149., 165., 181., 197., 213., 229., 245., 6.,   22.,  38.,  54.,
      70.,  86.,  102., 118., 134., 150., 166., 182., 198., 214., 230., 246.,
      7.,   23.,  39.,  55.,  71.,  87.,  103., 119., 135., 151., 167., 183.,
      199., 215., 231., 247., 8.,   24.,  40.,  56.,  72.,  88.,  104., 120.,
      136., 152., 168., 184., 200., 216., 232., 248., 9.,   25.,  41.,  57.,
      73.,  89.,  105., 121., 137., 153., 169., 185., 201., 217., 233., 249.,
      10.,  26.,  42.,  58.,  74.,  90.,  106., 122., 138., 154., 170., 186.,
      202., 218., 234., 250., 11.,  27.,  43.,  59.,  75.,  91.,  107., 123.,
      139., 155., 171., 187., 203., 219., 235., 251., 12.,  28.,  44.,  60.,
      76.,  92.,  108., 124., 140., 156., 172., 188., 204., 220., 236., 252.,
      13.,  29.,  45.,  61.,  77.,  93.,  109., 125., 141., 157., 173., 189.,
      205., 221., 237., 253., 14.,  30.,  46.,  62.,  78.,  94.,  110., 126.,
      142., 158., 174., 190., 206., 222., 238., 254., 15.,  31.,  47.,  63.,
      79.,  95.,  111., 127., 143., 159., 175., 191., 207., 223., 239., 255.,
      16.,  32.,  48.,  64.,  80.,  96.,  112., 128., 144., 160., 176., 192.,
      208., 224., 240., 256.};
  const std::vector<int> sizes = {4, 4, 4, 4};
  const std::vector<int> perm = {2, 3, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x4_2x3x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  65.,  129., 193., 17., 81.,  145., 209., 33., 97.,  161., 225.,
      49., 113., 177., 241., 2.,  66.,  130., 194., 18., 82.,  146., 210.,
      34., 98.,  162., 226., 50., 114., 178., 242., 3.,  67.,  131., 195.,
      19., 83.,  147., 211., 35., 99.,  163., 227., 51., 115., 179., 243.,
      4.,  68.,  132., 196., 20., 84.,  148., 212., 36., 100., 164., 228.,
      52., 116., 180., 244., 5.,  69.,  133., 197., 21., 85.,  149., 213.,
      37., 101., 165., 229., 53., 117., 181., 245., 6.,  70.,  134., 198.,
      22., 86.,  150., 214., 38., 102., 166., 230., 54., 118., 182., 246.,
      7.,  71.,  135., 199., 23., 87.,  151., 215., 39., 103., 167., 231.,
      55., 119., 183., 247., 8.,  72.,  136., 200., 24., 88.,  152., 216.,
      40., 104., 168., 232., 56., 120., 184., 248., 9.,  73.,  137., 201.,
      25., 89.,  153., 217., 41., 105., 169., 233., 57., 121., 185., 249.,
      10., 74.,  138., 202., 26., 90.,  154., 218., 42., 106., 170., 234.,
      58., 122., 186., 250., 11., 75.,  139., 203., 27., 91.,  155., 219.,
      43., 107., 171., 235., 59., 123., 187., 251., 12., 76.,  140., 204.,
      28., 92.,  156., 220., 44., 108., 172., 236., 60., 124., 188., 252.,
      13., 77.,  141., 205., 29., 93.,  157., 221., 45., 109., 173., 237.,
      61., 125., 189., 253., 14., 78.,  142., 206., 30., 94.,  158., 222.,
      46., 110., 174., 238., 62., 126., 190., 254., 15., 79.,  143., 207.,
      31., 95.,  159., 223., 47., 111., 175., 239., 63., 127., 191., 255.,
      16., 80.,  144., 208., 32., 96.,  160., 224., 48., 112., 176., 240.,
      64., 128., 192., 256.};
  const std::vector<int> sizes = {4, 4, 4, 4};
  const std::vector<int> perm = {2, 3, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x4_3x0x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  17.,  21.,  25.,  29.,  33.,  37.,  41.,  45.,
      49.,  53.,  57.,  61.,  65.,  69.,  73.,  77.,  81.,  85.,  89.,  93.,
      97.,  101., 105., 109., 113., 117., 121., 125., 129., 133., 137., 141.,
      145., 149., 153., 157., 161., 165., 169., 173., 177., 181., 185., 189.,
      193., 197., 201., 205., 209., 213., 217., 221., 225., 229., 233., 237.,
      241., 245., 249., 253., 2.,   6.,   10.,  14.,  18.,  22.,  26.,  30.,
      34.,  38.,  42.,  46.,  50.,  54.,  58.,  62.,  66.,  70.,  74.,  78.,
      82.,  86.,  90.,  94.,  98.,  102., 106., 110., 114., 118., 122., 126.,
      130., 134., 138., 142., 146., 150., 154., 158., 162., 166., 170., 174.,
      178., 182., 186., 190., 194., 198., 202., 206., 210., 214., 218., 222.,
      226., 230., 234., 238., 242., 246., 250., 254., 3.,   7.,   11.,  15.,
      19.,  23.,  27.,  31.,  35.,  39.,  43.,  47.,  51.,  55.,  59.,  63.,
      67.,  71.,  75.,  79.,  83.,  87.,  91.,  95.,  99.,  103., 107., 111.,
      115., 119., 123., 127., 131., 135., 139., 143., 147., 151., 155., 159.,
      163., 167., 171., 175., 179., 183., 187., 191., 195., 199., 203., 207.,
      211., 215., 219., 223., 227., 231., 235., 239., 243., 247., 251., 255.,
      4.,   8.,   12.,  16.,  20.,  24.,  28.,  32.,  36.,  40.,  44.,  48.,
      52.,  56.,  60.,  64.,  68.,  72.,  76.,  80.,  84.,  88.,  92.,  96.,
      100., 104., 108., 112., 116., 120., 124., 128., 132., 136., 140., 144.,
      148., 152., 156., 160., 164., 168., 172., 176., 180., 184., 188., 192.,
      196., 200., 204., 208., 212., 216., 220., 224., 228., 232., 236., 240.,
      244., 248., 252., 256.};
  const std::vector<int> sizes = {4, 4, 4, 4};
  const std::vector<int> perm = {3, 0, 1, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x4_3x0x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   17.,  33.,  49.,  5.,   21.,  37.,  53.,  9.,   25.,  41.,  57.,
      13.,  29.,  45.,  61.,  65.,  81.,  97.,  113., 69.,  85.,  101., 117.,
      73.,  89.,  105., 121., 77.,  93.,  109., 125., 129., 145., 161., 177.,
      133., 149., 165., 181., 137., 153., 169., 185., 141., 157., 173., 189.,
      193., 209., 225., 241., 197., 213., 229., 245., 201., 217., 233., 249.,
      205., 221., 237., 253., 2.,   18.,  34.,  50.,  6.,   22.,  38.,  54.,
      10.,  26.,  42.,  58.,  14.,  30.,  46.,  62.,  66.,  82.,  98.,  114.,
      70.,  86.,  102., 118., 74.,  90.,  106., 122., 78.,  94.,  110., 126.,
      130., 146., 162., 178., 134., 150., 166., 182., 138., 154., 170., 186.,
      142., 158., 174., 190., 194., 210., 226., 242., 198., 214., 230., 246.,
      202., 218., 234., 250., 206., 222., 238., 254., 3.,   19.,  35.,  51.,
      7.,   23.,  39.,  55.,  11.,  27.,  43.,  59.,  15.,  31.,  47.,  63.,
      67.,  83.,  99.,  115., 71.,  87.,  103., 119., 75.,  91.,  107., 123.,
      79.,  95.,  111., 127., 131., 147., 163., 179., 135., 151., 167., 183.,
      139., 155., 171., 187., 143., 159., 175., 191., 195., 211., 227., 243.,
      199., 215., 231., 247., 203., 219., 235., 251., 207., 223., 239., 255.,
      4.,   20.,  36.,  52.,  8.,   24.,  40.,  56.,  12.,  28.,  44.,  60.,
      16.,  32.,  48.,  64.,  68.,  84.,  100., 116., 72.,  88.,  104., 120.,
      76.,  92.,  108., 124., 80.,  96.,  112., 128., 132., 148., 164., 180.,
      136., 152., 168., 184., 140., 156., 172., 188., 144., 160., 176., 192.,
      196., 212., 228., 244., 200., 216., 232., 248., 204., 220., 236., 252.,
      208., 224., 240., 256.};
  const std::vector<int> sizes = {4, 4, 4, 4};
  const std::vector<int> perm = {3, 0, 2, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x4_3x1x0x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   5.,   9.,   13.,  65.,  69.,  73.,  77.,  129., 133., 137., 141.,
      193., 197., 201., 205., 17.,  21.,  25.,  29.,  81.,  85.,  89.,  93.,
      145., 149., 153., 157., 209., 213., 217., 221., 33.,  37.,  41.,  45.,
      97.,  101., 105., 109., 161., 165., 169., 173., 225., 229., 233., 237.,
      49.,  53.,  57.,  61.,  113., 117., 121., 125., 177., 181., 185., 189.,
      241., 245., 249., 253., 2.,   6.,   10.,  14.,  66.,  70.,  74.,  78.,
      130., 134., 138., 142., 194., 198., 202., 206., 18.,  22.,  26.,  30.,
      82.,  86.,  90.,  94.,  146., 150., 154., 158., 210., 214., 218., 222.,
      34.,  38.,  42.,  46.,  98.,  102., 106., 110., 162., 166., 170., 174.,
      226., 230., 234., 238., 50.,  54.,  58.,  62.,  114., 118., 122., 126.,
      178., 182., 186., 190., 242., 246., 250., 254., 3.,   7.,   11.,  15.,
      67.,  71.,  75.,  79.,  131., 135., 139., 143., 195., 199., 203., 207.,
      19.,  23.,  27.,  31.,  83.,  87.,  91.,  95.,  147., 151., 155., 159.,
      211., 215., 219., 223., 35.,  39.,  43.,  47.,  99.,  103., 107., 111.,
      163., 167., 171., 175., 227., 231., 235., 239., 51.,  55.,  59.,  63.,
      115., 119., 123., 127., 179., 183., 187., 191., 243., 247., 251., 255.,
      4.,   8.,   12.,  16.,  68.,  72.,  76.,  80.,  132., 136., 140., 144.,
      196., 200., 204., 208., 20.,  24.,  28.,  32.,  84.,  88.,  92.,  96.,
      148., 152., 156., 160., 212., 216., 220., 224., 36.,  40.,  44.,  48.,
      100., 104., 108., 112., 164., 168., 172., 176., 228., 232., 236., 240.,
      52.,  56.,  60.,  64.,  116., 120., 124., 128., 180., 184., 188., 192.,
      244., 248., 252., 256.};
  const std::vector<int> sizes = {4, 4, 4, 4};
  const std::vector<int> perm = {3, 1, 0, 2};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x4_3x1x2x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  65.,  129., 193., 5.,  69.,  133., 197., 9.,  73.,  137., 201.,
      13., 77.,  141., 205., 17., 81.,  145., 209., 21., 85.,  149., 213.,
      25., 89.,  153., 217., 29., 93.,  157., 221., 33., 97.,  161., 225.,
      37., 101., 165., 229., 41., 105., 169., 233., 45., 109., 173., 237.,
      49., 113., 177., 241., 53., 117., 181., 245., 57., 121., 185., 249.,
      61., 125., 189., 253., 2.,  66.,  130., 194., 6.,  70.,  134., 198.,
      10., 74.,  138., 202., 14., 78.,  142., 206., 18., 82.,  146., 210.,
      22., 86.,  150., 214., 26., 90.,  154., 218., 30., 94.,  158., 222.,
      34., 98.,  162., 226., 38., 102., 166., 230., 42., 106., 170., 234.,
      46., 110., 174., 238., 50., 114., 178., 242., 54., 118., 182., 246.,
      58., 122., 186., 250., 62., 126., 190., 254., 3.,  67.,  131., 195.,
      7.,  71.,  135., 199., 11., 75.,  139., 203., 15., 79.,  143., 207.,
      19., 83.,  147., 211., 23., 87.,  151., 215., 27., 91.,  155., 219.,
      31., 95.,  159., 223., 35., 99.,  163., 227., 39., 103., 167., 231.,
      43., 107., 171., 235., 47., 111., 175., 239., 51., 115., 179., 243.,
      55., 119., 183., 247., 59., 123., 187., 251., 63., 127., 191., 255.,
      4.,  68.,  132., 196., 8.,  72.,  136., 200., 12., 76.,  140., 204.,
      16., 80.,  144., 208., 20., 84.,  148., 212., 24., 88.,  152., 216.,
      28., 92.,  156., 220., 32., 96.,  160., 224., 36., 100., 164., 228.,
      40., 104., 168., 232., 44., 108., 172., 236., 48., 112., 176., 240.,
      52., 116., 180., 244., 56., 120., 184., 248., 60., 124., 188., 252.,
      64., 128., 192., 256.};
  const std::vector<int> sizes = {4, 4, 4, 4};
  const std::vector<int> perm = {3, 1, 2, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x4_3x2x0x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   17.,  33.,  49.,  65.,  81.,  97.,  113., 129., 145., 161., 177.,
      193., 209., 225., 241., 5.,   21.,  37.,  53.,  69.,  85.,  101., 117.,
      133., 149., 165., 181., 197., 213., 229., 245., 9.,   25.,  41.,  57.,
      73.,  89.,  105., 121., 137., 153., 169., 185., 201., 217., 233., 249.,
      13.,  29.,  45.,  61.,  77.,  93.,  109., 125., 141., 157., 173., 189.,
      205., 221., 237., 253., 2.,   18.,  34.,  50.,  66.,  82.,  98.,  114.,
      130., 146., 162., 178., 194., 210., 226., 242., 6.,   22.,  38.,  54.,
      70.,  86.,  102., 118., 134., 150., 166., 182., 198., 214., 230., 246.,
      10.,  26.,  42.,  58.,  74.,  90.,  106., 122., 138., 154., 170., 186.,
      202., 218., 234., 250., 14.,  30.,  46.,  62.,  78.,  94.,  110., 126.,
      142., 158., 174., 190., 206., 222., 238., 254., 3.,   19.,  35.,  51.,
      67.,  83.,  99.,  115., 131., 147., 163., 179., 195., 211., 227., 243.,
      7.,   23.,  39.,  55.,  71.,  87.,  103., 119., 135., 151., 167., 183.,
      199., 215., 231., 247., 11.,  27.,  43.,  59.,  75.,  91.,  107., 123.,
      139., 155., 171., 187., 203., 219., 235., 251., 15.,  31.,  47.,  63.,
      79.,  95.,  111., 127., 143., 159., 175., 191., 207., 223., 239., 255.,
      4.,   20.,  36.,  52.,  68.,  84.,  100., 116., 132., 148., 164., 180.,
      196., 212., 228., 244., 8.,   24.,  40.,  56.,  72.,  88.,  104., 120.,
      136., 152., 168., 184., 200., 216., 232., 248., 12.,  28.,  44.,  60.,
      76.,  92.,  108., 124., 140., 156., 172., 188., 204., 220., 236., 252.,
      16.,  32.,  48.,  64.,  80.,  96.,  112., 128., 144., 160., 176., 192.,
      208., 224., 240., 256.};
  const std::vector<int> sizes = {4, 4, 4, 4};
  const std::vector<int> perm = {3, 2, 0, 1};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}
TYPED_TEST(Tranpose4D, T4D_4x4x4x4_3x2x1x0) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  65.,  129., 193., 17., 81.,  145., 209., 33., 97.,  161., 225.,
      49., 113., 177., 241., 5.,  69.,  133., 197., 21., 85.,  149., 213.,
      37., 101., 165., 229., 53., 117., 181., 245., 9.,  73.,  137., 201.,
      25., 89.,  153., 217., 41., 105., 169., 233., 57., 121., 185., 249.,
      13., 77.,  141., 205., 29., 93.,  157., 221., 45., 109., 173., 237.,
      61., 125., 189., 253., 2.,  66.,  130., 194., 18., 82.,  146., 210.,
      34., 98.,  162., 226., 50., 114., 178., 242., 6.,  70.,  134., 198.,
      22., 86.,  150., 214., 38., 102., 166., 230., 54., 118., 182., 246.,
      10., 74.,  138., 202., 26., 90.,  154., 218., 42., 106., 170., 234.,
      58., 122., 186., 250., 14., 78.,  142., 206., 30., 94.,  158., 222.,
      46., 110., 174., 238., 62., 126., 190., 254., 3.,  67.,  131., 195.,
      19., 83.,  147., 211., 35., 99.,  163., 227., 51., 115., 179., 243.,
      7.,  71.,  135., 199., 23., 87.,  151., 215., 39., 103., 167., 231.,
      55., 119., 183., 247., 11., 75.,  139., 203., 27., 91.,  155., 219.,
      43., 107., 171., 235., 59., 123., 187., 251., 15., 79.,  143., 207.,
      31., 95.,  159., 223., 47., 111., 175., 239., 63., 127., 191., 255.,
      4.,  68.,  132., 196., 20., 84.,  148., 212., 36., 100., 164., 228.,
      52., 116., 180., 244., 8.,  72.,  136., 200., 24., 88.,  152., 216.,
      40., 104., 168., 232., 56., 120., 184., 248., 12., 76.,  140., 204.,
      28., 92.,  156., 220., 44., 108., 172., 236., 60., 124., 188., 252.,
      16., 80.,  144., 208., 32., 96.,  160., 224., 48., 112., 176., 240.,
      64., 128., 192., 256.};
  const std::vector<int> sizes = {4, 4, 4, 4};
  const std::vector<int> perm = {3, 2, 1, 0};
  const DataType max_input_val = 2048.0;
  this->run(exp_out, sizes, perm, max_input_val, 0, 0);
}