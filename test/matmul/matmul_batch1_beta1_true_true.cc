/*
 * Copyright Codeplay Software Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use these files except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// DO NOT MODIFY BY HAND
// This file was automatically generated by generate_matmul_tests.py.
// Results calculated using Tensorflow v1.13.2.

#include <gtest/gtest.h>
#include <vector>

#include "test/matmul/fixture.h"
#include "test/types/kernel_data_types.h"
#include "test/types/to_gtest_types.h"


using DataTypeList = sycldnn::types::KernelDataTypes;
using GTestTypeList = sycldnn::types::ToGTestTypes<DataTypeList>::type;

template <typename DataType>
using MatmulBatch1Beta1TrueTrue = MatmulFixture<DataType, true, true>;
TYPED_TEST_SUITE(MatmulBatch1Beta1TrueTrue, GTestTypeList);
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M14xK14xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3886., 10271., 16656., 23041., 13554.,  6627., 13012., 19397., 25782.,  4007.,  9368., 15753., 22138., 19819.,  4005., 10586., 17167., 23748., 14073.,  6830., 13411., 19992., 26573.,  4226.,  9655., 16236., 22817., 20438.,  3484.,  9365., 15246., 21127., 14464.,  6009., 11890., 17771., 23652.,  3933.,  8534., 14415., 20296., 16961.,  3603.,  9680., 15757., 21834., 14983.,  6212., 12289., 18366., 24443.,  4152.,  8821., 14898., 20975., 17580.,  3722.,  9995., 16268., 22541., 15502.,  6415., 12688., 18961., 25170.,  4307.,  9044., 15317., 21590., 18135.,  3777., 10246., 16715., 23184., 15957.,  6554., 13023., 19492., 25961.,  4526.,  9331., 15800., 22269., 18754.,  3896., 10561., 17226., 23891., 16476.,  6757., 13422., 20087., 26752.,  4745.,  9618., 16283., 22948., 19373.,  4015., 10876., 17737., 24598., 16995.,  6960., 13821., 20682., 27543.,  4964.,  9905., 16766., 23627., 19992.,  3814.,  9975., 16136., 22297., 13610.,  6459., 12620., 18781., 24942.,  4991.,  9104., 15265., 21426., 16835.,  3933., 10290., 16583., 22940., 14065.,  6598., 12955., 19312., 25669.,  5146.,  9327., 15684., 22041., 17390.,  3092.,  8749., 14406., 20063., 14200.,  5521., 11178., 16835., 22492.,  4597.,  7950., 13607., 19264., 17753.,  3211.,  9064., 14917., 20770., 14719.,  5724., 11577., 17430., 23283.,  4816.,  8237., 14090., 19943., 18372.,  3330.,  9379., 15428., 21477., 15238.,  5927., 11976., 18025., 24074.,  5035.,  8524., 14573., 20622., 18991.,  3449.,  9694., 15939., 22184., 15757.,  6130., 12375., 18620., 24865.,  5254.,  8747., 14992., 21237., 19546.};
  const int batches = 1;
  const int m = 14;
  const int k = 14;
  const int n = 14;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M14xK14xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3886., 10271., 16656., 23041., 13554.,  6627., 13012., 19397., 25782.,  4007.,  9368., 15753., 22138., 19819.,  5724.,  4006., 10587., 17168., 23749., 14074.,  6831., 13412., 19993., 26574.,  4227.,  9656., 16237., 22818., 20439.,  5900.,  3486.,  9367., 15248., 21129., 14466.,  6011., 11892., 17773., 23654.,  3935.,  8536., 14417., 20298., 16963.,  5180.,  3606.,  9683., 15760., 21837., 14986.,  6215., 12292., 18369., 24446.,  4155.,  8824., 14901., 20978., 17583.,  5356.,  3726.,  9999., 16272., 22545., 15442.,  6355., 12628., 18901., 25174.,  4311.,  9048., 15321., 21594., 18139.,  5468.,  3782., 10251., 16720., 23189., 15962.,  6559., 13028., 19497., 25966.,  4531.,  9336., 15805., 22274., 18759.,  5644.,  3902., 10567., 17232., 23897., 16482.,  6763., 13428., 20093., 26758.,  4751.,  9624., 16289., 22954., 19379.,  5820.,  4022., 10883., 17744., 24605., 17002.,  6967., 13828., 20689., 27550.,  4971.,  9912., 16773., 23634., 19999.,  5996.,  3822.,  9983., 16144., 22305., 13618.,  6467., 12628., 18789., 24886.,  4935.,  9048., 15209., 21370., 16779.,  5532.,  3878., 10235., 16592., 22949., 14074.,  6607., 12964., 19321., 25678.,  5155.,  9336., 15693., 22050., 17399.,  5708.,  3102.,  8759., 14416., 20073., 14210.,  5531., 11188., 16845., 22502.,  4607.,  7960., 13617., 19274., 17763.,  4732.,  3222.,  9075., 14928., 20781., 14730.,  5735., 11588., 17441., 23294.,  4827.,  8248., 14101., 19954., 18383.,  4908.,  3342.,  9391., 15440., 21489., 15250.,  5939., 11988., 18037., 24086.,  5047.,  8536., 14585., 20570., 18939.,  5020.,  3398.,  9643., 15888., 22133., 15706.,  6079., 12324., 18569., 24814.,  5203.,  8760., 15005., 21250., 19559.,  5196.};
  const int batches = 1;
  const int m = 14;
  const int k = 14;
  const int n = 15;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M14xK14xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3886., 10271., 16656., 23041., 13554.,  6627., 13012., 19397., 25782.,  4007.,  9368., 15753., 22138., 19819.,  5724., 12109.,  4007., 10588., 17169., 23750., 14075.,  6832., 13413., 19994., 26575.,  4228.,  9657., 16238., 22819., 20440.,  5901., 12482.,  3488.,  9369., 15250., 21131., 14468.,  6013., 11894., 17775., 23656.,  3937.,  8538., 14419., 20300., 16965.,  5182., 11063.,  3609.,  9686., 15763., 21840., 14989.,  6218., 12295., 18372., 24449.,  4158.,  8827., 14904., 20981., 17586.,  5359., 11436.,  3666.,  9939., 16212., 22485., 15446.,  6359., 12632., 18905., 25178.,  4315.,  9052., 15325., 21598., 18143.,  5472., 11745.,  3787., 10256., 16725., 23194., 15967.,  6564., 13033., 19502., 25971.,  4536.,  9341., 15810., 22279., 18764.,  5649., 12118.,  3908., 10573., 17238., 23903., 16488.,  6769., 13434., 20099., 26764.,  4757.,  9630., 16295., 22960., 19385.,  5826., 12491.,  4029., 10890., 17751., 24612., 17009.,  6974., 13835., 20696., 27557.,  4978.,  9919., 16780., 23641., 20006.,  6003., 12864.,  3766.,  9927., 16088., 22249., 13562.,  6411., 12572., 18733., 24894.,  4943.,  9056., 15217., 21378., 16787.,  5540., 11701.,  3887., 10244., 16601., 22958., 14083.,  6616., 12973., 19330., 25687.,  5164.,  9345., 15702., 22059., 17408.,  5717., 12074.,  3112.,  8769., 14426., 20083., 14220.,  5541., 11198., 16855., 22512.,  4617.,  7970., 13627., 19284., 17773.,  4742., 10399.,  3233.,  9086., 14939., 20792., 14741.,  5746., 11599., 17452., 23305.,  4838.,  8259., 14112., 19965., 18394.,  4919., 10772.,  3290.,  9339., 15388., 21437., 15198.,  5887., 11936., 17985., 24034.,  4995.,  8484., 14533., 20582., 18951.,  5032., 11081.,  3411.,  9656., 15901., 22146., 15719.,  6092., 12337., 18582., 24827.,  5216.,  8773., 15018., 21263., 19572.,  5209., 11454.};
  const int batches = 1;
  const int m = 14;
  const int k = 14;
  const int n = 16;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M14xK15xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3961., 10877., 17793., 24709.,  7753.,  9037., 15953., 22869., 13593.,  7197., 14113., 21029., 21481.,  5357.,  4095., 11236., 18377., 25518.,  8083.,  9336., 16477., 23618., 14119.,  7436., 14577., 21718., 22203.,  5536.,  3589.,  9995., 16401., 22807.,  8029.,  8291., 14697., 21103., 14517.,  6587., 12993., 19399., 18957.,  4883.,  3723., 10354., 16985., 23616.,  8359.,  8590., 15221., 21852., 15043.,  6826., 13457., 20088., 19679.,  5062.,  3857., 10713., 17569., 24425.,  8689.,  8889., 15745., 22601., 15505.,  7001., 13857., 20713., 20337.,  5177.,  3927., 11008., 18089., 25170.,  8955.,  9124., 16205., 23286., 16031.,  7240., 14321., 21402., 21059.,  5356.,  4061., 11367., 18673., 25979.,  9285.,  9423., 16729., 24035., 16557.,  7479., 14785., 22091., 21781.,  5535.,  4195., 11726., 19257., 26788.,  9615.,  9722., 17253., 24784., 17083.,  7718., 15249., 22780., 22503.,  5714.,  4009., 10805., 17601., 24397.,  9881.,  8997., 15793., 22589., 13705.,  7189., 13985., 20781., 19577.,  5381.,  4143., 11164., 18121., 25142., 10147.,  9232., 16253., 23274., 14167.,  7364., 14385., 21406., 20235.,  5496.,  3317.,  9603., 15889., 22175.,  9837.,  7931., 14217., 20503., 14309.,  6259., 12545., 18831., 20829.,  4587.,  3451.,  9962., 16473., 22984., 10167.,  8230., 14741., 21252., 14835.,  6498., 13009., 19520., 21551.,  4766.,  3585., 10321., 17057., 23793., 10497.,  8529., 15265., 22001., 15361.,  6737., 13473., 20209., 22273.,  4945.,  3719., 10680., 17641., 24602., 10827.,  8828., 15789., 22750., 15887.,  6976., 13873., 20834., 22931.,  5060.};
  const int batches = 1;
  const int m = 14;
  const int k = 15;
  const int n = 14;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M14xK15xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3961., 10877., 17793., 24709.,  7753.,  9037., 15953., 22869., 13593.,  7197., 14113., 21029., 21481.,  5357., 12273.,  4096., 11237., 18378., 25519.,  8084.,  9337., 16478., 23619., 14120.,  7437., 14578., 21719., 22204.,  5537., 12678.,  3591.,  9997., 16403., 22809.,  8031.,  8293., 14699., 21105., 14519.,  6589., 12995., 19401., 18959.,  4885., 11291.,  3726., 10357., 16988., 23619.,  8362.,  8593., 15224., 21855., 15046.,  6829., 13460., 20091., 19682.,  5065., 11696.,  3861., 10717., 17573., 24429.,  8629.,  8829., 15685., 22541., 15509.,  7005., 13861., 20717., 20341.,  5181., 12037.,  3932., 11013., 18094., 25175.,  8960.,  9129., 16210., 23291., 16036.,  7245., 14326., 21407., 21064.,  5361., 12442.,  4067., 11373., 18679., 25985.,  9291.,  9429., 16735., 24041., 16563.,  7485., 14791., 22097., 21787.,  5541., 12847.,  4202., 11733., 19264., 26795.,  9622.,  9729., 17260., 24791., 17090.,  7725., 15256., 22787., 22510.,  5721., 13252.,  4017., 10813., 17609., 24405.,  9889.,  9005., 15801., 22597., 13649.,  7133., 13929., 20725., 19521.,  5325., 12121.,  4088., 11109., 18130., 25151., 10156.,  9241., 16262., 23283., 14176.,  7373., 14394., 21415., 20244.,  5505., 12526.,  3327.,  9613., 15899., 22185.,  9847.,  7941., 14227., 20513., 14319.,  6269., 12555., 18841., 20839.,  4597., 10883.,  3462.,  9973., 16484., 22995., 10178.,  8241., 14752., 21263., 14846.,  6509., 13020., 19531., 21562.,  4777., 11288.,  3597., 10333., 17069., 23805., 10509.,  8541., 15277., 22013., 15373.,  6749., 13485., 20221., 22221.,  4893., 11629.,  3668., 10629., 17590., 24551., 10776.,  8777., 15738., 22699., 15836.,  6925., 13886., 20847., 22944.,  5073., 12034.};
  const int batches = 1;
  const int m = 14;
  const int k = 15;
  const int n = 15;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M14xK15xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3961., 10877., 17793., 24709.,  7753.,  9037., 15953., 22869., 13593.,  7197., 14113., 21029., 21481.,  5357., 12273., 19189.,  4097., 11238., 18379., 25520.,  8085.,  9338., 16479., 23620., 14121.,  7438., 14579., 21720., 22205.,  5538., 12679., 19820.,  3593.,  9999., 16405., 22811.,  8033.,  8295., 14701., 21107., 14521.,  6591., 12997., 19403., 18961.,  4887., 11293., 17699.,  3729., 10360., 16991., 23622.,  8365.,  8596., 15227., 21858., 15049.,  6832., 13463., 20094., 19685.,  5068., 11699., 18330.,  3801., 10657., 17513., 24369.,  8633.,  8833., 15689., 22545., 15513.,  7009., 13865., 20721., 20345.,  5185., 12041., 18897.,  3937., 11018., 18099., 25180.,  8965.,  9134., 16215., 23296., 16041.,  7250., 14331., 21412., 21069.,  5366., 12447., 19528.,  4073., 11379., 18685., 25991.,  9297.,  9435., 16741., 24047., 16569.,  7491., 14797., 22103., 21793.,  5547., 12853., 20159.,  4209., 11740., 19271., 26802.,  9629.,  9736., 17267., 24798., 17097.,  7732., 15263., 22794., 22517.,  5728., 13259., 20790.,  3961., 10757., 17553., 24349.,  9833.,  8949., 15745., 22541., 13657.,  7141., 13937., 20733., 19529.,  5333., 12129., 18925.,  4097., 11118., 18139., 25160., 10165.,  9250., 16271., 23292., 14185.,  7382., 14403., 21424., 20253.,  5514., 12535., 19556.,  3337.,  9623., 15909., 22195.,  9857.,  7951., 14237., 20523., 14329.,  6279., 12565., 18851., 20849.,  4607., 10893., 17179.,  3473.,  9984., 16495., 23006., 10189.,  8252., 14763., 21274., 14857.,  6520., 13031., 19542., 21573.,  4788., 11299., 17810.,  3545., 10281., 17017., 23753., 10457.,  8489., 15225., 21961., 15321.,  6697., 13433., 20169., 22233.,  4905., 11641., 18377.,  3681., 10642., 17603., 24564., 10789.,  8790., 15751., 22712., 15849.,  6938., 13899., 20860., 22957.,  5086., 12047., 19008.};
  const int batches = 1;
  const int m = 14;
  const int k = 15;
  const int n = 16;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M14xK16xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4265., 11946., 19627., 27308.,  4269., 11950., 19631., 27312.,  4273., 11954., 19635., 27316.,  4277., 11958.,  4415., 12352., 20289., 28226.,  4419., 12356., 20293., 28230.,  4423., 12360., 20297., 28234.,  4427., 12364.,  3925., 11094., 18263., 25432.,  3929., 11098., 18267., 25436.,  3933., 11102., 18271., 25440.,  3937., 11106.,  4075., 11500., 18925., 26350.,  4079., 11504., 18929., 26354.,  4083., 11508., 18933., 26358.,  4087., 11512.,  4225., 11906., 19587., 27268.,  4229., 11910., 19591., 27272.,  4169., 11850., 19531., 27212.,  4173., 11854.,  4311., 12248., 20185., 28122.,  4315., 12252., 20189., 28126.,  4319., 12256., 20193., 28130.,  4323., 12260.,  4461., 12654., 20847., 29040.,  4465., 12658., 20851., 29044.,  4469., 12662., 20855., 29048.,  4473., 12666.,  4611., 13060., 21509., 29958.,  4615., 13064., 21513., 29962.,  4619., 13068., 21517., 29966.,  4623., 13072.,  4441., 12122., 19803., 27484.,  4445., 12126., 19807., 27488.,  4449., 12130., 19811., 27492.,  4453., 12134.,  4591., 12528., 20401., 28338.,  4531., 12468., 20405., 28342.,  4535., 12472., 20409., 28346.,  4539., 12476.,  3781., 10950., 18119., 25288.,  3785., 10954., 18123., 25292.,  3789., 10958., 18127., 25296.,  3793., 10962.,  3931., 11356., 18781., 26206.,  3935., 11360., 18785., 26210.,  3939., 11364., 18789., 26214.,  3943., 11368.,  4081., 11762., 19443., 27124.,  4085., 11766., 19447., 27128.,  4089., 11770., 19451., 27132.,  4093., 11774.,  4231., 12168., 20105., 28042.,  4235., 12172., 20109., 28046.,  4239., 12176., 20049., 27986.,  4179., 12116.};
  const int batches = 1;
  const int m = 14;
  const int k = 16;
  const int n = 14;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M14xK16xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4265., 11946., 19627., 27308.,  4269., 11950., 19631., 27312.,  4273., 11954., 19635., 27316.,  4277., 11958., 19639.,  4416., 12353., 20290., 28227.,  4420., 12357., 20294., 28231.,  4424., 12361., 20298., 28235.,  4428., 12365., 20302.,  3927., 11096., 18265., 25434.,  3931., 11100., 18269., 25438.,  3935., 11104., 18273., 25442.,  3939., 11108., 18277.,  4078., 11503., 18928., 26353.,  4082., 11507., 18932., 26357.,  4086., 11511., 18936., 26361.,  4090., 11515., 18940.,  4229., 11910., 19591., 27272.,  4169., 11850., 19531., 27212.,  4173., 11854., 19535., 27216.,  4177., 11858., 19539.,  4316., 12253., 20190., 28127.,  4320., 12257., 20194., 28131.,  4324., 12261., 20198., 28135.,  4328., 12265., 20202.,  4467., 12660., 20853., 29046.,  4471., 12664., 20857., 29050.,  4475., 12668., 20861., 29054.,  4479., 12672., 20865.,  4618., 13067., 21516., 29965.,  4622., 13071., 21520., 29969.,  4626., 13075., 21524., 29973.,  4630., 13079., 21528.,  4449., 12130., 19811., 27492.,  4453., 12134., 19815., 27496.,  4393., 12074., 19755., 27436.,  4397., 12078., 19759.,  4536., 12473., 20410., 28347.,  4540., 12477., 20414., 28351.,  4544., 12481., 20418., 28355.,  4548., 12485., 20422.,  3791., 10960., 18129., 25298.,  3795., 10964., 18133., 25302.,  3799., 10968., 18137., 25306.,  3803., 10972., 18141.,  3942., 11367., 18792., 26217.,  3946., 11371., 18796., 26221.,  3950., 11375., 18800., 26225.,  3954., 11379., 18804.,  4093., 11774., 19455., 27136.,  4097., 11778., 19459., 27140.,  4101., 11782., 19463., 27144.,  4041., 11722., 19403.,  4180., 12117., 20054., 27991.,  4184., 12121., 20058., 27995.,  4188., 12125., 20062., 27999.,  4192., 12129., 20066.};
  const int batches = 1;
  const int m = 14;
  const int k = 16;
  const int n = 15;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M14xK16xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4265., 11946., 19627., 27308.,  4269., 11950., 19631., 27312.,  4273., 11954., 19635., 27316.,  4277., 11958., 19639., 27320.,  4417., 12354., 20291., 28228.,  4421., 12358., 20295., 28232.,  4425., 12362., 20299., 28236.,  4429., 12366., 20303., 28240.,  3929., 11098., 18267., 25436.,  3933., 11102., 18271., 25440.,  3937., 11106., 18275., 25444.,  3941., 11110., 18279., 25448.,  4081., 11506., 18931., 26356.,  4085., 11510., 18935., 26360.,  4089., 11514., 18939., 26364.,  4093., 11518., 18943., 26368.,  4169., 11850., 19531., 27212.,  4173., 11854., 19535., 27216.,  4177., 11858., 19539., 27220.,  4181., 11862., 19543., 27224.,  4321., 12258., 20195., 28132.,  4325., 12262., 20199., 28136.,  4329., 12266., 20203., 28140.,  4333., 12270., 20207., 28144.,  4473., 12666., 20859., 29052.,  4477., 12670., 20863., 29056.,  4481., 12674., 20867., 29060.,  4485., 12678., 20871., 29064.,  4625., 13074., 21523., 29972.,  4629., 13078., 21527., 29976.,  4633., 13082., 21531., 29980.,  4637., 13086., 21535., 29984.,  4393., 12074., 19755., 27436.,  4397., 12078., 19759., 27440.,  4401., 12082., 19763., 27444.,  4405., 12086., 19767., 27448.,  4545., 12482., 20419., 28356.,  4549., 12486., 20423., 28360.,  4553., 12490., 20427., 28364.,  4557., 12494., 20431., 28368.,  3801., 10970., 18139., 25308.,  3805., 10974., 18143., 25312.,  3809., 10978., 18147., 25316.,  3813., 10982., 18151., 25320.,  3953., 11378., 18803., 26228.,  3957., 11382., 18807., 26232.,  3961., 11386., 18811., 26236.,  3965., 11390., 18815., 26240.,  4041., 11722., 19403., 27084.,  4045., 11726., 19407., 27088.,  4049., 11730., 19411., 27092.,  4053., 11734., 19415., 27096.,  4193., 12130., 20067., 28004.,  4197., 12134., 20071., 28008.,  4201., 12138., 20075., 28012.,  4205., 12142., 20079., 28016.};
  const int batches = 1;
  const int m = 14;
  const int k = 16;
  const int n = 16;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M15xK14xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3260.,  9127., 14994., 20861., 15016.,  5779., 11646., 17513., 23380.,  3519.,  8298., 14165., 20032., 18347.,  3379.,  9442., 15505., 21568., 15535.,  5982., 12045., 18108., 24171.,  3738.,  8585., 14648., 20711., 18966.,  3498.,  9757., 16016., 22275., 16054.,  6185., 12444., 18703., 24962.,  3957.,  8872., 15131., 21390., 19585.,  3617., 10072., 16527., 22982., 16573.,  6388., 12843., 19298., 25753.,  4176.,  9159., 15614., 22069., 20204.,  3416.,  9171., 14926., 20681., 13188.,  5887., 11642., 17397., 23088.,  4139.,  8294., 14049., 19804., 16983.,  3471.,  9422., 15373., 21324., 13643.,  6026., 11977., 17928., 23879.,  4358.,  8581., 14532., 20483., 17602.,  3590.,  9737., 15884., 22031., 14162.,  6229., 12376., 18523., 24670.,  4577.,  8868., 15015., 21162., 18221.,  3709., 10052., 16395., 22738., 14681.,  6432., 12775., 19118., 25461.,  4796.,  9155., 15498., 21841., 18840.,  3252.,  8895., 14538., 20181., 15136.,  5675., 11318., 16961., 22604.,  4567.,  8098., 13741., 19384., 15427.,  3371.,  9210., 14985., 20824., 15591.,  5814., 11653., 17492., 23331.,  4722.,  8321., 14160., 19999., 15982.,  3426.,  9461., 15496., 21531., 16110.,  6017., 12052., 18087., 24122.,  4941.,  8608., 14643., 20678., 16601.,  3545.,  9776., 16007., 22238., 16629.,  6220., 12451., 18682., 24913.,  5160.,  8895., 15126., 21357., 17220.,  2832.,  8363., 13894., 19425., 16828.,  5207., 10738., 16269., 21800.,  4675.,  7582., 13113., 18644., 17647.,  2951.,  8678., 14405., 20132., 17347.,  5410., 11137., 16864., 22591.,  4894.,  7805., 13532., 19259., 18202.,  3006.,  8929., 14852., 20775., 17802.,  5549., 11472., 17395., 23318.,  5049.,  8092., 14015., 19938., 18821.};
  const int batches = 1;
  const int m = 15;
  const int k = 14;
  const int n = 14;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M15xK14xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3260.,  9127., 14994., 20861., 15016.,  5779., 11646., 17513., 23380.,  3519.,  8298., 14165., 20032., 18347.,  4950.,  3380.,  9443., 15506., 21569., 15536.,  5983., 12046., 18109., 24172.,  3739.,  8586., 14649., 20712., 18967.,  5126.,  3500.,  9759., 16018., 22277., 16056.,  6187., 12446., 18705., 24964.,  3959.,  8874., 15133., 21392., 19587.,  5302.,  3620., 10075., 16530., 22985., 16576.,  6391., 12846., 19301., 25756.,  4179.,  9162., 15617., 22072., 20207.,  5478.,  3420.,  9175., 14930., 20685., 13128.,  5827., 11582., 17337., 23092.,  4143.,  8298., 14053., 19808., 16987.,  5014.,  3476.,  9427., 15378., 21329., 13648.,  6031., 11982., 17933., 23884.,  4363.,  8586., 14537., 20488., 17607.,  5190.,  3596.,  9743., 15890., 22037., 14168.,  6235., 12382., 18529., 24676.,  4583.,  8874., 15021., 21168., 18227.,  5366.,  3716., 10059., 16402., 22745., 14688.,  6439., 12782., 19125., 25468.,  4803.,  9162., 15505., 21848., 18847.,  5542.,  3260.,  8903., 14546., 20189., 15144.,  5683., 11326., 16969., 22548.,  4511.,  8042., 13685., 19328., 15371.,  4822.,  3316.,  9155., 14994., 20833., 15600.,  5823., 11662., 17501., 23340.,  4731.,  8330., 14169., 20008., 15991.,  4998.,  3436.,  9471., 15506., 21541., 16120.,  6027., 12062., 18097., 24132.,  4951.,  8618., 14653., 20688., 16611.,  5174.,  3556.,  9787., 16018., 22249., 16640.,  6231., 12462., 18693., 24924.,  5171.,  8906., 15137., 21368., 17231.,  5350.,  2844.,  8375., 13906., 19437., 16840.,  5219., 10750., 16281., 21812.,  4687.,  7594., 13125., 18592., 17595.,  4374.,  2900.,  8627., 14354., 20081., 17296.,  5359., 11086., 16813., 22540.,  4843.,  7818., 13545., 19272., 18215.,  4550.,  3020.,  8943., 14866., 20789., 17816.,  5563., 11486., 17409., 23332.,  5063.,  8106., 14029., 19952., 18835.,  4726.};
  const int batches = 1;
  const int m = 15;
  const int k = 14;
  const int n = 15;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M15xK14xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3260.,  9127., 14994., 20861., 15016.,  5779., 11646., 17513., 23380.,  3519.,  8298., 14165., 20032., 18347.,  4950., 10817.,  3381.,  9444., 15507., 21570., 15537.,  5984., 12047., 18110., 24173.,  3740.,  8587., 14650., 20713., 18968.,  5127., 11190.,  3502.,  9761., 16020., 22279., 16058.,  6189., 12448., 18707., 24966.,  3961.,  8876., 15135., 21394., 19589.,  5304., 11563.,  3623., 10078., 16533., 22988., 16579.,  6394., 12849., 19304., 25759.,  4182.,  9165., 15620., 22075., 20210.,  5481., 11936.,  3360.,  9115., 14870., 20625., 13132.,  5831., 11586., 17341., 23096.,  4147.,  8302., 14057., 19812., 16991.,  5018., 10773.,  3481.,  9432., 15383., 21334., 13653.,  6036., 11987., 17938., 23889.,  4368.,  8591., 14542., 20493., 17612.,  5195., 11146.,  3602.,  9749., 15896., 22043., 14174.,  6241., 12388., 18535., 24682.,  4589.,  8880., 15027., 21174., 18233.,  5372., 11519.,  3723., 10066., 16409., 22752., 14695.,  6446., 12789., 19132., 25475.,  4810.,  9169., 15512., 21855., 18854.,  5549., 11892.,  3204.,  8847., 14490., 20133., 15088.,  5627., 11270., 16913., 22556.,  4519.,  8050., 13693., 19336., 15379.,  4830., 10473.,  3325.,  9164., 15003., 20842., 15609.,  5832., 11671., 17510., 23349.,  4740.,  8339., 14178., 20017., 16000.,  5007., 10846.,  3446.,  9481., 15516., 21551., 16130.,  6037., 12072., 18107., 24142.,  4961.,  8628., 14663., 20698., 16621.,  5184., 11219.,  3567.,  9798., 16029., 22260., 16651.,  6242., 12473., 18704., 24935.,  5182.,  8917., 15148., 21379., 17242.,  5361., 11592.,  2792.,  8323., 13854., 19385., 16788.,  5167., 10698., 16229., 21760.,  4635.,  7542., 13073., 18604., 17607.,  4386.,  9917.,  2913.,  8640., 14367., 20094., 17309.,  5372., 11099., 16826., 22553.,  4856.,  7831., 13558., 19285., 18228.,  4563., 10290.,  3034.,  8957., 14880., 20803., 17830.,  5577., 11500., 17423., 23346.,  5077.,  8120., 14043., 19966., 18849.,  4740., 10663.};
  const int batches = 1;
  const int m = 15;
  const int k = 14;
  const int n = 16;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M15xK15xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3545., 10116., 16687., 23258.,  7813.,  8368., 14939., 21510., 15153.,  6620., 13191., 19762., 21469.,  4872.,  3679., 10475., 17271., 24067.,  8143.,  8667., 15463., 22259., 15679.,  6859., 13655., 20451., 22191.,  5051.,  3813., 10834., 17855., 24876.,  8473.,  8966., 15987., 23008., 16205.,  7098., 14119., 21140., 22913.,  5230.,  3947., 11193., 18439., 25685.,  8803.,  9265., 16511., 23757., 16731.,  7337., 14583., 21829., 23635.,  5409.,  3761., 10272., 16783., 23294.,  9069.,  8540., 15051., 21562., 13289.,  6744., 13255., 19766., 20645.,  5012.,  3831., 10567., 17303., 24039.,  9335.,  8775., 15511., 22247., 13815.,  6983., 13719., 20455., 21367.,  5191.,  3965., 10926., 17887., 24848.,  9665.,  9074., 16035., 22996., 14341.,  7222., 14183., 21144., 22089.,  5370.,  4099., 11285., 18471., 25657.,  9995.,  9373., 16559., 23745., 14867.,  7461., 14647., 21833., 22811.,  5549.,  3657., 10108., 16559., 23010., 10005.,  8392., 14843., 21294., 15329.,  6676., 13127., 19578., 19629.,  4960.,  3791., 10467., 17079., 23755., 10271.,  8627., 15303., 21979., 15791.,  6851., 13527., 20203., 20287.,  5075.,  3861., 10762., 17663., 24564., 10601.,  8926., 15827., 22728., 16317.,  7090., 13991., 20892., 21009.,  5254.,  3995., 11121., 18247., 25373., 10931.,  9225., 16351., 23477., 16843.,  7329., 14455., 21581., 21731.,  5433.,  3297.,  9688., 16079., 22470., 10685.,  7988., 14379., 20770., 17049.,  6288., 12679., 19070., 22389.,  4588.,  3431., 10047., 16663., 23279., 11015.,  8287., 14903., 21519., 17575.,  6527., 13079., 19695., 23047.,  4703.,  3501., 10342., 17183., 24024., 11281.,  8522., 15363., 22204., 18037.,  6702., 13543., 20384., 23769.,  4882.};
  const int batches = 1;
  const int m = 15;
  const int k = 15;
  const int n = 14;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M15xK15xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3545., 10116., 16687., 23258.,  7813.,  8368., 14939., 21510., 15153.,  6620., 13191., 19762., 21469.,  4872., 11443.,  3680., 10476., 17272., 24068.,  8144.,  8668., 15464., 22260., 15680.,  6860., 13656., 20452., 22192.,  5052., 11848.,  3815., 10836., 17857., 24878.,  8475.,  8968., 15989., 23010., 16207.,  7100., 14121., 21142., 22915.,  5232., 12253.,  3950., 11196., 18442., 25688.,  8806.,  9268., 16514., 23760., 16734.,  7340., 14586., 21832., 23638.,  5412., 12658.,  3765., 10276., 16787., 23298.,  9009.,  8480., 14991., 21502., 13293.,  6748., 13259., 19770., 20649.,  5016., 11527.,  3836., 10572., 17308., 24044.,  9340.,  8780., 15516., 22252., 13820.,  6988., 13724., 20460., 21372.,  5196., 11932.,  3971., 10932., 17893., 24854.,  9671.,  9080., 16041., 23002., 14347.,  7228., 14189., 21150., 22095.,  5376., 12337.,  4106., 11292., 18478., 25664., 10002.,  9380., 16566., 23752., 14874.,  7468., 14654., 21840., 22818.,  5556., 12742.,  3665., 10116., 16567., 23018., 10013.,  8400., 14851., 21302., 15273.,  6620., 13071., 19522., 19573.,  4904., 11355.,  3736., 10412., 17088., 23764., 10280.,  8636., 15312., 21988., 15800.,  6860., 13536., 20212., 20296.,  5084., 11760.,  3871., 10772., 17673., 24574., 10611.,  8936., 15837., 22738., 16327.,  7100., 14001., 20902., 21019.,  5264., 12165.,  4006., 11132., 18258., 25384., 10942.,  9236., 16362., 23488., 16854.,  7340., 14466., 21592., 21742.,  5444., 12570.,  3309.,  9700., 16091., 22482., 10697.,  8000., 14391., 20782., 17061.,  6300., 12691., 19082., 22337.,  4536., 10927.,  3380.,  9996., 16612., 23228., 10964.,  8236., 14852., 21468., 17524.,  6476., 13092., 19708., 23060.,  4716., 11332.,  3515., 10356., 17197., 24038., 11295.,  8536., 15377., 22218., 18051.,  6716., 13557., 20398., 23783.,  4896., 11737.};
  const int batches = 1;
  const int m = 15;
  const int k = 15;
  const int n = 15;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M15xK15xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3545., 10116., 16687., 23258.,  7813.,  8368., 14939., 21510., 15153.,  6620., 13191., 19762., 21469.,  4872., 11443., 18014.,  3681., 10477., 17273., 24069.,  8145.,  8669., 15465., 22261., 15681.,  6861., 13657., 20453., 22193.,  5053., 11849., 18645.,  3817., 10838., 17859., 24880.,  8477.,  8970., 15991., 23012., 16209.,  7102., 14123., 21144., 22917.,  5234., 12255., 19276.,  3953., 11199., 18445., 25691.,  8809.,  9271., 16517., 23763., 16737.,  7343., 14589., 21835., 23641.,  5415., 12661., 19907.,  3705., 10216., 16727., 23238.,  9013.,  8484., 14995., 21506., 13297.,  6752., 13263., 19774., 20653.,  5020., 11531., 18042.,  3841., 10577., 17313., 24049.,  9345.,  8785., 15521., 22257., 13825.,  6993., 13729., 20465., 21377.,  5201., 11937., 18673.,  3977., 10938., 17899., 24860.,  9677.,  9086., 16047., 23008., 14353.,  7234., 14195., 21156., 22101.,  5382., 12343., 19304.,  4113., 11299., 18485., 25671., 10009.,  9387., 16573., 23759., 14881.,  7475., 14661., 21847., 22825.,  5563., 12749., 19935.,  3609., 10060., 16511., 22962.,  9957.,  8344., 14795., 21246., 15281.,  6628., 13079., 19530., 19581.,  4912., 11363., 17814.,  3745., 10421., 17097., 23773., 10289.,  8645., 15321., 21997., 15809.,  6869., 13545., 20221., 20305.,  5093., 11769., 18445.,  3881., 10782., 17683., 24584., 10621.,  8946., 15847., 22748., 16337.,  7110., 14011., 20912., 21029.,  5274., 12175., 19076.,  4017., 11143., 18269., 25395., 10953.,  9247., 16373., 23499., 16865.,  7351., 14477., 21603., 21753.,  5455., 12581., 19707.,  3257.,  9648., 16039., 22430., 10645.,  7948., 14339., 20730., 17009.,  6248., 12639., 19030., 22349.,  4548., 10939., 17330.,  3393., 10009., 16625., 23241., 10977.,  8249., 14865., 21481., 17537.,  6489., 13105., 19721., 23073.,  4729., 11345., 17961.,  3529., 10370., 17211., 24052., 11309.,  8550., 15391., 22232., 18065.,  6730., 13571., 20412., 23797.,  4910., 11751., 18592.};
  const int batches = 1;
  const int m = 15;
  const int k = 15;
  const int n = 16;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M15xK16xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4089., 11642., 19195., 26748.,  4093., 11646., 19199., 26752.,  4097., 11650., 19203., 26756.,  4101., 11654.,  4239., 12048., 19857., 27666.,  4243., 12052., 19861., 27670.,  4247., 12056., 19865., 27674.,  4251., 12060.,  4389., 12454., 20519., 28584.,  4393., 12458., 20523., 28588.,  4397., 12462., 20527., 28592.,  4401., 12466.,  4539., 12860., 21181., 29502.,  4543., 12864., 21185., 29506.,  4547., 12868., 21189., 29510.,  4551., 12872.,  4369., 11922., 19475., 27028.,  4373., 11926., 19479., 27032.,  4313., 11866., 19419., 26972.,  4317., 11870.,  4455., 12264., 20073., 27882.,  4459., 12268., 20077., 27886.,  4463., 12272., 20081., 27890.,  4467., 12276.,  4605., 12670., 20735., 28800.,  4609., 12674., 20739., 28804.,  4613., 12678., 20743., 28808.,  4617., 12682.,  4755., 13076., 21397., 29718.,  4759., 13080., 21401., 29722.,  4763., 13084., 21405., 29726.,  4767., 13088.,  4329., 11882., 19435., 26988.,  4333., 11886., 19439., 26992.,  4337., 11890., 19443., 26996.,  4341., 11894.,  4479., 12288., 20033., 27842.,  4419., 12228., 20037., 27846.,  4423., 12232., 20041., 27850.,  4427., 12236.,  4565., 12630., 20695., 28760.,  4569., 12634., 20699., 28764.,  4573., 12638., 20703., 28768.,  4577., 12642.,  4715., 13036., 21357., 29678.,  4719., 13040., 21361., 29682.,  4723., 13044., 21365., 29686.,  4727., 13048.,  4033., 11586., 19139., 26692.,  4037., 11590., 19143., 26696.,  4041., 11594., 19147., 26700.,  4045., 11598.,  4183., 11992., 19801., 27610.,  4187., 11996., 19805., 27614.,  4191., 12000., 19745., 27554.,  4131., 11940.,  4269., 12334., 20399., 28464.,  4273., 12338., 20403., 28468.,  4277., 12342., 20407., 28472.,  4281., 12346.};
  const int batches = 1;
  const int m = 15;
  const int k = 16;
  const int n = 14;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M15xK16xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4089., 11642., 19195., 26748.,  4093., 11646., 19199., 26752.,  4097., 11650., 19203., 26756.,  4101., 11654., 19207.,  4240., 12049., 19858., 27667.,  4244., 12053., 19862., 27671.,  4248., 12057., 19866., 27675.,  4252., 12061., 19870.,  4391., 12456., 20521., 28586.,  4395., 12460., 20525., 28590.,  4399., 12464., 20529., 28594.,  4403., 12468., 20533.,  4542., 12863., 21184., 29505.,  4546., 12867., 21188., 29509.,  4550., 12871., 21192., 29513.,  4554., 12875., 21196.,  4373., 11926., 19479., 27032.,  4313., 11866., 19419., 26972.,  4317., 11870., 19423., 26976.,  4321., 11874., 19427.,  4460., 12269., 20078., 27887.,  4464., 12273., 20082., 27891.,  4468., 12277., 20086., 27895.,  4472., 12281., 20090.,  4611., 12676., 20741., 28806.,  4615., 12680., 20745., 28810.,  4619., 12684., 20749., 28814.,  4623., 12688., 20753.,  4762., 13083., 21404., 29725.,  4766., 13087., 21408., 29729.,  4770., 13091., 21412., 29733.,  4774., 13095., 21416.,  4337., 11890., 19443., 26996.,  4341., 11894., 19447., 27000.,  4281., 11834., 19387., 26940.,  4285., 11838., 19391.,  4424., 12233., 20042., 27851.,  4428., 12237., 20046., 27855.,  4432., 12241., 20050., 27859.,  4436., 12245., 20054.,  4575., 12640., 20705., 28770.,  4579., 12644., 20709., 28774.,  4583., 12648., 20713., 28778.,  4587., 12652., 20717.,  4726., 13047., 21368., 29689.,  4730., 13051., 21372., 29693.,  4734., 13055., 21376., 29697.,  4738., 13059., 21380.,  4045., 11598., 19151., 26704.,  4049., 11602., 19155., 26708.,  4053., 11606., 19159., 26712.,  3993., 11546., 19099.,  4132., 11941., 19750., 27559.,  4136., 11945., 19754., 27563.,  4140., 11949., 19758., 27567.,  4144., 11953., 19762.,  4283., 12348., 20413., 28478.,  4287., 12352., 20417., 28482.,  4291., 12356., 20421., 28486.,  4295., 12360., 20425.};
  const int batches = 1;
  const int m = 15;
  const int k = 16;
  const int n = 15;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M15xK16xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4089., 11642., 19195., 26748.,  4093., 11646., 19199., 26752.,  4097., 11650., 19203., 26756.,  4101., 11654., 19207., 26760.,  4241., 12050., 19859., 27668.,  4245., 12054., 19863., 27672.,  4249., 12058., 19867., 27676.,  4253., 12062., 19871., 27680.,  4393., 12458., 20523., 28588.,  4397., 12462., 20527., 28592.,  4401., 12466., 20531., 28596.,  4405., 12470., 20535., 28600.,  4545., 12866., 21187., 29508.,  4549., 12870., 21191., 29512.,  4553., 12874., 21195., 29516.,  4557., 12878., 21199., 29520.,  4313., 11866., 19419., 26972.,  4317., 11870., 19423., 26976.,  4321., 11874., 19427., 26980.,  4325., 11878., 19431., 26984.,  4465., 12274., 20083., 27892.,  4469., 12278., 20087., 27896.,  4473., 12282., 20091., 27900.,  4477., 12286., 20095., 27904.,  4617., 12682., 20747., 28812.,  4621., 12686., 20751., 28816.,  4625., 12690., 20755., 28820.,  4629., 12694., 20759., 28824.,  4769., 13090., 21411., 29732.,  4773., 13094., 21415., 29736.,  4777., 13098., 21419., 29740.,  4781., 13102., 21423., 29744.,  4281., 11834., 19387., 26940.,  4285., 11838., 19391., 26944.,  4289., 11842., 19395., 26948.,  4293., 11846., 19399., 26952.,  4433., 12242., 20051., 27860.,  4437., 12246., 20055., 27864.,  4441., 12250., 20059., 27868.,  4445., 12254., 20063., 27872.,  4585., 12650., 20715., 28780.,  4589., 12654., 20719., 28784.,  4593., 12658., 20723., 28788.,  4597., 12662., 20727., 28792.,  4737., 13058., 21379., 29700.,  4741., 13062., 21383., 29704.,  4745., 13066., 21387., 29708.,  4749., 13070., 21391., 29712.,  3993., 11546., 19099., 26652.,  3997., 11550., 19103., 26656.,  4001., 11554., 19107., 26660.,  4005., 11558., 19111., 26664.,  4145., 11954., 19763., 27572.,  4149., 11958., 19767., 27576.,  4153., 11962., 19771., 27580.,  4157., 11966., 19775., 27584.,  4297., 12362., 20427., 28492.,  4301., 12366., 20431., 28496.,  4305., 12370., 20435., 28500.,  4309., 12374., 20439., 28504.};
  const int batches = 1;
  const int m = 15;
  const int k = 16;
  const int n = 16;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M16xK14xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2442.,  6895., 11348., 15801., 12702.,  4355.,  8808., 13261., 17714.,  2967.,  6268., 10721., 15174., 13227.,  2561.,  7210., 11859., 16508., 13221.,  4558.,  9207., 13856., 18505.,  3186.,  6555., 11204., 15853., 13846.,  2680.,  7525., 12370., 17215., 13740.,  4761.,  9606., 14451., 19296.,  3405.,  6842., 11687., 16532., 14465.,  2799.,  7840., 12881., 17922., 14259.,  4964., 10005., 15046., 20087.,  3624.,  7129., 12170., 17211., 15084.,  2918.,  8155., 13392., 18629., 14778.,  5167., 10404., 15641., 20814.,  3779.,  7352., 12589., 17826., 15639.,  2973.,  8406., 13839., 19272., 15233.,  5306., 10739., 16172., 21605.,  3998.,  7639., 13072., 18505., 16258.,  3092.,  8721., 14350., 19979., 15752.,  5509., 11138., 16767., 22396.,  4217.,  7926., 13555., 19184., 16877.,  3211.,  9036., 14861., 20686., 16271.,  5712., 11537., 17362., 23187.,  4436.,  8213., 14038., 19863., 17496.,  3330.,  9351., 15372., 21393., 16790.,  5915., 11936., 17957., 23978.,  4655.,  8500., 14521., 20542., 18115.,  3449.,  9666., 15819., 22036., 17245.,  6054., 12271., 18488., 24705.,  4810.,  8723., 14940., 21157., 18670.,  3504.,  9917., 16330., 22743., 17764.,  6257., 12670., 19083., 25496.,  5029.,  9010., 15423., 21836., 19289.,  3623., 10232., 16841., 23450., 18283.,  6460., 13069., 19678., 26287.,  5248.,  9297., 15906., 22515., 19908.,  3742., 10547., 17352., 24157., 18802.,  6663., 13468., 20273., 27078.,  5467.,  9584., 16389., 23194., 20527.,  3861., 10862., 17863., 24864., 19321.,  6866., 13867., 20868., 27869.,  5686.,  9807., 16808., 23809., 21082.,  3916., 11113., 18310., 25507., 19776.,  7005., 14202., 21399., 28596.,  5841., 10094., 17291., 24488., 21701.,  4035., 11428., 18821., 26214., 20295.,  7208., 14601., 21994., 29387.,  6060., 10381., 17774., 25167., 22320.};
  const int batches = 1;
  const int m = 16;
  const int k = 14;
  const int n = 14;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M16xK14xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2442.,  6895., 11348., 15801., 12702.,  4355.,  8808., 13261., 17714.,  2967.,  6268., 10721., 15174., 13227.,  3728.,  2562.,  7211., 11860., 16509., 13222.,  4559.,  9208., 13857., 18506.,  3187.,  6556., 11205., 15854., 13847.,  3904.,  2682.,  7527., 12372., 17217., 13742.,  4763.,  9608., 14453., 19298.,  3407.,  6844., 11689., 16534., 14467.,  4080.,  2802.,  7843., 12884., 17925., 14262.,  4967., 10008., 15049., 20090.,  3627.,  7132., 12173., 17214., 15087.,  4256.,  2922.,  8159., 13396., 18633., 14718.,  5107., 10344., 15581., 20818.,  3783.,  7356., 12593., 17830., 15643.,  4368.,  2978.,  8411., 13844., 19277., 15238.,  5311., 10744., 16177., 21610.,  4003.,  7644., 13077., 18510., 16263.,  4544.,  3098.,  8727., 14356., 19985., 15758.,  5515., 11144., 16773., 22402.,  4223.,  7932., 13561., 19190., 16883.,  4720.,  3218.,  9043., 14868., 20693., 16278.,  5719., 11544., 17369., 23194.,  4443.,  8220., 14045., 19870., 17503.,  4896.,  3338.,  9359., 15380., 21401., 16798.,  5923., 11944., 17965., 23922.,  4599.,  8444., 14465., 20486., 18059.,  5008.,  3394.,  9611., 15828., 22045., 17254.,  6063., 12280., 18497., 24714.,  4819.,  8732., 14949., 21166., 18679.,  5184.,  3514.,  9927., 16340., 22753., 17774.,  6267., 12680., 19093., 25506.,  5039.,  9020., 15433., 21846., 19299.,  5360.,  3634., 10243., 16852., 23461., 18294.,  6471., 13080., 19689., 26298.,  5259.,  9308., 15917., 22526., 19919.,  5536.,  3754., 10559., 17364., 24169., 18814.,  6675., 13480., 20285., 27090.,  5479.,  9596., 16401., 23142., 20475.,  5648.,  3810., 10811., 17812., 24813., 19270.,  6815., 13816., 20817., 27818.,  5635.,  9820., 16821., 23822., 21095.,  5824.,  3930., 11127., 18324., 25521., 19790.,  7019., 14216., 21413., 28610.,  5855., 10108., 17305., 24502., 21715.,  6000.,  4050., 11443., 18836., 26229., 20310.,  7223., 14616., 22009., 29402.,  6075., 10396., 17789., 25182., 22335.,  6176.};
  const int batches = 1;
  const int m = 16;
  const int k = 14;
  const int n = 15;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M16xK14xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2442.,  6895., 11348., 15801., 12702.,  4355.,  8808., 13261., 17714.,  2967.,  6268., 10721., 15174., 13227.,  3728.,  8181.,  2563.,  7212., 11861., 16510., 13223.,  4560.,  9209., 13858., 18507.,  3188.,  6557., 11206., 15855., 13848.,  3905.,  8554.,  2684.,  7529., 12374., 17219., 13744.,  4765.,  9610., 14455., 19300.,  3409.,  6846., 11691., 16536., 14469.,  4082.,  8927.,  2805.,  7846., 12887., 17928., 14265.,  4970., 10011., 15052., 20093.,  3630.,  7135., 12176., 17217., 15090.,  4259.,  9300.,  2862.,  8099., 13336., 18573., 14722.,  5111., 10348., 15585., 20822.,  3787.,  7360., 12597., 17834., 15647.,  4372.,  9609.,  2983.,  8416., 13849., 19282., 15243.,  5316., 10749., 16182., 21615.,  4008.,  7649., 13082., 18515., 16268.,  4549.,  9982.,  3104.,  8733., 14362., 19991., 15764.,  5521., 11150., 16779., 22408.,  4229.,  7938., 13567., 19196., 16889.,  4726., 10355.,  3225.,  9050., 14875., 20700., 16285.,  5726., 11551., 17376., 23201.,  4450.,  8227., 14052., 19877., 17510.,  4903., 10728.,  3282.,  9303., 15324., 21345., 16742.,  5867., 11888., 17909., 23930.,  4607.,  8452., 14473., 20494., 18067.,  5016., 11037.,  3403.,  9620., 15837., 22054., 17263.,  6072., 12289., 18506., 24723.,  4828.,  8741., 14958., 21175., 18688.,  5193., 11410.,  3524.,  9937., 16350., 22763., 17784.,  6277., 12690., 19103., 25516.,  5049.,  9030., 15443., 21856., 19309.,  5370., 11783.,  3645., 10254., 16863., 23472., 18305.,  6482., 13091., 19700., 26309.,  5270.,  9319., 15928., 22537., 19930.,  5547., 12156.,  3702., 10507., 17312., 24117., 18762.,  6623., 13428., 20233., 27038.,  5427.,  9544., 16349., 23154., 20487.,  5660., 12465.,  3823., 10824., 17825., 24826., 19283.,  6828., 13829., 20830., 27831.,  5648.,  9833., 16834., 23835., 21108.,  5837., 12838.,  3944., 11141., 18338., 25535., 19804.,  7033., 14230., 21427., 28624.,  5869., 10122., 17319., 24516., 21729.,  6014., 13211.,  4065., 11458., 18851., 26244., 20325.,  7238., 14631., 22024., 29417.,  6090., 10411., 17804., 25197., 22350.,  6191., 13584.};
  const int batches = 1;
  const int m = 16;
  const int k = 14;
  const int n = 16;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M16xK15xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2937.,  8203., 13469., 18735.,  7937.,  6803., 12069., 17335., 12937.,  5403., 10669., 15935., 17937.,  4003.,  3071.,  8562., 14053., 19544.,  8267.,  7102., 12593., 18084., 13463.,  5642., 11133., 16624., 18659.,  4182.,  3205.,  8921., 14637., 20353.,  8597.,  7401., 13117., 18833., 13989.,  5881., 11597., 17313., 19381.,  4361.,  3339.,  9280., 15221., 21162.,  8927.,  7700., 13641., 19582., 14515.,  6120., 12061., 18002., 20103.,  4540.,  3473.,  9639., 15805., 21971.,  9257.,  7999., 14165., 20331., 14977.,  6295., 12461., 18627., 20761.,  4655.,  3543.,  9934., 16325., 22716.,  9523.,  8234., 14625., 21016., 15503.,  6534., 12925., 19316., 21483.,  4834.,  3677., 10293., 16909., 23525.,  9853.,  8533., 15149., 21765., 16029.,  6773., 13389., 20005., 22205.,  5013.,  3811., 10652., 17493., 24334., 10183.,  8832., 15673., 22514., 16555.,  7012., 13853., 20694., 22927.,  5192.,  3945., 11011., 18077., 25143., 10513.,  9131., 16197., 23263., 17081.,  7251., 14317., 21383., 23649.,  5371.,  4079., 11370., 18597., 25888., 10779.,  9366., 16657., 23948., 17543.,  7426., 14717., 22008., 24307.,  5486.,  4149., 11665., 19181., 26697., 11109.,  9665., 17181., 24697., 18069.,  7665., 15181., 22697., 25029.,  5665.,  4283., 12024., 19765., 27506., 11439.,  9964., 17705., 25446., 18595.,  7904., 15645., 23386., 25751.,  5844.,  4417., 12383., 20349., 28315., 11769., 10263., 18229., 26195., 19121.,  8143., 16109., 24075., 26473.,  6023.,  4551., 12742., 20933., 29124., 12099., 10562., 18753., 26944., 19647.,  8382., 16509., 24700., 27131.,  6138.,  4621., 13037., 21453., 29869., 12365., 10797., 19213., 27629., 20109.,  8557., 16973., 25389., 27853.,  6317.,  4755., 13396., 22037., 30678., 12695., 11096., 19737., 28378., 20635.,  8796., 17437., 26078., 28575.,  6496.};
  const int batches = 1;
  const int m = 16;
  const int k = 15;
  const int n = 14;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M16xK15xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2937.,  8203., 13469., 18735.,  7937.,  6803., 12069., 17335., 12937.,  5403., 10669., 15935., 17937.,  4003.,  9269.,  3072.,  8563., 14054., 19545.,  8268.,  7103., 12594., 18085., 13464.,  5643., 11134., 16625., 18660.,  4183.,  9674.,  3207.,  8923., 14639., 20355.,  8599.,  7403., 13119., 18835., 13991.,  5883., 11599., 17315., 19383.,  4363., 10079.,  3342.,  9283., 15224., 21165.,  8930.,  7703., 13644., 19585., 14518.,  6123., 12064., 18005., 20106.,  4543., 10484.,  3477.,  9643., 15809., 21975.,  9197.,  7939., 14105., 20271., 14981.,  6299., 12465., 18631., 20765.,  4659., 10825.,  3548.,  9939., 16330., 22721.,  9528.,  8239., 14630., 21021., 15508.,  6539., 12930., 19321., 21488.,  4839., 11230.,  3683., 10299., 16915., 23531.,  9859.,  8539., 15155., 21771., 16035.,  6779., 13395., 20011., 22211.,  5019., 11635.,  3818., 10659., 17500., 24341., 10190.,  8839., 15680., 22521., 16562.,  7019., 13860., 20701., 22934.,  5199., 12040.,  3953., 11019., 18085., 25151., 10521.,  9139., 16205., 23271., 17025.,  7195., 14261., 21327., 23593.,  5315., 12381.,  4024., 11315., 18606., 25897., 10788.,  9375., 16666., 23957., 17552.,  7435., 14726., 22017., 24316.,  5495., 12786.,  4159., 11675., 19191., 26707., 11119.,  9675., 17191., 24707., 18079.,  7675., 15191., 22707., 25039.,  5675., 13191.,  4294., 12035., 19776., 27517., 11450.,  9975., 17716., 25457., 18606.,  7915., 15656., 23397., 25762.,  5855., 13596.,  4429., 12395., 20361., 28327., 11781., 10275., 18241., 26207., 19133.,  8155., 16121., 24087., 26421.,  5971., 13937.,  4500., 12691., 20882., 29073., 12048., 10511., 18702., 26893., 19596.,  8331., 16522., 24713., 27144.,  6151., 14342.,  4635., 13051., 21467., 29883., 12379., 10811., 19227., 27643., 20123.,  8571., 16987., 25403., 27867.,  6331., 14747.,  4770., 13411., 22052., 30693., 12710., 11111., 19752., 28393., 20650.,  8811., 17452., 26093., 28590.,  6511., 15152.};
  const int batches = 1;
  const int m = 16;
  const int k = 15;
  const int n = 15;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M16xK15xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2937.,  8203., 13469., 18735.,  7937.,  6803., 12069., 17335., 12937.,  5403., 10669., 15935., 17937.,  4003.,  9269., 14535.,  3073.,  8564., 14055., 19546.,  8269.,  7104., 12595., 18086., 13465.,  5644., 11135., 16626., 18661.,  4184.,  9675., 15166.,  3209.,  8925., 14641., 20357.,  8601.,  7405., 13121., 18837., 13993.,  5885., 11601., 17317., 19385.,  4365., 10081., 15797.,  3345.,  9286., 15227., 21168.,  8933.,  7706., 13647., 19588., 14521.,  6126., 12067., 18008., 20109.,  4546., 10487., 16428.,  3417.,  9583., 15749., 21915.,  9201.,  7943., 14109., 20275., 14985.,  6303., 12469., 18635., 20769.,  4663., 10829., 16995.,  3553.,  9944., 16335., 22726.,  9533.,  8244., 14635., 21026., 15513.,  6544., 12935., 19326., 21493.,  4844., 11235., 17626.,  3689., 10305., 16921., 23537.,  9865.,  8545., 15161., 21777., 16041.,  6785., 13401., 20017., 22217.,  5025., 11641., 18257.,  3825., 10666., 17507., 24348., 10197.,  8846., 15687., 22528., 16569.,  7026., 13867., 20708., 22941.,  5206., 12047., 18888.,  3897., 10963., 18029., 25095., 10465.,  9083., 16149., 23215., 17033.,  7203., 14269., 21335., 23601.,  5323., 12389., 19455.,  4033., 11324., 18615., 25906., 10797.,  9384., 16675., 23966., 17561.,  7444., 14735., 22026., 24325.,  5504., 12795., 20086.,  4169., 11685., 19201., 26717., 11129.,  9685., 17201., 24717., 18089.,  7685., 15201., 22717., 25049.,  5685., 13201., 20717.,  4305., 12046., 19787., 27528., 11461.,  9986., 17727., 25468., 18617.,  7926., 15667., 23408., 25773.,  5866., 13607., 21348.,  4377., 12343., 20309., 28275., 11729., 10223., 18189., 26155., 19081.,  8103., 16069., 24035., 26433.,  5983., 13949., 21915.,  4513., 12704., 20895., 29086., 12061., 10524., 18715., 26906., 19609.,  8344., 16535., 24726., 27157.,  6164., 14355., 22546.,  4649., 13065., 21481., 29897., 12393., 10825., 19241., 27657., 20137.,  8585., 17001., 25417., 27881.,  6345., 14761., 23177.,  4785., 13426., 22067., 30708., 12725., 11126., 19767., 28408., 20665.,  8826., 17467., 26108., 28605.,  6526., 15167., 23808.};
  const int batches = 1;
  const int m = 16;
  const int k = 15;
  const int n = 16;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M16xK16xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3721., 10122., 16523., 22924.,  3725., 10126., 16527., 22928.,  3729., 10130., 16531., 22932.,  3733., 10134.,  3871., 10528., 17185., 23842.,  3875., 10532., 17189., 23846.,  3879., 10536., 17193., 23850.,  3883., 10540.,  4021., 10934., 17847., 24760.,  4025., 10938., 17851., 24764.,  4029., 10942., 17855., 24768.,  4033., 10946.,  4171., 11340., 18509., 25678.,  4175., 11344., 18513., 25682.,  4179., 11348., 18517., 25686.,  4183., 11352.,  4321., 11746., 19171., 26596.,  4325., 11750., 19175., 26600.,  4265., 11690., 19115., 26540.,  4269., 11694.,  4407., 12088., 19769., 27450.,  4411., 12092., 19773., 27454.,  4415., 12096., 19777., 27458.,  4419., 12100.,  4557., 12494., 20431., 28368.,  4561., 12498., 20435., 28372.,  4565., 12502., 20439., 28376.,  4569., 12506.,  4707., 12900., 21093., 29286.,  4711., 12904., 21097., 29290.,  4715., 12908., 21101., 29294.,  4719., 12912.,  4857., 13306., 21755., 30204.,  4861., 13310., 21759., 30208.,  4865., 13314., 21763., 30212.,  4869., 13318.,  5007., 13712., 22353., 31058.,  4947., 13652., 22357., 31062.,  4951., 13656., 22361., 31066.,  4955., 13660.,  5093., 14054., 23015., 31976.,  5097., 14058., 23019., 31980.,  5101., 14062., 23023., 31984.,  5105., 14066.,  5243., 14460., 23677., 32894.,  5247., 14464., 23681., 32898.,  5251., 14468., 23685., 32902.,  5255., 14472.,  5393., 14866., 24339., 33812.,  5397., 14870., 24343., 33816.,  5401., 14874., 24347., 33820.,  5405., 14878.,  5543., 15272., 25001., 34730.,  5547., 15276., 25005., 34734.,  5551., 15280., 24945., 34674.,  5491., 15220.,  5629., 15614., 25599., 35584.,  5633., 15618., 25603., 35588.,  5637., 15622., 25607., 35592.,  5641., 15626.,  5779., 16020., 26261., 36502.,  5783., 16024., 26265., 36506.,  5787., 16028., 26269., 36510.,  5791., 16032.};
  const int batches = 1;
  const int m = 16;
  const int k = 16;
  const int n = 14;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M16xK16xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3721., 10122., 16523., 22924.,  3725., 10126., 16527., 22928.,  3729., 10130., 16531., 22932.,  3733., 10134., 16535.,  3872., 10529., 17186., 23843.,  3876., 10533., 17190., 23847.,  3880., 10537., 17194., 23851.,  3884., 10541., 17198.,  4023., 10936., 17849., 24762.,  4027., 10940., 17853., 24766.,  4031., 10944., 17857., 24770.,  4035., 10948., 17861.,  4174., 11343., 18512., 25681.,  4178., 11347., 18516., 25685.,  4182., 11351., 18520., 25689.,  4186., 11355., 18524.,  4325., 11750., 19175., 26600.,  4265., 11690., 19115., 26540.,  4269., 11694., 19119., 26544.,  4273., 11698., 19123.,  4412., 12093., 19774., 27455.,  4416., 12097., 19778., 27459.,  4420., 12101., 19782., 27463.,  4424., 12105., 19786.,  4563., 12500., 20437., 28374.,  4567., 12504., 20441., 28378.,  4571., 12508., 20445., 28382.,  4575., 12512., 20449.,  4714., 12907., 21100., 29293.,  4718., 12911., 21104., 29297.,  4722., 12915., 21108., 29301.,  4726., 12919., 21112.,  4865., 13314., 21763., 30212.,  4869., 13318., 21767., 30216.,  4809., 13258., 21707., 30156.,  4813., 13262., 21711.,  4952., 13657., 22362., 31067.,  4956., 13661., 22366., 31071.,  4960., 13665., 22370., 31075.,  4964., 13669., 22374.,  5103., 14064., 23025., 31986.,  5107., 14068., 23029., 31990.,  5111., 14072., 23033., 31994.,  5115., 14076., 23037.,  5254., 14471., 23688., 32905.,  5258., 14475., 23692., 32909.,  5262., 14479., 23696., 32913.,  5266., 14483., 23700.,  5405., 14878., 24351., 33824.,  5409., 14882., 24355., 33828.,  5413., 14886., 24359., 33832.,  5353., 14826., 24299.,  5492., 15221., 24950., 34679.,  5496., 15225., 24954., 34683.,  5500., 15229., 24958., 34687.,  5504., 15233., 24962.,  5643., 15628., 25613., 35598.,  5647., 15632., 25617., 35602.,  5651., 15636., 25621., 35606.,  5655., 15640., 25625.,  5794., 16035., 26276., 36517.,  5798., 16039., 26280., 36521.,  5802., 16043., 26284., 36525.,  5806., 16047., 26288.};
  const int batches = 1;
  const int m = 16;
  const int k = 16;
  const int n = 15;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1TrueTrue, M16xK16xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3721., 10122., 16523., 22924.,  3725., 10126., 16527., 22928.,  3729., 10130., 16531., 22932.,  3733., 10134., 16535., 22936.,  3873., 10530., 17187., 23844.,  3877., 10534., 17191., 23848.,  3881., 10538., 17195., 23852.,  3885., 10542., 17199., 23856.,  4025., 10938., 17851., 24764.,  4029., 10942., 17855., 24768.,  4033., 10946., 17859., 24772.,  4037., 10950., 17863., 24776.,  4177., 11346., 18515., 25684.,  4181., 11350., 18519., 25688.,  4185., 11354., 18523., 25692.,  4189., 11358., 18527., 25696.,  4265., 11690., 19115., 26540.,  4269., 11694., 19119., 26544.,  4273., 11698., 19123., 26548.,  4277., 11702., 19127., 26552.,  4417., 12098., 19779., 27460.,  4421., 12102., 19783., 27464.,  4425., 12106., 19787., 27468.,  4429., 12110., 19791., 27472.,  4569., 12506., 20443., 28380.,  4573., 12510., 20447., 28384.,  4577., 12514., 20451., 28388.,  4581., 12518., 20455., 28392.,  4721., 12914., 21107., 29300.,  4725., 12918., 21111., 29304.,  4729., 12922., 21115., 29308.,  4733., 12926., 21119., 29312.,  4809., 13258., 21707., 30156.,  4813., 13262., 21711., 30160.,  4817., 13266., 21715., 30164.,  4821., 13270., 21719., 30168.,  4961., 13666., 22371., 31076.,  4965., 13670., 22375., 31080.,  4969., 13674., 22379., 31084.,  4973., 13678., 22383., 31088.,  5113., 14074., 23035., 31996.,  5117., 14078., 23039., 32000.,  5121., 14082., 23043., 32004.,  5125., 14086., 23047., 32008.,  5265., 14482., 23699., 32916.,  5269., 14486., 23703., 32920.,  5273., 14490., 23707., 32924.,  5277., 14494., 23711., 32928.,  5353., 14826., 24299., 33772.,  5357., 14830., 24303., 33776.,  5361., 14834., 24307., 33780.,  5365., 14838., 24311., 33784.,  5505., 15234., 24963., 34692.,  5509., 15238., 24967., 34696.,  5513., 15242., 24971., 34700.,  5517., 15246., 24975., 34704.,  5657., 15642., 25627., 35612.,  5661., 15646., 25631., 35616.,  5665., 15650., 25635., 35620.,  5669., 15654., 25639., 35624.,  5809., 16050., 26291., 36532.,  5813., 16054., 26295., 36536.,  5817., 16058., 26299., 36540.,  5821., 16062., 26303., 36544.};
  const int batches = 1;
  const int m = 16;
  const int k = 16;
  const int n = 16;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}