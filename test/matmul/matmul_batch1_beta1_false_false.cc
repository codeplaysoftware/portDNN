/*
 * Copyright Codeplay Software Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use these files except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// DO NOT MODIFY BY HAND
// This file was automatically generated by generate_matmul_tests.py.
// Results calculated using Tensorflow v1.13.2.

#include <gtest/gtest.h>
#include <vector>

#include "test/matmul/fixture.h"
#include "test/types/kernel_data_types.h"
#include "test/types/to_gtest_types.h"


using DataTypeList = sycldnn::types::KernelDataTypes;
using GTestTypeList = sycldnn::types::ToGTestTypes<DataTypeList>::type;

template <typename DataType>
using MatmulBatch1Beta1FalseFalse = MatmulFixture<DataType, false, false>;
TYPED_TEST_SUITE(MatmulBatch1Beta1FalseFalse, GTestTypeList);
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M14xK14xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3886.,  3992.,  3458.,  3564.,  3670.,  3776.,  3882.,  3988.,  3774.,  3880.,  3090.,  3196.,  3302.,  3408., 10284., 10586.,  9352.,  9654.,  9956., 10258., 10560., 10862.,  9948., 10250.,  8760.,  9062.,  9364.,  9666., 16682., 17180., 15246., 15744., 16242., 16740., 17238., 17736., 16122., 16620., 14430., 14928., 15426., 15924., 23080., 23774., 21140., 21834., 22528., 23222., 23916., 24610., 22296., 22990., 20100., 20794., 21488., 22182., 13606., 14112., 14490., 14996., 15502., 16008., 16514., 17020., 13558., 14064., 14186., 14692., 15198., 15704.,  6628.,  6818.,  5984.,  6174.,  6364.,  6554.,  6744.,  6934.,  6420.,  6610.,  5520.,  5710.,  5900.,  6090., 13026., 13412., 11878., 12264., 12650., 13036., 13422., 13808., 12594., 12980., 11190., 11576., 11962., 12348., 19424., 20006., 17772., 18354., 18936., 19518., 20100., 20682., 18768., 19350., 16860., 17442., 18024., 18606., 25822., 26600., 23666., 24444., 25222., 26000., 26778., 27556., 24942., 25720., 22530., 23308., 24086., 24864.,  4060.,  4266.,  3896.,  4102.,  4308.,  4514.,  4720.,  4926.,  4940.,  5146.,  4584.,  4790.,  4996.,  5202.,  9370.,  9644.,  8510.,  8784.,  9058.,  9332.,  9606.,  9880.,  9066.,  9340.,  7950.,  8224.,  8498.,  8772., 15768., 16238., 14404., 14874., 15344., 15814., 16284., 16754., 15240., 15710., 13620., 14090., 14560., 15030., 22166., 22832., 20298., 20964., 21630., 22296., 22962., 23628., 21414., 22080., 19290., 19956., 20622., 21288., 19860., 20466., 16976., 17582., 18188., 18794., 19400., 20006., 16836., 17442., 17728., 18334., 18940., 19546.};
  const int batches = 1;
  const int m = 14;
  const int k = 14;
  const int n = 14;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M14xK14xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3260.,  3366.,  3472.,  3578.,  3364.,  3470.,  3576.,  3682.,  3212.,  3318.,  3424.,  3530.,  2804.,  2910.,  3016.,  9141.,  9443.,  9745., 10047.,  9133.,  9435.,  9737., 10039.,  8869.,  9171.,  9473.,  9775.,  8349.,  8651.,  8953., 15022., 15520., 16018., 16516., 14902., 15400., 15898., 16396., 14526., 15024., 15522., 16020., 13894., 14392., 14890., 20903., 21597., 22291., 22985., 20671., 21365., 22059., 22753., 20183., 20877., 21571., 22265., 19439., 20133., 20827., 15072., 15578., 16084., 16590., 13128., 13634., 14140., 14646., 15088., 15594., 16100., 16606., 16792., 17298., 17804.,  5785.,  5975.,  6165.,  6355.,  5841.,  6031.,  6221.,  6411.,  5641.,  5831.,  6021.,  6211.,  5185.,  5375.,  5565., 11666., 12052., 12438., 12824., 11610., 11996., 12382., 12768., 11298., 11684., 12070., 12456., 10730., 11116., 11502., 17547., 18129., 18711., 19293., 17379., 17961., 18543., 19125., 16955., 17537., 18119., 18701., 16275., 16857., 17439., 23428., 24206., 24984., 25762., 23148., 23926., 24704., 25482., 22548., 23326., 24104., 24882., 21756., 22534., 23312.,  3517.,  3723.,  3929.,  4135.,  4149.,  4355.,  4561.,  4767.,  4525.,  4731.,  4937.,  5143.,  4645.,  4851.,  5057.,  8310.,  8584.,  8858.,  9132.,  8318.,  8592.,  8866.,  9140.,  8070.,  8344.,  8618.,  8892.,  7566.,  7840.,  8114., 14191., 14661., 15131., 15601., 14087., 14557., 15027., 15497., 13727., 14197., 14667., 15137., 13111., 13581., 14051., 20072., 20738., 21404., 22070., 19856., 20522., 21188., 21854., 19384., 20050., 20716., 21382., 18592., 19258., 19924., 18337., 18943., 19549., 20155., 16985., 17591., 18197., 18803., 15377., 15983., 16589., 17195., 17609., 18215., 18821.};
  const int batches = 1;
  const int m = 14;
  const int k = 14;
  const int n = 15;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M14xK14xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2442.,  2548.,  2654.,  2760.,  2866.,  2972.,  3078.,  3184.,  3290.,  3396.,  3502.,  3608.,  3714.,  3820.,  3926.,  4032.,  6910.,  7212.,  7514.,  7816.,  8118.,  8420.,  8722.,  9024.,  9326.,  9628.,  9930., 10232., 10534., 10836., 11138., 11440., 11378., 11876., 12374., 12872., 13370., 13868., 14366., 14864., 15362., 15860., 16358., 16856., 17354., 17852., 18350., 18848., 15846., 16540., 17234., 17928., 18622., 19316., 20010., 20704., 21398., 22092., 22786., 23480., 24174., 24868., 25562., 26256., 12698., 13204., 13710., 14216., 14722., 15228., 15734., 16240., 16746., 17252., 17758., 18264., 18770., 19276., 19782., 20288.,  4366.,  4556.,  4746.,  4936.,  5126.,  5316.,  5506.,  5696.,  5886.,  6076.,  6266.,  6456.,  6646.,  6836.,  7026.,  7216.,  8834.,  9220.,  9606.,  9992., 10378., 10764., 11150., 11536., 11922., 12308., 12694., 13080., 13466., 13852., 14238., 14624., 13302., 13884., 14466., 15048., 15630., 16212., 16794., 17376., 17958., 18540., 19122., 19704., 20286., 20868., 21450., 22032., 17706., 18484., 19262., 20040., 20818., 21596., 22374., 23152., 23930., 24708., 25486., 26264., 27042., 27820., 28598., 29376.,  2974.,  3180.,  3386.,  3592.,  3798.,  4004.,  4210.,  4416.,  4622.,  4828.,  5034.,  5240.,  5446.,  5652.,  5858.,  6064.,  6290.,  6564.,  6838.,  7112.,  7386.,  7660.,  7934.,  8208.,  8482.,  8756.,  9030.,  9304.,  9578.,  9852., 10126., 10400., 10758., 11228., 11698., 12168., 12638., 13108., 13578., 14048., 14518., 14988., 15458., 15928., 16398., 16868., 17338., 17808., 15162., 15828., 16494., 17160., 17826., 18492., 19158., 19824., 20490., 21156., 21822., 22488., 23154., 23820., 24486., 25152., 13230., 13836., 14442., 15048., 15654., 16260., 16866., 17472., 18078., 18684., 19290., 19896., 20502., 21108., 21714., 22320.};
  const int batches = 1;
  const int m = 14;
  const int k = 14;
  const int n = 16;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M14xK15xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3961.,  4082.,  3563.,  3684.,  3805.,  3926.,  4047.,  4168.,  3969.,  4090.,  3315.,  3436.,  3557.,  3678., 10890., 11236.,  9982., 10328., 10674., 11020., 11366., 11712., 10778., 11124.,  9614.,  9960., 10306., 10652., 17819., 18390., 16401., 16972., 17543., 18114., 18685., 19256., 17587., 18158., 15913., 16484., 17055., 17626., 24748., 25544., 22820., 23616., 24412., 25208., 26004., 26800., 24396., 25192., 22212., 23008., 23804., 24600.,  7805.,  8122.,  8055.,  8372.,  8689.,  9006.,  9323.,  9640.,  9829., 10146.,  9823., 10140., 10457., 10774.,  9038.,  9324.,  8266.,  8552.,  8838.,  9124.,  9410.,  9696.,  8958.,  9244.,  7930.,  8216.,  8502.,  8788., 15967., 16478., 14685., 15196., 15707., 16218., 16729., 17240., 15767., 16278., 14229., 14740., 15251., 15762., 22896., 23632., 21104., 21840., 22576., 23312., 24048., 24784., 22576., 23312., 20528., 21264., 22000., 22736., 13633., 14146., 14531., 15044., 15557., 16070., 16583., 17096., 13705., 14218., 14347., 14860., 15373., 15886.,  7250.,  7476.,  6550.,  6776.,  7002.,  7228.,  7454.,  7680.,  7138.,  7364.,  6246.,  6472.,  6698.,  6924., 14115., 14566., 12969., 13420., 13871., 14322., 14773., 15224., 13947., 14398., 12545., 12996., 13447., 13898., 21044., 21720., 19388., 20064., 20740., 21416., 22092., 22768., 20756., 21432., 18844., 19520., 20196., 20872., 21509., 22218., 18959., 19668., 20377., 21086., 21795., 22504., 19565., 20274., 20855., 21564., 22273., 22982.,  5398.,  5564.,  4898.,  5064.,  5230.,  5396.,  5562.,  5728.,  5382.,  5548.,  4562.,  4728.,  4894.,  5060.};
  const int batches = 1;
  const int m = 14;
  const int k = 15;
  const int n = 14;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M14xK15xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3545.,  3666.,  3787.,  3908.,  3709.,  3830.,  3951.,  4072.,  3617.,  3738.,  3859.,  3980.,  3269.,  3390.,  3511., 10130., 10476., 10822., 11168., 10234., 10580., 10926., 11272., 10082., 10428., 10774., 11120.,  9674., 10020., 10366., 16715., 17286., 17857., 18428., 16759., 17330., 17901., 18472., 16547., 17118., 17689., 18260., 16079., 16650., 17221., 23300., 24096., 24892., 25688., 23284., 24080., 24876., 25672., 23012., 23808., 24604., 25400., 22484., 23280., 24076.,  7869.,  8186.,  8503.,  8820.,  9009.,  9326.,  9643.,  9960.,  9957., 10274., 10591., 10908., 10649., 10966., 11283.,  8374.,  8660.,  8946.,  9232.,  8494.,  8780.,  9066.,  9352.,  8358.,  8644.,  8930.,  9216.,  7966.,  8252.,  8538., 14959., 15470., 15981., 16492., 15019., 15530., 16041., 16552., 14823., 15334., 15845., 16356., 14371., 14882., 15393., 21544., 22280., 23016., 23752., 21544., 22280., 23016., 23752., 21288., 22024., 22760., 23496., 20776., 21512., 22248., 15201., 15714., 16227., 16740., 13349., 13862., 14375., 14888., 15273., 15786., 16299., 16812., 17005., 17518., 18031.,  6618.,  6844.,  7070.,  7296.,  6754.,  6980.,  7206.,  7432.,  6634.,  6860.,  7086.,  7312.,  6258.,  6484.,  6710., 13203., 13654., 14105., 14556., 13279., 13730., 14181., 14632., 13099., 13550., 14001., 14452., 12663., 13114., 13565., 19788., 20464., 21140., 21816., 19804., 20480., 21156., 21832., 19564., 20240., 20916., 21592., 19068., 19744., 20420., 21509., 22218., 22927., 23636., 20697., 21406., 22115., 22824., 19629., 20338., 21047., 21756., 22337., 23046., 23755.,  4862.,  5028.,  5194.,  5360.,  5014.,  5180.,  5346.,  5512.,  4910.,  5076.,  5242.,  5408.,  4550.,  4716.,  4882.};
  const int batches = 1;
  const int m = 14;
  const int k = 15;
  const int n = 15;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M14xK15xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2937.,  3058.,  3179.,  3300.,  3421.,  3542.,  3663.,  3784.,  3905.,  4026.,  4147.,  4268.,  4389.,  4510.,  4631.,  4752.,  8218.,  8564.,  8910.,  9256.,  9602.,  9948., 10294., 10640., 10986., 11332., 11678., 12024., 12370., 12716., 13062., 13408., 13499., 14070., 14641., 15212., 15783., 16354., 16925., 17496., 18067., 18638., 19209., 19780., 20351., 20922., 21493., 22064., 18780., 19576., 20372., 21168., 21964., 22760., 23556., 24352., 25148., 25944., 26740., 27536., 28332., 29128., 29924., 30720.,  7933.,  8250.,  8567.,  8884.,  9201.,  9518.,  9835., 10152., 10469., 10786., 11103., 11420., 11737., 12054., 12371., 12688.,  6814.,  7100.,  7386.,  7672.,  7958.,  8244.,  8530.,  8816.,  9102.,  9388.,  9674.,  9960., 10246., 10532., 10818., 11104., 12095., 12606., 13117., 13628., 14139., 14650., 15161., 15672., 16183., 16694., 17205., 17716., 18227., 18738., 19249., 19760., 17376., 18112., 18848., 19584., 20320., 21056., 21792., 22528., 23264., 24000., 24736., 25472., 26208., 26944., 27680., 28416., 12929., 13442., 13955., 14468., 14981., 15494., 16007., 16520., 17033., 17546., 18059., 18572., 19085., 19598., 20111., 20624.,  5410.,  5636.,  5862.,  6088.,  6314.,  6540.,  6766.,  6992.,  7218.,  7444.,  7670.,  7896.,  8122.,  8348.,  8574.,  8800., 10691., 11142., 11593., 12044., 12495., 12946., 13397., 13848., 14299., 14750., 15201., 15652., 16103., 16554., 17005., 17456., 15972., 16648., 17324., 18000., 18676., 19352., 20028., 20704., 21380., 22056., 22732., 23408., 24084., 24760., 25436., 26112., 17925., 18634., 19343., 20052., 20761., 21470., 22179., 22888., 23597., 24306., 25015., 25724., 26433., 27142., 27851., 28560.,  4006.,  4172.,  4338.,  4504.,  4670.,  4836.,  5002.,  5168.,  5334.,  5500.,  5666.,  5832.,  5998.,  6164.,  6330.,  6496.};
  const int batches = 1;
  const int m = 14;
  const int k = 15;
  const int n = 16;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M14xK16xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4265.,  4402.,  3899.,  4036.,  4173.,  4310.,  4447.,  4584.,  4401.,  4538.,  3779.,  3916.,  4053.,  4190., 11959., 12352., 11081., 11474., 11867., 12260., 12653., 13046., 12095., 12488., 10961., 11354., 11747., 12140., 19653., 20302., 18263., 18912., 19561., 20210., 20859., 21508., 19789., 20438., 18143., 18792., 19441., 20090., 27347., 28252., 25445., 26350., 27255., 28160., 29065., 29970., 27483., 28388., 25325., 26230., 27135., 28040.,  4321.,  4458.,  3955.,  4092.,  4229.,  4366.,  4503.,  4640.,  4393.,  4530.,  3771.,  3908.,  4045.,  4182., 11951., 12344., 11073., 11466., 11859., 12252., 12645., 13038., 12087., 12480., 10953., 11346., 11739., 12132., 19645., 20294., 18255., 18904., 19553., 20202., 20851., 21500., 19781., 20430., 18135., 18784., 19433., 20082., 27339., 28244., 25437., 26342., 27247., 28152., 29057., 29962., 27475., 28380., 25317., 26222., 27127., 28032.,  4313.,  4450.,  3947.,  4084.,  4221.,  4358.,  4495.,  4632.,  4449.,  4586.,  3827.,  3964.,  4101.,  4238., 12007., 12400., 11065., 11458., 11851., 12244., 12637., 13030., 12079., 12472., 10945., 11338., 11731., 12124., 19637., 20286., 18247., 18896., 19545., 20194., 20843., 21492., 19773., 20422., 18127., 18776., 19425., 20074., 27331., 28236., 25429., 26334., 27239., 28144., 29049., 29954., 27467., 28372., 25309., 26214., 27119., 28024.,  4305.,  4442.,  3939.,  4076.,  4213.,  4350.,  4487.,  4624.,  4441.,  4578.,  3819.,  3956.,  4093.,  4230., 11999., 12392., 11121., 11514., 11907., 12300., 12693., 13086., 12135., 12528., 10937., 11330., 11723., 12116.};
  const int batches = 1;
  const int m = 14;
  const int k = 16;
  const int n = 14;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M14xK16xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4089.,  4226.,  4363.,  4500.,  4317.,  4454.,  4591.,  4728.,  4289.,  4426.,  4563.,  4700.,  4005.,  4142.,  4279., 11656., 12049., 12442., 12835., 11884., 12277., 12670., 13063., 11856., 12249., 12642., 13035., 11572., 11965., 12358., 19223., 19872., 20521., 21170., 19451., 20100., 20749., 21398., 19423., 20072., 20721., 21370., 19139., 19788., 20437., 26790., 27695., 28600., 29505., 27018., 27923., 28828., 29733., 26990., 27895., 28800., 29705., 26706., 27611., 28516.,  4149.,  4286.,  4423.,  4560.,  4313.,  4450.,  4587.,  4724.,  4285.,  4422.,  4559.,  4696.,  4001.,  4138.,  4275., 11652., 12045., 12438., 12831., 11880., 12273., 12666., 13059., 11852., 12245., 12638., 13031., 11568., 11961., 12354., 19219., 19868., 20517., 21166., 19447., 20096., 20745., 21394., 19419., 20068., 20717., 21366., 19135., 19784., 20433., 26786., 27691., 28596., 29501., 27014., 27919., 28824., 29729., 26986., 27891., 28796., 29701., 26702., 27607., 28512.,  4145.,  4282.,  4419.,  4556.,  4373.,  4510.,  4647.,  4784.,  4281.,  4418.,  4555.,  4692.,  3997.,  4134.,  4271., 11648., 12041., 12434., 12827., 11876., 12269., 12662., 13055., 11848., 12241., 12634., 13027., 11564., 11957., 12350., 19215., 19864., 20513., 21162., 19443., 20092., 20741., 21390., 19415., 20064., 20713., 21362., 19131., 19780., 20429., 26782., 27687., 28592., 29497., 27010., 27915., 28820., 29725., 26982., 27887., 28792., 29697., 26698., 27603., 28508.,  4141.,  4278.,  4415.,  4552.,  4369.,  4506.,  4643.,  4780.,  4341.,  4478.,  4615.,  4752.,  3993.,  4130.,  4267., 11644., 12037., 12430., 12823., 11872., 12265., 12658., 13051., 11844., 12237., 12630., 13023., 11560., 11953., 12346.};
  const int batches = 1;
  const int m = 14;
  const int k = 16;
  const int n = 15;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M14xK16xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3721.,  3858.,  3995.,  4132.,  4269.,  4406.,  4543.,  4680.,  4817.,  4954.,  5091.,  5228.,  5365.,  5502.,  5639.,  5776., 10137., 10530., 10923., 11316., 11709., 12102., 12495., 12888., 13281., 13674., 14067., 14460., 14853., 15246., 15639., 16032., 16553., 17202., 17851., 18500., 19149., 19798., 20447., 21096., 21745., 22394., 23043., 23692., 24341., 24990., 25639., 26288., 22969., 23874., 24779., 25684., 26589., 27494., 28399., 29304., 30209., 31114., 32019., 32924., 33829., 34734., 35639., 36544.,  3721.,  3858.,  3995.,  4132.,  4269.,  4406.,  4543.,  4680.,  4817.,  4954.,  5091.,  5228.,  5365.,  5502.,  5639.,  5776., 10137., 10530., 10923., 11316., 11709., 12102., 12495., 12888., 13281., 13674., 14067., 14460., 14853., 15246., 15639., 16032., 16553., 17202., 17851., 18500., 19149., 19798., 20447., 21096., 21745., 22394., 23043., 23692., 24341., 24990., 25639., 26288., 22969., 23874., 24779., 25684., 26589., 27494., 28399., 29304., 30209., 31114., 32019., 32924., 33829., 34734., 35639., 36544.,  3721.,  3858.,  3995.,  4132.,  4269.,  4406.,  4543.,  4680.,  4817.,  4954.,  5091.,  5228.,  5365.,  5502.,  5639.,  5776., 10137., 10530., 10923., 11316., 11709., 12102., 12495., 12888., 13281., 13674., 14067., 14460., 14853., 15246., 15639., 16032., 16553., 17202., 17851., 18500., 19149., 19798., 20447., 21096., 21745., 22394., 23043., 23692., 24341., 24990., 25639., 26288., 22969., 23874., 24779., 25684., 26589., 27494., 28399., 29304., 30209., 31114., 32019., 32924., 33829., 34734., 35639., 36544.,  3721.,  3858.,  3995.,  4132.,  4269.,  4406.,  4543.,  4680.,  4817.,  4954.,  5091.,  5228.,  5365.,  5502.,  5639.,  5776., 10137., 10530., 10923., 11316., 11709., 12102., 12495., 12888., 13281., 13674., 14067., 14460., 14853., 15246., 15639., 16032.};
  const int batches = 1;
  const int m = 14;
  const int k = 16;
  const int n = 16;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M15xK14xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3886.,  3992.,  3458.,  3564.,  3670.,  3776.,  3882.,  3988.,  3774.,  3880.,  3090.,  3196.,  3302.,  3408., 10284., 10586.,  9352.,  9654.,  9956., 10258., 10560., 10862.,  9948., 10250.,  8760.,  9062.,  9364.,  9666., 16682., 17180., 15246., 15744., 16242., 16740., 17238., 17736., 16122., 16620., 14430., 14928., 15426., 15924., 23080., 23774., 21140., 21834., 22528., 23222., 23916., 24610., 22296., 22990., 20100., 20794., 21488., 22182., 13606., 14112., 14490., 14996., 15502., 16008., 16514., 17020., 13558., 14064., 14186., 14692., 15198., 15704.,  6628.,  6818.,  5984.,  6174.,  6364.,  6554.,  6744.,  6934.,  6420.,  6610.,  5520.,  5710.,  5900.,  6090., 13026., 13412., 11878., 12264., 12650., 13036., 13422., 13808., 12594., 12980., 11190., 11576., 11962., 12348., 19424., 20006., 17772., 18354., 18936., 19518., 20100., 20682., 18768., 19350., 16860., 17442., 18024., 18606., 25822., 26600., 23666., 24444., 25222., 26000., 26778., 27556., 24942., 25720., 22530., 23308., 24086., 24864.,  4060.,  4266.,  3896.,  4102.,  4308.,  4514.,  4720.,  4926.,  4940.,  5146.,  4584.,  4790.,  4996.,  5202.,  9370.,  9644.,  8510.,  8784.,  9058.,  9332.,  9606.,  9880.,  9066.,  9340.,  7950.,  8224.,  8498.,  8772., 15768., 16238., 14404., 14874., 15344., 15814., 16284., 16754., 15240., 15710., 13620., 14090., 14560., 15030., 22166., 22832., 20298., 20964., 21630., 22296., 22962., 23628., 21414., 22080., 19290., 19956., 20622., 21288., 19860., 20466., 16976., 17582., 18188., 18794., 19400., 20006., 16836., 17442., 17728., 18334., 18940., 19546.,  5714.,  5876.,  5142.,  5304.,  5466.,  5628.,  5790.,  5952.,  5538.,  5700.,  4710.,  4872.,  5034.,  5196.};
  const int batches = 1;
  const int m = 15;
  const int k = 14;
  const int n = 14;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M15xK14xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3260.,  3366.,  3472.,  3578.,  3364.,  3470.,  3576.,  3682.,  3212.,  3318.,  3424.,  3530.,  2804.,  2910.,  3016.,  9141.,  9443.,  9745., 10047.,  9133.,  9435.,  9737., 10039.,  8869.,  9171.,  9473.,  9775.,  8349.,  8651.,  8953., 15022., 15520., 16018., 16516., 14902., 15400., 15898., 16396., 14526., 15024., 15522., 16020., 13894., 14392., 14890., 20903., 21597., 22291., 22985., 20671., 21365., 22059., 22753., 20183., 20877., 21571., 22265., 19439., 20133., 20827., 15072., 15578., 16084., 16590., 13128., 13634., 14140., 14646., 15088., 15594., 16100., 16606., 16792., 17298., 17804.,  5785.,  5975.,  6165.,  6355.,  5841.,  6031.,  6221.,  6411.,  5641.,  5831.,  6021.,  6211.,  5185.,  5375.,  5565., 11666., 12052., 12438., 12824., 11610., 11996., 12382., 12768., 11298., 11684., 12070., 12456., 10730., 11116., 11502., 17547., 18129., 18711., 19293., 17379., 17961., 18543., 19125., 16955., 17537., 18119., 18701., 16275., 16857., 17439., 23428., 24206., 24984., 25762., 23148., 23926., 24704., 25482., 22548., 23326., 24104., 24882., 21756., 22534., 23312.,  3517.,  3723.,  3929.,  4135.,  4149.,  4355.,  4561.,  4767.,  4525.,  4731.,  4937.,  5143.,  4645.,  4851.,  5057.,  8310.,  8584.,  8858.,  9132.,  8318.,  8592.,  8866.,  9140.,  8070.,  8344.,  8618.,  8892.,  7566.,  7840.,  8114., 14191., 14661., 15131., 15601., 14087., 14557., 15027., 15497., 13727., 14197., 14667., 15137., 13111., 13581., 14051., 20072., 20738., 21404., 22070., 19856., 20522., 21188., 21854., 19384., 20050., 20716., 21382., 18592., 19258., 19924., 18337., 18943., 19549., 20155., 16985., 17591., 18197., 18803., 15377., 15983., 16589., 17195., 17609., 18215., 18821.,  4954.,  5116.,  5278.,  5440.,  5026.,  5188.,  5350.,  5512.,  4842.,  5004.,  5166.,  5328.,  4402.,  4564.,  4726.};
  const int batches = 1;
  const int m = 15;
  const int k = 14;
  const int n = 15;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M15xK14xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2442.,  2548.,  2654.,  2760.,  2866.,  2972.,  3078.,  3184.,  3290.,  3396.,  3502.,  3608.,  3714.,  3820.,  3926.,  4032.,  6910.,  7212.,  7514.,  7816.,  8118.,  8420.,  8722.,  9024.,  9326.,  9628.,  9930., 10232., 10534., 10836., 11138., 11440., 11378., 11876., 12374., 12872., 13370., 13868., 14366., 14864., 15362., 15860., 16358., 16856., 17354., 17852., 18350., 18848., 15846., 16540., 17234., 17928., 18622., 19316., 20010., 20704., 21398., 22092., 22786., 23480., 24174., 24868., 25562., 26256., 12698., 13204., 13710., 14216., 14722., 15228., 15734., 16240., 16746., 17252., 17758., 18264., 18770., 19276., 19782., 20288.,  4366.,  4556.,  4746.,  4936.,  5126.,  5316.,  5506.,  5696.,  5886.,  6076.,  6266.,  6456.,  6646.,  6836.,  7026.,  7216.,  8834.,  9220.,  9606.,  9992., 10378., 10764., 11150., 11536., 11922., 12308., 12694., 13080., 13466., 13852., 14238., 14624., 13302., 13884., 14466., 15048., 15630., 16212., 16794., 17376., 17958., 18540., 19122., 19704., 20286., 20868., 21450., 22032., 17706., 18484., 19262., 20040., 20818., 21596., 22374., 23152., 23930., 24708., 25486., 26264., 27042., 27820., 28598., 29376.,  2974.,  3180.,  3386.,  3592.,  3798.,  4004.,  4210.,  4416.,  4622.,  4828.,  5034.,  5240.,  5446.,  5652.,  5858.,  6064.,  6290.,  6564.,  6838.,  7112.,  7386.,  7660.,  7934.,  8208.,  8482.,  8756.,  9030.,  9304.,  9578.,  9852., 10126., 10400., 10758., 11228., 11698., 12168., 12638., 13108., 13578., 14048., 14518., 14988., 15458., 15928., 16398., 16868., 17338., 17808., 15162., 15828., 16494., 17160., 17826., 18492., 19158., 19824., 20490., 21156., 21822., 22488., 23154., 23820., 24486., 25152., 13230., 13836., 14442., 15048., 15654., 16260., 16866., 17472., 18078., 18684., 19290., 19896., 20502., 21108., 21714., 22320.,  3746.,  3908.,  4070.,  4232.,  4394.,  4556.,  4718.,  4880.,  5042.,  5204.,  5366.,  5528.,  5690.,  5852.,  6014.,  6176.};
  const int batches = 1;
  const int m = 15;
  const int k = 14;
  const int n = 16;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M15xK15xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3961.,  4082.,  3563.,  3684.,  3805.,  3926.,  4047.,  4168.,  3969.,  4090.,  3315.,  3436.,  3557.,  3678., 10890., 11236.,  9982., 10328., 10674., 11020., 11366., 11712., 10778., 11124.,  9614.,  9960., 10306., 10652., 17819., 18390., 16401., 16972., 17543., 18114., 18685., 19256., 17587., 18158., 15913., 16484., 17055., 17626., 24748., 25544., 22820., 23616., 24412., 25208., 26004., 26800., 24396., 25192., 22212., 23008., 23804., 24600.,  7805.,  8122.,  8055.,  8372.,  8689.,  9006.,  9323.,  9640.,  9829., 10146.,  9823., 10140., 10457., 10774.,  9038.,  9324.,  8266.,  8552.,  8838.,  9124.,  9410.,  9696.,  8958.,  9244.,  7930.,  8216.,  8502.,  8788., 15967., 16478., 14685., 15196., 15707., 16218., 16729., 17240., 15767., 16278., 14229., 14740., 15251., 15762., 22896., 23632., 21104., 21840., 22576., 23312., 24048., 24784., 22576., 23312., 20528., 21264., 22000., 22736., 13633., 14146., 14531., 15044., 15557., 16070., 16583., 17096., 13705., 14218., 14347., 14860., 15373., 15886.,  7250.,  7476.,  6550.,  6776.,  7002.,  7228.,  7454.,  7680.,  7138.,  7364.,  6246.,  6472.,  6698.,  6924., 14115., 14566., 12969., 13420., 13871., 14322., 14773., 15224., 13947., 14398., 12545., 12996., 13447., 13898., 21044., 21720., 19388., 20064., 20740., 21416., 22092., 22768., 20756., 21432., 18844., 19520., 20196., 20872., 21509., 22218., 18959., 19668., 20377., 21086., 21795., 22504., 19565., 20274., 20855., 21564., 22273., 22982.,  5398.,  5564.,  4898.,  5064.,  5230.,  5396.,  5562.,  5728.,  5382.,  5548.,  4562.,  4728.,  4894.,  5060., 12263., 12654., 11253., 11644., 12035., 12426., 12817., 13208., 12127., 12518., 10861., 11252., 11643., 12034.};
  const int batches = 1;
  const int m = 15;
  const int k = 15;
  const int n = 14;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M15xK15xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3545.,  3666.,  3787.,  3908.,  3709.,  3830.,  3951.,  4072.,  3617.,  3738.,  3859.,  3980.,  3269.,  3390.,  3511., 10130., 10476., 10822., 11168., 10234., 10580., 10926., 11272., 10082., 10428., 10774., 11120.,  9674., 10020., 10366., 16715., 17286., 17857., 18428., 16759., 17330., 17901., 18472., 16547., 17118., 17689., 18260., 16079., 16650., 17221., 23300., 24096., 24892., 25688., 23284., 24080., 24876., 25672., 23012., 23808., 24604., 25400., 22484., 23280., 24076.,  7869.,  8186.,  8503.,  8820.,  9009.,  9326.,  9643.,  9960.,  9957., 10274., 10591., 10908., 10649., 10966., 11283.,  8374.,  8660.,  8946.,  9232.,  8494.,  8780.,  9066.,  9352.,  8358.,  8644.,  8930.,  9216.,  7966.,  8252.,  8538., 14959., 15470., 15981., 16492., 15019., 15530., 16041., 16552., 14823., 15334., 15845., 16356., 14371., 14882., 15393., 21544., 22280., 23016., 23752., 21544., 22280., 23016., 23752., 21288., 22024., 22760., 23496., 20776., 21512., 22248., 15201., 15714., 16227., 16740., 13349., 13862., 14375., 14888., 15273., 15786., 16299., 16812., 17005., 17518., 18031.,  6618.,  6844.,  7070.,  7296.,  6754.,  6980.,  7206.,  7432.,  6634.,  6860.,  7086.,  7312.,  6258.,  6484.,  6710., 13203., 13654., 14105., 14556., 13279., 13730., 14181., 14632., 13099., 13550., 14001., 14452., 12663., 13114., 13565., 19788., 20464., 21140., 21816., 19804., 20480., 21156., 21832., 19564., 20240., 20916., 21592., 19068., 19744., 20420., 21509., 22218., 22927., 23636., 20697., 21406., 22115., 22824., 19629., 20338., 21047., 21756., 22337., 23046., 23755.,  4862.,  5028.,  5194.,  5360.,  5014.,  5180.,  5346.,  5512.,  4910.,  5076.,  5242.,  5408.,  4550.,  4716.,  4882., 11447., 11838., 12229., 12620., 11539., 11930., 12321., 12712., 11375., 11766., 12157., 12548., 10955., 11346., 11737.};
  const int batches = 1;
  const int m = 15;
  const int k = 15;
  const int n = 15;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M15xK15xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2937.,  3058.,  3179.,  3300.,  3421.,  3542.,  3663.,  3784.,  3905.,  4026.,  4147.,  4268.,  4389.,  4510.,  4631.,  4752.,  8218.,  8564.,  8910.,  9256.,  9602.,  9948., 10294., 10640., 10986., 11332., 11678., 12024., 12370., 12716., 13062., 13408., 13499., 14070., 14641., 15212., 15783., 16354., 16925., 17496., 18067., 18638., 19209., 19780., 20351., 20922., 21493., 22064., 18780., 19576., 20372., 21168., 21964., 22760., 23556., 24352., 25148., 25944., 26740., 27536., 28332., 29128., 29924., 30720.,  7933.,  8250.,  8567.,  8884.,  9201.,  9518.,  9835., 10152., 10469., 10786., 11103., 11420., 11737., 12054., 12371., 12688.,  6814.,  7100.,  7386.,  7672.,  7958.,  8244.,  8530.,  8816.,  9102.,  9388.,  9674.,  9960., 10246., 10532., 10818., 11104., 12095., 12606., 13117., 13628., 14139., 14650., 15161., 15672., 16183., 16694., 17205., 17716., 18227., 18738., 19249., 19760., 17376., 18112., 18848., 19584., 20320., 21056., 21792., 22528., 23264., 24000., 24736., 25472., 26208., 26944., 27680., 28416., 12929., 13442., 13955., 14468., 14981., 15494., 16007., 16520., 17033., 17546., 18059., 18572., 19085., 19598., 20111., 20624.,  5410.,  5636.,  5862.,  6088.,  6314.,  6540.,  6766.,  6992.,  7218.,  7444.,  7670.,  7896.,  8122.,  8348.,  8574.,  8800., 10691., 11142., 11593., 12044., 12495., 12946., 13397., 13848., 14299., 14750., 15201., 15652., 16103., 16554., 17005., 17456., 15972., 16648., 17324., 18000., 18676., 19352., 20028., 20704., 21380., 22056., 22732., 23408., 24084., 24760., 25436., 26112., 17925., 18634., 19343., 20052., 20761., 21470., 22179., 22888., 23597., 24306., 25015., 25724., 26433., 27142., 27851., 28560.,  4006.,  4172.,  4338.,  4504.,  4670.,  4836.,  5002.,  5168.,  5334.,  5500.,  5666.,  5832.,  5998.,  6164.,  6330.,  6496.,  9287.,  9678., 10069., 10460., 10851., 11242., 11633., 12024., 12415., 12806., 13197., 13588., 13979., 14370., 14761., 15152.};
  const int batches = 1;
  const int m = 15;
  const int k = 15;
  const int n = 16;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M15xK16xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4265.,  4402.,  3899.,  4036.,  4173.,  4310.,  4447.,  4584.,  4401.,  4538.,  3779.,  3916.,  4053.,  4190., 11959., 12352., 11081., 11474., 11867., 12260., 12653., 13046., 12095., 12488., 10961., 11354., 11747., 12140., 19653., 20302., 18263., 18912., 19561., 20210., 20859., 21508., 19789., 20438., 18143., 18792., 19441., 20090., 27347., 28252., 25445., 26350., 27255., 28160., 29065., 29970., 27483., 28388., 25325., 26230., 27135., 28040.,  4321.,  4458.,  3955.,  4092.,  4229.,  4366.,  4503.,  4640.,  4393.,  4530.,  3771.,  3908.,  4045.,  4182., 11951., 12344., 11073., 11466., 11859., 12252., 12645., 13038., 12087., 12480., 10953., 11346., 11739., 12132., 19645., 20294., 18255., 18904., 19553., 20202., 20851., 21500., 19781., 20430., 18135., 18784., 19433., 20082., 27339., 28244., 25437., 26342., 27247., 28152., 29057., 29962., 27475., 28380., 25317., 26222., 27127., 28032.,  4313.,  4450.,  3947.,  4084.,  4221.,  4358.,  4495.,  4632.,  4449.,  4586.,  3827.,  3964.,  4101.,  4238., 12007., 12400., 11065., 11458., 11851., 12244., 12637., 13030., 12079., 12472., 10945., 11338., 11731., 12124., 19637., 20286., 18247., 18896., 19545., 20194., 20843., 21492., 19773., 20422., 18127., 18776., 19425., 20074., 27331., 28236., 25429., 26334., 27239., 28144., 29049., 29954., 27467., 28372., 25309., 26214., 27119., 28024.,  4305.,  4442.,  3939.,  4076.,  4213.,  4350.,  4487.,  4624.,  4441.,  4578.,  3819.,  3956.,  4093.,  4230., 11999., 12392., 11121., 11514., 11907., 12300., 12693., 13086., 12135., 12528., 10937., 11330., 11723., 12116., 19629., 20278., 18239., 18888., 19537., 20186., 20835., 21484., 19765., 20414., 18119., 18768., 19417., 20066.};
  const int batches = 1;
  const int m = 15;
  const int k = 16;
  const int n = 14;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M15xK16xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4089.,  4226.,  4363.,  4500.,  4317.,  4454.,  4591.,  4728.,  4289.,  4426.,  4563.,  4700.,  4005.,  4142.,  4279., 11656., 12049., 12442., 12835., 11884., 12277., 12670., 13063., 11856., 12249., 12642., 13035., 11572., 11965., 12358., 19223., 19872., 20521., 21170., 19451., 20100., 20749., 21398., 19423., 20072., 20721., 21370., 19139., 19788., 20437., 26790., 27695., 28600., 29505., 27018., 27923., 28828., 29733., 26990., 27895., 28800., 29705., 26706., 27611., 28516.,  4149.,  4286.,  4423.,  4560.,  4313.,  4450.,  4587.,  4724.,  4285.,  4422.,  4559.,  4696.,  4001.,  4138.,  4275., 11652., 12045., 12438., 12831., 11880., 12273., 12666., 13059., 11852., 12245., 12638., 13031., 11568., 11961., 12354., 19219., 19868., 20517., 21166., 19447., 20096., 20745., 21394., 19419., 20068., 20717., 21366., 19135., 19784., 20433., 26786., 27691., 28596., 29501., 27014., 27919., 28824., 29729., 26986., 27891., 28796., 29701., 26702., 27607., 28512.,  4145.,  4282.,  4419.,  4556.,  4373.,  4510.,  4647.,  4784.,  4281.,  4418.,  4555.,  4692.,  3997.,  4134.,  4271., 11648., 12041., 12434., 12827., 11876., 12269., 12662., 13055., 11848., 12241., 12634., 13027., 11564., 11957., 12350., 19215., 19864., 20513., 21162., 19443., 20092., 20741., 21390., 19415., 20064., 20713., 21362., 19131., 19780., 20429., 26782., 27687., 28592., 29497., 27010., 27915., 28820., 29725., 26982., 27887., 28792., 29697., 26698., 27603., 28508.,  4141.,  4278.,  4415.,  4552.,  4369.,  4506.,  4643.,  4780.,  4341.,  4478.,  4615.,  4752.,  3993.,  4130.,  4267., 11644., 12037., 12430., 12823., 11872., 12265., 12658., 13051., 11844., 12237., 12630., 13023., 11560., 11953., 12346., 19211., 19860., 20509., 21158., 19439., 20088., 20737., 21386., 19411., 20060., 20709., 21358., 19127., 19776., 20425.};
  const int batches = 1;
  const int m = 15;
  const int k = 16;
  const int n = 15;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M15xK16xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3721.,  3858.,  3995.,  4132.,  4269.,  4406.,  4543.,  4680.,  4817.,  4954.,  5091.,  5228.,  5365.,  5502.,  5639.,  5776., 10137., 10530., 10923., 11316., 11709., 12102., 12495., 12888., 13281., 13674., 14067., 14460., 14853., 15246., 15639., 16032., 16553., 17202., 17851., 18500., 19149., 19798., 20447., 21096., 21745., 22394., 23043., 23692., 24341., 24990., 25639., 26288., 22969., 23874., 24779., 25684., 26589., 27494., 28399., 29304., 30209., 31114., 32019., 32924., 33829., 34734., 35639., 36544.,  3721.,  3858.,  3995.,  4132.,  4269.,  4406.,  4543.,  4680.,  4817.,  4954.,  5091.,  5228.,  5365.,  5502.,  5639.,  5776., 10137., 10530., 10923., 11316., 11709., 12102., 12495., 12888., 13281., 13674., 14067., 14460., 14853., 15246., 15639., 16032., 16553., 17202., 17851., 18500., 19149., 19798., 20447., 21096., 21745., 22394., 23043., 23692., 24341., 24990., 25639., 26288., 22969., 23874., 24779., 25684., 26589., 27494., 28399., 29304., 30209., 31114., 32019., 32924., 33829., 34734., 35639., 36544.,  3721.,  3858.,  3995.,  4132.,  4269.,  4406.,  4543.,  4680.,  4817.,  4954.,  5091.,  5228.,  5365.,  5502.,  5639.,  5776., 10137., 10530., 10923., 11316., 11709., 12102., 12495., 12888., 13281., 13674., 14067., 14460., 14853., 15246., 15639., 16032., 16553., 17202., 17851., 18500., 19149., 19798., 20447., 21096., 21745., 22394., 23043., 23692., 24341., 24990., 25639., 26288., 22969., 23874., 24779., 25684., 26589., 27494., 28399., 29304., 30209., 31114., 32019., 32924., 33829., 34734., 35639., 36544.,  3721.,  3858.,  3995.,  4132.,  4269.,  4406.,  4543.,  4680.,  4817.,  4954.,  5091.,  5228.,  5365.,  5502.,  5639.,  5776., 10137., 10530., 10923., 11316., 11709., 12102., 12495., 12888., 13281., 13674., 14067., 14460., 14853., 15246., 15639., 16032., 16553., 17202., 17851., 18500., 19149., 19798., 20447., 21096., 21745., 22394., 23043., 23692., 24341., 24990., 25639., 26288.};
  const int batches = 1;
  const int m = 15;
  const int k = 16;
  const int n = 16;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M16xK14xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3886.,  3992.,  3458.,  3564.,  3670.,  3776.,  3882.,  3988.,  3774.,  3880.,  3090.,  3196.,  3302.,  3408., 10284., 10586.,  9352.,  9654.,  9956., 10258., 10560., 10862.,  9948., 10250.,  8760.,  9062.,  9364.,  9666., 16682., 17180., 15246., 15744., 16242., 16740., 17238., 17736., 16122., 16620., 14430., 14928., 15426., 15924., 23080., 23774., 21140., 21834., 22528., 23222., 23916., 24610., 22296., 22990., 20100., 20794., 21488., 22182., 13606., 14112., 14490., 14996., 15502., 16008., 16514., 17020., 13558., 14064., 14186., 14692., 15198., 15704.,  6628.,  6818.,  5984.,  6174.,  6364.,  6554.,  6744.,  6934.,  6420.,  6610.,  5520.,  5710.,  5900.,  6090., 13026., 13412., 11878., 12264., 12650., 13036., 13422., 13808., 12594., 12980., 11190., 11576., 11962., 12348., 19424., 20006., 17772., 18354., 18936., 19518., 20100., 20682., 18768., 19350., 16860., 17442., 18024., 18606., 25822., 26600., 23666., 24444., 25222., 26000., 26778., 27556., 24942., 25720., 22530., 23308., 24086., 24864.,  4060.,  4266.,  3896.,  4102.,  4308.,  4514.,  4720.,  4926.,  4940.,  5146.,  4584.,  4790.,  4996.,  5202.,  9370.,  9644.,  8510.,  8784.,  9058.,  9332.,  9606.,  9880.,  9066.,  9340.,  7950.,  8224.,  8498.,  8772., 15768., 16238., 14404., 14874., 15344., 15814., 16284., 16754., 15240., 15710., 13620., 14090., 14560., 15030., 22166., 22832., 20298., 20964., 21630., 22296., 22962., 23628., 21414., 22080., 19290., 19956., 20622., 21288., 19860., 20466., 16976., 17582., 18188., 18794., 19400., 20006., 16836., 17442., 17728., 18334., 18940., 19546.,  5714.,  5876.,  5142.,  5304.,  5466.,  5628.,  5790.,  5952.,  5538.,  5700.,  4710.,  4872.,  5034.,  5196., 12112., 12470., 11036., 11394., 11752., 12110., 12468., 12826., 11712., 12070., 10380., 10738., 11096., 11454.};
  const int batches = 1;
  const int m = 16;
  const int k = 14;
  const int n = 14;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M16xK14xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3260.,  3366.,  3472.,  3578.,  3364.,  3470.,  3576.,  3682.,  3212.,  3318.,  3424.,  3530.,  2804.,  2910.,  3016.,  9141.,  9443.,  9745., 10047.,  9133.,  9435.,  9737., 10039.,  8869.,  9171.,  9473.,  9775.,  8349.,  8651.,  8953., 15022., 15520., 16018., 16516., 14902., 15400., 15898., 16396., 14526., 15024., 15522., 16020., 13894., 14392., 14890., 20903., 21597., 22291., 22985., 20671., 21365., 22059., 22753., 20183., 20877., 21571., 22265., 19439., 20133., 20827., 15072., 15578., 16084., 16590., 13128., 13634., 14140., 14646., 15088., 15594., 16100., 16606., 16792., 17298., 17804.,  5785.,  5975.,  6165.,  6355.,  5841.,  6031.,  6221.,  6411.,  5641.,  5831.,  6021.,  6211.,  5185.,  5375.,  5565., 11666., 12052., 12438., 12824., 11610., 11996., 12382., 12768., 11298., 11684., 12070., 12456., 10730., 11116., 11502., 17547., 18129., 18711., 19293., 17379., 17961., 18543., 19125., 16955., 17537., 18119., 18701., 16275., 16857., 17439., 23428., 24206., 24984., 25762., 23148., 23926., 24704., 25482., 22548., 23326., 24104., 24882., 21756., 22534., 23312.,  3517.,  3723.,  3929.,  4135.,  4149.,  4355.,  4561.,  4767.,  4525.,  4731.,  4937.,  5143.,  4645.,  4851.,  5057.,  8310.,  8584.,  8858.,  9132.,  8318.,  8592.,  8866.,  9140.,  8070.,  8344.,  8618.,  8892.,  7566.,  7840.,  8114., 14191., 14661., 15131., 15601., 14087., 14557., 15027., 15497., 13727., 14197., 14667., 15137., 13111., 13581., 14051., 20072., 20738., 21404., 22070., 19856., 20522., 21188., 21854., 19384., 20050., 20716., 21382., 18592., 19258., 19924., 18337., 18943., 19549., 20155., 16985., 17591., 18197., 18803., 15377., 15983., 16589., 17195., 17609., 18215., 18821.,  4954.,  5116.,  5278.,  5440.,  5026.,  5188.,  5350.,  5512.,  4842.,  5004.,  5166.,  5328.,  4402.,  4564.,  4726., 10835., 11193., 11551., 11909., 10795., 11153., 11511., 11869., 10499., 10857., 11215., 11573.,  9947., 10305., 10663.};
  const int batches = 1;
  const int m = 16;
  const int k = 14;
  const int n = 15;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M16xK14xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2442.,  2548.,  2654.,  2760.,  2866.,  2972.,  3078.,  3184.,  3290.,  3396.,  3502.,  3608.,  3714.,  3820.,  3926.,  4032.,  6910.,  7212.,  7514.,  7816.,  8118.,  8420.,  8722.,  9024.,  9326.,  9628.,  9930., 10232., 10534., 10836., 11138., 11440., 11378., 11876., 12374., 12872., 13370., 13868., 14366., 14864., 15362., 15860., 16358., 16856., 17354., 17852., 18350., 18848., 15846., 16540., 17234., 17928., 18622., 19316., 20010., 20704., 21398., 22092., 22786., 23480., 24174., 24868., 25562., 26256., 12698., 13204., 13710., 14216., 14722., 15228., 15734., 16240., 16746., 17252., 17758., 18264., 18770., 19276., 19782., 20288.,  4366.,  4556.,  4746.,  4936.,  5126.,  5316.,  5506.,  5696.,  5886.,  6076.,  6266.,  6456.,  6646.,  6836.,  7026.,  7216.,  8834.,  9220.,  9606.,  9992., 10378., 10764., 11150., 11536., 11922., 12308., 12694., 13080., 13466., 13852., 14238., 14624., 13302., 13884., 14466., 15048., 15630., 16212., 16794., 17376., 17958., 18540., 19122., 19704., 20286., 20868., 21450., 22032., 17706., 18484., 19262., 20040., 20818., 21596., 22374., 23152., 23930., 24708., 25486., 26264., 27042., 27820., 28598., 29376.,  2974.,  3180.,  3386.,  3592.,  3798.,  4004.,  4210.,  4416.,  4622.,  4828.,  5034.,  5240.,  5446.,  5652.,  5858.,  6064.,  6290.,  6564.,  6838.,  7112.,  7386.,  7660.,  7934.,  8208.,  8482.,  8756.,  9030.,  9304.,  9578.,  9852., 10126., 10400., 10758., 11228., 11698., 12168., 12638., 13108., 13578., 14048., 14518., 14988., 15458., 15928., 16398., 16868., 17338., 17808., 15162., 15828., 16494., 17160., 17826., 18492., 19158., 19824., 20490., 21156., 21822., 22488., 23154., 23820., 24486., 25152., 13230., 13836., 14442., 15048., 15654., 16260., 16866., 17472., 18078., 18684., 19290., 19896., 20502., 21108., 21714., 22320.,  3746.,  3908.,  4070.,  4232.,  4394.,  4556.,  4718.,  4880.,  5042.,  5204.,  5366.,  5528.,  5690.,  5852.,  6014.,  6176.,  8214.,  8572.,  8930.,  9288.,  9646., 10004., 10362., 10720., 11078., 11436., 11794., 12152., 12510., 12868., 13226., 13584.};
  const int batches = 1;
  const int m = 16;
  const int k = 14;
  const int n = 16;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M16xK15xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3961.,  4082.,  3563.,  3684.,  3805.,  3926.,  4047.,  4168.,  3969.,  4090.,  3315.,  3436.,  3557.,  3678., 10890., 11236.,  9982., 10328., 10674., 11020., 11366., 11712., 10778., 11124.,  9614.,  9960., 10306., 10652., 17819., 18390., 16401., 16972., 17543., 18114., 18685., 19256., 17587., 18158., 15913., 16484., 17055., 17626., 24748., 25544., 22820., 23616., 24412., 25208., 26004., 26800., 24396., 25192., 22212., 23008., 23804., 24600.,  7805.,  8122.,  8055.,  8372.,  8689.,  9006.,  9323.,  9640.,  9829., 10146.,  9823., 10140., 10457., 10774.,  9038.,  9324.,  8266.,  8552.,  8838.,  9124.,  9410.,  9696.,  8958.,  9244.,  7930.,  8216.,  8502.,  8788., 15967., 16478., 14685., 15196., 15707., 16218., 16729., 17240., 15767., 16278., 14229., 14740., 15251., 15762., 22896., 23632., 21104., 21840., 22576., 23312., 24048., 24784., 22576., 23312., 20528., 21264., 22000., 22736., 13633., 14146., 14531., 15044., 15557., 16070., 16583., 17096., 13705., 14218., 14347., 14860., 15373., 15886.,  7250.,  7476.,  6550.,  6776.,  7002.,  7228.,  7454.,  7680.,  7138.,  7364.,  6246.,  6472.,  6698.,  6924., 14115., 14566., 12969., 13420., 13871., 14322., 14773., 15224., 13947., 14398., 12545., 12996., 13447., 13898., 21044., 21720., 19388., 20064., 20740., 21416., 22092., 22768., 20756., 21432., 18844., 19520., 20196., 20872., 21509., 22218., 18959., 19668., 20377., 21086., 21795., 22504., 19565., 20274., 20855., 21564., 22273., 22982.,  5398.,  5564.,  4898.,  5064.,  5230.,  5396.,  5562.,  5728.,  5382.,  5548.,  4562.,  4728.,  4894.,  5060., 12263., 12654., 11253., 11644., 12035., 12426., 12817., 13208., 12127., 12518., 10861., 11252., 11643., 12034., 19192., 19808., 17672., 18288., 18904., 19520., 20136., 20752., 18936., 19552., 17160., 17776., 18392., 19008.};
  const int batches = 1;
  const int m = 16;
  const int k = 15;
  const int n = 14;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M16xK15xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3545.,  3666.,  3787.,  3908.,  3709.,  3830.,  3951.,  4072.,  3617.,  3738.,  3859.,  3980.,  3269.,  3390.,  3511., 10130., 10476., 10822., 11168., 10234., 10580., 10926., 11272., 10082., 10428., 10774., 11120.,  9674., 10020., 10366., 16715., 17286., 17857., 18428., 16759., 17330., 17901., 18472., 16547., 17118., 17689., 18260., 16079., 16650., 17221., 23300., 24096., 24892., 25688., 23284., 24080., 24876., 25672., 23012., 23808., 24604., 25400., 22484., 23280., 24076.,  7869.,  8186.,  8503.,  8820.,  9009.,  9326.,  9643.,  9960.,  9957., 10274., 10591., 10908., 10649., 10966., 11283.,  8374.,  8660.,  8946.,  9232.,  8494.,  8780.,  9066.,  9352.,  8358.,  8644.,  8930.,  9216.,  7966.,  8252.,  8538., 14959., 15470., 15981., 16492., 15019., 15530., 16041., 16552., 14823., 15334., 15845., 16356., 14371., 14882., 15393., 21544., 22280., 23016., 23752., 21544., 22280., 23016., 23752., 21288., 22024., 22760., 23496., 20776., 21512., 22248., 15201., 15714., 16227., 16740., 13349., 13862., 14375., 14888., 15273., 15786., 16299., 16812., 17005., 17518., 18031.,  6618.,  6844.,  7070.,  7296.,  6754.,  6980.,  7206.,  7432.,  6634.,  6860.,  7086.,  7312.,  6258.,  6484.,  6710., 13203., 13654., 14105., 14556., 13279., 13730., 14181., 14632., 13099., 13550., 14001., 14452., 12663., 13114., 13565., 19788., 20464., 21140., 21816., 19804., 20480., 21156., 21832., 19564., 20240., 20916., 21592., 19068., 19744., 20420., 21509., 22218., 22927., 23636., 20697., 21406., 22115., 22824., 19629., 20338., 21047., 21756., 22337., 23046., 23755.,  4862.,  5028.,  5194.,  5360.,  5014.,  5180.,  5346.,  5512.,  4910.,  5076.,  5242.,  5408.,  4550.,  4716.,  4882., 11447., 11838., 12229., 12620., 11539., 11930., 12321., 12712., 11375., 11766., 12157., 12548., 10955., 11346., 11737., 18032., 18648., 19264., 19880., 18064., 18680., 19296., 19912., 17840., 18456., 19072., 19688., 17360., 17976., 18592.};
  const int batches = 1;
  const int m = 16;
  const int k = 15;
  const int n = 15;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M16xK15xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2937.,  3058.,  3179.,  3300.,  3421.,  3542.,  3663.,  3784.,  3905.,  4026.,  4147.,  4268.,  4389.,  4510.,  4631.,  4752.,  8218.,  8564.,  8910.,  9256.,  9602.,  9948., 10294., 10640., 10986., 11332., 11678., 12024., 12370., 12716., 13062., 13408., 13499., 14070., 14641., 15212., 15783., 16354., 16925., 17496., 18067., 18638., 19209., 19780., 20351., 20922., 21493., 22064., 18780., 19576., 20372., 21168., 21964., 22760., 23556., 24352., 25148., 25944., 26740., 27536., 28332., 29128., 29924., 30720.,  7933.,  8250.,  8567.,  8884.,  9201.,  9518.,  9835., 10152., 10469., 10786., 11103., 11420., 11737., 12054., 12371., 12688.,  6814.,  7100.,  7386.,  7672.,  7958.,  8244.,  8530.,  8816.,  9102.,  9388.,  9674.,  9960., 10246., 10532., 10818., 11104., 12095., 12606., 13117., 13628., 14139., 14650., 15161., 15672., 16183., 16694., 17205., 17716., 18227., 18738., 19249., 19760., 17376., 18112., 18848., 19584., 20320., 21056., 21792., 22528., 23264., 24000., 24736., 25472., 26208., 26944., 27680., 28416., 12929., 13442., 13955., 14468., 14981., 15494., 16007., 16520., 17033., 17546., 18059., 18572., 19085., 19598., 20111., 20624.,  5410.,  5636.,  5862.,  6088.,  6314.,  6540.,  6766.,  6992.,  7218.,  7444.,  7670.,  7896.,  8122.,  8348.,  8574.,  8800., 10691., 11142., 11593., 12044., 12495., 12946., 13397., 13848., 14299., 14750., 15201., 15652., 16103., 16554., 17005., 17456., 15972., 16648., 17324., 18000., 18676., 19352., 20028., 20704., 21380., 22056., 22732., 23408., 24084., 24760., 25436., 26112., 17925., 18634., 19343., 20052., 20761., 21470., 22179., 22888., 23597., 24306., 25015., 25724., 26433., 27142., 27851., 28560.,  4006.,  4172.,  4338.,  4504.,  4670.,  4836.,  5002.,  5168.,  5334.,  5500.,  5666.,  5832.,  5998.,  6164.,  6330.,  6496.,  9287.,  9678., 10069., 10460., 10851., 11242., 11633., 12024., 12415., 12806., 13197., 13588., 13979., 14370., 14761., 15152., 14568., 15184., 15800., 16416., 17032., 17648., 18264., 18880., 19496., 20112., 20728., 21344., 21960., 22576., 23192., 23808.};
  const int batches = 1;
  const int m = 16;
  const int k = 15;
  const int n = 16;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M16xK16xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4265.,  4402.,  3899.,  4036.,  4173.,  4310.,  4447.,  4584.,  4401.,  4538.,  3779.,  3916.,  4053.,  4190., 11959., 12352., 11081., 11474., 11867., 12260., 12653., 13046., 12095., 12488., 10961., 11354., 11747., 12140., 19653., 20302., 18263., 18912., 19561., 20210., 20859., 21508., 19789., 20438., 18143., 18792., 19441., 20090., 27347., 28252., 25445., 26350., 27255., 28160., 29065., 29970., 27483., 28388., 25325., 26230., 27135., 28040.,  4321.,  4458.,  3955.,  4092.,  4229.,  4366.,  4503.,  4640.,  4393.,  4530.,  3771.,  3908.,  4045.,  4182., 11951., 12344., 11073., 11466., 11859., 12252., 12645., 13038., 12087., 12480., 10953., 11346., 11739., 12132., 19645., 20294., 18255., 18904., 19553., 20202., 20851., 21500., 19781., 20430., 18135., 18784., 19433., 20082., 27339., 28244., 25437., 26342., 27247., 28152., 29057., 29962., 27475., 28380., 25317., 26222., 27127., 28032.,  4313.,  4450.,  3947.,  4084.,  4221.,  4358.,  4495.,  4632.,  4449.,  4586.,  3827.,  3964.,  4101.,  4238., 12007., 12400., 11065., 11458., 11851., 12244., 12637., 13030., 12079., 12472., 10945., 11338., 11731., 12124., 19637., 20286., 18247., 18896., 19545., 20194., 20843., 21492., 19773., 20422., 18127., 18776., 19425., 20074., 27331., 28236., 25429., 26334., 27239., 28144., 29049., 29954., 27467., 28372., 25309., 26214., 27119., 28024.,  4305.,  4442.,  3939.,  4076.,  4213.,  4350.,  4487.,  4624.,  4441.,  4578.,  3819.,  3956.,  4093.,  4230., 11999., 12392., 11121., 11514., 11907., 12300., 12693., 13086., 12135., 12528., 10937., 11330., 11723., 12116., 19629., 20278., 18239., 18888., 19537., 20186., 20835., 21484., 19765., 20414., 18119., 18768., 19417., 20066., 27323., 28228., 25421., 26326., 27231., 28136., 29041., 29946., 27459., 28364., 25301., 26206., 27111., 28016.};
  const int batches = 1;
  const int m = 16;
  const int k = 16;
  const int n = 14;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M16xK16xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4089.,  4226.,  4363.,  4500.,  4317.,  4454.,  4591.,  4728.,  4289.,  4426.,  4563.,  4700.,  4005.,  4142.,  4279., 11656., 12049., 12442., 12835., 11884., 12277., 12670., 13063., 11856., 12249., 12642., 13035., 11572., 11965., 12358., 19223., 19872., 20521., 21170., 19451., 20100., 20749., 21398., 19423., 20072., 20721., 21370., 19139., 19788., 20437., 26790., 27695., 28600., 29505., 27018., 27923., 28828., 29733., 26990., 27895., 28800., 29705., 26706., 27611., 28516.,  4149.,  4286.,  4423.,  4560.,  4313.,  4450.,  4587.,  4724.,  4285.,  4422.,  4559.,  4696.,  4001.,  4138.,  4275., 11652., 12045., 12438., 12831., 11880., 12273., 12666., 13059., 11852., 12245., 12638., 13031., 11568., 11961., 12354., 19219., 19868., 20517., 21166., 19447., 20096., 20745., 21394., 19419., 20068., 20717., 21366., 19135., 19784., 20433., 26786., 27691., 28596., 29501., 27014., 27919., 28824., 29729., 26986., 27891., 28796., 29701., 26702., 27607., 28512.,  4145.,  4282.,  4419.,  4556.,  4373.,  4510.,  4647.,  4784.,  4281.,  4418.,  4555.,  4692.,  3997.,  4134.,  4271., 11648., 12041., 12434., 12827., 11876., 12269., 12662., 13055., 11848., 12241., 12634., 13027., 11564., 11957., 12350., 19215., 19864., 20513., 21162., 19443., 20092., 20741., 21390., 19415., 20064., 20713., 21362., 19131., 19780., 20429., 26782., 27687., 28592., 29497., 27010., 27915., 28820., 29725., 26982., 27887., 28792., 29697., 26698., 27603., 28508.,  4141.,  4278.,  4415.,  4552.,  4369.,  4506.,  4643.,  4780.,  4341.,  4478.,  4615.,  4752.,  3993.,  4130.,  4267., 11644., 12037., 12430., 12823., 11872., 12265., 12658., 13051., 11844., 12237., 12630., 13023., 11560., 11953., 12346., 19211., 19860., 20509., 21158., 19439., 20088., 20737., 21386., 19411., 20060., 20709., 21358., 19127., 19776., 20425., 26778., 27683., 28588., 29493., 27006., 27911., 28816., 29721., 26978., 27883., 28788., 29693., 26694., 27599., 28504.};
  const int batches = 1;
  const int m = 16;
  const int k = 16;
  const int n = 15;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta1FalseFalse, M16xK16xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3721.,  3858.,  3995.,  4132.,  4269.,  4406.,  4543.,  4680.,  4817.,  4954.,  5091.,  5228.,  5365.,  5502.,  5639.,  5776., 10137., 10530., 10923., 11316., 11709., 12102., 12495., 12888., 13281., 13674., 14067., 14460., 14853., 15246., 15639., 16032., 16553., 17202., 17851., 18500., 19149., 19798., 20447., 21096., 21745., 22394., 23043., 23692., 24341., 24990., 25639., 26288., 22969., 23874., 24779., 25684., 26589., 27494., 28399., 29304., 30209., 31114., 32019., 32924., 33829., 34734., 35639., 36544.,  3721.,  3858.,  3995.,  4132.,  4269.,  4406.,  4543.,  4680.,  4817.,  4954.,  5091.,  5228.,  5365.,  5502.,  5639.,  5776., 10137., 10530., 10923., 11316., 11709., 12102., 12495., 12888., 13281., 13674., 14067., 14460., 14853., 15246., 15639., 16032., 16553., 17202., 17851., 18500., 19149., 19798., 20447., 21096., 21745., 22394., 23043., 23692., 24341., 24990., 25639., 26288., 22969., 23874., 24779., 25684., 26589., 27494., 28399., 29304., 30209., 31114., 32019., 32924., 33829., 34734., 35639., 36544.,  3721.,  3858.,  3995.,  4132.,  4269.,  4406.,  4543.,  4680.,  4817.,  4954.,  5091.,  5228.,  5365.,  5502.,  5639.,  5776., 10137., 10530., 10923., 11316., 11709., 12102., 12495., 12888., 13281., 13674., 14067., 14460., 14853., 15246., 15639., 16032., 16553., 17202., 17851., 18500., 19149., 19798., 20447., 21096., 21745., 22394., 23043., 23692., 24341., 24990., 25639., 26288., 22969., 23874., 24779., 25684., 26589., 27494., 28399., 29304., 30209., 31114., 32019., 32924., 33829., 34734., 35639., 36544.,  3721.,  3858.,  3995.,  4132.,  4269.,  4406.,  4543.,  4680.,  4817.,  4954.,  5091.,  5228.,  5365.,  5502.,  5639.,  5776., 10137., 10530., 10923., 11316., 11709., 12102., 12495., 12888., 13281., 13674., 14067., 14460., 14853., 15246., 15639., 16032., 16553., 17202., 17851., 18500., 19149., 19798., 20447., 21096., 21745., 22394., 23043., 23692., 24341., 24990., 25639., 26288., 22969., 23874., 24779., 25684., 26589., 27494., 28399., 29304., 30209., 31114., 32019., 32924., 33829., 34734., 35639., 36544.};
  const int batches = 1;
  const int m = 16;
  const int k = 16;
  const int n = 16;
  const auto beta = static_cast<DataType>(1);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}