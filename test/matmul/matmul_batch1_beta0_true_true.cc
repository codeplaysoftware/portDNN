/*
 * Copyright Codeplay Software Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use these files except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// DO NOT MODIFY BY HAND
// This file was automatically generated by generate_matmul_tests.py.
// Results calculated using Tensorflow v1.13.2.

#include <gtest/gtest.h>
#include <vector>

#include "test/matmul/fixture.h"
#include "test/types/kernel_data_types.h"
#include "test/types/to_gtest_types.h"


using DataTypeList = sycldnn::types::KernelDataTypes;
using GTestTypeList = sycldnn::types::ToGTestTypes<DataTypeList>::type;

template <typename DataType>
using MatmulBatch1Beta0TrueTrue = MatmulFixture<DataType, true, true>;
TYPED_TEST_SUITE(MatmulBatch1Beta0TrueTrue, GTestTypeList);
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M14xK14xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3885., 10269., 16653., 23037., 13549.,  6621., 13005., 19389., 25773.,  3997.,  9357., 15741., 22125., 19805.,  3990., 10570., 17150., 23730., 14054.,  6810., 13390., 19970., 26550.,  4202.,  9630., 16210., 22790., 20410.,  3455.,  9335., 15215., 21095., 14431.,  5975., 11855., 17735., 23615.,  3895.,  8495., 14375., 20255., 16919.,  3560.,  9636., 15712., 21788., 14936.,  6164., 12240., 18316., 24392.,  4100.,  8768., 14844., 20920., 17524.,  3665.,  9937., 16209., 22481., 15441.,  6353., 12625., 18897., 25169.,  4305.,  9041., 15313., 21585., 18129.,  3770., 10238., 16706., 23174., 15946.,  6542., 13010., 19478., 25946.,  4510.,  9314., 15782., 22250., 18734.,  3875., 10539., 17203., 23867., 16451.,  6731., 13395., 20059., 26723.,  4715.,  9587., 16251., 22915., 19339.,  3980., 10840., 17700., 24560., 16956.,  6920., 13780., 20640., 27500.,  4920.,  9860., 16720., 23580., 19944.,  3765.,  9925., 16085., 22245., 13557.,  6405., 12565., 18725., 24885.,  4933.,  9045., 15205., 21365., 16773.,  3870., 10226., 16582., 22938., 14062.,  6594., 12950., 19306., 25662.,  5138.,  9318., 15674., 22030., 17378.,  3079.,  8735., 14391., 20047., 14183.,  5503., 11159., 16815., 22471.,  4575.,  7927., 13583., 19239., 17727.,  3184.,  9036., 14888., 20740., 14688.,  5692., 11544., 17396., 23248.,  4780.,  8200., 14052., 19904., 18332.,  3289.,  9337., 15385., 21433., 15193.,  5881., 11929., 17977., 24025.,  4985.,  8473., 14521., 20569., 18937.,  3394.,  9638., 15882., 22126., 15698.,  6070., 12314., 18558., 24802.,  5190.,  8746., 14990., 21234., 19542.};
  const int batches = 1;
  const int m = 14;
  const int k = 14;
  const int n = 14;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M14xK14xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3885., 10269., 16653., 23037., 13549.,  6621., 13005., 19389., 25773.,  3997.,  9357., 15741., 22125., 19805.,  5709.,  3990., 10570., 17150., 23730., 14054.,  6810., 13390., 19970., 26550.,  4202.,  9630., 16210., 22790., 20410.,  5870.,  3455.,  9335., 15215., 21095., 14431.,  5975., 11855., 17735., 23615.,  3895.,  8495., 14375., 20255., 16919.,  5135.,  3560.,  9636., 15712., 21788., 14936.,  6164., 12240., 18316., 24392.,  4100.,  8768., 14844., 20920., 17524.,  5296.,  3665.,  9937., 16209., 22481., 15441.,  6353., 12625., 18897., 25169.,  4305.,  9041., 15313., 21585., 18129.,  5457.,  3770., 10238., 16706., 23174., 15946.,  6542., 13010., 19478., 25946.,  4510.,  9314., 15782., 22250., 18734.,  5618.,  3875., 10539., 17203., 23867., 16451.,  6731., 13395., 20059., 26723.,  4715.,  9587., 16251., 22915., 19339.,  5779.,  3980., 10840., 17700., 24560., 16956.,  6920., 13780., 20640., 27500.,  4920.,  9860., 16720., 23580., 19944.,  5940.,  3765.,  9925., 16085., 22245., 13557.,  6405., 12565., 18725., 24885.,  4933.,  9045., 15205., 21365., 16773.,  5525.,  3870., 10226., 16582., 22938., 14062.,  6594., 12950., 19306., 25662.,  5138.,  9318., 15674., 22030., 17378.,  5686.,  3079.,  8735., 14391., 20047., 14183.,  5503., 11159., 16815., 22471.,  4575.,  7927., 13583., 19239., 17727.,  4695.,  3184.,  9036., 14888., 20740., 14688.,  5692., 11544., 17396., 23248.,  4780.,  8200., 14052., 19904., 18332.,  4856.,  3289.,  9337., 15385., 21433., 15193.,  5881., 11929., 17977., 24025.,  4985.,  8473., 14521., 20569., 18937.,  5017.,  3394.,  9638., 15882., 22126., 15698.,  6070., 12314., 18558., 24802.,  5190.,  8746., 14990., 21234., 19542.,  5178.};
  const int batches = 1;
  const int m = 14;
  const int k = 14;
  const int n = 15;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M14xK14xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3885., 10269., 16653., 23037., 13549.,  6621., 13005., 19389., 25773.,  3997.,  9357., 15741., 22125., 19805.,  5709., 12093.,  3990., 10570., 17150., 23730., 14054.,  6810., 13390., 19970., 26550.,  4202.,  9630., 16210., 22790., 20410.,  5870., 12450.,  3455.,  9335., 15215., 21095., 14431.,  5975., 11855., 17735., 23615.,  3895.,  8495., 14375., 20255., 16919.,  5135., 11015.,  3560.,  9636., 15712., 21788., 14936.,  6164., 12240., 18316., 24392.,  4100.,  8768., 14844., 20920., 17524.,  5296., 11372.,  3665.,  9937., 16209., 22481., 15441.,  6353., 12625., 18897., 25169.,  4305.,  9041., 15313., 21585., 18129.,  5457., 11729.,  3770., 10238., 16706., 23174., 15946.,  6542., 13010., 19478., 25946.,  4510.,  9314., 15782., 22250., 18734.,  5618., 12086.,  3875., 10539., 17203., 23867., 16451.,  6731., 13395., 20059., 26723.,  4715.,  9587., 16251., 22915., 19339.,  5779., 12443.,  3980., 10840., 17700., 24560., 16956.,  6920., 13780., 20640., 27500.,  4920.,  9860., 16720., 23580., 19944.,  5940., 12800.,  3765.,  9925., 16085., 22245., 13557.,  6405., 12565., 18725., 24885.,  4933.,  9045., 15205., 21365., 16773.,  5525., 11685.,  3870., 10226., 16582., 22938., 14062.,  6594., 12950., 19306., 25662.,  5138.,  9318., 15674., 22030., 17378.,  5686., 12042.,  3079.,  8735., 14391., 20047., 14183.,  5503., 11159., 16815., 22471.,  4575.,  7927., 13583., 19239., 17727.,  4695., 10351.,  3184.,  9036., 14888., 20740., 14688.,  5692., 11544., 17396., 23248.,  4780.,  8200., 14052., 19904., 18332.,  4856., 10708.,  3289.,  9337., 15385., 21433., 15193.,  5881., 11929., 17977., 24025.,  4985.,  8473., 14521., 20569., 18937.,  5017., 11065.,  3394.,  9638., 15882., 22126., 15698.,  6070., 12314., 18558., 24802.,  5190.,  8746., 14990., 21234., 19542.,  5178., 11422.};
  const int batches = 1;
  const int m = 14;
  const int k = 14;
  const int n = 16;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M14xK15xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3960., 10875., 17790., 24705.,  7748.,  9031., 15946., 22861., 13584.,  7187., 14102., 21017., 21468.,  5343.,  4080., 11220., 18360., 25500.,  8064.,  9316., 16456., 23596., 14096.,  7412., 14552., 21692., 22176.,  5508.,  3560.,  9965., 16370., 22775.,  7996.,  8257., 14662., 21067., 14480.,  6549., 12954., 19359., 18916.,  4841.,  3680., 10310., 16940., 23570.,  8312.,  8542., 15172., 21802., 14992.,  6774., 13404., 20034., 19624.,  5006.,  3800., 10655., 17510., 24365.,  8628.,  8827., 15682., 22537., 15504.,  6999., 13854., 20709., 20332.,  5171.,  3920., 11000., 18080., 25160.,  8944.,  9112., 16192., 23272., 16016.,  7224., 14304., 21384., 21040.,  5336.,  4040., 11345., 18650., 25955.,  9260.,  9397., 16702., 24007., 16528.,  7449., 14754., 22059., 21748.,  5501.,  4160., 11690., 19220., 26750.,  9576.,  9682., 17212., 24742., 17040.,  7674., 15204., 22734., 22456.,  5666.,  3960., 10755., 17550., 24345.,  9828.,  8943., 15738., 22533., 13648.,  7131., 13926., 20721., 19516.,  5319.,  4080., 11100., 18120., 25140., 10144.,  9228., 16248., 23268., 14160.,  7356., 14376., 21396., 20224.,  5484.,  3304.,  9589., 15874., 22159.,  9820.,  7913., 14198., 20483., 14288.,  6237., 12522., 18807., 20804.,  4561.,  3424.,  9934., 16444., 22954., 10136.,  8198., 14708., 21218., 14800.,  6462., 12972., 19482., 21512.,  4726.,  3544., 10279., 17014., 23749., 10452.,  8483., 15218., 21953., 15312.,  6687., 13422., 20157., 22220.,  4891.,  3664., 10624., 17584., 24544., 10768.,  8768., 15728., 22688., 15824.,  6912., 13872., 20832., 22928.,  5056.};
  const int batches = 1;
  const int m = 14;
  const int k = 15;
  const int n = 14;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M14xK15xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3960., 10875., 17790., 24705.,  7748.,  9031., 15946., 22861., 13584.,  7187., 14102., 21017., 21468.,  5343., 12258.,  4080., 11220., 18360., 25500.,  8064.,  9316., 16456., 23596., 14096.,  7412., 14552., 21692., 22176.,  5508., 12648.,  3560.,  9965., 16370., 22775.,  7996.,  8257., 14662., 21067., 14480.,  6549., 12954., 19359., 18916.,  4841., 11246.,  3680., 10310., 16940., 23570.,  8312.,  8542., 15172., 21802., 14992.,  6774., 13404., 20034., 19624.,  5006., 11636.,  3800., 10655., 17510., 24365.,  8628.,  8827., 15682., 22537., 15504.,  6999., 13854., 20709., 20332.,  5171., 12026.,  3920., 11000., 18080., 25160.,  8944.,  9112., 16192., 23272., 16016.,  7224., 14304., 21384., 21040.,  5336., 12416.,  4040., 11345., 18650., 25955.,  9260.,  9397., 16702., 24007., 16528.,  7449., 14754., 22059., 21748.,  5501., 12806.,  4160., 11690., 19220., 26750.,  9576.,  9682., 17212., 24742., 17040.,  7674., 15204., 22734., 22456.,  5666., 13196.,  3960., 10755., 17550., 24345.,  9828.,  8943., 15738., 22533., 13648.,  7131., 13926., 20721., 19516.,  5319., 12114.,  4080., 11100., 18120., 25140., 10144.,  9228., 16248., 23268., 14160.,  7356., 14376., 21396., 20224.,  5484., 12504.,  3304.,  9589., 15874., 22159.,  9820.,  7913., 14198., 20483., 14288.,  6237., 12522., 18807., 20804.,  4561., 10846.,  3424.,  9934., 16444., 22954., 10136.,  8198., 14708., 21218., 14800.,  6462., 12972., 19482., 21512.,  4726., 11236.,  3544., 10279., 17014., 23749., 10452.,  8483., 15218., 21953., 15312.,  6687., 13422., 20157., 22220.,  4891., 11626.,  3664., 10624., 17584., 24544., 10768.,  8768., 15728., 22688., 15824.,  6912., 13872., 20832., 22928.,  5056., 12016.};
  const int batches = 1;
  const int m = 14;
  const int k = 15;
  const int n = 15;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M14xK15xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3960., 10875., 17790., 24705.,  7748.,  9031., 15946., 22861., 13584.,  7187., 14102., 21017., 21468.,  5343., 12258., 19173.,  4080., 11220., 18360., 25500.,  8064.,  9316., 16456., 23596., 14096.,  7412., 14552., 21692., 22176.,  5508., 12648., 19788.,  3560.,  9965., 16370., 22775.,  7996.,  8257., 14662., 21067., 14480.,  6549., 12954., 19359., 18916.,  4841., 11246., 17651.,  3680., 10310., 16940., 23570.,  8312.,  8542., 15172., 21802., 14992.,  6774., 13404., 20034., 19624.,  5006., 11636., 18266.,  3800., 10655., 17510., 24365.,  8628.,  8827., 15682., 22537., 15504.,  6999., 13854., 20709., 20332.,  5171., 12026., 18881.,  3920., 11000., 18080., 25160.,  8944.,  9112., 16192., 23272., 16016.,  7224., 14304., 21384., 21040.,  5336., 12416., 19496.,  4040., 11345., 18650., 25955.,  9260.,  9397., 16702., 24007., 16528.,  7449., 14754., 22059., 21748.,  5501., 12806., 20111.,  4160., 11690., 19220., 26750.,  9576.,  9682., 17212., 24742., 17040.,  7674., 15204., 22734., 22456.,  5666., 13196., 20726.,  3960., 10755., 17550., 24345.,  9828.,  8943., 15738., 22533., 13648.,  7131., 13926., 20721., 19516.,  5319., 12114., 18909.,  4080., 11100., 18120., 25140., 10144.,  9228., 16248., 23268., 14160.,  7356., 14376., 21396., 20224.,  5484., 12504., 19524.,  3304.,  9589., 15874., 22159.,  9820.,  7913., 14198., 20483., 14288.,  6237., 12522., 18807., 20804.,  4561., 10846., 17131.,  3424.,  9934., 16444., 22954., 10136.,  8198., 14708., 21218., 14800.,  6462., 12972., 19482., 21512.,  4726., 11236., 17746.,  3544., 10279., 17014., 23749., 10452.,  8483., 15218., 21953., 15312.,  6687., 13422., 20157., 22220.,  4891., 11626., 18361.,  3664., 10624., 17584., 24544., 10768.,  8768., 15728., 22688., 15824.,  6912., 13872., 20832., 22928.,  5056., 12016., 18976.};
  const int batches = 1;
  const int m = 14;
  const int k = 15;
  const int n = 16;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M14xK16xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4264., 11944., 19624., 27304.,  4264., 11944., 19624., 27304.,  4264., 11944., 19624., 27304.,  4264., 11944.,  4400., 12336., 20272., 28208.,  4400., 12336., 20272., 28208.,  4400., 12336., 20272., 28208.,  4400., 12336.,  3896., 11064., 18232., 25400.,  3896., 11064., 18232., 25400.,  3896., 11064., 18232., 25400.,  3896., 11064.,  4032., 11456., 18880., 26304.,  4032., 11456., 18880., 26304.,  4032., 11456., 18880., 26304.,  4032., 11456.,  4168., 11848., 19528., 27208.,  4168., 11848., 19528., 27208.,  4168., 11848., 19528., 27208.,  4168., 11848.,  4304., 12240., 20176., 28112.,  4304., 12240., 20176., 28112.,  4304., 12240., 20176., 28112.,  4304., 12240.,  4440., 12632., 20824., 29016.,  4440., 12632., 20824., 29016.,  4440., 12632., 20824., 29016.,  4440., 12632.,  4576., 13024., 21472., 29920.,  4576., 13024., 21472., 29920.,  4576., 13024., 21472., 29920.,  4576., 13024.,  4392., 12072., 19752., 27432.,  4392., 12072., 19752., 27432.,  4392., 12072., 19752., 27432.,  4392., 12072.,  4528., 12464., 20400., 28336.,  4528., 12464., 20400., 28336.,  4528., 12464., 20400., 28336.,  4528., 12464.,  3768., 10936., 18104., 25272.,  3768., 10936., 18104., 25272.,  3768., 10936., 18104., 25272.,  3768., 10936.,  3904., 11328., 18752., 26176.,  3904., 11328., 18752., 26176.,  3904., 11328., 18752., 26176.,  3904., 11328.,  4040., 11720., 19400., 27080.,  4040., 11720., 19400., 27080.,  4040., 11720., 19400., 27080.,  4040., 11720.,  4176., 12112., 20048., 27984.,  4176., 12112., 20048., 27984.,  4176., 12112., 20048., 27984.,  4176., 12112.};
  const int batches = 1;
  const int m = 14;
  const int k = 16;
  const int n = 14;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M14xK16xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4264., 11944., 19624., 27304.,  4264., 11944., 19624., 27304.,  4264., 11944., 19624., 27304.,  4264., 11944., 19624.,  4400., 12336., 20272., 28208.,  4400., 12336., 20272., 28208.,  4400., 12336., 20272., 28208.,  4400., 12336., 20272.,  3896., 11064., 18232., 25400.,  3896., 11064., 18232., 25400.,  3896., 11064., 18232., 25400.,  3896., 11064., 18232.,  4032., 11456., 18880., 26304.,  4032., 11456., 18880., 26304.,  4032., 11456., 18880., 26304.,  4032., 11456., 18880.,  4168., 11848., 19528., 27208.,  4168., 11848., 19528., 27208.,  4168., 11848., 19528., 27208.,  4168., 11848., 19528.,  4304., 12240., 20176., 28112.,  4304., 12240., 20176., 28112.,  4304., 12240., 20176., 28112.,  4304., 12240., 20176.,  4440., 12632., 20824., 29016.,  4440., 12632., 20824., 29016.,  4440., 12632., 20824., 29016.,  4440., 12632., 20824.,  4576., 13024., 21472., 29920.,  4576., 13024., 21472., 29920.,  4576., 13024., 21472., 29920.,  4576., 13024., 21472.,  4392., 12072., 19752., 27432.,  4392., 12072., 19752., 27432.,  4392., 12072., 19752., 27432.,  4392., 12072., 19752.,  4528., 12464., 20400., 28336.,  4528., 12464., 20400., 28336.,  4528., 12464., 20400., 28336.,  4528., 12464., 20400.,  3768., 10936., 18104., 25272.,  3768., 10936., 18104., 25272.,  3768., 10936., 18104., 25272.,  3768., 10936., 18104.,  3904., 11328., 18752., 26176.,  3904., 11328., 18752., 26176.,  3904., 11328., 18752., 26176.,  3904., 11328., 18752.,  4040., 11720., 19400., 27080.,  4040., 11720., 19400., 27080.,  4040., 11720., 19400., 27080.,  4040., 11720., 19400.,  4176., 12112., 20048., 27984.,  4176., 12112., 20048., 27984.,  4176., 12112., 20048., 27984.,  4176., 12112., 20048.};
  const int batches = 1;
  const int m = 14;
  const int k = 16;
  const int n = 15;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M14xK16xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4264., 11944., 19624., 27304.,  4264., 11944., 19624., 27304.,  4264., 11944., 19624., 27304.,  4264., 11944., 19624., 27304.,  4400., 12336., 20272., 28208.,  4400., 12336., 20272., 28208.,  4400., 12336., 20272., 28208.,  4400., 12336., 20272., 28208.,  3896., 11064., 18232., 25400.,  3896., 11064., 18232., 25400.,  3896., 11064., 18232., 25400.,  3896., 11064., 18232., 25400.,  4032., 11456., 18880., 26304.,  4032., 11456., 18880., 26304.,  4032., 11456., 18880., 26304.,  4032., 11456., 18880., 26304.,  4168., 11848., 19528., 27208.,  4168., 11848., 19528., 27208.,  4168., 11848., 19528., 27208.,  4168., 11848., 19528., 27208.,  4304., 12240., 20176., 28112.,  4304., 12240., 20176., 28112.,  4304., 12240., 20176., 28112.,  4304., 12240., 20176., 28112.,  4440., 12632., 20824., 29016.,  4440., 12632., 20824., 29016.,  4440., 12632., 20824., 29016.,  4440., 12632., 20824., 29016.,  4576., 13024., 21472., 29920.,  4576., 13024., 21472., 29920.,  4576., 13024., 21472., 29920.,  4576., 13024., 21472., 29920.,  4392., 12072., 19752., 27432.,  4392., 12072., 19752., 27432.,  4392., 12072., 19752., 27432.,  4392., 12072., 19752., 27432.,  4528., 12464., 20400., 28336.,  4528., 12464., 20400., 28336.,  4528., 12464., 20400., 28336.,  4528., 12464., 20400., 28336.,  3768., 10936., 18104., 25272.,  3768., 10936., 18104., 25272.,  3768., 10936., 18104., 25272.,  3768., 10936., 18104., 25272.,  3904., 11328., 18752., 26176.,  3904., 11328., 18752., 26176.,  3904., 11328., 18752., 26176.,  3904., 11328., 18752., 26176.,  4040., 11720., 19400., 27080.,  4040., 11720., 19400., 27080.,  4040., 11720., 19400., 27080.,  4040., 11720., 19400., 27080.,  4176., 12112., 20048., 27984.,  4176., 12112., 20048., 27984.,  4176., 12112., 20048., 27984.,  4176., 12112., 20048., 27984.};
  const int batches = 1;
  const int m = 14;
  const int k = 16;
  const int n = 16;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M15xK14xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3259.,  9125., 14991., 20857., 15011.,  5773., 11639., 17505., 23371.,  3509.,  8287., 14153., 20019., 18333.,  3364.,  9426., 15488., 21550., 15516.,  5962., 12024., 18086., 24148.,  3714.,  8560., 14622., 20684., 18938.,  3469.,  9727., 15985., 22243., 16021.,  6151., 12409., 18667., 24925.,  3919.,  8833., 15091., 21349., 19543.,  3574., 10028., 16482., 22936., 16526.,  6340., 12794., 19248., 25702.,  4124.,  9106., 15560., 22014., 20148.,  3359.,  9113., 14867., 20621., 13127.,  5825., 11579., 17333., 23087.,  4137.,  8291., 14045., 19799., 16977.,  3464.,  9414., 15364., 21314., 13632.,  6014., 11964., 17914., 23864.,  4342.,  8564., 14514., 20464., 17582.,  3569.,  9715., 15861., 22007., 14137.,  6203., 12349., 18495., 24641.,  4547.,  8837., 14983., 21129., 18187.,  3674., 10016., 16358., 22700., 14642.,  6392., 12734., 19076., 25418.,  4752.,  9110., 15452., 21794., 18792.,  3203.,  8845., 14487., 20129., 15083.,  5621., 11263., 16905., 22547.,  4509.,  8039., 13681., 19323., 15365.,  3308.,  9146., 14984., 20822., 15588.,  5810., 11648., 17486., 23324.,  4714.,  8312., 14150., 19988., 15970.,  3413.,  9447., 15481., 21515., 16093.,  5999., 12033., 18067., 24101.,  4919.,  8585., 14619., 20653., 16575.,  3518.,  9748., 15978., 22208., 16598.,  6188., 12418., 18648., 24878.,  5124.,  8858., 15088., 21318., 17180.,  2791.,  8321., 13851., 19381., 16783.,  5161., 10691., 16221., 21751.,  4625.,  7531., 13061., 18591., 17593.,  2896.,  8622., 14348., 20074., 17288.,  5350., 11076., 16802., 22528.,  4830.,  7804., 13530., 19256., 18198.,  3001.,  8923., 14845., 20767., 17793.,  5539., 11461., 17383., 23305.,  5035.,  8077., 13999., 19921., 18803.};
  const int batches = 1;
  const int m = 15;
  const int k = 14;
  const int n = 14;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M15xK14xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3259.,  9125., 14991., 20857., 15011.,  5773., 11639., 17505., 23371.,  3509.,  8287., 14153., 20019., 18333.,  4935.,  3364.,  9426., 15488., 21550., 15516.,  5962., 12024., 18086., 24148.,  3714.,  8560., 14622., 20684., 18938.,  5096.,  3469.,  9727., 15985., 22243., 16021.,  6151., 12409., 18667., 24925.,  3919.,  8833., 15091., 21349., 19543.,  5257.,  3574., 10028., 16482., 22936., 16526.,  6340., 12794., 19248., 25702.,  4124.,  9106., 15560., 22014., 20148.,  5418.,  3359.,  9113., 14867., 20621., 13127.,  5825., 11579., 17333., 23087.,  4137.,  8291., 14045., 19799., 16977.,  5003.,  3464.,  9414., 15364., 21314., 13632.,  6014., 11964., 17914., 23864.,  4342.,  8564., 14514., 20464., 17582.,  5164.,  3569.,  9715., 15861., 22007., 14137.,  6203., 12349., 18495., 24641.,  4547.,  8837., 14983., 21129., 18187.,  5325.,  3674., 10016., 16358., 22700., 14642.,  6392., 12734., 19076., 25418.,  4752.,  9110., 15452., 21794., 18792.,  5486.,  3203.,  8845., 14487., 20129., 15083.,  5621., 11263., 16905., 22547.,  4509.,  8039., 13681., 19323., 15365.,  4815.,  3308.,  9146., 14984., 20822., 15588.,  5810., 11648., 17486., 23324.,  4714.,  8312., 14150., 19988., 15970.,  4976.,  3413.,  9447., 15481., 21515., 16093.,  5999., 12033., 18067., 24101.,  4919.,  8585., 14619., 20653., 16575.,  5137.,  3518.,  9748., 15978., 22208., 16598.,  6188., 12418., 18648., 24878.,  5124.,  8858., 15088., 21318., 17180.,  5298.,  2791.,  8321., 13851., 19381., 16783.,  5161., 10691., 16221., 21751.,  4625.,  7531., 13061., 18591., 17593.,  4371.,  2896.,  8622., 14348., 20074., 17288.,  5350., 11076., 16802., 22528.,  4830.,  7804., 13530., 19256., 18198.,  4532.,  3001.,  8923., 14845., 20767., 17793.,  5539., 11461., 17383., 23305.,  5035.,  8077., 13999., 19921., 18803.,  4693.};
  const int batches = 1;
  const int m = 15;
  const int k = 14;
  const int n = 15;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M15xK14xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3259.,  9125., 14991., 20857., 15011.,  5773., 11639., 17505., 23371.,  3509.,  8287., 14153., 20019., 18333.,  4935., 10801.,  3364.,  9426., 15488., 21550., 15516.,  5962., 12024., 18086., 24148.,  3714.,  8560., 14622., 20684., 18938.,  5096., 11158.,  3469.,  9727., 15985., 22243., 16021.,  6151., 12409., 18667., 24925.,  3919.,  8833., 15091., 21349., 19543.,  5257., 11515.,  3574., 10028., 16482., 22936., 16526.,  6340., 12794., 19248., 25702.,  4124.,  9106., 15560., 22014., 20148.,  5418., 11872.,  3359.,  9113., 14867., 20621., 13127.,  5825., 11579., 17333., 23087.,  4137.,  8291., 14045., 19799., 16977.,  5003., 10757.,  3464.,  9414., 15364., 21314., 13632.,  6014., 11964., 17914., 23864.,  4342.,  8564., 14514., 20464., 17582.,  5164., 11114.,  3569.,  9715., 15861., 22007., 14137.,  6203., 12349., 18495., 24641.,  4547.,  8837., 14983., 21129., 18187.,  5325., 11471.,  3674., 10016., 16358., 22700., 14642.,  6392., 12734., 19076., 25418.,  4752.,  9110., 15452., 21794., 18792.,  5486., 11828.,  3203.,  8845., 14487., 20129., 15083.,  5621., 11263., 16905., 22547.,  4509.,  8039., 13681., 19323., 15365.,  4815., 10457.,  3308.,  9146., 14984., 20822., 15588.,  5810., 11648., 17486., 23324.,  4714.,  8312., 14150., 19988., 15970.,  4976., 10814.,  3413.,  9447., 15481., 21515., 16093.,  5999., 12033., 18067., 24101.,  4919.,  8585., 14619., 20653., 16575.,  5137., 11171.,  3518.,  9748., 15978., 22208., 16598.,  6188., 12418., 18648., 24878.,  5124.,  8858., 15088., 21318., 17180.,  5298., 11528.,  2791.,  8321., 13851., 19381., 16783.,  5161., 10691., 16221., 21751.,  4625.,  7531., 13061., 18591., 17593.,  4371.,  9901.,  2896.,  8622., 14348., 20074., 17288.,  5350., 11076., 16802., 22528.,  4830.,  7804., 13530., 19256., 18198.,  4532., 10258.,  3001.,  8923., 14845., 20767., 17793.,  5539., 11461., 17383., 23305.,  5035.,  8077., 13999., 19921., 18803.,  4693., 10615.};
  const int batches = 1;
  const int m = 15;
  const int k = 14;
  const int n = 16;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M15xK15xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3544., 10114., 16684., 23254.,  7808.,  8362., 14932., 21502., 15144.,  6610., 13180., 19750., 21456.,  4858.,  3664., 10459., 17254., 24049.,  8124.,  8647., 15442., 22237., 15656.,  6835., 13630., 20425., 22164.,  5023.,  3784., 10804., 17824., 24844.,  8440.,  8932., 15952., 22972., 16168.,  7060., 14080., 21100., 22872.,  5188.,  3904., 11149., 18394., 25639.,  8756.,  9217., 16462., 23707., 16680.,  7285., 14530., 21775., 23580.,  5353.,  3704., 10214., 16724., 23234.,  9008.,  8478., 14988., 21498., 13288.,  6742., 13252., 19762., 20640.,  5006.,  3824., 10559., 17294., 24029.,  9324.,  8763., 15498., 22233., 13800.,  6967., 13702., 20437., 21348.,  5171.,  3944., 10904., 17864., 24824.,  9640.,  9048., 16008., 22968., 14312.,  7192., 14152., 21112., 22056.,  5336.,  4064., 11249., 18434., 25619.,  9956.,  9333., 16518., 23703., 14824.,  7417., 14602., 21787., 22764.,  5501.,  3608., 10058., 16508., 22958.,  9952.,  8338., 14788., 21238., 15272.,  6618., 13068., 19518., 19568.,  4898.,  3728., 10403., 17078., 23753., 10268.,  8623., 15298., 21973., 15784.,  6843., 13518., 20193., 20276.,  5063.,  3848., 10748., 17648., 24548., 10584.,  8908., 15808., 22708., 16296.,  7068., 13968., 20868., 20984.,  5228.,  3968., 11093., 18218., 25343., 10900.,  9193., 16318., 23443., 16808.,  7293., 14418., 21543., 21692.,  5393.,  3256.,  9646., 16036., 22426., 10640.,  7942., 14332., 20722., 17000.,  6238., 12628., 19018., 22336.,  4534.,  3376.,  9991., 16606., 23221., 10956.,  8227., 14842., 21457., 17512.,  6463., 13078., 19693., 23044.,  4699.,  3496., 10336., 17176., 24016., 11272.,  8512., 15352., 22192., 18024.,  6688., 13528., 20368., 23752.,  4864.};
  const int batches = 1;
  const int m = 15;
  const int k = 15;
  const int n = 14;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M15xK15xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3544., 10114., 16684., 23254.,  7808.,  8362., 14932., 21502., 15144.,  6610., 13180., 19750., 21456.,  4858., 11428.,  3664., 10459., 17254., 24049.,  8124.,  8647., 15442., 22237., 15656.,  6835., 13630., 20425., 22164.,  5023., 11818.,  3784., 10804., 17824., 24844.,  8440.,  8932., 15952., 22972., 16168.,  7060., 14080., 21100., 22872.,  5188., 12208.,  3904., 11149., 18394., 25639.,  8756.,  9217., 16462., 23707., 16680.,  7285., 14530., 21775., 23580.,  5353., 12598.,  3704., 10214., 16724., 23234.,  9008.,  8478., 14988., 21498., 13288.,  6742., 13252., 19762., 20640.,  5006., 11516.,  3824., 10559., 17294., 24029.,  9324.,  8763., 15498., 22233., 13800.,  6967., 13702., 20437., 21348.,  5171., 11906.,  3944., 10904., 17864., 24824.,  9640.,  9048., 16008., 22968., 14312.,  7192., 14152., 21112., 22056.,  5336., 12296.,  4064., 11249., 18434., 25619.,  9956.,  9333., 16518., 23703., 14824.,  7417., 14602., 21787., 22764.,  5501., 12686.,  3608., 10058., 16508., 22958.,  9952.,  8338., 14788., 21238., 15272.,  6618., 13068., 19518., 19568.,  4898., 11348.,  3728., 10403., 17078., 23753., 10268.,  8623., 15298., 21973., 15784.,  6843., 13518., 20193., 20276.,  5063., 11738.,  3848., 10748., 17648., 24548., 10584.,  8908., 15808., 22708., 16296.,  7068., 13968., 20868., 20984.,  5228., 12128.,  3968., 11093., 18218., 25343., 10900.,  9193., 16318., 23443., 16808.,  7293., 14418., 21543., 21692.,  5393., 12518.,  3256.,  9646., 16036., 22426., 10640.,  7942., 14332., 20722., 17000.,  6238., 12628., 19018., 22336.,  4534., 10924.,  3376.,  9991., 16606., 23221., 10956.,  8227., 14842., 21457., 17512.,  6463., 13078., 19693., 23044.,  4699., 11314.,  3496., 10336., 17176., 24016., 11272.,  8512., 15352., 22192., 18024.,  6688., 13528., 20368., 23752.,  4864., 11704.};
  const int batches = 1;
  const int m = 15;
  const int k = 15;
  const int n = 15;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M15xK15xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3544., 10114., 16684., 23254.,  7808.,  8362., 14932., 21502., 15144.,  6610., 13180., 19750., 21456.,  4858., 11428., 17998.,  3664., 10459., 17254., 24049.,  8124.,  8647., 15442., 22237., 15656.,  6835., 13630., 20425., 22164.,  5023., 11818., 18613.,  3784., 10804., 17824., 24844.,  8440.,  8932., 15952., 22972., 16168.,  7060., 14080., 21100., 22872.,  5188., 12208., 19228.,  3904., 11149., 18394., 25639.,  8756.,  9217., 16462., 23707., 16680.,  7285., 14530., 21775., 23580.,  5353., 12598., 19843.,  3704., 10214., 16724., 23234.,  9008.,  8478., 14988., 21498., 13288.,  6742., 13252., 19762., 20640.,  5006., 11516., 18026.,  3824., 10559., 17294., 24029.,  9324.,  8763., 15498., 22233., 13800.,  6967., 13702., 20437., 21348.,  5171., 11906., 18641.,  3944., 10904., 17864., 24824.,  9640.,  9048., 16008., 22968., 14312.,  7192., 14152., 21112., 22056.,  5336., 12296., 19256.,  4064., 11249., 18434., 25619.,  9956.,  9333., 16518., 23703., 14824.,  7417., 14602., 21787., 22764.,  5501., 12686., 19871.,  3608., 10058., 16508., 22958.,  9952.,  8338., 14788., 21238., 15272.,  6618., 13068., 19518., 19568.,  4898., 11348., 17798.,  3728., 10403., 17078., 23753., 10268.,  8623., 15298., 21973., 15784.,  6843., 13518., 20193., 20276.,  5063., 11738., 18413.,  3848., 10748., 17648., 24548., 10584.,  8908., 15808., 22708., 16296.,  7068., 13968., 20868., 20984.,  5228., 12128., 19028.,  3968., 11093., 18218., 25343., 10900.,  9193., 16318., 23443., 16808.,  7293., 14418., 21543., 21692.,  5393., 12518., 19643.,  3256.,  9646., 16036., 22426., 10640.,  7942., 14332., 20722., 17000.,  6238., 12628., 19018., 22336.,  4534., 10924., 17314.,  3376.,  9991., 16606., 23221., 10956.,  8227., 14842., 21457., 17512.,  6463., 13078., 19693., 23044.,  4699., 11314., 17929.,  3496., 10336., 17176., 24016., 11272.,  8512., 15352., 22192., 18024.,  6688., 13528., 20368., 23752.,  4864., 11704., 18544.};
  const int batches = 1;
  const int m = 15;
  const int k = 15;
  const int n = 16;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M15xK16xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4088., 11640., 19192., 26744.,  4088., 11640., 19192., 26744.,  4088., 11640., 19192., 26744.,  4088., 11640.,  4224., 12032., 19840., 27648.,  4224., 12032., 19840., 27648.,  4224., 12032., 19840., 27648.,  4224., 12032.,  4360., 12424., 20488., 28552.,  4360., 12424., 20488., 28552.,  4360., 12424., 20488., 28552.,  4360., 12424.,  4496., 12816., 21136., 29456.,  4496., 12816., 21136., 29456.,  4496., 12816., 21136., 29456.,  4496., 12816.,  4312., 11864., 19416., 26968.,  4312., 11864., 19416., 26968.,  4312., 11864., 19416., 26968.,  4312., 11864.,  4448., 12256., 20064., 27872.,  4448., 12256., 20064., 27872.,  4448., 12256., 20064., 27872.,  4448., 12256.,  4584., 12648., 20712., 28776.,  4584., 12648., 20712., 28776.,  4584., 12648., 20712., 28776.,  4584., 12648.,  4720., 13040., 21360., 29680.,  4720., 13040., 21360., 29680.,  4720., 13040., 21360., 29680.,  4720., 13040.,  4280., 11832., 19384., 26936.,  4280., 11832., 19384., 26936.,  4280., 11832., 19384., 26936.,  4280., 11832.,  4416., 12224., 20032., 27840.,  4416., 12224., 20032., 27840.,  4416., 12224., 20032., 27840.,  4416., 12224.,  4552., 12616., 20680., 28744.,  4552., 12616., 20680., 28744.,  4552., 12616., 20680., 28744.,  4552., 12616.,  4688., 13008., 21328., 29648.,  4688., 13008., 21328., 29648.,  4688., 13008., 21328., 29648.,  4688., 13008.,  3992., 11544., 19096., 26648.,  3992., 11544., 19096., 26648.,  3992., 11544., 19096., 26648.,  3992., 11544.,  4128., 11936., 19744., 27552.,  4128., 11936., 19744., 27552.,  4128., 11936., 19744., 27552.,  4128., 11936.,  4264., 12328., 20392., 28456.,  4264., 12328., 20392., 28456.,  4264., 12328., 20392., 28456.,  4264., 12328.};
  const int batches = 1;
  const int m = 15;
  const int k = 16;
  const int n = 14;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M15xK16xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4088., 11640., 19192., 26744.,  4088., 11640., 19192., 26744.,  4088., 11640., 19192., 26744.,  4088., 11640., 19192.,  4224., 12032., 19840., 27648.,  4224., 12032., 19840., 27648.,  4224., 12032., 19840., 27648.,  4224., 12032., 19840.,  4360., 12424., 20488., 28552.,  4360., 12424., 20488., 28552.,  4360., 12424., 20488., 28552.,  4360., 12424., 20488.,  4496., 12816., 21136., 29456.,  4496., 12816., 21136., 29456.,  4496., 12816., 21136., 29456.,  4496., 12816., 21136.,  4312., 11864., 19416., 26968.,  4312., 11864., 19416., 26968.,  4312., 11864., 19416., 26968.,  4312., 11864., 19416.,  4448., 12256., 20064., 27872.,  4448., 12256., 20064., 27872.,  4448., 12256., 20064., 27872.,  4448., 12256., 20064.,  4584., 12648., 20712., 28776.,  4584., 12648., 20712., 28776.,  4584., 12648., 20712., 28776.,  4584., 12648., 20712.,  4720., 13040., 21360., 29680.,  4720., 13040., 21360., 29680.,  4720., 13040., 21360., 29680.,  4720., 13040., 21360.,  4280., 11832., 19384., 26936.,  4280., 11832., 19384., 26936.,  4280., 11832., 19384., 26936.,  4280., 11832., 19384.,  4416., 12224., 20032., 27840.,  4416., 12224., 20032., 27840.,  4416., 12224., 20032., 27840.,  4416., 12224., 20032.,  4552., 12616., 20680., 28744.,  4552., 12616., 20680., 28744.,  4552., 12616., 20680., 28744.,  4552., 12616., 20680.,  4688., 13008., 21328., 29648.,  4688., 13008., 21328., 29648.,  4688., 13008., 21328., 29648.,  4688., 13008., 21328.,  3992., 11544., 19096., 26648.,  3992., 11544., 19096., 26648.,  3992., 11544., 19096., 26648.,  3992., 11544., 19096.,  4128., 11936., 19744., 27552.,  4128., 11936., 19744., 27552.,  4128., 11936., 19744., 27552.,  4128., 11936., 19744.,  4264., 12328., 20392., 28456.,  4264., 12328., 20392., 28456.,  4264., 12328., 20392., 28456.,  4264., 12328., 20392.};
  const int batches = 1;
  const int m = 15;
  const int k = 16;
  const int n = 15;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M15xK16xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 4088., 11640., 19192., 26744.,  4088., 11640., 19192., 26744.,  4088., 11640., 19192., 26744.,  4088., 11640., 19192., 26744.,  4224., 12032., 19840., 27648.,  4224., 12032., 19840., 27648.,  4224., 12032., 19840., 27648.,  4224., 12032., 19840., 27648.,  4360., 12424., 20488., 28552.,  4360., 12424., 20488., 28552.,  4360., 12424., 20488., 28552.,  4360., 12424., 20488., 28552.,  4496., 12816., 21136., 29456.,  4496., 12816., 21136., 29456.,  4496., 12816., 21136., 29456.,  4496., 12816., 21136., 29456.,  4312., 11864., 19416., 26968.,  4312., 11864., 19416., 26968.,  4312., 11864., 19416., 26968.,  4312., 11864., 19416., 26968.,  4448., 12256., 20064., 27872.,  4448., 12256., 20064., 27872.,  4448., 12256., 20064., 27872.,  4448., 12256., 20064., 27872.,  4584., 12648., 20712., 28776.,  4584., 12648., 20712., 28776.,  4584., 12648., 20712., 28776.,  4584., 12648., 20712., 28776.,  4720., 13040., 21360., 29680.,  4720., 13040., 21360., 29680.,  4720., 13040., 21360., 29680.,  4720., 13040., 21360., 29680.,  4280., 11832., 19384., 26936.,  4280., 11832., 19384., 26936.,  4280., 11832., 19384., 26936.,  4280., 11832., 19384., 26936.,  4416., 12224., 20032., 27840.,  4416., 12224., 20032., 27840.,  4416., 12224., 20032., 27840.,  4416., 12224., 20032., 27840.,  4552., 12616., 20680., 28744.,  4552., 12616., 20680., 28744.,  4552., 12616., 20680., 28744.,  4552., 12616., 20680., 28744.,  4688., 13008., 21328., 29648.,  4688., 13008., 21328., 29648.,  4688., 13008., 21328., 29648.,  4688., 13008., 21328., 29648.,  3992., 11544., 19096., 26648.,  3992., 11544., 19096., 26648.,  3992., 11544., 19096., 26648.,  3992., 11544., 19096., 26648.,  4128., 11936., 19744., 27552.,  4128., 11936., 19744., 27552.,  4128., 11936., 19744., 27552.,  4128., 11936., 19744., 27552.,  4264., 12328., 20392., 28456.,  4264., 12328., 20392., 28456.,  4264., 12328., 20392., 28456.,  4264., 12328., 20392., 28456.};
  const int batches = 1;
  const int m = 15;
  const int k = 16;
  const int n = 16;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M16xK14xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2441.,  6893., 11345., 15797., 12697.,  4349.,  8801., 13253., 17705.,  2957.,  6257., 10709., 15161., 13213.,  2546.,  7194., 11842., 16490., 13202.,  4538.,  9186., 13834., 18482.,  3162.,  6530., 11178., 15826., 13818.,  2651.,  7495., 12339., 17183., 13707.,  4727.,  9571., 14415., 19259.,  3367.,  6803., 11647., 16491., 14423.,  2756.,  7796., 12836., 17876., 14212.,  4916.,  9956., 14996., 20036.,  3572.,  7076., 12116., 17156., 15028.,  2861.,  8097., 13333., 18569., 14717.,  5105., 10341., 15577., 20813.,  3777.,  7349., 12585., 17821., 15633.,  2966.,  8398., 13830., 19262., 15222.,  5294., 10726., 16158., 21590.,  3982.,  7622., 13054., 18486., 16238.,  3071.,  8699., 14327., 19955., 15727.,  5483., 11111., 16739., 22367.,  4187.,  7895., 13523., 19151., 16843.,  3176.,  9000., 14824., 20648., 16232.,  5672., 11496., 17320., 23144.,  4392.,  8168., 13992., 19816., 17448.,  3281.,  9301., 15321., 21341., 16737.,  5861., 11881., 17901., 23921.,  4597.,  8441., 14461., 20481., 18053.,  3386.,  9602., 15818., 22034., 17242.,  6050., 12266., 18482., 24698.,  4802.,  8714., 14930., 21146., 18658.,  3491.,  9903., 16315., 22727., 17747.,  6239., 12651., 19063., 25475.,  5007.,  8987., 15399., 21811., 19263.,  3596., 10204., 16812., 23420., 18252.,  6428., 13036., 19644., 26252.,  5212.,  9260., 15868., 22476., 19868.,  3701., 10505., 17309., 24113., 18757.,  6617., 13421., 20225., 27029.,  5417.,  9533., 16337., 23141., 20473.,  3806., 10806., 17806., 24806., 19262.,  6806., 13806., 20806., 27806.,  5622.,  9806., 16806., 23806., 21078.,  3911., 11107., 18303., 25499., 19767.,  6995., 14191., 21387., 28583.,  5827., 10079., 17275., 24471., 21683.,  4016., 11408., 18800., 26192., 20272.,  7184., 14576., 21968., 29360.,  6032., 10352., 17744., 25136., 22288.};
  const int batches = 1;
  const int m = 16;
  const int k = 14;
  const int n = 14;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M16xK14xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2441.,  6893., 11345., 15797., 12697.,  4349.,  8801., 13253., 17705.,  2957.,  6257., 10709., 15161., 13213.,  3713.,  2546.,  7194., 11842., 16490., 13202.,  4538.,  9186., 13834., 18482.,  3162.,  6530., 11178., 15826., 13818.,  3874.,  2651.,  7495., 12339., 17183., 13707.,  4727.,  9571., 14415., 19259.,  3367.,  6803., 11647., 16491., 14423.,  4035.,  2756.,  7796., 12836., 17876., 14212.,  4916.,  9956., 14996., 20036.,  3572.,  7076., 12116., 17156., 15028.,  4196.,  2861.,  8097., 13333., 18569., 14717.,  5105., 10341., 15577., 20813.,  3777.,  7349., 12585., 17821., 15633.,  4357.,  2966.,  8398., 13830., 19262., 15222.,  5294., 10726., 16158., 21590.,  3982.,  7622., 13054., 18486., 16238.,  4518.,  3071.,  8699., 14327., 19955., 15727.,  5483., 11111., 16739., 22367.,  4187.,  7895., 13523., 19151., 16843.,  4679.,  3176.,  9000., 14824., 20648., 16232.,  5672., 11496., 17320., 23144.,  4392.,  8168., 13992., 19816., 17448.,  4840.,  3281.,  9301., 15321., 21341., 16737.,  5861., 11881., 17901., 23921.,  4597.,  8441., 14461., 20481., 18053.,  5001.,  3386.,  9602., 15818., 22034., 17242.,  6050., 12266., 18482., 24698.,  4802.,  8714., 14930., 21146., 18658.,  5162.,  3491.,  9903., 16315., 22727., 17747.,  6239., 12651., 19063., 25475.,  5007.,  8987., 15399., 21811., 19263.,  5323.,  3596., 10204., 16812., 23420., 18252.,  6428., 13036., 19644., 26252.,  5212.,  9260., 15868., 22476., 19868.,  5484.,  3701., 10505., 17309., 24113., 18757.,  6617., 13421., 20225., 27029.,  5417.,  9533., 16337., 23141., 20473.,  5645.,  3806., 10806., 17806., 24806., 19262.,  6806., 13806., 20806., 27806.,  5622.,  9806., 16806., 23806., 21078.,  5806.,  3911., 11107., 18303., 25499., 19767.,  6995., 14191., 21387., 28583.,  5827., 10079., 17275., 24471., 21683.,  5967.,  4016., 11408., 18800., 26192., 20272.,  7184., 14576., 21968., 29360.,  6032., 10352., 17744., 25136., 22288.,  6128.};
  const int batches = 1;
  const int m = 16;
  const int k = 14;
  const int n = 15;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M16xK14xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2441.,  6893., 11345., 15797., 12697.,  4349.,  8801., 13253., 17705.,  2957.,  6257., 10709., 15161., 13213.,  3713.,  8165.,  2546.,  7194., 11842., 16490., 13202.,  4538.,  9186., 13834., 18482.,  3162.,  6530., 11178., 15826., 13818.,  3874.,  8522.,  2651.,  7495., 12339., 17183., 13707.,  4727.,  9571., 14415., 19259.,  3367.,  6803., 11647., 16491., 14423.,  4035.,  8879.,  2756.,  7796., 12836., 17876., 14212.,  4916.,  9956., 14996., 20036.,  3572.,  7076., 12116., 17156., 15028.,  4196.,  9236.,  2861.,  8097., 13333., 18569., 14717.,  5105., 10341., 15577., 20813.,  3777.,  7349., 12585., 17821., 15633.,  4357.,  9593.,  2966.,  8398., 13830., 19262., 15222.,  5294., 10726., 16158., 21590.,  3982.,  7622., 13054., 18486., 16238.,  4518.,  9950.,  3071.,  8699., 14327., 19955., 15727.,  5483., 11111., 16739., 22367.,  4187.,  7895., 13523., 19151., 16843.,  4679., 10307.,  3176.,  9000., 14824., 20648., 16232.,  5672., 11496., 17320., 23144.,  4392.,  8168., 13992., 19816., 17448.,  4840., 10664.,  3281.,  9301., 15321., 21341., 16737.,  5861., 11881., 17901., 23921.,  4597.,  8441., 14461., 20481., 18053.,  5001., 11021.,  3386.,  9602., 15818., 22034., 17242.,  6050., 12266., 18482., 24698.,  4802.,  8714., 14930., 21146., 18658.,  5162., 11378.,  3491.,  9903., 16315., 22727., 17747.,  6239., 12651., 19063., 25475.,  5007.,  8987., 15399., 21811., 19263.,  5323., 11735.,  3596., 10204., 16812., 23420., 18252.,  6428., 13036., 19644., 26252.,  5212.,  9260., 15868., 22476., 19868.,  5484., 12092.,  3701., 10505., 17309., 24113., 18757.,  6617., 13421., 20225., 27029.,  5417.,  9533., 16337., 23141., 20473.,  5645., 12449.,  3806., 10806., 17806., 24806., 19262.,  6806., 13806., 20806., 27806.,  5622.,  9806., 16806., 23806., 21078.,  5806., 12806.,  3911., 11107., 18303., 25499., 19767.,  6995., 14191., 21387., 28583.,  5827., 10079., 17275., 24471., 21683.,  5967., 13163.,  4016., 11408., 18800., 26192., 20272.,  7184., 14576., 21968., 29360.,  6032., 10352., 17744., 25136., 22288.,  6128., 13520.};
  const int batches = 1;
  const int m = 16;
  const int k = 14;
  const int n = 16;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M16xK15xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2936.,  8201., 13466., 18731.,  7932.,  6797., 12062., 17327., 12928.,  5393., 10658., 15923., 17924.,  3989.,  3056.,  8546., 14036., 19526.,  8248.,  7082., 12572., 18062., 13440.,  5618., 11108., 16598., 18632.,  4154.,  3176.,  8891., 14606., 20321.,  8564.,  7367., 13082., 18797., 13952.,  5843., 11558., 17273., 19340.,  4319.,  3296.,  9236., 15176., 21116.,  8880.,  7652., 13592., 19532., 14464.,  6068., 12008., 17948., 20048.,  4484.,  3416.,  9581., 15746., 21911.,  9196.,  7937., 14102., 20267., 14976.,  6293., 12458., 18623., 20756.,  4649.,  3536.,  9926., 16316., 22706.,  9512.,  8222., 14612., 21002., 15488.,  6518., 12908., 19298., 21464.,  4814.,  3656., 10271., 16886., 23501.,  9828.,  8507., 15122., 21737., 16000.,  6743., 13358., 19973., 22172.,  4979.,  3776., 10616., 17456., 24296., 10144.,  8792., 15632., 22472., 16512.,  6968., 13808., 20648., 22880.,  5144.,  3896., 10961., 18026., 25091., 10460.,  9077., 16142., 23207., 17024.,  7193., 14258., 21323., 23588.,  5309.,  4016., 11306., 18596., 25886., 10776.,  9362., 16652., 23942., 17536.,  7418., 14708., 21998., 24296.,  5474.,  4136., 11651., 19166., 26681., 11092.,  9647., 17162., 24677., 18048.,  7643., 15158., 22673., 25004.,  5639.,  4256., 11996., 19736., 27476., 11408.,  9932., 17672., 25412., 18560.,  7868., 15608., 23348., 25712.,  5804.,  4376., 12341., 20306., 28271., 11724., 10217., 18182., 26147., 19072.,  8093., 16058., 24023., 26420.,  5969.,  4496., 12686., 20876., 29066., 12040., 10502., 18692., 26882., 19584.,  8318., 16508., 24698., 27128.,  6134.,  4616., 13031., 21446., 29861., 12356., 10787., 19202., 27617., 20096.,  8543., 16958., 25373., 27836.,  6299.,  4736., 13376., 22016., 30656., 12672., 11072., 19712., 28352., 20608.,  8768., 17408., 26048., 28544.,  6464.};
  const int batches = 1;
  const int m = 16;
  const int k = 15;
  const int n = 14;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M16xK15xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2936.,  8201., 13466., 18731.,  7932.,  6797., 12062., 17327., 12928.,  5393., 10658., 15923., 17924.,  3989.,  9254.,  3056.,  8546., 14036., 19526.,  8248.,  7082., 12572., 18062., 13440.,  5618., 11108., 16598., 18632.,  4154.,  9644.,  3176.,  8891., 14606., 20321.,  8564.,  7367., 13082., 18797., 13952.,  5843., 11558., 17273., 19340.,  4319., 10034.,  3296.,  9236., 15176., 21116.,  8880.,  7652., 13592., 19532., 14464.,  6068., 12008., 17948., 20048.,  4484., 10424.,  3416.,  9581., 15746., 21911.,  9196.,  7937., 14102., 20267., 14976.,  6293., 12458., 18623., 20756.,  4649., 10814.,  3536.,  9926., 16316., 22706.,  9512.,  8222., 14612., 21002., 15488.,  6518., 12908., 19298., 21464.,  4814., 11204.,  3656., 10271., 16886., 23501.,  9828.,  8507., 15122., 21737., 16000.,  6743., 13358., 19973., 22172.,  4979., 11594.,  3776., 10616., 17456., 24296., 10144.,  8792., 15632., 22472., 16512.,  6968., 13808., 20648., 22880.,  5144., 11984.,  3896., 10961., 18026., 25091., 10460.,  9077., 16142., 23207., 17024.,  7193., 14258., 21323., 23588.,  5309., 12374.,  4016., 11306., 18596., 25886., 10776.,  9362., 16652., 23942., 17536.,  7418., 14708., 21998., 24296.,  5474., 12764.,  4136., 11651., 19166., 26681., 11092.,  9647., 17162., 24677., 18048.,  7643., 15158., 22673., 25004.,  5639., 13154.,  4256., 11996., 19736., 27476., 11408.,  9932., 17672., 25412., 18560.,  7868., 15608., 23348., 25712.,  5804., 13544.,  4376., 12341., 20306., 28271., 11724., 10217., 18182., 26147., 19072.,  8093., 16058., 24023., 26420.,  5969., 13934.,  4496., 12686., 20876., 29066., 12040., 10502., 18692., 26882., 19584.,  8318., 16508., 24698., 27128.,  6134., 14324.,  4616., 13031., 21446., 29861., 12356., 10787., 19202., 27617., 20096.,  8543., 16958., 25373., 27836.,  6299., 14714.,  4736., 13376., 22016., 30656., 12672., 11072., 19712., 28352., 20608.,  8768., 17408., 26048., 28544.,  6464., 15104.};
  const int batches = 1;
  const int m = 16;
  const int k = 15;
  const int n = 15;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M16xK15xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 2936.,  8201., 13466., 18731.,  7932.,  6797., 12062., 17327., 12928.,  5393., 10658., 15923., 17924.,  3989.,  9254., 14519.,  3056.,  8546., 14036., 19526.,  8248.,  7082., 12572., 18062., 13440.,  5618., 11108., 16598., 18632.,  4154.,  9644., 15134.,  3176.,  8891., 14606., 20321.,  8564.,  7367., 13082., 18797., 13952.,  5843., 11558., 17273., 19340.,  4319., 10034., 15749.,  3296.,  9236., 15176., 21116.,  8880.,  7652., 13592., 19532., 14464.,  6068., 12008., 17948., 20048.,  4484., 10424., 16364.,  3416.,  9581., 15746., 21911.,  9196.,  7937., 14102., 20267., 14976.,  6293., 12458., 18623., 20756.,  4649., 10814., 16979.,  3536.,  9926., 16316., 22706.,  9512.,  8222., 14612., 21002., 15488.,  6518., 12908., 19298., 21464.,  4814., 11204., 17594.,  3656., 10271., 16886., 23501.,  9828.,  8507., 15122., 21737., 16000.,  6743., 13358., 19973., 22172.,  4979., 11594., 18209.,  3776., 10616., 17456., 24296., 10144.,  8792., 15632., 22472., 16512.,  6968., 13808., 20648., 22880.,  5144., 11984., 18824.,  3896., 10961., 18026., 25091., 10460.,  9077., 16142., 23207., 17024.,  7193., 14258., 21323., 23588.,  5309., 12374., 19439.,  4016., 11306., 18596., 25886., 10776.,  9362., 16652., 23942., 17536.,  7418., 14708., 21998., 24296.,  5474., 12764., 20054.,  4136., 11651., 19166., 26681., 11092.,  9647., 17162., 24677., 18048.,  7643., 15158., 22673., 25004.,  5639., 13154., 20669.,  4256., 11996., 19736., 27476., 11408.,  9932., 17672., 25412., 18560.,  7868., 15608., 23348., 25712.,  5804., 13544., 21284.,  4376., 12341., 20306., 28271., 11724., 10217., 18182., 26147., 19072.,  8093., 16058., 24023., 26420.,  5969., 13934., 21899.,  4496., 12686., 20876., 29066., 12040., 10502., 18692., 26882., 19584.,  8318., 16508., 24698., 27128.,  6134., 14324., 22514.,  4616., 13031., 21446., 29861., 12356., 10787., 19202., 27617., 20096.,  8543., 16958., 25373., 27836.,  6299., 14714., 23129.,  4736., 13376., 22016., 30656., 12672., 11072., 19712., 28352., 20608.,  8768., 17408., 26048., 28544.,  6464., 15104., 23744.};
  const int batches = 1;
  const int m = 16;
  const int k = 15;
  const int n = 16;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M16xK16xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3720., 10120., 16520., 22920.,  3720., 10120., 16520., 22920.,  3720., 10120., 16520., 22920.,  3720., 10120.,  3856., 10512., 17168., 23824.,  3856., 10512., 17168., 23824.,  3856., 10512., 17168., 23824.,  3856., 10512.,  3992., 10904., 17816., 24728.,  3992., 10904., 17816., 24728.,  3992., 10904., 17816., 24728.,  3992., 10904.,  4128., 11296., 18464., 25632.,  4128., 11296., 18464., 25632.,  4128., 11296., 18464., 25632.,  4128., 11296.,  4264., 11688., 19112., 26536.,  4264., 11688., 19112., 26536.,  4264., 11688., 19112., 26536.,  4264., 11688.,  4400., 12080., 19760., 27440.,  4400., 12080., 19760., 27440.,  4400., 12080., 19760., 27440.,  4400., 12080.,  4536., 12472., 20408., 28344.,  4536., 12472., 20408., 28344.,  4536., 12472., 20408., 28344.,  4536., 12472.,  4672., 12864., 21056., 29248.,  4672., 12864., 21056., 29248.,  4672., 12864., 21056., 29248.,  4672., 12864.,  4808., 13256., 21704., 30152.,  4808., 13256., 21704., 30152.,  4808., 13256., 21704., 30152.,  4808., 13256.,  4944., 13648., 22352., 31056.,  4944., 13648., 22352., 31056.,  4944., 13648., 22352., 31056.,  4944., 13648.,  5080., 14040., 23000., 31960.,  5080., 14040., 23000., 31960.,  5080., 14040., 23000., 31960.,  5080., 14040.,  5216., 14432., 23648., 32864.,  5216., 14432., 23648., 32864.,  5216., 14432., 23648., 32864.,  5216., 14432.,  5352., 14824., 24296., 33768.,  5352., 14824., 24296., 33768.,  5352., 14824., 24296., 33768.,  5352., 14824.,  5488., 15216., 24944., 34672.,  5488., 15216., 24944., 34672.,  5488., 15216., 24944., 34672.,  5488., 15216.,  5624., 15608., 25592., 35576.,  5624., 15608., 25592., 35576.,  5624., 15608., 25592., 35576.,  5624., 15608.,  5760., 16000., 26240., 36480.,  5760., 16000., 26240., 36480.,  5760., 16000., 26240., 36480.,  5760., 16000.};
  const int batches = 1;
  const int m = 16;
  const int k = 16;
  const int n = 14;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M16xK16xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3720., 10120., 16520., 22920.,  3720., 10120., 16520., 22920.,  3720., 10120., 16520., 22920.,  3720., 10120., 16520.,  3856., 10512., 17168., 23824.,  3856., 10512., 17168., 23824.,  3856., 10512., 17168., 23824.,  3856., 10512., 17168.,  3992., 10904., 17816., 24728.,  3992., 10904., 17816., 24728.,  3992., 10904., 17816., 24728.,  3992., 10904., 17816.,  4128., 11296., 18464., 25632.,  4128., 11296., 18464., 25632.,  4128., 11296., 18464., 25632.,  4128., 11296., 18464.,  4264., 11688., 19112., 26536.,  4264., 11688., 19112., 26536.,  4264., 11688., 19112., 26536.,  4264., 11688., 19112.,  4400., 12080., 19760., 27440.,  4400., 12080., 19760., 27440.,  4400., 12080., 19760., 27440.,  4400., 12080., 19760.,  4536., 12472., 20408., 28344.,  4536., 12472., 20408., 28344.,  4536., 12472., 20408., 28344.,  4536., 12472., 20408.,  4672., 12864., 21056., 29248.,  4672., 12864., 21056., 29248.,  4672., 12864., 21056., 29248.,  4672., 12864., 21056.,  4808., 13256., 21704., 30152.,  4808., 13256., 21704., 30152.,  4808., 13256., 21704., 30152.,  4808., 13256., 21704.,  4944., 13648., 22352., 31056.,  4944., 13648., 22352., 31056.,  4944., 13648., 22352., 31056.,  4944., 13648., 22352.,  5080., 14040., 23000., 31960.,  5080., 14040., 23000., 31960.,  5080., 14040., 23000., 31960.,  5080., 14040., 23000.,  5216., 14432., 23648., 32864.,  5216., 14432., 23648., 32864.,  5216., 14432., 23648., 32864.,  5216., 14432., 23648.,  5352., 14824., 24296., 33768.,  5352., 14824., 24296., 33768.,  5352., 14824., 24296., 33768.,  5352., 14824., 24296.,  5488., 15216., 24944., 34672.,  5488., 15216., 24944., 34672.,  5488., 15216., 24944., 34672.,  5488., 15216., 24944.,  5624., 15608., 25592., 35576.,  5624., 15608., 25592., 35576.,  5624., 15608., 25592., 35576.,  5624., 15608., 25592.,  5760., 16000., 26240., 36480.,  5760., 16000., 26240., 36480.,  5760., 16000., 26240., 36480.,  5760., 16000., 26240.};
  const int batches = 1;
  const int m = 16;
  const int k = 16;
  const int n = 15;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueTrue, M16xK16xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 3720., 10120., 16520., 22920.,  3720., 10120., 16520., 22920.,  3720., 10120., 16520., 22920.,  3720., 10120., 16520., 22920.,  3856., 10512., 17168., 23824.,  3856., 10512., 17168., 23824.,  3856., 10512., 17168., 23824.,  3856., 10512., 17168., 23824.,  3992., 10904., 17816., 24728.,  3992., 10904., 17816., 24728.,  3992., 10904., 17816., 24728.,  3992., 10904., 17816., 24728.,  4128., 11296., 18464., 25632.,  4128., 11296., 18464., 25632.,  4128., 11296., 18464., 25632.,  4128., 11296., 18464., 25632.,  4264., 11688., 19112., 26536.,  4264., 11688., 19112., 26536.,  4264., 11688., 19112., 26536.,  4264., 11688., 19112., 26536.,  4400., 12080., 19760., 27440.,  4400., 12080., 19760., 27440.,  4400., 12080., 19760., 27440.,  4400., 12080., 19760., 27440.,  4536., 12472., 20408., 28344.,  4536., 12472., 20408., 28344.,  4536., 12472., 20408., 28344.,  4536., 12472., 20408., 28344.,  4672., 12864., 21056., 29248.,  4672., 12864., 21056., 29248.,  4672., 12864., 21056., 29248.,  4672., 12864., 21056., 29248.,  4808., 13256., 21704., 30152.,  4808., 13256., 21704., 30152.,  4808., 13256., 21704., 30152.,  4808., 13256., 21704., 30152.,  4944., 13648., 22352., 31056.,  4944., 13648., 22352., 31056.,  4944., 13648., 22352., 31056.,  4944., 13648., 22352., 31056.,  5080., 14040., 23000., 31960.,  5080., 14040., 23000., 31960.,  5080., 14040., 23000., 31960.,  5080., 14040., 23000., 31960.,  5216., 14432., 23648., 32864.,  5216., 14432., 23648., 32864.,  5216., 14432., 23648., 32864.,  5216., 14432., 23648., 32864.,  5352., 14824., 24296., 33768.,  5352., 14824., 24296., 33768.,  5352., 14824., 24296., 33768.,  5352., 14824., 24296., 33768.,  5488., 15216., 24944., 34672.,  5488., 15216., 24944., 34672.,  5488., 15216., 24944., 34672.,  5488., 15216., 24944., 34672.,  5624., 15608., 25592., 35576.,  5624., 15608., 25592., 35576.,  5624., 15608., 25592., 35576.,  5624., 15608., 25592., 35576.,  5760., 16000., 26240., 36480.,  5760., 16000., 26240., 36480.,  5760., 16000., 26240., 36480.,  5760., 16000., 26240., 36480.};
  const int batches = 1;
  const int m = 16;
  const int k = 16;
  const int n = 16;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}