/*
 * Copyright Codeplay Software Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use these files except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// DO NOT MODIFY BY HAND
// This file was automatically generated by generate_matmul_tests.py.
// Results calculated using Tensorflow v1.13.2.

#include <gtest/gtest.h>
#include <vector>

#include "test/matmul/fixture.h"
#include "test/types/kernel_data_types.h"
#include "test/types/to_gtest_types.h"


using DataTypeList = sycldnn::types::KernelDataTypes;
using GTestTypeList = sycldnn::types::ToGTestTypes<DataTypeList>::type;

template <typename DataType>
using MatmulBatch1Beta0TrueFalse = MatmulFixture<DataType, true, false>;
TYPED_TEST_SUITE(MatmulBatch1Beta0TrueFalse, GTestTypeList);
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M14xK14xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {19854., 20310., 16734., 17190., 17646., 18102., 18558., 19014., 15822., 16278., 13214., 13670., 14126., 14582., 20310., 20780., 17154., 17624., 18094., 18564., 19034., 19504., 16262., 16732., 13618., 14088., 14558., 15028., 16734., 17154., 17510., 17930., 18350., 18770., 19190., 19610., 16254., 16674., 13446., 13866., 14286., 14706., 17190., 17624., 17930., 18364., 18798., 19232., 19666., 20100., 16694., 17128., 13850., 14284., 14718., 15152., 17646., 18094., 18350., 18798., 19246., 19694., 20142., 20590., 17134., 17582., 14254., 14702., 15150., 15598., 18102., 18564., 18770., 19232., 19694., 20156., 20618., 21080., 17574., 18036., 14658., 15120., 15582., 16044., 18558., 19034., 19190., 19666., 20142., 20618., 21094., 21570., 18014., 18490., 15062., 15538., 16014., 16490., 19014., 19504., 19610., 20100., 20590., 21080., 21570., 22060., 18454., 18944., 15466., 15956., 16446., 16936., 15822., 16262., 16254., 16694., 17134., 17574., 18014., 18454., 18830., 19270., 15678., 16118., 16558., 16998., 16278., 16732., 16674., 17128., 17582., 18036., 18490., 18944., 19270., 19724., 16082., 16536., 16990., 17444., 13214., 13618., 13446., 13850., 14254., 14658., 15062., 15466., 15678., 16082., 16422., 16826., 17230., 17634., 13670., 14088., 13866., 14284., 14702., 15120., 15538., 15956., 16118., 16536., 16826., 17244., 17662., 18080., 14126., 14558., 14286., 14718., 15150., 15582., 16014., 16446., 16558., 16990., 17230., 17662., 18094., 18526., 14582., 15028., 14706., 15152., 15598., 16044., 16490., 16936., 16998., 17444., 17634., 18080., 18526., 18972.};
  const int batches = 1;
  const int m = 14;
  const int k = 14;
  const int n = 14;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M14xK14xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {15731., 16187., 16643., 17099., 13907., 14363., 14819., 15275., 12595., 13051., 13507., 13963., 11795., 12251., 12707., 16150., 16620., 17090., 17560., 14318., 14788., 15258., 15728., 12998., 13468., 13938., 14408., 12190., 12660., 13130., 16057., 16477., 16897., 17317., 13961., 14381., 14801., 15221., 12377., 12797., 13217., 13637., 11305., 11725., 12145., 16476., 16910., 17344., 17778., 14372., 14806., 15240., 15674., 12780., 13214., 13648., 14082., 11700., 12134., 12568., 16895., 17343., 17791., 18239., 14783., 15231., 15679., 16127., 13183., 13631., 14079., 14527., 12095., 12543., 12991., 17314., 17776., 18238., 18700., 15194., 15656., 16118., 16580., 13586., 14048., 14510., 14972., 12490., 12952., 13414., 17733., 18209., 18685., 19161., 15605., 16081., 16557., 17033., 13989., 14465., 14941., 15417., 12885., 13361., 13837., 18152., 18642., 19132., 19622., 16016., 16506., 16996., 17486., 14392., 14882., 15372., 15862., 13280., 13770., 14260., 14667., 15107., 15547., 15987., 16363., 16803., 17243., 17683., 14475., 14915., 15355., 15795., 13099., 13539., 13979., 15086., 15540., 15994., 16448., 16774., 17228., 17682., 18136., 14878., 15332., 15786., 16240., 13494., 13948., 14402., 15249., 15653., 16057., 16461., 16673., 17077., 17481., 17885., 14513., 14917., 15321., 15725., 12865., 13269., 13673., 15668., 16086., 16504., 16922., 17084., 17502., 17920., 18338., 14916., 15334., 15752., 16170., 13260., 13678., 14096., 16087., 16519., 16951., 17383., 17495., 17927., 18359., 18791., 15319., 15751., 16183., 16615., 13655., 14087., 14519., 16506., 16952., 17398., 17844., 17906., 18352., 18798., 19244., 15722., 16168., 16614., 17060., 14050., 14496., 14942.};
  const int batches = 1;
  const int m = 14;
  const int k = 14;
  const int n = 15;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M14xK14xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {43352., 44128., 44904., 45680., 46456., 47232., 48008., 48784., 49560., 50336., 51112., 51888., 52664., 53440., 54216., 54992., 44054., 44844., 45634., 46424., 47214., 48004., 48794., 49584., 50374., 51164., 51954., 52744., 53534., 54324., 55114., 55904., 42580., 43256., 43932., 44608., 45284., 45960., 46636., 47312., 47988., 48664., 49340., 50016., 50692., 51368., 52044., 52720., 43282., 43972., 44662., 45352., 46042., 46732., 47422., 48112., 48802., 49492., 50182., 50872., 51562., 52252., 52942., 53632., 43984., 44688., 45392., 46096., 46800., 47504., 48208., 48912., 49616., 50320., 51024., 51728., 52432., 53136., 53840., 54544., 44686., 45404., 46122., 46840., 47558., 48276., 48994., 49712., 50430., 51148., 51866., 52584., 53302., 54020., 54738., 55456., 45388., 46120., 46852., 47584., 48316., 49048., 49780., 50512., 51244., 51976., 52708., 53440., 54172., 54904., 55636., 56368., 46090., 46836., 47582., 48328., 49074., 49820., 50566., 51312., 52058., 52804., 53550., 54296., 55042., 55788., 56534., 57280., 46792., 47552., 48312., 49072., 49832., 50592., 51352., 52112., 52872., 53632., 54392., 55152., 55912., 56672., 57432., 58192., 47494., 48268., 49042., 49816., 50590., 51364., 52138., 52912., 53686., 54460., 55234., 56008., 56782., 57556., 58330., 59104., 48196., 48984., 49772., 50560., 51348., 52136., 52924., 53712., 54500., 55288., 56076., 56864., 57652., 58440., 59228., 60016., 48898., 49700., 50502., 51304., 52106., 52908., 53710., 54512., 55314., 56116., 56918., 57720., 58522., 59324., 60126., 60928., 49600., 50416., 51232., 52048., 52864., 53680., 54496., 55312., 56128., 56944., 57760., 58576., 59392., 60208., 61024., 61840., 50302., 51132., 51962., 52792., 53622., 54452., 55282., 56112., 56942., 57772., 58602., 59432., 60262., 61092., 61922., 62752.};
  const int batches = 1;
  const int m = 14;
  const int k = 14;
  const int n = 16;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 128.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M14xK15xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {19879., 20340., 16769., 17230., 17691., 18152., 18613., 19074., 15887., 16348., 13289., 13750., 14211., 14672., 20340., 20816., 17196., 17672., 18148., 18624., 19100., 19576., 16340., 16816., 13708., 14184., 14660., 15136., 16769., 17196., 17559., 17986., 18413., 18840., 19267., 19694., 16345., 16772., 13551., 13978., 14405., 14832., 17230., 17672., 17986., 18428., 18870., 19312., 19754., 20196., 16798., 17240., 13970., 14412., 14854., 15296., 17691., 18148., 18413., 18870., 19327., 19784., 20241., 20698., 17251., 17708., 14389., 14846., 15303., 15760., 18152., 18624., 18840., 19312., 19784., 20256., 20728., 21200., 17704., 18176., 14808., 15280., 15752., 16224., 18613., 19100., 19267., 19754., 20241., 20728., 21215., 21702., 18157., 18644., 15227., 15714., 16201., 16688., 19074., 19576., 19694., 20196., 20698., 21200., 21702., 22204., 18610., 19112., 15646., 16148., 16650., 17152., 15887., 16340., 16345., 16798., 17251., 17704., 18157., 18610., 18999., 19452., 15873., 16326., 16779., 17232., 16348., 16816., 16772., 17240., 17708., 18176., 18644., 19112., 19452., 19920., 16292., 16760., 17228., 17696., 13289., 13708., 13551., 13970., 14389., 14808., 15227., 15646., 15873., 16292., 16647., 17066., 17485., 17904., 13750., 14184., 13978., 14412., 14846., 15280., 15714., 16148., 16326., 16760., 17066., 17500., 17934., 18368., 14211., 14660., 14405., 14854., 15303., 15752., 16201., 16650., 16779., 17228., 17485., 17934., 18383., 18832., 14672., 15136., 14832., 15296., 15760., 16224., 16688., 17152., 17232., 17696., 17904., 18368., 18832., 19296.};
  const int batches = 1;
  const int m = 14;
  const int k = 15;
  const int n = 14;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M14xK15xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {15826., 16287., 16748., 17209., 14022., 14483., 14944., 15405., 12730., 13191., 13652., 14113., 11950., 12411., 12872., 16264., 16740., 17216., 17692., 14456., 14932., 15408., 15884., 13160., 13636., 14112., 14588., 12376., 12852., 13328., 16190., 16617., 17044., 17471., 14122., 14549., 14976., 15403., 12566., 12993., 13420., 13847., 11522., 11949., 12376., 16628., 17070., 17512., 17954., 14556., 14998., 15440., 15882., 12996., 13438., 13880., 14322., 11948., 12390., 12832., 17066., 17523., 17980., 18437., 14990., 15447., 15904., 16361., 13426., 13883., 14340., 14797., 12374., 12831., 13288., 17504., 17976., 18448., 18920., 15424., 15896., 16368., 16840., 13856., 14328., 14800., 15272., 12800., 13272., 13744., 17942., 18429., 18916., 19403., 15858., 16345., 16832., 17319., 14286., 14773., 15260., 15747., 13226., 13713., 14200., 18380., 18882., 19384., 19886., 16292., 16794., 17296., 17798., 14716., 15218., 15720., 16222., 13652., 14154., 14656., 14914., 15367., 15820., 16273., 16662., 17115., 17568., 18021., 14826., 15279., 15732., 16185., 13502., 13955., 14408., 15352., 15820., 16288., 16756., 17096., 17564., 18032., 18500., 15256., 15724., 16192., 16660., 13928., 14396., 14864., 15534., 15953., 16372., 16791., 17018., 17437., 17856., 18275., 14918., 15337., 15756., 16175., 13330., 13749., 14168., 15972., 16406., 16840., 17274., 17452., 17886., 18320., 18754., 15348., 15782., 16216., 16650., 13756., 14190., 14624., 16410., 16859., 17308., 17757., 17886., 18335., 18784., 19233., 15778., 16227., 16676., 17125., 14182., 14631., 15080., 16848., 17312., 17776., 18240., 18320., 18784., 19248., 19712., 16208., 16672., 17136., 17600., 14608., 15072., 15536.};
  const int batches = 1;
  const int m = 14;
  const int k = 15;
  const int n = 15;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M14xK15xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 9917., 10378., 10839., 11300., 11761., 12222., 12683., 13144., 13605., 14066., 14527., 14988., 15449., 15910., 16371., 16832., 10268., 10744., 11220., 11696., 12172., 12648., 13124., 13600., 14076., 14552., 15028., 15504., 15980., 16456., 16932., 17408.,  9531.,  9958., 10385., 10812., 11239., 11666., 12093., 12520., 12947., 13374., 13801., 14228., 14655., 15082., 15509., 15936.,  9882., 10324., 10766., 11208., 11650., 12092., 12534., 12976., 13418., 13860., 14302., 14744., 15186., 15628., 16070., 16512., 10233., 10690., 11147., 11604., 12061., 12518., 12975., 13432., 13889., 14346., 14803., 15260., 15717., 16174., 16631., 17088., 10584., 11056., 11528., 12000., 12472., 12944., 13416., 13888., 14360., 14832., 15304., 15776., 16248., 16720., 17192., 17664., 10935., 11422., 11909., 12396., 12883., 13370., 13857., 14344., 14831., 15318., 15805., 16292., 16779., 17266., 17753., 18240., 11286., 11788., 12290., 12792., 13294., 13796., 14298., 14800., 15302., 15804., 16306., 16808., 17310., 17812., 18314., 18816., 11573., 12026., 12479., 12932., 13385., 13838., 14291., 14744., 15197., 15650., 16103., 16556., 17009., 17462., 17915., 18368., 11924., 12392., 12860., 13328., 13796., 14264., 14732., 15200., 15668., 16136., 16604., 17072., 17540., 18008., 18476., 18944., 11187., 11606., 12025., 12444., 12863., 13282., 13701., 14120., 14539., 14958., 15377., 15796., 16215., 16634., 17053., 17472., 11538., 11972., 12406., 12840., 13274., 13708., 14142., 14576., 15010., 15444., 15878., 16312., 16746., 17180., 17614., 18048., 11889., 12338., 12787., 13236., 13685., 14134., 14583., 15032., 15481., 15930., 16379., 16828., 17277., 17726., 18175., 18624., 12240., 12704., 13168., 13632., 14096., 14560., 15024., 15488., 15952., 16416., 16880., 17344., 17808., 18272., 18736., 19200.};
  const int batches = 1;
  const int m = 14;
  const int k = 15;
  const int n = 16;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M14xK16xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {20240., 20720., 17168., 17648., 18128., 18608., 19088., 19568., 16400., 16880., 13840., 14320., 14800., 15280., 20720., 21216., 17616., 18112., 18608., 19104., 19600., 20096., 16880., 17376., 14288., 14784., 15280., 15776., 17168., 17616., 18000., 18448., 18896., 19344., 19792., 20240., 16912., 17360., 14160., 14608., 15056., 15504., 17648., 18112., 18448., 18912., 19376., 19840., 20304., 20768., 17392., 17856., 14608., 15072., 15536., 16000., 18128., 18608., 18896., 19376., 19856., 20336., 20816., 21296., 17872., 18352., 15056., 15536., 16016., 16496., 18608., 19104., 19344., 19840., 20336., 20832., 21328., 21824., 18352., 18848., 15504., 16000., 16496., 16992., 19088., 19600., 19792., 20304., 20816., 21328., 21840., 22352., 18832., 19344., 15952., 16464., 16976., 17488., 19568., 20096., 20240., 20768., 21296., 21824., 22352., 22880., 19312., 19840., 16400., 16928., 17456., 17984., 16400., 16880., 16912., 17392., 17872., 18352., 18832., 19312., 19728., 20208., 16656., 17136., 17616., 18096., 16880., 17376., 17360., 17856., 18352., 18848., 19344., 19840., 20208., 20704., 17104., 17600., 18096., 18592., 13840., 14288., 14160., 14608., 15056., 15504., 15952., 16400., 16656., 17104., 17488., 17936., 18384., 18832., 14320., 14784., 14608., 15072., 15536., 16000., 16464., 16928., 17136., 17600., 17936., 18400., 18864., 19328., 14800., 15280., 15056., 15536., 16016., 16496., 16976., 17456., 17616., 18096., 18384., 18864., 19344., 19824., 15280., 15776., 15504., 16000., 16496., 16992., 17488., 17984., 18096., 18592., 18832., 19328., 19824., 20320.};
  const int batches = 1;
  const int m = 14;
  const int k = 16;
  const int n = 14;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M14xK16xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {16472., 16952., 17432., 17912., 14744., 15224., 15704., 16184., 13528., 14008., 14488., 14968., 12824., 13304., 13784., 16944., 17440., 17936., 18432., 15216., 15712., 16208., 16704., 14000., 14496., 14992., 15488., 13296., 13792., 14288., 16904., 17352., 17800., 18248., 14920., 15368., 15816., 16264., 13448., 13896., 14344., 14792., 12488., 12936., 13384., 17376., 17840., 18304., 18768., 15392., 15856., 16320., 16784., 13920., 14384., 14848., 15312., 12960., 13424., 13888., 17848., 18328., 18808., 19288., 15864., 16344., 16824., 17304., 14392., 14872., 15352., 15832., 13432., 13912., 14392., 18320., 18816., 19312., 19808., 16336., 16832., 17328., 17824., 14864., 15360., 15856., 16352., 13904., 14400., 14896., 18792., 19304., 19816., 20328., 16808., 17320., 17832., 18344., 15336., 15848., 16360., 16872., 14376., 14888., 15400., 19264., 19792., 20320., 20848., 17280., 17808., 18336., 18864., 15808., 16336., 16864., 17392., 14848., 15376., 15904., 15832., 16312., 16792., 17272., 17688., 18168., 18648., 19128., 15960., 16440., 16920., 17400., 14744., 15224., 15704., 16304., 16800., 17296., 17792., 18160., 18656., 19152., 19648., 16432., 16928., 17424., 17920., 15216., 15712., 16208., 16520., 16968., 17416., 17864., 18120., 18568., 19016., 19464., 16136., 16584., 17032., 17480., 14664., 15112., 15560., 16992., 17456., 17920., 18384., 18592., 19056., 19520., 19984., 16608., 17072., 17536., 18000., 15136., 15600., 16064., 17464., 17944., 18424., 18904., 19064., 19544., 20024., 20504., 17080., 17560., 18040., 18520., 15608., 16088., 16568., 17936., 18432., 18928., 19424., 19536., 20032., 20528., 21024., 17552., 18048., 18544., 19040., 16080., 16576., 17072.};
  const int batches = 1;
  const int m = 14;
  const int k = 16;
  const int n = 15;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M14xK16xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {10848., 11328., 11808., 12288., 12768., 13248., 13728., 14208., 14688., 15168., 15648., 16128., 16608., 17088., 17568., 18048., 11248., 11744., 12240., 12736., 13232., 13728., 14224., 14720., 15216., 15712., 16208., 16704., 17200., 17696., 18192., 18688., 10560., 11008., 11456., 11904., 12352., 12800., 13248., 13696., 14144., 14592., 15040., 15488., 15936., 16384., 16832., 17280., 10960., 11424., 11888., 12352., 12816., 13280., 13744., 14208., 14672., 15136., 15600., 16064., 16528., 16992., 17456., 17920., 11360., 11840., 12320., 12800., 13280., 13760., 14240., 14720., 15200., 15680., 16160., 16640., 17120., 17600., 18080., 18560., 11760., 12256., 12752., 13248., 13744., 14240., 14736., 15232., 15728., 16224., 16720., 17216., 17712., 18208., 18704., 19200., 12160., 12672., 13184., 13696., 14208., 14720., 15232., 15744., 16256., 16768., 17280., 17792., 18304., 18816., 19328., 19840., 12560., 13088., 13616., 14144., 14672., 15200., 15728., 16256., 16784., 17312., 17840., 18368., 18896., 19424., 19952., 20480., 12896., 13376., 13856., 14336., 14816., 15296., 15776., 16256., 16736., 17216., 17696., 18176., 18656., 19136., 19616., 20096., 13296., 13792., 14288., 14784., 15280., 15776., 16272., 16768., 17264., 17760., 18256., 18752., 19248., 19744., 20240., 20736., 12608., 13056., 13504., 13952., 14400., 14848., 15296., 15744., 16192., 16640., 17088., 17536., 17984., 18432., 18880., 19328., 13008., 13472., 13936., 14400., 14864., 15328., 15792., 16256., 16720., 17184., 17648., 18112., 18576., 19040., 19504., 19968., 13408., 13888., 14368., 14848., 15328., 15808., 16288., 16768., 17248., 17728., 18208., 18688., 19168., 19648., 20128., 20608., 13808., 14304., 14800., 15296., 15792., 16288., 16784., 17280., 17776., 18272., 18768., 19264., 19760., 20256., 20752., 21248.};
  const int batches = 1;
  const int m = 14;
  const int k = 16;
  const int n = 16;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M15xK14xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {15731., 16150., 16057., 16476., 16895., 17314., 17733., 18152., 14667., 15086., 15249., 15668., 16087., 16506., 16187., 16620., 16477., 16910., 17343., 17776., 18209., 18642., 15107., 15540., 15653., 16086., 16519., 16952., 16643., 17090., 16897., 17344., 17791., 18238., 18685., 19132., 15547., 15994., 16057., 16504., 16951., 17398., 17099., 17560., 17317., 17778., 18239., 18700., 19161., 19622., 15987., 16448., 16461., 16922., 17383., 17844., 13907., 14318., 13961., 14372., 14783., 15194., 15605., 16016., 16363., 16774., 16673., 17084., 17495., 17906., 14363., 14788., 14381., 14806., 15231., 15656., 16081., 16506., 16803., 17228., 17077., 17502., 17927., 18352., 14819., 15258., 14801., 15240., 15679., 16118., 16557., 16996., 17243., 17682., 17481., 17920., 18359., 18798., 15275., 15728., 15221., 15674., 16127., 16580., 17033., 17486., 17683., 18136., 17885., 18338., 18791., 19244., 12595., 12998., 12377., 12780., 13183., 13586., 13989., 14392., 14475., 14878., 14513., 14916., 15319., 15722., 13051., 13468., 12797., 13214., 13631., 14048., 14465., 14882., 14915., 15332., 14917., 15334., 15751., 16168., 13507., 13938., 13217., 13648., 14079., 14510., 14941., 15372., 15355., 15786., 15321., 15752., 16183., 16614., 13963., 14408., 13637., 14082., 14527., 14972., 15417., 15862., 15795., 16240., 15725., 16170., 16615., 17060., 11795., 12190., 11305., 11700., 12095., 12490., 12885., 13280., 13099., 13494., 12865., 13260., 13655., 14050., 12251., 12660., 11725., 12134., 12543., 12952., 13361., 13770., 13539., 13948., 13269., 13678., 14087., 14496., 12707., 13130., 12145., 12568., 12991., 13414., 13837., 14260., 13979., 14402., 13673., 14096., 14519., 14942.};
  const int batches = 1;
  const int m = 15;
  const int k = 14;
  const int n = 14;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M15xK14xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17803., 18222., 18641., 19060., 15575., 15994., 16413., 16832., 13603., 14022., 14441., 14860., 11887., 12306., 12725., 18222., 18655., 19088., 19521., 15986., 16419., 16852., 17285., 14006., 14439., 14872., 15305., 12282., 12715., 13148., 18641., 19088., 19535., 19982., 16397., 16844., 17291., 17738., 14409., 14856., 15303., 15750., 12677., 13124., 13571., 19060., 19521., 19982., 20443., 16808., 17269., 17730., 18191., 14812., 15273., 15734., 16195., 13072., 13533., 13994., 15575., 15986., 16397., 16808., 17155., 17566., 17977., 18388., 14895., 15306., 15717., 16128., 12891., 13302., 13713., 15994., 16419., 16844., 17269., 17566., 17991., 18416., 18841., 15298., 15723., 16148., 16573., 13286., 13711., 14136., 16413., 16852., 17291., 17730., 17977., 18416., 18855., 19294., 15701., 16140., 16579., 17018., 13681., 14120., 14559., 16832., 17285., 17738., 18191., 18388., 18841., 19294., 19747., 16104., 16557., 17010., 17463., 14076., 14529., 14982., 13603., 14006., 14409., 14812., 14895., 15298., 15701., 16104., 16443., 16846., 17249., 17652., 14151., 14554., 14957., 14022., 14439., 14856., 15273., 15306., 15723., 16140., 16557., 16846., 17263., 17680., 18097., 14546., 14963., 15380., 14441., 14872., 15303., 15734., 15717., 16148., 16579., 17010., 17249., 17680., 18111., 18542., 14941., 15372., 15803., 14860., 15305., 15750., 16195., 16128., 16573., 17018., 17463., 17652., 18097., 18542., 18987., 15336., 15781., 16226., 11887., 12282., 12677., 13072., 12891., 13286., 13681., 14076., 14151., 14546., 14941., 15336., 15667., 16062., 16457., 12306., 12715., 13124., 13533., 13302., 13711., 14120., 14529., 14554., 14963., 15372., 15781., 16062., 16471., 16880., 12725., 13148., 13571., 13994., 13713., 14136., 14559., 14982., 14957., 15380., 15803., 16226., 16457., 16880., 17303.};
  const int batches = 1;
  const int m = 15;
  const int k = 14;
  const int n = 15;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M15xK14xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 9699., 10118., 10537., 10956., 11375., 11794., 12213., 12632., 13051., 13470., 13889., 14308., 14727., 15146., 15565., 15984., 10017., 10450., 10883., 11316., 11749., 12182., 12615., 13048., 13481., 13914., 14347., 14780., 15213., 15646., 16079., 16512., 10335., 10782., 11229., 11676., 12123., 12570., 13017., 13464., 13911., 14358., 14805., 15252., 15699., 16146., 16593., 17040., 10653., 11114., 11575., 12036., 12497., 12958., 13419., 13880., 14341., 14802., 15263., 15724., 16185., 16646., 17107., 17568., 10907., 11318., 11729., 12140., 12551., 12962., 13373., 13784., 14195., 14606., 15017., 15428., 15839., 16250., 16661., 17072., 11225., 11650., 12075., 12500., 12925., 13350., 13775., 14200., 14625., 15050., 15475., 15900., 16325., 16750., 17175., 17600., 11543., 11982., 12421., 12860., 13299., 13738., 14177., 14616., 15055., 15494., 15933., 16372., 16811., 17250., 17689., 18128., 11861., 12314., 12767., 13220., 13673., 14126., 14579., 15032., 15485., 15938., 16391., 16844., 17297., 17750., 18203., 18656., 12115., 12518., 12921., 13324., 13727., 14130., 14533., 14936., 15339., 15742., 16145., 16548., 16951., 17354., 17757., 18160., 12433., 12850., 13267., 13684., 14101., 14518., 14935., 15352., 15769., 16186., 16603., 17020., 17437., 17854., 18271., 18688., 12751., 13182., 13613., 14044., 14475., 14906., 15337., 15768., 16199., 16630., 17061., 17492., 17923., 18354., 18785., 19216., 13069., 13514., 13959., 14404., 14849., 15294., 15739., 16184., 16629., 17074., 17519., 17964., 18409., 18854., 19299., 19744., 13323., 13718., 14113., 14508., 14903., 15298., 15693., 16088., 16483., 16878., 17273., 17668., 18063., 18458., 18853., 19248., 13641., 14050., 14459., 14868., 15277., 15686., 16095., 16504., 16913., 17322., 17731., 18140., 18549., 18958., 19367., 19776., 13959., 14382., 14805., 15228., 15651., 16074., 16497., 16920., 17343., 17766., 18189., 18612., 19035., 19458., 19881., 20304.};
  const int batches = 1;
  const int m = 15;
  const int k = 14;
  const int n = 16;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M15xK15xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {15826., 16264., 16190., 16628., 17066., 17504., 17942., 18380., 14914., 15352., 15534., 15972., 16410., 16848., 16287., 16740., 16617., 17070., 17523., 17976., 18429., 18882., 15367., 15820., 15953., 16406., 16859., 17312., 16748., 17216., 17044., 17512., 17980., 18448., 18916., 19384., 15820., 16288., 16372., 16840., 17308., 17776., 17209., 17692., 17471., 17954., 18437., 18920., 19403., 19886., 16273., 16756., 16791., 17274., 17757., 18240., 14022., 14456., 14122., 14556., 14990., 15424., 15858., 16292., 16662., 17096., 17018., 17452., 17886., 18320., 14483., 14932., 14549., 14998., 15447., 15896., 16345., 16794., 17115., 17564., 17437., 17886., 18335., 18784., 14944., 15408., 14976., 15440., 15904., 16368., 16832., 17296., 17568., 18032., 17856., 18320., 18784., 19248., 15405., 15884., 15403., 15882., 16361., 16840., 17319., 17798., 18021., 18500., 18275., 18754., 19233., 19712., 12730., 13160., 12566., 12996., 13426., 13856., 14286., 14716., 14826., 15256., 14918., 15348., 15778., 16208., 13191., 13636., 12993., 13438., 13883., 14328., 14773., 15218., 15279., 15724., 15337., 15782., 16227., 16672., 13652., 14112., 13420., 13880., 14340., 14800., 15260., 15720., 15732., 16192., 15756., 16216., 16676., 17136., 14113., 14588., 13847., 14322., 14797., 15272., 15747., 16222., 16185., 16660., 16175., 16650., 17125., 17600., 11950., 12376., 11522., 11948., 12374., 12800., 13226., 13652., 13502., 13928., 13330., 13756., 14182., 14608., 12411., 12852., 11949., 12390., 12831., 13272., 13713., 14154., 13955., 14396., 13749., 14190., 14631., 15072., 12872., 13328., 12376., 12832., 13288., 13744., 14200., 14656., 14408., 14864., 14168., 14624., 15080., 15536.};
  const int batches = 1;
  const int m = 15;
  const int k = 15;
  const int n = 14;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M15xK15xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {18164., 18602., 19040., 19478., 16012., 16450., 16888., 17326., 14116., 14554., 14992., 15430., 12476., 12914., 13352., 18602., 19055., 19508., 19961., 16446., 16899., 17352., 17805., 14546., 14999., 15452., 15905., 12902., 13355., 13808., 19040., 19508., 19976., 20444., 16880., 17348., 17816., 18284., 14976., 15444., 15912., 16380., 13328., 13796., 14264., 19478., 19961., 20444., 20927., 17314., 17797., 18280., 18763., 15406., 15889., 16372., 16855., 13754., 14237., 14720., 16012., 16446., 16880., 17314., 17684., 18118., 18552., 18986., 15516., 15950., 16384., 16818., 13604., 14038., 14472., 16450., 16899., 17348., 17797., 18118., 18567., 19016., 19465., 15946., 16395., 16844., 17293., 14030., 14479., 14928., 16888., 17352., 17816., 18280., 18552., 19016., 19480., 19944., 16376., 16840., 17304., 17768., 14456., 14920., 15384., 17326., 17805., 18284., 18763., 18986., 19465., 19944., 20423., 16806., 17285., 17764., 18243., 14882., 15361., 15840., 14116., 14546., 14976., 15406., 15516., 15946., 16376., 16806., 17172., 17602., 18032., 18462., 14988., 15418., 15848., 14554., 14999., 15444., 15889., 15950., 16395., 16840., 17285., 17602., 18047., 18492., 18937., 15414., 15859., 16304., 14992., 15452., 15912., 16372., 16384., 16844., 17304., 17764., 18032., 18492., 18952., 19412., 15840., 16300., 16760., 15430., 15905., 16380., 16855., 16818., 17293., 17768., 18243., 18462., 18937., 19412., 19887., 16266., 16741., 17216., 12476., 12902., 13328., 13754., 13604., 14030., 14456., 14882., 14988., 15414., 15840., 16266., 16628., 17054., 17480., 12914., 13355., 13796., 14237., 14038., 14479., 14920., 15361., 15418., 15859., 16300., 16741., 17054., 17495., 17936., 13352., 13808., 14264., 14720., 14472., 14928., 15384., 15840., 15848., 16304., 16760., 17216., 17480., 17936., 18392.};
  const int batches = 1;
  const int m = 15;
  const int k = 15;
  const int n = 15;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M15xK15xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {10326., 10764., 11202., 11640., 12078., 12516., 12954., 13392., 13830., 14268., 14706., 15144., 15582., 16020., 16458., 16896., 10677., 11130., 11583., 12036., 12489., 12942., 13395., 13848., 14301., 14754., 15207., 15660., 16113., 16566., 17019., 17472., 11028., 11496., 11964., 12432., 12900., 13368., 13836., 14304., 14772., 15240., 15708., 16176., 16644., 17112., 17580., 18048., 11379., 11862., 12345., 12828., 13311., 13794., 14277., 14760., 15243., 15726., 16209., 16692., 17175., 17658., 18141., 18624., 11666., 12100., 12534., 12968., 13402., 13836., 14270., 14704., 15138., 15572., 16006., 16440., 16874., 17308., 17742., 18176., 12017., 12466., 12915., 13364., 13813., 14262., 14711., 15160., 15609., 16058., 16507., 16956., 17405., 17854., 18303., 18752., 12368., 12832., 13296., 13760., 14224., 14688., 15152., 15616., 16080., 16544., 17008., 17472., 17936., 18400., 18864., 19328., 12719., 13198., 13677., 14156., 14635., 15114., 15593., 16072., 16551., 17030., 17509., 17988., 18467., 18946., 19425., 19904., 13006., 13436., 13866., 14296., 14726., 15156., 15586., 16016., 16446., 16876., 17306., 17736., 18166., 18596., 19026., 19456., 13357., 13802., 14247., 14692., 15137., 15582., 16027., 16472., 16917., 17362., 17807., 18252., 18697., 19142., 19587., 20032., 13708., 14168., 14628., 15088., 15548., 16008., 16468., 16928., 17388., 17848., 18308., 18768., 19228., 19688., 20148., 20608., 14059., 14534., 15009., 15484., 15959., 16434., 16909., 17384., 17859., 18334., 18809., 19284., 19759., 20234., 20709., 21184., 14346., 14772., 15198., 15624., 16050., 16476., 16902., 17328., 17754., 18180., 18606., 19032., 19458., 19884., 20310., 20736., 14697., 15138., 15579., 16020., 16461., 16902., 17343., 17784., 18225., 18666., 19107., 19548., 19989., 20430., 20871., 21312., 15048., 15504., 15960., 16416., 16872., 17328., 17784., 18240., 18696., 19152., 19608., 20064., 20520., 20976., 21432., 21888.};
  const int batches = 1;
  const int m = 15;
  const int k = 15;
  const int n = 16;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M15xK16xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {16472., 16944., 16904., 17376., 17848., 18320., 18792., 19264., 15832., 16304., 16520., 16992., 17464., 17936., 16952., 17440., 17352., 17840., 18328., 18816., 19304., 19792., 16312., 16800., 16968., 17456., 17944., 18432., 17432., 17936., 17800., 18304., 18808., 19312., 19816., 20320., 16792., 17296., 17416., 17920., 18424., 18928., 17912., 18432., 18248., 18768., 19288., 19808., 20328., 20848., 17272., 17792., 17864., 18384., 18904., 19424., 14744., 15216., 14920., 15392., 15864., 16336., 16808., 17280., 17688., 18160., 18120., 18592., 19064., 19536., 15224., 15712., 15368., 15856., 16344., 16832., 17320., 17808., 18168., 18656., 18568., 19056., 19544., 20032., 15704., 16208., 15816., 16320., 16824., 17328., 17832., 18336., 18648., 19152., 19016., 19520., 20024., 20528., 16184., 16704., 16264., 16784., 17304., 17824., 18344., 18864., 19128., 19648., 19464., 19984., 20504., 21024., 13528., 14000., 13448., 13920., 14392., 14864., 15336., 15808., 15960., 16432., 16136., 16608., 17080., 17552., 14008., 14496., 13896., 14384., 14872., 15360., 15848., 16336., 16440., 16928., 16584., 17072., 17560., 18048., 14488., 14992., 14344., 14848., 15352., 15856., 16360., 16864., 16920., 17424., 17032., 17536., 18040., 18544., 14968., 15488., 14792., 15312., 15832., 16352., 16872., 17392., 17400., 17920., 17480., 18000., 18520., 19040., 12824., 13296., 12488., 12960., 13432., 13904., 14376., 14848., 14744., 15216., 14664., 15136., 15608., 16080., 13304., 13792., 12936., 13424., 13912., 14400., 14888., 15376., 15224., 15712., 15112., 15600., 16088., 16576., 13784., 14288., 13384., 13888., 14392., 14896., 15400., 15904., 15704., 16208., 15560., 16064., 16568., 17072.};
  const int batches = 1;
  const int m = 15;
  const int k = 16;
  const int n = 14;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M15xK16xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {19320., 19792., 20264., 20736., 17304., 17776., 18248., 18720., 15544., 16016., 16488., 16960., 14040., 14512., 14984., 19792., 20280., 20768., 21256., 17776., 18264., 18752., 19240., 16016., 16504., 16992., 17480., 14512., 15000., 15488., 20264., 20768., 21272., 21776., 18248., 18752., 19256., 19760., 16488., 16992., 17496., 18000., 14984., 15488., 15992., 20736., 21256., 21776., 22296., 18720., 19240., 19760., 20280., 16960., 17480., 18000., 18520., 15456., 15976., 16496., 17304., 17776., 18248., 18720., 19128., 19600., 20072., 20544., 17112., 17584., 18056., 18528., 15352., 15824., 16296., 17776., 18264., 18752., 19240., 19600., 20088., 20576., 21064., 17584., 18072., 18560., 19048., 15824., 16312., 16800., 18248., 18752., 19256., 19760., 20072., 20576., 21080., 21584., 18056., 18560., 19064., 19568., 16296., 16800., 17304., 18720., 19240., 19760., 20280., 20544., 21064., 21584., 22104., 18528., 19048., 19568., 20088., 16768., 17288., 17808., 15544., 16016., 16488., 16960., 17112., 17584., 18056., 18528., 18936., 19408., 19880., 20352., 16920., 17392., 17864., 16016., 16504., 16992., 17480., 17584., 18072., 18560., 19048., 19408., 19896., 20384., 20872., 17392., 17880., 18368., 16488., 16992., 17496., 18000., 18056., 18560., 19064., 19568., 19880., 20384., 20888., 21392., 17864., 18368., 18872., 16960., 17480., 18000., 18520., 18528., 19048., 19568., 20088., 20352., 20872., 21392., 21912., 18336., 18856., 19376., 14040., 14512., 14984., 15456., 15352., 15824., 16296., 16768., 16920., 17392., 17864., 18336., 18744., 19216., 19688., 14512., 15000., 15488., 15976., 15824., 16312., 16800., 17288., 17392., 17880., 18368., 18856., 19216., 19704., 20192., 14984., 15488., 15992., 16496., 16296., 16800., 17304., 17808., 17864., 18368., 18872., 19376., 19688., 20192., 20696.};
  const int batches = 1;
  const int m = 15;
  const int k = 16;
  const int n = 15;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M15xK16xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {11992., 12464., 12936., 13408., 13880., 14352., 14824., 15296., 15768., 16240., 16712., 17184., 17656., 18128., 18600., 19072., 12392., 12880., 13368., 13856., 14344., 14832., 15320., 15808., 16296., 16784., 17272., 17760., 18248., 18736., 19224., 19712., 12792., 13296., 13800., 14304., 14808., 15312., 15816., 16320., 16824., 17328., 17832., 18336., 18840., 19344., 19848., 20352., 13192., 13712., 14232., 14752., 15272., 15792., 16312., 16832., 17352., 17872., 18392., 18912., 19432., 19952., 20472., 20992., 13528., 14000., 14472., 14944., 15416., 15888., 16360., 16832., 17304., 17776., 18248., 18720., 19192., 19664., 20136., 20608., 13928., 14416., 14904., 15392., 15880., 16368., 16856., 17344., 17832., 18320., 18808., 19296., 19784., 20272., 20760., 21248., 14328., 14832., 15336., 15840., 16344., 16848., 17352., 17856., 18360., 18864., 19368., 19872., 20376., 20880., 21384., 21888., 14728., 15248., 15768., 16288., 16808., 17328., 17848., 18368., 18888., 19408., 19928., 20448., 20968., 21488., 22008., 22528., 15064., 15536., 16008., 16480., 16952., 17424., 17896., 18368., 18840., 19312., 19784., 20256., 20728., 21200., 21672., 22144., 15464., 15952., 16440., 16928., 17416., 17904., 18392., 18880., 19368., 19856., 20344., 20832., 21320., 21808., 22296., 22784., 15864., 16368., 16872., 17376., 17880., 18384., 18888., 19392., 19896., 20400., 20904., 21408., 21912., 22416., 22920., 23424., 16264., 16784., 17304., 17824., 18344., 18864., 19384., 19904., 20424., 20944., 21464., 21984., 22504., 23024., 23544., 24064., 16600., 17072., 17544., 18016., 18488., 18960., 19432., 19904., 20376., 20848., 21320., 21792., 22264., 22736., 23208., 23680., 17000., 17488., 17976., 18464., 18952., 19440., 19928., 20416., 20904., 21392., 21880., 22368., 22856., 23344., 23832., 24320., 17400., 17904., 18408., 18912., 19416., 19920., 20424., 20928., 21432., 21936., 22440., 22944., 23448., 23952., 24456., 24960.};
  const int batches = 1;
  const int m = 15;
  const int k = 16;
  const int n = 16;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M16xK14xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {43352., 44054., 42580., 43282., 43984., 44686., 45388., 46090., 46792., 47494., 48196., 48898., 49600., 50302., 44128., 44844., 43256., 43972., 44688., 45404., 46120., 46836., 47552., 48268., 48984., 49700., 50416., 51132., 44904., 45634., 43932., 44662., 45392., 46122., 46852., 47582., 48312., 49042., 49772., 50502., 51232., 51962., 45680., 46424., 44608., 45352., 46096., 46840., 47584., 48328., 49072., 49816., 50560., 51304., 52048., 52792., 46456., 47214., 45284., 46042., 46800., 47558., 48316., 49074., 49832., 50590., 51348., 52106., 52864., 53622., 47232., 48004., 45960., 46732., 47504., 48276., 49048., 49820., 50592., 51364., 52136., 52908., 53680., 54452., 48008., 48794., 46636., 47422., 48208., 48994., 49780., 50566., 51352., 52138., 52924., 53710., 54496., 55282., 48784., 49584., 47312., 48112., 48912., 49712., 50512., 51312., 52112., 52912., 53712., 54512., 55312., 56112., 49560., 50374., 47988., 48802., 49616., 50430., 51244., 52058., 52872., 53686., 54500., 55314., 56128., 56942., 50336., 51164., 48664., 49492., 50320., 51148., 51976., 52804., 53632., 54460., 55288., 56116., 56944., 57772., 51112., 51954., 49340., 50182., 51024., 51866., 52708., 53550., 54392., 55234., 56076., 56918., 57760., 58602., 51888., 52744., 50016., 50872., 51728., 52584., 53440., 54296., 55152., 56008., 56864., 57720., 58576., 59432., 52664., 53534., 50692., 51562., 52432., 53302., 54172., 55042., 55912., 56782., 57652., 58522., 59392., 60262., 53440., 54324., 51368., 52252., 53136., 54020., 54904., 55788., 56672., 57556., 58440., 59324., 60208., 61092., 54216., 55114., 52044., 52942., 53840., 54738., 55636., 56534., 57432., 58330., 59228., 60126., 61024., 61922., 54992., 55904., 52720., 53632., 54544., 55456., 56368., 57280., 58192., 59104., 60016., 60928., 61840., 62752.};
  const int batches = 1;
  const int m = 16;
  const int k = 14;
  const int n = 14;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 128.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M16xK14xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 9699., 10017., 10335., 10653., 10907., 11225., 11543., 11861., 12115., 12433., 12751., 13069., 13323., 13641., 13959., 10118., 10450., 10782., 11114., 11318., 11650., 11982., 12314., 12518., 12850., 13182., 13514., 13718., 14050., 14382., 10537., 10883., 11229., 11575., 11729., 12075., 12421., 12767., 12921., 13267., 13613., 13959., 14113., 14459., 14805., 10956., 11316., 11676., 12036., 12140., 12500., 12860., 13220., 13324., 13684., 14044., 14404., 14508., 14868., 15228., 11375., 11749., 12123., 12497., 12551., 12925., 13299., 13673., 13727., 14101., 14475., 14849., 14903., 15277., 15651., 11794., 12182., 12570., 12958., 12962., 13350., 13738., 14126., 14130., 14518., 14906., 15294., 15298., 15686., 16074., 12213., 12615., 13017., 13419., 13373., 13775., 14177., 14579., 14533., 14935., 15337., 15739., 15693., 16095., 16497., 12632., 13048., 13464., 13880., 13784., 14200., 14616., 15032., 14936., 15352., 15768., 16184., 16088., 16504., 16920., 13051., 13481., 13911., 14341., 14195., 14625., 15055., 15485., 15339., 15769., 16199., 16629., 16483., 16913., 17343., 13470., 13914., 14358., 14802., 14606., 15050., 15494., 15938., 15742., 16186., 16630., 17074., 16878., 17322., 17766., 13889., 14347., 14805., 15263., 15017., 15475., 15933., 16391., 16145., 16603., 17061., 17519., 17273., 17731., 18189., 14308., 14780., 15252., 15724., 15428., 15900., 16372., 16844., 16548., 17020., 17492., 17964., 17668., 18140., 18612., 14727., 15213., 15699., 16185., 15839., 16325., 16811., 17297., 16951., 17437., 17923., 18409., 18063., 18549., 19035., 15146., 15646., 16146., 16646., 16250., 16750., 17250., 17750., 17354., 17854., 18354., 18854., 18458., 18958., 19458., 15565., 16079., 16593., 17107., 16661., 17175., 17689., 18203., 17757., 18271., 18785., 19299., 18853., 19367., 19881., 15984., 16512., 17040., 17568., 17072., 17600., 18128., 18656., 18160., 18688., 19216., 19744., 19248., 19776., 20304.};
  const int batches = 1;
  const int m = 16;
  const int k = 14;
  const int n = 15;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M16xK14xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {11630., 11948., 12266., 12584., 12902., 13220., 13538., 13856., 14174., 14492., 14810., 15128., 15446., 15764., 16082., 16400., 11948., 12280., 12612., 12944., 13276., 13608., 13940., 14272., 14604., 14936., 15268., 15600., 15932., 16264., 16596., 16928., 12266., 12612., 12958., 13304., 13650., 13996., 14342., 14688., 15034., 15380., 15726., 16072., 16418., 16764., 17110., 17456., 12584., 12944., 13304., 13664., 14024., 14384., 14744., 15104., 15464., 15824., 16184., 16544., 16904., 17264., 17624., 17984., 12902., 13276., 13650., 14024., 14398., 14772., 15146., 15520., 15894., 16268., 16642., 17016., 17390., 17764., 18138., 18512., 13220., 13608., 13996., 14384., 14772., 15160., 15548., 15936., 16324., 16712., 17100., 17488., 17876., 18264., 18652., 19040., 13538., 13940., 14342., 14744., 15146., 15548., 15950., 16352., 16754., 17156., 17558., 17960., 18362., 18764., 19166., 19568., 13856., 14272., 14688., 15104., 15520., 15936., 16352., 16768., 17184., 17600., 18016., 18432., 18848., 19264., 19680., 20096., 14174., 14604., 15034., 15464., 15894., 16324., 16754., 17184., 17614., 18044., 18474., 18904., 19334., 19764., 20194., 20624., 14492., 14936., 15380., 15824., 16268., 16712., 17156., 17600., 18044., 18488., 18932., 19376., 19820., 20264., 20708., 21152., 14810., 15268., 15726., 16184., 16642., 17100., 17558., 18016., 18474., 18932., 19390., 19848., 20306., 20764., 21222., 21680., 15128., 15600., 16072., 16544., 17016., 17488., 17960., 18432., 18904., 19376., 19848., 20320., 20792., 21264., 21736., 22208., 15446., 15932., 16418., 16904., 17390., 17876., 18362., 18848., 19334., 19820., 20306., 20792., 21278., 21764., 22250., 22736., 15764., 16264., 16764., 17264., 17764., 18264., 18764., 19264., 19764., 20264., 20764., 21264., 21764., 22264., 22764., 23264., 16082., 16596., 17110., 17624., 18138., 18652., 19166., 19680., 20194., 20708., 21222., 21736., 22250., 22764., 23278., 23792., 16400., 16928., 17456., 17984., 18512., 19040., 19568., 20096., 20624., 21152., 21680., 22208., 22736., 23264., 23792., 24320.};
  const int batches = 1;
  const int m = 16;
  const int k = 14;
  const int n = 16;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M16xK15xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = { 9917., 10268.,  9531.,  9882., 10233., 10584., 10935., 11286., 11573., 11924., 11187., 11538., 11889., 12240., 10378., 10744.,  9958., 10324., 10690., 11056., 11422., 11788., 12026., 12392., 11606., 11972., 12338., 12704., 10839., 11220., 10385., 10766., 11147., 11528., 11909., 12290., 12479., 12860., 12025., 12406., 12787., 13168., 11300., 11696., 10812., 11208., 11604., 12000., 12396., 12792., 12932., 13328., 12444., 12840., 13236., 13632., 11761., 12172., 11239., 11650., 12061., 12472., 12883., 13294., 13385., 13796., 12863., 13274., 13685., 14096., 12222., 12648., 11666., 12092., 12518., 12944., 13370., 13796., 13838., 14264., 13282., 13708., 14134., 14560., 12683., 13124., 12093., 12534., 12975., 13416., 13857., 14298., 14291., 14732., 13701., 14142., 14583., 15024., 13144., 13600., 12520., 12976., 13432., 13888., 14344., 14800., 14744., 15200., 14120., 14576., 15032., 15488., 13605., 14076., 12947., 13418., 13889., 14360., 14831., 15302., 15197., 15668., 14539., 15010., 15481., 15952., 14066., 14552., 13374., 13860., 14346., 14832., 15318., 15804., 15650., 16136., 14958., 15444., 15930., 16416., 14527., 15028., 13801., 14302., 14803., 15304., 15805., 16306., 16103., 16604., 15377., 15878., 16379., 16880., 14988., 15504., 14228., 14744., 15260., 15776., 16292., 16808., 16556., 17072., 15796., 16312., 16828., 17344., 15449., 15980., 14655., 15186., 15717., 16248., 16779., 17310., 17009., 17540., 16215., 16746., 17277., 17808., 15910., 16456., 15082., 15628., 16174., 16720., 17266., 17812., 17462., 18008., 16634., 17180., 17726., 18272., 16371., 16932., 15509., 16070., 16631., 17192., 17753., 18314., 17915., 18476., 17053., 17614., 18175., 18736., 16832., 17408., 15936., 16512., 17088., 17664., 18240., 18816., 18368., 18944., 17472., 18048., 18624., 19200.};
  const int batches = 1;
  const int m = 16;
  const int k = 15;
  const int n = 14;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M16xK15xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {10326., 10677., 11028., 11379., 11666., 12017., 12368., 12719., 13006., 13357., 13708., 14059., 14346., 14697., 15048., 10764., 11130., 11496., 11862., 12100., 12466., 12832., 13198., 13436., 13802., 14168., 14534., 14772., 15138., 15504., 11202., 11583., 11964., 12345., 12534., 12915., 13296., 13677., 13866., 14247., 14628., 15009., 15198., 15579., 15960., 11640., 12036., 12432., 12828., 12968., 13364., 13760., 14156., 14296., 14692., 15088., 15484., 15624., 16020., 16416., 12078., 12489., 12900., 13311., 13402., 13813., 14224., 14635., 14726., 15137., 15548., 15959., 16050., 16461., 16872., 12516., 12942., 13368., 13794., 13836., 14262., 14688., 15114., 15156., 15582., 16008., 16434., 16476., 16902., 17328., 12954., 13395., 13836., 14277., 14270., 14711., 15152., 15593., 15586., 16027., 16468., 16909., 16902., 17343., 17784., 13392., 13848., 14304., 14760., 14704., 15160., 15616., 16072., 16016., 16472., 16928., 17384., 17328., 17784., 18240., 13830., 14301., 14772., 15243., 15138., 15609., 16080., 16551., 16446., 16917., 17388., 17859., 17754., 18225., 18696., 14268., 14754., 15240., 15726., 15572., 16058., 16544., 17030., 16876., 17362., 17848., 18334., 18180., 18666., 19152., 14706., 15207., 15708., 16209., 16006., 16507., 17008., 17509., 17306., 17807., 18308., 18809., 18606., 19107., 19608., 15144., 15660., 16176., 16692., 16440., 16956., 17472., 17988., 17736., 18252., 18768., 19284., 19032., 19548., 20064., 15582., 16113., 16644., 17175., 16874., 17405., 17936., 18467., 18166., 18697., 19228., 19759., 19458., 19989., 20520., 16020., 16566., 17112., 17658., 17308., 17854., 18400., 18946., 18596., 19142., 19688., 20234., 19884., 20430., 20976., 16458., 17019., 17580., 18141., 17742., 18303., 18864., 19425., 19026., 19587., 20148., 20709., 20310., 20871., 21432., 16896., 17472., 18048., 18624., 18176., 18752., 19328., 19904., 19456., 20032., 20608., 21184., 20736., 21312., 21888.};
  const int batches = 1;
  const int m = 16;
  const int k = 15;
  const int n = 15;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M16xK15xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {12719., 13070., 13421., 13772., 14123., 14474., 14825., 15176., 15527., 15878., 16229., 16580., 16931., 17282., 17633., 17984., 13070., 13436., 13802., 14168., 14534., 14900., 15266., 15632., 15998., 16364., 16730., 17096., 17462., 17828., 18194., 18560., 13421., 13802., 14183., 14564., 14945., 15326., 15707., 16088., 16469., 16850., 17231., 17612., 17993., 18374., 18755., 19136., 13772., 14168., 14564., 14960., 15356., 15752., 16148., 16544., 16940., 17336., 17732., 18128., 18524., 18920., 19316., 19712., 14123., 14534., 14945., 15356., 15767., 16178., 16589., 17000., 17411., 17822., 18233., 18644., 19055., 19466., 19877., 20288., 14474., 14900., 15326., 15752., 16178., 16604., 17030., 17456., 17882., 18308., 18734., 19160., 19586., 20012., 20438., 20864., 14825., 15266., 15707., 16148., 16589., 17030., 17471., 17912., 18353., 18794., 19235., 19676., 20117., 20558., 20999., 21440., 15176., 15632., 16088., 16544., 17000., 17456., 17912., 18368., 18824., 19280., 19736., 20192., 20648., 21104., 21560., 22016., 15527., 15998., 16469., 16940., 17411., 17882., 18353., 18824., 19295., 19766., 20237., 20708., 21179., 21650., 22121., 22592., 15878., 16364., 16850., 17336., 17822., 18308., 18794., 19280., 19766., 20252., 20738., 21224., 21710., 22196., 22682., 23168., 16229., 16730., 17231., 17732., 18233., 18734., 19235., 19736., 20237., 20738., 21239., 21740., 22241., 22742., 23243., 23744., 16580., 17096., 17612., 18128., 18644., 19160., 19676., 20192., 20708., 21224., 21740., 22256., 22772., 23288., 23804., 24320., 16931., 17462., 17993., 18524., 19055., 19586., 20117., 20648., 21179., 21710., 22241., 22772., 23303., 23834., 24365., 24896., 17282., 17828., 18374., 18920., 19466., 20012., 20558., 21104., 21650., 22196., 22742., 23288., 23834., 24380., 24926., 25472., 17633., 18194., 18755., 19316., 19877., 20438., 20999., 21560., 22121., 22682., 23243., 23804., 24365., 24926., 25487., 26048., 17984., 18560., 19136., 19712., 20288., 20864., 21440., 22016., 22592., 23168., 23744., 24320., 24896., 25472., 26048., 26624.};
  const int batches = 1;
  const int m = 16;
  const int k = 15;
  const int n = 16;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M16xK16xN14) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {10848., 11248., 10560., 10960., 11360., 11760., 12160., 12560., 12896., 13296., 12608., 13008., 13408., 13808., 11328., 11744., 11008., 11424., 11840., 12256., 12672., 13088., 13376., 13792., 13056., 13472., 13888., 14304., 11808., 12240., 11456., 11888., 12320., 12752., 13184., 13616., 13856., 14288., 13504., 13936., 14368., 14800., 12288., 12736., 11904., 12352., 12800., 13248., 13696., 14144., 14336., 14784., 13952., 14400., 14848., 15296., 12768., 13232., 12352., 12816., 13280., 13744., 14208., 14672., 14816., 15280., 14400., 14864., 15328., 15792., 13248., 13728., 12800., 13280., 13760., 14240., 14720., 15200., 15296., 15776., 14848., 15328., 15808., 16288., 13728., 14224., 13248., 13744., 14240., 14736., 15232., 15728., 15776., 16272., 15296., 15792., 16288., 16784., 14208., 14720., 13696., 14208., 14720., 15232., 15744., 16256., 16256., 16768., 15744., 16256., 16768., 17280., 14688., 15216., 14144., 14672., 15200., 15728., 16256., 16784., 16736., 17264., 16192., 16720., 17248., 17776., 15168., 15712., 14592., 15136., 15680., 16224., 16768., 17312., 17216., 17760., 16640., 17184., 17728., 18272., 15648., 16208., 15040., 15600., 16160., 16720., 17280., 17840., 17696., 18256., 17088., 17648., 18208., 18768., 16128., 16704., 15488., 16064., 16640., 17216., 17792., 18368., 18176., 18752., 17536., 18112., 18688., 19264., 16608., 17200., 15936., 16528., 17120., 17712., 18304., 18896., 18656., 19248., 17984., 18576., 19168., 19760., 17088., 17696., 16384., 16992., 17600., 18208., 18816., 19424., 19136., 19744., 18432., 19040., 19648., 20256., 17568., 18192., 16832., 17456., 18080., 18704., 19328., 19952., 19616., 20240., 18880., 19504., 20128., 20752., 18048., 18688., 17280., 17920., 18560., 19200., 19840., 20480., 20096., 20736., 19328., 19968., 20608., 21248.};
  const int batches = 1;
  const int m = 16;
  const int k = 16;
  const int n = 14;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M16xK16xN15) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {11992., 12392., 12792., 13192., 13528., 13928., 14328., 14728., 15064., 15464., 15864., 16264., 16600., 17000., 17400., 12464., 12880., 13296., 13712., 14000., 14416., 14832., 15248., 15536., 15952., 16368., 16784., 17072., 17488., 17904., 12936., 13368., 13800., 14232., 14472., 14904., 15336., 15768., 16008., 16440., 16872., 17304., 17544., 17976., 18408., 13408., 13856., 14304., 14752., 14944., 15392., 15840., 16288., 16480., 16928., 17376., 17824., 18016., 18464., 18912., 13880., 14344., 14808., 15272., 15416., 15880., 16344., 16808., 16952., 17416., 17880., 18344., 18488., 18952., 19416., 14352., 14832., 15312., 15792., 15888., 16368., 16848., 17328., 17424., 17904., 18384., 18864., 18960., 19440., 19920., 14824., 15320., 15816., 16312., 16360., 16856., 17352., 17848., 17896., 18392., 18888., 19384., 19432., 19928., 20424., 15296., 15808., 16320., 16832., 16832., 17344., 17856., 18368., 18368., 18880., 19392., 19904., 19904., 20416., 20928., 15768., 16296., 16824., 17352., 17304., 17832., 18360., 18888., 18840., 19368., 19896., 20424., 20376., 20904., 21432., 16240., 16784., 17328., 17872., 17776., 18320., 18864., 19408., 19312., 19856., 20400., 20944., 20848., 21392., 21936., 16712., 17272., 17832., 18392., 18248., 18808., 19368., 19928., 19784., 20344., 20904., 21464., 21320., 21880., 22440., 17184., 17760., 18336., 18912., 18720., 19296., 19872., 20448., 20256., 20832., 21408., 21984., 21792., 22368., 22944., 17656., 18248., 18840., 19432., 19192., 19784., 20376., 20968., 20728., 21320., 21912., 22504., 22264., 22856., 23448., 18128., 18736., 19344., 19952., 19664., 20272., 20880., 21488., 21200., 21808., 22416., 23024., 22736., 23344., 23952., 18600., 19224., 19848., 20472., 20136., 20760., 21384., 22008., 21672., 22296., 22920., 23544., 23208., 23832., 24456., 19072., 19712., 20352., 20992., 20608., 21248., 21888., 22528., 22144., 22784., 23424., 24064., 23680., 24320., 24960.};
  const int batches = 1;
  const int m = 16;
  const int k = 16;
  const int n = 15;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}
TYPED_TEST(MatmulBatch1Beta0TrueFalse, M16xK16xN16) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {15120., 15520., 15920., 16320., 16720., 17120., 17520., 17920., 18320., 18720., 19120., 19520., 19920., 20320., 20720., 21120., 15520., 15936., 16352., 16768., 17184., 17600., 18016., 18432., 18848., 19264., 19680., 20096., 20512., 20928., 21344., 21760., 15920., 16352., 16784., 17216., 17648., 18080., 18512., 18944., 19376., 19808., 20240., 20672., 21104., 21536., 21968., 22400., 16320., 16768., 17216., 17664., 18112., 18560., 19008., 19456., 19904., 20352., 20800., 21248., 21696., 22144., 22592., 23040., 16720., 17184., 17648., 18112., 18576., 19040., 19504., 19968., 20432., 20896., 21360., 21824., 22288., 22752., 23216., 23680., 17120., 17600., 18080., 18560., 19040., 19520., 20000., 20480., 20960., 21440., 21920., 22400., 22880., 23360., 23840., 24320., 17520., 18016., 18512., 19008., 19504., 20000., 20496., 20992., 21488., 21984., 22480., 22976., 23472., 23968., 24464., 24960., 17920., 18432., 18944., 19456., 19968., 20480., 20992., 21504., 22016., 22528., 23040., 23552., 24064., 24576., 25088., 25600., 18320., 18848., 19376., 19904., 20432., 20960., 21488., 22016., 22544., 23072., 23600., 24128., 24656., 25184., 25712., 26240., 18720., 19264., 19808., 20352., 20896., 21440., 21984., 22528., 23072., 23616., 24160., 24704., 25248., 25792., 26336., 26880., 19120., 19680., 20240., 20800., 21360., 21920., 22480., 23040., 23600., 24160., 24720., 25280., 25840., 26400., 26960., 27520., 19520., 20096., 20672., 21248., 21824., 22400., 22976., 23552., 24128., 24704., 25280., 25856., 26432., 27008., 27584., 28160., 19920., 20512., 21104., 21696., 22288., 22880., 23472., 24064., 24656., 25248., 25840., 26432., 27024., 27616., 28208., 28800., 20320., 20928., 21536., 22144., 22752., 23360., 23968., 24576., 25184., 25792., 26400., 27008., 27616., 28224., 28832., 29440., 20720., 21344., 21968., 22592., 23216., 23840., 24464., 25088., 25712., 26336., 26960., 27584., 28208., 28832., 29456., 30080., 21120., 21760., 22400., 23040., 23680., 24320., 24960., 25600., 26240., 26880., 27520., 28160., 28800., 29440., 30080., 30720.};
  const int batches = 1;
  const int m = 16;
  const int k = 16;
  const int n = 16;
  const auto beta = static_cast<DataType>(0);
  const DataType max_input_val = 64.0;
  this->run(exp_out, batches, m, k, n, beta, 0, 0, 0, max_input_val);
}